customer

lineitem

orders

part

partsupp

region

supplier

customer[['MKTSEGMENT']]

lineitem[['SHIPDATE']]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

orders[['O_ORDERKEY']]

orders[['TOTALPRICE']]

part[['CONTAINER']]

part[['TYPE']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'].str.startswith('g'))]

region[(region['R_NAME'] != 'AFR')]

region[(region['R_NAME'] == 'AME')]

region[(region['R_REGIONKEY'] != 2)]

region[(region['R_REGIONKEY'] >= 3)]

region[['R_NAME']]

supplier[(supplier['S_PHONE'] == '32-')]

supplier[['S_PHONE']]

customer[['C_PHONE', 'C_CUSTKEY']]

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY']]

nation[['N_NATIONKEY', 'N_COMMENT']]

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 353757.73126568645)]

part.groupby(by=['BRAND']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] == 'WRAP')]

part[['BRAND', 'SIZE']]

part[['SIZE', 'RETAILPRICE']]

partsupp.groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'AVAILQTY']]

region.groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'E')]

region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'E')]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'A')]

region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] != 3)]

region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'].str.startswith('u'))]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_COMMENT']]

supplier[['S_NAME', 'S_SUPPKEY']]

supplier[['S_PHONE', 'S_ACCTBAL']]

customer[['C_ACCTBAL', 'C_COMMENT', 'C_PHONE']]

lineitem[['LINENUMBER', 'SHIPMODE', 'EXTENDEDPRICE']]

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

orders[(orders['O_ORDERKEY'] > 680) | (orders['O_ORDERKEY'] == 53) | (orders['ORDERDATE'] != '1998-07-21')]

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT']]

part.groupby(by=['PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['P_PARTKEY'] > 63) & (part['TYPE'] != 'L') | (part['MFGR'] != 'Manufacturer#3')]

part[['P_PARTKEY', 'MFGR', 'PT_COMMENT']]

part[['RETAILPRICE', 'P_NAME', 'MFGR']]

part[['SIZE', 'CONTAINER', 'RETAILPRICE']]

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']]

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] == 3)]

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 1)]

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'h')]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

supplier.groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_NAME', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE']]

customer[(customer['C_COMMENT'] != 'o')][['C_NAME']]

customer[(customer['MKTSEGMENT'] == 'BUILDING')][['MKTSEGMENT']]

lineitem.groupby(by=['SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE']).agg('count')

lineitem[['COMMITDATE', 'RETURNFLAG', 'DISCOUNT', 'QUANTITY']]

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 21) | (nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] < 3)]

orders.groupby(by=['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'bis') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) | (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'] == 'MED')]

part[['BRAND', 'CONTAINER', 'P_PARTKEY', 'MFGR']]

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR', 'BRAND', 'SIZE']]

part[['SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME']]

partsupp.merge(part[(part['TYPE'] != 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'i') | (supplier['S_ACCTBAL'] >= 7409.129762488022) | (supplier['S_SUPPKEY'] == 194) | (supplier['S_COMMENT'] == 'd')]

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']]

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']]

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 160468)][['COMMITDATE', 'DISCOUNT']]

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['O_COMMENT'].str.startswith(' '))][['CLERK', 'ORDERSTATUS']]

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#23') | (part['PT_COMMENT'].str.startswith('p')) | (part['SIZE'] > 6) & (part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] > 1097.477342711716)]

part[(part['P_PARTKEY'] > 83)][['RETAILPRICE', 'CONTAINER']]

part[(part['RETAILPRICE'] >= 973.137746682846) | (part['TYPE'].str.startswith('M')) & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2'])) | (part['P_PARTKEY'] != 155)]

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['SIZE']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp.groupby(by=['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8985)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 677) & (partsupp['AVAILQTY'] >= 7891) & (partsupp['AVAILQTY'] != 8919) | (partsupp['PS_PARTKEY'] != 2) | (partsupp['PS_PARTKEY'] < 7)]

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] > 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 3)].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == -859.1605599979139)].groupby(by=['S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')][['S_PHONE', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] != 18)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']]

customer.groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 9066.805125417588)][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']]

customer[['C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

lineitem.groupby(by=['SHIPMODE', 'L_ORDERKEY', 'DISCOUNT', 'SHIPDATE', 'EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'RETURNFLAG']].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] > 8) & (nation['N_COMMENT'] == 'p')][['N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'] == 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] != 19)][['N_NAME']]

nation[(nation['N_NATIONKEY'] == 21) | (nation['N_NAME'].str.startswith('S')) | (nation['N_COMMENT'] != 'v')][['N_NAME']]

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] <= 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 566)][['O_ORDERKEY', 'ORDERDATE', 'CLERK']]

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK']]

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE']]

part.groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) | (part['TYPE'].str.startswith('M')) & (part['P_NAME'] != 'w') & (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'].isin(['Brand#35', 'Brand#32', 'Brand#44', 'Brand#21', 'Brand#15', 'Brand#45', 'Brand#34', 'Brand#54', 'Brand#23', 'Brand#31', 'Brand#55', 'Brand#33', 'Brand#52', 'Brand#42', 'Brand#13', 'Brand#14', 'Brand#43', 'Brand#41', 'Brand#53', 'Brand#22', 'Brand#24', 'Brand#11'])) & (part['P_NAME'] != 's')]

part[['PT_COMMENT', 'SIZE', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE']]

part[['PT_COMMENT', 'TYPE', 'BRAND', 'CONTAINER', 'P_PARTKEY', 'MFGR']]

part[['SIZE', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'P_NAME']]

partsupp.merge(part[(part['SIZE'] >= 40) | (part['MFGR'] != 'Manufacturer#5') | (part['SIZE'] <= 23)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 4049) & (partsupp['SUPPLYCOST'] != 275.077346074058) & (partsupp['SUPPLYCOST'] > 675.919777895637)][['AVAILQTY']]

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'AME')].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] != 'h')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'M')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] <= 1) & (region['R_NAME'].str.startswith('AME'))][['R_NAME']]

region[(region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_SUPPKEY'] > 14) & (supplier['S_NATIONKEY'] > 7) | (supplier['S_ACCTBAL'] != 3795.594374942759) & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_COMMENT'] == 'b')]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > 9684.174381854742)][['S_ACCTBAL', 'S_NAME']]

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME']].groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 2752)][['PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] <= 32) | (lineitem['L_ORDERKEY'] <= 124) & (lineitem['L_COMMENT'] == ',') & (lineitem['L_PARTKEY'] < 178280)][['SHIPMODE']]

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_ORDERKEY'] != 158) | (lineitem['L_SUPPKEY'] <= 4637) & (lineitem['QUANTITY'] != 49) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['SHIPMODE'].isin(['RAIL']))]

lineitem[['EXTENDEDPRICE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'RECEIPTDATE']).agg('count')

nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'].str.startswith('v'))].groupby(by=['N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'p')][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] >= 5)].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] == 'P')][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] == 'o')][['N_NAME', 'N_COMMENT']]

orders.merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] == 'LG') & (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] == 'SMA') & (part['TYPE'].str.startswith('P')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'] != 'LG') | (part['P_NAME'] != 'i') & (part['PT_COMMENT'] == 'h')]

part[(part['PT_COMMENT'].str.startswith('x')) & (part['MFGR'] != 'Manufacturer#3') | (part['P_PARTKEY'] >= 16)].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'] == 'g')].groupby(by=['RETAILPRICE', 'MFGR', 'P_NAME']).agg('count')

part[['PT_COMMENT', 'P_PARTKEY', 'TYPE']].groupby(by=['P_PARTKEY']).agg('count')

part[['P_PARTKEY', 'BRAND', 'PT_COMMENT', 'TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[['P_PARTKEY', 'CONTAINER']].groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

part[['RETAILPRICE', 'BRAND', 'TYPE', 'MFGR', 'SIZE', 'P_NAME', 'CONTAINER']]

partsupp.merge(part[['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 7178) & (partsupp['SUPPLYCOST'] != 277.3659206541545) | (partsupp['SUPPLYCOST'] <= 701.7934883378873)][['P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] < 9763) & (partsupp['PS_PARTKEY'] != 33) & (partsupp['PS_PARTKEY'] == 37) | (partsupp['P_COMMENT'].str.startswith('v'))][['AVAILQTY']]

partsupp[['P_COMMENT', 'PS_SUPPKEY']].groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('count')

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 2708.191171847103)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 79)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 17) & (customer['C_ADDRESS'] != 'g') | (customer['C_CUSTKEY'] >= 48) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == ' ')][['MKTSEGMENT']]

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'ORDERSTATUS', 'O_COMMENT']).agg('count')

lineitem.merge(orders[['O_ORDERKEY', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 132) & (lineitem['LINENUMBER'] > 6)][['L_PARTKEY', 'QUANTITY', 'SHIPMODE', 'L_SUPPKEY']]

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'l') & (nation['N_NAME'] != 'J') & (nation['N_NAME'] != 'K') | (nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NAME'] != 'R')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 16)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] != 18) & (nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] == 0)][['ORDERSTATUS', 'ORDERDATE']]

orders[['TOTALPRICE', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY']]

part[(part['CONTAINER'] == 'LG')][['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'MFGR', 'TYPE']]

part[(part['MFGR'] != 'Manufacturer#2') & (part['TYPE'].str.startswith('E')) & (part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'] == 'MED') & (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] != 'SM') | (part['SIZE'] == 28) & (part['SIZE'] == 16)]

part[['P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_PARTKEY'] <= 4)].merge(part[(part['BRAND'] == 'Brand#22')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 168.0955156823488)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('M'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 17) | (nation['N_COMMENT'] != 'p')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 6060.079682635703) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 12) | (customer['C_ADDRESS'] == 'O') | (customer['MKTSEGMENT'] != 'BUILDING')].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '3') & (customer['C_COMMENT'] == 'i') & (customer['C_PHONE'] != '27-') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE']))][['C_NAME', 'C_COMMENT', 'MKTSEGMENT']]

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3544) & (partsupp['SUPPLYCOST'] >= 582.3286738064326) & (partsupp['AVAILQTY'] >= 6173)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] > 23) & (lineitem['DISCOUNT'] <= 0.0029790528879626525) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['DISCOUNT'] == 0.032975120342577324)][['LINESTATUS', 'RECEIPTDATE', 'SHIPMODE']]

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['DISCOUNT'] <= 0.06198872052299227) | (lineitem['QUANTITY'] > 16)][['COMMITDATE', 'EXTENDEDPRICE', 'SHIPDATE', 'L_PARTKEY']]

nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NAME'] != 'C') | (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] < 23)][['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 258544.59740773778) | (orders['TOTALPRICE'] > 213892.41866342316) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0)][['CLERK']]

orders[(orders['O_CUSTKEY'] < 127076) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM'])) & (orders['ORDERSTATUS'].isin(['O', 'P']))][['ORDERDATE', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] <= 308) & (orders['O_CUSTKEY'] > 83840) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 89553) | (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] >= 509) | (orders['ORDERSTATUS'] != 'F')]

orders[(orders['O_ORDERKEY'] > 551) | (orders['O_COMMENT'].str.startswith('r')) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'] != 'C')][['SHIPPRIORITY', 'TOTALPRICE']]

orders[['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#55') & (part['P_PARTKEY'] < 2) & (part['TYPE'] != 'M')].groupby(by=['CONTAINER', 'P_NAME', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] != 'a') | (part['CONTAINER'] != 'SM') | (part['BRAND'] == 'Brand#41') | (part['BRAND'] != 'Brand#11') | (part['BRAND'] != 'Brand#55') & (part['P_NAME'] == 'l') & (part['RETAILPRICE'] < 984.3428119824512) | (part['SIZE'] > 16) & (part['CONTAINER'] == 'SM')]

part[(part['P_NAME'].str.startswith('lin')) & (part['RETAILPRICE'] >= 1021.6823422608711) | (part['SIZE'] == 8) | (part['PT_COMMENT'].str.startswith('s')) & (part['P_NAME'] == 't') | (part['P_NAME'] == 'c')][['BRAND']]

part[(part['RETAILPRICE'] < 965.049580756417) | (part['SIZE'] != 15) & (part['PT_COMMENT'] == 't') & (part['SIZE'] == 10) & (part['BRAND'] == 'Brand#53') | (part['BRAND'].isin(['Brand#15', 'Brand#35', 'Brand#45', 'Brand#43', 'Brand#51', 'Brand#22', 'Brand#53']))][['BRAND']]

part[(part['SIZE'] <= 29) | (part['P_PARTKEY'] >= 129) & (part['MFGR'] == 'Manufacturer#5') | (part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] >= 46) & (part['RETAILPRICE'] > 933.1552182796112) | (part['TYPE'] == 'M') | (part['PT_COMMENT'] != 'e') | (part['MFGR'] != 'Manufacturer#4')]

part[['PT_COMMENT', 'CONTAINER', 'TYPE', 'MFGR']].groupby(by=['TYPE', 'MFGR']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']]

part[['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']]

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(part[['CONTAINER', 'TYPE', 'P_NAME', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 111) | (supplier['S_ACCTBAL'] < 9215.112512629888)][['S_SUPPKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 503.2245265553175) & (partsupp['SUPPLYCOST'] >= 831.4291925642005) & (partsupp['P_COMMENT'] != 'c') | (partsupp['PS_PARTKEY'] == 8) | (partsupp['SUPPLYCOST'] == 401.103955940014)][['P_COMMENT', 'AVAILQTY']]

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] == 'u')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_SUPPKEY'] >= 67) & (supplier['S_NATIONKEY'] < 7) & (supplier['S_ACCTBAL'] != 3694.6727076800053) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'] == 'i')][['S_PHONE']]

supplier[(supplier['S_COMMENT'] == ' ') | (supplier['S_PHONE'].str.startswith('1'))][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 23)][['S_ADDRESS', 'S_COMMENT']].groupby(by=['S_ADDRESS']).agg('count')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'V') | (nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 'e') | (nation['N_NATIONKEY'] > 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_NAME', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 8251) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_SUPPKEY'] == 2110) | (lineitem['EXTENDEDPRICE'] <= 87425.71259923326) | (lineitem['TAX'] == 0.005549390501502387) & (lineitem['L_PARTKEY'] <= 105343)][['EXTENDEDPRICE', 'LINENUMBER']]

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'L_ORDERKEY', 'SHIPDATE', 'DISCOUNT', 'TAX']].groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] == 's') & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_COMMENT'] != 'v')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] <= 3)].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[(customer['C_CUSTKEY'] == 46)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '5-LOW')][['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE']]

orders[(orders['ORDERPRIORITY'] == '1-URGENT')][['TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['TOTALPRICE', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] == 'JUMBO') & (part['PT_COMMENT'].str.startswith('k'))][['CONTAINER', 'RETAILPRICE']]

part[(part['P_PARTKEY'] <= 107) & (part['BRAND'] != 'Brand#31') & (part['CONTAINER'].str.startswith('SM'))][['P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] == 193) | (part['PT_COMMENT'] == 'f')][['PT_COMMENT', 'TYPE', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'MFGR']]

part[(part['SIZE'] > 13) | (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] != 'bis') & (part['PT_COMMENT'] != 'd') & (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] <= 121)][['MFGR', 'TYPE']]

part[(part['TYPE'].str.startswith('E'))][['RETAILPRICE', 'CONTAINER']].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['MFGR', 'P_NAME', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'BRAND']].groupby(by=['P_NAME']).agg('count')

part[['PT_COMMENT', 'MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 252.37580232521847) & (partsupp['AVAILQTY'] != 3734) | (partsupp['AVAILQTY'] == 8894)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 932.0392127812538) | (partsupp['PS_PARTKEY'] < 23) & (partsupp['SUPPLYCOST'] <= 758.3699056253199)].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']).agg('count')

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 376.70952385317946)][['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'k') | (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_SUPPKEY'] > 51)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']]

customer.merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'] == 's') & (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] == 5)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'L') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] < 14) & (customer['C_ADDRESS'].str.startswith('u')) & (customer['C_NATIONKEY'] > 12) | (customer['C_NATIONKEY'] == 7) & (customer['C_CUSTKEY'] != 35)][['C_PHONE']]

customer[(customer['C_NATIONKEY'] < 13) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] < 33) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME']]

customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp.merge(part[(part['P_PARTKEY'] > 99) & (part['P_PARTKEY'] > 62) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] <= 37)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 3869) | (partsupp['SUPPLYCOST'] < 508.87689619737904) | (partsupp['SUPPLYCOST'] <= 252.12074824566722) | (partsupp['P_COMMENT'] != 'b') & (partsupp['PS_SUPPKEY'] < 4404)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['L_SUPPKEY'] >= 3952) & (lineitem['TAX'] < 0.0712121077240698) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_SUPPKEY'] == 1721)][['LINESTATUS']]

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N'])) & (lineitem['EXTENDEDPRICE'] <= 1800.0594776474043) | (lineitem['EXTENDEDPRICE'] != 31431.34968768221) | (lineitem['TAX'] < 0.051876880304243644) | (lineitem['LINENUMBER'] <= 5)][['SHIPDATE', 'LINESTATUS', 'SHIPMODE', 'QUANTITY']]

lineitem[['LINESTATUS', 'SHIPMODE', 'QUANTITY', 'L_COMMENT']].groupby(by=['LINESTATUS', 'QUANTITY', 'SHIPMODE', 'L_COMMENT']).agg('mean', numeric_only=True)

lineitem[['TAX', 'RECEIPTDATE', 'LINESTATUS', 'L_COMMENT', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'LINESTATUS', 'L_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'R')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'] == ' ')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 15) | (nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'].str.startswith('p'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] >= 5)][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE']))][['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('count')

part[(part['BRAND'].isin(['Brand#31', 'Brand#14'])) & (part['BRAND'] != 'Brand#41')][['CONTAINER', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['PT_COMMENT'] == 'i') & (part['PT_COMMENT'].str.startswith('k'))][['P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'MFGR', 'CONTAINER']]

part[(part['P_NAME'] != 'h') & (part['CONTAINER'] == 'JUMBO') | (part['BRAND'].isin(['Brand#33', 'Brand#51', 'Brand#31', 'Brand#32', 'Brand#43', 'Brand#14', 'Brand#12', 'Brand#25', 'Brand#52', 'Brand#23', 'Brand#54', 'Brand#22', 'Brand#24'])) & (part['P_NAME'] != 't')][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'm')][['RETAILPRICE', 'BRAND', 'SIZE']].groupby(by=['SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] < 189) | (part['TYPE'] != 'L')][['BRAND', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] == 1010.9629801212759) & (part['P_PARTKEY'] < 81) & (part['RETAILPRICE'] != 976.5340890313047)].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'X') & (supplier['S_ADDRESS'].str.startswith('w')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'X') & (supplier['S_ACCTBAL'] != 4770.517545136401)].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] != 'S') & (nation['N_COMMENT'] == 'c')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('R')) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ADDRESS'] != 'l') & (supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_NATIONKEY'] > 2) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != '7') & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_SUPPKEY'] != 12) & (supplier['S_NATIONKEY'] <= 22) | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_SUPPKEY'] <= 51) | (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_NATIONKEY'] > 11) & (supplier['S_ACCTBAL'] > 8730.65289412835)][['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] >= 36) | (supplier['S_COMMENT'] == ' sl')][['S_NAME', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('count')

supplier[['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_NAME'].str.startswith('R'))].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 11)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 70)][['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '27-')][['C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'X') & (customer['C_PHONE'] != '27-') & (customer['C_ACCTBAL'] < 9752.970039440688)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] != 52728) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'] == 't') & (orders['ORDERPRIORITY'].isin(['2-HIGH']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'e')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['EXTENDEDPRICE'] == 55190.37635425057) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'].isin(['RAIL', 'TRUCK', 'AIR', 'MAIL', 'SHIP', 'FOB'])) | (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'FOB', 'MAIL']))][['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'] != 'I')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 14) & (nation['N_NAME'] != 'C') | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] >= 15)].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 17) | (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NATIONKEY'] != 19)][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] <= 20)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW'])) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] < 120)][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 19094) | (orders['O_COMMENT'].str.startswith('egu')) | (orders['ORDERSTATUS'] != 'F') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'F')][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 394) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] >= 83793.35953246582) | (orders['O_CUSTKEY'] != 68085) & (orders['O_ORDERKEY'] >= 641) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED'])) & (orders['TOTALPRICE'] < 70771.96284727534) & (orders['O_ORDERKEY'] <= 2) | (orders['CLERK'] == 'C')][['ORDERPRIORITY']]

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] < 138) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'P')].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['P_PARTKEY'] == 23) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2'])) & (part['PT_COMMENT'].str.startswith('y')) | (part['RETAILPRICE'] != 927.6152660157846) & (part['MFGR'] != 'Manufacturer#4')][['TYPE']].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] >= 61) | (part['CONTAINER'] != 'SM') & (part['MFGR'] != 'Manufacturer#1') & (part['SIZE'] > 11) | (part['SIZE'] >= 43) & (part['P_PARTKEY'] <= 20) | (part['BRAND'].isin(['Brand#51', 'Brand#22'])) & (part['P_NAME'] == 'v')][['CONTAINER', 'BRAND']]

part[(part['RETAILPRICE'] == 937.6421294200045) | (part['P_NAME'] == 't') | (part['CONTAINER'] != 'SM') & (part['TYPE'].str.startswith('S')) & (part['BRAND'].isin(['Brand#55', 'Brand#51', 'Brand#52', 'Brand#13', 'Brand#23', 'Brand#15', 'Brand#24', 'Brand#42', 'Brand#53', 'Brand#33', 'Brand#14', 'Brand#41', 'Brand#12', 'Brand#43', 'Brand#34', 'Brand#54', 'Brand#22', 'Brand#45', 'Brand#35', 'Brand#32', 'Brand#25', 'Brand#11'])) | (part['CONTAINER'] == 'SM')].groupby(by=['TYPE', 'MFGR', 'SIZE']).agg('count')

part[['PT_COMMENT', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] > 1027.8967853102797) | (part['RETAILPRICE'] != 1037.7609094150591) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) | (part['P_NAME'].str.startswith('v'))][['BRAND', 'RETAILPRICE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 31) & (partsupp['P_COMMENT'] == 'c') | (partsupp['PS_SUPPKEY'] == 2862) & (partsupp['PS_SUPPKEY'] >= 7058)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 710.2014673507923) & (partsupp['AVAILQTY'] <= 545) | (partsupp['P_COMMENT'] == 'h') | (partsupp['AVAILQTY'] >= 1730)][['AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_PHONE'] == '2') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NATIONKEY'] > 21) & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('count')

supplier[['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_ADDRESS', 'S_NAME']).agg('count')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] == 'x') | (customer['C_COMMENT'] != 'r') & (customer['C_COMMENT'].str.startswith('p')) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('j')) | (customer['C_ADDRESS'] != 'K') | (customer['C_COMMENT'] == 'k') | (customer['C_NATIONKEY'] <= 20)][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_CUSTKEY'] >= 38) & (customer['C_ADDRESS'].str.startswith('L')) & (customer['C_COMMENT'].str.startswith(',')) | (customer['C_ADDRESS'].str.startswith('E')) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-') | (customer['C_COMMENT'] == 'e') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] >= 9) | (customer['C_NAME'] == 'C')][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '13-')].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_ADDRESS'] == 'a') | (customer['C_NATIONKEY'] != 6)][['C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']]

lineitem[(lineitem['QUANTITY'] <= 28) & (lineitem['QUANTITY'] > 48) & (lineitem['EXTENDEDPRICE'] <= 59617.63272609172) & (lineitem['LINENUMBER'] > 2)][['EXTENDEDPRICE', 'TAX', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['L_COMMENT'] == ' ca') | (lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['DISCOUNT'] != 0.05568991984187496) | (lineitem['EXTENDEDPRICE'] <= 14555.048154782062) | (lineitem['LINENUMBER'] >= 6)][['EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT']]

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 11)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] < 7) | (customer['C_PHONE'] == '22-')][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C')][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] != 161) & (part['PT_COMMENT'] != 'b') | (part['BRAND'] == 'Brand#33') | (part['P_NAME'] != 'p') & (part['CONTAINER'].str.startswith('MED')) & (part['RETAILPRICE'] == 1073.6792410117387)].groupby(by=['RETAILPRICE', 'CONTAINER', 'P_PARTKEY']).agg('count')

part[(part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#52')][['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']]

part[(part['P_NAME'] != 'd') | (part['CONTAINER'] != 'LG') | (part['CONTAINER'] != 'MED') | (part['TYPE'] != 'P') & (part['SIZE'] != 24) & (part['BRAND'].isin(['Brand#21', 'Brand#35', 'Brand#31', 'Brand#23', 'Brand#14'])) | (part['RETAILPRICE'] == 1093.1268235403736)].groupby(by=['RETAILPRICE', 'P_NAME', 'MFGR']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 951.393365775379) | (part['TYPE'].str.startswith('S')) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4'])) | (part['BRAND'] != 'Brand#13') | (part['BRAND'].isin(['Brand#15', 'Brand#54', 'Brand#31', 'Brand#23', 'Brand#34'])) | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] >= 118) & (part['SIZE'] != 32)].groupby(by=['P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'S') | (part['SIZE'] == 20) & (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] != 1083.779580010452) | (part['RETAILPRICE'] >= 1046.9819632029896) | (part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] == 'd') & (part['BRAND'].isin(['Brand#31', 'Brand#41', 'Brand#13', 'Brand#32', 'Brand#52', 'Brand#34', 'Brand#24', 'Brand#12', 'Brand#53', 'Brand#42', 'Brand#43', 'Brand#15', 'Brand#55', 'Brand#23', 'Brand#25', 'Brand#14', 'Brand#45', 'Brand#35', 'Brand#54', 'Brand#51', 'Brand#11'])) & (part['RETAILPRICE'] <= 989.8708711611316)].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR', 'TYPE']].groupby(by=['BRAND', 'RETAILPRICE', 'TYPE', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_COMMENT'] != 'n') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '1') & (supplier['S_ACCTBAL'] <= 3256.160712847015)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 44) & (partsupp['PS_SUPPKEY'] <= 2609) | (partsupp['PS_SUPPKEY'] >= 5481) & (partsupp['PS_SUPPKEY'] < 4908)].merge(part[['P_PARTKEY', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['P_COMMENT'] == 't') & (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['PS_PARTKEY'] > 46) & (partsupp['PS_SUPPKEY'] > 3986)].merge(part[(part['P_NAME'] != 'blu') | (part['P_PARTKEY'] <= 151) & (part['P_PARTKEY'] < 145)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 1) | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != -394.0069189960068) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 6619.251557926378) & (supplier['S_ADDRESS'] != 'L') | (supplier['S_SUPPKEY'] != 137)][['S_NAME', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '9') | (supplier['S_NATIONKEY'] >= 21)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_NATIONKEY'] < 11) | (supplier['S_ADDRESS'] == 'r')][['S_NAME', 'S_PHONE']].groupby(by=['S_PHONE', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '26-') | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_NATIONKEY'] <= 12) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] <= 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] == 11) & (supplier['S_ADDRESS'].str.startswith('v'))][['S_NAME', 'S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'h')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] >= 6) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] <= 8) | (nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] >= 20)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 17) | (customer['C_PHONE'] == '27-') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 7) & (customer['C_COMMENT'] != 'r')].merge(nation[(nation['N_NATIONKEY'] < 15)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 3078) | (partsupp['P_COMMENT'] != 'f') | (partsupp['AVAILQTY'] < 8619) | (partsupp['AVAILQTY'] == 1329)].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3783)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.008996295580831383)][['L_PARTKEY', 'LINESTATUS', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'SHIPINSTRUCT']].groupby(by=['LINENUMBER', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_PARTKEY']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 4) | (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#55') | (part['BRAND'] == 'Brand#25') | (part['BRAND'].isin(['Brand#42', 'Brand#12', 'Brand#41', 'Brand#22', 'Brand#35', 'Brand#53', 'Brand#13', 'Brand#52', 'Brand#25', 'Brand#14', 'Brand#32', 'Brand#54', 'Brand#15', 'Brand#33', 'Brand#51', 'Brand#21', 'Brand#55', 'Brand#31', 'Brand#45', 'Brand#43', 'Brand#11'])) & (part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] <= 1041.4108158692263) | (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'].str.startswith('!'))][['TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE']]

part[(part['BRAND'].isin(['Brand#21', 'Brand#44', 'Brand#11', 'Brand#22', 'Brand#54', 'Brand#25', 'Brand#35', 'Brand#12'])) & (part['TYPE'] != 'E') & (part['RETAILPRICE'] <= 941.3202427879656) | (part['P_PARTKEY'] == 158) & (part['P_NAME'] != 'k') | (part['CONTAINER'] == 'SM')][['PT_COMMENT', 'BRAND', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER']]

part[(part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] == 39) | (part['MFGR'].isin(['Manufacturer#1'])) | (part['TYPE'] != 'P') & (part['PT_COMMENT'].str.startswith('f')) & (part['BRAND'].isin(['Brand#12', 'Brand#45', 'Brand#24', 'Brand#11', 'Brand#25', 'Brand#32', 'Brand#44', 'Brand#14', 'Brand#22'])) | (part['PT_COMMENT'].str.startswith('b'))].groupby(by=['P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'kag') & (part['PT_COMMENT'] != 'q') & (part['P_NAME'].str.startswith('bis')) & (part['P_NAME'] == 'k') & (part['PT_COMMENT'].str.startswith('ly ')) | (part['RETAILPRICE'] == 1034.680666939906) | (part['SIZE'] > 11) | (part['RETAILPRICE'] != 1000.7401542846354)][['SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME']]

part[(part['TYPE'] != 'STA') & (part['BRAND'] == 'Brand#31') & (part['PT_COMMENT'] == 'ss ') | (part['CONTAINER'] != 'LG') & (part['SIZE'] < 37) | (part['MFGR'] != 'Manufacturer#2')].groupby(by=['CONTAINER', 'SIZE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'P') | (part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] >= 998.2965750928009) & (part['P_PARTKEY'] > 170) | (part['P_PARTKEY'] < 94) | (part['BRAND'] != 'Brand#14')].groupby(by=['RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'MFGR', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['P_NAME', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['SIZE', 'TYPE', 'CONTAINER', 'P_NAME', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['SIZE'] > 3) | (part['TYPE'] != 'SMA') & (part['P_PARTKEY'] != 70) & (part['RETAILPRICE'] <= 911.2565603332088) | (part['MFGR'] != 'Manufacturer#5') | (part['BRAND'] != 'Brand#53')][['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('STA')) | (part['PT_COMMENT'] != 'd')][['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 6) & (partsupp['PS_SUPPKEY'] == 2891) & (partsupp['P_COMMENT'] == 's') | (partsupp['PS_SUPPKEY'] != 6363)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4616)].merge(part[(part['PT_COMMENT'].str.startswith('x'))][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'h') | (partsupp['PS_PARTKEY'] > 2) | (partsupp['AVAILQTY'] != 9949)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 10) | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] != 'u') | (nation['N_NAME'] == 'R')].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6229.452313985014) | (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'q') & (supplier['S_NATIONKEY'] > 4) | (supplier['S_ACCTBAL'] < 9449.535758161637)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'r') & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 133) & (supplier['S_SUPPKEY'] == 131)][['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 4) & (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] <= 17)].merge(nation[(nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] != 'c')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] != 'C') | (nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 14) | (nation['N_COMMENT'] == 'p')].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == ',')].merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] == 8)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('n')) & (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 53) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 5) & (customer['C_NATIONKEY'] <= 18) | (customer['C_CUSTKEY'] != 45)][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] > 3) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 2) & (customer['C_ACCTBAL'] == 2178.1401128859297)].merge(nation[(nation['N_NAME'] == 'C') | (nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2013) & (partsupp['AVAILQTY'] >= 293)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 5) & (lineitem['L_COMMENT'] == 'c') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['LINESTATUS'] != 'O')][['COMMITDATE', 'LINESTATUS', 'SHIPMODE', 'DISCOUNT', 'TAX', 'EXTENDEDPRICE', 'SHIPDATE', 'RECEIPTDATE', 'QUANTITY']]

lineitem[(lineitem['L_COMMENT'] != 'f') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD']))][['EXTENDEDPRICE', 'SHIPMODE', 'QUANTITY', 'TAX']].groupby(by=['TAX', 'SHIPMODE', 'EXTENDEDPRICE', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'L_COMMENT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_SUPPKEY', 'TAX', 'RETURNFLAG']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] != 'r')].merge(region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'C') | (nation['N_COMMENT'] == 'a') | (nation['N_NATIONKEY'] == 21)].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] >= 0)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] < 18) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] > 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 3) | (nation['N_NAME'] == 'K')].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 12)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] == 17)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 188)].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 18279.47581503859)][['TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE']].groupby(by=['O_CUSTKEY']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) | (part['PT_COMMENT'] != 'r') & (part['P_NAME'] != 'l') | (part['P_NAME'] != 'n') & (part['RETAILPRICE'] <= 1076.103997595944) & (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] != 177) & (part['RETAILPRICE'] == 1022.2095086960696)][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['P_PARTKEY'] != 59) & (part['P_NAME'] != 'y') & (part['RETAILPRICE'] > 1092.138149196132) | (part['BRAND'] != 'Brand#15') | (part['CONTAINER'] != 'WRAP')][['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'MFGR', 'CONTAINER']]

part[['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'SIZE', 'TYPE']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] != 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 29)].merge(part[(part['SIZE'] != 20)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 38)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] != 163) & (part['P_PARTKEY'] != 2)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 518) | (partsupp['PS_PARTKEY'] != 10) & (partsupp['PS_SUPPKEY'] <= 303) & (partsupp['PS_SUPPKEY'] > 5432) | (partsupp['PS_PARTKEY'] <= 39)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 844.126477963011) & (partsupp['PS_SUPPKEY'] != 5652)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_PARTKEY'] >= 137) & (part['P_NAME'] != 'v') & (part['TYPE'] != 'E') | (part['TYPE'].str.startswith('P')) & (part['CONTAINER'] != 'MED') | (part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] == 'h') | (part['BRAND'] == 'Brand#31') & (part['SIZE'] >= 26)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'the')][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'i')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] > 64) | (customer['C_ACCTBAL'] == 6785.863722806448) | (customer['C_ACCTBAL'] != 9728.488009828337) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] > 9782.876625820383) | (customer['C_CUSTKEY'] != 68)][['C_NAME', 'C_PHONE', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '25-')][['C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 9792.363492770508) | (supplier['S_ACCTBAL'] <= 8865.418546351582) | (supplier['S_ADDRESS'].str.startswith('E')) & (supplier['S_PHONE'] == '14-')][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['SHIPMODE'].isin(['FOB', 'RAIL', 'TRUCK', 'AIR', 'REG AIR'])) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['L_COMMENT'] != 'y') | (lineitem['RETURNFLAG'] == 'A') | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['L_ORDERKEY'] <= 95)].merge(partsupp.merge(part[(part['TYPE'] == 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] != 0.0019553031059763182) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['L_SUPPKEY'] == 7244) & (lineitem['QUANTITY'] < 40) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_PARTKEY'] <= 112987) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['LINENUMBER'] < 5) & (lineitem['L_SUPPKEY'] == 4157)][['LINENUMBER', 'SHIPMODE', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT']]

lineitem[['LINENUMBER', 'TAX', 'L_SUPPKEY', 'L_PARTKEY']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'B') & (supplier['S_SUPPKEY'] != 55) & (supplier['S_SUPPKEY'] == 131) | (supplier['S_SUPPKEY'] == 31)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] == 2) & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'J')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 7) | (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NAME'] != 'B')].merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 16)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 73) | (customer['C_CUSTKEY'] == 84) & (customer['C_CUSTKEY'] < 25)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 124195) | (orders['O_COMMENT'] == 'c') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 66078.60636341853) & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'].str.startswith('-')) & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERDATE'] <= '1998-07-21')][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#55') | (part['MFGR'].isin(['Manufacturer#5'])) & (part['RETAILPRICE'] == 1022.7996108730997) | (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] < 146)][['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'TYPE']].groupby(by=['P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2'])) | (part['SIZE'] > 33) & (part['SIZE'] < 37) & (part['CONTAINER'].str.startswith('MED')) & (part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] >= 1019.5305489147638)][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'P_NAME', 'BRAND', 'PT_COMMENT']]

part[(part['PT_COMMENT'] != 'ly ') | (part['BRAND'].isin(['Brand#14', 'Brand#21', 'Brand#52', 'Brand#31', 'Brand#53', 'Brand#11', 'Brand#34', 'Brand#54', 'Brand#51', 'Brand#13', 'Brand#55', 'Brand#32', 'Brand#45', 'Brand#43', 'Brand#15', 'Brand#22', 'Brand#24', 'Brand#25', 'Brand#23', 'Brand#44', 'Brand#12', 'Brand#42'])) | (part['RETAILPRICE'] != 1005.2210873612431) | (part['P_NAME'].str.startswith('p')) & (part['RETAILPRICE'] <= 904.4284439329025) | (part['P_PARTKEY'] > 96) | (part['PT_COMMENT'] != 'h') | (part['P_NAME'] != 'g')].groupby(by=['SIZE', 'P_NAME', 'MFGR', 'TYPE', 'BRAND']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'm') | (part['P_NAME'] != 'w') & (part['SIZE'] > 48) & (part['BRAND'] == 'Brand#15') | (part['P_PARTKEY'] >= 87) & (part['P_NAME'] == 'b') | (part['P_NAME'] != 't') | (part['P_NAME'] != 'b') | (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['TYPE', 'RETAILPRICE', 'MFGR', 'BRAND']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 983.941926140184) | (part['BRAND'].isin(['Brand#14', 'Brand#32', 'Brand#51', 'Brand#13', 'Brand#23', 'Brand#11', 'Brand#42', 'Brand#15', 'Brand#24', 'Brand#45', 'Brand#31', 'Brand#22', 'Brand#12', 'Brand#41', 'Brand#54', 'Brand#34', 'Brand#25', 'Brand#52', 'Brand#44', 'Brand#55'])) | (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] < 1097.6226726425566) | (part['PT_COMMENT'] != 'r') | (part['P_NAME'].str.startswith('c')) & (part['P_NAME'] != 'r')][['RETAILPRICE', 'PT_COMMENT', 'MFGR', 'TYPE', 'P_NAME', 'CONTAINER', 'SIZE']]

part[(part['SIZE'] != 46) & (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] >= 87) | (part['P_PARTKEY'] <= 150) & (part['RETAILPRICE'] != 989.001659627206) | (part['BRAND'] == 'Brand#52') & (part['MFGR'] != 'Manufacturer#1')][['PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'TYPE', 'MFGR', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'BRAND']).agg('min', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] != 195) | (part['RETAILPRICE'] >= 1030.2728464947368) & (part['RETAILPRICE'] < 1081.61036833361) & (part['TYPE'] != 'E') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('count')

partsupp.merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 6578) | (partsupp['AVAILQTY'] != 6731) | (partsupp['SUPPLYCOST'] == 502.2533479435662)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 678) & (partsupp['PS_PARTKEY'] < 32)].merge(part[(part['TYPE'].str.startswith('E')) & (part['MFGR'] == 'Manufacturer#4') | (part['BRAND'] != 'Brand#35') & (part['CONTAINER'] == 'MED') | (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] > 931.0778991920828) & (part['TYPE'].str.startswith('P')) & (part['RETAILPRICE'] <= 1058.7847202451658) & (part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] != '2') & (supplier['S_SUPPKEY'] == 63)][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'J')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] != 'K')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 3) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 12)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[['C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] != 'J')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_NATIONKEY'] > 5) | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 2) & (nation['N_NAME'] == 'B') | (nation['N_NAME'] != 'F')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] != 3)].merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'] == 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['O_CUSTKEY'] >= 15770) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] < 0)].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] != 'Brand#54') & (part['SIZE'] > 23) | (part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] >= 7) & (part['BRAND'] == 'Brand#11') | (part['RETAILPRICE'] > 1015.5709320608947) | (part['CONTAINER'] != 'WRAP') | (part['MFGR'] != 'Manufacturer#2')][['PT_COMMENT', 'P_NAME']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'E') | (part['BRAND'].isin(['Brand#14', 'Brand#25', 'Brand#44', 'Brand#45', 'Brand#35', 'Brand#11', 'Brand#42', 'Brand#22', 'Brand#23', 'Brand#53', 'Brand#54', 'Brand#51', 'Brand#41', 'Brand#21', 'Brand#52', 'Brand#43', 'Brand#31', 'Brand#32', 'Brand#12', 'Brand#15', 'Brand#24'])) & (part['PT_COMMENT'] == 'the') | (part['P_PARTKEY'] > 76) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] != 'q') & (part['BRAND'].isin(['Brand#35', 'Brand#55', 'Brand#22', 'Brand#11', 'Brand#42', 'Brand#54', 'Brand#23', 'Brand#24', 'Brand#41', 'Brand#32', 'Brand#52', 'Brand#33', 'Brand#21', 'Brand#15', 'Brand#44', 'Brand#14', 'Brand#31', 'Brand#34', 'Brand#43', 'Brand#53', 'Brand#13', 'Brand#12', 'Brand#45', 'Brand#25', 'Brand#51'])) | (part['PT_COMMENT'].str.startswith('kag'))][['BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'TYPE', 'P_NAME', 'RETAILPRICE']].groupby(by=['CONTAINER', 'MFGR', 'P_NAME', 'BRAND', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 20) | (partsupp['PS_SUPPKEY'] == 1911) | (partsupp['SUPPLYCOST'] <= 221.08383594536764) | (partsupp['PS_PARTKEY'] != 37)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 6135) | (partsupp['PS_PARTKEY'] <= 31)].merge(supplier.merge(nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'U')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'bli') | (partsupp['PS_PARTKEY'] < 41) & (partsupp['SUPPLYCOST'] >= 296.91008463363056) | (partsupp['AVAILQTY'] != 4570)].merge(supplier[(supplier['S_SUPPKEY'] == 77) | (supplier['S_COMMENT'] == 'r') & (supplier['S_ACCTBAL'] <= 8955.369582558365) & (supplier['S_PHONE'] != '28-') | (supplier['S_ACCTBAL'] == -855.8209546009144)][['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['SUPPLYCOST'] > 545.5711183084782) | (partsupp['AVAILQTY'] >= 7270) & (partsupp['SUPPLYCOST'] <= 929.432055192503)].merge(part[(part['SIZE'] < 4) & (part['P_NAME'] != 'blu') & (part['SIZE'] < 36)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['PS_PARTKEY'] >= 25)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('x'))][['PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#2') & (part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 426.8101527919074)].merge(part[(part['BRAND'] != 'Brand#22') | (part['P_NAME'] != 'f') & (part['BRAND'] != 'Brand#15') & (part['SIZE'] > 37)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['SIZE'] != 17) | (part['PT_COMMENT'].str.startswith('q')) | (part['P_PARTKEY'] != 24) & (part['PT_COMMENT'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] > 18)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 15) | (nation['N_NATIONKEY'] >= 3) & (nation['N_NAME'] == 'R')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] > 9) | (nation['N_NATIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 8596.490433699148) & (supplier['S_SUPPKEY'] >= 2) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] <= 5) & (supplier['S_NATIONKEY'] <= 16) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] < 20) & (nation['N_NATIONKEY'] <= 6)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('h')) | (supplier['S_COMMENT'] == 'g') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] == 'O') | (supplier['S_SUPPKEY'] == 115)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('V')) & (supplier['S_ACCTBAL'] > -645.8393535574662) & (supplier['S_ACCTBAL'] <= 7033.2460680149825) | (supplier['S_ACCTBAL'] <= 7257.1845306367095)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NATIONKEY'] != 4) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] == 170) | (supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_ADDRESS'] != '3') | (supplier['S_SUPPKEY'] > 147)][['S_NAME', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 66) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] <= 6478.525295319967) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] != 53) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] < 13)][['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 22) | (customer['C_CUSTKEY'] > 75) & (customer['C_ACCTBAL'] != 2164.6100871567482) | (customer['C_ACCTBAL'] >= 1301.9801909397825) & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ADDRESS'] == ',')][['MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 9690) | (partsupp['PS_PARTKEY'] <= 2)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] != 50558.74359576427) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['SHIPMODE'] == 'REG AIR')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'] != ' ') | (lineitem['DISCOUNT'] != 0.08965985356465395) & (lineitem['QUANTITY'] >= 40) | (lineitem['L_ORDERKEY'] == 152)][['L_PARTKEY', 'SHIPMODE']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] > 17)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') | (nation['N_NAME'].str.startswith('K'))][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] <= 6) | (nation['N_COMMENT'] != 'e')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 20)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'Q')].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] >= 17) | (nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == 'R') & (customer['C_COMMENT'] != 'p') | (customer['C_COMMENT'] != 'k')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') | (part['TYPE'] == 'L') | (part['PT_COMMENT'] == 'q') | (part['SIZE'] <= 25) | (part['P_NAME'].str.startswith('i')) | (part['P_NAME'] != 'bis') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) | (part['P_PARTKEY'] > 185) | (part['BRAND'] == 'Brand#54')][['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER']]

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] > 929.9711052543965)][['CONTAINER', 'TYPE', 'P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('i')) | (part['CONTAINER'].str.startswith('LG'))][['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']].groupby(by=['BRAND', 'PT_COMMENT']).agg('count')

part[(part['P_PARTKEY'] <= 199) & (part['CONTAINER'].str.startswith('SM')) | (part['P_PARTKEY'] < 130) | (part['TYPE'] != 'SMA') | (part['SIZE'] == 8) & (part['RETAILPRICE'] <= 976.257688009798)][['CONTAINER', 'TYPE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 38) | (partsupp['AVAILQTY'] < 6444) | (partsupp['PS_SUPPKEY'] <= 1951)][['AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'd') | (partsupp['AVAILQTY'] > 3499) | (partsupp['PS_PARTKEY'] > 40) | (partsupp['AVAILQTY'] < 9077) & (partsupp['SUPPLYCOST'] < 456.2752941600269)].merge(supplier[(supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] != '9') & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] < 1225.882271868137) & (supplier['S_COMMENT'] != 'v')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] < 1274.7363762750826)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 5) & (supplier['S_COMMENT'] == 'f') & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == '.') | (supplier['S_NATIONKEY'] != 12)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] < 9829.342950306285) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'B') | (nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'a')].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] == 18)].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_CUSTKEY'] >= 58) & (customer['C_ACCTBAL'] <= 129.93801812068068) & (customer['C_NATIONKEY'] != 18) & (customer['C_COMMENT'] == 'q') & (customer['C_ADDRESS'].str.startswith('m')) & (customer['C_ACCTBAL'] >= 8968.660090800748)].merge(nation[(nation['N_NATIONKEY'] == 6) | (nation['N_NAME'] == 'B') & (nation['N_COMMENT'] == 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 18) | (customer['C_COMMENT'].str.startswith('a')) | (customer['C_NATIONKEY'] > 18)].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] != 0) | (nation['N_NATIONKEY'] <= 7)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'MAIL') | (lineitem['QUANTITY'] != 44) & (lineitem['COMMITDATE'] > '1992-05-15')].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'SIZE']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'LINENUMBER', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp.merge(part[(part['BRAND'] != 'Brand#13') | (part['P_PARTKEY'] != 53) & (part['BRAND'] == 'Brand#33') | (part['RETAILPRICE'] < 943.2473944435885) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['TAX', 'L_PARTKEY', 'SHIPMODE', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 108.11263405703019)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] <= 16) & (customer['C_NATIONKEY'] >= 13) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] <= 8) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_NATIONKEY'] == 9) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_ACCTBAL'] < 4130.7725382499275)][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) & (customer['C_PHONE'] == '2')].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] == 2) & (orders['O_CUSTKEY'] > 97255) | (orders['O_ORDERKEY'] >= 589)].merge(customer.merge(nation[(nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'F')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) | (orders['O_ORDERKEY'] != 341) | (orders['O_COMMENT'].str.startswith('h')) | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'] != 'F')].merge(customer[(customer['C_ADDRESS'] != 'Q') | (customer['C_NATIONKEY'] > 19) & (customer['C_ACCTBAL'] != 4530.902712481416) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('27-'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 289) & (orders['TOTALPRICE'] != 192356.5522621463) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] <= 622) | (orders['ORDERDATE'] == '1998-07-21')].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 316601.61320551735) & (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] < 16447) | (orders['TOTALPRICE'] < 40763.740152168415) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERDATE'] != '1998-07-21') | (orders['TOTALPRICE'] >= 211584.01878518728) | (orders['TOTALPRICE'] == 354403.1748025032) & (orders['O_CUSTKEY'] <= 144272)].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] >= 7561) & (partsupp['AVAILQTY'] != 8467) & (partsupp['PS_SUPPKEY'] <= 487) | (partsupp['AVAILQTY'] >= 194) | (partsupp['AVAILQTY'] >= 8830)].merge(part[(part['RETAILPRICE'] > 959.4771076232153) | (part['P_NAME'] != 'l')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 37) | (partsupp['P_COMMENT'] != 'l')][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] < 946.1963875283709)][['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] == 194) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 7) & (supplier['S_COMMENT'] == 'a') | (supplier['S_COMMENT'] != 'the')][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 12) | (supplier['S_SUPPKEY'] < 7) | (supplier['S_ACCTBAL'] != 9721.936866108024)][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 109) | (supplier['S_NATIONKEY'] != 14) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] < -155.72815654456917) | (supplier['S_ADDRESS'] == 'd') & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 168) | (supplier['S_ACCTBAL'] != 767.2950251951734) | (supplier['S_SUPPKEY'] != 140) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('Z'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 2)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 8299.716848627826) | (customer['C_COMMENT'] == 'f') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != -696.6492316066134) & (customer['C_NATIONKEY'] <= 8)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'n') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] == 'd') & (customer['C_ADDRESS'] == 'B') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_ADDRESS'].str.startswith('J'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('y')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('7')) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 9105.502843648144)].merge(nation[(nation['N_NAME'] == 'R') & (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '3') & (customer['C_CUSTKEY'] >= 61) | (customer['C_NATIONKEY'] != 16) | (customer['C_COMMENT'] != 'l')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_PHONE'].str.startswith('2'))][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_COMMENT'] == 'i')].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'y') & (nation['N_NATIONKEY'] == 23)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(part[['PT_COMMENT', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_ACCTBAL'] == 2947.2677526401985) | (supplier['S_ACCTBAL'] != 5295.284317496199)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['TAX'] > 0.06152869841072204) | (lineitem['SHIPMODE'].isin(['TRUCK', 'RAIL', 'REG AIR', 'AIR', 'FOB', 'SHIP']))].merge(partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND', 'MFGR', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'].str.startswith(' '))][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] == 'n') | (nation['N_NAME'] != 'B')][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['ORDERDATE'] <= '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['O_COMMENT'] != 'h')].merge(customer[(customer['C_CUSTKEY'] != 34)].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['PT_COMMENT'] == 'the') | (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] <= 190) | (part['BRAND'].isin(['Brand#44', 'Brand#42', 'Brand#24', 'Brand#14', 'Brand#55', 'Brand#12', 'Brand#33', 'Brand#53', 'Brand#22', 'Brand#23', 'Brand#13', 'Brand#51', 'Brand#35', 'Brand#25'])) & (part['PT_COMMENT'].str.startswith('the'))][['BRAND', 'PT_COMMENT', 'P_NAME', 'MFGR', 'CONTAINER', 'SIZE']].groupby(by=['CONTAINER', 'MFGR', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NATIONKEY'] < 11) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 12)].merge(nation[(nation['N_NATIONKEY'] < 21)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 12) & (nation['N_NATIONKEY'] == 10) | (nation['N_NATIONKEY'] != 17) & (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'E') | (customer['C_ADDRESS'] != 'v')].merge(nation[(nation['N_NATIONKEY'] != 19) | (nation['N_NAME'] == 'U') & (nation['N_NAME'] == 'C') & (nation['N_NATIONKEY'] >= 22)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 7) & (customer['C_CUSTKEY'] > 59)][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'] != 'i')].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) & (part['PT_COMMENT'] != 'f') | (part['RETAILPRICE'] <= 967.7666184339931) & (part['SIZE'] != 31) & (part['CONTAINER'] == 'LG') & (part['MFGR'] != 'Manufacturer#3')][['BRAND', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['SHIPMODE'].isin(['SHIP', 'TRUCK', 'FOB', 'REG AIR', 'AIR', 'RAIL', 'MAIL'])) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['L_COMMENT'] == 'c') & (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['TAX'] != 0.079052169439335)][['TAX', 'COMMITDATE', 'EXTENDEDPRICE', 'LINENUMBER']].groupby(by=['LINENUMBER', 'TAX']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['L_COMMENT'].str.startswith('l')) | (lineitem['L_SUPPKEY'] <= 8337) | (lineitem['LINENUMBER'] == 1) | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['DISCOUNT'] < 0.026570130743706646) & (lineitem['L_ORDERKEY'] != 27) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['RETURNFLAG'] != 'R')][['LINESTATUS', 'SHIPMODE', 'RETURNFLAG', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT', 'SHIPINSTRUCT', 'TAX', 'QUANTITY']]

nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NAME'].str.startswith('C'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] >= 24660) & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] != 77012) & (orders['TOTALPRICE'] != 201251.77929609088) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 2887) | (partsupp['PS_SUPPKEY'] <= 2516) & (partsupp['PS_SUPPKEY'] >= 7152)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] < 22)][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 9) & (partsupp['PS_PARTKEY'] == 35)].merge(part[['P_PARTKEY', 'BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 611.9612274005212) | (partsupp['PS_PARTKEY'] == 40)].merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] <= 11) | (part['SIZE'] >= 40) & (part['BRAND'] == 'Brand#35') & (part['PT_COMMENT'] == 'kag') | (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 25) & (part['TYPE'] != 'M') & (part['SIZE'] <= 27) | (part['P_PARTKEY'] <= 82) | (part['BRAND'].isin(['Brand#51', 'Brand#15', 'Brand#25', 'Brand#55', 'Brand#44']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'F') | (supplier['S_COMMENT'] != 'v') & (supplier['S_SUPPKEY'] > 122) & (supplier['S_NATIONKEY'] <= 6) | (supplier['S_SUPPKEY'] != 93)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_NATIONKEY'] >= 2)].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] != 19)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'v') | (supplier['S_NATIONKEY'] <= 8) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 9)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('17-'))][['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 117) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '2')][['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] > 11) & (nation['N_NAME'].str.startswith('U'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] == 'l')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'] == 'K')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'i') | (customer['C_PHONE'] != '3') | (customer['C_ADDRESS'] != 'p') & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_NATIONKEY'] < 4) & (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'a')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'h') & (customer['C_ACCTBAL'] != 9584.233119646868) | (customer['C_CUSTKEY'] > 60) & (customer['C_ADDRESS'].str.startswith('n')) & (customer['C_NATIONKEY'] <= 8)][['C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'p') & (customer['C_NATIONKEY'] >= 0) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 38) & (customer['C_ADDRESS'] == 'b') & (customer['C_ACCTBAL'] <= 6851.0602980779795)].merge(nation[(nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 47) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] != 4) | (nation['N_NAME'] != 'B')].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'] == 'M') | (region['R_NAME'] == 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 98) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) & (customer['C_ADDRESS'] != 'q') & (customer['C_CUSTKEY'] < 60)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 3) | (customer['C_NATIONKEY'] < 15) | (customer['C_ACCTBAL'] <= 6933.602024304714)][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 13) | (nation['N_NATIONKEY'] < 16) & (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] != 's')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 16)].merge(part[(part['P_NAME'] == 'a') & (part['P_PARTKEY'] != 81) & (part['TYPE'] != 'L') & (part['RETAILPRICE'] > 914.4554590067547) & (part['SIZE'] == 13) & (part['TYPE'] == 'STA') & (part['TYPE'].str.startswith('L'))][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.00701323522374705) & (lineitem['QUANTITY'] >= 25) & (lineitem['EXTENDEDPRICE'] > 30566.093915130266)][['L_COMMENT', 'TAX', 'SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE', 'DISCOUNT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 145) & (lineitem['L_COMMENT'] != 'n')].merge(orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] >= 274041.12689160346) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_COMMENT'] == ',') & (orders['O_COMMENT'].str.startswith('k')) | (orders['ORDERDATE'] >= '1998-07-21')][['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP'])) | (lineitem['L_PARTKEY'] < 166401) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['L_PARTKEY'] >= 147257) & (lineitem['RECEIPTDATE'] <= '1992-05-02')][['SHIPINSTRUCT', 'QUANTITY', 'TAX', 'RECEIPTDATE', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER', 'LINESTATUS']].groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'S')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('f')) & (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_COMMENT'].str.startswith('w')) & (customer['C_NATIONKEY'] < 4) & (customer['C_CUSTKEY'] < 95) | (customer['C_ADDRESS'] == 'B')][['C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] <= 699) | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'].str.startswith('o')) & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1998-07-21')][['TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] == 7279.643788289577) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERSTATUS'] == 'F')].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

orders[(orders['TOTALPRICE'] != 158920.23651737953) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['O_COMMENT'].str.startswith('a')) & (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] == 67736) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT', '3-MEDIUM'])) | (orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('p')) | (part['P_PARTKEY'] != 21) & (part['PT_COMMENT'].str.startswith(' fi')) & (part['TYPE'] != 'S') | (part['P_PARTKEY'] != 77)][['SIZE', 'MFGR', 'P_NAME', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_PARTKEY']].groupby(by=['SIZE', 'RETAILPRICE', 'TYPE']).agg('count')

part[(part['P_NAME'] != 't') & (part['BRAND'].isin(['Brand#15', 'Brand#55', 'Brand#41', 'Brand#42', 'Brand#24', 'Brand#52', 'Brand#12', 'Brand#23', 'Brand#54', 'Brand#35', 'Brand#21', 'Brand#32', 'Brand#34', 'Brand#45', 'Brand#33', 'Brand#11', 'Brand#25', 'Brand#51', 'Brand#14', 'Brand#31'])) | (part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] <= 38) & (part['RETAILPRICE'] != 920.0097212095787) & (part['TYPE'] == 'L') | (part['P_NAME'] == 'r') & (part['BRAND'] != 'Brand#41') | (part['BRAND'] != 'Brand#43')][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('the'))].merge(part[(part['P_PARTKEY'] >= 62) | (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] < 37) & (part['SIZE'] <= 10)][['PT_COMMENT', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '13-') | (customer['C_NATIONKEY'] <= 15) & (customer['C_ACCTBAL'] < 925.4653085190187) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] < 7867.669496226796)].merge(nation[(nation['N_NATIONKEY'] == 12)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 10)].merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NAME'] != 'U') | (nation['N_COMMENT'] == 's')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] >= 4)].merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['DISCOUNT'] >= 0.04607129417475765) & (lineitem['DISCOUNT'] == 0.06373750952652313) & (lineitem['LINENUMBER'] >= 4)].merge(orders[(orders['O_ORDERKEY'] > 422) | (orders['O_CUSTKEY'] == 70029)].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('f')) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_SUPPKEY'] <= 3836) | (lineitem['L_ORDERKEY'] != 66) & (lineitem['DISCOUNT'] == 0.0829624222234985) & (lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_COMMENT'].str.startswith(' re')) & (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['QUANTITY'] >= 37)].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['TAX', 'SHIPMODE', 'L_PARTKEY', 'EXTENDEDPRICE', 'L_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] == 7349) & (partsupp['PS_SUPPKEY'] <= 63) & (partsupp['PS_SUPPKEY'] != 4355)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['SIZE'] >= 23) | (part['P_NAME'].str.startswith('lin'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] > 60) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'BUILDING'])) & (customer['C_ACCTBAL'] == 5025.109369179792) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] == 'T') & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ADDRESS'].str.startswith('z'))].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'] == 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_ADDRESS'] == 's') | (customer['C_ACCTBAL'] == 8462.411143885975) & (customer['C_CUSTKEY'] > 98) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_PHONE'].str.startswith('25-'))].merge(nation.merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] == 13)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] < 265454.75088539394) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] != 135786) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ACCTBAL'] <= 2895.5378983790333) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] >= 3) & (customer['C_ACCTBAL'] != 2876.118836065786) & (customer['C_CUSTKEY'] <= 92)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] == 957.5666222751714) | (part['PT_COMMENT'] != 'f') & (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'P') & (part['BRAND'] != 'Brand#23') | (part['CONTAINER'].str.startswith('WRAP'))][['BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['P_NAME', 'BRAND', 'SIZE', 'P_PARTKEY', 'TYPE']).agg('count')

partsupp.merge(part[(part['P_NAME'] == 'h') | (part['CONTAINER'] == 'JUMBO') | (part['P_NAME'] != 'o') & (part['RETAILPRICE'] >= 913.5242015210495) | (part['P_PARTKEY'] <= 6)][['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] >= 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 33) & (partsupp['PS_SUPPKEY'] == 2805) & (partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['SUPPLYCOST'] < 43.4340847568382) & (partsupp['PS_PARTKEY'] != 38)].merge(part[(part['TYPE'] != 'STA') & (part['RETAILPRICE'] <= 1093.80616346668) | (part['BRAND'] != 'Brand#32') | (part['BRAND'] == 'Brand#15') | (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'].str.startswith('lin'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'RETAILPRICE', 'MFGR']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] > 15) & (partsupp['PS_PARTKEY'] == 18) | (partsupp['SUPPLYCOST'] < 989.664966186777)].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] > 50) | (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] == 146) & (part['PT_COMMENT'] != 'ly ')][['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] < 12) | (part['MFGR'] == 'Manufacturer#4') & (part['SIZE'] == 15) & (part['P_PARTKEY'] <= 95) | (part['PT_COMMENT'] == 'the') | (part['BRAND'].isin(['Brand#25', 'Brand#33', 'Brand#43', 'Brand#23', 'Brand#51', 'Brand#55', 'Brand#54', 'Brand#31', 'Brand#32', 'Brand#44', 'Brand#21', 'Brand#24'])) | (part['SIZE'] > 27) | (part['TYPE'] != 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'h') | (supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] == 4) & (supplier['S_NATIONKEY'] != 3) & (supplier['S_ACCTBAL'] > 2170.950974714632)].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] <= 16) | (nation['N_NATIONKEY'] == 9)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != '!') & (supplier['S_NATIONKEY'] <= 21) | (supplier['S_ACCTBAL'] <= 6525.384927292005)].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 11) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != '.') | (supplier['S_ACCTBAL'] > 5942.878912218432) & (supplier['S_PHONE'] != '32-')][['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] < 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 15) | (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders[['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] > 0.09570869428617296) & (lineitem['L_COMMENT'] != 'q') | (lineitem['QUANTITY'] == 30) & (lineitem['TAX'] != 0.044473486532019456) | (lineitem['TAX'] <= 0.004850173640211653) | (lineitem['L_ORDERKEY'] != 84) & (lineitem['L_COMMENT'] == 'h') & (lineitem['DISCOUNT'] == 0.0906316608740815) | (lineitem['TAX'] < 0.022558696522018397)].merge(partsupp[(partsupp['AVAILQTY'] == 8021) & (partsupp['AVAILQTY'] >= 2591) & (partsupp['P_COMMENT'] == 'c')].merge(part[(part['TYPE'] == 'L') | (part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] > 0.09746744149673148) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['L_ORDERKEY'] != 48) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_PARTKEY'] == 3494) | (lineitem['RETURNFLAG'] != 'N')][['TAX', 'EXTENDEDPRICE', 'SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE', 'DISCOUNT', 'L_COMMENT']].groupby(by=['DISCOUNT', 'RECEIPTDATE', 'TAX']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 184) & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['L_SUPPKEY'] < 6045) & (lineitem['L_SUPPKEY'] >= 4938) | (lineitem['TAX'] < 0.03332863374123625) | (lineitem['L_COMMENT'].str.startswith(' ca')) | (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['LINENUMBER'] > 3) & (lineitem['L_COMMENT'] == 'p')].merge(partsupp[(partsupp['AVAILQTY'] < 7594) | (partsupp['PS_PARTKEY'] < 2) | (partsupp['PS_PARTKEY'] != 45) | (partsupp['P_COMMENT'] == 'd')].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') & (lineitem['L_PARTKEY'] == 32131) | (lineitem['EXTENDEDPRICE'] != 26746.807798365837) & (lineitem['LINENUMBER'] >= 2)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'] != 'SMA') & (part['SIZE'] >= 44)][['P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') & (lineitem['L_PARTKEY'] == 73132) | (lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['TAX', 'L_PARTKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'RECEIPTDATE', 'SHIPDATE']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'LINENUMBER', 'RECEIPTDATE', 'COMMITDATE', 'QUANTITY', 'L_PARTKEY', 'DISCOUNT', 'TAX', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] != 2215) | (partsupp['P_COMMENT'] == ',')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY', 'RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['ORDERSTATUS'] == 'F') & (orders['CLERK'] == 'C') & (orders['O_COMMENT'] == ' ') | (orders['ORDERSTATUS'] == 'O') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '1') & (customer['C_PHONE'] == '22-') | (customer['C_COMMENT'] != 'c') & (customer['C_NATIONKEY'] == 18)][['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] == 'n') & (orders['O_COMMENT'] == 'y') & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] >= 209200.6505431789) | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] == 311967.5433853024) & (orders['TOTALPRICE'] <= 25087.557954739663) & (orders['O_ORDERKEY'] == 258)][['TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] < 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13')][['O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('.')) | (orders['O_ORDERKEY'] != 725) | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] != '2-HIGH')][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] == '5-LOW')][['O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] <= 6) & (nation['N_NATIONKEY'] > 19)].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] > 205) | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] > 682)].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 790.6515790193458) & (partsupp['PS_SUPPKEY'] <= 1195) & (partsupp['PS_PARTKEY'] >= 32) | (partsupp['PS_SUPPKEY'] < 3683)].merge(part[(part['PT_COMMENT'].str.startswith('y')) & (part['SIZE'] != 13) & (part['P_PARTKEY'] < 68) & (part['RETAILPRICE'] <= 937.485331506598) & (part['CONTAINER'] != 'LG')][['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'] != 'e') | (nation['N_NAME'] == 'E')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 4256.13324893937)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 99) & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] != 'B') & (nation['N_NAME'] == 'U') | (nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] <= 1502.1428054277048) & (customer['C_CUSTKEY'] == 16) & (customer['C_COMMENT'] == 'g')].merge(nation[(nation['N_NATIONKEY'] > 9)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 20)][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_COMMENT'] != ' ') | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 6) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] <= 4) | (customer['C_ADDRESS'].str.startswith('O')) & (customer['C_PHONE'] == '3') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] < 10) | (nation['N_NATIONKEY'] > 14) | (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_ORDERKEY'] == 144) & (lineitem['L_PARTKEY'] > 187745) | (lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'MAIL', 'RAIL', 'FOB', 'SHIP'])) | (lineitem['TAX'] == 0.06769613703270252) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')].merge(partsupp[(partsupp['P_COMMENT'] == ';')].merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] <= 48352.591638436475) | (orders['O_COMMENT'] != 'c') | (orders['O_COMMENT'] != 't') | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'].str.startswith('y')) & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_PHONE'] != '13-') & (customer['C_COMMENT'] == 'f')][['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['O_ORDERKEY'] >= 697) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] == ' re') & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 149) | (orders['TOTALPRICE'] <= 233246.37126269878) | (orders['O_CUSTKEY'] < 62827)].merge(customer[(customer['C_ADDRESS'] != 'q') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] != 4099.452866912949) & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'd') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 7) | (customer['C_NATIONKEY'] == 10)][['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0)][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5064) | (partsupp['SUPPLYCOST'] >= 32.448783561176405) & (partsupp['PS_PARTKEY'] > 35)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[(part['SIZE'] != 46) & (part['RETAILPRICE'] >= 1017.0482132137104) | (part['P_PARTKEY'] == 24) & (part['TYPE'] == 'STA') & (part['PT_COMMENT'] == 'e') & (part['CONTAINER'].str.startswith('JUMBO'))][['P_PARTKEY', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 174.570107076265) & (partsupp['AVAILQTY'] > 6115) | (partsupp['PS_PARTKEY'] >= 32) | (partsupp['SUPPLYCOST'] >= 803.4134318702205) | (partsupp['PS_SUPPKEY'] <= 5210)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_NAME'].str.startswith('t')) | (part['PT_COMMENT'].str.startswith('b')) | (part['RETAILPRICE'] != 1080.8555877394099) & (part['TYPE'] != 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT']).agg('count')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['TYPE'].str.startswith('M')) & (part['P_PARTKEY'] > 23) | (part['BRAND'].isin(['Brand#55', 'Brand#24', 'Brand#42', 'Brand#13', 'Brand#35', 'Brand#11', 'Brand#33', 'Brand#34', 'Brand#23', 'Brand#21', 'Brand#41', 'Brand#12', 'Brand#32', 'Brand#44']))][['MFGR', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'G') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] != 14) & (nation['N_NATIONKEY'] <= 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 184) & (supplier['S_NATIONKEY'] > 17) | (supplier['S_ACCTBAL'] == 4925.310798061013)].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] != 'p') | (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] <= 13)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] < 121) & (supplier['S_SUPPKEY'] == 169)][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] > 22) & (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] > 19)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 3065.641099579768) & (customer['C_ADDRESS'] != 'e') & (customer['C_NATIONKEY'] > 18) | (customer['C_CUSTKEY'] <= 17) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] == '22-')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 50) & (orders['O_CUSTKEY'] > 149536) & (orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] <= 468) | (orders['O_COMMENT'] == 'c') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'] == 'O')].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 13) & (customer['C_COMMENT'].str.startswith('l'))][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['AVAILQTY'] < 4393) | (partsupp['PS_SUPPKEY'] > 2717) & (partsupp['PS_SUPPKEY'] != 4525)].merge(part[(part['PT_COMMENT'] != 'w') | (part['RETAILPRICE'] != 1061.5729067810307) | (part['RETAILPRICE'] != 1092.9067511709673) | (part['SIZE'] != 11) & (part['SIZE'] < 7) & (part['TYPE'] == 'E') | (part['P_NAME'] != 'l')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['QUANTITY'] > 31) | (lineitem['EXTENDEDPRICE'] < 40207.20872211877) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_SUPPKEY'] != 9750)].merge(partsupp[(partsupp['P_COMMENT'] != ',')][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_PARTKEY'] == 13980) | (lineitem['DISCOUNT'] < 0.009128790949105804) | (lineitem['SHIPMODE'].isin(['AIR', 'FOB'])) & (lineitem['L_SUPPKEY'] != 4623) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_COMMENT'] != 'u') | (lineitem['L_SUPPKEY'] == 720)].merge(partsupp[(partsupp['AVAILQTY'] != 181) & (partsupp['PS_SUPPKEY'] >= 566)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] != 'SHIP') & (lineitem['LINESTATUS'] != 'F') | (lineitem['L_COMMENT'].str.startswith('k')) | (lineitem['QUANTITY'] <= 41) | (lineitem['TAX'] == 0.011911744567850713)].merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['O_ORDERKEY'] != 31) | (orders['O_CUSTKEY'] < 112058) | (orders['O_ORDERKEY'] <= 124) & (orders['O_CUSTKEY'] >= 7600) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERSTATUS'] != 'O')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] <= 212) & (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] != 90785) | (orders['O_CUSTKEY'] == 103209) & (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] == 35871)].merge(customer[(customer['C_CUSTKEY'] > 48)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 43455) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_COMMENT'] != ' ') | (orders['O_COMMENT'].str.startswith(' re')) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 8) & (partsupp['PS_PARTKEY'] == 8) & (partsupp['AVAILQTY'] >= 3850)].merge(supplier[(supplier['S_COMMENT'] == 'd') & (supplier['S_ACCTBAL'] != -100.44596402037223) & (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_NATIONKEY'] < 21)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 26) | (partsupp['SUPPLYCOST'] == 489.2922709006993) & (partsupp['PS_SUPPKEY'] < 5103) & (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_SUPPKEY'] != 6026)].merge(supplier[(supplier['S_NATIONKEY'] < 20) | (supplier['S_ACCTBAL'] >= 5104.3506290370005) | (supplier['S_ACCTBAL'] > 1002.0351212839676) & (supplier['S_ACCTBAL'] >= 2231.594751344326) & (supplier['S_COMMENT'] != 'h')][['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 593) & (partsupp['SUPPLYCOST'] > 870.4070296262727) | (partsupp['PS_PARTKEY'] > 12) | (partsupp['P_COMMENT'] == 'v')][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] != 'SM') & (part['P_NAME'].str.startswith('o')) & (part['P_NAME'].str.startswith('cor')) | (part['RETAILPRICE'] > 997.3617547460912) | (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'] == ' fi')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] < 1738.6354009000115) | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'u') | (customer['C_ADDRESS'] != '3') & (customer['C_NATIONKEY'] > 8)][['C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NATIONKEY'] != 15) | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] == 6) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] == 16) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY']))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] < 182979.07660733734) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] < 58387.246752695355) & (orders['O_COMMENT'].str.startswith('f')) | (orders['O_ORDERKEY'] > 393) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] >= 233234.63147100786) & (orders['O_ORDERKEY'] != 661)][['CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 5740) & (partsupp['PS_PARTKEY'] >= 35)].merge(supplier[(supplier['S_ADDRESS'] != 'd')].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_COMMENT'].str.startswith('c')) | (lineitem['DISCOUNT'] <= 0.09557575714886259) | (lineitem['DISCOUNT'] >= 0.07947287208015713)][['L_PARTKEY', 'TAX', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] <= 263) | (orders['TOTALPRICE'] < 107582.77448081604) & (orders['O_COMMENT'] == 'w') | (orders['O_COMMENT'] == 'x') | (orders['O_ORDERKEY'] <= 167)].merge(customer[(customer['C_ADDRESS'] != 'q') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'h')][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 't')].merge(customer[(customer['C_ADDRESS'] != 'b') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('c')) & (customer['C_COMMENT'] != ' ')].merge(nation[(nation['N_NATIONKEY'] == 7)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 479)].merge(customer[(customer['C_COMMENT'].str.startswith('q')) | (customer['C_ACCTBAL'] != 8108.307118507615) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 41) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 14)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 2977.7635433898167) | (supplier['S_SUPPKEY'] >= 157) | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 121) | (supplier['S_ACCTBAL'] == 3432.7331410723455) | (supplier['S_COMMENT'] != 'x')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 709.4578285968577)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] <= 81) & (supplier['S_COMMENT'] == 'd') & (supplier['S_SUPPKEY'] <= 154) & (supplier['S_ADDRESS'].str.startswith('C')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] == 5967.57744274214) | (supplier['S_PHONE'].str.startswith('3'))][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 71) & (supplier['S_ACCTBAL'] != -451.7310471110263) & (supplier['S_NATIONKEY'] == 21)].merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_COMMENT'] == 'e') | (supplier['S_ADDRESS'].str.startswith('w')) & (supplier['S_PHONE'] == '14-') & (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_ADDRESS'] == 'b')].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 3) & (supplier['S_ADDRESS'] != '3') | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_COMMENT'].str.startswith('!'))][['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] == 4) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_NATIONKEY'] > 20) | (customer['C_ADDRESS'] != 's') | (customer['C_NATIONKEY'] != 16) & (customer['C_ADDRESS'] != 'i')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 3001) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['RETURNFLAG'] == 'N')][['QUANTITY', 'RETURNFLAG', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'LINENUMBER', 'TAX', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp.merge(part[['TYPE', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['L_ORDERKEY'] == 21) & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['QUANTITY'] < 38) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['SHIPMODE'] != 'TRUCK')].merge(partsupp.merge(supplier[(supplier['S_COMMENT'] != 'the')].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPMODE', 'LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('are')) | (partsupp['PS_SUPPKEY'] == 2907) & (partsupp['P_COMMENT'] != 'u') | (partsupp['AVAILQTY'] == 1283) | (partsupp['PS_PARTKEY'] != 22)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] > 1263.1146138130255)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_NAME'] == 'G') | (nation['N_NAME'] == 'P') & (nation['N_COMMENT'].str.startswith('p'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'] == 'uri') | (orders['O_ORDERKEY'] <= 367) & (orders['O_CUSTKEY'] != 44739) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['F'])) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_ACCTBAL'] < 5138.648876762382) | (customer['C_CUSTKEY'] <= 6) & (customer['C_PHONE'] != '3') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] <= 18) | (customer['C_NATIONKEY'] < 9)][['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'P']))].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 21) & (customer['C_NATIONKEY'] != 21) & (customer['C_ADDRESS'] != 'z') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 4270.640799801354) | (customer['C_COMMENT'] != 'w')].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 20) & (supplier['S_PHONE'] == '14-') | (supplier['S_PHONE'] != '28-') & (supplier['S_COMMENT'] != 'x') | (supplier['S_ADDRESS'] == 'f') & (supplier['S_NATIONKEY'] >= 20) | (supplier['S_ACCTBAL'] > 6240.761615569499)].merge(nation[(nation['N_REGIONKEY'] <= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8111.119082186319) & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 1821.3174760972947) | (customer['C_COMMENT'] != 'k') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_COMMENT'] != 'u') | (customer['C_NATIONKEY'] <= 5) & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_COMMENT'] != 'g') & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '22-')][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] != 49651.90290673213) | (lineitem['L_SUPPKEY'] <= 7976) & (lineitem['QUANTITY'] == 5) | (lineitem['L_ORDERKEY'] >= 175)].merge(orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] >= 242132.15786476526) | (orders['O_COMMENT'].str.startswith('w')) & (orders['TOTALPRICE'] == 48564.32582686588)].merge(customer[['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE']).agg('count')

lineitem[['L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'RECEIPTDATE', 'QUANTITY']].merge(orders.merge(customer[(customer['C_CUSTKEY'] != 34) & (customer['C_ADDRESS'] == 'd') | (customer['C_ADDRESS'] == 'q') | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE']].merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_PHONE'] != '2')].merge(nation[(nation['N_REGIONKEY'] == 3)].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] == 20) | (nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('a'))][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 20) & (supplier['S_NATIONKEY'] != 22) & (supplier['S_SUPPKEY'] <= 172) | (supplier['S_SUPPKEY'] > 170) & (supplier['S_ACCTBAL'] <= 8315.524766450333)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] <= 93693) | (lineitem['LINENUMBER'] == 1) | (lineitem['L_PARTKEY'] > 54704) | (lineitem['L_SUPPKEY'] != 9604) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_SUPPKEY'] == 9750) & (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'TRUCK', 'REG AIR', 'MAIL', 'RAIL'])) | (lineitem['EXTENDEDPRICE'] < 10549.562724931475) & (lineitem['SHIPMODE'].isin(['SHIP'])) & (lineitem['EXTENDEDPRICE'] <= 56313.241510055275)].merge(orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_ORDERKEY'] == 53) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] <= 718) & (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['EXTENDEDPRICE'] <= 65557.57509035141) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['TAX'] > 0.06016334927750846) & (lineitem['QUANTITY'] >= 19) & (lineitem['L_COMMENT'] == ',') & (lineitem['L_SUPPKEY'] != 8514)].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] >= -611.0435968858502) | (customer['C_CUSTKEY'] != 13) & (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 3419) | (partsupp['SUPPLYCOST'] > 756.0691199143406) | (partsupp['PS_PARTKEY'] != 41)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'a')].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'E') | (customer['C_COMMENT'].str.startswith('t'))].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 85979) & (orders['O_COMMENT'].str.startswith('j')) & (orders['O_ORDERKEY'] < 128)][['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] == 6) & (customer['C_PHONE'] == '2') | (customer['C_ACCTBAL'] > 3613.5448624438422) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 16921) & (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] == 15923) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['O_ORDERKEY'] < 325) | (orders['O_ORDERKEY'] <= 96) | (orders['ORDERPRIORITY'] == '5-LOW')][['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('5')) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] == 39) | (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'C')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] <= 2766.9414619174595) & (supplier['S_ACCTBAL'] <= 7596.9299104064785) | (supplier['S_SUPPKEY'] < 160) | (supplier['S_NATIONKEY'] < 1) | (supplier['S_SUPPKEY'] <= 147)][['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 1) | (customer['C_COMMENT'].str.startswith('.')) | (customer['C_ACCTBAL'] > 6750.184501564337) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_ACCTBAL'] < 6889.788119015971) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'].str.startswith('J'))].merge(nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_NAME'] == 'J') & (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 42361.60085307556) & (lineitem['DISCOUNT'] >= 0.018991478193384183) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_SUPPKEY'] < 6824) & (lineitem['SHIPMODE'] != 'AIR') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['LINESTATUS'].isin(['F', 'O']))].merge(orders[(orders['TOTALPRICE'] < 76478.53841092235) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] > 184308.72462108664) | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] == 38527) & (orders['SHIPPRIORITY'] >= 0)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_SUPPKEY'] >= 4407) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_SUPPKEY'] == 6817) | (lineitem['L_PARTKEY'] == 29521) | (lineitem['QUANTITY'] == 42) | (lineitem['L_PARTKEY'] <= 38843)].merge(partsupp[(partsupp['PS_SUPPKEY'] < 1798) & (partsupp['PS_PARTKEY'] <= 4)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('count')

orders[(orders['TOTALPRICE'] >= 150034.31194575218) & (orders['O_ORDERKEY'] < 107)].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('J'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_ADDRESS'] != 'M')].merge(nation[(nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 6665) & (partsupp['PS_SUPPKEY'] < 2490)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'f') | (partsupp['P_COMMENT'].str.startswith('l'))][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('r')) & (supplier['S_COMMENT'] == 'd') | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] == 109) | (supplier['S_NATIONKEY'] >= 8) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '32-')].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 25) | (supplier['S_ACCTBAL'] > 8721.666809207843) | (supplier['S_ACCTBAL'] >= 155.18957148298978) | (supplier['S_SUPPKEY'] == 189) & (supplier['S_ADDRESS'] != 't') & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('F'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 1992.752696909541) & (customer['C_NATIONKEY'] == 11) | (customer['C_COMMENT'] != 't') | (customer['C_ACCTBAL'] <= 2622.1496291371363) | (customer['C_COMMENT'].str.startswith('w')) | (customer['C_NATIONKEY'] != 18)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] > 13)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'COLLECT COD'])) | (lineitem['L_COMMENT'] == 'k') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'REG AIR', 'RAIL', 'MAIL', 'FOB', 'AIR'])) & (lineitem['L_ORDERKEY'] != 79) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['LINENUMBER'] <= 5)][['SHIPMODE', 'LINESTATUS', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 7) & (nation['N_COMMENT'].str.startswith('i'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 13) & (partsupp['SUPPLYCOST'] > 762.2591640818376) | (partsupp['SUPPLYCOST'] < 545.8046239527698) | (partsupp['SUPPLYCOST'] < 811.1948921562255)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'MED') | (part['PT_COMMENT'] == 'o') | (part['RETAILPRICE'] > 1026.8475160280677) | (part['BRAND'].isin(['Brand#54', 'Brand#21', 'Brand#31', 'Brand#34', 'Brand#22', 'Brand#52', 'Brand#25', 'Brand#45', 'Brand#42', 'Brand#13', 'Brand#15', 'Brand#11', 'Brand#32', 'Brand#53', 'Brand#35', 'Brand#24', 'Brand#55', 'Brand#33'])) | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) | (part['TYPE'] != 'E') | (part['SIZE'] < 7)][['PT_COMMENT', 'MFGR', 'CONTAINER', 'TYPE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 3021) | (partsupp['AVAILQTY'] <= 7985) | (partsupp['P_COMMENT'] == ' th') & (partsupp['AVAILQTY'] > 7155)].merge(supplier[(supplier['S_ADDRESS'] != 'w') | (supplier['S_ADDRESS'] == 's') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('y'))][['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 34) | (customer['C_COMMENT'] == 'c') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 21)][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NATIONKEY'] > 9)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 6) & (customer['C_COMMENT'] != 'i') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('Q'))][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 9666) & (partsupp['AVAILQTY'] < 7765) & (partsupp['P_COMMENT'].str.startswith('the'))][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] < 84) | (supplier['S_ADDRESS'].str.startswith('X'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['LINENUMBER'] >= 4) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['DISCOUNT'] == 0.09449877339340525) | (lineitem['L_PARTKEY'] > 47992) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')][['COMMITDATE', 'L_PARTKEY', 'QUANTITY', 'SHIPDATE', 'RECEIPTDATE']].merge(partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 22) | (customer['C_NATIONKEY'] == 2)][['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] != 3569) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] < '1992-01-13')].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] < 51905) | (orders['TOTALPRICE'] >= 51081.83521428293) & (orders['TOTALPRICE'] <= 341172.8292500847)].merge(customer[(customer['C_ADDRESS'].str.startswith('i')) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'] == '9') & (customer['C_ACCTBAL'] == 6428.195743122412) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'q')].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 5) | (nation['N_NATIONKEY'] < 5) | (nation['N_NAME'] == 'U')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 0) & (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 13) & (partsupp['SUPPLYCOST'] >= 209.89141494231788) | (partsupp['PS_SUPPKEY'] < 5340)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] != 'F')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 1708) | (partsupp['AVAILQTY'] == 4074) & (partsupp['PS_PARTKEY'] >= 26) | (partsupp['P_COMMENT'] == 'l') | (partsupp['PS_SUPPKEY'] != 2850)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 4336.7217931661235) | (supplier['S_SUPPKEY'] >= 104) & (supplier['S_SUPPKEY'] > 124) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 16) | (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_ADDRESS'].str.startswith('v'))][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('p')) | (customer['C_PHONE'] != '22-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('o'))][['C_NAME', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 82051.1596620902)][['LINESTATUS', 'RECEIPTDATE', 'DISCOUNT', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPDATE', 'L_SUPPKEY', 'TAX', 'QUANTITY']].merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] == 16)].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('count')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['DISCOUNT'] < 0.031236382599516957) | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['LINENUMBER'] < 3)].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] != 'k') | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPDATE'] >= '1998-10-30')][['L_COMMENT', 'L_SUPPKEY', 'LINESTATUS', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 83.96782203900912) & (partsupp['P_COMMENT'] != 'h')][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['EXTENDEDPRICE'] <= 58091.53147397969) | (lineitem['L_PARTKEY'] >= 26026) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['TAX'] == 0.05783010475503559)].merge(partsupp[(partsupp['SUPPLYCOST'] == 473.41287652805624)].merge(supplier[(supplier['S_SUPPKEY'] >= 146) | (supplier['S_NATIONKEY'] > 17) & (supplier['S_ACCTBAL'] >= 8414.516294477891) | (supplier['S_ADDRESS'].str.startswith('d')) & (supplier['S_PHONE'] == '2') | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT', 'COMMITDATE', 'EXTENDEDPRICE', 'L_ORDERKEY', 'DISCOUNT', 'TAX', 'RECEIPTDATE']].merge(orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O']))][['O_COMMENT', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] > 3) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] < 0)][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 5455)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] != 76) | (supplier['S_ACCTBAL'] > 8616.382121964323) & (supplier['S_ADDRESS'] == 'q') | (supplier['S_SUPPKEY'] < 1)][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 84.6662343805935) & (partsupp['PS_SUPPKEY'] < 3386) | (partsupp['PS_PARTKEY'] > 16)].merge(supplier[(supplier['S_COMMENT'] == 'n') | (supplier['S_SUPPKEY'] == 102) & (supplier['S_NATIONKEY'] > 18) & (supplier['S_COMMENT'] != 'h')][['S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'S') | (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_ACCTBAL'] != 6940.51473346205) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2'))][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 22) & (supplier['S_ADDRESS'] == 'u') & (supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_SUPPKEY'] > 72)][['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 111) | (supplier['S_SUPPKEY'] <= 16)][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'E') & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] > 16) & (nation['N_NATIONKEY'] > 16)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 2) | (customer['C_CUSTKEY'] < 36) | (customer['C_ACCTBAL'] >= 8123.848819323466) & (customer['C_ACCTBAL'] >= 4842.946740995842) | (customer['C_CUSTKEY'] == 72) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] <= 16) & (customer['C_COMMENT'] != 'g')][['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] == 588) & (orders['O_CUSTKEY'] < 20928) & (orders['O_COMMENT'] == 'z') & (orders['O_ORDERKEY'] != 736)][['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] >= 8782.877327087299) | (customer['C_ADDRESS'].str.startswith('7')) | (customer['C_COMMENT'] == 'w') | (customer['C_ACCTBAL'] == 234.84474945292573) | (customer['C_CUSTKEY'] < 41) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_COMMENT'] != 'g') | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['PT_COMMENT'] != 'm') | (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'].str.startswith('L')) & (part['PT_COMMENT'] != 'x') & (part['BRAND'] == 'Brand#25') | (part['P_PARTKEY'] <= 193) & (part['BRAND'] != 'Brand#41') & (part['CONTAINER'] == 'LG')][['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] < 186) & (orders['O_CUSTKEY'] <= 126220) | (orders['O_COMMENT'].str.startswith('f')) | (orders['O_COMMENT'] != 'g') | (orders['O_COMMENT'] == '-') & (orders['TOTALPRICE'] <= 38588.3281514245)][['CLERK', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] >= 9) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 86) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('9'))].merge(nation[(nation['N_NATIONKEY'] != 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_NATIONKEY'] != 8) | (supplier['S_ACCTBAL'] < 3695.4395534186415)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['LINENUMBER'] == 1) & (lineitem['RECEIPTDATE'] > '1992-05-02')][['L_ORDERKEY', 'RECEIPTDATE', 'COMMITDATE', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPINSTRUCT', 'SHIPMODE', 'TAX', 'SHIPDATE']].merge(orders.merge(customer[(customer['C_NATIONKEY'] > 2) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'FOB', 'MAIL', 'RAIL', 'REG AIR'])) & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['LINENUMBER'] >= 3) & (lineitem['QUANTITY'] != 47) | (lineitem['EXTENDEDPRICE'] > 30736.612148036722) | (lineitem['L_ORDERKEY'] != 71) | (lineitem['QUANTITY'] < 24) | (lineitem['DISCOUNT'] >= 0.07625735306758633) & (lineitem['SHIPMODE'] == 'RAIL')].merge(partsupp[(partsupp['PS_PARTKEY'] > 3)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] < 18) | (part['SIZE'] != 28)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'BRAND', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] <= 2938)][['L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'DISCOUNT', 'L_SUPPKEY', 'TAX', 'SHIPDATE', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 1711) | (partsupp['PS_SUPPKEY'] <= 118) & (partsupp['PS_SUPPKEY'] < 264) | (partsupp['P_COMMENT'] != 'c') & (partsupp['PS_PARTKEY'] < 6)].merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY', 'SHIPDATE']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] != 'k') & (part['P_NAME'] == 'lem') & (part['BRAND'] != 'Brand#23') | (part['PT_COMMENT'] == 'e')][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'TYPE', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[['TAX', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['PS_PARTKEY'] > 23)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] >= 16)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['O_CUSTKEY'] <= 61800) | (orders['O_COMMENT'].str.startswith('a')) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_ORDERKEY'] > 771) | (orders['O_CUSTKEY'] == 83561)][['ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_PHONE'] != '3') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] <= 22) & (customer['C_ADDRESS'] != 'r') | (customer['C_PHONE'] != '2') & (customer['C_NATIONKEY'] < 10)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 54678.21463407733) | (orders['O_ORDERKEY'] != 185) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] <= 639) | (orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] != 274) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] != 112653)].merge(customer[(customer['C_ACCTBAL'] >= 3728.7548981792715) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ADDRESS'] == '3') | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 3880.9793393203454) & (customer['C_COMMENT'] != ',') & (customer['C_ACCTBAL'] <= 3750.498734210024) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 1) & (customer['C_PHONE'].str.startswith('27-'))][['C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 8) & (partsupp['PS_SUPPKEY'] == 7500) & (partsupp['PS_PARTKEY'] < 3) & (partsupp['PS_SUPPKEY'] == 1463)].merge(supplier[(supplier['S_ACCTBAL'] > -264.5089137563002) & (supplier['S_ACCTBAL'] < 1696.240199459089)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'].str.startswith('p'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 10) | (supplier['S_ADDRESS'] == 'Q') | (supplier['S_SUPPKEY'] != 196)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 19) & (nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] == 22) & (nation['N_NATIONKEY'] > 13)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != 'z') & (orders['O_COMMENT'] != 'r') | (orders['SHIPPRIORITY'] != 0)][['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] == 19) | (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'].str.startswith('F')) & (customer['C_CUSTKEY'] < 38) | (customer['C_ADDRESS'] == '0') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'] != ',') & (customer['C_PHONE'] == '13-') | (customer['C_NATIONKEY'] != 14) & (customer['C_ADDRESS'] != 'o') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_PHONE'] != '22-')].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 59140.159659377285) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['EXTENDEDPRICE'] < 58229.79807346109) | (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_SUPPKEY'] != 8670)].merge(orders[(orders['O_CUSTKEY'] >= 112025) & (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] != 75382)][['TOTALPRICE', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] != 'g') & (customer['C_NATIONKEY'] != 14) & (customer['C_NATIONKEY'] >= 22) & (customer['C_PHONE'] == '22-') | (customer['C_PHONE'] == '22-')][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'A')][['COMMITDATE', 'L_PARTKEY', 'SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'L_COMMENT', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 826.9526448076505) | (partsupp['SUPPLYCOST'] <= 542.2104643759994)].merge(supplier[(supplier['S_COMMENT'] == ',') | (supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_ACCTBAL'] > 1779.3201656339972) | (supplier['S_ADDRESS'] == 'D') & (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) | (orders['O_COMMENT'] != ' ') | (orders['O_ORDERKEY'] > 198) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] > 157997.97934804345) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERSTATUS'].isin(['O']))].merge(customer[['C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] <= 112299.37234871445) | (orders['TOTALPRICE'] >= 78641.69372885117) | (orders['O_CUSTKEY'] < 63050) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] != 'i') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] == 99714) & (orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] == ',') | (customer['C_ACCTBAL'] == -789.8586360370454) | (customer['C_COMMENT'] == 'r') & (customer['C_ADDRESS'].str.startswith('f')) & (customer['C_CUSTKEY'] < 17)][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] == 50297.360594749785) & (orders['O_CUSTKEY'] > 30690) | (orders['O_ORDERKEY'] <= 124)][['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'AIR') | (lineitem['SHIPMODE'].isin(['AIR', 'RAIL', 'SHIP', 'MAIL', 'REG AIR', 'FOB', 'TRUCK'])) & (lineitem['TAX'] != 0.06567119728581662) & (lineitem['DISCOUNT'] != 0.0785555279788972) | (lineitem['L_PARTKEY'] > 67717) & (lineitem['L_SUPPKEY'] < 6732) & (lineitem['QUANTITY'] < 7) & (lineitem['DISCOUNT'] >= 0.04332499493745989) & (lineitem['EXTENDEDPRICE'] >= 70670.50480748278) | (lineitem['EXTENDEDPRICE'] < 38283.73795207854)].merge(orders[(orders['TOTALPRICE'] == 349518.0037133646) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW', '3-MEDIUM'])) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] != 216) | (orders['TOTALPRICE'] > 126812.85431452548)].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE']].merge(orders[(orders['O_CUSTKEY'] < 23902) & (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] <= 6710.347533900076) | (orders['ORDERSTATUS'] == 'F')][['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] != 8784.74751603583) | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_COMMENT'].str.startswith(',')) | (customer['C_COMMENT'] != 'e') | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != '3')].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'L_COMMENT', 'L_PARTKEY', 'TAX', 'L_ORDERKEY', 'QUANTITY', 'DISCOUNT']].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 840.619589262104) | (customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'].str.startswith('O')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ADDRESS'] == 'D') | (customer['C_ADDRESS'] == 'F') & (customer['C_NATIONKEY'] != 11)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']).agg('count')

lineitem[['TAX', 'LINESTATUS', 'LINENUMBER', 'SHIPDATE', 'L_ORDERKEY', 'QUANTITY', 'COMMITDATE', 'DISCOUNT']].merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'h') | (customer['C_ADDRESS'].str.startswith('O')) | (customer['C_ADDRESS'] == 'M') & (customer['C_ADDRESS'].str.startswith(',')) | (customer['C_COMMENT'] != 'w') | (customer['C_NATIONKEY'] <= 22) | (customer['C_PHONE'] == '3')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['TOTALPRICE'] == 163491.59276034692) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] >= 350062.1225739267) & (orders['O_CUSTKEY'] > 73217) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))][['CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('count')

orders[['O_COMMENT', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] == 'g') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NATIONKEY'] >= 5) & (customer['C_COMMENT'] == 's') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 21) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_NATIONKEY'] <= 14) & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 28828.416430647365) & (lineitem['L_ORDERKEY'] < 35) & (lineitem['TAX'] > 0.06651032270775514) | (lineitem['SHIPMODE'] != 'FOB')][['TAX', 'RETURNFLAG', 'LINENUMBER', 'SHIPDATE', 'SHIPINSTRUCT', 'L_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 22)][['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] <= 112112) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] == 670) | (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 15) & (orders['TOTALPRICE'] != 354494.8308002896)][['O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'].str.startswith('d')) | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] < 53067.62367081902) & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] >= 47372)].merge(customer[(customer['C_PHONE'] != '1') | (customer['C_ACCTBAL'] < 8977.350608153849) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'] != ',')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] != 7104.755958762778)][['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 21) & (nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.032448317098319295) | (lineitem['EXTENDEDPRICE'] <= 3510.80458325742) | (lineitem['DISCOUNT'] >= 0.0038181702111729113) & (lineitem['L_SUPPKEY'] >= 5083) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['RETURNFLAG'] == 'N') | (lineitem['LINESTATUS'] != 'F') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['LINENUMBER'] == 2) | (lineitem['L_ORDERKEY'] >= 16)][['QUANTITY', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPMODE', 'LINESTATUS', 'LINENUMBER']].merge(orders[['CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT']].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['O_CUSTKEY'] == 82198) | (orders['O_COMMENT'] == 'f') & (orders['O_COMMENT'] != 'e') & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] >= 691) & (orders['O_COMMENT'].str.startswith('n')) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] > 123437)][['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] == 4504.069218335329) & (customer['C_COMMENT'] != 'r') & (customer['C_COMMENT'] == 'c') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'k') | (customer['C_NATIONKEY'] > 0)].merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] <= 0) | (nation['N_COMMENT'] == 'u') & (nation['N_NAME'] == 'G')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['EXTENDEDPRICE'] < 37928.095048207986) & (lineitem['DISCOUNT'] < 0.023786642085677736) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['EXTENDEDPRICE'] >= 70094.93397783562) & (lineitem['DISCOUNT'] > 0.024243850889251652) & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINESTATUS'].isin(['O', 'F']))][['SHIPINSTRUCT', 'LINENUMBER', 'RETURNFLAG', 'L_SUPPKEY', 'RECEIPTDATE', 'LINESTATUS']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] == 'a') & (supplier['S_NATIONKEY'] <= 14) & (supplier['S_NATIONKEY'] == 22) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'M') | (supplier['S_NATIONKEY'] != 12) & (supplier['S_ADDRESS'] != '2')][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

lineitem[['L_COMMENT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'COMMITDATE', 'QUANTITY', 'L_ORDERKEY', 'L_SUPPKEY', 'LINESTATUS', 'SHIPMODE', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] > 540.6910401379531) & (partsupp['PS_SUPPKEY'] == 3147) & (partsupp['PS_SUPPKEY'] >= 1066)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#21') | (part['RETAILPRICE'] <= 967.0183927944696) | (part['BRAND'] == 'Brand#33') & (part['P_PARTKEY'] != 47) | (part['RETAILPRICE'] <= 1005.3013611651891)][['P_PARTKEY', 'P_NAME', 'MFGR', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 29) & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['EXTENDEDPRICE'] >= 11942.350337392785) & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_PARTKEY'] <= 47993) | (lineitem['L_ORDERKEY'] != 124) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] != '1992-05-02')][['L_SUPPKEY', 'DISCOUNT', 'COMMITDATE', 'LINENUMBER', 'LINESTATUS']].merge(partsupp.merge(part[(part['P_PARTKEY'] >= 26) & (part['BRAND'] == 'Brand#32') & (part['PT_COMMENT'].str.startswith('f')) | (part['P_NAME'] == 'v') | (part['PT_COMMENT'] == 'p') & (part['MFGR'].isin(['Manufacturer#4'])) & (part['PT_COMMENT'].str.startswith('i')) | (part['P_NAME'] != 'f')][['TYPE', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'TYPE']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'L_SUPPKEY', 'COMMITDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_SUPPKEY'] >= 59) | (supplier['S_SUPPKEY'] <= 181) | (supplier['S_PHONE'] == '14-') & (supplier['S_SUPPKEY'] == 80)][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] != 524) & (orders['O_CUSTKEY'] != 72205) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] == '1998-07-21')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'].str.startswith('p')) | (customer['C_ADDRESS'] == 'd') & (customer['C_NATIONKEY'] < 11) | (customer['C_NATIONKEY'] >= 0) & (customer['C_ACCTBAL'] == 6319.721222627256)].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('R'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.060299710886955946) | (lineitem['L_PARTKEY'] <= 162215)][['SHIPINSTRUCT', 'COMMITDATE', 'SHIPDATE', 'SHIPMODE', 'TAX', 'RETURNFLAG', 'L_ORDERKEY', 'QUANTITY', 'L_COMMENT', 'DISCOUNT']].merge(orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['O_COMMENT'] == 'a') & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] < 623) & (orders['CLERK'].str.startswith('C'))][['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] == 'e') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] > 57) | (customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] > 13) | (customer['C_COMMENT'] == ',')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'SHIPDATE', 'L_SUPPKEY', 'COMMITDATE', 'RETURNFLAG', 'SHIPMODE']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '3') & (supplier['S_NATIONKEY'] > 21) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 156)][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_NATIONKEY'] < 4) | (nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] < 55965.5956413378)][['SHIPMODE', 'TAX', 'RETURNFLAG', 'L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'COMMITDATE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] > 21)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'r') | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE'])) & (lineitem['L_SUPPKEY'] < 4243) & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['LINESTATUS'] != 'F') | (lineitem['L_SUPPKEY'] >= 6366) | (lineitem['LINESTATUS'].isin(['O']))][['RETURNFLAG', 'SHIPMODE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 4) & (supplier['S_NATIONKEY'] <= 9) | (supplier['S_NATIONKEY'] != 10) & (supplier['S_SUPPKEY'] < 146) & (supplier['S_ADDRESS'] == 'r') & (supplier['S_NATIONKEY'] <= 3) | (supplier['S_ADDRESS'] != 'V')].merge(nation[(nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'TAX', 'SHIPDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 52.10437067124796) | (partsupp['AVAILQTY'] != 7785) & (partsupp['PS_SUPPKEY'] == 7120)].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] != 22) | (supplier['S_NATIONKEY'] == 12) | (supplier['S_COMMENT'] == '!') | (supplier['S_PHONE'] == '17-')].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'] != 'c')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] != 14) | (lineitem['DISCOUNT'] == 0.009278690929721112) | (lineitem['EXTENDEDPRICE'] == 4216.30495467896) | (lineitem['TAX'] > 0.042948253764321064) & (lineitem['L_SUPPKEY'] < 2159) | (lineitem['TAX'] >= 0.038111867743737184)][['DISCOUNT', 'TAX', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] <= 60496) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] >= 741) & (orders['O_ORDERKEY'] >= 254) | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] >= 2) | (nation['N_NATIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'QUANTITY', 'COMMITDATE']].merge(orders[(orders['O_ORDERKEY'] != 274) | (orders['O_COMMENT'].str.startswith('x')) | (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] <= 0)][['O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] > 9) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] < 71) | (customer['C_CUSTKEY'] != 57) & (customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] >= 14)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)