customer

lineitem

nation

orders

part

region

supplier

customer[['C_ACCTBAL']]

customer[['MKTSEGMENT']]

lineitem[['DISCOUNT']]

lineitem[['L_COMMENT']]

lineitem[['SHIPINSTRUCT']]

lineitem[['SHIPMODE']]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

orders[['O_ORDERKEY']]

part[(part['P_NAME'] == 't')]

part[(part['SIZE'] == 12)]

partsupp[['PS_SUPPKEY']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'u')]

region[['R_COMMENT']]

region[['R_NAME']]

supplier[(supplier['S_ADDRESS'].str.startswith('D'))]

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']]

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part.groupby(by=['MFGR']).agg('count')

part[(part['BRAND'] == 'Brand#35') & (part['P_NAME'] == 'i')]

part[(part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] < 37)]

part[(part['SIZE'] <= 20) & (part['TYPE'] != 'M')]

part[['BRAND', 'P_NAME']]

part[['CONTAINER', 'P_NAME']]

part[['MFGR', 'PT_COMMENT']]

part[['MFGR', 'P_PARTKEY']]

partsupp[(partsupp['SUPPLYCOST'] < 984.9182044775536) & (partsupp['AVAILQTY'] != 1399)]

partsupp[['P_COMMENT', 'AVAILQTY']]

region.groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] < 1)]

region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'u')]

region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] < 0)]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']]

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ADDRESS'] != 'h')]

customer[(customer['C_CUSTKEY'] < 88) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'].str.startswith('j'))]

nation.groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 'c')]

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']]

part.groupby(by=['CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') | (part['SIZE'] < 19) | (part['BRAND'] == 'Brand#45')]

part[(part['P_NAME'] == 'v') & (part['RETAILPRICE'] <= 998.6894492444932) & (part['BRAND'] != 'Brand#34')]

part[['P_PARTKEY', 'TYPE', 'BRAND']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 2)]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] == 'E') | (region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'AFR')]

region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] != 'g')]

region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] <= 1)]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'l')]

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('AFR'))]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier.groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('count')

supplier[['S_PHONE', 'S_ADDRESS', 'S_COMMENT']]

customer.groupby(by=['C_COMMENT', 'C_NAME', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 14) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_ACCTBAL'] < 6643.655035755996)]

lineitem[(lineitem['SHIPMODE'] != 'AIR')][['LINESTATUS']]

lineitem[['DISCOUNT', 'LINESTATUS', 'RETURNFLAG', 'COMMITDATE']]

lineitem[['RETURNFLAG', 'L_COMMENT', 'SHIPDATE', 'SHIPINSTRUCT']]

orders.merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']]

part.groupby(by=['CONTAINER', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

part.groupby(by=['CONTAINER', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#3')][['PT_COMMENT']]

part[['MFGR', 'SIZE', 'PT_COMMENT', 'BRAND']]

part[['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY']]

supplier.groupby(by=['S_ADDRESS', 'S_NAME', 'S_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']]

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('s')) | (customer['C_COMMENT'] != 'p')][['C_PHONE']]

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_PHONE'] != '1') & (customer['C_ACCTBAL'] >= 1349.1998607798837) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] == 6)]

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

lineitem[['QUANTITY']].groupby(by=['QUANTITY']).agg('min', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders.groupby(by=['TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY']]

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY']]

part.groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']]

part[['CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']]

part[['MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 2689)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 8) & (customer['C_NATIONKEY'] < 21) | (customer['C_NATIONKEY'] >= 3)][['C_PHONE']]

customer[['C_COMMENT', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']]

lineitem.groupby(by=['L_COMMENT', 'SHIPINSTRUCT', 'QUANTITY', 'RETURNFLAG', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_COMMENT'] == 'o') & (lineitem['QUANTITY'] <= 15) | (lineitem['SHIPDATE'] > '1998-10-30')]

lineitem[['LINESTATUS', 'QUANTITY', 'TAX', 'LINENUMBER', 'L_COMMENT', 'SHIPMODE']]

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] <= 3)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] == 9)][['N_COMMENT', 'N_NAME']]

nation[(nation['N_NATIONKEY'] != 16)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] > 4) & (nation['N_NATIONKEY'] == 12)][['N_COMMENT', 'N_NATIONKEY']]

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERDATE']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#54') | (part['RETAILPRICE'] >= 992.112668874728)][['SIZE', 'TYPE']]

part[(part['CONTAINER'] == 'LG')].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['PT_COMMENT'].str.startswith('n'))][['P_PARTKEY', 'PT_COMMENT']]

part[(part['SIZE'] < 3) & (part['P_NAME'] != 'cor') & (part['BRAND'] != 'Brand#15') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) & (part['P_PARTKEY'] == 146) | (part['SIZE'] != 36)]

part[(part['TYPE'] != 'E') & (part['TYPE'] != 'P') & (part['SIZE'] != 39) | (part['BRAND'].isin(['Brand#51', 'Brand#33', 'Brand#24', 'Brand#14', 'Brand#52', 'Brand#53', 'Brand#32', 'Brand#31', 'Brand#15', 'Brand#13', 'Brand#55', 'Brand#21', 'Brand#45', 'Brand#22', 'Brand#43', 'Brand#42', 'Brand#25', 'Brand#23'])) | (part['TYPE'] != 'S') | (part['P_NAME'] == 'n')]

part[['MFGR', 'CONTAINER']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[['MFGR', 'SIZE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']]

part[['P_NAME', 'TYPE']].groupby(by=['TYPE']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'P_NAME']]

region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 2)][['R_NAME']]

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'M')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] == 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('v')) & (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] == 0) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']]

customer[['C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_NAME']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'TAX', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT', 'LINENUMBER', 'RETURNFLAG']]

lineitem[['SHIPDATE', 'DISCOUNT', 'RETURNFLAG']].groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'DISCOUNT']].groupby(by=['SHIPINSTRUCT', 'DISCOUNT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'v') | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY']]

nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] <= 11) | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY']]

nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] == 15) & (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'].str.startswith('l'))].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] != 86) | (part['TYPE'] != 'M') & (part['PT_COMMENT'] != 'y') & (part['P_PARTKEY'] == 17) & (part['MFGR'] != 'Manufacturer#4') & (part['MFGR'].isin(['Manufacturer#1']))]

part[(part['PT_COMMENT'] != 'q') | (part['SIZE'] != 11) & (part['TYPE'] == 'P')].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'bis') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) | (part['BRAND'].isin(['Brand#45'])) & (part['TYPE'].str.startswith('P')) | (part['P_NAME'] != 'p') | (part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'].str.startswith('u'))]

part[['BRAND', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR']]

part[['CONTAINER', 'MFGR', 'RETAILPRICE', 'TYPE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']]

part[['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'MFGR', 'P_NAME']]

part[['TYPE', 'BRAND', 'P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] < 1)].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] != 'l')].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'N')][['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[['S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 6) | (nation['N_NATIONKEY'] < 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'Y') & (customer['C_CUSTKEY'] > 81) | (customer['C_COMMENT'] == 'k') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 51)][['C_ADDRESS']]

customer[(customer['C_COMMENT'] == '.') | (customer['C_PHONE'] == '25-') & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NAME']]

customer[(customer['C_CUSTKEY'] < 58) | (customer['C_CUSTKEY'] == 38) & (customer['C_NATIONKEY'] == 20) | (customer['C_ACCTBAL'] < 3568.6492558041673) | (customer['C_PHONE'] != '3')][['C_ACCTBAL']]

lineitem[(lineitem['L_COMMENT'].str.startswith('q')) | (lineitem['QUANTITY'] >= 7)][['LINENUMBER', 'RETURNFLAG', 'SHIPINSTRUCT', 'RECEIPTDATE']]

lineitem[['DISCOUNT', 'RECEIPTDATE', 'TAX', 'LINENUMBER']].groupby(by=['RECEIPTDATE']).agg('count')

nation[(nation['N_NAME'] == 'B') | (nation['N_NAME'] != 'K') & (nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] > 9)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] < 4)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] <= 66)][['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] == 45) & (customer['C_CUSTKEY'] != 32)][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C'))][['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'h') & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERDATE'] < '1998-07-21')]

orders[(orders['O_COMMENT'] == 'n') & (orders['TOTALPRICE'] < 232398.3235437054) & (orders['O_ORDERKEY'] != 682) | (orders['TOTALPRICE'] != 323103.9103332245)][['ORDERSTATUS', 'O_COMMENT']]

orders[(orders['O_COMMENT'].str.startswith('s')) | (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW', '2-HIGH']))][['ORDERDATE']]

part[(part['BRAND'] != 'Brand#22')][['CONTAINER', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT']]

part[(part['MFGR'] != 'Manufacturer#4')][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']]

part[['BRAND', 'TYPE', 'P_NAME']].groupby(by=['TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'P_NAME']].groupby(by=['MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']]

part[['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE']]

part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'MFGR']]

part[['TYPE', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE', 'MFGR']]

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_NAME'] != 'l')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AME')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] != 1) & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '32-')][['S_NAME']].groupby(by=['S_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'd') & (customer['C_ACCTBAL'] < 6399.566341432551) | (customer['C_CUSTKEY'] < 30)].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 6533.563085215376)][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.060953603453182126) | (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_ORDERKEY'] >= 37)][['SHIPMODE', 'SHIPDATE', 'LINENUMBER', 'L_COMMENT']]

lineitem[['RECEIPTDATE', 'SHIPMODE', 'RETURNFLAG', 'SHIPINSTRUCT']].groupby(by=['RECEIPTDATE', 'RETURNFLAG']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'a') & (nation['N_NAME'] != 'P')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'] != 'K')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 12)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'AFR') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'C_NATIONKEY', 'ORDERSTATUS', 'O_CUSTKEY']).agg('count')

orders.merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 61013) | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['O_COMMENT'] == 'q')].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] == 'Brand#32') | (part['SIZE'] == 21)].groupby(by=['PT_COMMENT', 'CONTAINER', 'P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#15', 'Brand#42', 'Brand#44', 'Brand#41', 'Brand#24'])) | (part['BRAND'].isin(['Brand#31', 'Brand#55', 'Brand#34', 'Brand#12', 'Brand#43', 'Brand#25', 'Brand#32', 'Brand#35', 'Brand#54', 'Brand#14', 'Brand#51', 'Brand#15', 'Brand#52', 'Brand#22', 'Brand#23', 'Brand#42', 'Brand#13'])) | (part['P_PARTKEY'] > 129) | (part['BRAND'] == 'Brand#13') & (part['SIZE'] <= 18) | (part['RETAILPRICE'] == 1064.2601547669417) | (part['TYPE'] != 'M') | (part['P_NAME'] != 's') | (part['SIZE'] == 2)]

part[(part['CONTAINER'] != 'LG')].groupby(by=['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 126) & (part['TYPE'] == 'P') | (part['P_PARTKEY'] == 133) & (part['P_PARTKEY'] >= 90)].groupby(by=['CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'L') & (part['P_NAME'] != 't') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4'])) | (part['PT_COMMENT'] != 'w')].groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'P_NAME', 'TYPE']].groupby(by=['TYPE', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'TYPE']]

part[['RETAILPRICE', 'SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'BRAND', 'CONTAINER', 'TYPE', 'MFGR']]

part[['SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']]

partsupp[(partsupp['AVAILQTY'] != 4272) | (partsupp['PS_SUPPKEY'] <= 399)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 9) | (partsupp['PS_SUPPKEY'] == 4211) | (partsupp['AVAILQTY'] <= 5222) & (partsupp['AVAILQTY'] > 8309) & (partsupp['PS_SUPPKEY'] == 6324)][['AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] >= 677.9252248460956) | (partsupp['PS_SUPPKEY'] != 5612)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('v')) & (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 3) & (nation['N_COMMENT'] == 'p')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] > 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 5818.071798255431) & (supplier['S_NATIONKEY'] > 2) | (supplier['S_ADDRESS'] != 's') | (supplier['S_NATIONKEY'] < 10) & (supplier['S_ADDRESS'] == 'Q') | (supplier['S_PHONE'] != '2')][['S_NAME']]

supplier[(supplier['S_COMMENT'] == 't')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

customer.merge(nation[(nation['N_NATIONKEY'] > 23) | (nation['N_NAME'] == 'V') | (nation['N_NATIONKEY'] == 13)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] > 6) & (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 2416.784451392996)].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'P') & (nation['N_COMMENT'] == 's')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) & (customer['C_NATIONKEY'] >= 0) & (customer['C_ADDRESS'] != ',') | (customer['C_COMMENT'] == 't')][['C_ADDRESS', 'C_COMMENT', 'C_PHONE', 'C_NAME']]

lineitem[(lineitem['EXTENDEDPRICE'] <= 81396.97664475643) & (lineitem['SHIPMODE'] != 'AIR') | (lineitem['EXTENDEDPRICE'] >= 75984.99757944416) | (lineitem['L_SUPPKEY'] > 3815) | (lineitem['LINESTATUS'] == 'F') & (lineitem['L_ORDERKEY'] != 113)].groupby(by=['SHIPDATE']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_REGIONKEY', 'N_COMMENT', 'R_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') | (nation['N_NAME'].str.startswith('F'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] != 'C')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'G') | (nation['N_NAME'] == 'A')].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'ORDERDATE', 'CLERK', 'C_CUSTKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) & (customer['C_PHONE'].str.startswith('1'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] == '5-LOW')][['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[(orders['O_ORDERKEY'] < 600)][['O_ORDERKEY', 'ORDERDATE', 'CLERK']].groupby(by=['CLERK']).agg('count')

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'CLERK']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'e') | (part['P_PARTKEY'] < 101) | (part['MFGR'].isin(['Manufacturer#4'])) | (part['BRAND'] != 'Brand#52') & (part['P_NAME'].str.startswith('lin')) | (part['TYPE'] != 'L')][['PT_COMMENT', 'P_PARTKEY']]

part[(part['PT_COMMENT'].str.startswith('n')) & (part['TYPE'] == 'E') & (part['P_PARTKEY'] <= 74) & (part['P_NAME'] == 't') | (part['TYPE'] == 'SMA') | (part['SIZE'] != 12)].groupby(by=['MFGR']).agg('count')

part[(part['RETAILPRICE'] == 1039.1481702410215) | (part['P_NAME'] == 'd') & (part['TYPE'] != 'M') | (part['CONTAINER'] != 'MED')].groupby(by=['SIZE', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 25) | (partsupp['PS_SUPPKEY'] == 6725) & (partsupp['SUPPLYCOST'] <= 703.6512127013386) & (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['AVAILQTY'] <= 6867)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']]

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] > 32) | (part['CONTAINER'] == 'LG') & (part['BRAND'] != 'Brand#24')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_COMMENT', 'N_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] <= 6) | (nation['N_COMMENT'] != 'h')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NATIONKEY'] < 0) | (nation['N_COMMENT'] != 'l') | (nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > -631.2450940961787) | (supplier['S_ADDRESS'] == 'c')][['S_NAME', 'S_SUPPKEY']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '1') | (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] != 's')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == ' ') & (supplier['S_COMMENT'] == '.') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '28-')][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'] == 'V') & (supplier['S_PHONE'] == '28-') | (supplier['S_PHONE'].str.startswith('14-'))][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 106) & (supplier['S_ACCTBAL'] < 8191.638826301106) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] != '1') & (supplier['S_PHONE'] == '1')].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 174) & (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ACCTBAL'] >= 5995.116860485346)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_COMMENT'] == 'l')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 11) | (nation['N_NATIONKEY'] != 20)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'o') & (customer['C_ADDRESS'] == 'E') | (customer['C_COMMENT'] != 'n') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] < 18) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 77) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 17)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 44) & (lineitem['LINENUMBER'] == 5) & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['TAX'] >= 0.045247807059505825) & (lineitem['RECEIPTDATE'] >= '1998-11-06')].groupby(by=['DISCOUNT', 'SHIPMODE', 'LINESTATUS']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_COMMENT'] != ' ')].merge(region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'P') | (nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] != 12)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] < 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] != 6)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] != 'h') & (nation['N_COMMENT'] != ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY']).agg('count')

orders.merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == ',') | (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('g'))][['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] <= 267516.0432846824) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] <= '1998-07-21')][['ORDERDATE', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] < 52254) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] <= 65136.83658080261) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] > '1998-07-21')][['ORDERPRIORITY', 'ORDERSTATUS']]

orders[(orders['TOTALPRICE'] == 116785.94535455549) & (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] > 62177.96504943136) | (orders['TOTALPRICE'] <= 327483.0055299564)][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'CLERK']].groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#34') | (part['PT_COMMENT'].str.startswith('y')) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5'])) | (part['BRAND'] != 'Brand#55') & (part['TYPE'].str.startswith('M')) | (part['SIZE'] != 22)][['MFGR', 'P_PARTKEY', 'P_NAME']]

part[(part['CONTAINER'] == 'SM')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'P_NAME', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[(part['PT_COMMENT'] == 'l') & (part['P_NAME'].str.startswith('i')) | (part['MFGR'] != 'Manufacturer#2') | (part['P_PARTKEY'] < 11) & (part['SIZE'] != 40)][['SIZE', 'BRAND', 'P_NAME', 'TYPE']]

part[(part['RETAILPRICE'] == 1006.1885992469349) | (part['P_PARTKEY'] <= 52) & (part['SIZE'] < 41) | (part['RETAILPRICE'] > 922.4036105238663) & (part['BRAND'] != 'Brand#52')][['PT_COMMENT', 'TYPE', 'P_NAME', 'BRAND']]

part[['RETAILPRICE', 'SIZE', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['TYPE', 'CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY']].groupby(by=['MFGR', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_NAME'].str.startswith('a'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'o') & (partsupp['SUPPLYCOST'] == 29.597063519729602)][['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] > 16)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('t'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT', 'N_NAME', 'S_NAME']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] <= 11) & (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_ACCTBAL'] >= 9262.540447002606) | (supplier['S_PHONE'] != '26-') | (supplier['S_NATIONKEY'] != 16)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_COMMENT'] != 'bli') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= -46.578537253585296) & (supplier['S_ADDRESS'] == 'X')].merge(nation[(nation['N_COMMENT'] == 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 29) | (supplier['S_ADDRESS'] != 'k') | (supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_SUPPKEY'] < 114)][['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 23) & (nation['N_COMMENT'] != 't')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'N_COMMENT', 'N_NATIONKEY', 'C_PHONE']).agg('min', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('9')) | (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_ADDRESS'] != 'e') | (customer['C_NATIONKEY'] <= 0)][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NAME']]

customer[(customer['C_COMMENT'] == 'p') & (customer['C_ADDRESS'].str.startswith('M')) & (customer['C_PHONE'].str.startswith('27-'))][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] <= 36) | (customer['C_PHONE'].str.startswith('2'))][['MKTSEGMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_NAME']).agg('count')

customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 961.5837764703849) & (partsupp['SUPPLYCOST'] >= 511.11174858960896)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 5288) | (lineitem['L_COMMENT'].str.startswith('u')) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['DISCOUNT'] >= 0.00856250752895228) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['L_PARTKEY'] >= 124800) & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_SUPPKEY'] == 6876) & (lineitem['QUANTITY'] < 23)][['RECEIPTDATE']]

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['L_COMMENT'] == 't') | (lineitem['L_PARTKEY'] >= 170433) | (lineitem['QUANTITY'] <= 8) | (lineitem['EXTENDEDPRICE'] != 68330.20687565445) | (lineitem['LINENUMBER'] <= 2)][['DISCOUNT', 'COMMITDATE', 'QUANTITY', 'LINESTATUS']]

lineitem[['DISCOUNT', 'SHIPMODE', 'RETURNFLAG', 'COMMITDATE', 'L_COMMENT', 'L_PARTKEY', 'SHIPINSTRUCT', 'LINENUMBER']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RETURNFLAG', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'SHIPDATE', 'DISCOUNT']].groupby(by=['RETURNFLAG', 'SHIPMODE', 'COMMITDATE']).agg('count')

nation[(nation['N_COMMENT'] != 'n') & (nation['N_COMMENT'] == 'a')].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'J') & (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('e'))][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 22) & (nation['N_NATIONKEY'] <= 13) | (nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] <= 12)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] == 'F')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '3') & (customer['C_COMMENT'] == 'a')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('n')) | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['TOTALPRICE'] == 173608.20628703074) | (orders['TOTALPRICE'] < 248998.49911117714) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM']))].groupby(by=['ORDERSTATUS', 'ORDERDATE']).agg('count')

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] > 544) | (orders['ORDERSTATUS'] == 'O')][['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] >= '1992-01-13')].groupby(by=['O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') | (part['P_PARTKEY'] == 62) & (part['TYPE'] == 'L') | (part['P_PARTKEY'] < 172) | (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] <= 1022.4430733128419) & (part['PT_COMMENT'] == 'q') & (part['BRAND'].isin(['Brand#44', 'Brand#41', 'Brand#35', 'Brand#45', 'Brand#14', 'Brand#25', 'Brand#12', 'Brand#43', 'Brand#22', 'Brand#52', 'Brand#21', 'Brand#33', 'Brand#24', 'Brand#53', 'Brand#32', 'Brand#55', 'Brand#31', 'Brand#42', 'Brand#23', 'Brand#54']))].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'f') | (part['P_PARTKEY'] != 183) | (part['TYPE'].str.startswith('S')) | (part['P_PARTKEY'] != 166) | (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] < 988.951051295149) | (part['TYPE'] == 'S')][['BRAND', 'P_PARTKEY', 'P_NAME']]

part[(part['P_PARTKEY'] > 53) & (part['CONTAINER'] != 'MED') & (part['TYPE'] == 'P') & (part['TYPE'].str.startswith('P')) & (part['MFGR'] != 'Manufacturer#5')][['RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'TYPE']]

part[(part['P_PARTKEY'] >= 69)][['CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE']]

part[(part['P_PARTKEY'] >= 99) | (part['PT_COMMENT'] == 'c') & (part['TYPE'].str.startswith('SMA')) | (part['SIZE'] < 19) & (part['MFGR'] == 'Manufacturer#2') & (part['RETAILPRICE'] <= 1076.8682399912755) | (part['P_PARTKEY'] > 121) | (part['P_NAME'] != 'b')].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] < 1090.454718819439) | (part['BRAND'].isin(['Brand#52', 'Brand#34', 'Brand#15'])) & (part['P_NAME'] != 'y') | (part['SIZE'] != 2) | (part['P_PARTKEY'] != 86) | (part['RETAILPRICE'] == 903.4384308167913)].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'BRAND']).agg('count')

part[['RETAILPRICE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'SIZE']].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'P_NAME']).agg('count')

part[['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 141) | (partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_PARTKEY'] < 47) & (partsupp['P_COMMENT'] != 'ly ')][['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 366.1483930309873) & (partsupp['PS_SUPPKEY'] == 7365) & (partsupp['SUPPLYCOST'] == 481.42464970167134) & (partsupp['AVAILQTY'] == 4047) | (partsupp['AVAILQTY'] != 2142)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#2')][['P_NAME', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'ASI') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'N_COMMENT', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 6221.2676237472415) | (supplier['S_COMMENT'] != 'al ') | (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_ADDRESS'] == 'k')][['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 8110.836311823389) & (supplier['S_NATIONKEY'] >= 3) | (supplier['S_ACCTBAL'] == 1376.9327108645382)].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] != 17)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] > 8) & (supplier['S_ACCTBAL'] == 9677.120616972536) | (supplier['S_SUPPKEY'] > 83)][['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] >= 30) | (supplier['S_ADDRESS'] == '3') & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ADDRESS']].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] == 4)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 4)].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 13)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 82)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 7071) | (lineitem['L_COMMENT'] == 'n') | (lineitem['DISCOUNT'] == 0.03839375301751537) | (lineitem['L_ORDERKEY'] >= 70) & (lineitem['QUANTITY'] < 42)][['RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINENUMBER', 'QUANTITY', 'L_COMMENT']]

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['L_ORDERKEY'] < 113) | (lineitem['EXTENDEDPRICE'] < 36599.879690236216) & (lineitem['DISCOUNT'] <= 0.002012114926792963) | (lineitem['LINENUMBER'] < 4)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation.merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'R_COMMENT', 'N_REGIONKEY', 'N_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'R_COMMENT', 'N_NATIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'R_COMMENT', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] > 14) & (nation['N_NATIONKEY'] >= 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'egu') & (orders['ORDERDATE'] <= '1992-01-13')][['O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']].groupby(by=['O_COMMENT', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 33268) & (orders['O_CUSTKEY'] != 113359) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'] == 'f') | (customer['C_COMMENT'] != 'n')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 629) | (orders['O_COMMENT'].str.startswith('q')) | (orders['O_COMMENT'] != 'a') & (orders['O_CUSTKEY'] >= 122424) | (orders['CLERK'] != 'C')].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[['ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'] != 'd') & (part['PT_COMMENT'] != 'h') | (part['P_PARTKEY'] != 89) | (part['RETAILPRICE'] == 924.633262550962)].groupby(by=['BRAND', 'P_NAME', 'TYPE', 'MFGR', 'P_PARTKEY']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) | (part['MFGR'] != 'Manufacturer#3')][['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'MFGR']].groupby(by=['P_PARTKEY', 'BRAND']).agg('count')

part[(part['PT_COMMENT'].str.startswith('s')) & (part['MFGR'] != 'Manufacturer#2') & (part['TYPE'].str.startswith('P')) | (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] <= 20) | (part['P_PARTKEY'] != 190) | (part['P_PARTKEY'] <= 5) & (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] != 13)][['P_PARTKEY', 'P_NAME']]

part[['BRAND', 'RETAILPRICE', 'P_NAME', 'SIZE', 'TYPE', 'CONTAINER']].groupby(by=['SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'MFGR', 'BRAND', 'SIZE']].groupby(by=['SIZE', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'] == 'A')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'N_NATIONKEY', 'S_COMMENT', 'S_PHONE', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] == 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] >= 12)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_SUPPKEY'] > 39) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 21)].merge(nation[(nation['N_NATIONKEY'] < 16) | (nation['N_COMMENT'] == 'o') | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('3'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 43) & (supplier['S_ADDRESS'] != 'q') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] > 166) | (supplier['S_ADDRESS'] != 'j') | (supplier['S_ACCTBAL'] > 5113.708327564329)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 6)].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'J')].merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] > 1058.0840246462692) & (customer['C_ADDRESS'].str.startswith('O')) | (customer['C_NAME'] != 'C')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_PHONE'] != '2') & (customer['C_ACCTBAL'] <= 6039.588151166519) | (customer['C_ACCTBAL'] < -736.3452864471158) & (customer['C_NATIONKEY'] <= 20) & (customer['C_PHONE'] != '1') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('c'))][['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']]

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'G')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['LINENUMBER'] < 4) & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['TAX'] != 0.03188000573102756) & (lineitem['DISCOUNT'] > 0.09867297941943591) | (lineitem['RETURNFLAG'] != 'N')][['DISCOUNT', 'RETURNFLAG']].groupby(by=['DISCOUNT']).agg('count')

lineitem[['COMMITDATE', 'L_ORDERKEY', 'TAX', 'LINESTATUS', 'L_COMMENT', 'RETURNFLAG']].groupby(by=['L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE', 'TAX', 'L_COMMENT']).agg('count')

nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] <= 10) & (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 't')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 7) | (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#42') & (part['PT_COMMENT'] != 'c') & (part['RETAILPRICE'] > 943.3729169506748) & (part['BRAND'] == 'Brand#23') | (part['SIZE'] != 14) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1'])) & (part['P_PARTKEY'] >= 139) & (part['TYPE'] != 'SMA') | (part['P_PARTKEY'] <= 180)].groupby(by=['P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('s')) & (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] == 'SM') & (part['P_NAME'].str.startswith('k')) & (part['SIZE'] < 43) & (part['SIZE'] != 13)][['PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'STA') | (part['TYPE'] == 'P') & (part['PT_COMMENT'] == ' fi') & (part['PT_COMMENT'] == 'ly ') | (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] != 155) & (part['P_NAME'] == 'cor') & (part['BRAND'] != 'Brand#21')].groupby(by=['P_PARTKEY', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'E') | (part['P_PARTKEY'] != 141) & (part['P_NAME'] != 'k') | (part['TYPE'] == 'P') | (part['BRAND'].isin(['Brand#14', 'Brand#53', 'Brand#11', 'Brand#55'])) & (part['P_NAME'].str.startswith('cor')) & (part['RETAILPRICE'] <= 1065.5675471838363)][['TYPE', 'MFGR', 'BRAND', 'P_NAME', 'RETAILPRICE']]

part[['BRAND', 'TYPE', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['BRAND', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']).agg('count')

part[['MFGR', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'BRAND']].groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PT_COMMENT', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 6408) | (partsupp['AVAILQTY'] != 3641) & (partsupp['SUPPLYCOST'] < 900.6682527368687) | (partsupp['SUPPLYCOST'] > 304.2360111503059)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] != 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 19)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'N_NATIONKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 6)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'N_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] > 14) | (nation['N_NATIONKEY'] >= 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] > 6844.197619103624) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 164) & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ACCTBAL'] > 8710.704107181617) & (supplier['S_PHONE'].str.startswith('3'))][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] == ',') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 6273.690954198308)][['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

supplier[(supplier['S_COMMENT'] == 'the') | (supplier['S_ACCTBAL'] < 8612.934383281785) | (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] == 'l') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] == 5) & (supplier['S_NAME'] != 'S')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'R_NAME', 'N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 8)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 7150) & (lineitem['LINESTATUS'] == 'F')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.050578189347453346) | (lineitem['LINENUMBER'] == 1) | (lineitem['TAX'] > 0.03567515489163252) | (lineitem['LINESTATUS'] == 'O') & (lineitem['DISCOUNT'] != 0.010117461058829082) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['RETURNFLAG', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT', 'RETURNFLAG']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] != 'P') | (nation['N_NAME'].str.startswith('I'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'R_REGIONKEY', 'N_NATIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'A')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] == 'o')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY', 'N_NAME', 'R_COMMENT', 'N_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_COMMENT'] != 'r') & (nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 129816) & (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] == 33213) & (orders['TOTALPRICE'] > 329117.7599455737)].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['SIZE'] > 8) | (part['P_NAME'] == 'f') | (part['SIZE'] == 24) & (part['BRAND'] != 'Brand#52') & (part['RETAILPRICE'] >= 930.8916060642557) | (part['BRAND'].isin(['Brand#23', 'Brand#53'])) & (part['RETAILPRICE'] < 929.5190600742758) | (part['P_PARTKEY'] >= 28)].groupby(by=['PT_COMMENT', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'u') | (part['P_PARTKEY'] < 45) & (part['P_PARTKEY'] != 182) | (part['CONTAINER'] != 'LG') | (part['TYPE'].str.startswith('S')) & (part['SIZE'] != 3)][['RETAILPRICE', 'BRAND', 'MFGR', 'TYPE', 'P_NAME', 'SIZE', 'CONTAINER']]

part[(part['RETAILPRICE'] >= 1060.1340881110177)][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'TYPE']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['SIZE'] >= 30) | (part['TYPE'] != 'M') | (part['PT_COMMENT'] != 'n') | (part['P_NAME'] == 'p') | (part['BRAND'] == 'Brand#11') & (part['P_PARTKEY'] < 77)][['SIZE', 'BRAND']].groupby(by=['BRAND', 'SIZE']).agg('count')

partsupp.merge(part[(part['PT_COMMENT'] != 'the') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) | (part['P_NAME'] != 'y') & (part['P_PARTKEY'] < 36) & (part['SIZE'] <= 20) & (part['RETAILPRICE'] == 912.9816417442996) & (part['P_PARTKEY'] < 91) | (part['P_NAME'] == 'w')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 9340.662600021946) & (supplier['S_SUPPKEY'] < 30)].merge(nation[(nation['N_COMMENT'] != 's')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= -125.71439396851679) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_ADDRESS'] == 'b') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '14-')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('G'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NAME'] == 'B')].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_CUSTKEY'] != 19) | (customer['C_CUSTKEY'] < 22) | (customer['C_CUSTKEY'] > 47) & (customer['C_NATIONKEY'] == 12)][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

lineitem[(lineitem['TAX'] >= 0.07333877445597298) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['L_COMMENT'] == 'b') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] >= 3710) | (lineitem['L_PARTKEY'] > 10016) | (lineitem['LINENUMBER'] < 4)][['SHIPDATE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'SHIPDATE']).agg('count')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 'o') | (nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'R_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_REGIONKEY', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'C_PHONE', 'ORDERDATE', 'O_ORDERKEY', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] <= 494) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_COMMENT'] != 'j') & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_CUSTKEY'] > 124386)][['ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'y') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 72116)][['O_COMMENT', 'CLERK', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'SHIPPRIORITY', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 49516) | (orders['O_COMMENT'] == 'x') & (orders['O_COMMENT'].str.startswith('-')) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'].str.startswith('j')) | (orders['O_COMMENT'].str.startswith('b')) & (orders['TOTALPRICE'] == 284460.48779197613)][['O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE', 'CLERK']]

part[(part['BRAND'].isin(['Brand#14'])) | (part['CONTAINER'] == 'SM') | (part['BRAND'].isin(['Brand#53', 'Brand#15', 'Brand#23', 'Brand#41', 'Brand#21'])) & (part['MFGR'].isin(['Manufacturer#1'])) | (part['TYPE'] == 'S') & (part['BRAND'] != 'Brand#43') & (part['RETAILPRICE'] != 917.8871967695395)][['MFGR', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 41) | (part['TYPE'] == 'P') | (part['P_PARTKEY'] >= 98) & (part['SIZE'] > 24) & (part['CONTAINER'] == 'JUMBO') & (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] != 1051.1763493002466)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'MFGR']]

part[['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER']].groupby(by=['P_NAME', 'CONTAINER', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'p') & (partsupp['AVAILQTY'] < 9166) | (partsupp['PS_PARTKEY'] > 10) | (partsupp['PS_SUPPKEY'] >= 814)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[['TYPE', 'RETAILPRICE', 'BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] <= 20)].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NAME'] == 'I') | (nation['N_COMMENT'] != 'o') | (nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'N_NATIONKEY', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 8668.46060770401) | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'n') & (supplier['S_ADDRESS'] == 'l') | (supplier['S_ACCTBAL'] > 2104.94890303574) | (supplier['S_COMMENT'] == 's')].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_NATIONKEY'] < 9) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'e') | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'l') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_ADDRESS'] != 'U') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 5)].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'].str.startswith('R'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 20) & (nation['N_NAME'].str.startswith('I'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'C_CUSTKEY', 'C_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 252.44998325320353) | (customer['C_PHONE'] == '27-')].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['L_ORDERKEY'] < 62) & (lineitem['EXTENDEDPRICE'] == 79427.51309778572) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['L_COMMENT'] != ',') & (lineitem['L_COMMENT'].str.startswith('q')) | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['EXTENDEDPRICE'] > 53309.61996528711)].groupby(by=['L_PARTKEY', 'DISCOUNT', 'TAX', 'L_SUPPKEY', 'RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPMODE', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'LINENUMBER', 'P_COMMENT', 'AVAILQTY', 'TAX']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPDATE', 'SHIPMODE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'COMMITDATE', 'QUANTITY', 'EXTENDEDPRICE', 'DISCOUNT']].groupby(by=['SHIPINSTRUCT', 'COMMITDATE', 'SHIPMODE', 'RECEIPTDATE']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] < 22)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] != 8) & (nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'R_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'F') & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] != 'l') & (nation['N_NAME'] != 'K')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_CUSTKEY'] == 12392) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERSTATUS', 'TOTALPRICE']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 51011) | (orders['SHIPPRIORITY'] <= 0)].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] == 123226.59762052547) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE', 'O_CUSTKEY', 'TOTALPRICE', 'C_COMMENT']).agg('mean', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']].groupby(by=['CONTAINER', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'SIZE', 'MFGR', 'BRAND', 'P_NAME', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'TYPE', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 4264) & (partsupp['AVAILQTY'] >= 7393) | (partsupp['PS_SUPPKEY'] >= 685) | (partsupp['SUPPLYCOST'] != 308.2277586468129)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 15)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('v')) & (supplier['S_ACCTBAL'] > 102.46947007737867) & (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1272) & (partsupp['PS_PARTKEY'] > 37) & (partsupp['PS_SUPPKEY'] <= 5775)].merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 497.0481333328044) & (partsupp['PS_PARTKEY'] < 15) & (partsupp['PS_SUPPKEY'] > 4760) & (partsupp['AVAILQTY'] <= 8740) | (partsupp['AVAILQTY'] <= 7724)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 730.2125359717287)].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 1) | (nation['N_NATIONKEY'] == 2) & (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'N_NAME', 'S_PHONE']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_NATIONKEY'] >= 3) | (nation['N_NAME'] == 'M') & (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_NAME', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 4226.142281578024) & (supplier['S_NATIONKEY'] != 7) | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_SUPPKEY'] >= 52)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'o')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_SUPPKEY'] != 20) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_PHONE'] == '26-') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == '3')][['S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 82) | (supplier['S_ADDRESS'] == 'G') | (supplier['S_SUPPKEY'] == 169) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_COMMENT'] == 's') | (supplier['S_ADDRESS'] != '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NAME'].str.startswith('M'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'C_COMMENT', 'N_REGIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_COMMENT', 'C_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 8607.586561111517) & (customer['C_ACCTBAL'] <= 7488.2822883962) & (customer['C_NATIONKEY'] <= 20) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 'o')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 4)].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'C_NATIONKEY', 'N_COMMENT', 'MKTSEGMENT', 'C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') | (customer['C_PHONE'] == '27-') & (customer['C_ACCTBAL'] > 312.7479286202831) | (customer['C_ACCTBAL'] < 5088.340085796224)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 3)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'C_NATIONKEY']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] <= 82) | (lineitem['L_COMMENT'] == ' re') & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['LINENUMBER'] < 4) & (lineitem['SHIPINSTRUCT'] == 'NONE')][['L_COMMENT', 'COMMITDATE', 'TAX', 'LINESTATUS']].groupby(by=['COMMITDATE', 'L_COMMENT', 'LINESTATUS', 'TAX']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPMODE'] == 'RAIL')][['RECEIPTDATE', 'COMMITDATE', 'SHIPDATE', 'QUANTITY', 'SHIPMODE']].groupby(by=['QUANTITY', 'SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE'])) & (lineitem['L_COMMENT'] == 'r') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'REG AIR')][['LINESTATUS', 'COMMITDATE', 'RETURNFLAG', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINENUMBER', 'TAX', 'L_ORDERKEY']]

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] <= 23) & (customer['C_PHONE'] != '27-') | (customer['C_PHONE'] == '13-') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C')][['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_COMMENT'].str.startswith('s')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'] == 'F')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '1-URGENT', '5-LOW'])) | (orders['O_CUSTKEY'] < 44920)][['O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'uri') & (orders['ORDERSTATUS'].isin(['P', 'O']))].merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['RETAILPRICE'] <= 975.2183080767671) & (part['P_NAME'] != 'c') | (part['P_PARTKEY'] < 90) | (part['SIZE'] == 20)][['MFGR', 'TYPE', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'y')][['MFGR', 'SIZE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'MFGR']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'] == 'v')].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'S_NATIONKEY', 'N_NAME', 'N_COMMENT', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == '7') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'N_REGIONKEY', 'S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == '8') & (supplier['S_COMMENT'] != '.') | (supplier['S_COMMENT'] == 'y') & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '28-') & (supplier['S_NATIONKEY'] == 18)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'N_NAME', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_ACCTBAL'] >= 2065.2237873584863) | (supplier['S_PHONE'] == '17-') & (supplier['S_NATIONKEY'] < 3) & (supplier['S_COMMENT'] == 'w') & (supplier['S_ADDRESS'] == '0') | (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] < 15) & (supplier['S_COMMENT'] == ',') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 7887.866229517566)].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] != 'J')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 64) & (supplier['S_ACCTBAL'] < 753.1532602867273) | (supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] != 4) & (supplier['S_COMMENT'] != 'bli') | (supplier['S_NATIONKEY'] != 21)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'U')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'].str.startswith('v'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('L')) | (customer['C_CUSTKEY'] > 94) & (customer['C_PHONE'] == '2') & (customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] == 6575.7634076804725)][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 14) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] >= 19) & (nation['N_NAME'] == 'J') | (nation['N_COMMENT'] != 'y')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 3) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 4) & (customer['C_CUSTKEY'] != 5) & (customer['C_ADDRESS'] == 'K') & (customer['C_COMMENT'] == 'w') | (customer['C_NATIONKEY'] < 16) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] > 13)][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 486.6128120336502) & (partsupp['AVAILQTY'] <= 1624) & (partsupp['AVAILQTY'] < 1425) | (partsupp['PS_PARTKEY'] < 15) & (partsupp['PS_PARTKEY'] > 4)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'F') | (nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] == 11) | (nation['N_NATIONKEY'] <= 14)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] >= 6) | (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] == 'u')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_REGIONKEY', 'N_NATIONKEY', 'N_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 10) & (nation['N_COMMENT'] != 'h')][['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] == 'V')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NATIONKEY', 'N_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] <= 19) | (customer['C_CUSTKEY'] == 30) & (customer['C_CUSTKEY'] <= 91) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ACCTBAL'] > 4336.075589581174) & (customer['C_ADDRESS'].str.startswith('S')) & (customer['C_ACCTBAL'] < 6295.495833470214)][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 583)][['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'CLERK']].groupby(by=['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 587) | (orders['O_CUSTKEY'] >= 84933)].merge(customer[(customer['C_COMMENT'] == ' ')][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) | (part['P_NAME'] == 'c')][['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND', 'TYPE']].groupby(by=['CONTAINER', 'RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 13) | (nation['N_NATIONKEY'] < 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#33', 'Brand#53', 'Brand#52', 'Brand#24'])) | (part['P_PARTKEY'] != 61) | (part['TYPE'] == 'SMA') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1'])) & (part['MFGR'].isin(['Manufacturer#5'])) | (part['RETAILPRICE'] <= 1066.5124904082568)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 431.61925506729017) | (partsupp['P_COMMENT'].str.startswith('c')) | (partsupp['PS_PARTKEY'] < 7) & (partsupp['P_COMMENT'].str.startswith('the'))][['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'PS_PARTKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4345.367584962352) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 20) & (supplier['S_ACCTBAL'] <= 5865.751923032491)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'S_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] != 7) | (supplier['S_COMMENT'] != 'k') & (supplier['S_ADDRESS'] == 'f')].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-')].merge(nation[(nation['N_NATIONKEY'] == 6) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] > 15) & (nation['N_NAME'] != 'K')].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_NATIONKEY', 'N_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'E')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 5) & (nation['N_NATIONKEY'] <= 11) | (nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] >= 3)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 9) & (nation['N_NATIONKEY'] >= 18)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'z') & (customer['C_ACCTBAL'] < 8461.146596941519) & (customer['C_ACCTBAL'] <= 7159.279583231783) | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] > 488.93829840050535)].merge(nation[(nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 34) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] == 'd') | (customer['C_ACCTBAL'] >= 4233.191827948641) & (customer['C_CUSTKEY'] >= 43) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] == 'J')].merge(nation[(nation['N_NATIONKEY'] != 6)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] > 3726.636403502932) & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] != 'y') & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_NATIONKEY'] == 23)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] <= 68) & (customer['C_COMMENT'].str.startswith('q')) | (customer['C_PHONE'] != '27-') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_COMMENT'] != 't') & (customer['C_COMMENT'] == '.') & (customer['C_PHONE'] == '25-')][['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_PHONE']).agg('count')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['TAX'] > 0.029580618137626996) | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPMODE'] == 'REG AIR')][['L_COMMENT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG', 'TAX']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

lineitem[['RECEIPTDATE', 'LINESTATUS', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp.merge(part[['RETAILPRICE', 'P_NAME', 'CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RETURNFLAG', 'COMMITDATE', 'LINENUMBER', 'L_COMMENT', 'SHIPMODE', 'L_PARTKEY', 'RECEIPTDATE', 'L_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETURNFLAG', 'COMMITDATE']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('c'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 17)][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] > 14) & (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] >= 281.3659158430803) | (customer['C_NATIONKEY'] > 22) & (customer['C_ACCTBAL'] >= 5167.134122985182) & (customer['C_CUSTKEY'] < 39)][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 21) | (customer['C_PHONE'] != '18-')][['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'O_CUSTKEY', 'C_COMMENT']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY'])) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == -64.33455432403832)][['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'C_COMMENT', 'C_CUSTKEY', 'ORDERSTATUS']).agg('count')

orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] < 42006) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] >= 143147)].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] < 179248.41495507403) | (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 18) | (orders['TOTALPRICE'] != 124957.43794823595) & (orders['O_CUSTKEY'] < 110050) | (orders['CLERK'] == 'C')][['ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS']).agg('count')

part[(part['BRAND'] != 'Brand#11') & (part['P_NAME'] != 'g') & (part['P_PARTKEY'] <= 128) & (part['P_PARTKEY'] > 97) | (part['BRAND'] == 'Brand#54') & (part['TYPE'].str.startswith('E')) & (part['SIZE'] >= 26)][['BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']].groupby(by=['SIZE']).agg('count')

part[(part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] <= 1052.762772063637) | (part['PT_COMMENT'] == 't') | (part['P_NAME'].str.startswith('blu')) | (part['P_NAME'].str.startswith('bis'))][['P_NAME', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT']].groupby(by=['CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) & (part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_COMMENT'] != ',')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5'])) | (part['RETAILPRICE'] >= 1083.8125643663107) | (part['P_NAME'].str.startswith('lem')) & (part['P_NAME'] == 'v') | (part['BRAND'].isin(['Brand#25'])) & (part['TYPE'] == 'P') & (part['BRAND'] == 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 153) & (supplier['S_COMMENT'] == 'e') | (supplier['S_NATIONKEY'] != 1) & (supplier['S_NATIONKEY'] <= 12)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[['RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 544.4930077447867) & (partsupp['AVAILQTY'] == 8571) | (partsupp['SUPPLYCOST'] > 722.4232729196885) & (partsupp['PS_SUPPKEY'] == 5943) & (partsupp['AVAILQTY'] == 4442)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#14') | (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith(' ')) | (part['CONTAINER'] != 'JUMBO') & (part['P_NAME'].str.startswith('c')) & (part['TYPE'] != 'P') & (part['BRAND'].isin(['Brand#33', 'Brand#25', 'Brand#35', 'Brand#15', 'Brand#11', 'Brand#42', 'Brand#31', 'Brand#43', 'Brand#21', 'Brand#52', 'Brand#32', 'Brand#44', 'Brand#12', 'Brand#45', 'Brand#13', 'Brand#24', 'Brand#41', 'Brand#14', 'Brand#22']))][['RETAILPRICE', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_SUPPKEY', 'R_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'P') & (supplier['S_ADDRESS'].str.startswith(',')) | (supplier['S_ADDRESS'] != 'P')].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'u') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 20) | (supplier['S_NATIONKEY'] < 12) | (supplier['S_SUPPKEY'] == 50) & (supplier['S_SUPPKEY'] == 28) & (supplier['S_ADDRESS'] == 'L')][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 35) & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ACCTBAL'] != 9138.70664937305) & (supplier['S_SUPPKEY'] < 109) & (supplier['S_NATIONKEY'] == 23) & (supplier['S_ADDRESS'] == 'T') | (supplier['S_ADDRESS'] != 'V')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 1868.6214686363933) | (customer['C_NATIONKEY'] > 8) | (customer['C_NATIONKEY'] <= 12) & (customer['C_CUSTKEY'] != 26) & (customer['C_NATIONKEY'] < 15) | (customer['C_ADDRESS'] != 'g')][['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 34) | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_COMMENT'] != 'g') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_PHONE'] == '22-') & (customer['C_ACCTBAL'] == 308.8332931796358) | (customer['C_PHONE'] == '3') & (customer['C_NATIONKEY'] <= 18) & (customer['C_ADDRESS'].str.startswith('I')) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 1258)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] >= 283) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('n')) & (orders['ORDERSTATUS'] == 'O')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINENUMBER', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('k'))], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['EXTENDEDPRICE', 'PS_PARTKEY', 'SUPPLYCOST', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] < 19) & (nation['N_COMMENT'] != 'e')].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'R_NAME', 'N_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'C_PHONE', 'C_NAME', 'O_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'] == 'l') & (orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer[['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'CLERK', 'C_PHONE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 122305) & (orders['ORDERPRIORITY'] != '2-HIGH')][['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'O_COMMENT']).agg('count')

orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] == 'M')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'TOTALPRICE']).agg('max', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#4'])) | (part['RETAILPRICE'] == 1048.4961897421058) & (part['PT_COMMENT'].str.startswith('u')) | (part['CONTAINER'].str.startswith('MED')) | (part['P_PARTKEY'] != 32) & (part['CONTAINER'] != 'LG')][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 6) | (partsupp['AVAILQTY'] <= 2149)].merge(part[(part['BRAND'].isin(['Brand#42', 'Brand#44', 'Brand#12', 'Brand#53', 'Brand#34', 'Brand#13', 'Brand#24', 'Brand#52', 'Brand#23', 'Brand#54', 'Brand#43', 'Brand#21', 'Brand#41', 'Brand#45', 'Brand#33', 'Brand#25', 'Brand#22', 'Brand#11', 'Brand#32', 'Brand#51', 'Brand#35', 'Brand#14', 'Brand#55'])) & (part['CONTAINER'] != 'MED') | (part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'] == 'g') & (part['SIZE'] < 45) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4'])) | (part['P_NAME'] != 'f')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 312.3027447730689) | (partsupp['PS_SUPPKEY'] == 2785) & (partsupp['AVAILQTY'] == 9055) & (partsupp['P_COMMENT'].str.startswith('g'))][['PS_PARTKEY']].merge(part[['P_NAME', 'MFGR', 'BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_ADDRESS'] == 'u') | (supplier['S_ADDRESS'] == 'T')][['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] == 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('7')) & (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] == '17-')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'P')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != '!') | (supplier['S_NATIONKEY'] > 3) & (supplier['S_COMMENT'] != 'u') | (supplier['S_SUPPKEY'] <= 29) | (supplier['S_NATIONKEY'] != 20)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] >= 20)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'C_CUSTKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 20)].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'R_COMMENT', 'C_CUSTKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'M')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('q')) | (customer['C_ACCTBAL'] < 8925.472165098363) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] == 719.0492312651363)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] < 5440.145978451329) | (customer['C_COMMENT'] != 'h')].merge(nation[(nation['N_NATIONKEY'] == 13) & (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] == 22)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['QUANTITY'] <= 31) | (lineitem['DISCOUNT'] != 0.07549905842593813) & (lineitem['SHIPMODE'] == 'REG AIR')][['L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'TAX', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 628.0061215100446)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_SUPPKEY'] >= 5989) & (lineitem['TAX'] <= 0.032739110213155995) & (lineitem['LINESTATUS'] != 'F') | (lineitem['EXTENDEDPRICE'] <= 20064.003913496985) & (lineitem['L_PARTKEY'] != 61830) & (lineitem['RETURNFLAG'] != 'A')][['L_PARTKEY', 'LINESTATUS', 'L_COMMENT', 'DISCOUNT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY', 'L_ORDERKEY', 'SHIPMODE']].groupby(by=['L_ORDERKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] != 'R')].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'R_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_ADDRESS'] == 'z') | (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_CUSTKEY'] < 95) | (customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] == 48)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'N_COMMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'ORDERSTATUS', 'N_NAME', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] > 435) & (orders['O_CUSTKEY'] == 36595) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'] != 'F')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 't') & (customer['C_CUSTKEY'] > 77) & (customer['C_CUSTKEY'] == 64) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != 'c') & (orders['O_COMMENT'] == 'uri') | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] == 298)].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] != 'y') & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '25-') & (customer['C_PHONE'] != '1') | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 10)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] != '1') & (customer['C_PHONE'] != '13-') & (customer['C_COMMENT'] != 'w') & (customer['C_ADDRESS'] != 'z') & (customer['C_PHONE'] == '22-') | (customer['C_PHONE'] != '2') | (customer['C_ACCTBAL'] <= 8601.625858122074)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['PT_COMMENT'].str.startswith('q')) & (part['RETAILPRICE'] >= 1041.7858853344246) & (part['PT_COMMENT'].str.startswith('r')) | (part['P_NAME'].str.startswith('lem')) & (part['P_PARTKEY'] < 194)][['P_PARTKEY', 'MFGR', 'CONTAINER', 'P_NAME', 'TYPE', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'BRAND', 'TYPE', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] == 'lem') & (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 3928.331229593222) | (supplier['S_PHONE'] == '26-') | (supplier['S_NATIONKEY'] == 16)][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] != 970.5880826189094) & (part['SIZE'] != 25) | (part['CONTAINER'] != 'JUMBO') | (part['MFGR'] == 'Manufacturer#4') | (part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('h'))][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] == 'Brand#21') | (part['BRAND'].isin(['Brand#54', 'Brand#51', 'Brand#42']))][['CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NAME'] == 'S')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'w')][['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'E')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] == 1) | (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 69) | (supplier['S_SUPPKEY'] < 156) & (supplier['S_ADDRESS'] == 'e')][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'N_NATIONKEY', 'MKTSEGMENT', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 9938.370719448412) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'c') | (customer['C_COMMENT'] == 's') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] > 13) & (nation['N_NATIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['C_COMMENT'] == 'd') & (customer['C_NATIONKEY'] <= 11) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_PHONE'].str.startswith('13-'))][['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 24) & (customer['C_ACCTBAL'] <= -330.7490782141409) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_CUSTKEY'] != 10) | (customer['C_ACCTBAL'] <= 336.6297589442124)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'N_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] != '9')][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'N_COMMENT', 'N_REGIONKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] <= 0) & (nation['N_NATIONKEY'] > 11)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'C_NAME', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] <= 14387) | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] >= 612) & (orders['O_CUSTKEY'] > 77179) & (orders['TOTALPRICE'] != 60349.79111742649) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH']))].merge(customer[(customer['C_NATIONKEY'] == 12) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'] == 'R')][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] != '1-URGENT')].merge(customer[(customer['C_ADDRESS'] == 'c') | (customer['C_COMMENT'] == 'w')].merge(nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] >= 10)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['O_COMMENT'].str.startswith('u')) | (orders['O_ORDERKEY'] > 228) & (orders['O_CUSTKEY'] <= 105028) | (orders['O_CUSTKEY'] < 138815)][['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(part[['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('V')) & (supplier['S_ADDRESS'] != 'M') | (supplier['S_SUPPKEY'] == 172) | (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#42', 'Brand#45', 'Brand#14', 'Brand#52', 'Brand#21', 'Brand#44', 'Brand#32', 'Brand#53', 'Brand#11', 'Brand#41', 'Brand#54', 'Brand#33', 'Brand#25'])) | (part['RETAILPRICE'] <= 1015.8924545122018) & (part['BRAND'] != 'Brand#43') & (part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PS_PARTKEY', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('x')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] != 4) & (supplier['S_ACCTBAL'] < 6415.084694337166) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'es ')].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] != 4)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 3989) | (partsupp['P_COMMENT'] == 'x') & (partsupp['SUPPLYCOST'] > 373.04899597897867)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 2548) | (partsupp['SUPPLYCOST'] <= 349.843514853778) & (partsupp['P_COMMENT'].str.startswith('l'))][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 451) | (partsupp['P_COMMENT'] != 'are') & (partsupp['AVAILQTY'] > 3789) | (partsupp['SUPPLYCOST'] > 130.25086112520145)].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'MFGR', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_ADDRESS'].str.startswith(',')) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] == 16) & (nation['N_COMMENT'] == 'v')].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_COMMENT'] == 'x') & (supplier['S_NATIONKEY'] <= 0)].merge(nation[(nation['N_NATIONKEY'] <= 12) | (nation['N_NATIONKEY'] > 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'G') | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] == 17)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_PHONE', 'S_NAME', 'N_NAME']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] != 13)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_PHONE', 'S_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 9513.336900986302) | (customer['C_NATIONKEY'] < 14) | (customer['C_COMMENT'].str.startswith(','))].merge(nation[(nation['N_NATIONKEY'] < 19)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'l') & (customer['C_ACCTBAL'] >= 1884.1849509410881) | (customer['C_ACCTBAL'] == 9714.566950098606) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] < 21) & (customer['C_CUSTKEY'] > 12)].merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_NAME'] == 'E')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_CUSTKEY'] > 1234)][['O_COMMENT', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['AVAILQTY', 'O_COMMENT', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'EXTENDEDPRICE', 'L_COMMENT', 'SHIPDATE', 'RETURNFLAG']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'f') | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] == 'b') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'd') | (orders['ORDERSTATUS'] == 'P')][['SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] < 146337) | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 215) & (orders['O_CUSTKEY'] > 73853) & (orders['O_CUSTKEY'] >= 55202)][['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['P_PARTKEY'] < 41) | (part['PT_COMMENT'].str.startswith('e')) | (part['PT_COMMENT'] != 'r') | (part['BRAND'].isin(['Brand#33', 'Brand#14', 'Brand#51', 'Brand#53', 'Brand#55', 'Brand#15', 'Brand#35', 'Brand#45', 'Brand#44', 'Brand#31', 'Brand#42', 'Brand#13', 'Brand#41', 'Brand#23', 'Brand#24', 'Brand#12', 'Brand#34', 'Brand#52', 'Brand#32', 'Brand#11', 'Brand#22'])) & (part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] < 1085.316509741727) & (part['SIZE'] >= 20) & (part['BRAND'] == 'Brand#44')][['BRAND', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] == 143) & (part['SIZE'] < 8) | (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'] != 'Brand#43') | (part['RETAILPRICE'] < 920.1786161462338)][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 7612)].merge(part[(part['BRAND'].isin(['Brand#45', 'Brand#11', 'Brand#52'])) & (part['PT_COMMENT'] != 't') & (part['P_NAME'] == 'n') & (part['TYPE'] != 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('V'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'u') & (partsupp['AVAILQTY'] <= 3243)][['PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'SM') | (part['P_PARTKEY'] == 70) & (part['RETAILPRICE'] == 998.9186689064933) & (part['P_NAME'] == 'h') | (part['P_PARTKEY'] != 147) | (part['P_PARTKEY'] != 33) & (part['BRAND'].isin(['Brand#15', 'Brand#12', 'Brand#11', 'Brand#13', 'Brand#23', 'Brand#51', 'Brand#32', 'Brand#21', 'Brand#53', 'Brand#54', 'Brand#41', 'Brand#45', 'Brand#52', 'Brand#33']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 664.330403567948) | (partsupp['AVAILQTY'] > 9016) | (partsupp['P_COMMENT'] == 'x')].merge(part[(part['SIZE'] > 41)][['P_PARTKEY', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] == '17-') | (supplier['S_COMMENT'] != 'v') & (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_SUPPKEY'] <= 75) & (supplier['S_NATIONKEY'] < 11) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] == 'J')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] < 2467.565083991163)].merge(nation[(nation['N_NATIONKEY'] != 7) & (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] != 21)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'N_REGIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '25-') | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_ACCTBAL'] > 290.98755633730866) | (customer['C_PHONE'].str.startswith('27-'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] == 824.4232388908295) & (customer['C_NATIONKEY'] != 6) | (customer['C_NATIONKEY'] > 7) & (customer['C_COMMENT'] == 'a') | (customer['C_ACCTBAL'] < 2391.6606053938744)].merge(nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_REGIONKEY', 'N_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 19) | (customer['C_PHONE'] != '18-')][['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'] != 'i')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_COMMENT'] == 'r')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY']).agg('count')

lineitem.merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['AVAILQTY'] <= 3342) & (partsupp['AVAILQTY'] < 9184)][['PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['QUANTITY'] <= 11) & (lineitem['L_PARTKEY'] <= 175081) & (lineitem['QUANTITY'] < 17) & (lineitem['DISCOUNT'] > 0.05024256214167414) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_COMMENT'].str.startswith('o')) | (lineitem['L_PARTKEY'] < 65418)][['LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'COMMITDATE', 'L_COMMENT', 'LINESTATUS', 'TAX']].groupby(by=['EXTENDEDPRICE', 'LINENUMBER', 'L_COMMENT', 'TAX']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'DISCOUNT', 'L_COMMENT', 'SHIPMODE', 'SHIPINSTRUCT', 'TAX']].merge(orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 580.2636162721917) & (partsupp['SUPPLYCOST'] > 44.713893017776684)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_ORDERKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'L_COMMENT', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 483.04466940418746) | (partsupp['PS_PARTKEY'] <= 39) & (partsupp['PS_SUPPKEY'] < 3849) | (partsupp['AVAILQTY'] < 3375) & (partsupp['AVAILQTY'] == 1706)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_PHONE'] != '18-')][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 124097) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['C_NATIONKEY'] > 0) | (customer['C_ADDRESS'] != 'L') | (customer['C_CUSTKEY'] > 29) & (customer['C_ADDRESS'] != 'w') | (customer['C_COMMENT'] == ',') | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_NATIONKEY'] > 17)].merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 148392) | (orders['O_ORDERKEY'] > 369) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['TOTALPRICE'] == 105139.61168696547) & (orders['TOTALPRICE'] == 97790.19452468227) | (orders['CLERK'] != 'C')][['SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['CLERK', 'C_ADDRESS', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 105102.34189327838) | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] == 666)][['TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']).agg('count')

orders[['ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] == 'n') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] >= 92)].merge(nation[(nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE'])) & (customer['C_ACCTBAL'] == 3613.9081717303143) & (customer['C_ADDRESS'].str.startswith('u')) | (customer['C_ACCTBAL'] == 6297.035983405847)][['MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_ADDRESS'] == 'g') | (supplier['S_NATIONKEY'] >= 7) & (supplier['S_SUPPKEY'] >= 37) | (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_PHONE', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1739) & (partsupp['PS_SUPPKEY'] > 2362)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 18) | (nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] < 16) | (nation['N_NAME'] != 'I')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] == 'WRAP') & (part['PT_COMMENT'] == 'ly ') & (part['PT_COMMENT'] == 'kag') & (part['SIZE'] < 43) & (part['PT_COMMENT'] != 'o') & (part['P_NAME'] == 'y')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'bli') & (partsupp['SUPPLYCOST'] > 496.34597664446795) | (partsupp['PS_SUPPKEY'] >= 4345)][['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 537.9087192440084) & (supplier['S_ADDRESS'] != '1') & (supplier['S_NATIONKEY'] < 8) | (supplier['S_COMMENT'] == 't')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] == 2197.5956372030187) & (supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8369.96194058178) & (supplier['S_NATIONKEY'] >= 14)][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'a') & (supplier['S_ACCTBAL'] >= 2211.367894245831) & (supplier['S_NATIONKEY'] > 19) & (supplier['S_COMMENT'] == 'the')].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '3') | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 170)][['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_NATIONKEY'] < 12) & (nation['N_COMMENT'] != 'c')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != '5') | (supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] == '6') & (supplier['S_ACCTBAL'] == 7330.158108018205)][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'N_NATIONKEY', 'N_NAME', 'S_ADDRESS', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 6968.765499876419) | (customer['C_COMMENT'] != 'g') & (customer['C_ACCTBAL'] > 1119.623720275211)][['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 17) | (nation['N_NATIONKEY'] != 23) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 21) & (customer['C_ACCTBAL'] != 3073.748945003463) | (customer['C_CUSTKEY'] > 15) & (customer['C_COMMENT'] != ',') | (customer['C_PHONE'] != '2')][['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] >= 15) | (customer['C_COMMENT'] != 'y') | (customer['C_ADDRESS'] == 'v')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'C_NATIONKEY', 'C_NAME', 'R_COMMENT', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_COMMENT'] == 'l') | (customer['C_COMMENT'] != 's') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] > 18) | (nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] != 5213.155002466531) | (customer['C_NATIONKEY'] != 17) & (customer['C_ADDRESS'] != 'w') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '22-') | (customer['C_ADDRESS'] == 'E')].merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_NAME'] != 'F')].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_CUSTKEY', 'N_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] != 'P')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_NATIONKEY', 'C_NAME', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['P_PARTKEY'] != 109) | (part['BRAND'].isin(['Brand#31', 'Brand#45', 'Brand#23'])) & (part['BRAND'] == 'Brand#52')][['P_PARTKEY', 'BRAND', 'MFGR', 'CONTAINER', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['BRAND', 'P_NAME', 'P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 48) | (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] <= 9832.881113428213) & (customer['C_COMMENT'] == 'u')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM'])) | (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] != ',')].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] != 'r')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] > 90840) | (orders['O_ORDERKEY'] <= 790) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] == 256890.35802557366) | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_CUSTKEY'] > 53) | (customer['C_ADDRESS'].str.startswith('l')) & (customer['C_CUSTKEY'] != 94)][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 19) | (nation['N_COMMENT'] == 't')].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['SIZE'] == 36) & (part['TYPE'].str.startswith('E')) & (part['BRAND'] == 'Brand#51') & (part['SIZE'] != 41) & (part['BRAND'].isin(['Brand#35', 'Brand#32', 'Brand#23', 'Brand#34', 'Brand#13', 'Brand#15', 'Brand#12', 'Brand#14', 'Brand#25', 'Brand#52', 'Brand#11', 'Brand#41', 'Brand#31', 'Brand#42'])) | (part['PT_COMMENT'].str.startswith('ss ')) | (part['BRAND'] != 'Brand#35')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_SUPPKEY'] != 111) & (supplier['S_SUPPKEY'] != 145) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= -76.51644901656721) | (supplier['S_PHONE'] == '3')].merge(nation[(nation['N_NATIONKEY'] != 10)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'N_NATIONKEY', 'R_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] == 5) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] > 11)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'V') | (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['P_COMMENT', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'RETURNFLAG', 'LINENUMBER', 'L_COMMENT', 'L_ORDERKEY']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['PS_SUPPKEY', 'L_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'RETURNFLAG']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 145986) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] != 19513) | (orders['ORDERPRIORITY'].isin(['2-HIGH']))].merge(customer[(customer['C_COMMENT'] == 'i') & (customer['C_COMMENT'] == 'p') & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'C_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'CLERK']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 117941) | (orders['O_ORDERKEY'] > 319) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_ORDERKEY'] > 408) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] != 654)].merge(customer[(customer['C_NATIONKEY'] < 14) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] <= 2404.623938904573) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'BUILDING'])) & (customer['C_COMMENT'] != 'n') & (customer['C_NATIONKEY'] > 3)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'MKTSEGMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ADDRESS'] != 'n') | (customer['C_ACCTBAL'] != 9402.659445631167) | (customer['C_CUSTKEY'] >= 62) | (customer['C_NATIONKEY'] > 11)][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'C_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'SIZE', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'SUPPLYCOST']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ACCTBAL'] != 7604.965854465191) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '28-') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] >= 111)].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'] == 'I')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

lineitem[(lineitem['LINENUMBER'] > 5) | (lineitem['L_COMMENT'] != 'o') | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['L_PARTKEY'] >= 118326) & (lineitem['EXTENDEDPRICE'] != 73995.08750922664) | (lineitem['DISCOUNT'] == 0.026200457686348877) | (lineitem['TAX'] != 0.0689217513296687) & (lineitem['LINENUMBER'] == 3)][['L_SUPPKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'QUANTITY', 'DISCOUNT', 'L_COMMENT', 'SHIPMODE', 'SHIPDATE', 'TAX']].groupby(by=['TAX', 'L_ORDERKEY', 'L_SUPPKEY', 'QUANTITY', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'L_SUPPKEY', 'QUANTITY', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 782) | (partsupp['AVAILQTY'] < 8699) | (partsupp['AVAILQTY'] == 3084)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[(customer['C_NATIONKEY'] >= 1) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 82) | (customer['C_NATIONKEY'] != 6)].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NATIONKEY'] <= 9)].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 'o') | (orders['ORDERSTATUS'] == 'F') & (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] == 37084) | (orders['SHIPPRIORITY'] != 0)][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_COMMENT'] == 'h')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_NAME', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 112) & (supplier['S_NATIONKEY'] > 18)].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_NAME'] == 'G') & (nation['N_COMMENT'].str.startswith('c'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'N_NAME', 'S_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 19) | (customer['C_ACCTBAL'] != 8435.620508872766) | (customer['C_PHONE'] != '3') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] >= 25) & (customer['C_COMMENT'] != 'q') & (customer['C_PHONE'] != '25-') | (customer['C_ACCTBAL'] == 1232.1916969152003)][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('p'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp.merge(part[(part['P_PARTKEY'] >= 165) | (part['PT_COMMENT'] == 'q') | (part['TYPE'] != 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 4) | (partsupp['SUPPLYCOST'] < 666.0532457718812) | (partsupp['P_COMMENT'] == 'u') & (partsupp['P_COMMENT'] == 'j')][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('t'))][['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 19) | (lineitem['L_SUPPKEY'] > 8266) | (lineitem['LINENUMBER'] > 1) | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['QUANTITY'] >= 16)][['RETURNFLAG', 'DISCOUNT', 'LINESTATUS', 'EXTENDEDPRICE', 'L_SUPPKEY', 'TAX', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_PHONE'] == '1')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] == 0.03210261388443981) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_COMMENT'].str.startswith('c')) & (lineitem['EXTENDEDPRICE'] >= 5222.643829968616) | (lineitem['EXTENDEDPRICE'] <= 42973.916723427195) & (lineitem['LINENUMBER'] == 4)].merge(partsupp.merge(part[['CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CONTAINER', 'SHIPDATE', 'QUANTITY', 'COMMITDATE']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'COMMITDATE', 'QUANTITY', 'DISCOUNT', 'RECEIPTDATE', 'TAX', 'L_ORDERKEY', 'SHIPMODE']].merge(orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINESTATUS', 'COMMITDATE', 'TAX', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY', 'RECEIPTDATE']].merge(orders[(orders['TOTALPRICE'] == 346085.9146549951) | (orders['O_ORDERKEY'] == 369) | (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 248695.96969666105) | (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['TOTALPRICE'] >= 260194.14121725108) | (orders['TOTALPRICE'] > 58463.52428651475)].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'LINESTATUS', 'SHIPDATE', 'L_PARTKEY', 'SHIPMODE', 'L_SUPPKEY']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'SUPPLYCOST', 'AVAILQTY', 'LINESTATUS', 'PS_PARTKEY']).agg('count')

orders.merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == ' ')].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'N_COMMENT', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] <= 137157) & (orders['O_ORDERKEY'] == 403)].merge(customer[(customer['C_COMMENT'] != ' ')].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 't') | (orders['TOTALPRICE'] >= 174255.16895745648) & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] >= 235311.7730203713) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] == 'C')][['ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 0)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 60626) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] == 305) | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'e') | (orders['O_COMMENT'] == 'egu') | (orders['SHIPPRIORITY'] <= 0)][['ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] == 'd') & (customer['C_CUSTKEY'] > 30) & (customer['C_COMMENT'].str.startswith('a')) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] != 4947.994530733298) | (customer['C_ADDRESS'].str.startswith('T'))][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 225626.80021715918) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] < 71910.58640250617) & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] == 159236.70186691103) | (orders['O_COMMENT'] == 'r') | (orders['TOTALPRICE'] == 41831.20522627208)].merge(customer[(customer['C_ACCTBAL'] != 3653.1404031756374) | (customer['C_CUSTKEY'] >= 46) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'U') | (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY', 'O_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['N_NATIONKEY', 'TYPE', 'N_NAME']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] > 19) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 7) | (supplier['S_COMMENT'] != 'the')].merge(nation[(nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] < 6) | (supplier['S_ADDRESS'] != 'z') & (supplier['S_ACCTBAL'] == 9296.739834335) & (supplier['S_NATIONKEY'] > 23) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] <= 6) | (nation['N_NATIONKEY'] <= 16) & (nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'] == 'd') & (supplier['S_SUPPKEY'] > 76) | (supplier['S_SUPPKEY'] == 106) | (supplier['S_NATIONKEY'] == 1) & (supplier['S_SUPPKEY'] > 98)].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] < 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'R_REGIONKEY', 'S_SUPPKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 24) | (supplier['S_NATIONKEY'] > 19) & (supplier['S_SUPPKEY'] != 106) & (supplier['S_NATIONKEY'] > 21)][['S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 10)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 1883.6274586018867) & (customer['C_ACCTBAL'] <= 6461.347927001806) & (customer['C_PHONE'] != '1') & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ACCTBAL'] > 3111.9988913633433) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_ADDRESS'] != 'X')].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'] == 'B') | (nation['N_COMMENT'] == 'n')].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'N_COMMENT', 'C_NATIONKEY']).agg('count')

lineitem[(lineitem['QUANTITY'] < 2) | (lineitem['DISCOUNT'] <= 0.061472138235300136) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_ORDERKEY'] < 171) | (lineitem['TAX'] == 0.05442518176781154) & (lineitem['LINESTATUS'] != 'F')][['L_SUPPKEY', 'TAX', 'L_PARTKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('s')) | (partsupp['SUPPLYCOST'] != 25.665432723509046)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] >= 178006.45666395934) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] < 101988) & (orders['ORDERDATE'] > '1998-07-21')].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] == '-') & (orders['O_CUSTKEY'] >= 122424) | (orders['O_CUSTKEY'] < 43367) | (orders['ORDERSTATUS'].isin(['F', 'O']))].merge(customer.merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] == 8) | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] != 'h') & (orders['O_COMMENT'] != 'd')][['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 4) | (partsupp['PS_SUPPKEY'] >= 4975)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] > 139) | (supplier['S_NATIONKEY'] < 19) | (supplier['S_ACCTBAL'] == 9039.400335596705) | (supplier['S_ACCTBAL'] >= 1701.2470861721274) & (supplier['S_COMMENT'] != 'w')][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 6278)].merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_SUPPKEY'] >= 180) & (supplier['S_COMMENT'].str.startswith('x'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] != ' fi') | (part['SIZE'] < 1)][['P_PARTKEY', 'TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6747) & (partsupp['PS_PARTKEY'] <= 46)].merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] == 'P') & (part['P_NAME'] == 'm') & (part['P_NAME'] == 'm') | (part['PT_COMMENT'] == 'x')][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'g') & (partsupp['AVAILQTY'] < 1265)].merge(part[(part['P_NAME'] == 't')][['CONTAINER', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'h') | (partsupp['PS_PARTKEY'] < 2) | (partsupp['SUPPLYCOST'] <= 72.8234732509441) & (partsupp['PS_SUPPKEY'] <= 2634) | (partsupp['SUPPLYCOST'] > 720.4729033402992)].merge(part[(part['P_NAME'] == 'l')][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'e') & (supplier['S_ACCTBAL'] == 1952.2756353789134) | (supplier['S_ADDRESS'].str.startswith('I'))][['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'AVAILQTY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 6583.635228507604) & (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_NATIONKEY'] < 5)][['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 16)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_COMMENT'] != 'v')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'N_REGIONKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3837) | (partsupp['PS_PARTKEY'] < 39) & (partsupp['PS_SUPPKEY'] != 4367) | (partsupp['PS_SUPPKEY'] == 2227)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] == 159) | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] == 'j') & (orders['SHIPPRIORITY'] != 0)][['ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] != 8988) & (partsupp['PS_SUPPKEY'] > 290)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 6114) | (partsupp['SUPPLYCOST'] == 34.64941606713823) & (partsupp['P_COMMENT'] != 'o') & (partsupp['PS_PARTKEY'] <= 41)].merge(part[(part['P_PARTKEY'] == 103) | (part['RETAILPRICE'] < 1027.2832644375997) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4']))][['MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] == 'k') & (supplier['S_ACCTBAL'] <= 6589.468329894677)].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'l') | (nation['N_NAME'] == 'K')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'c') & (partsupp['SUPPLYCOST'] < 931.0036077597557) | (partsupp['PS_SUPPKEY'] <= 6116) & (partsupp['SUPPLYCOST'] >= 527.2257357351397) & (partsupp['PS_SUPPKEY'] < 6075)].merge(supplier[(supplier['S_NATIONKEY'] == 8) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('q')) & (supplier['S_SUPPKEY'] >= 107) & (supplier['S_COMMENT'].str.startswith('a')) | (supplier['S_NATIONKEY'] != 21)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] == 75)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'S_SUPPKEY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('r')) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'].str.startswith('3')) & (customer['C_CUSTKEY'] >= 28) & (customer['C_CUSTKEY'] <= 28) | (customer['C_CUSTKEY'] >= 25) | (customer['C_CUSTKEY'] == 33)][['C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] > 138855.64025161395) | (orders['O_COMMENT'] == ' ') | (orders['O_CUSTKEY'] > 60930) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'] == 'y')].merge(customer[(customer['C_ACCTBAL'] < 1678.8851056662802) & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 47) | (customer['C_NATIONKEY'] == 21)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TYPE', 'P_COMMENT', 'C_CUSTKEY', 'QUANTITY', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 752.2104167374868) & (partsupp['PS_SUPPKEY'] != 6262)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] < 3180.842720614325) | (supplier['S_NATIONKEY'] != 21) & (supplier['S_PHONE'] == '26-') | (supplier['S_COMMENT'] == 'l') & (supplier['S_ADDRESS'] != 'q')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] < 796) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['SHIPPRIORITY'] >= 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 322.24806281537184) | (partsupp['PS_SUPPKEY'] <= 2331)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'SUPPLYCOST', 'SHIPDATE', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['EXTENDEDPRICE'] >= 63197.25571329962) | (lineitem['QUANTITY'] < 26) | (lineitem['L_PARTKEY'] != 117609) | (lineitem['L_PARTKEY'] == 124976) & (lineitem['QUANTITY'] < 31) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_ORDERKEY'] != 162) | (lineitem['L_SUPPKEY'] == 4350)][['RECEIPTDATE', 'COMMITDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] == 'q')].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['EXTENDEDPRICE', 'PS_PARTKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 236817.1663917036) | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED']))].merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_NATIONKEY'] > 19) & (customer['C_NATIONKEY'] < 1)].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'TOTALPRICE', 'C_PHONE', 'N_NATIONKEY', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 7690)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] == 'WRAP') & (part['PT_COMMENT'] == 'x')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '17-')][['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'PS_PARTKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 5767)].merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] >= 119) | (part['P_NAME'] != 'h') & (part['PT_COMMENT'] == ' ')][['BRAND', 'P_PARTKEY', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'].str.startswith('p'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 48) | (partsupp['AVAILQTY'] < 4875) | (partsupp['SUPPLYCOST'] > 495.9386572310278) & (partsupp['PS_PARTKEY'] >= 7) & (partsupp['PS_SUPPKEY'] <= 6563)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] < 27) & (part['MFGR'] != 'Manufacturer#4') | (part['TYPE'].str.startswith('M')) & (part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] < 952.7814187306909) & (part['P_NAME'].str.startswith('k')) | (part['TYPE'] != 'E') | (part['TYPE'] == 'SMA') & (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SUPPLYCOST', 'RETAILPRICE', 'PS_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NAME'] != 'I') & (nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] == 'y')].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 18) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] > 70) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_CUSTKEY'] > 5)].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NAME'] == 'P')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_SUPPKEY'] < 78)][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['AVAILQTY', 'C_ADDRESS', 'ORDERSTATUS', 'L_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 37) | (lineitem['L_SUPPKEY'] == 8162) & (lineitem['DISCOUNT'] != 0.06816391808733042) & (lineitem['LINENUMBER'] == 3) | (lineitem['L_PARTKEY'] != 53354) | (lineitem['EXTENDEDPRICE'] != 77669.23717703203)].merge(partsupp[(partsupp['PS_PARTKEY'] < 5) | (partsupp['PS_SUPPKEY'] >= 6197) & (partsupp['AVAILQTY'] != 7214) | (partsupp['PS_SUPPKEY'] < 1457)].merge(part[(part['CONTAINER'] != 'LG') | (part['TYPE'].str.startswith('M')) & (part['SIZE'] != 12) | (part['P_PARTKEY'] == 172) | (part['TYPE'] == 'E') & (part['MFGR'] == 'Manufacturer#4')][['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'TAX']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH'])) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('y'))][['SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 126919) | (orders['O_COMMENT'] == '-')][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'O_CUSTKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 5210.225956614066) | (supplier['S_SUPPKEY'] >= 79)][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 'bis') & (part['TYPE'] != 'P') | (part['PT_COMMENT'].str.startswith('u')) | (part['SIZE'] != 31) | (part['P_NAME'] == 's') & (part['P_NAME'].str.startswith('c')) | (part['SIZE'] == 7) & (part['MFGR'] != 'Manufacturer#3')][['CONTAINER', 'MFGR', 'TYPE', 'SIZE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 3981) & (partsupp['SUPPLYCOST'] > 463.9000214938751) | (partsupp['SUPPLYCOST'] <= 244.35526854090622) & (partsupp['PS_PARTKEY'] == 42) | (partsupp['PS_PARTKEY'] >= 13)].merge(supplier[(supplier['S_COMMENT'] == 'q') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ACCTBAL'] == -920.2782211670411) & (supplier['S_ADDRESS'] == 'W')][['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'V')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 30.177908806462405) & (partsupp['AVAILQTY'] < 9959) & (partsupp['SUPPLYCOST'] == 797.3483004345137) | (partsupp['P_COMMENT'] != 'a') | (partsupp['P_COMMENT'] != 'a')][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['SIZE'] < 19) | (part['P_NAME'] == 'h') | (part['PT_COMMENT'] == 'q') & (part['TYPE'] != 'STA') | (part['CONTAINER'] != 'LG') & (part['CONTAINER'] != 'SM') & (part['SIZE'] == 34)][['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PS_PARTKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 22) | (supplier['S_ACCTBAL'] != 3714.490877490731) & (supplier['S_ACCTBAL'] > 4775.449185770707) | (supplier['S_ACCTBAL'] == 2512.2842041529157) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 161) & (supplier['S_NATIONKEY'] == 6)][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 4)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('o')) | (customer['C_ACCTBAL'] >= 8131.375465471405) & (customer['C_NATIONKEY'] != 6) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 14)][['MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] != 150)][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] != -129.81219550784522) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'] != '22-') & (customer['C_ACCTBAL'] < -11.28446290217471) & (customer['C_COMMENT'] != 'o') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ACCTBAL'] >= 4621.5086405901575)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 318189.2481226288) & (orders['O_COMMENT'] != 'e') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['F']))].merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_ADDRESS'] == 'E') & (customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'] != 'y') & (customer['C_PHONE'] != '2') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_ACCTBAL'] <= 6623.02606542386) & (customer['C_ACCTBAL'] < 2588.1329975168305)][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 0) & (nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] != 'e') & (nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 54.46739847007385) & (partsupp['AVAILQTY'] >= 6264) & (partsupp['SUPPLYCOST'] >= 226.81044048958964) & (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] < 22)][['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 6578.774053668073) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_COMMENT'] != 'c') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > -128.18797517541634)].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'] != 'e') | (nation['N_NAME'].str.startswith('A'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE', 'R_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 894.8480299871104) & (partsupp['PS_SUPPKEY'] >= 1606) | (partsupp['AVAILQTY'] <= 6293)].merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'RETAILPRICE', 'N_NATIONKEY', 'S_ADDRESS', 'S_NATIONKEY']).agg('count')

lineitem[(lineitem['L_COMMENT'] != 'y')].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] != 381) & (partsupp['P_COMMENT'] == '.')][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 147) | (supplier['S_SUPPKEY'] != 22) | (supplier['S_SUPPKEY'] > 29) | (supplier['S_ACCTBAL'] == 3012.2968839303494) | (supplier['S_ADDRESS'] != 'o')].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == 'lit') | (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_ORDERKEY'] != 26) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['L_PARTKEY'] > 536) | (lineitem['L_ORDERKEY'] < 181) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['DISCOUNT'] >= 0.05062057310105059) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_ORDERKEY'] <= 38)].merge(orders.merge(customer[(customer['C_ADDRESS'] != 'g') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'] == 'h') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'B') & (customer['C_NATIONKEY'] < 4)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'DISCOUNT', 'N_NATIONKEY', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 3723) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['LINENUMBER'] > 4) | (lineitem['QUANTITY'] < 29) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['QUANTITY'] <= 28) | (lineitem['DISCOUNT'] < 0.06777506030192414) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 555.4443162563433) | (partsupp['PS_PARTKEY'] <= 13)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] <= 32338) & (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] == 287051.23679574154)][['SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['AVAILQTY'] == 1794) | (partsupp['SUPPLYCOST'] > 795.4144864073456) | (partsupp['PS_PARTKEY'] >= 40) | (partsupp['AVAILQTY'] >= 6883)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[['BRAND', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith(' sl'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY', 'S_NAME', 'MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1145) | (partsupp['PS_PARTKEY'] >= 28) | (partsupp['PS_SUPPKEY'] != 6896)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['PT_COMMENT', 'BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_ACCTBAL'] != 7327.048689926992) & (supplier['S_ACCTBAL'] <= 714.251769833156)][['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'] == 'U') | (nation['N_NAME'] != 'B')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'v') & (supplier['S_NATIONKEY'] > 13) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] == 12) & (supplier['S_PHONE'] == '32-') & (supplier['S_COMMENT'] == ' ')][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'S_COMMENT', 'S_ADDRESS', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['LINENUMBER'] >= 1) & (lineitem['L_SUPPKEY'] == 6869) | (lineitem['LINENUMBER'] >= 5)][['SHIPMODE', 'L_PARTKEY', 'QUANTITY', 'DISCOUNT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] == 7118.126613085098) & (supplier['S_SUPPKEY'] >= 87) | (supplier['S_PHONE'] != '14-')][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'P_COMMENT', 'BRAND', 'S_ACCTBAL', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 5720) | (partsupp['P_COMMENT'] != 'are') & (partsupp['AVAILQTY'] >= 8358) | (partsupp['PS_PARTKEY'] > 38) & (partsupp['PS_SUPPKEY'] > 2569)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] == 'B')].merge(region[(region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'a') | (partsupp['PS_SUPPKEY'] >= 7457)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['BRAND'] == 'Brand#33') & (part['TYPE'].str.startswith('P')) | (part['BRAND'] != 'Brand#55') & (part['PT_COMMENT'] == 'r') & (part['P_NAME'] != 'v') & (part['TYPE'] != 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'TYPE', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'o') & (partsupp['PS_SUPPKEY'] >= 648)].merge(supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ACCTBAL'] <= 509.09710977609325)][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'].str.startswith('y')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['PT_COMMENT'] == 'k') | (part['RETAILPRICE'] >= 1036.6138079930133) & (part['RETAILPRICE'] < 1050.544482809061) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4']))][['SIZE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 26) | (supplier['S_SUPPKEY'] == 128) | (supplier['S_ADDRESS'] != 'n') | (supplier['S_SUPPKEY'] >= 132) | (supplier['S_NATIONKEY'] <= 22) & (supplier['S_SUPPKEY'] != 21) & (supplier['S_COMMENT'] == 'h')][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY', 'S_NAME', 'N_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] <= 1066.5111629381393) | (part['PT_COMMENT'] == 'p') & (part['BRAND'].isin(['Brand#34', 'Brand#54', 'Brand#45', 'Brand#24', 'Brand#42', 'Brand#51', 'Brand#11', 'Brand#12', 'Brand#43', 'Brand#55', 'Brand#35', 'Brand#13', 'Brand#41', 'Brand#15', 'Brand#14', 'Brand#52', 'Brand#21', 'Brand#32', 'Brand#44', 'Brand#23', 'Brand#22', 'Brand#33', 'Brand#53'])) | (part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] <= 959.1812482344073)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] == 7865.966427163052)][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] >= 7)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] >= 988.233790743922) | (part['BRAND'] != 'Brand#54') & (part['TYPE'] != 'SMA') | (part['PT_COMMENT'] != 's')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_ORDERKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['AVAILQTY', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['LINESTATUS'] == 'O') | (lineitem['QUANTITY'] >= 42) | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['QUANTITY'] != 2) & (lineitem['QUANTITY'] < 11)][['SHIPINSTRUCT', 'LINESTATUS', 'L_PARTKEY', 'SHIPMODE', 'DISCOUNT', 'EXTENDEDPRICE', 'L_ORDERKEY', 'TAX', 'RETURNFLAG', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 7465) | (partsupp['PS_SUPPKEY'] > 2823)].merge(part[(part['P_PARTKEY'] > 67) | (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_PARTKEY', 'LINENUMBER', 'LINESTATUS', 'SHIPINSTRUCT', 'L_SUPPKEY']].merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('u'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 8) & (supplier['S_NATIONKEY'] <= 2) & (supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] <= 8004.5681517976545)][['S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NAME']).agg('mean', numeric_only=True)

orders[['CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'N_NAME', 'ORDERPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2442) | (partsupp['PS_SUPPKEY'] <= 4082) | (partsupp['PS_PARTKEY'] != 27) | (partsupp['AVAILQTY'] != 8489)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] == 't') | (supplier['S_SUPPKEY'] > 177) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'T') & (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_ACCTBAL'] < 7692.035158379683)].merge(nation[(nation['N_NATIONKEY'] == 8)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] == 'L') | (part['TYPE'] != 'SMA') & (part['SIZE'] <= 48)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 7040) | (partsupp['SUPPLYCOST'] == 148.37026970996698) & (partsupp['PS_PARTKEY'] <= 18)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['PT_COMMENT'].str.startswith('e')) | (part['SIZE'] < 43) & (part['RETAILPRICE'] == 986.1178992391142) & (part['P_NAME'] != 'lin') | (part['SIZE'] > 30) & (part['PT_COMMENT'] == 'p') & (part['BRAND'] == 'Brand#32')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_COMMENT'] != 'q') | (orders['O_ORDERKEY'] != 394) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] != 102225) & (orders['ORDERDATE'] < '1992-01-13') | (orders['TOTALPRICE'] < 300877.27314066) | (orders['TOTALPRICE'] > 232035.8618357887)][['ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 2814)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('c')) | (part['RETAILPRICE'] >= 928.7575034180672) & (part['CONTAINER'] != 'SM')][['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('l')) | (partsupp['SUPPLYCOST'] <= 755.0348079305612)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['C_ACCTBAL'] > 9833.54315921577) | (customer['C_NATIONKEY'] <= 4) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 34) | (customer['C_PHONE'] == '13-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'CONTAINER', 'TYPE']).agg('count')

lineitem[(lineitem['LINENUMBER'] > 2) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RECEIPTDATE'] < '1998-11-06')][['LINESTATUS', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPMODE', 'L_PARTKEY', 'RECEIPTDATE', 'L_SUPPKEY']].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(part[(part['SIZE'] < 22) | (part['BRAND'] != 'Brand#54') | (part['CONTAINER'] == 'LG') & (part['BRAND'] == 'Brand#45')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] <= 24787.222234486137) & (orders['TOTALPRICE'] < 352096.4460676204) & (orders['ORDERSTATUS'].isin(['O']))][['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK', 'O_ORDERKEY']].merge(customer[(customer['C_CUSTKEY'] > 60) & (customer['C_COMMENT'] == 'd') & (customer['C_NATIONKEY'] >= 20) | (customer['C_ACCTBAL'] <= 5141.714273587237) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('2'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['CLERK', 'ORDERPRIORITY', 'C_ACCTBAL', 'O_CUSTKEY', 'TOTALPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('ss ')) | (part['P_NAME'] != 'lem') | (part['RETAILPRICE'] != 1059.4488442645616) & (part['TYPE'] != 'STA') & (part['BRAND'] == 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] <= 16) & (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] != 16) | (nation['N_NATIONKEY'] > 23)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 3234) & (partsupp['SUPPLYCOST'] < 604.2086618531572) | (partsupp['P_COMMENT'] == 'd') | (partsupp['PS_SUPPKEY'] >= 222) & (partsupp['SUPPLYCOST'] <= 894.1342243089553)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ACCTBAL'] <= 4980.763288621093) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] < 66) | (supplier['S_SUPPKEY'] > 147) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'].str.startswith('S')) | (part['BRAND'] != 'Brand#23')][['MFGR', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'are') | (partsupp['P_COMMENT'] == '.') & (partsupp['PS_PARTKEY'] > 9) | (partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['P_COMMENT'] == 'k')].merge(part[(part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] < 1018.8995016877266) | (part['TYPE'] != 'L') | (part['P_PARTKEY'] != 59) & (part['SIZE'] >= 13) | (part['RETAILPRICE'] > 1059.7621062863268)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] == 7) & (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SIZE', 'S_SUPPKEY', 'S_ACCTBAL', 'BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 7522) & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['EXTENDEDPRICE'] > 82122.94437833465) | (lineitem['L_SUPPKEY'] != 9332) & (lineitem['L_COMMENT'] == 's') | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['LINESTATUS'] == 'O')][['LINESTATUS', 'SHIPDATE', 'SHIPMODE', 'SHIPINSTRUCT', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINENUMBER']].merge(orders.merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 4117)].merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] < 65)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['O_CUSTKEY'] != 97902) & (orders['O_CUSTKEY'] < 78628) & (orders['O_ORDERKEY'] <= 74) & (orders['O_COMMENT'] != 'z') & (orders['O_ORDERKEY'] >= 797) | (orders['O_ORDERKEY'] > 145)][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'TAX', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'p')][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] == ',') | (supplier['S_NATIONKEY'] != 14) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'a')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_ORDERKEY'] != 259) & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] != 141) | (orders['ORDERSTATUS'] != 'P')][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_COMMENT', 'O_ORDERKEY', 'O_COMMENT']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'].str.startswith('t')) & (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_PHONE'] == '17-') & (supplier['S_NATIONKEY'] < 5) | (supplier['S_PHONE'] == '28-') & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'f')][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] >= 941.2944607193259) & (part['P_PARTKEY'] < 55)][['MFGR', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'S_NATIONKEY', 'P_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#21', 'Brand#52', 'Brand#35', 'Brand#34', 'Brand#13', 'Brand#23', 'Brand#45', 'Brand#31', 'Brand#32', 'Brand#33', 'Brand#54', 'Brand#53', 'Brand#11', 'Brand#15', 'Brand#43', 'Brand#42', 'Brand#22'])) & (part['P_NAME'] == 'n') | (part['MFGR'] != 'Manufacturer#3')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] > 65) & (part['MFGR'] != 'Manufacturer#4') | (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] <= 919.7271242435498)][['MFGR', 'SIZE', 'TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 44)][['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'BRAND', 'P_NAME', 'P_COMMENT', 'S_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.0031790715975136765) & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['DISCOUNT'] < 0.08369442919699037) | (lineitem['L_PARTKEY'] == 42669) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['L_PARTKEY'] > 185454)][['COMMITDATE', 'LINESTATUS', 'EXTENDEDPRICE', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 5045) & (partsupp['P_COMMENT'] != 'bli') & (partsupp['AVAILQTY'] <= 3726) & (partsupp['SUPPLYCOST'] == 194.96729868578026) & (partsupp['SUPPLYCOST'] > 553.4718024658575)].merge(supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] != 196) | (supplier['S_ACCTBAL'] != 757.3821299639587)].merge(nation[(nation['N_NATIONKEY'] >= 23)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] != 'w') | (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['TOTALPRICE'] >= 34022.22022611775) | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['CLERK', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_COMMENT'] == 's') & (nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'p') | (partsupp['PS_SUPPKEY'] <= 947) & (partsupp['PS_PARTKEY'] >= 36) & (partsupp['AVAILQTY'] > 7294)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('n'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'C_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 27) & (lineitem['L_SUPPKEY'] <= 2180) | (lineitem['EXTENDEDPRICE'] < 26944.381873045644)][['RETURNFLAG', 'QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER', 'TAX', 'SHIPMODE', 'L_PARTKEY', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] == 'n') & (part['PT_COMMENT'] == 'b') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['L_SUPPKEY'] > 5137) & (lineitem['L_ORDERKEY'] <= 6) | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['SHIPMODE'].isin(['TRUCK'])) | (lineitem['L_PARTKEY'] == 102361) | (lineitem['LINESTATUS'] != 'F') & (lineitem['EXTENDEDPRICE'] >= 51774.326144605744) & (lineitem['RETURNFLAG'].isin(['N']))].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] < 6432)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] <= 970.6370846891083) | (part['MFGR'] != 'Manufacturer#4') | (part['P_PARTKEY'] > 83)][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPDATE', 'CLERK']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] < 0.006526734137750338) | (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_COMMENT'] == 'd') | (lineitem['L_SUPPKEY'] > 1079) | (lineitem['TAX'] > 0.022706328242640197) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['LINENUMBER'] < 2)][['L_SUPPKEY', 'SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 5)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('h'))][['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_ORDERKEY', 'COMMITDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'SHIPDATE', 'TAX']].merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'].str.startswith('w')) & (orders['O_CUSTKEY'] == 119499) | (orders['O_ORDERKEY'] == 407) & (orders['O_COMMENT'] != 'c') & (orders['O_ORDERKEY'] >= 518) & (orders['ORDERSTATUS'].isin(['F', 'P']))][['SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'j') | (supplier['S_ACCTBAL'] <= 3668.734637937042) & (supplier['S_NATIONKEY'] == 22) | (supplier['S_PHONE'] == '17-') & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '14-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 16)][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] == 'STA') | (part['RETAILPRICE'] <= 1071.6903984419278) | (part['SIZE'] <= 47) & (part['BRAND'] == 'Brand#23')][['TYPE', 'BRAND', 'MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['LINENUMBER'] <= 4) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'NONE'])) | (lineitem['SHIPMODE'] != 'FOB') | (lineitem['LINENUMBER'] == 4) | (lineitem['EXTENDEDPRICE'] <= 22047.06663416193) & (lineitem['L_ORDERKEY'] == 114) | (lineitem['LINENUMBER'] == 5) | (lineitem['EXTENDEDPRICE'] == 9991.344465654762) & (lineitem['TAX'] == 0.00526343800613402)].merge(orders[(orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1992-01-13') | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_ADDRESS'] != 'r') & (customer['C_ADDRESS'].str.startswith('S')) & (customer['C_CUSTKEY'] > 65) | (customer['C_ACCTBAL'] > 7390.675918336365) & (customer['C_PHONE'] == '27-')].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('v')) & (nation['N_NAME'].str.startswith('J'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE', 'QUANTITY', 'ORDERDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.026647216721114975) | (lineitem['L_COMMENT'] == 'lit') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['QUANTITY'] != 27) & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RECEIPTDATE'] == '1998-11-06')].merge(orders.merge(customer[(customer['C_ACCTBAL'] > 9301.927972720356) & (customer['C_CUSTKEY'] > 71) & (customer['C_ADDRESS'] != 'm') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] != 21) | (customer['C_NATIONKEY'] < 16)][['C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] < 192) & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] <= 18) | (supplier['S_ACCTBAL'] != -498.98260077852143) & (supplier['S_NATIONKEY'] > 13)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] > 287256.27901009854) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] <= 97394.90012722388) & (orders['O_ORDERKEY'] >= 14) & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] >= 424)].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] != 15) & (partsupp['SUPPLYCOST'] <= 362.2262634911985) & (partsupp['SUPPLYCOST'] > 697.653212983916) & (partsupp['SUPPLYCOST'] != 326.07655020585224) | (partsupp['PS_PARTKEY'] > 4)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['ORDERSTATUS', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 166) & (supplier['S_ADDRESS'].str.startswith('O')) & (supplier['S_ACCTBAL'] >= 2345.320878474752) & (supplier['S_ACCTBAL'] != 79.62780739178197) | (supplier['S_ADDRESS'] != '6') | (supplier['S_NATIONKEY'] == 16) | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] == 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['COMMITDATE', 'S_COMMENT', 'EXTENDEDPRICE', 'O_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['TAX'] > 0.05733976318325329) | (lineitem['L_SUPPKEY'] <= 5366) & (lineitem['LINENUMBER'] != 6) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['L_COMMENT'].str.startswith(',')) & (lineitem['QUANTITY'] < 20)][['L_PARTKEY', 'COMMITDATE', 'L_SUPPKEY', 'QUANTITY', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPDATE', 'L_ORDERKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 4395) & (partsupp['PS_SUPPKEY'] >= 4482) & (partsupp['SUPPLYCOST'] > 877.7779894079251)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] > 12127.820812911994) | (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 773.4624257093823) | (partsupp['PS_SUPPKEY'] < 1513) | (partsupp['SUPPLYCOST'] < 861.010363502395) | (partsupp['P_COMMENT'] == 'x')].merge(part[(part['PT_COMMENT'].str.startswith(' fi')) | (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] > 135) | (supplier['S_ACCTBAL'] > 6882.743122522249) & (supplier['S_SUPPKEY'] == 171)][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['DISCOUNT', 'P_PARTKEY', 'MFGR']).agg('count')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 15) | (supplier['S_ADDRESS'] == 'T') | (supplier['S_ADDRESS'] != 'W') & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'm') & (supplier['S_COMMENT'].str.startswith('t'))][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] < 139)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'CLERK', 'O_COMMENT']].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['AVAILQTY'] > 8820) & (partsupp['SUPPLYCOST'] >= 55.974623969723005) & (partsupp['P_COMMENT'] == 'ly ') | (partsupp['SUPPLYCOST'] == 361.9983892738739)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['RETAILPRICE', 'BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] == 4778.871920556779)][['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('c')) | (partsupp['AVAILQTY'] != 2469)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_SUPPKEY'] < 122) | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'E') & (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] < 185) | (part['PT_COMMENT'].str.startswith('n')) & (part['CONTAINER'] == 'LG') & (part['PT_COMMENT'].str.startswith('d')) & (part['TYPE'] == 'SMA') & (part['P_NAME'].str.startswith('d')) & (part['P_NAME'] == 'l') | (part['TYPE'] != 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_PHONE', 'RETAILPRICE', 'S_NATIONKEY', 'PS_SUPPKEY', 'PT_COMMENT']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'FOB') | (lineitem['QUANTITY'] > 14) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN']))][['L_PARTKEY', 'L_ORDERKEY', 'LINESTATUS', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPDATE', 'QUANTITY']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 15119) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['C_ADDRESS'].str.startswith('M')) | (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_COMMENT'] == 's') & (customer['C_ACCTBAL'] <= -264.73560454958033) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] > 20)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] >= 178) | (part['PT_COMMENT'] != 'c') | (part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] != 990.0647075494571)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] == 0.03963231411175329) | (lineitem['L_ORDERKEY'] != 42) & (lineitem['L_ORDERKEY'] != 119) | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL', 'SHIP', 'TRUCK', 'RAIL']))][['L_ORDERKEY', 'LINESTATUS', 'COMMITDATE', 'LINENUMBER', 'TAX', 'L_PARTKEY', 'SHIPDATE', 'DISCOUNT']].merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] != 'F') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] < 2561.805668561408) | (customer['C_NATIONKEY'] <= 20)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'COMMITDATE', 'TAX']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['SIZE'] < 19) & (part['SIZE'] >= 16) & (part['RETAILPRICE'] <= 910.4421348947019) | (part['PT_COMMENT'] != 't') | (part['P_PARTKEY'] == 181) | (part['BRAND'].isin(['Brand#12', 'Brand#11', 'Brand#35', 'Brand#21', 'Brand#51', 'Brand#31', 'Brand#34', 'Brand#23', 'Brand#53', 'Brand#15'])) | (part['BRAND'] != 'Brand#51') & (part['P_PARTKEY'] <= 34)][['BRAND', 'P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'MFGR', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] > 35559) | (orders['O_COMMENT'] != 'i')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'].str.startswith('k'))][['ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'h')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(part[(part['CONTAINER'] != 'MED') & (part['BRAND'].isin(['Brand#44', 'Brand#53', 'Brand#32', 'Brand#35', 'Brand#52', 'Brand#15', 'Brand#31', 'Brand#45'])) & (part['BRAND'] != 'Brand#22') | (part['PT_COMMENT'].str.startswith('h')) & (part['SIZE'] > 6) & (part['PT_COMMENT'].str.startswith('w')) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_NAME'] != 'p') | (part['SIZE'] != 7)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['TAX'] <= 0.04765423238869321)][['L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'LINESTATUS', 'L_COMMENT', 'SHIPINSTRUCT', 'TAX', 'L_ORDERKEY']].merge(orders[['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] == 4) | (supplier['S_NATIONKEY'] >= 4) | (supplier['S_PHONE'] == '3')][['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'CONTAINER', 'TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'SHIPMODE', 'RETURNFLAG', 'L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER', 'LINESTATUS', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 54) & (partsupp['SUPPLYCOST'] >= 430.6752975541277) & (partsupp['P_COMMENT'] != 'r') & (partsupp['P_COMMENT'] == 'h') | (partsupp['SUPPLYCOST'] == 191.18676953572705)].merge(supplier[(supplier['S_ACCTBAL'] == -939.3670904468937) | (supplier['S_ADDRESS'] == 'g') & (supplier['S_COMMENT'] == 'bli') & (supplier['S_NATIONKEY'] <= 14) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 7) & (supplier['S_ADDRESS'] == 'S')][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] >= 23) & (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == 'ly ') & (lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'RAIL'])) & (lineitem['QUANTITY'] != 25)][['EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'L_SUPPKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'COMMITDATE', 'LINESTATUS']].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] >= 17) | (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 9903.796186914175) | (supplier['S_NATIONKEY'] <= 1) | (supplier['S_NATIONKEY'] < 12) & (supplier['S_ADDRESS'] == ' ') | (supplier['S_NATIONKEY'] <= 17) & (supplier['S_SUPPKEY'] < 98) | (supplier['S_COMMENT'] != ' sl')][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] >= 19) & (lineitem['LINENUMBER'] >= 5) | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['L_PARTKEY'] != 113417) | (lineitem['DISCOUNT'] > 0.05828686338639258) & (lineitem['L_PARTKEY'] >= 51140) | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_COMMENT'].str.startswith('s')) & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['COMMITDATE'] < '1998-10-16')][['SHIPDATE', 'LINESTATUS', 'L_ORDERKEY', 'LINENUMBER', 'COMMITDATE', 'L_COMMENT', 'TAX', 'SHIPMODE']].merge(orders[(orders['O_ORDERKEY'] != 646) & (orders['O_CUSTKEY'] < 140735) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] >= 10)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'L_ORDERKEY', 'SHIPMODE', 'TAX', 'CLERK']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['L_COMMENT'] == 'g') & (lineitem['L_SUPPKEY'] > 357) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['LINENUMBER'] <= 1)].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1'])) | (part['BRAND'] != 'Brand#42') | (part['TYPE'].str.startswith('SMA'))][['MFGR', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] != 33) | (customer['C_ADDRESS'] != '8')][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 4689) & (lineitem['L_COMMENT'] != ',') & (lineitem['L_SUPPKEY'] != 3648) | (lineitem['EXTENDEDPRICE'] <= 8770.70203292885) | (lineitem['SHIPMODE'] != 'FOB') | (lineitem['LINENUMBER'] < 6) & (lineitem['L_PARTKEY'] > 44940) & (lineitem['QUANTITY'] >= 35)][['SHIPMODE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'COMMITDATE', 'TAX', 'L_PARTKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 878.0534946738283) & (partsupp['PS_SUPPKEY'] == 5684)].merge(part[['MFGR', 'SIZE', 'P_PARTKEY', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] == 'I') | (supplier['S_COMMENT'] != 'l') & (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ACCTBAL'] > 8898.697370460515)].merge(nation[(nation['N_NATIONKEY'] != 4)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['O_COMMENT', 'ORDERDATE']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'COMMITDATE', 'SHIPDATE', 'LINESTATUS', 'TAX']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] >= 93283) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] > 450) | (orders['TOTALPRICE'] < 43794.33967519493) | (orders['CLERK'] == 'C')][['TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'N')].merge(partsupp[(partsupp['PS_PARTKEY'] > 37) | (partsupp['PS_PARTKEY'] > 19) | (partsupp['P_COMMENT'] == 'p')][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 1) & (supplier['S_SUPPKEY'] < 41) | (supplier['S_PHONE'] == '26-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 196) | (supplier['S_ACCTBAL'] <= -606.6420100985465) & (supplier['S_ACCTBAL'] <= -742.2412143269689)].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] != 22)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith(',')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ACCTBAL'] < 6288.264021253705) | (customer['C_NATIONKEY'] > 21)][['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'S_COMMENT', 'N_NATIONKEY', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_ADDRESS'] == '5') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'].isin(['Manufacturer#3'])) | (part['RETAILPRICE'] <= 926.5739441778032) | (part['RETAILPRICE'] >= 1047.4816160231721) | (part['P_PARTKEY'] > 113) | (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] == 12) | (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] >= 187)][['CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['TOTALPRICE'] > 277219.03942694643) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] == ' ')].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_COMMENT'].str.startswith('y')) | (customer['C_ADDRESS'] == 'c') & (customer['C_NATIONKEY'] < 8) & (customer['C_COMMENT'].str.startswith('l')) & (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] <= 67)].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 3686) & (lineitem['L_COMMENT'].str.startswith('u')) & (lineitem['RETURNFLAG'] == 'A')].merge(orders[(orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] == 'ly ')][['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'] == 'F') & (customer['C_PHONE'] != '25-')][['MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 4797) | (partsupp['PS_SUPPKEY'] >= 6568) | (partsupp['SUPPLYCOST'] == 926.1928658364304) & (partsupp['SUPPLYCOST'] != 30.26762726317823) | (partsupp['SUPPLYCOST'] != 937.9368644392273)].merge(supplier[(supplier['S_ACCTBAL'] == 7197.289038113913) | (supplier['S_SUPPKEY'] == 48)][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 't') | (part['SIZE'] > 38) | (part['P_PARTKEY'] > 25) & (part['SIZE'] > 31)][['PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'O_ORDERKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG', 'SHIPDATE', 'EXTENDEDPRICE', 'QUANTITY', 'RECEIPTDATE', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 474.43025628102924) & (partsupp['PS_SUPPKEY'] <= 1569) & (partsupp['AVAILQTY'] != 4790) | (partsupp['AVAILQTY'] >= 2388) & (partsupp['SUPPLYCOST'] >= 27.650073457256347)].merge(supplier[(supplier['S_ACCTBAL'] >= 9812.331855077533) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 76) & (supplier['S_PHONE'] != '32-')][['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['MFGR', 'TYPE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '18-') & (customer['C_COMMENT'] != 'n') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith('f'))][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['S_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'L_PARTKEY', 'ORDERDATE']).agg('min', numeric_only=True)