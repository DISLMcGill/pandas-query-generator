customer

customer

orders

part

part

part

part

part

part

part

part

part

part

part

part

partsupp

partsupp

region

region

region

region

region

region

region

region

region

supplier

supplier

customer[['C_ACCTBAL']]

customer[['C_CUSTKEY']]

customer[['MKTSEGMENT']]

nation[(nation['N_REGIONKEY'] != 3)]

nation[['N_COMMENT']]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NAME']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

nation[['N_NATIONKEY']]

orders[['SHIPPRIORITY']]

part[['P_NAME']]

part[['P_PARTKEY']]

partsupp[['AVAILQTY']]

partsupp[['PS_SUPPKEY']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

partsupp[['SUPPLYCOST']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] == 'l')]

region[(region['R_COMMENT'] == 'l')]

region[(region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] >= 3)]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[['S_ADDRESS']]

supplier[['S_ADDRESS']]

supplier[['S_NAME']]

supplier[['S_PHONE']]

customer.groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL']]

customer[['MKTSEGMENT', 'C_NAME']]

lineitem[(lineitem['L_COMMENT'] == 'c') & (lineitem['L_ORDERKEY'] > 149)]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY']]

orders[['CLERK', 'ORDERDATE']]

part.groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'LG') | (part['TYPE'] == 'M')]

part[(part['RETAILPRICE'] != 1064.0013078735287) & (part['P_PARTKEY'] <= 104)]

partsupp[['SUPPLYCOST', 'P_COMMENT']]

partsupp[['SUPPLYCOST', 'P_COMMENT']]

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] >= 3)]

region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'ASI')]

region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('M'))]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']]

supplier[['S_ADDRESS', 'S_SUPPKEY']]

part.groupby(by=['CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] >= 987.4912837536898) & (part['TYPE'] != 'SMA')]

part[(part['P_NAME'] == 'o') | (part['CONTAINER'].str.startswith('MED')) & (part['PT_COMMENT'].str.startswith('p'))]

part[['MFGR', 'P_NAME', 'CONTAINER']]

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['AVAILQTY'] > 3080) | (partsupp['SUPPLYCOST'] > 633.1180986791348)]

partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] > 3)]

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'AME') | (region['R_NAME'] == 'E')]

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] == 'u') & (region['R_NAME'] != 'ASI')]

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] == 1)]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']]

lineitem.groupby(by=['L_PARTKEY', 'SHIPDATE', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['SHIPINSTRUCT', 'LINESTATUS', 'L_ORDERKEY']).agg('count')

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']]

orders[['O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE']]

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']]

part.groupby(by=['BRAND', 'P_NAME', 'MFGR']).agg('count')

part.groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'RETAILPRICE']).agg('count')

part.groupby(by=['TYPE', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[['SIZE', 'MFGR', 'TYPE', 'RETAILPRICE']]

part[['SIZE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']]

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'ASI')][['R_NAME']]

supplier.groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')][['S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] != 18) | (supplier['S_NATIONKEY'] < 23) & (supplier['S_NATIONKEY'] == 17) | (supplier['S_ACCTBAL'] == 1534.2717974464988)]

supplier[(supplier['S_SUPPKEY'] == 96) | (supplier['S_NATIONKEY'] != 2) | (supplier['S_COMMENT'] == 'r') & (supplier['S_COMMENT'].str.startswith('x'))]

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']]

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] != 8)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'u')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 12)][['C_COMMENT', 'C_NAME']]

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT', 'RECEIPTDATE']]

lineitem[['TAX']].groupby(by=['TAX']).agg('count')

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 181076.96140731164)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']]

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

part.groupby(by=['CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME']).agg('count')

part.groupby(by=['RETAILPRICE', 'SIZE', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

part.groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']).agg('count')

part.groupby(by=['SIZE', 'TYPE', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'P_NAME', 'BRAND', 'CONTAINER']).agg('count')

part[['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'CONTAINER']]

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('count')

part[['PT_COMMENT', 'TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY']]

part[['P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'P_NAME', 'RETAILPRICE', 'MFGR']]

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('E'))][['R_COMMENT']]

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'A')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('A'))][['R_COMMENT']]

region[(region['R_REGIONKEY'] != 1)].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] != 2)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 4203.248361537656) | (supplier['S_ACCTBAL'] <= 1301.26764447018) & (supplier['S_COMMENT'] != 'w') | (supplier['S_SUPPKEY'] >= 134) & (supplier['S_NAME'].str.startswith('S'))]

supplier[(supplier['S_NATIONKEY'] != 3) & (supplier['S_ADDRESS'] == 'J') | (supplier['S_ADDRESS'] == 'V') | (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_ADDRESS'].str.startswith('e'))]

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_NAME']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_COMMENT']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINENUMBER', 'L_SUPPKEY', 'LINESTATUS', 'L_PARTKEY', 'COMMITDATE']).agg('count')

lineitem[(lineitem['TAX'] == 0.06831418850593267) | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['L_SUPPKEY'] >= 3054) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['LINESTATUS'].isin(['O', 'F']))]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 's') & (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] >= 14)][['N_NATIONKEY']]

nation[(nation['N_COMMENT'] != 's')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('count')

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'O_COMMENT']]

orders[(orders['TOTALPRICE'] < 190764.06155665684) & (orders['O_CUSTKEY'] <= 1952) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] > 121848) & (orders['TOTALPRICE'] < 171574.06400142596) | (orders['O_CUSTKEY'] <= 105116)]

orders[['O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['BRAND'] == 'Brand#24')].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#2') & (part['BRAND'] != 'Brand#43') | (part['P_NAME'] != 'o') | (part['SIZE'] <= 29) & (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] >= 913.2074369461395)]

part[(part['PT_COMMENT'] != 's') | (part['P_PARTKEY'] < 26)].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'MFGR']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['P_NAME', 'MFGR', 'BRAND', 'TYPE', 'SIZE', 'CONTAINER']]

part[['P_NAME', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']]

part[['TYPE', 'P_NAME']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] <= 1)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l')].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'l')].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] != 'M') & (region['R_NAME'] == 'ASI')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'ASI')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] != 'u')][['R_NAME']]

region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 0)].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] >= 0)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_SUPPKEY'] >= 128) & (supplier['S_PHONE'] != '1') & (supplier['S_ACCTBAL'] < 5132.299331271801) & (supplier['S_ACCTBAL'] > 4412.420664627358) | (supplier['S_NATIONKEY'] <= 4)]

supplier[(supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_ACCTBAL'] >= 5604.750009902684) & (supplier['S_SUPPKEY'] < 150) | (supplier['S_SUPPKEY'] != 155) | (supplier['S_ADDRESS'] != 'T') | (supplier['S_NAME'].str.startswith('S'))]

supplier[(supplier['S_COMMENT'] != 'd') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'] != 'q') | (supplier['S_NATIONKEY'] <= 19)]

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']]

supplier[['S_ADDRESS', 'S_NAME']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'] == 'E')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 20)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] >= 22) | (nation['N_NATIONKEY'] <= 8) | (nation['N_REGIONKEY'] == 0)][['N_REGIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#43', 'Brand#33'])) | (part['MFGR'] == 'Manufacturer#3')][['BRAND', 'CONTAINER', 'P_NAME']]

part[(part['CONTAINER'].str.startswith('WRAP'))][['BRAND', 'TYPE', 'P_PARTKEY', 'SIZE']]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) & (part['P_PARTKEY'] <= 123) | (part['P_PARTKEY'] == 187) | (part['TYPE'] != 'S') | (part['MFGR'] != 'Manufacturer#1') | (part['PT_COMMENT'].str.startswith('g')) | (part['PT_COMMENT'] != 'u')]

part[(part['SIZE'] != 32) | (part['BRAND'] != 'Brand#12')][['P_PARTKEY', 'P_NAME', 'BRAND']]

part[(part['SIZE'] < 26)].groupby(by=['P_PARTKEY', 'P_NAME', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'BRAND']].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'TYPE', 'BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR']]

part[['SIZE', 'P_NAME']].groupby(by=['SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part[['TYPE', 'CONTAINER', 'MFGR']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'AME')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NAME'] != 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'C')].merge(nation[(nation['N_NATIONKEY'] < 4)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_SUPPKEY'] > 111) & (supplier['S_PHONE'].str.startswith('3'))][['S_ADDRESS', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'].str.startswith('17-'))].groupby(by=['S_NAME', 'S_COMMENT', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[['COMMITDATE', 'L_COMMENT', 'RETURNFLAG', 'EXTENDEDPRICE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE']]

nation.merge(region[(region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'i')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'J')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'] == 'M')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'R')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] != 'C') | (nation['N_NATIONKEY'] <= 2) | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] >= 12) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] > 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == '.') | (orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] <= 317413.12166986574) & (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] < 0)][['O_COMMENT']]

orders[(orders['O_CUSTKEY'] == 124313) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] < 160176.4812680466) & (orders['TOTALPRICE'] < 330904.80323852255) | (orders['ORDERDATE'] == '1992-01-13')][['SHIPPRIORITY']]

part[(part['BRAND'].isin(['Brand#52', 'Brand#22', 'Brand#35', 'Brand#54', 'Brand#41', 'Brand#51', 'Brand#44', 'Brand#33', 'Brand#24', 'Brand#31', 'Brand#53', 'Brand#13', 'Brand#34', 'Brand#14', 'Brand#15', 'Brand#45', 'Brand#12', 'Brand#42', 'Brand#32', 'Brand#23', 'Brand#21', 'Brand#25', 'Brand#43'])) | (part['TYPE'] == 'S') | (part['P_PARTKEY'] < 79) & (part['P_PARTKEY'] > 78) & (part['PT_COMMENT'].str.startswith('ly ')) | (part['BRAND'] != 'Brand#42') & (part['P_PARTKEY'] > 45) | (part['SIZE'] <= 42)]

part[(part['CONTAINER'] != 'MED') & (part['PT_COMMENT'] != ' ')][['P_PARTKEY', 'BRAND', 'MFGR', 'SIZE']]

part[(part['P_NAME'].str.startswith('l')) & (part['RETAILPRICE'] >= 982.2780768184399) | (part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#24') & (part['BRAND'] == 'Brand#34') & (part['RETAILPRICE'] != 1025.1684929102728) | (part['P_NAME'] != 'y') | (part['SIZE'] != 46)]

part[(part['SIZE'] < 42) & (part['BRAND'] != 'Brand#13')][['BRAND', 'P_PARTKEY', 'MFGR', 'CONTAINER']]

part[(part['TYPE'].str.startswith('SMA')) & (part['P_NAME'] == 'lem') & (part['PT_COMMENT'] != 'w') | (part['SIZE'] != 17) & (part['PT_COMMENT'] != 'o') & (part['BRAND'] != 'Brand#31') | (part['BRAND'].isin(['Brand#12', 'Brand#11', 'Brand#54', 'Brand#15', 'Brand#33', 'Brand#13', 'Brand#55', 'Brand#45', 'Brand#53', 'Brand#25', 'Brand#14', 'Brand#43', 'Brand#24', 'Brand#31', 'Brand#41', 'Brand#22'])) & (part['P_NAME'] != 'i')]

part[['BRAND', 'P_NAME', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE']]

part[['P_NAME', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT']]

partsupp[(partsupp['AVAILQTY'] <= 7601) | (partsupp['AVAILQTY'] >= 807) | (partsupp['SUPPLYCOST'] >= 436.5913421398338) & (partsupp['PS_SUPPKEY'] < 4379) & (partsupp['PS_PARTKEY'] > 21)][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] == 17) & (partsupp['AVAILQTY'] != 6744) & (partsupp['P_COMMENT'] != 'y')][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] <= 3197)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != 'v') | (partsupp['PS_SUPPKEY'] <= 542) & (partsupp['PS_PARTKEY'] > 3)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

region[(region['R_NAME'] == 'M') | (region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('M'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] != 2) | (region['R_NAME'] != 'AME')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-')][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 21)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

customer.merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] <= 13) | (nation['N_NAME'] != 'E')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'H') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] < 45) | (customer['C_NATIONKEY'] == 15) | (customer['C_ADDRESS'] != 'e')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == 6330.920849361575) | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_COMMENT'] != 'o') | (customer['C_CUSTKEY'] != 46) & (customer['C_ADDRESS'].str.startswith('U'))][['C_COMMENT']]

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 16) & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_ADDRESS'] == 'L') & (customer['C_CUSTKEY'] == 4)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] < 9) | (customer['C_PHONE'] != '13-')].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_REGIONKEY'] <= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 19) & (customer['C_COMMENT'] == 'g') | (customer['C_NATIONKEY'] != 0)].groupby(by=['C_CUSTKEY', 'C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 12) & (customer['C_NATIONKEY'] != 22) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] != 219.6443119083251)][['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_PHONE'] != '27-') | (customer['C_COMMENT'] != 'i') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] >= 3) | (lineitem['QUANTITY'] > 42)][['TAX']].groupby(by=['TAX']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'F')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'J')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] < 14)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_NATIONKEY'] < 9)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] != 'A') | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'] == 'e')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'] != 'l') & (orders['O_CUSTKEY'] > 140635) | (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] != 752)].merge(customer[(customer['C_ADDRESS'] == 'j') & (customer['C_CUSTKEY'] > 81) | (customer['C_CUSTKEY'] <= 89)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#15')].groupby(by=['RETAILPRICE', 'P_NAME', 'SIZE', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'n') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) | (part['P_NAME'] != 'i') & (part['P_PARTKEY'] < 127) | (part['MFGR'] != 'Manufacturer#5')].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'lem') | (part['BRAND'] != 'Brand#11') & (part['TYPE'] == 'E')][['P_NAME', 'MFGR', 'RETAILPRICE', 'SIZE']]

part[(part['P_NAME'] == 'b') | (part['RETAILPRICE'] == 1069.1418445126449) | (part['PT_COMMENT'] != 'r') & (part['P_NAME'].str.startswith('k')) & (part['BRAND'] == 'Brand#43')].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] < 1089.1606155007755) | (part['P_NAME'] != 'd') & (part['PT_COMMENT'] != 'r') | (part['TYPE'] != 'E') | (part['TYPE'] != 'S')].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'TYPE', 'BRAND', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'SIZE']]

partsupp[(partsupp['SUPPLYCOST'] <= 746.439056151516) & (partsupp['SUPPLYCOST'] != 744.2531141573558) & (partsupp['AVAILQTY'] != 8789)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']]

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] == 9)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'Z') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] == 538.5875375615326) | (supplier['S_ACCTBAL'] >= 5130.238391649806) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'q')][['S_SUPPKEY']]

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_SUPPKEY'] != 70) | (supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_NATIONKEY'] == 5) & (supplier['S_COMMENT'] != 'f')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] <= 16) | (nation['N_NATIONKEY'] > 14)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('K')) & (customer['C_NATIONKEY'] != 17) | (customer['C_CUSTKEY'] < 6)][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 25) & (customer['C_NATIONKEY'] <= 9) & (customer['C_ADDRESS'].str.startswith('8')) & (customer['C_COMMENT'].str.startswith('o')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] != 15) & (customer['C_ACCTBAL'] == 862.2877013445677) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'BUILDING']))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.09248329183401063) & (lineitem['EXTENDEDPRICE'] == 2025.1555368690629) & (lineitem['SHIPDATE'] <= '1998-10-30')][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['EXTENDEDPRICE'] != 19101.829638435695) & (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_PARTKEY'] > 70767) & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_PARTKEY'] <= 7670) & (lineitem['L_SUPPKEY'] < 1898) | (lineitem['LINENUMBER'] > 1)]

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['L_SUPPKEY'] >= 4781) & (lineitem['COMMITDATE'] != '1998-10-16')][['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['TAX'] > 0.04717608311311019) | (lineitem['L_ORDERKEY'] < 16) & (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['LINENUMBER'] == 1) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_SUPPKEY'] > 5178) & (lineitem['LINENUMBER'] >= 1)]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'R_NAME', 'N_REGIONKEY', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 23)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] < 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V') | (nation['N_COMMENT'].str.startswith('r'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] < 2)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 8) | (nation['N_COMMENT'] != ' ')].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'ORDERSTATUS', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21')][['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK']]

orders[(orders['O_ORDERKEY'] != 387) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['TOTALPRICE'] == 162681.4749561344) | (orders['ORDERDATE'] >= '1992-01-13')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']]

orders[(orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] != 'P')][['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['TOTALPRICE'] >= 26431.834119713763) | (orders['O_CUSTKEY'] < 137528) | (orders['O_CUSTKEY'] != 104630) & (orders['O_ORDERKEY'] <= 470)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#35') | (part['P_PARTKEY'] == 57) | (part['TYPE'] == 'P')].groupby(by=['BRAND', 'CONTAINER', 'MFGR', 'RETAILPRICE']).agg('count')

part[(part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] <= 12) | (part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] != 999.1095544608328) & (part['BRAND'].isin(['Brand#53'])) | (part['P_NAME'] == 'y') & (part['CONTAINER'].str.startswith('SM'))][['CONTAINER']]

part[(part['RETAILPRICE'] < 1015.8661655140734) & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] <= 38)].groupby(by=['P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['SIZE'] >= 37) & (part['TYPE'] == 'S') & (part['RETAILPRICE'] >= 959.7451334093598) & (part['P_NAME'].str.startswith('b'))].groupby(by=['MFGR', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('L')) & (part['MFGR'] == 'Manufacturer#1') & (part['RETAILPRICE'] <= 1012.2181399679966) & (part['P_PARTKEY'] < 183)].groupby(by=['SIZE', 'CONTAINER', 'P_NAME']).agg('count')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] >= 0)][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NAME'] != 'G')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 6226.720006865081) & (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_COMMENT', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] < 6)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] <= 19)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 10) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 11)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer[(customer['C_PHONE'] == '18-') | (customer['C_PHONE'] != '22-') | (customer['C_NATIONKEY'] < 20) & (customer['C_CUSTKEY'] > 57) & (customer['C_PHONE'] != '3')].groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_CUSTKEY'] <= 95) & (customer['C_NATIONKEY'] > 18) & (customer['C_CUSTKEY'] > 33) | (customer['C_ADDRESS'] != 'w') | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ADDRESS'] == 'n') & (customer['C_COMMENT'] == 'd')][['MKTSEGMENT']]

customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['SHIPMODE'].isin(['RAIL', 'TRUCK', 'REG AIR', 'MAIL', 'FOB']))][['RECEIPTDATE', 'COMMITDATE', 'DISCOUNT', 'LINESTATUS']]

lineitem[(lineitem['L_COMMENT'] != 'lit') | (lineitem['L_SUPPKEY'] != 6349) & (lineitem['EXTENDEDPRICE'] < 71159.39255088927) & (lineitem['L_PARTKEY'] > 185648)][['SHIPMODE']].groupby(by=['SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['TAX'] < 0.01952708677019854) & (lineitem['DISCOUNT'] <= 0.03931188856566501) & (lineitem['L_PARTKEY'] > 46128) | (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_SUPPKEY'] > 720)].groupby(by=['LINESTATUS', 'LINENUMBER']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'SHIP') & (lineitem['L_ORDERKEY'] >= 116) | (lineitem['L_ORDERKEY'] == 56) & (lineitem['TAX'] != 0.07864630155552842) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['TAX'] <= 0.0018852593394095597) & (lineitem['L_ORDERKEY'] != 18) & (lineitem['RETURNFLAG'] == 'A')][['RETURNFLAG']]

lineitem[['SHIPDATE', 'L_PARTKEY', 'SHIPMODE', 'DISCOUNT', 'RETURNFLAG', 'LINENUMBER', 'COMMITDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'TAX', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'P') | (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 20) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 'u')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_NAME'] == 'B') | (nation['N_NAME'] == 'U') & (nation['N_NATIONKEY'] != 6)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('v'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'C_PHONE', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] == 29218) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] >= 124523)][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS']]

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE']).agg('count')

part[(part['P_PARTKEY'] < 36)][['P_NAME', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'MFGR']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] >= 1087.0667122731004)][['BRAND', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE']]

part[['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'TYPE']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'P_NAME', 'MFGR', 'CONTAINER', 'TYPE', 'SIZE']].groupby(by=['CONTAINER']).agg('count')

part[['MFGR', 'BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE', 'RETAILPRICE']].groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[['MFGR', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'TYPE', 'PT_COMMENT']].groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'R_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] != 23) | (nation['N_NAME'] == 'R')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_ADDRESS'] != 'B') & (supplier['S_ADDRESS'] == '5')][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] == 157) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'u') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'].str.startswith('n'))][['S_ADDRESS', 'S_PHONE']]

supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == '6') | (customer['C_ACCTBAL'] == 3033.1107690824056) | (customer['C_NATIONKEY'] != 12) | (customer['C_ACCTBAL'] > 37.33899002606313)][['C_NAME', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '13-')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] > 21) | (customer['C_CUSTKEY'] >= 43) | (customer['C_COMMENT'] == 'i') & (customer['C_ADDRESS'] == 'E') | (customer['C_NATIONKEY'] != 12)][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME']]

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] >= 3) & (lineitem['L_COMMENT'] != 'i') & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['L_SUPPKEY'] < 2337) & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_ORDERKEY'] <= 98) & (lineitem['SHIPMODE'] == 'RAIL')][['SHIPINSTRUCT', 'DISCOUNT']]

lineitem[(lineitem['L_PARTKEY'] >= 11183) & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_COMMENT'] != 'l') | (lineitem['L_COMMENT'].str.startswith('v')) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['L_SUPPKEY'] >= 6081) | (lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'TRUCK', 'AIR', 'SHIP', 'REG AIR']))][['LINESTATUS', 'RECEIPTDATE']]

lineitem[(lineitem['TAX'] <= 0.046284244337313) | (lineitem['QUANTITY'] == 23) & (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['DISCOUNT'] <= 0.09024076919117652)][['RETURNFLAG', 'TAX', 'SHIPDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT']]

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] > 19) | (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] < 19)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't') | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] < 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 5) | (nation['N_NAME'] == 'M') & (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'].str.startswith(' '))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] <= 4)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'C_NAME', 'ORDERSTATUS', 'MKTSEGMENT', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] >= 237818.3210720899) & (orders['O_ORDERKEY'] == 418)][['CLERK', 'ORDERDATE']].groupby(by=['CLERK', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 93471) | (orders['O_ORDERKEY'] != 411) | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] < 127508.3782906387)].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 568)][['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] >= 0)][['TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] < 347236.2248947658) | (orders['O_CUSTKEY'] != 60113) & (orders['O_COMMENT'] != 'the') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW'])) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'] != 'F') | (orders['O_COMMENT'] == 'o')][['ORDERSTATUS']]

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] == 11) & (customer['C_COMMENT'] == 'g') | (customer['C_ADDRESS'] == 'Y')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#32') & (part['BRAND'].isin(['Brand#14', 'Brand#13', 'Brand#44', 'Brand#52', 'Brand#21', 'Brand#43', 'Brand#35', 'Brand#11'])) | (part['SIZE'] != 30) | (part['SIZE'] >= 34)].groupby(by=['TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] != 1035.4848678647134) & (part['PT_COMMENT'] == 's') | (part['SIZE'] == 2) | (part['BRAND'].isin(['Brand#42', 'Brand#21', 'Brand#41', 'Brand#52', 'Brand#22', 'Brand#53', 'Brand#23', 'Brand#11', 'Brand#14', 'Brand#34', 'Brand#24', 'Brand#43', 'Brand#32', 'Brand#33', 'Brand#13', 'Brand#45', 'Brand#55', 'Brand#12'])) & (part['P_PARTKEY'] != 77) | (part['TYPE'] == 'SMA')].groupby(by=['CONTAINER', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[(part['SIZE'] < 21) & (part['P_PARTKEY'] <= 147) & (part['RETAILPRICE'] == 1070.7956793082983) & (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'] == 'Brand#45')][['CONTAINER']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'S') | (part['P_PARTKEY'] > 174) | (part['TYPE'] != 'SMA') & (part['SIZE'] <= 8) & (part['BRAND'] != 'Brand#23') & (part['P_NAME'] != 'l')].groupby(by=['TYPE', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] == 17) | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 9129.810791960137) | (supplier['S_SUPPKEY'] == 114) | (supplier['S_SUPPKEY'] > 2) | (supplier['S_SUPPKEY'] < 19) | (supplier['S_PHONE'] != '1')][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_ADDRESS'] == '3') | (supplier['S_COMMENT'] == 'b')].merge(nation[(nation['N_COMMENT'].str.startswith('i'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NATIONKEY'] != 20) | (supplier['S_ADDRESS'].str.startswith('Z')) & (supplier['S_ACCTBAL'] > 6416.987064376095) | (supplier['S_ADDRESS'] != '4') | (supplier['S_NATIONKEY'] != 3) & (supplier['S_ACCTBAL'] < 5755.492536580978)][['S_COMMENT', 'S_ACCTBAL', 'S_NAME']]

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 189) | (supplier['S_COMMENT'] != 'l')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 144) & (supplier['S_PHONE'] != '17-')][['S_PHONE', 'S_NAME']].groupby(by=['S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 194)].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] < 23)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'N_COMMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == '8') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] >= 12)].merge(nation[(nation['N_NATIONKEY'] > 17) & (nation['N_NAME'] != 'I')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 1) & (lineitem['EXTENDEDPRICE'] <= 21961.00621470124) & (lineitem['TAX'] <= 0.0715876665100095) & (lineitem['QUANTITY'] != 24) | (lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'FOB', 'REG AIR'])) & (lineitem['L_PARTKEY'] == 61983) & (lineitem['L_ORDERKEY'] <= 107) | (lineitem['EXTENDEDPRICE'] >= 48909.72881919942) | (lineitem['L_PARTKEY'] >= 100511) & (lineitem['LINENUMBER'] <= 5)][['SHIPMODE']]

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) | (lineitem['EXTENDEDPRICE'] >= 52838.64579916393)][['SHIPMODE']].groupby(by=['SHIPMODE']).agg('count')

nation[(nation['N_NATIONKEY'] <= 0) | (nation['N_NATIONKEY'] < 20)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] == 18) | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'] != 'c')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 2275.7037866740993) | (customer['C_CUSTKEY'] > 90) & (customer['C_PHONE'].str.startswith('22-'))][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 's') & (orders['O_ORDERKEY'] <= 452) & (orders['O_COMMENT'].str.startswith('-')) | (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] == 125361.4394990302)].merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_CUSTKEY'] > 95) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 9446.678516367116)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['MFGR'] != 'Manufacturer#2') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['TYPE'].str.startswith('STA')) & (part['P_NAME'] == 'm') & (part['RETAILPRICE'] < 949.4549786024808) | (part['CONTAINER'].str.startswith('WRAP')) | (part['MFGR'] != 'Manufacturer#4')].groupby(by=['MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] == 'o') & (part['PT_COMMENT'].str.startswith('s')) & (part['CONTAINER'] == 'LG')][['CONTAINER', 'MFGR', 'SIZE', 'BRAND']].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('i')) | (part['P_PARTKEY'] >= 14) | (part['PT_COMMENT'] != 'q') | (part['PT_COMMENT'] == 'x') & (part['SIZE'] > 23) | (part['TYPE'].str.startswith('SMA'))].groupby(by=['CONTAINER', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['SIZE'] >= 9) & (part['BRAND'].isin(['Brand#24', 'Brand#54', 'Brand#43', 'Brand#52', 'Brand#51', 'Brand#15', 'Brand#14', 'Brand#22', 'Brand#33', 'Brand#44', 'Brand#13', 'Brand#12', 'Brand#55', 'Brand#23', 'Brand#32', 'Brand#45', 'Brand#42', 'Brand#11', 'Brand#21', 'Brand#25', 'Brand#34'])) & (part['SIZE'] != 21) | (part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] != 'f') & (part['TYPE'].str.startswith('L')) | (part['TYPE'] == 'SMA') | (part['BRAND'] == 'Brand#34') | (part['TYPE'].str.startswith('STA'))].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'P') & (part['SIZE'] == 21) | (part['P_PARTKEY'] > 42) | (part['BRAND'].isin(['Brand#41', 'Brand#12', 'Brand#32', 'Brand#52', 'Brand#23', 'Brand#24', 'Brand#11', 'Brand#35', 'Brand#14', 'Brand#33', 'Brand#25', 'Brand#45', 'Brand#51', 'Brand#42', 'Brand#34', 'Brand#54', 'Brand#31', 'Brand#55', 'Brand#21', 'Brand#15', 'Brand#22', 'Brand#53', 'Brand#44', 'Brand#43', 'Brand#13'])) & (part['TYPE'] != 'P') & (part['P_NAME'].str.startswith('n'))][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'P_PARTKEY']].groupby(by=['CONTAINER', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['CONTAINER', 'P_NAME', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] < 20) & (nation['N_NAME'].str.startswith('B'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_ADDRESS'] == '0') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] >= 163)][['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '32-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'N_NATIONKEY']).agg('count')

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']).agg('count')

supplier[['S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 0) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY', 'N_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 75) | (customer['C_ACCTBAL'] >= 4110.153486858751)][['C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_ADDRESS'] != 'j') & (customer['C_COMMENT'] == 'h') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] == 7) | (customer['C_NATIONKEY'] >= 15) & (customer['C_PHONE'] == '27-') | (customer['C_ACCTBAL'] >= -608.2482783689682)][['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']]

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'i')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['L_ORDERKEY'] != 128) | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['DISCOUNT'] > 0.014559763259841076) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['EXTENDEDPRICE'] <= 9699.335440324254) | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['RECEIPTDATE'] == '1992-05-02')][['SHIPMODE', 'QUANTITY', 'COMMITDATE', 'SHIPINSTRUCT']]

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT', 'TAX', 'SHIPMODE', 'QUANTITY', 'DISCOUNT']].groupby(by=['SHIPINSTRUCT', 'COMMITDATE', 'DISCOUNT', 'SHIPMODE']).agg('max', numeric_only=True)

lineitem[['TAX', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY', 'LINESTATUS', 'LINENUMBER', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPDATE']].groupby(by=['SHIPDATE', 'QUANTITY']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'N_NATIONKEY', 'R_REGIONKEY', 'N_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] != 19)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] < 2) | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'G') & (nation['N_NAME'] == 'B') | (nation['N_COMMENT'] != 'o')].merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 11) & (nation['N_NAME'] == 'P')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[(customer['C_CUSTKEY'] > 8) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 14) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 19)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['CLERK']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_COMMENT'].str.startswith('ly ')) | (orders['ORDERDATE'] < '1998-07-21')][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'ORDERDATE']].groupby(by=['CLERK', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'y') & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['O_COMMENT'] != 'k')][['ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('a')) | (orders['O_CUSTKEY'] >= 149612) & (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] == 144385) & (orders['O_CUSTKEY'] == 85841) & (orders['O_ORDERKEY'] <= 310) & (orders['O_COMMENT'] != 'r')][['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] == 58437) & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] != 105742.84466584011) & (orders['CLERK'] == 'C')][['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']]

orders[(orders['O_CUSTKEY'] == 68188)][['O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] == 89) | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '27-') & (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_CUSTKEY'] >= 23)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#31') & (part['P_PARTKEY'] > 120) | (part['TYPE'].str.startswith('L'))][['BRAND', 'CONTAINER', 'P_PARTKEY', 'P_NAME']].groupby(by=['BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#12', 'Brand#31', 'Brand#54', 'Brand#14', 'Brand#43', 'Brand#23', 'Brand#34', 'Brand#53'])) & (part['CONTAINER'] == 'MED') | (part['RETAILPRICE'] != 989.3053231293552) | (part['SIZE'] != 10) & (part['BRAND'].isin(['Brand#14', 'Brand#32', 'Brand#15', 'Brand#34', 'Brand#54', 'Brand#35'])) | (part['PT_COMMENT'] != 'd') & (part['P_NAME'] != 'm')][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) | (part['P_NAME'].str.startswith('blu')) | (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'] != 'WRAP') | (part['BRAND'].isin(['Brand#21', 'Brand#45', 'Brand#55'])) | (part['BRAND'] == 'Brand#34') | (part['P_NAME'] != 'd')].groupby(by=['TYPE', 'P_PARTKEY']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2'])) | (part['P_NAME'] != 'm') & (part['TYPE'] != 'L')][['CONTAINER', 'SIZE', 'RETAILPRICE']].groupby(by=['CONTAINER', 'SIZE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('y')) & (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'] != 'o')][['PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME']].groupby(by=['PT_COMMENT', 'MFGR']).agg('count')

part[(part['P_PARTKEY'] != 147) | (part['P_NAME'] != 'a') & (part['TYPE'] == 'L') & (part['P_PARTKEY'] == 58) & (part['BRAND'].isin(['Brand#21', 'Brand#15', 'Brand#51', 'Brand#53', 'Brand#41', 'Brand#12', 'Brand#52', 'Brand#11', 'Brand#14', 'Brand#43', 'Brand#34', 'Brand#35', 'Brand#44', 'Brand#13', 'Brand#22', 'Brand#55', 'Brand#32', 'Brand#24', 'Brand#54', 'Brand#42', 'Brand#45']))][['CONTAINER', 'TYPE', 'PT_COMMENT']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'P') | (part['P_NAME'].str.startswith('y')) | (part['TYPE'] == 'STA') & (part['P_PARTKEY'] > 61) | (part['P_NAME'].str.startswith('i')) & (part['SIZE'] >= 24) | (part['RETAILPRICE'] > 1061.3997190898785) & (part['PT_COMMENT'] != '!')].groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['BRAND', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'TYPE', 'SIZE']].groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE', 'SIZE', 'BRAND']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[(part['BRAND'].isin(['Brand#23', 'Brand#45', 'Brand#35', 'Brand#21', 'Brand#22', 'Brand#43', 'Brand#44', 'Brand#14', 'Brand#32', 'Brand#33', 'Brand#42', 'Brand#51', 'Brand#53', 'Brand#55', 'Brand#12', 'Brand#25', 'Brand#13', 'Brand#34', 'Brand#11', 'Brand#24', 'Brand#52', 'Brand#41', 'Brand#54']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] != 'r') & (supplier['S_SUPPKEY'] <= 119)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 19) | (supplier['S_NATIONKEY'] <= 16) & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2735) | (partsupp['PS_SUPPKEY'] != 4840)][['PS_PARTKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'w') | (part['P_PARTKEY'] != 190) & (part['CONTAINER'] == 'LG') | (part['TYPE'] != 'E') & (part['RETAILPRICE'] != 1067.4685008649806)][['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] == 'f') | (supplier['S_SUPPKEY'] != 126) | (supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'bli') & (supplier['S_PHONE'] != '17-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_COMMENT'] == 'c')].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 15)].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] < 0) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'S_ADDRESS', 'N_NATIONKEY', 'S_ACCTBAL']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'] != 's')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 6) & (supplier['S_PHONE'] != '17-')].merge(nation[(nation['N_COMMENT'] == 'n') | (nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] > 3) & (nation['N_COMMENT'] == 'v')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_SUPPKEY'] <= 98)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] >= 6) & (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'].str.startswith('v'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 23)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 187.67816410325872) & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'].str.startswith('X')) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('f'))].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] >= 14)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == '8')].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] > 23) & (nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 10) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] == 'e')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] != 3) | (nation['N_REGIONKEY'] == 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 5) & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_ADDRESS'].str.startswith('0'))][['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] != '13-') & (customer['C_NATIONKEY'] < 9) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] > 98) & (customer['C_ACCTBAL'] > 5335.642202693194)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']]

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINENUMBER'] != 6) | (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['EXTENDEDPRICE'] == 88050.65913850439) | (lineitem['QUANTITY'] == 21) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_ORDERKEY'] > 46) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['SHIPMODE', 'DISCOUNT', 'SHIPINSTRUCT', 'COMMITDATE']]

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'RECEIPTDATE', 'L_COMMENT', 'TAX', 'DISCOUNT', 'LINENUMBER', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 436.1395440678179)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] == 'h')].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'u')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'N_COMMENT', 'R_REGIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] != 18)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] < 11)][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 6) | (customer['C_ADDRESS'] != 'K')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_COMMENT'] != 'i') | (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'].str.startswith('b'))].merge(customer[(customer['C_ADDRESS'].str.startswith('f'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 4134) & (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] < 175774.83441360897) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0)].groupby(by=['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 275997.067489806) & (orders['TOTALPRICE'] >= 299034.2624813731) | (orders['O_CUSTKEY'] > 122529) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '5-LOW', '3-MEDIUM'])) | (orders['O_ORDERKEY'] != 81) & (orders['O_ORDERKEY'] < 625) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] <= 392) | (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']]

partsupp[(partsupp['AVAILQTY'] > 8306)].merge(supplier[(supplier['S_ACCTBAL'] == 8762.335590115044)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 9366.650022658921) | (supplier['S_PHONE'] == '14-') | (supplier['S_COMMENT'] == 'a') | (supplier['S_ACCTBAL'] < 81.18313252792609)][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 41) & (supplier['S_COMMENT'].str.startswith(' sl'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_ACCTBAL', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'R_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 4008.8945472010882) | (customer['C_NATIONKEY'] == 15)][['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL']).agg('count')

customer[(customer['C_COMMENT'] == 'o') | (customer['C_CUSTKEY'] >= 82) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] >= 6)].merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] != 'S') | (nation['N_NAME'] != 'U')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 45) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] <= 9265.778534364528)].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] == 23) | (nation['N_NAME'].str.startswith('I'))][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 99) | (lineitem['QUANTITY'] == 13) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['L_COMMENT'].str.startswith('s. ')) & (lineitem['LINESTATUS'] != 'F') & (lineitem['L_PARTKEY'] < 83020) & (lineitem['EXTENDEDPRICE'] > 18330.878248759444) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['EXTENDEDPRICE'] == 87012.83731753717) | (lineitem['DISCOUNT'] > 0.0757526803375358)][['SHIPDATE', 'RETURNFLAG', 'LINENUMBER', 'DISCOUNT']]

nation[(nation['N_COMMENT'] == 's')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] >= 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 18) | (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 10)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 8)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_NATIONKEY', 'R_NAME', 'N_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'R_NAME', 'R_REGIONKEY', 'N_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] == 'h') & (customer['C_ACCTBAL'] != 3027.944118700063) & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_CUSTKEY'] > 9) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('18-'))].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] == 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'n') | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '5-LOW', '1-URGENT'])) | (orders['TOTALPRICE'] == 6615.22170584649) | (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] < 115) | (orders['O_ORDERKEY'] < 167)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#25') | (part['SIZE'] >= 24) | (part['P_NAME'] == 't') & (part['BRAND'] != 'Brand#15') & (part['TYPE'] != 'SMA') | (part['SIZE'] > 28) & (part['RETAILPRICE'] >= 981.1277949094083) & (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('i'))][['TYPE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'MFGR', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'lem') | (part['P_NAME'].str.startswith('y')) & (part['PT_COMMENT'].str.startswith('u')) | (part['SIZE'] == 17) | (part['PT_COMMENT'] != 'b') | (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] == 935.4372248269794) & (part['P_NAME'] == 'd') & (part['P_NAME'] != 'cor')][['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'SIZE']]

partsupp[(partsupp['PS_SUPPKEY'] >= 6481)].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 680.3189321021348) & (partsupp['AVAILQTY'] != 438) & (partsupp['AVAILQTY'] != 9455) | (partsupp['PS_PARTKEY'] < 31) | (partsupp['P_COMMENT'] != '.')][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('v'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_COMMENT'] == 'h') | (supplier['S_NATIONKEY'] != 14) & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_COMMENT'] != 'b')][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 14) | (supplier['S_NATIONKEY'] <= 0) | (supplier['S_NATIONKEY'] != 19)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('count')

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] >= 15) | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'] == '14-')].merge(nation[(nation['N_NAME'] == 'G')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'N_COMMENT', 'N_NAME']).agg('count')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] >= 4)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 5729.663623454271) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 17) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('.')) & (customer['C_CUSTKEY'] > 93)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'N_NATIONKEY', 'C_CUSTKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 't') & (customer['C_NATIONKEY'] > 15) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-') & (customer['C_ADDRESS'] == 'X') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_PHONE'] == '3')][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']]

customer[(customer['C_COMMENT'] == 'l') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) & (customer['C_ADDRESS'] == 'h') | (customer['C_COMMENT'].str.startswith('f'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('a')) | (customer['C_NATIONKEY'] <= 3)].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('i'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'J') & (nation['N_COMMENT'].str.startswith('i'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_SUPPKEY', 'AVAILQTY', 'O_ORDERKEY', 'RETAILPRICE', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 5) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_NATIONKEY'] <= 5) & (supplier['S_ADDRESS'] != ' ') & (supplier['S_ADDRESS'].str.startswith('8'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 36.869820478742334)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'LINENUMBER']).agg('count')

nation[(nation['N_COMMENT'] == 'a')].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'A') | (nation['N_NAME'] == 'B') & (nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] != 21)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 22) | (nation['N_NATIONKEY'] == 11)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY', 'R_COMMENT', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_ADDRESS'] == 'K') | (customer['C_PHONE'] != '25-') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('a')) & (orders['O_COMMENT'] != '-') & (orders['O_ORDERKEY'] > 139) | (orders['ORDERSTATUS'].isin(['F', 'O']))][['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']).agg('count')

orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'TOTALPRICE', 'ORDERSTATUS']).agg('count')

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('count')

part[(part['CONTAINER'] == 'MED') & (part['CONTAINER'] != 'WRAP')][['P_NAME', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'].str.startswith('STA')) & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'e') | (part['P_PARTKEY'] == 7) | (part['CONTAINER'].str.startswith('SM')) & (part['RETAILPRICE'] > 909.2241067680919)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] == 21) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_SUPPKEY'] < 50) & (supplier['S_PHONE'].str.startswith('26-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'P_COMMENT', 'PS_SUPPKEY']).agg('count')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 138) | (supplier['S_ADDRESS'].str.startswith('u')) | (supplier['S_ACCTBAL'] == 2491.6394314894223) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 7137.601465576362)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('S')) & (part['BRAND'] != 'Brand#43') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['P_NAME'] == 'p')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 23)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_PHONE']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] != 'B') & (nation['N_COMMENT'] != 'u')].merge(region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'N_REGIONKEY', 'N_NATIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '28-')][['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 18) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] == 's') & (nation['N_NAME'].str.startswith('E'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_COMMENT'] == 'e') & (supplier['S_ADDRESS'] != 'w') & (supplier['S_COMMENT'] != 'r') & (supplier['S_SUPPKEY'] > 45) & (supplier['S_ACCTBAL'] == 9043.200075972121) & (supplier['S_ADDRESS'] == '4')].merge(nation[(nation['N_COMMENT'].str.startswith('r'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] <= 17) & (nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'P') | (customer['C_NATIONKEY'] < 9) | (customer['C_CUSTKEY'] <= 48) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_COMMENT'] != 'a') | (customer['C_ADDRESS'] == 'g') | (customer['C_ADDRESS'].str.startswith('n'))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].groupby(by=['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 15) & (customer['C_CUSTKEY'] != 56) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] > 20) & (customer['C_CUSTKEY'] <= 38) & (customer['C_ACCTBAL'] != 9770.794567351713)][['C_PHONE', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'O_COMMENT', 'SHIPMODE', 'COMMITDATE', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] == 9) & (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'N_REGIONKEY', 'N_COMMENT', 'O_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'C_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('f')) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] != 0)][['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 272332.3103321735) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] < 763) & (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] == 82489) | (orders['O_ORDERKEY'] == 46)][['ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS', 'CLERK']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 6561) | (partsupp['P_COMMENT'] != 'n') | (partsupp['SUPPLYCOST'] == 424.59738627171384)].merge(supplier[(supplier['S_ACCTBAL'] > 1564.3127891157976)][['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_ADDRESS'] == 'p') & (supplier['S_NATIONKEY'] <= 23) | (supplier['S_ACCTBAL'] >= 8364.854693368648) & (supplier['S_ADDRESS'].str.startswith('x')) & (supplier['S_COMMENT'] != 't') | (supplier['S_ADDRESS'].str.startswith('F'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] != 'w') | (supplier['S_ACCTBAL'] >= -53.101978268236394) & (supplier['S_NATIONKEY'] > 11) | (supplier['S_ACCTBAL'] >= 6672.44395072843) | (supplier['S_ACCTBAL'] == 9171.57171457808)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_NATIONKEY', 'N_NAME', 'S_PHONE', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 18) | (customer['C_CUSTKEY'] > 29) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_ADDRESS']).agg('count')

lineitem[['COMMITDATE', 'RETURNFLAG', 'SHIPINSTRUCT', 'QUANTITY', 'L_ORDERKEY', 'SHIPDATE']].merge(orders[(orders['O_COMMENT'].str.startswith('ly ')) & (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_NAME'] != 'F')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_NAME', 'N_NATIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('L')) & (customer['C_CUSTKEY'] <= 94) & (customer['C_ACCTBAL'] != 8086.861521919713) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] <= 25) | (customer['C_COMMENT'].str.startswith(' ')) & (customer['C_ADDRESS'].str.startswith('R'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] == 'a') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] <= 167917.06979163075) | (orders['O_ORDERKEY'] < 450) | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] != 97) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '4-NOT SPECIFIED', '2-HIGH']))].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith(',')) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['TOTALPRICE'] >= 344448.0672751329) | (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] <= 49064) | (orders['O_CUSTKEY'] <= 41772) | (orders['O_CUSTKEY'] < 59582)][['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

orders[['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NAME']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 155) | (part['RETAILPRICE'] <= 1069.1158900351131) | (part['PT_COMMENT'] == 'r') & (part['TYPE'] == 'S') & (part['BRAND'] != 'Brand#25') | (part['BRAND'].isin(['Brand#13', 'Brand#35', 'Brand#24', 'Brand#15', 'Brand#21', 'Brand#23', 'Brand#14']))][['SIZE', 'BRAND', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 44) | (part['P_PARTKEY'] == 160) & (part['TYPE'] == 'STA') | (part['P_NAME'] != 'i') | (part['MFGR'].isin(['Manufacturer#3'])) & (part['TYPE'] == 'E') | (part['MFGR'].isin(['Manufacturer#4'])) | (part['PT_COMMENT'].str.startswith('q'))][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'BRAND', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME']]

partsupp[(partsupp['PS_SUPPKEY'] >= 6757) | (partsupp['AVAILQTY'] <= 5363) | (partsupp['PS_SUPPKEY'] < 3115) | (partsupp['PS_SUPPKEY'] != 1788) | (partsupp['SUPPLYCOST'] != 767.3033362506706)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('y')) | (part['TYPE'] != 'STA') & (part['P_NAME'] != 'd') & (part['P_PARTKEY'] >= 180)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'f') & (partsupp['PS_SUPPKEY'] == 1640)].merge(supplier[(supplier['S_SUPPKEY'] == 135) | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_COMMENT'].str.startswith('q'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 631.3667576816695) | (partsupp['PS_SUPPKEY'] < 7533)].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'P_COMMENT', 'S_ACCTBAL', 'PS_SUPPKEY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] != 152) & (part['SIZE'] == 36) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) | (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'] != 'bis') | (part['RETAILPRICE'] >= 903.7247118400487)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'P_COMMENT', 'S_SUPPKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'T') & (supplier['S_PHONE'] != '32-') & (supplier['S_SUPPKEY'] >= 100)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_PHONE', 'N_NATIONKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 10)].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 29) | (supplier['S_SUPPKEY'] >= 70) & (supplier['S_ACCTBAL'] > 6483.503775160977) | (supplier['S_NATIONKEY'] >= 3)].merge(nation.merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 30) | (supplier['S_SUPPKEY'] > 134) | (supplier['S_SUPPKEY'] >= 108) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '26-') & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'R_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7030.22596460705) | (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_COMMENT'].str.startswith('e'))].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_NATIONKEY'] == 17) | (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] < 18)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_NAME', 'C_NAME', 'C_PHONE', 'C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[['LINENUMBER', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'TAX', 'EXTENDEDPRICE', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 581.0225417487418) | (partsupp['SUPPLYCOST'] > 257.7704349080526) | (partsupp['PS_PARTKEY'] > 24) | (partsupp['P_COMMENT'] == 'are') | (partsupp['P_COMMENT'].str.startswith('b'))], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'].str.startswith('V'))][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] <= 12)].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] == 3)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'C_ACCTBAL', 'SHIPPRIORITY', 'N_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 7197.475685151902) | (customer['C_ADDRESS'] == 'S') & (customer['C_NATIONKEY'] == 8) & (customer['C_PHONE'] != '1') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('c')) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED'])) | (orders['O_ORDERKEY'] >= 139) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_CUSTKEY'] > 86362) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] <= 61704) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 329139.60603503394)].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] >= 19) & (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE']).agg('count')

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING']))][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY']).agg('count')

part[(part['P_PARTKEY'] >= 125) & (part['PT_COMMENT'] == 'k') | (part['P_PARTKEY'] != 33) & (part['P_PARTKEY'] >= 66) | (part['TYPE'].str.startswith('L')) | (part['TYPE'].str.startswith('SMA')) & (part['RETAILPRICE'] < 1061.424169631471)][['SIZE', 'BRAND', 'MFGR', 'CONTAINER']].groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['BRAND', 'PS_PARTKEY', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] <= 145) | (part['CONTAINER'] != 'SM') & (part['SIZE'] < 37)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 1) & (partsupp['SUPPLYCOST'] == 794.5401634522668)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 1903) & (partsupp['PS_PARTKEY'] <= 16)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['BRAND'] == 'Brand#25')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_SUPPKEY'] != 2284) | (partsupp['P_COMMENT'] == 'y') | (partsupp['PS_PARTKEY'] > 33)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] > 113) | (part['P_NAME'] != 'h') | (part['BRAND'] != 'Brand#14') & (part['SIZE'] <= 6) & (part['RETAILPRICE'] == 1071.0250191243495) | (part['P_NAME'] == 'w')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_SUPPKEY'] < 14) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 145) | (supplier['S_ADDRESS'] == ' ') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] >= 6810.544616596556) & (supplier['S_NATIONKEY'] <= 1) & (supplier['S_ACCTBAL'] > 8775.464127877944)][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'SHIPDATE', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'P_COMMENT', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'LINESTATUS', 'L_PARTKEY', 'RECEIPTDATE', 'TAX', 'SHIPDATE', 'SHIPINSTRUCT', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 47) | (partsupp['PS_PARTKEY'] > 2) & (partsupp['PS_SUPPKEY'] <= 1136)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_ORDERKEY', 'RETURNFLAG', 'QUANTITY', 'EXTENDEDPRICE', 'DISCOUNT', 'LINESTATUS', 'SHIPMODE']].merge(orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] == 'E')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'] == 'B')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NAME', 'N_REGIONKEY', 'R_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '25-') & (customer['C_CUSTKEY'] <= 16) & (customer['C_CUSTKEY'] <= 50) | (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'BUILDING')][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] <= 303065.2156298134) | (orders['ORDERSTATUS'] == 'O') | (orders['CLERK'] != 'C')].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders[(orders['TOTALPRICE'] <= 61612.80427541167) & (orders['TOTALPRICE'] == 135969.83804836485) | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 352455.6410423881) & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'].str.startswith('y'))].merge(customer[(customer['C_COMMENT'].str.startswith('t')) & (customer['C_ADDRESS'] != 'o') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 30)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] == 'Brand#45') | (part['SIZE'] == 29) | (part['TYPE'] == 'M') | (part['SIZE'] > 47) & (part['RETAILPRICE'] >= 1090.5883911071478) | (part['P_PARTKEY'] != 122) | (part['PT_COMMENT'] == 'o') | (part['SIZE'] <= 7)][['TYPE', 'PT_COMMENT', 'MFGR', 'P_NAME']].groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'P_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('.'))].merge(part[(part['P_PARTKEY'] < 196) & (part['SIZE'] == 6) & (part['BRAND'].isin(['Brand#45', 'Brand#53', 'Brand#55', 'Brand#23', 'Brand#44', 'Brand#52', 'Brand#21', 'Brand#11', 'Brand#41', 'Brand#15', 'Brand#33'])) | (part['P_PARTKEY'] >= 128) & (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR', 'CONTAINER', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 0)][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] != 9) | (nation['N_COMMENT'] != 'n')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] > 1) | (customer['C_ADDRESS'] == 'v')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] != 'n') | (nation['N_NAME'] != 'M')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 17) | (customer['C_PHONE'] != '3') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 61) | (customer['C_PHONE'] == '2')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '13-') & (customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ADDRESS'] == 'v') | (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] == 8) | (customer['C_CUSTKEY'] != 94) | (customer['C_COMMENT'] == 'c') & (customer['C_NATIONKEY'] != 16) & (customer['C_ADDRESS'] != 'b') & (customer['C_COMMENT'] != 'q')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_NATIONKEY', 'C_CUSTKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 25) & (customer['C_ADDRESS'] == 'f') | (customer['C_COMMENT'] == 'f') & (customer['C_COMMENT'] != 'd') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] < 20)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_ACCTBAL'] >= 6521.858361520181) | (customer['C_CUSTKEY'] < 32) & (customer['C_NATIONKEY'] < 8) & (customer['C_CUSTKEY'] > 8) & (customer['C_NATIONKEY'] != 18) | (customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'AFR') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_NAME'] == 'E') & (nation['N_NATIONKEY'] >= 12) | (nation['N_NAME'] == 'A')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.016295141159327575) & (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_COMMENT'] == '-')][['TAX', 'QUANTITY', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT', 'RECEIPTDATE', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'R_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] > 93) & (customer['C_CUSTKEY'] > 2) | (customer['C_ADDRESS'].str.startswith('g')) | (customer['C_ACCTBAL'] > 8761.58857687522) & (customer['C_ADDRESS'].str.startswith('g'))][['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] == 'C')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] == 47) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_PHONE'] != '18-') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] != 6349.459855457592)][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'C_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[['BRAND', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'e') & (supplier['S_ADDRESS'] != 'm') & (supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_SUPPKEY'] > 73)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#54', 'Brand#13', 'Brand#44', 'Brand#23', 'Brand#51', 'Brand#24', 'Brand#12', 'Brand#21', 'Brand#22', 'Brand#11', 'Brand#45', 'Brand#53'])) | (part['BRAND'].isin(['Brand#33', 'Brand#23', 'Brand#12', 'Brand#32', 'Brand#14', 'Brand#53', 'Brand#21', 'Brand#11', 'Brand#13', 'Brand#24', 'Brand#44', 'Brand#45', 'Brand#15', 'Brand#51', 'Brand#54', 'Brand#43', 'Brand#42', 'Brand#34', 'Brand#41', 'Brand#52'])) & (part['SIZE'] != 41) & (part['TYPE'] != 'L') & (part['PT_COMMENT'].str.startswith('h')) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['SIZE'] > 11)][['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 712) & (partsupp['PS_SUPPKEY'] >= 4760) & (partsupp['SUPPLYCOST'] > 537.0280208775284) | (partsupp['PS_PARTKEY'] >= 22) & (partsupp['PS_SUPPKEY'] >= 4630)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['TYPE', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PS_PARTKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 831.5711473342622) | (supplier['S_SUPPKEY'] <= 41) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'V') | (supplier['S_ADDRESS'].str.startswith('4'))][['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] > 17)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'al ') & (supplier['S_SUPPKEY'] == 191)].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] != 'o') & (nation['N_NAME'] == 'E')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > 3562.66496095238) | (supplier['S_ACCTBAL'] >= 3125.338972629801) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 40) & (supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 10) | (supplier['S_ADDRESS'] != 'I') & (supplier['S_NATIONKEY'] != 0) & (supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_SUPPKEY'] == 176) | (supplier['S_ADDRESS'].str.startswith('D')) | (supplier['S_ACCTBAL'] <= 6713.332358382631)].merge(nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AME') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] <= 148) | (supplier['S_SUPPKEY'] <= 75) & (supplier['S_ADDRESS'].str.startswith('t'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 88) | (customer['C_CUSTKEY'] >= 32)][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] > 13)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_CUSTKEY'] >= 48) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_COMMENT'] == 'a') & (customer['C_NAME'] == 'C')][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 16) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'].str.startswith('n'))].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_NAME', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 22) & (nation['N_NAME'] != 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 7)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['EXTENDEDPRICE'] >= 46011.288667519075) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'NONE')][['COMMITDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'EXTENDEDPRICE', 'LINESTATUS', 'RECEIPTDATE', 'LINENUMBER', 'SHIPDATE']].groupby(by=['RECEIPTDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINENUMBER']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_ORDERKEY', 'CLERK', 'ORDERDATE']).agg('count')

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'L_SUPPKEY', 'SHIPDATE', 'COMMITDATE', 'SHIPMODE', 'DISCOUNT', 'QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['DISCOUNT', 'SHIPMODE', 'PT_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'U')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_COMMENT', 'N_REGIONKEY', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) | (orders['CLERK'] == 'C') | (orders['O_COMMENT'] != 'x') & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('w')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('d')) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('E')) | (customer['C_COMMENT'] != ',')][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_NATIONKEY'] != 19) & (customer['C_ADDRESS'] == 'R') & (customer['C_ADDRESS'] != 'P') | (customer['C_ACCTBAL'] <= 6013.434774795677) & (customer['C_CUSTKEY'] < 95) | (customer['C_CUSTKEY'] > 18) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'CLERK', 'C_NAME', 'C_ADDRESS']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 6100)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] <= 3414.886611992185)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_PARTKEY', 'P_COMMENT', 'RETAILPRICE', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 7) & (partsupp['PS_SUPPKEY'] >= 7192) & (partsupp['PS_SUPPKEY'] == 7245) | (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_SUPPKEY'] == 6635)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 5) | (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 5) & (partsupp['PS_SUPPKEY'] >= 6845) & (partsupp['AVAILQTY'] < 9475) & (partsupp['SUPPLYCOST'] >= 819.8537888729056)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 32) | (partsupp['PS_PARTKEY'] <= 5) & (partsupp['PS_PARTKEY'] >= 10) & (partsupp['PS_PARTKEY'] == 14) | (partsupp['SUPPLYCOST'] >= 93.64483872215735)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['TYPE'] == 'M') | (part['TYPE'].str.startswith('SMA')) & (part['SIZE'] == 29) & (part['SIZE'] == 13) & (part['PT_COMMENT'] != 'g') | (part['P_PARTKEY'] < 198) & (part['BRAND'].isin(['Brand#11', 'Brand#15', 'Brand#53', 'Brand#32', 'Brand#35', 'Brand#54', 'Brand#43']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 24) & (partsupp['SUPPLYCOST'] >= 466.09733301509203) | (partsupp['PS_PARTKEY'] >= 13) | (partsupp['PS_PARTKEY'] <= 42) | (partsupp['AVAILQTY'] != 5171)].merge(supplier[(supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 182) & (supplier['S_ACCTBAL'] <= 1266.3638376661067) | (supplier['S_SUPPKEY'] < 7) & (supplier['S_COMMENT'] != 'f')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_PHONE', 'PS_PARTKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != -511.26019678973995) & (supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_SUPPKEY'] <= 14) & (supplier['S_ACCTBAL'] >= 3281.1322956256245)].merge(nation[(nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] <= 19) & (nation['N_COMMENT'] != 'a')].merge(region[(region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] <= 4461.944222613497) & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] != 79) | (customer['C_COMMENT'] == ' ')].merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] != 'c')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'N_NATIONKEY', 'MKTSEGMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('count')

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('s'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[['SHIPDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] <= 2457) | (partsupp['PS_PARTKEY'] < 33) | (partsupp['AVAILQTY'] <= 7356) & (partsupp['PS_PARTKEY'] == 28) & (partsupp['PS_SUPPKEY'] > 179)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['SIZE'] < 29)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 'ly ') | (orders['O_COMMENT'] != 'the') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] != 117378) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_ACCTBAL'] != 9281.87275429366) | (customer['C_NATIONKEY'] != 1) | (customer['C_PHONE'] != '3') & (customer['C_COMMENT'].str.startswith('a')) | (customer['C_ADDRESS'] == '4') & (customer['C_PHONE'] != '22-')][['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 99018.98077984087) & (orders['ORDERDATE'] <= '1998-07-21')][['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY']].merge(customer[(customer['C_CUSTKEY'] < 67) | (customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[['C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'ORDERPRIORITY', 'C_NATIONKEY', 'C_PHONE', 'C_NAME']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] >= 26) & (part['PT_COMMENT'] == 'kag') & (part['SIZE'] != 3) | (part['TYPE'].str.startswith('S')) & (part['PT_COMMENT'].str.startswith('w')) | (part['P_NAME'] == 'a')][['P_NAME', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT']].groupby(by=['SIZE', 'MFGR', 'TYPE', 'P_NAME', 'P_PARTKEY']).agg('count')

part[(part['RETAILPRICE'] == 963.0563657428995) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_NAME'] != 'a') | (part['SIZE'] < 1) | (part['TYPE'] != 'SMA') & (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] >= 10) & (part['SIZE'] < 42)][['SIZE', 'PT_COMMENT', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['SIZE', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] >= 191) & (supplier['S_ADDRESS'] == 'C') & (supplier['S_ADDRESS'] != 'q') & (supplier['S_SUPPKEY'] >= 44) & (supplier['S_NATIONKEY'] <= 8)][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith(' fi')) & (part['SIZE'] != 40)][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('28-'))].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'C')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND', 'PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 102)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] != 1061.9959303360033)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_COMMENT', 'PS_SUPPKEY', 'S_ADDRESS', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 33) | (partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['P_COMMENT'] == 's') | (partsupp['PS_PARTKEY'] >= 18) | (partsupp['P_COMMENT'] == ',')][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 171) | (supplier['S_NATIONKEY'] > 18) & (supplier['S_COMMENT'] != 's') & (supplier['S_PHONE'] == '2')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 917) & (partsupp['P_COMMENT'] == 'k') | (partsupp['AVAILQTY'] == 6669) & (partsupp['SUPPLYCOST'] == 581.8069905726209)].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] == 'Brand#44') & (part['RETAILPRICE'] < 904.9624619361913)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NAME', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] > 12) | (supplier['S_COMMENT'] == 'x') | (supplier['S_ACCTBAL'] >= 265.477019459694)][['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'S_PHONE', 'S_NAME', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 4070.038664714725)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'R_NAME', 'S_ACCTBAL', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] != -59.44002270104966) & (supplier['S_ADDRESS'] != 'r') | (supplier['S_COMMENT'] != 'n') & (supplier['S_ACCTBAL'] < 7033.947707224746) | (supplier['S_NATIONKEY'] != 21)][['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 78) | (supplier['S_ACCTBAL'] < 5373.6050245707265) & (supplier['S_PHONE'] != '28-')][['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 29)][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 8572.498589574812) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] > 91) & (customer['C_COMMENT'] != 'c') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 97)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'N_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.01079782327395244)][['L_PARTKEY', 'DISCOUNT', 'SHIPMODE', 'TAX', 'EXTENDEDPRICE', 'LINENUMBER', 'L_SUPPKEY', 'L_COMMENT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['DISCOUNT', 'P_PARTKEY', 'P_NAME', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'QUANTITY', 'LINENUMBER', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'TAX', 'EXTENDEDPRICE', 'L_ORDERKEY', 'DISCOUNT']].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['QUANTITY', 'ORDERPRIORITY', 'RECEIPTDATE']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'b') & (customer['C_PHONE'] == '1') & (customer['C_COMMENT'] == ' ') & (customer['C_COMMENT'].str.startswith('s')) | (customer['C_ADDRESS'] != 'S')][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] <= 574) | (orders['O_ORDERKEY'] == 767) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] > 168530.38958440343) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] >= 281964.33218091476) | (orders['O_COMMENT'] != 'uri')].merge(customer[(customer['C_ACCTBAL'] == 8708.965044581772)][['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(part[(part['TYPE'] == 'STA') & (part['BRAND'] != 'Brand#44') | (part['RETAILPRICE'] > 1070.0584767278906) & (part['SIZE'] >= 48) & (part['P_NAME'] != 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 4) & (nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 860.5424966781802) & (supplier['S_COMMENT'] == 'd') | (supplier['S_ACCTBAL'] >= -730.4362897138328) | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] <= 10)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_NATIONKEY'] != 16) & (supplier['S_ADDRESS'].str.startswith('C')) & (supplier['S_NATIONKEY'] <= 1) | (supplier['S_ACCTBAL'] < 5720.0082937906955)].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'N_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 8135.0768629794275) | (customer['C_COMMENT'] != 'i') | (customer['C_ADDRESS'].str.startswith('h')) & (customer['C_CUSTKEY'] > 86) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY'])) & (customer['C_CUSTKEY'] >= 30) | (customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 5297.341513160645) & (customer['C_COMMENT'] != 'w') | (customer['C_CUSTKEY'] > 59) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE'])) | (customer['C_ADDRESS'] == 'p') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'] == '27-') | (customer['C_NATIONKEY'] <= 0)].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] >= 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'N_NAME', 'R_NAME', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('p')) | (customer['C_CUSTKEY'] != 92) & (customer['C_ACCTBAL'] > 985.8123485149592) & (customer['C_CUSTKEY'] == 36) | (customer['C_NAME'] != 'C')].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 2600.8215944396147) & (customer['C_COMMENT'] == 't') | (customer['C_COMMENT'].str.startswith('q')) | (customer['C_COMMENT'].str.startswith('q'))].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'N_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 71)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_COMMENT', 'N_NATIONKEY', 'C_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_NAME'] != 'lem') & (part['RETAILPRICE'] < 919.7004369781961)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] <= 281805.73231153336)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['EXTENDEDPRICE', 'ORDERPRIORITY', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 69081.39723272622) & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['TOTALPRICE'] >= 317004.523846338) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1998-07-21') & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != ' re') | (orders['SHIPPRIORITY'] != 0)][['ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'o') & (part['RETAILPRICE'] != 1011.2838928078489) & (part['P_NAME'] == 'k') | (part['TYPE'].str.startswith('SMA')) & (part['SIZE'] > 25) | (part['P_NAME'].str.startswith('m')) & (part['P_NAME'] != 'f')][['BRAND', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

partsupp.merge(part[['SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'N_NATIONKEY', 'AVAILQTY', 'S_ACCTBAL']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 11) | (partsupp['P_COMMENT'] == 's') & (partsupp['PS_PARTKEY'] != 6) | (partsupp['PS_PARTKEY'] < 15) | (partsupp['PS_SUPPKEY'] >= 3405)].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY', 'SIZE', 'TYPE']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'].str.startswith('J'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'R_REGIONKEY', 'AVAILQTY']).agg('count')

customer[(customer['C_ADDRESS'] == 'l') & (customer['C_ADDRESS'] == 'P') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) & (customer['C_NATIONKEY'] != 14)][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] > 9) | (nation['N_COMMENT'].str.startswith('c'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 3) & (customer['C_PHONE'] != '3') & (customer['C_COMMENT'] == ' ') & (customer['C_COMMENT'] == 'g') | (customer['C_ADDRESS'] != 'K') & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C')][['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'C_ACCTBAL', 'C_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NAME'] == 'I')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['DISCOUNT'] > 0.09373597866042582)].merge(orders[['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 26)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPINSTRUCT', 'L_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['TAX'] == 0.005832550345234644) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['L_ORDERKEY'] >= 59) & (lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'TRUCK']))][['COMMITDATE', 'SHIPDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'L_PARTKEY', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'RETURNFLAG', 'SHIPDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'L_COMMENT']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'L_PARTKEY', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'RECEIPTDATE', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 6531) & (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['PS_PARTKEY'] != 40)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NATIONKEY'] < 6) | (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY', 'R_NAME', 'N_COMMENT', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_CUSTKEY'] == 94913) | (orders['TOTALPRICE'] < 197049.3926990083) & (orders['TOTALPRICE'] < 217792.49250109942) & (orders['SHIPPRIORITY'] > 0)].merge(customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'S')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['TOTALPRICE'] == 97965.0195921422) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] > 50442.56772054031) | (orders['ORDERDATE'] == '1998-07-21')].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 184) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] != 285511.03695639805) & (orders['O_CUSTKEY'] <= 82028) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('y')) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['SHIPPRIORITY'] <= 0)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'C_PHONE', 'N_NAME', 'C_ACCTBAL']).agg('count')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] == 'Brand#34') | (part['P_PARTKEY'] < 131) & (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] > 38) | (part['SIZE'] <= 16) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2']))][['P_NAME', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 5427) & (partsupp['PS_PARTKEY'] != 25) | (partsupp['PS_SUPPKEY'] >= 2283) | (partsupp['P_COMMENT'] != 'r')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] >= 7150.793094566662) | (supplier['S_ACCTBAL'] < 2111.22814526785) | (supplier['S_NATIONKEY'] < 13) | (supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ACCTBAL'] > 1811.2969504900032) | (supplier['S_NATIONKEY'] > 21) & (supplier['S_NATIONKEY'] != 23)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['TYPE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 712.3891441016704) | (partsupp['SUPPLYCOST'] > 236.04493886323158)].merge(part[(part['RETAILPRICE'] == 1072.475966884637) | (part['SIZE'] == 1) | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] == 1024.4562451628256)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_COMMENT'] == 'k') | (supplier['S_ADDRESS'] == 'y') & (supplier['S_ACCTBAL'] > 8570.407927347698)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 197) & (supplier['S_ACCTBAL'] <= 7524.010483294339) & (supplier['S_NATIONKEY'] <= 18) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] != 3)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'N_NAME', 'N_REGIONKEY', 'R_COMMENT', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'S_PHONE', 'N_REGIONKEY', 'S_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 43.18679027306041) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] != 53) | (customer['C_COMMENT'] == ' ') | (customer['C_COMMENT'] == 'k')][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'y') | (customer['C_COMMENT'] != 't') | (customer['C_CUSTKEY'] > 18)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] == 9) & (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 10) | (customer['C_COMMENT'].str.startswith('t')) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] != 'BUILDING')][['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] >= 12)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'N_NATIONKEY', 'C_PHONE', 'N_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 1614) | (partsupp['PS_PARTKEY'] >= 39) & (partsupp['P_COMMENT'] != 'a') | (partsupp['AVAILQTY'] == 1578)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['TOTALPRICE'] == 9314.002323808385) & (orders['CLERK'] != 'C')][['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'k') & (partsupp['SUPPLYCOST'] <= 522.5939126882936) & (partsupp['PS_PARTKEY'] <= 1) | (partsupp['AVAILQTY'] <= 3063)][['SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_CUSTKEY'] <= 104527) & (orders['O_ORDERKEY'] >= 510) | (orders['O_COMMENT'].str.startswith('y')) | (orders['TOTALPRICE'] > 123859.82163352668) & (orders['O_ORDERKEY'] >= 339) | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 57280) & (orders['ORDERSTATUS'].isin(['P']))][['ORDERDATE', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] < 4) | (lineitem['LINENUMBER'] >= 6) & (lineitem['QUANTITY'] <= 48) & (lineitem['DISCOUNT'] != 0.011276495000769483)].merge(partsupp[(partsupp['P_COMMENT'] == '.') & (partsupp['SUPPLYCOST'] > 59.77769470587712) | (partsupp['AVAILQTY'] <= 8671)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['COMMITDATE'] < '1998-10-16')].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'] != 'a') & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] < 33184) | (orders['O_COMMENT'].str.startswith('n')) | (orders['TOTALPRICE'] != 107216.64105692483) & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 41)][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] == 45) & (lineitem['TAX'] == 0.07031454174174105) & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['L_COMMENT'] != 'h') & (lineitem['TAX'] == 0.07558847590865979) & (lineitem['SHIPDATE'] > '1998-10-30')].merge(partsupp[(partsupp['PS_PARTKEY'] <= 4)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_PARTKEY'] == 167270) | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['TAX'] <= 0.050860421102118976) | (lineitem['EXTENDEDPRICE'] >= 40191.98462552729) | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_SUPPKEY'] != 4268) | (lineitem['L_ORDERKEY'] >= 16) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['RETURNFLAG'] == 'N')][['L_ORDERKEY']].merge(orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] >= 18) & (nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'N_NAME', 'C_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 253) | (partsupp['PS_SUPPKEY'] != 6116) & (partsupp['SUPPLYCOST'] <= 60.62008618382086) & (partsupp['PS_SUPPKEY'] >= 5163)].merge(supplier[(supplier['S_ACCTBAL'] != -300.84152049230977) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_SUPPKEY'] != 80) | (supplier['S_SUPPKEY'] >= 186)].merge(nation[(nation['N_NAME'] == 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_NATIONKEY'] >= 0) | (supplier['S_ADDRESS'].str.startswith('p')) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'S_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 19) & (nation['N_NATIONKEY'] < 0) & (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_PHONE', 'N_COMMENT', 'C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.006938461809430914) & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['L_PARTKEY'] != 34197) | (lineitem['TAX'] == 0.0686376947737912) & (lineitem['L_SUPPKEY'] > 1697) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['TAX'] > 0.03540721009443396)].merge(orders[(orders['O_CUSTKEY'] <= 124667) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['CLERK'] == 'C')][['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['O_ORDERKEY'] > 417) & (orders['O_COMMENT'].str.startswith('o')) & (orders['O_ORDERKEY'] >= 627) | (orders['O_CUSTKEY'] >= 98855) & (orders['O_COMMENT'] == 'r') & (orders['O_CUSTKEY'] <= 41204) & (orders['ORDERSTATUS'] != 'O') | (orders['CLERK'] != 'C')].merge(customer[['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_CUSTKEY'] <= 2127)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'CLERK', 'C_ADDRESS', 'O_ORDERKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '1-URGENT')][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['C_PHONE'] == '2') | (customer['C_ADDRESS'] != 'r')][['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 411) & (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != ' ') & (orders['ORDERDATE'] != '1992-01-13')][['CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'] != '3') | (customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] != 365.9005044823541) | (customer['C_COMMENT'] == '.')][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 7386) & (partsupp['AVAILQTY'] != 1965) | (partsupp['P_COMMENT'] == '.')].merge(supplier[(supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'S_COMMENT', 'S_PHONE', 'TYPE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] == 7739.356182597608) | (supplier['S_SUPPKEY'] <= 14) & (supplier['S_PHONE'] == '14-') & (supplier['S_ACCTBAL'] == 7716.338663794087) & (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] != '26-') & (supplier['S_NATIONKEY'] >= 18)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['BRAND', 'MFGR', 'S_ACCTBAL', 'S_NAME', 'PS_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 177)][['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 124) & (lineitem['L_SUPPKEY'] != 3960) & (lineitem['L_SUPPKEY'] == 4303) | (lineitem['L_PARTKEY'] != 139361) & (lineitem['L_COMMENT'] != 'b') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['EXTENDEDPRICE'] == 66647.17001543923) & (lineitem['DISCOUNT'] != 0.03864601050881747) & (lineitem['L_ORDERKEY'] > 57)].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('r'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['O_COMMENT'].str.startswith('o')) | (orders['O_COMMENT'] != 'd') | (orders['O_COMMENT'] != 'j') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] <= 238) | (orders['O_ORDERKEY'] == 488) & (orders['TOTALPRICE'] < 148498.16901860366)][['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 14) & (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] != 'P') | (nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 123) & (supplier['S_ADDRESS'] == '1') & (supplier['S_NATIONKEY'] == 16) | (supplier['S_NATIONKEY'] <= 1) & (supplier['S_NATIONKEY'] > 12)].merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] != 'i')].merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#22') & (part['TYPE'] != 'STA') | (part['MFGR'] == 'Manufacturer#4') | (part['TYPE'] != 'S') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#2') & (part['P_NAME'] != 'l')][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'BRAND', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] == 64) | (supplier['S_SUPPKEY'] >= 34) | (supplier['S_ACCTBAL'] == 7395.2996826613535) & (supplier['S_ACCTBAL'] <= 1974.4553136937918)].merge(nation[(nation['N_NAME'] == 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] != 's') & (part['PT_COMMENT'] != 'p') | (part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'] != ' fi') | (part['P_NAME'] == 'o') & (part['PT_COMMENT'] != 'f') | (part['P_NAME'] == 't')][['SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 5618) | (partsupp['AVAILQTY'] >= 6583) & (partsupp['P_COMMENT'] == '.') & (partsupp['P_COMMENT'] != 'v')].merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_NATIONKEY'] >= 12) | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['SUPPLYCOST'] >= 446.00556716073476) & (partsupp['AVAILQTY'] < 9189) | (partsupp['AVAILQTY'] < 8153) & (partsupp['PS_SUPPKEY'] <= 3374)].merge(part[(part['TYPE'] != 'P') & (part['SIZE'] == 40) & (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'] == 'Brand#32') | (part['TYPE'] == 'L') | (part['P_NAME'] == 'a')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] != 'R') & (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_COMMENT'] != ' ') | (supplier['S_NATIONKEY'] != 15) | (supplier['S_NATIONKEY'] != 8)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'I') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'y') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'] != 'BUILDING')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] >= 12)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] != 5) & (customer['C_PHONE'] != '3') & (customer['C_ADDRESS'] != 's') & (customer['C_CUSTKEY'] <= 82) | (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] == 4225.290549420462) & (customer['C_PHONE'] == '25-')][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']).agg('count')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'C_COMMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] <= 20)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 't') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 456) & (orders['O_CUSTKEY'] == 30408) | (orders['O_CUSTKEY'] > 64783) | (orders['TOTALPRICE'] < 57700.31245879227) | (orders['TOTALPRICE'] <= 194140.16037163837)][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['TAX'] != 0.06851619342069692) & (lineitem['L_PARTKEY'] >= 111240) & (lineitem['DISCOUNT'] < 0.026161337003640706) & (lineitem['DISCOUNT'] >= 0.0711425507227446)][['TAX', 'SHIPMODE', 'L_ORDERKEY', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 365.46849377448217)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'SUPPLYCOST', 'O_CUSTKEY']).agg('count')

orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] < 15868) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['TOTALPRICE'] > 42806.62521704528) & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] == ' ') | (orders['O_CUSTKEY'] >= 33333)][['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('9')) | (customer['C_ADDRESS'] == 'z')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] != 'k') & (orders['O_ORDERKEY'] == 459) | (orders['TOTALPRICE'] > 324053.3980075465) & (orders['O_ORDERKEY'] == 144) & (orders['O_CUSTKEY'] > 115723) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM']))].merge(customer[(customer['C_ACCTBAL'] == 8969.857096046777) & (customer['C_ACCTBAL'] <= 9527.555407599866) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'].str.startswith('t'))].merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('SM')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1'])) & (part['RETAILPRICE'] > 1018.571821599031)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith('4')) | (supplier['S_SUPPKEY'] == 185) & (supplier['S_ACCTBAL'] >= 5308.41454676518) | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 186) & (supplier['S_ACCTBAL'] != 6254.996579217059)][['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 3) & (partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['SUPPLYCOST'] != 196.47308180716075) & (partsupp['PS_PARTKEY'] == 3)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 103) | (supplier['S_ACCTBAL'] != -907.3804529735869)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['SIZE'] <= 16) | (part['P_NAME'] == 'k') | (part['P_PARTKEY'] == 16) & (part['BRAND'].isin(['Brand#33', 'Brand#13', 'Brand#44', 'Brand#12', 'Brand#53', 'Brand#32', 'Brand#54', 'Brand#31', 'Brand#43', 'Brand#23', 'Brand#52', 'Brand#24', 'Brand#11', 'Brand#22', 'Brand#14', 'Brand#15', 'Brand#21', 'Brand#55', 'Brand#51', 'Brand#41'])) & (part['MFGR'] != 'Manufacturer#3') | (part['TYPE'] != 'P') & (part['CONTAINER'].str.startswith('LG'))][['TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] >= -7.581361863708594)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'].str.startswith('ly ')) & (part['CONTAINER'].str.startswith('MED')) & (part['TYPE'] == 'M') | (part['P_NAME'] != 'h') | (part['SIZE'] < 18) | (part['TYPE'].str.startswith('L')) | (part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] == 'l')][['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 238.92275668596494) | (customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] != 74) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] > 20)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_NAME', 'N_NATIONKEY', 'C_COMMENT', 'C_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['RETURNFLAG'] == 'A')].merge(orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPDATE']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == ',') | (customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('4')) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] != 'FURNITURE')][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 17) & (partsupp['AVAILQTY'] != 9211) & (partsupp['SUPPLYCOST'] <= 357.94966525244877)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] == 10) | (nation['N_NATIONKEY'] == 5) | (nation['N_COMMENT'] == ' ')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] < 1055.8631968380419) | (part['MFGR'] == 'Manufacturer#2')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'x')][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] == 36) | (part['BRAND'].isin(['Brand#25', 'Brand#14', 'Brand#44', 'Brand#32', 'Brand#41', 'Brand#15', 'Brand#55', 'Brand#43', 'Brand#42', 'Brand#11', 'Brand#22', 'Brand#34', 'Brand#53', 'Brand#12', 'Brand#24', 'Brand#21', 'Brand#23', 'Brand#51', 'Brand#52', 'Brand#33'])) | (part['P_NAME'] != 'n') & (part['MFGR'] == 'Manufacturer#3') | (part['RETAILPRICE'] < 987.6800011619698) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4'])) & (part['RETAILPRICE'] == 983.2766296870245)][['P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT', 'PT_COMMENT', 'SIZE']).agg('count')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 10) | (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] > 12)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['N_NATIONKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] >= 17) | (nation['N_NATIONKEY'] != 8) | (nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['BRAND', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_COMMENT'] == 'x') | (supplier['S_PHONE'] != '28-')][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] >= 6) & (customer['C_ADDRESS'] != 'v') & (customer['C_PHONE'] != '2') & (customer['C_COMMENT'] != 's') | (customer['C_NATIONKEY'] <= 16) & (customer['C_COMMENT'] != 'd') & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('o')) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['P_COMMENT'] != 'p') | (partsupp['PS_PARTKEY'] >= 11) & (partsupp['PS_SUPPKEY'] <= 918)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['TYPE'] == 'S') & (part['P_PARTKEY'] > 78) | (part['TYPE'].str.startswith('P')) & (part['RETAILPRICE'] >= 1025.7764826920577) | (part['MFGR'] == 'Manufacturer#5') | (part['CONTAINER'] != 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['PS_SUPPKEY', 'RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_ORDERKEY'] != 68) | (lineitem['L_COMMENT'] != 'e') | (lineitem['L_COMMENT'] == 'j') & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['QUANTITY'] == 5)][['DISCOUNT', 'SHIPMODE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 4420) | (partsupp['PS_PARTKEY'] > 39)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.03457679218418626) & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['TAX'] >= 0.0037136348739674574) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['DISCOUNT'] >= 0.04850218638050602)][['LINESTATUS', 'L_COMMENT', 'DISCOUNT', 'LINENUMBER', 'L_SUPPKEY', 'TAX']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'LINENUMBER', 'TAX', 'PS_SUPPKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 2) | (lineitem['TAX'] < 0.022689272926701073) & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['QUANTITY'] <= 5) | (lineitem['LINESTATUS'] == 'F') & (lineitem['TAX'] <= 0.07092817871638384)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 151)][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['QUANTITY'] == 28) | (lineitem['RETURNFLAG'] == 'A')][['L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'TAX', 'COMMITDATE']].merge(orders.merge(customer[['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'SHIP') | (lineitem['LINENUMBER'] == 6) & (lineitem['QUANTITY'] <= 16) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_COMMENT'].str.startswith('y')) & (lineitem['L_SUPPKEY'] <= 107) & (lineitem['SHIPDATE'] < '1998-10-30')][['LINESTATUS', 'SHIPDATE', 'L_PARTKEY']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'i') | (part['RETAILPRICE'] < 919.7476384956133)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'L_PARTKEY', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 12)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('SMA')) | (part['PT_COMMENT'] == 'c') & (part['P_NAME'] != 'g')][['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 's') | (supplier['S_ADDRESS'] == 'U') & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 19) & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1628) & (partsupp['PS_SUPPKEY'] > 666) | (partsupp['PS_PARTKEY'] > 5) & (partsupp['P_COMMENT'] == 'ly ') & (partsupp['AVAILQTY'] == 7100)].merge(part[['BRAND', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'PT_COMMENT', 'SUPPLYCOST', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != '.') | (supplier['S_COMMENT'] == 'v') | (supplier['S_ADDRESS'].str.startswith('L')) & (supplier['S_NATIONKEY'] != 15) | (supplier['S_NATIONKEY'] < 19) & (supplier['S_SUPPKEY'] == 198) & (supplier['S_SUPPKEY'] >= 166)][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] != 'Brand#42') & (part['BRAND'].isin(['Brand#42', 'Brand#11', 'Brand#12', 'Brand#52', 'Brand#41', 'Brand#25', 'Brand#51'])) | (part['P_NAME'] == 'o') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1'])) | (part['PT_COMMENT'] != ' ') | (part['SIZE'] <= 9) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['COMMITDATE'] > '1998-10-16')].merge(orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['O_CUSTKEY'] >= 28788) & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] < 114116) | (orders['O_COMMENT'] != '-') | (orders['O_ORDERKEY'] > 523) & (orders['O_ORDERKEY'] == 347)][['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 3674) | (partsupp['AVAILQTY'] <= 8029)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_SUPPKEY', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 158095) & (lineitem['L_PARTKEY'] > 37567) | (lineitem['L_PARTKEY'] < 160648) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_ORDERKEY'] == 137)].merge(orders[['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 893.1204639916951) & (partsupp['P_COMMENT'] == 'f')][['PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['QUANTITY', 'LINENUMBER', 'ORDERSTATUS', 'COMMITDATE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] > 12) & (customer['C_COMMENT'] != 'f') | (customer['C_CUSTKEY'] > 76) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('F'))][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NATIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] == 'STA') | (part['PT_COMMENT'].str.startswith('ss ')) | (part['P_NAME'] == 'p') | (part['BRAND'].isin(['Brand#52', 'Brand#21', 'Brand#11', 'Brand#33', 'Brand#55', 'Brand#12', 'Brand#14', 'Brand#25', 'Brand#34', 'Brand#31', 'Brand#45', 'Brand#23', 'Brand#54', 'Brand#35', 'Brand#44', 'Brand#24', 'Brand#13', 'Brand#43', 'Brand#32', 'Brand#51', 'Brand#22', 'Brand#42', 'Brand#41'])) & (part['PT_COMMENT'] != 'g') & (part['PT_COMMENT'] != 'ss ') | (part['MFGR'] != 'Manufacturer#5')][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_ADDRESS', 'SUPPLYCOST', 'AVAILQTY', 'SIZE']).agg('count')

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'y')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'N_NAME', 'S_PHONE', 'R_NAME', 'S_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['C_ACCTBAL'] == 8465.242426764376) & (customer['C_ADDRESS'] != 'L') | (customer['C_CUSTKEY'] < 11) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] == 92) & (customer['C_CUSTKEY'] < 63) & (customer['C_ACCTBAL'] <= -248.14796289719243)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'e')].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] >= 6) | (customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] > 4976.220277704738) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 17) | (customer['C_CUSTKEY'] != 26)][['MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] > 3)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'f')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_ORDERKEY'] != 470) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1998-07-21') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'x') | (orders['O_CUSTKEY'] < 24992)].merge(customer[(customer['C_COMMENT'] != ' ') | (customer['C_PHONE'] == '18-') | (customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'L_ORDERKEY', 'SHIPDATE', 'SHIPPRIORITY', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 317.54605269740443) & (partsupp['PS_PARTKEY'] != 17)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'].str.startswith('LG')) & (part['MFGR'] == 'Manufacturer#1') & (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] <= 178) | (part['P_PARTKEY'] == 59) & (part['P_PARTKEY'] >= 87) & (part['PT_COMMENT'].str.startswith(' '))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 17) & (customer['C_CUSTKEY'] == 25) & (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] == 9) | (lineitem['L_ORDERKEY'] != 1) | (lineitem['LINENUMBER'] >= 5) & (lineitem['EXTENDEDPRICE'] == 65868.1294987464) | (lineitem['L_ORDERKEY'] >= 176) | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 4496)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_CUSTKEY'] == 98814) & (orders['ORDERSTATUS'] == 'F') & (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] < 174720.5298627321) | (orders['SHIPPRIORITY'] < 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'SHIPPRIORITY', 'EXTENDEDPRICE', 'SHIPMODE']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['SIZE'] < 4) | (part['RETAILPRICE'] >= 1073.66288781389) | (part['SIZE'] != 14) & (part['MFGR'] != 'Manufacturer#2') & (part['RETAILPRICE'] == 977.4742823525388) & (part['P_NAME'] != 't') | (part['PT_COMMENT'] != 'q') & (part['CONTAINER'] != 'MED')][['BRAND', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY', 'S_PHONE', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 1090) & (partsupp['PS_SUPPKEY'] != 1529) | (partsupp['P_COMMENT'] != 'q') | (partsupp['PS_PARTKEY'] <= 26) & (partsupp['P_COMMENT'].str.startswith(' '))][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[['P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 32)].merge(part[(part['PT_COMMENT'] == 'n') | (part['CONTAINER'] == 'WRAP') & (part['TYPE'] != 'SMA') & (part['P_PARTKEY'] > 164) & (part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] > 1003.8219547610047)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 22) | (partsupp['PS_PARTKEY'] >= 29) | (partsupp['PS_SUPPKEY'] <= 2178) & (partsupp['AVAILQTY'] != 4042)].merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_PHONE', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] < 19) | (nation['N_NAME'].str.startswith('P')) & (nation['N_NATIONKEY'] != 8)].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] < 82) | (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'].str.startswith('b')) | (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] >= 130) | (part['P_NAME'] != 'o') & (part['SIZE'] <= 2) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_SUPPKEY'] < 167) & (supplier['S_NATIONKEY'] != 10) & (supplier['S_PHONE'] != '32-') & (supplier['S_ADDRESS'] != 'd') | (supplier['S_NATIONKEY'] >= 16)].merge(nation[(nation['N_NAME'] == 'J')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] != 'x') | (part['PT_COMMENT'] == 'y') & (part['SIZE'] >= 25) & (part['CONTAINER'].str.startswith('LG')) | (part['TYPE'] == 'SMA') | (part['SIZE'] > 28) & (part['RETAILPRICE'] > 1098.6547236226518)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'PT_COMMENT', 'TYPE', 'BRAND', 'CONTAINER', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NATIONKEY', 'BRAND', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 196) & (supplier['S_ADDRESS'] != 'u') | (supplier['S_NATIONKEY'] < 1) & (supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] > 4504.239079590082)][['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'R_REGIONKEY', 'N_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'T') | (customer['C_CUSTKEY'] != 21) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ACCTBAL'] == 6858.490749204054) & (customer['C_CUSTKEY'] <= 73) & (customer['C_ADDRESS'] == 'g') | (customer['C_COMMENT'] == 's')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] <= 20) & (nation['N_NATIONKEY'] < 2)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 229.91611830484294) & (partsupp['P_COMMENT'] != 'e')][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERSTATUS'].isin(['F'])) & (orders['TOTALPRICE'] >= 119454.84152023209) & (orders['TOTALPRICE'] < 284598.1880382688) | (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] > 665) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['C_ACCTBAL'] >= 5463.217593426604) | (customer['C_NATIONKEY'] >= 3) | (customer['C_CUSTKEY'] == 79)][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 31453) & (lineitem['L_PARTKEY'] != 196718) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) | (lineitem['EXTENDEDPRICE'] <= 59542.34309462876) | (lineitem['L_SUPPKEY'] >= 1825) & (lineitem['LINENUMBER'] != 6) | (lineitem['L_SUPPKEY'] >= 1516) | (lineitem['COMMITDATE'] <= '1992-05-15')][['L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'TAX', 'COMMITDATE']].merge(orders.merge(customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_COMMENT', 'O_COMMENT']).agg('count')

lineitem[(lineitem['QUANTITY'] > 25) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['TAX'] != 0.06403869939635694) & (lineitem['SHIPMODE'] != 'REG AIR')].merge(partsupp[(partsupp['AVAILQTY'] >= 235)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_ORDERKEY'] == 633) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != 'h') & (orders['SHIPPRIORITY'] != 0)][['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_PARTKEY', 'RECEIPTDATE', 'RETURNFLAG', 'L_SUPPKEY', 'LINENUMBER']).agg('count')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['EXTENDEDPRICE'] < 23075.197458331222) & (lineitem['L_COMMENT'] != 'g') | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['QUANTITY'] >= 39) & (lineitem['LINESTATUS'] != 'F') & (lineitem['EXTENDEDPRICE'] < 4177.601136497742) & (lineitem['L_SUPPKEY'] > 8557)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] == 1887) | (partsupp['AVAILQTY'] <= 1604)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_COMMENT'] != 'j')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RECEIPTDATE', 'CONTAINER', 'EXTENDEDPRICE', 'ORDERPRIORITY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] >= 241.00380602101265)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] <= 1028.596386686785) | (part['PT_COMMENT'].str.startswith('r')) & (part['P_NAME'] == 'd') | (part['RETAILPRICE'] >= 935.1378528904414) | (part['CONTAINER'] == 'WRAP') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] < 1016.8164507337546) | (part['P_NAME'] == 'v') | (part['BRAND'] != 'Brand#53')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NATIONKEY', 'N_REGIONKEY', 'TYPE']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 13) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'u') & (customer['C_NATIONKEY'] > 15) & (customer['C_ADDRESS'] != 'g') & (customer['C_ACCTBAL'] <= 5329.624561862644) | (customer['C_ADDRESS'] == 'j')][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_NATIONKEY'] == 10) & (customer['C_NATIONKEY'] == 6) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_ADDRESS'] == 'w') | (customer['C_ADDRESS'] == 'g') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'bis') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) | (part['TYPE'].str.startswith('E'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 1692.6631060216262) | (supplier['S_ADDRESS'] != 'F') | (supplier['S_COMMENT'] == 'r') & (supplier['S_SUPPKEY'] != 100) | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY', 'S_PHONE', 'P_COMMENT', 'S_SUPPKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 7382) & (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] >= 8) & (partsupp['PS_PARTKEY'] == 47)].merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] > 62)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] == 'Brand#12') & (part['SIZE'] < 8) | (part['TYPE'] != 'S') & (part['P_PARTKEY'] != 86) | (part['RETAILPRICE'] >= 975.4568113567965) & (part['SIZE'] >= 13) & (part['P_NAME'].str.startswith('g')) | (part['RETAILPRICE'] < 918.0964000055995) | (part['P_PARTKEY'] >= 12)][['P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_SUPPKEY'] >= 7172) & (partsupp['PS_PARTKEY'] >= 2)].merge(part[(part['PT_COMMENT'] != 'p') | (part['P_PARTKEY'] != 6) | (part['PT_COMMENT'].str.startswith('!')) & (part['CONTAINER'] == 'LG') | (part['TYPE'] != 'L') & (part['BRAND'].isin(['Brand#54', 'Brand#41', 'Brand#55', 'Brand#25', 'Brand#12', 'Brand#43', 'Brand#42', 'Brand#51', 'Brand#33', 'Brand#44', 'Brand#14', 'Brand#53', 'Brand#34', 'Brand#23', 'Brand#22', 'Brand#52', 'Brand#45', 'Brand#31', 'Brand#13', 'Brand#24', 'Brand#32', 'Brand#35', 'Brand#15', 'Brand#11'])) | (part['MFGR'] == 'Manufacturer#5')][['P_NAME', 'BRAND', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] == 346268.13861152204) | (orders['O_ORDERKEY'] == 289) & (orders['ORDERDATE'] == '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] > 147057.5472292501)].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT', 'R_COMMENT', 'C_COMMENT', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] == 331) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] > 128268) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH']))][['ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] < 143.508093426188) & (customer['C_CUSTKEY'] != 33) & (customer['C_CUSTKEY'] >= 63) & (customer['C_COMMENT'] == ' ')][['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 47) & (partsupp['SUPPLYCOST'] <= 435.4894318543394)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] != 'M') | (part['CONTAINER'].str.startswith('LG')) | (part['PT_COMMENT'] == '!') & (part['P_PARTKEY'] < 75) | (part['BRAND'] != 'Brand#22') & (part['PT_COMMENT'].str.startswith('h')) & (part['P_PARTKEY'] >= 45)][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'PS_PARTKEY']).agg('count')

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'L_SUPPKEY', 'LINESTATUS', 'LINENUMBER', 'COMMITDATE', 'DISCOUNT', 'L_ORDERKEY', 'TAX', 'SHIPDATE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 485) & (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] == 308709.0148142676) & (orders['TOTALPRICE'] > 32037.117860094753) | (orders['TOTALPRICE'] > 230438.5750570302) & (orders['TOTALPRICE'] != 202269.56894580927)].merge(customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] >= 4716.384983266631) & (customer['C_ACCTBAL'] < 6491.310067463901) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] == 5521.795966438985) & (customer['C_CUSTKEY'] == 7)][['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['P_COMMENT'] != 'h') & (partsupp['PS_SUPPKEY'] == 7180) | (partsupp['SUPPLYCOST'] > 81.12131740101377)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] == 7) | (supplier['S_ADDRESS'] == 'Z') | (supplier['S_SUPPKEY'] > 124) | (supplier['S_ACCTBAL'] <= 8963.466057540227) | (supplier['S_ACCTBAL'] != 3813.135480006501) & (supplier['S_COMMENT'] != 'c')][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_PHONE', 'AVAILQTY', 'RETAILPRICE', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3521) & (partsupp['SUPPLYCOST'] >= 717.0866278050906) | (partsupp['P_COMMENT'] != ' th') & (partsupp['AVAILQTY'] > 8344) | (partsupp['AVAILQTY'] < 5001)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['TOTALPRICE'] >= 6196.78815619429) & (orders['O_COMMENT'] != 'ly ') & (orders['TOTALPRICE'] > 126835.57760168352) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_ORDERKEY'] <= 716) | (orders['ORDERDATE'] < '1998-07-21') | (orders['O_CUSTKEY'] >= 59111) | (orders['O_COMMENT'].str.startswith('-')) | (orders['TOTALPRICE'] > 79201.14032915255)][['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPINSTRUCT', 'PS_PARTKEY', 'TAX', 'SHIPMODE', 'COMMITDATE']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] == 'F') & (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] > 304051.3941108209) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '5-LOW', '1-URGENT', '3-MEDIUM'])) | (orders['ORDERSTATUS'] != 'P')][['CLERK', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] == 2) & (customer['C_COMMENT'] != 'h')][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#14'])) & (part['SIZE'] >= 29) & (part['RETAILPRICE'] <= 1002.5844365680714) & (part['BRAND'] == 'Brand#52') & (part['BRAND'].isin(['Brand#15', 'Brand#33', 'Brand#22'])) & (part['SIZE'] > 43) & (part['TYPE'] != 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_NAME']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_ACCTBAL'] >= 2010.2216559278443) & (supplier['S_NATIONKEY'] <= 19) | (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_SUPPKEY'] == 40)][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'S_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] > 195777.8465926203) | (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] > 62) & (orders['O_ORDERKEY'] == 75)][['O_CUSTKEY', 'SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] == 'n') | (part['SIZE'] < 34) | (part['MFGR'] == 'Manufacturer#5') & (part['CONTAINER'] == 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 49)].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['PS_PARTKEY'] != 4)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_ADDRESS'].str.startswith('k')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] >= 2) & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['COMMITDATE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 48500.77328518608) | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['SHIPMODE'] == 'AIR')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3054) & (partsupp['PS_PARTKEY'] < 17) & (partsupp['PS_SUPPKEY'] >= 4593) | (partsupp['PS_SUPPKEY'] <= 4367) | (partsupp['AVAILQTY'] == 8084)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH'])) | (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] <= 9153.753278146261) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '5-LOW', '2-HIGH'])) & (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] != 264642.1715974058) | (orders['ORDERDATE'] < '1992-01-13')].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] < 88) & (customer['C_ADDRESS'] == 'e') & (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_NATIONKEY'] <= 3) | (customer['C_CUSTKEY'] != 53)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['LINENUMBER'] >= 6) | (lineitem['L_ORDERKEY'] >= 119) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['LINENUMBER'] <= 4) | (lineitem['L_PARTKEY'] == 21975)].merge(partsupp[(partsupp['PS_PARTKEY'] > 2) | (partsupp['AVAILQTY'] != 5033) | (partsupp['P_COMMENT'].str.startswith('d')) & (partsupp['SUPPLYCOST'] <= 66.19620958703847)].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['P_COMMENT', 'O_CUSTKEY', 'PS_PARTKEY', 'QUANTITY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['LINENUMBER'] == 4) | (lineitem['RECEIPTDATE'] < '1992-05-02')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 1)].merge(part[(part['CONTAINER'] == 'LG') & (part['PT_COMMENT'] != 'c') & (part['SIZE'] > 34) & (part['PT_COMMENT'].str.startswith('b')) & (part['SIZE'] <= 6) | (part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] == 121)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] < 39234) & (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'].str.startswith('z')) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'] == 'O')][['ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['DISCOUNT', 'PS_PARTKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['L_ORDERKEY'] != 24) & (lineitem['LINESTATUS'] == 'F') | (lineitem['QUANTITY'] >= 16) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['RETURNFLAG'] == 'R') & (lineitem['TAX'] <= 0.05515655491046252) & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['SHIPMODE'] == 'FOB')].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINESTATUS', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] == 65169)][['ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'C_NAME', 'C_CUSTKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['TYPE'] != 'S') & (part['PT_COMMENT'] == 'e')][['CONTAINER', 'BRAND', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['RETAILPRICE', 'S_NATIONKEY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'al ') & (supplier['S_SUPPKEY'] != 45) & (supplier['S_PHONE'] != '26-') & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > 7690.533350162489)].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] >= 10)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 4673.68068599181) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 151) | (supplier['S_ACCTBAL'] >= 9328.703184365775) & (supplier['S_ADDRESS'] != 'C') | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] == 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['PT_COMMENT', 'P_NAME', 'TYPE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 24) & (partsupp['P_COMMENT'] == 'e') & (partsupp['P_COMMENT'] == 'b') | (partsupp['SUPPLYCOST'] < 356.1461706454667) & (partsupp['PS_SUPPKEY'] != 3975)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] < 2755.004723757983) | (supplier['S_ACCTBAL'] > 171.8928961686247) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'q')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 6710) | (partsupp['SUPPLYCOST'] < 753.0047985480817) & (partsupp['PS_PARTKEY'] > 32) | (partsupp['P_COMMENT'] != 'c')].merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_NATIONKEY'] != 15) | (supplier['S_NATIONKEY'] > 5) & (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_NATIONKEY'] > 5)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'R_REGIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 450.7420458640577) | (partsupp['P_COMMENT'].str.startswith('are')) & (partsupp['PS_SUPPKEY'] < 2567) | (partsupp['PS_SUPPKEY'] <= 1646)].merge(part[(part['MFGR'] != 'Manufacturer#5') & (part['TYPE'] == 'E') & (part['TYPE'] == 'STA') | (part['RETAILPRICE'] < 965.9715145595497) & (part['SIZE'] <= 39) & (part['P_PARTKEY'] >= 30)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] > 13)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ADDRESS', 'PT_COMMENT', 'S_NATIONKEY', 'BRAND']).agg('count')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] == 's') | (part['P_PARTKEY'] <= 172) | (part['BRAND'].isin(['Brand#55', 'Brand#32', 'Brand#45', 'Brand#21', 'Brand#51', 'Brand#11', 'Brand#34', 'Brand#15', 'Brand#24', 'Brand#23', 'Brand#35', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#33', 'Brand#13', 'Brand#53', 'Brand#52', 'Brand#41', 'Brand#31'])) | (part['BRAND'] == 'Brand#35') | (part['RETAILPRICE'] >= 971.9532095086747) | (part['P_NAME'].str.startswith('m')) | (part['BRAND'].isin(['Brand#33', 'Brand#34', 'Brand#41', 'Brand#54', 'Brand#55', 'Brand#15', 'Brand#53', 'Brand#43', 'Brand#52', 'Brand#11', 'Brand#14'])) & (part['RETAILPRICE'] < 1047.4899935525889)][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['LINENUMBER'] > 6) & (lineitem['DISCOUNT'] != 0.042586536029880356) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['QUANTITY'] > 15) & (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] < 77134) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'] == '1-URGENT')][['CLERK', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] != 0.006635854444116358) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPMODE'] != 'FOB') | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_PARTKEY'] <= 96862) | (lineitem['EXTENDEDPRICE'] < 64328.91371691545) | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['TAX'] != 0.04324296654696346)].merge(partsupp.merge(part[(part['PT_COMMENT'] != 'p') | (part['MFGR'] != 'Manufacturer#4') | (part['MFGR'] != 'Manufacturer#5')][['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPDATE', 'PT_COMMENT', 'S_SUPPKEY', 'L_ORDERKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['DISCOUNT'] >= 0.07963265187448114) & (lineitem['TAX'] != 0.054580241554523574) & (lineitem['L_ORDERKEY'] < 167) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['LINENUMBER'] < 3) & (lineitem['RETURNFLAG'] == 'A')].merge(orders[(orders['TOTALPRICE'] == 305442.53364430286) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'].str.startswith('t')) & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_COMMENT'] == 'g') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'D') | (customer['C_NATIONKEY'] <= 4) | (customer['C_ADDRESS'] != 'E') & (customer['C_CUSTKEY'] < 85) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '13-')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'SHIP']))][['LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG', 'QUANTITY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 1056.2025671165475) | (part['P_NAME'] != 'r') | (part['PT_COMMENT'].str.startswith('f')) & (part['P_PARTKEY'] != 103) & (part['RETAILPRICE'] == 1033.3992879939203) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'] != 'Brand#41')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] < 9) & (supplier['S_COMMENT'] != 'k') & (supplier['S_ADDRESS'].str.startswith('s'))][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPMODE', 'RETURNFLAG', 'LINESTATUS', 'L_PARTKEY', 'TAX', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'].str.startswith('MED'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_ORDERKEY', 'P_PARTKEY', 'RETAILPRICE', 'L_PARTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] == 202) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'].str.startswith('e'))].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_ADDRESS'] == 'F') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '18-')][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NAME'].str.startswith('E'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['CLERK', 'O_ORDERKEY', 'C_CUSTKEY', 'C_ADDRESS', 'N_COMMENT']).agg('count')

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['SHIPMODE'].isin(['RAIL']))][['COMMITDATE', 'LINENUMBER', 'SHIPMODE', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_PARTKEY', 'QUANTITY']].merge(orders[(orders['O_CUSTKEY'] <= 44106)].merge(customer[(customer['C_CUSTKEY'] == 33) | (customer['C_CUSTKEY'] <= 3) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'] == 'h') & (customer['C_ACCTBAL'] >= 5516.769875700936)][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] == 6049.446919995596) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING']))][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'TOTALPRICE', 'C_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('e'))][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 40) & (part['RETAILPRICE'] != 917.035715006393) | (part['PT_COMMENT'] == 'a') | (part['PT_COMMENT'] == 'c') & (part['SIZE'] >= 31) | (part['P_PARTKEY'] <= 103) & (part['MFGR'] == 'Manufacturer#5') & (part['CONTAINER'] == 'LG')][['BRAND', 'P_NAME', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != ' ') | (lineitem['RETURNFLAG'] == 'A') & (lineitem['QUANTITY'] == 49) | (lineitem['L_ORDERKEY'] != 53) | (lineitem['L_COMMENT'] == 'f') & (lineitem['L_COMMENT'] != 'd') & (lineitem['LINENUMBER'] <= 6) & (lineitem['RECEIPTDATE'] > '1998-11-06')][['L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE', 'DISCOUNT', 'QUANTITY', 'EXTENDEDPRICE', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 6228) & (partsupp['SUPPLYCOST'] >= 915.9640539265781) | (partsupp['SUPPLYCOST'] != 563.5727757729195) | (partsupp['P_COMMENT'].str.startswith('e'))].merge(part[['CONTAINER', 'BRAND', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] > 14) & (supplier['S_ADDRESS'].str.startswith('N')) & (supplier['S_COMMENT'] != 'c')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] > 9741) & (lineitem['TAX'] == 0.05025286365905151) | (lineitem['QUANTITY'] >= 45) & (lineitem['EXTENDEDPRICE'] >= 40768.9451875477) | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['DISCOUNT'] != 0.046554436012953816)].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] < 12) & (partsupp['SUPPLYCOST'] == 701.5692948792989)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#22') | (part['TYPE'] == 'P') & (part['RETAILPRICE'] <= 917.2607361815998) & (part['RETAILPRICE'] <= 907.1376648348752)][['MFGR', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'COMMITDATE']).agg('count')

lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'L_PARTKEY', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPDATE', 'COMMITDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6648) & (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_SUPPKEY'] <= 5135) | (partsupp['SUPPLYCOST'] >= 820.6452084211638)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['TYPE'] == 'STA') & (part['TYPE'] != 'L') | (part['TYPE'].str.startswith('L')) & (part['P_PARTKEY'] < 126)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'LINENUMBER', 'RETAILPRICE', 'L_COMMENT', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.023452173945093458) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['DISCOUNT'] >= 0.008988445190124728) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['LINESTATUS'].isin(['O']))].merge(partsupp.merge(part[['P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] != 'bli') & (supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] < 4305.44078321785) & (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_COMMENT'] != ',') & (orders['O_COMMENT'] != 'o') & (orders['SHIPPRIORITY'] > 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SUPPLYCOST', 'TOTALPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.09013359543887431) & (lineitem['L_COMMENT'].str.startswith(' ')) | (lineitem['DISCOUNT'] != 0.012683656385303733)][['EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'SHIPMODE', 'L_ORDERKEY', 'L_COMMENT', 'TAX', 'DISCOUNT', 'QUANTITY']].merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['AVAILQTY'] != 7865) | (partsupp['PS_PARTKEY'] != 1) & (partsupp['AVAILQTY'] >= 6708) | (partsupp['PS_PARTKEY'] == 9)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_COMMENT', 'PS_PARTKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 3) & (lineitem['QUANTITY'] > 46) & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['TAX'] > 0.007126364729576374) | (lineitem['EXTENDEDPRICE'] == 40284.690957041785)][['RECEIPTDATE', 'LINENUMBER', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPMODE']].merge(orders[(orders['O_ORDERKEY'] >= 652) & (orders['O_COMMENT'].str.startswith('e')) | (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] >= 315)][['O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['DISCOUNT', 'C_NATIONKEY', 'RECEIPTDATE', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 25965) | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['QUANTITY'] == 28) & (lineitem['LINESTATUS'] == 'F')].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] >= 136) | (part['P_PARTKEY'] == 53) & (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] < 7) | (part['PT_COMMENT'] != 'r') & (part['PT_COMMENT'] == 'i') & (part['CONTAINER'] == 'LG')][['P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_ADDRESS'] == 'v')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['L_SUPPKEY'] == 796)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 181) | (supplier['S_SUPPKEY'] >= 124)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 88) & (customer['C_NATIONKEY'] <= 15) | (customer['C_CUSTKEY'] >= 47) | (customer['MKTSEGMENT'] == 'BUILDING')][['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] == 133098) & (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 'g') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] != 83) | (orders['CLERK'].str.startswith('C'))][['O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] == 85) & (customer['C_ADDRESS'] != 'l')][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 2087) | (orders['O_COMMENT'].str.startswith(' re')) & (orders['O_COMMENT'].str.startswith('a')) & (orders['TOTALPRICE'] > 158821.73061464116) | (orders['O_COMMENT'] != 't') | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] > 458) & (orders['O_ORDERKEY'] >= 158) & (orders['TOTALPRICE'] == 271681.9249311815)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] < 3043.839024616894) & (customer['C_CUSTKEY'] < 77) & (customer['C_NATIONKEY'] != 12) & (customer['C_ADDRESS'].str.startswith('h'))].merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_PHONE', 'R_COMMENT', 'O_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 489)].merge(customer[(customer['C_ACCTBAL'] >= 7334.462236861604) | (customer['C_ACCTBAL'] == 7661.705668980121) | (customer['C_ADDRESS'] == ',') | (customer['C_ADDRESS'] == 'e') & (customer['C_COMMENT'] != 'a')][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] >= 934.9725072316984) & (partsupp['SUPPLYCOST'] >= 50.381912205538) & (partsupp['PS_SUPPKEY'] > 1162)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'P') | (part['P_NAME'] == 'f') & (part['BRAND'].isin(['Brand#35', 'Brand#55'])) & (part['RETAILPRICE'] <= 957.3310170489527) & (part['SIZE'] > 48) | (part['TYPE'] == 'S')][['SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(orders[(orders['O_ORDERKEY'] < 600) & (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] > 468) | (orders['O_CUSTKEY'] > 27869) & (orders['O_ORDERKEY'] != 31) | (orders['TOTALPRICE'] < 39170.0957697717) | (orders['O_ORDERKEY'] != 776) | (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ADDRESS'].str.startswith('g')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_CUSTKEY'] > 86) | (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(part[(part['SIZE'] <= 43) | (part['CONTAINER'] != 'LG') & (part['BRAND'] != 'Brand#53')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] > 15) & (supplier['S_ADDRESS'] == 'w') | (supplier['S_ADDRESS'] == 'M') | (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_SUPPKEY'] > 66) & (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 117) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_SUPPKEY'] < 2130) & (lineitem['EXTENDEDPRICE'] != 34851.73946166936) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINESTATUS'] == 'O')].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3557)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'lem') & (part['BRAND'].isin(['Brand#13', 'Brand#55', 'Brand#35', 'Brand#51', 'Brand#52', 'Brand#34', 'Brand#54']))][['P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] != 7) & (orders['O_ORDERKEY'] <= 582) & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED']))].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['P_COMMENT'] == 'c') | (partsupp['P_COMMENT'] == 'n') & (partsupp['AVAILQTY'] <= 7432)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 8353.851293096077) & (supplier['S_ACCTBAL'] != 5038.467771894426) & (supplier['S_COMMENT'] != 't')].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] == 'Brand#42') & (part['CONTAINER'].str.startswith('LG')) | (part['TYPE'] == 'E') | (part['TYPE'] == 'SMA') | (part['BRAND'].isin(['Brand#52', 'Brand#33', 'Brand#32', 'Brand#15', 'Brand#35', 'Brand#25', 'Brand#23', 'Brand#43'])) | (part['TYPE'] != 'M') | (part['PT_COMMENT'].str.startswith('ly ')) & (part['P_PARTKEY'] == 37) | (part['PT_COMMENT'].str.startswith('n'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('f')) | (lineitem['L_PARTKEY'] == 196709) & (lineitem['LINENUMBER'] > 1) & (lineitem['LINESTATUS'].isin(['F', 'O']))].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 57590) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] == 63389) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['O_COMMENT'] == ' re') & (orders['TOTALPRICE'] == 7907.482455912788) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_ACCTBAL'] > 7922.726112407556) | (customer['C_ADDRESS'].str.startswith('U')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] != 'E') & (customer['C_PHONE'] == '2')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TAX', 'O_CUSTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 37) & (lineitem['L_PARTKEY'] > 15748)][['SHIPDATE', 'L_ORDERKEY', 'LINESTATUS', 'L_PARTKEY', 'COMMITDATE', 'L_COMMENT', 'TAX', 'RETURNFLAG']].merge(orders[(orders['O_ORDERKEY'] <= 673) & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] > 40321) & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] < 98273) | (orders['O_COMMENT'] != 'q') & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] == 135340)][['O_CUSTKEY', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['SIZE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] != 2) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['TOTALPRICE'] != 351628.3334941727) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0)][['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE']].merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_CUSTKEY'] >= 50) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'].str.startswith('.')) | (customer['C_NATIONKEY'] >= 8) & (customer['C_COMMENT'] != 't') | (customer['MKTSEGMENT'] != 'BUILDING')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] > 24) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_COMMENT'] != 'k') & (lineitem['EXTENDEDPRICE'] != 11906.114925161146) | (lineitem['L_COMMENT'] == 'lit') | (lineitem['L_PARTKEY'] >= 128179) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] > 6)].merge(orders[(orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] >= 374) | (orders['O_CUSTKEY'] >= 124211) & (orders['ORDERSTATUS'] == 'P')][['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_PARTKEY'] >= 8) & (partsupp['SUPPLYCOST'] != 259.0327527522347) | (partsupp['AVAILQTY'] >= 3542) & (partsupp['SUPPLYCOST'] <= 134.48373030062174)].merge(part[(part['RETAILPRICE'] > 997.8015779950954)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] > 20) | (supplier['S_SUPPKEY'] <= 120) & (supplier['S_SUPPKEY'] < 90)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'L_ORDERKEY', 'L_PARTKEY', 'L_COMMENT']).agg('count')

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL', 'FOB', 'AIR', 'RAIL', 'TRUCK'])) & (lineitem['LINESTATUS'] == 'F') & (lineitem['EXTENDEDPRICE'] >= 67407.27707740598) | (lineitem['L_ORDERKEY'] < 105) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD'])) | (lineitem['L_SUPPKEY'] < 1150) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['DISCOUNT'] == 0.009525811099976012)].merge(partsupp.merge(part[(part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] < 1091.6166809324745) & (part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] != 1041.657682697902) & (part['RETAILPRICE'] <= 905.2071116108921)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] == 'c')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_CUSTKEY'] <= 65680) & (orders['ORDERSTATUS'] != 'O')][['ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_ORDERKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#52') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['SIZE'] <= 36) & (part['CONTAINER'] == 'LG') & (part['PT_COMMENT'] == 'p') | (part['MFGR'] == 'Manufacturer#3') & (part['BRAND'].isin(['Brand#33', 'Brand#43', 'Brand#21', 'Brand#44', 'Brand#23', 'Brand#15', 'Brand#45', 'Brand#11', 'Brand#13', 'Brand#12', 'Brand#34', 'Brand#51', 'Brand#41', 'Brand#22', 'Brand#42', 'Brand#52', 'Brand#24', 'Brand#35', 'Brand#53', 'Brand#32'])) & (part['P_NAME'] == 'k') | (part['TYPE'] != 'M')][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] >= -294.41921035388634) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] <= 100) & (supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_SUPPKEY'] >= 137) | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] != 'V')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'N_NAME', 'N_NATIONKEY', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 110) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPMODE'].isin(['FOB'])) & (lineitem['L_COMMENT'].str.startswith('c')) & (lineitem['QUANTITY'] < 30) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['EXTENDEDPRICE'] < 71668.59635435435)].merge(partsupp[(partsupp['AVAILQTY'] == 582) & (partsupp['SUPPLYCOST'] == 540.271726597124) | (partsupp['PS_SUPPKEY'] == 3413) & (partsupp['SUPPLYCOST'] >= 218.5562599971845)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['TOTALPRICE'] > 157763.95669045273) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['CLERK'] == 'C')][['ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] <= 1) | (customer['C_COMMENT'] == 'g') & (customer['C_ACCTBAL'] == 6856.98881555588) & (customer['C_NATIONKEY'] != 2) | (customer['C_CUSTKEY'] <= 69) & (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] > 22) | (lineitem['L_ORDERKEY'] < 28) & (lineitem['TAX'] >= 0.04668424853572389)].merge(partsupp[(partsupp['SUPPLYCOST'] != 962.5407291866418) & (partsupp['SUPPLYCOST'] == 140.61426959476668) & (partsupp['AVAILQTY'] >= 5004) | (partsupp['PS_SUPPKEY'] > 2116)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 145) & (supplier['S_PHONE'] == '14-')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] >= 9) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING', 'FURNITURE']))][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINENUMBER', 'COMMITDATE', 'ORDERPRIORITY', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'f') & (partsupp['PS_PARTKEY'] >= 12) & (partsupp['P_COMMENT'].str.startswith(';'))].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] >= 284) & (orders['TOTALPRICE'] != 135405.03837200927) | (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] < 272135.6416717265)][['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['PS_SUPPKEY']).agg('count')

orders[(orders['O_COMMENT'] != 'a') & (orders['O_COMMENT'] == 'n') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_CUSTKEY'] >= 61776) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['TOTALPRICE'] >= 303411.25654445414)][['SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'MKTSEGMENT', 'SHIPPRIORITY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['BRAND'] == 'Brand#42') & (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] == 60) & (part['P_NAME'] != 'y') & (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] != 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] != 'j') | (supplier['S_SUPPKEY'] >= 41) | (supplier['S_ACCTBAL'] < 4364.636372037178) & (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] != 14)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPINSTRUCT', 'S_NATIONKEY', 'LINENUMBER', 'LINESTATUS', 'MFGR']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL') & (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['QUANTITY'] == 17)][['TAX', 'LINENUMBER', 'SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY', 'LINESTATUS', 'RETURNFLAG', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders[['ORDERSTATUS', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] < 14) | (supplier['S_ADDRESS'].str.startswith('7')) | (supplier['S_ACCTBAL'] != 3735.697594424072) | (supplier['S_ADDRESS'] != 'X') & (supplier['S_ADDRESS'].str.startswith('Q'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_ORDERKEY', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 452.42722676119917) & (partsupp['AVAILQTY'] > 8882) | (partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['SUPPLYCOST'] == 918.8319215238355)].merge(supplier[(supplier['S_NATIONKEY'] <= 3) & (supplier['S_ADDRESS'] == 'V') | (supplier['S_SUPPKEY'] > 40) & (supplier['S_ACCTBAL'] < 7527.899642113643) & (supplier['S_SUPPKEY'] < 111) | (supplier['S_PHONE'] != '17-') | (supplier['S_NATIONKEY'] < 6)][['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_PARTKEY', 'MFGR', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'R_COMMENT', 'S_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'g') | (lineitem['DISCOUNT'] < 0.02002904615338548) | (lineitem['DISCOUNT'] > 0.039728440040830995) | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['DISCOUNT'] < 0.012207534463703595) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['TAX'] >= 0.0516063200668162) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPMODE'] != 'TRUCK')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3455) & (partsupp['PS_PARTKEY'] > 24) & (partsupp['P_COMMENT'].str.startswith('s'))][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_ORDERKEY'] != 781)][['ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'FURNITURE'])) | (customer['C_COMMENT'] != 'n') | (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPINSTRUCT', 'QUANTITY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['PS_PARTKEY'] <= 22)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] != 64)][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'S')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERDATE'] > '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] < 4) & (customer['C_NATIONKEY'] != 11) & (customer['C_ADDRESS'].str.startswith('H')) | (customer['C_NATIONKEY'] != 12) & (customer['C_ADDRESS'].str.startswith('F'))][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'N_NAME', 'S_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 71) | (supplier['S_SUPPKEY'] > 81) | (supplier['S_COMMENT'] == 'w') & (supplier['S_NATIONKEY'] == 18) & (supplier['S_NATIONKEY'] <= 20)][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] < 78) | (part['SIZE'] != 11) & (part['SIZE'] > 43) & (part['PT_COMMENT'] == 'ss ') | (part['SIZE'] == 16) | (part['SIZE'] <= 1)][['SIZE', 'PT_COMMENT', 'P_NAME', 'TYPE', 'CONTAINER', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERSTATUS'] != 'F') | (orders['O_COMMENT'] != 'k') | (orders['O_COMMENT'].str.startswith('t')) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] != 0)][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['PS_PARTKEY', 'CONTAINER', 'RECEIPTDATE', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['LINENUMBER'] <= 6) & (lineitem['TAX'] == 0.0301769309825844) | (lineitem['L_PARTKEY'] <= 154080) & (lineitem['LINENUMBER'] != 4) & (lineitem['L_ORDERKEY'] == 191) & (lineitem['TAX'] > 0.02221320503045746) | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['TAX'] >= 0.06314403741565508) & (lineitem['RECEIPTDATE'] != '1992-05-02')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 90) & (partsupp['AVAILQTY'] >= 3065)].merge(part[['BRAND', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] != 'b') & (supplier['S_COMMENT'] != 'the') | (supplier['S_PHONE'] == '3') | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] <= 79576) | (orders['TOTALPRICE'] != 82237.48021906063) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'].str.startswith('f')) & (orders['ORDERDATE'] == '1992-01-13')][['CLERK', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'QUANTITY', 'P_NAME', 'S_ADDRESS', 'PS_SUPPKEY']).agg('count')