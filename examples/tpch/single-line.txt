customer

lineitem

nation

orders

part

partsupp

region

supplier

customer[(customer['C_ACCTBAL'] < 3988.823701009308)]

customer[(customer['C_PHONE'].str.startswith('27-'))]

customer[['C_ACCTBAL']]

customer[['C_ADDRESS']]

customer[['C_COMMENT']]

customer[['C_CUSTKEY']]

customer[['C_NAME']]

customer[['C_PHONE']]

customer[['MKTSEGMENT']]

lineitem[(lineitem['L_COMMENT'] != 'y')]

lineitem[(lineitem['L_ORDERKEY'] < 82)]

lineitem[(lineitem['TAX'] < 0.0276769185973031)]

lineitem[['DISCOUNT']]

lineitem[['LINESTATUS']]

lineitem[['QUANTITY']]

lineitem[['RECEIPTDATE']]

lineitem[['RETURNFLAG']]

lineitem[['SHIPINSTRUCT']]

lineitem[['SHIPMODE']]

lineitem[['TAX']]

nation[(nation['N_COMMENT'] == 'r')]

nation[(nation['N_NAME'].str.startswith('A'))]

nation[(nation['N_NATIONKEY'] != 22)]

nation[(nation['N_NATIONKEY'] == 17)]

nation[(nation['N_REGIONKEY'] < 1)]

nation[(nation['N_REGIONKEY'] <= 0)]

nation[(nation['N_REGIONKEY'] <= 2)]

nation[(nation['N_REGIONKEY'] > 1)]

nation[(nation['N_REGIONKEY'] > 3)]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

nation[['N_REGIONKEY']]

orders[(orders['ORDERDATE'] >= '1992-01-13')]

orders[(orders['ORDERDATE'] >= '1998-07-21')]

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM')]

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH']))]

orders[['CLERK']]

orders[['ORDERDATE']]

orders[['ORDERSTATUS']]

orders[['O_COMMENT']]

orders[['O_ORDERKEY']]

orders[['SHIPPRIORITY']]

orders[['TOTALPRICE']]

part[(part['BRAND'] == 'Brand#23')]

part[(part['CONTAINER'] != 'WRAP')]

part[(part['CONTAINER'].str.startswith('LG'))]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3']))]

part[(part['SIZE'] == 22)]

part[(part['SIZE'] >= 2)]

part[(part['SIZE'] >= 20)]

part[(part['TYPE'] != 'E')]

part[(part['TYPE'] == 'STA')]

part[(part['TYPE'].str.startswith('E'))]

part[(part['TYPE'].str.startswith('S'))]

part[['BRAND']]

part[['CONTAINER']]

part[['MFGR']]

part[['PT_COMMENT']]

part[['P_NAME']]

part[['P_PARTKEY']]

part[['RETAILPRICE']]

part[['SIZE']]

part[['TYPE']]

partsupp[(partsupp['PS_PARTKEY'] < 49)]

partsupp[(partsupp['SUPPLYCOST'] != 851.785319025039)]

partsupp[(partsupp['SUPPLYCOST'] < 369.18811199164253)]

partsupp[(partsupp['SUPPLYCOST'] <= 470.0158123789215)]

partsupp[(partsupp['SUPPLYCOST'] == 572.8787594421248)]

partsupp[(partsupp['SUPPLYCOST'] > 864.651250915407)]

partsupp[['AVAILQTY']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'] == 'h')]

region[(region['R_COMMENT'] == 'u')]

region[(region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('u'))]

region[(region['R_NAME'] != 'A')]

region[(region['R_NAME'] == 'A')]

region[(region['R_NAME'] == 'AFR')]

region[(region['R_NAME'] == 'AME')]

region[(region['R_NAME'].str.startswith('A'))]

region[(region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'].str.startswith('E'))]

region[(region['R_REGIONKEY'] != 1)]

region[(region['R_REGIONKEY'] < 0)]

region[(region['R_REGIONKEY'] <= 1)]

region[(region['R_REGIONKEY'] <= 2)]

region[(region['R_REGIONKEY'] == 0)]

region[(region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] == 2)]

region[(region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] > 2)]

region[(region['R_REGIONKEY'] > 3)]

region[(region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] >= 1)]

region[(region['R_REGIONKEY'] >= 2)]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[(supplier['S_ACCTBAL'] < 2591.2020440700508)]

supplier[(supplier['S_COMMENT'] == 'v')]

supplier[(supplier['S_NAME'] == 'S')]

supplier[['S_ACCTBAL']]

supplier[['S_ADDRESS']]

supplier[['S_COMMENT']]

supplier[['S_NAME']]

supplier[['S_NATIONKEY']]

supplier[['S_PHONE']]

supplier[['S_SUPPKEY']]

customer.groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer.groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

customer.groupby(by=['C_PHONE']).agg('count')

customer.groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT']).agg('count')

customer.groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 84) & (customer['C_CUSTKEY'] != 50)]

customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('n'))]

customer[(customer['C_NATIONKEY'] < 4) & (customer['C_NATIONKEY'] < 1)]

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'] == '13-')]

customer[['C_ADDRESS', 'MKTSEGMENT']]

customer[['C_CUSTKEY', 'C_ACCTBAL']]

customer[['C_CUSTKEY', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_NAME']]

customer[['C_NAME', 'C_ADDRESS']]

customer[['C_PHONE', 'MKTSEGMENT']]

customer[['MKTSEGMENT', 'C_CUSTKEY']]

lineitem.groupby(by=['COMMITDATE']).agg('count')

lineitem.groupby(by=['L_PARTKEY']).agg('count')

lineitem.groupby(by=['RECEIPTDATE']).agg('min', numeric_only=True)

lineitem.groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['SHIPMODE']).agg('min', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['RETURNFLAG'] == 'N')]

lineitem[['COMMITDATE', 'L_PARTKEY']]

lineitem[['DISCOUNT', 'LINENUMBER']]

lineitem[['EXTENDEDPRICE', 'TAX']]

lineitem[['L_COMMENT', 'EXTENDEDPRICE']]

lineitem[['L_COMMENT', 'LINENUMBER']]

lineitem[['L_COMMENT', 'TAX']]

lineitem[['L_ORDERKEY', 'L_SUPPKEY']]

lineitem[['QUANTITY', 'LINENUMBER']]

lineitem[['QUANTITY', 'RECEIPTDATE']]

lineitem[['QUANTITY', 'TAX']]

lineitem[['RECEIPTDATE', 'LINESTATUS']]

lineitem[['SHIPDATE', 'L_COMMENT']]

lineitem[['SHIPMODE', 'SHIPDATE']]

lineitem[['TAX', 'COMMITDATE']]

nation.groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation.groupby(by=['N_NATIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

nation.groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'c') | (nation['N_NAME'].str.startswith('J'))]

nation[(nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] == 'u')]

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] < 20)]

nation[(nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('V'))]

nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'] != 'e')]

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_REGIONKEY'] <= 2)]

nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_COMMENT'] != 'i')]

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] == 'l')]

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] == 't')]

nation[['N_COMMENT', 'N_NAME']]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_REGIONKEY']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY']]

nation[['N_NAME', 'N_REGIONKEY']]

nation[['N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_NAME']]

nation[['N_REGIONKEY', 'N_COMMENT']]

orders.groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders.groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

orders.groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders.groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] > 472)]

orders[(orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] >= 35855.58337353596)]

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['SHIPPRIORITY'] != 0)]

orders[(orders['O_COMMENT'] != 'z') & (orders['O_CUSTKEY'] == 50972)]

orders[(orders['O_ORDERKEY'] > 739) | (orders['O_CUSTKEY'] <= 101136)]

orders[['CLERK', 'ORDERDATE']]

orders[['CLERK', 'O_COMMENT']]

orders[['ORDERPRIORITY', 'ORDERDATE']]

orders[['ORDERPRIORITY', 'ORDERSTATUS']]

orders[['ORDERPRIORITY', 'O_ORDERKEY']]

orders[['ORDERSTATUS', 'CLERK']]

orders[['ORDERSTATUS', 'ORDERDATE']]

orders[['ORDERSTATUS', 'ORDERPRIORITY']]

orders[['ORDERSTATUS', 'O_COMMENT']]

orders[['ORDERSTATUS', 'O_ORDERKEY']]

orders[['O_ORDERKEY', 'CLERK']]

orders[['SHIPPRIORITY', 'O_ORDERKEY']]

part.groupby(by=['BRAND']).agg('count')

part.groupby(by=['BRAND']).agg('max', numeric_only=True)

part.groupby(by=['BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND']).agg('min', numeric_only=True)

part.groupby(by=['BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR']).agg('min', numeric_only=True)

part.groupby(by=['MFGR']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('count')

part.groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('count')

part.groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['SIZE']).agg('count')

part.groupby(by=['SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE']).agg('count')

part.groupby(by=['TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#25') | (part['MFGR'] != 'Manufacturer#4')]

part[(part['BRAND'] != 'Brand#51') | (part['RETAILPRICE'] != 987.0885520388334)]

part[(part['BRAND'] == 'Brand#44') | (part['TYPE'] == 'SMA')]

part[(part['BRAND'].isin(['Brand#52', 'Brand#41', 'Brand#25', 'Brand#21', 'Brand#15', 'Brand#43', 'Brand#23', 'Brand#42'])) | (part['TYPE'] != 'L')]

part[(part['CONTAINER'] == 'MED') | (part['CONTAINER'] != 'SM')]

part[(part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] != 105)]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'] != 'SM')]

part[(part['MFGR'] == 'Manufacturer#1') & (part['PT_COMMENT'] == 'y')]

part[(part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] <= 115)]

part[(part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'] != 'WRAP')]

part[(part['PT_COMMENT'] != '!') & (part['SIZE'] <= 43)]

part[(part['PT_COMMENT'] == ' ') | (part['MFGR'] == 'Manufacturer#5')]

part[(part['P_NAME'] != 'k') & (part['SIZE'] >= 37)]

part[(part['P_NAME'].str.startswith('blu')) & (part['PT_COMMENT'] == 'p')]

part[(part['P_NAME'].str.startswith('f')) | (part['P_PARTKEY'] < 136)]

part[(part['P_NAME'].str.startswith('l')) | (part['P_PARTKEY'] != 53)]

part[(part['P_PARTKEY'] < 184) & (part['PT_COMMENT'] != 'the')]

part[(part['P_PARTKEY'] <= 155) | (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['RETAILPRICE'] < 929.2198037815278) | (part['RETAILPRICE'] == 1095.3803114055456)]

part[(part['RETAILPRICE'] <= 979.4385500929527) & (part['PT_COMMENT'].str.startswith('a'))]

part[(part['RETAILPRICE'] == 1008.2549158211739) & (part['SIZE'] <= 2)]

part[(part['SIZE'] != 44) | (part['SIZE'] >= 7)]

part[(part['TYPE'].str.startswith('L')) | (part['SIZE'] > 10)]

part[(part['TYPE'].str.startswith('STA')) & (part['P_PARTKEY'] != 67)]

part[['BRAND', 'CONTAINER']]

part[['BRAND', 'P_PARTKEY']]

part[['CONTAINER', 'PT_COMMENT']]

part[['CONTAINER', 'P_NAME']]

part[['MFGR', 'PT_COMMENT']]

part[['PT_COMMENT', 'SIZE']]

part[['P_NAME', 'MFGR']]

part[['P_NAME', 'PT_COMMENT']]

part[['P_NAME', 'RETAILPRICE']]

part[['P_PARTKEY', 'BRAND']]

part[['P_PARTKEY', 'CONTAINER']]

part[['P_PARTKEY', 'TYPE']]

part[['RETAILPRICE', 'MFGR']]

part[['RETAILPRICE', 'SIZE']]

part[['RETAILPRICE', 'TYPE']]

part[['SIZE', 'PT_COMMENT']]

part[['TYPE', 'MFGR']]

partsupp.groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 3136) & (partsupp['PS_PARTKEY'] != 49)]

partsupp[(partsupp['AVAILQTY'] > 3564) & (partsupp['SUPPLYCOST'] <= 319.76543905874615)]

partsupp[(partsupp['PS_PARTKEY'] < 25) & (partsupp['AVAILQTY'] <= 4554)]

partsupp[(partsupp['PS_PARTKEY'] <= 23) & (partsupp['P_COMMENT'] != 'g')]

partsupp[(partsupp['PS_SUPPKEY'] > 5545) | (partsupp['SUPPLYCOST'] > 968.6071700147932)]

partsupp[(partsupp['PS_SUPPKEY'] >= 7215) & (partsupp['AVAILQTY'] < 7968)]

partsupp[(partsupp['P_COMMENT'] != 'v') & (partsupp['AVAILQTY'] != 2857)]

partsupp[(partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['PS_PARTKEY'] < 3)]

partsupp[['AVAILQTY', 'P_COMMENT']]

partsupp[['AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'AVAILQTY']]

partsupp[['P_COMMENT', 'AVAILQTY']]

partsupp[['P_COMMENT', 'PS_SUPPKEY']]

partsupp[['P_COMMENT', 'SUPPLYCOST']]

partsupp[['SUPPLYCOST', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'PS_PARTKEY']]

partsupp[['SUPPLYCOST', 'P_COMMENT']]

region.groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME']).agg('count')

region.groupby(by=['R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('count')

region.groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'M')]

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('A'))]

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'AME')]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] >= 3)]

region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 3)]

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'AME')]

region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] <= 1)]

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'ASI')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'AFR')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 3)]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] == 0)]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'E')]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AME')]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'E')]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('E'))]

region[(region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] == 0)]

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'A')]

region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] >= 3)]

region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'] != 'M') & (region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] < 2)]

region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'E')]

region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'h')]

region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 3)]

region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] < 3)]

region[(region['R_NAME'] == 'E') & (region['R_NAME'] == 'ASI')]

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 1)]

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AFR')]

region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] < 1)]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'u')]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'ASI')]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'E')]

region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] <= 2)]

region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] != 'AFR')]

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'E')]

region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'g')]

region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] <= 2)]

region[(region['R_REGIONKEY'] <= 2) & (region['R_NAME'] == 'M')]

region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] != 'AFR')]

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] <= 2)]

region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'M')]

region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('E'))]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']]

supplier.groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY']).agg('count')

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == -658.0172300610834) & (supplier['S_PHONE'] != '14-')]

supplier[(supplier['S_ADDRESS'] == 'b') & (supplier['S_COMMENT'].str.startswith('c'))]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '28-')]

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '32-')]

supplier[(supplier['S_SUPPKEY'] == 133) | (supplier['S_ACCTBAL'] >= 7164.719436417769)]

supplier[['S_COMMENT', 'S_ACCTBAL']]

supplier[['S_COMMENT', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_NAME']]

supplier[['S_NAME', 'S_COMMENT']]

supplier[['S_NAME', 'S_SUPPKEY']]

supplier[['S_NATIONKEY', 'S_NAME']]

supplier[['S_PHONE', 'S_ACCTBAL']]

supplier[['S_PHONE', 'S_COMMENT']]

customer.groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer.groupby(by=['C_ADDRESS', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer.groupby(by=['C_CUSTKEY', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer.groupby(by=['C_NAME', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']]

customer[['C_NAME', 'C_ADDRESS', 'C_ACCTBAL']]

customer[['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT']]

customer[['C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']]

lineitem.groupby(by=['LINESTATUS', 'L_PARTKEY']).agg('mean', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'RETURNFLAG']).agg('max', numeric_only=True)

lineitem.groupby(by=['L_ORDERKEY', 'TAX']).agg('max', numeric_only=True)

lineitem.groupby(by=['QUANTITY', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 59862.906966724506) | (lineitem['L_ORDERKEY'] >= 189) & (lineitem['TAX'] <= 0.015974488675674747)]

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['QUANTITY'] != 44)]

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['RECEIPTDATE'] == '1998-11-06')]

lineitem[['COMMITDATE', 'TAX', 'L_SUPPKEY']]

lineitem[['DISCOUNT', 'COMMITDATE', 'RECEIPTDATE']]

lineitem[['DISCOUNT', 'L_COMMENT', 'COMMITDATE']]

lineitem[['QUANTITY', 'SHIPDATE', 'TAX']]

lineitem[['RETURNFLAG', 'COMMITDATE', 'L_COMMENT']]

lineitem[['RETURNFLAG', 'L_ORDERKEY', 'RECEIPTDATE']]

lineitem[['SHIPMODE', 'L_COMMENT', 'SHIPDATE']]

lineitem[['TAX', 'QUANTITY', 'COMMITDATE']]

lineitem[['TAX', 'SHIPMODE', 'COMMITDATE']]

nation.groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] >= 3)]

nation[(nation['N_NAME'] == 'S') | (nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] < 1)]

nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] != 2)]

nation[(nation['N_NATIONKEY'] <= 17) & (nation['N_NAME'] == 'R') & (nation['N_COMMENT'].str.startswith('t'))]

nation[(nation['N_NATIONKEY'] == 11) & (nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] > 7)]

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 3)]

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] <= 2)]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

orders.groupby(by=['ORDERPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders.groupby(by=['ORDERSTATUS', 'ORDERDATE']).agg('min', numeric_only=True)

orders.groupby(by=['O_COMMENT', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'TOTALPRICE']).agg('count')

orders.groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] == 93526) & (orders['O_CUSTKEY'] == 37611)]

orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] == 0)]

orders[(orders['O_CUSTKEY'] > 116528) | (orders['O_CUSTKEY'] != 53456) & (orders['SHIPPRIORITY'] == 0)]

orders[['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS']]

orders[['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']]

orders[['O_COMMENT', 'ORDERDATE', 'CLERK']]

orders[['O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']]

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']]

part.groupby(by=['BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['BRAND', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['BRAND', 'SIZE']).agg('count')

part.groupby(by=['BRAND', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR']).agg('count')

part.groupby(by=['CONTAINER', 'PT_COMMENT']).agg('count')

part.groupby(by=['CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

part.groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'MFGR']).agg('count')

part.groupby(by=['PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('count')

part.groupby(by=['P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER']).agg('count')

part.groupby(by=['TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#51') & (part['SIZE'] > 37) & (part['RETAILPRICE'] > 1064.8949478278864)]

part[(part['BRAND'] == 'Brand#25') | (part['TYPE'] != 'SMA') & (part['BRAND'] != 'Brand#12')]

part[(part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] > 930.0255107523169)]

part[(part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'].str.startswith('w')) & (part['TYPE'] == 'SMA')]

part[(part['MFGR'] == 'Manufacturer#3') & (part['SIZE'] < 38) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5']))]

part[(part['PT_COMMENT'].str.startswith('!')) & (part['TYPE'] == 'SMA') | (part['CONTAINER'] == 'LG')]

part[(part['P_NAME'] != 's') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['TYPE'] != 'S')]

part[(part['TYPE'] != 'M') | (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'].str.startswith('WRAP'))]

part[(part['TYPE'] == 'P') | (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'w')]

part[(part['TYPE'].str.startswith('STA')) | (part['P_PARTKEY'] > 122) | (part['BRAND'] != 'Brand#35')]

part[['BRAND', 'P_PARTKEY', 'MFGR']]

part[['CONTAINER', 'MFGR', 'RETAILPRICE']]

part[['CONTAINER', 'P_NAME', 'PT_COMMENT']]

part[['CONTAINER', 'SIZE', 'MFGR']]

part[['PT_COMMENT', 'TYPE', 'MFGR']]

part[['P_NAME', 'BRAND', 'TYPE']]

part[['P_NAME', 'CONTAINER', 'TYPE']]

part[['P_NAME', 'PT_COMMENT', 'SIZE']]

part[['P_NAME', 'PT_COMMENT', 'TYPE']]

part[['P_NAME', 'SIZE', 'MFGR']]

part[['P_NAME', 'SIZE', 'PT_COMMENT']]

part[['P_NAME', 'TYPE', 'CONTAINER']]

part[['P_PARTKEY', 'BRAND', 'MFGR']]

part[['P_PARTKEY', 'CONTAINER', 'BRAND']]

part[['P_PARTKEY', 'CONTAINER', 'MFGR']]

part[['P_PARTKEY', 'P_NAME', 'SIZE']]

part[['RETAILPRICE', 'P_NAME', 'SIZE']]

part[['SIZE', 'BRAND', 'CONTAINER']]

part[['TYPE', 'BRAND', 'RETAILPRICE']]

part[['TYPE', 'P_NAME', 'CONTAINER']]

part[['TYPE', 'P_NAME', 'PT_COMMENT']]

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('count')

partsupp.groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

partsupp.groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('count')

partsupp.groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp.groupby(by=['P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 6425) & (partsupp['PS_SUPPKEY'] < 4151) | (partsupp['PS_SUPPKEY'] == 927)]

partsupp[(partsupp['PS_PARTKEY'] <= 12) & (partsupp['AVAILQTY'] > 1900) | (partsupp['P_COMMENT'] != 'c')]

partsupp[(partsupp['PS_SUPPKEY'] > 1742) | (partsupp['PS_PARTKEY'] >= 43) & (partsupp['SUPPLYCOST'] < 373.0359156983666)]

partsupp[(partsupp['P_COMMENT'] == 'p') & (partsupp['SUPPLYCOST'] != 392.2757972306281) & (partsupp['AVAILQTY'] <= 1264)]

partsupp[(partsupp['SUPPLYCOST'] <= 172.51617824487596) | (partsupp['PS_PARTKEY'] > 16) & (partsupp['PS_SUPPKEY'] < 1558)]

partsupp[(partsupp['SUPPLYCOST'] == 402.4407973851828) | (partsupp['SUPPLYCOST'] <= 656.2116848656133) & (partsupp['SUPPLYCOST'] == 334.3515791204499)]

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']]

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']]

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] < 0)]

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 1)]

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'h')]

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'E')]

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l')]

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] > 0)]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'u')]

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'h')]

region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('A'))]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'l')]

region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'h')]

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('E'))]

region[(region['R_NAME'] != 'E') & (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('A'))]

region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'u')]

region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'u')]

region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] >= 0)]

region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] > 2) & (region['R_NAME'] != 'AME')]

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'A')]

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'A')]

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'l')]

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('M'))]

region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] == 0)]

region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'M')]

region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] == 0)]

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AME') & (region['R_NAME'] != 'AFR')]

region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'h')]

region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'A')]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] < 2)]

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'AFR')]

region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'g')]

region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'l')]

region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'M')]

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'A') & (region['R_NAME'] == 'M')]

region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] < 1)]

region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] > 2)]

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] <= 0)]

region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'l')]

region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'AME')]

region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'A')]

region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] == 2)]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'AME') & (region['R_NAME'] != 'E')]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'h')]

region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'AME')]

region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] != 'u')]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier.groupby(by=['S_ADDRESS', 'S_NATIONKEY']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier.groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

supplier.groupby(by=['S_PHONE', 'S_COMMENT']).agg('min', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 1289.7079312805324) | (supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] != ' ')]

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'i') & (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_NATIONKEY'] < 15) | (supplier['S_ACCTBAL'] != 2419.1407897797653) & (supplier['S_COMMENT'].str.startswith('s'))]

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_SUPPKEY'] != 13)]

supplier[(supplier['S_SUPPKEY'] != 108) & (supplier['S_ACCTBAL'] != 6903.171356051394) | (supplier['S_COMMENT'] != 'es ')]

supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_NAME', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_NAME', 'S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_NAME', 'S_NATIONKEY']]

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']]

customer.groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_NAME']).agg('sum', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 18)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 8217.587523162205) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 1466.6803856462288) | (customer['C_COMMENT'] != 'w')]

customer[(customer['C_CUSTKEY'] <= 68) & (customer['C_CUSTKEY'] <= 88) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] != 'a')]

customer[(customer['C_NATIONKEY'] == 21) & (customer['C_ADDRESS'] == 'o') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '22-')]

customer[(customer['C_NATIONKEY'] >= 12) & (customer['C_NATIONKEY'] < 20) | (customer['C_PHONE'] != '3') & (customer['C_COMMENT'].str.startswith('e'))]

customer[(customer['MKTSEGMENT'] != 'FURNITURE')][['C_ADDRESS']]

customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']]

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']]

customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_PHONE']]

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']]

customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']]

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']]

lineitem.groupby(by=['COMMITDATE', 'SHIPDATE', 'L_PARTKEY']).agg('count')

lineitem.groupby(by=['EXTENDEDPRICE', 'L_ORDERKEY', 'COMMITDATE']).agg('min', numeric_only=True)

lineitem.groupby(by=['LINENUMBER', 'SHIPDATE', 'SHIPMODE']).agg('count')

lineitem.groupby(by=['L_COMMENT', 'RECEIPTDATE', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem.groupby(by=['L_SUPPKEY', 'L_ORDERKEY', 'RECEIPTDATE']).agg('min', numeric_only=True)

lineitem.groupby(by=['QUANTITY', 'L_PARTKEY', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG', 'COMMITDATE', 'L_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 33)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 707.2718960909043)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'RECEIPTDATE', 'SHIPDATE', 'DISCOUNT']]

lineitem[['DISCOUNT', 'SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE']]

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'LINENUMBER', 'RETURNFLAG']]

lineitem[['LINESTATUS', 'RETURNFLAG', 'RECEIPTDATE', 'COMMITDATE']]

lineitem[['L_ORDERKEY', 'COMMITDATE', 'QUANTITY', 'TAX']]

lineitem[['RECEIPTDATE', 'COMMITDATE', 'LINENUMBER', 'RETURNFLAG']]

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'SHIPMODE', 'TAX']]

lineitem[['SHIPINSTRUCT', 'QUANTITY', 'SHIPMODE', 'RECEIPTDATE']]

lineitem[['SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'TAX']]

lineitem[['SHIPMODE', 'RECEIPTDATE', 'SHIPDATE', 'TAX']]

lineitem[['TAX', 'RETURNFLAG', 'LINESTATUS', 'RECEIPTDATE']]

nation.groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != ' ')][['N_COMMENT']]

nation[(nation['N_COMMENT'] == 'p')][['N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] == 'V') | (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] == 14)]

nation[(nation['N_COMMENT'].str.startswith('s'))][['N_NAME']]

nation[(nation['N_NAME'] != 'B')][['N_NAME']]

nation[(nation['N_NAME'] == 'F')][['N_NAME']]

nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] <= 11) & (nation['N_COMMENT'] == 'h')]

nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'M')]

nation[(nation['N_NATIONKEY'] != 17)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] < 8)][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] > 15) & (nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] > 12) & (nation['N_NAME'] != 'M')]

nation[(nation['N_REGIONKEY'] != 0)][['N_NAME']]

nation[(nation['N_REGIONKEY'] != 1)][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'C') | (nation['N_NAME'] == 'V')]

nation[(nation['N_REGIONKEY'] == 1)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 3)][['N_COMMENT']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']]

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']]

orders.groupby(by=['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS']).agg('min', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE']).agg('count')

orders.groupby(by=['ORDERSTATUS', 'CLERK', 'ORDERDATE']).agg('max', numeric_only=True)

orders.groupby(by=['ORDERSTATUS', 'CLERK', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders.groupby(by=['O_COMMENT', 'CLERK', 'SHIPPRIORITY']).agg('count')

orders.groupby(by=['O_CUSTKEY', 'CLERK', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE']).agg('max', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C')][['TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] > 66132) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] != 0)]

orders[(orders['ORDERPRIORITY'] != '5-LOW')][['ORDERDATE']]

orders[(orders['O_COMMENT'] != 'uri')][['O_ORDERKEY']]

orders[(orders['TOTALPRICE'] == 90771.24001296521)][['O_COMMENT']]

orders[(orders['TOTALPRICE'] >= 315975.84347102884)][['ORDERSTATUS']]

orders[['CLERK', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[['CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE']]

orders[['ORDERDATE', 'TOTALPRICE', 'CLERK', 'ORDERPRIORITY']]

orders[['ORDERPRIORITY', 'CLERK', 'ORDERDATE', 'TOTALPRICE']]

orders[['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['TOTALPRICE', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY']]

orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']]

part.groupby(by=['BRAND', 'MFGR', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'P_PARTKEY', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'TYPE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE']).agg('count')

part.groupby(by=['CONTAINER', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'BRAND', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'P_NAME', 'P_PARTKEY']).agg('count')

part.groupby(by=['TYPE', 'BRAND', 'P_NAME']).agg('count')

part.groupby(by=['TYPE', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#14') | (part['CONTAINER'] != 'LG') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) | (part['RETAILPRICE'] >= 976.3996504784557)]

part[(part['BRAND'].isin(['Brand#34', 'Brand#15', 'Brand#33', 'Brand#31', 'Brand#35', 'Brand#53', 'Brand#32', 'Brand#25', 'Brand#54', 'Brand#41', 'Brand#55', 'Brand#51', 'Brand#52', 'Brand#24']))][['RETAILPRICE']]

part[(part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'] != 'MED') | (part['BRAND'].isin(['Brand#35', 'Brand#22', 'Brand#45', 'Brand#42', 'Brand#13', 'Brand#12', 'Brand#41', 'Brand#11', 'Brand#15', 'Brand#33', 'Brand#52', 'Brand#51', 'Brand#55', 'Brand#25', 'Brand#24', 'Brand#53', 'Brand#34', 'Brand#23', 'Brand#14', 'Brand#43', 'Brand#21', 'Brand#44'])) & (part['TYPE'] != 'STA')]

part[(part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] != 'h') | (part['PT_COMMENT'] == 'f') & (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] == 45) | (part['P_PARTKEY'] > 86) & (part['P_NAME'].str.startswith('o'))]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3'])) & (part['SIZE'] <= 21) & (part['TYPE'].str.startswith('SMA')) | (part['CONTAINER'] == 'JUMBO')]

part[(part['PT_COMMENT'].str.startswith('y')) & (part['SIZE'] != 27) & (part['BRAND'] != 'Brand#44') & (part['PT_COMMENT'] != 'u')]

part[(part['P_NAME'] != 'blu') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) & (part['SIZE'] == 48) & (part['PT_COMMENT'] != 't')]

part[(part['P_NAME'] != 't') | (part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] != 'cor') & (part['CONTAINER'] == 'LG')]

part[(part['P_PARTKEY'] <= 168) & (part['PT_COMMENT'] != 'q') | (part['RETAILPRICE'] != 1015.2699823553014) | (part['P_NAME'].str.startswith('blu'))]

part[(part['P_PARTKEY'] <= 33) & (part['PT_COMMENT'] != 'c') & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'r')]

part[(part['P_PARTKEY'] <= 89) & (part['MFGR'] == 'Manufacturer#1') & (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] >= 20)]

part[(part['P_PARTKEY'] <= 90) & (part['RETAILPRICE'] == 932.043909094335) & (part['TYPE'].str.startswith('M')) | (part['SIZE'] < 13)]

part[(part['RETAILPRICE'] == 967.3074449233313) & (part['SIZE'] < 37) | (part['P_NAME'] == 'w') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5']))]

part[(part['RETAILPRICE'] > 1092.2152061114334) & (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#3') & (part['RETAILPRICE'] == 975.4692010168621)]

part[(part['RETAILPRICE'] > 987.9839371300549) & (part['RETAILPRICE'] > 975.6290391019522) | (part['SIZE'] <= 43) | (part['P_NAME'] == 'a')]

part[(part['SIZE'] == 15) | (part['P_NAME'] != 'n') | (part['BRAND'].isin(['Brand#24', 'Brand#35', 'Brand#13', 'Brand#53', 'Brand#43', 'Brand#45', 'Brand#12', 'Brand#32', 'Brand#15'])) | (part['TYPE'].str.startswith('E'))]

part[(part['SIZE'] > 28) | (part['RETAILPRICE'] > 958.1000917535896) & (part['P_PARTKEY'] > 162) & (part['P_PARTKEY'] < 48)]

part[(part['TYPE'] != 'L') & (part['P_NAME'] == 'y') & (part['RETAILPRICE'] >= 1060.0614535581656) & (part['TYPE'] != 'L')]

part[(part['TYPE'] == 'SMA') & (part['BRAND'].isin(['Brand#34', 'Brand#51', 'Brand#31'])) & (part['P_PARTKEY'] >= 151) | (part['SIZE'] >= 31)]

part[(part['TYPE'].str.startswith('SMA')) | (part['SIZE'] >= 24) & (part['BRAND'] == 'Brand#34') & (part['P_PARTKEY'] == 111)]

part[['BRAND', 'PT_COMMENT', 'SIZE', 'CONTAINER']]

part[['BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY']]

part[['BRAND', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[['CONTAINER', 'TYPE', 'P_PARTKEY', 'MFGR']]

part[['CONTAINER', 'TYPE', 'RETAILPRICE', 'SIZE']]

part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND']]

part[['MFGR', 'SIZE', 'TYPE', 'P_PARTKEY']]

part[['PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_NAME']]

part[['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']]

part[['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'TYPE']]

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'RETAILPRICE']]

part[['P_NAME', 'BRAND', 'CONTAINER', 'RETAILPRICE']]

part[['P_NAME', 'PT_COMMENT', 'CONTAINER', 'MFGR']]

part[['P_PARTKEY', 'BRAND', 'SIZE', 'MFGR']]

part[['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'P_NAME', 'MFGR', 'PT_COMMENT']]

part[['P_PARTKEY', 'P_NAME', 'TYPE', 'RETAILPRICE']]

part[['RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT']]

part[['SIZE', 'MFGR', 'P_NAME', 'PT_COMMENT']]

part[['SIZE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']]

part[['TYPE', 'MFGR', 'P_NAME', 'SIZE']]

partsupp.groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('count')

partsupp.groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['BRAND'] != 'Brand#22')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] != 43)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 2387) | (partsupp['PS_PARTKEY'] < 43) & (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['P_COMMENT'].str.startswith('o'))]

partsupp[(partsupp['AVAILQTY'] < 704) | (partsupp['P_COMMENT'] == 'y') | (partsupp['PS_PARTKEY'] <= 31) & (partsupp['AVAILQTY'] >= 523)]

partsupp[(partsupp['AVAILQTY'] == 5837) | (partsupp['PS_PARTKEY'] <= 23) & (partsupp['AVAILQTY'] == 7270) | (partsupp['P_COMMENT'] == 'q')]

partsupp[(partsupp['AVAILQTY'] >= 8584)][['PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] > 44)][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] >= 24) | (partsupp['AVAILQTY'] != 486) & (partsupp['PS_SUPPKEY'] < 2235) & (partsupp['PS_PARTKEY'] <= 27)]

partsupp[(partsupp['PS_SUPPKEY'] <= 1704) | (partsupp['PS_SUPPKEY'] >= 7396) & (partsupp['SUPPLYCOST'] < 788.3912469060141) | (partsupp['AVAILQTY'] == 1663)]

partsupp[(partsupp['PS_SUPPKEY'] <= 6281) | (partsupp['P_COMMENT'] != 'q') | (partsupp['PS_PARTKEY'] >= 11) & (partsupp['AVAILQTY'] >= 8974)]

partsupp[(partsupp['P_COMMENT'] == ' ')][['SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'] == 'e') | (partsupp['PS_PARTKEY'] >= 23) | (partsupp['PS_SUPPKEY'] == 418) | (partsupp['P_COMMENT'] != 'g')]

partsupp[(partsupp['SUPPLYCOST'] < 170.1466241648136)][['P_COMMENT']]

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']]

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'u')][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']]

region[(region['R_NAME'] != 'M')][['R_COMMENT']]

region[(region['R_NAME'] == 'AME')][['R_NAME']]

region[(region['R_REGIONKEY'] <= 2)][['R_NAME']]

region[(region['R_REGIONKEY'] <= 3)][['R_NAME']]

region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 1)][['R_COMMENT']]

supplier.groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_PHONE']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

supplier.groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_NAME']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_NAME', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 902.9679902039318) | (supplier['S_ACCTBAL'] <= 5471.920670080244) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 15)]

supplier[(supplier['S_ACCTBAL'] == 3488.4401682386115) & (supplier['S_ADDRESS'] != 'K') | (supplier['S_ADDRESS'].str.startswith('F')) & (supplier['S_ACCTBAL'] <= 7200.595910974538)]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '28-') | (supplier['S_ADDRESS'] != '3') & (supplier['S_ADDRESS'] == 'N')]

supplier[(supplier['S_PHONE'] == '2')][['S_NAME']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']]

supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME']]

customer.groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer.groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT']).agg('count')

customer.groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 77) | (customer['C_NATIONKEY'] < 9)][['C_NAME']]

customer[(customer['C_CUSTKEY'] == 55)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_PHONE']]

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')][['C_NAME']]

customer[(customer['C_NATIONKEY'] != 11) | (customer['C_COMMENT'] == 'g')][['C_ACCTBAL']]

customer[(customer['C_PHONE'] != '18-') & (customer['C_CUSTKEY'] <= 32) & (customer['C_PHONE'] != '3') | (customer['C_ADDRESS'] == '4') & (customer['C_ACCTBAL'] <= 7651.9642448521445)]

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE']))][['C_NAME', 'C_ACCTBAL']]

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']]

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']]

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']]

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']]

customer[['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']]

customer[['C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[['C_NAME']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']]

customer[['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('count')

customer[['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']]

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

lineitem.groupby(by=['COMMITDATE', 'L_ORDERKEY', 'SHIPMODE', 'RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'SHIPDATE', 'L_SUPPKEY', 'TAX']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_COMMENT', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'DISCOUNT']).agg('count')

lineitem.groupby(by=['RECEIPTDATE', 'SHIPDATE', 'L_COMMENT', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['SHIPDATE', 'RETURNFLAG', 'RECEIPTDATE', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem.merge(orders[['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 48) & (partsupp['AVAILQTY'] < 8270)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['L_COMMENT'] != '.')]

lineitem[(lineitem['L_ORDERKEY'] <= 99) & (lineitem['SHIPMODE'] != 'SHIP')][['QUANTITY']]

lineitem[(lineitem['QUANTITY'] <= 44)][['LINENUMBER', 'L_COMMENT']]

lineitem[['COMMITDATE']].groupby(by=['COMMITDATE']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'L_SUPPKEY', 'TAX', 'COMMITDATE']]

lineitem[['LINESTATUS']].groupby(by=['LINESTATUS']).agg('max', numeric_only=True)

lineitem[['LINESTATUS']].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT']].groupby(by=['L_COMMENT']).agg('max', numeric_only=True)

lineitem[['QUANTITY']].groupby(by=['QUANTITY']).agg('count')

lineitem[['QUANTITY']].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('count')

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE']].groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

lineitem[['SHIPDATE']].groupby(by=['SHIPDATE']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['SHIPMODE']].groupby(by=['SHIPMODE']).agg('sum', numeric_only=True)

lineitem[['TAX']].groupby(by=['TAX']).agg('mean', numeric_only=True)

lineitem[['TAX']].groupby(by=['TAX']).agg('sum', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'r')][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_COMMENT'] == 'u')][['N_NAME', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] < 13)][['N_NAME']]

nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'] != 'h')][['N_NAME']]

nation[(nation['N_NAME'] != 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'l')][['N_NATIONKEY']]

nation[(nation['N_NAME'] != 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'F')][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'K') & (nation['N_COMMENT'].str.startswith('e'))][['N_NAME']]

nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'].str.startswith('p'))][['N_COMMENT']]

nation[(nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'] == 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] != 1)][['N_REGIONKEY']]

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] == 'A')][['N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('G'))].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('V'))].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 10)].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 13)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] < 15) & (nation['N_NATIONKEY'] != 20)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] < 9) | (nation['N_NAME'] != 'R')][['N_NAME']]

nation[(nation['N_NATIONKEY'] <= 15)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 17)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 4) | (nation['N_COMMENT'] != 'r')][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] >= 3) & (nation['N_NATIONKEY'] >= 23)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] >= 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1)].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] != 'K')][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('J'))][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 3)][['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']).agg('count')

orders.groupby(by=['CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']).agg('count')

orders.groupby(by=['O_COMMENT', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT']).agg('sum', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']).agg('count')

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'].str.startswith('R'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_ORDERKEY'] != 317)]

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW'])) | (orders['O_COMMENT'].str.startswith('y')) & (orders['TOTALPRICE'] == 231436.76761145217) & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'].isin(['F']))]

orders[(orders['O_COMMENT'] != 'y') | (orders['O_ORDERKEY'] > 10) | (orders['TOTALPRICE'] == 80903.87898555682) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0)]

orders[(orders['O_CUSTKEY'] != 17832) & (orders['O_CUSTKEY'] < 97018) & (orders['TOTALPRICE'] <= 291179.06416722265) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] <= '1998-07-21')]

orders[(orders['O_CUSTKEY'] < 40157) | (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] <= 521) | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] >= 7748) | (orders['TOTALPRICE'] == 312044.1012780923)]

orders[(orders['O_ORDERKEY'] > 281)][['SHIPPRIORITY', 'CLERK']]

orders[['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']]

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('count')

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('count')

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']]

orders[['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']]

orders[['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK']]

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('count')

orders[['O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY']]

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY']].groupby(by=['O_CUSTKEY']).agg('count')

orders[['O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY']]

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT']]

orders[['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY']]

orders[['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']]

orders[['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT']]

orders[['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

orders[['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['BRAND', 'SIZE', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_NAME', 'P_PARTKEY', 'MFGR']).agg('count')

part.groupby(by=['MFGR', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']).agg('count')

part.groupby(by=['PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'TYPE', 'MFGR']).agg('count')

part.groupby(by=['P_PARTKEY', 'SIZE', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE']).agg('count')

part.groupby(by=['RETAILPRICE', 'BRAND', 'P_NAME', 'CONTAINER']).agg('count')

part.groupby(by=['RETAILPRICE', 'CONTAINER', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'SIZE', 'P_NAME', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER', 'TYPE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'P_NAME', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER', 'P_NAME', 'MFGR']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']).agg('count')

part.groupby(by=['TYPE', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#11') & (part['SIZE'] >= 1) | (part['PT_COMMENT'] == 'a') & (part['BRAND'].isin(['Brand#12', 'Brand#13', 'Brand#31', 'Brand#32', 'Brand#53', 'Brand#45', 'Brand#24', 'Brand#23', 'Brand#44', 'Brand#41', 'Brand#21', 'Brand#25'])) & (part['PT_COMMENT'].str.startswith('l'))]

part[(part['BRAND'] != 'Brand#31')][['P_PARTKEY', 'RETAILPRICE']]

part[(part['BRAND'] != 'Brand#45')].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#14') & (part['SIZE'] <= 24) & (part['TYPE'] == 'STA') | (part['MFGR'] != 'Manufacturer#2') | (part['SIZE'] != 21)]

part[(part['BRAND'].isin(['Brand#12', 'Brand#14', 'Brand#23', 'Brand#55', 'Brand#43'])) & (part['CONTAINER'] != 'MED') & (part['CONTAINER'] == 'JUMBO') | (part['P_NAME'] == 's') & (part['P_PARTKEY'] != 44)]

part[(part['BRAND'].isin(['Brand#21', 'Brand#23', 'Brand#25', 'Brand#53', 'Brand#33', 'Brand#45', 'Brand#41', 'Brand#12', 'Brand#51', 'Brand#22', 'Brand#24', 'Brand#44', 'Brand#35', 'Brand#11', 'Brand#43', 'Brand#13', 'Brand#15', 'Brand#34'])) | (part['RETAILPRICE'] <= 1085.1997808758479) & (part['CONTAINER'] == 'JUMBO') | (part['TYPE'] == 'P') | (part['CONTAINER'] == 'WRAP')]

part[(part['BRAND'].isin(['Brand#52'])) & (part['PT_COMMENT'] != 'k') & (part['P_NAME'].str.startswith('b')) | (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] != 42)]

part[(part['CONTAINER'] != 'JUMBO') | (part['BRAND'].isin(['Brand#13'])) | (part['MFGR'] == 'Manufacturer#2') & (part['BRAND'] != 'Brand#23') | (part['SIZE'] <= 41)]

part[(part['CONTAINER'] != 'SM') | (part['CONTAINER'].str.startswith('MED'))][['MFGR']]

part[(part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] < 111) | (part['RETAILPRICE'] < 920.9868291606595) & (part['PT_COMMENT'] != 'q') & (part['BRAND'] == 'Brand#21')]

part[(part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] != 'u') | (part['CONTAINER'] != 'JUMBO') & (part['SIZE'] < 8) | (part['PT_COMMENT'].str.startswith('c'))]

part[(part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'] == 'p') | (part['BRAND'] != 'Brand#52') & (part['BRAND'] == 'Brand#12') & (part['P_PARTKEY'] != 36)]

part[(part['MFGR'] == 'Manufacturer#4') & (part['SIZE'] > 36) | (part['MFGR'] != 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) | (part['SIZE'] >= 15)]

part[(part['MFGR'] == 'Manufacturer#4') | (part['TYPE'] == 'M') & (part['P_NAME'] == 'g') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5'])) | (part['RETAILPRICE'] > 993.3326948709266)]

part[(part['MFGR'].isin(['Manufacturer#4'])) | (part['PT_COMMENT'] != 'y') & (part['SIZE'] < 18) | (part['SIZE'] != 19) & (part['P_NAME'] == 'l')]

part[(part['MFGR'].isin(['Manufacturer#5']))][['P_PARTKEY', 'MFGR']]

part[(part['PT_COMMENT'] != 'g') & (part['P_NAME'].str.startswith('lem')) & (part['CONTAINER'].str.startswith('MED')) | (part['BRAND'] == 'Brand#35') & (part['SIZE'] == 42)]

part[(part['PT_COMMENT'] == 'h') | (part['PT_COMMENT'].str.startswith('o')) | (part['RETAILPRICE'] != 905.3028138905088) | (part['P_PARTKEY'] == 17) | (part['SIZE'] <= 14)]

part[(part['P_NAME'] != 'd') | (part['SIZE'] <= 2) | (part['PT_COMMENT'].str.startswith('o')) | (part['P_NAME'] != 'h') | (part['SIZE'] >= 45)]

part[(part['P_NAME'].str.startswith('b')) | (part['MFGR'] != 'Manufacturer#5') | (part['TYPE'] != 'STA') & (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] <= 4)]

part[(part['P_NAME'].str.startswith('p')) & (part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] >= 6) & (part['SIZE'] == 34) | (part['TYPE'].str.startswith('M'))]

part[(part['P_PARTKEY'] != 111) | (part['BRAND'].isin(['Brand#35', 'Brand#52', 'Brand#43', 'Brand#53', 'Brand#33', 'Brand#55', 'Brand#45', 'Brand#23', 'Brand#34', 'Brand#41', 'Brand#31', 'Brand#12', 'Brand#11'])) & (part['P_NAME'].str.startswith('m')) | (part['TYPE'].str.startswith('M')) | (part['P_PARTKEY'] <= 140)]

part[(part['P_PARTKEY'] != 71)].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 133) | (part['CONTAINER'].str.startswith('WRAP')) & (part['PT_COMMENT'] != 'n') & (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'].str.startswith('g'))]

part[(part['P_PARTKEY'] < 193) & (part['RETAILPRICE'] > 965.3744035455859) | (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] > 966.9950225735541) & (part['MFGR'] != 'Manufacturer#4')]

part[(part['P_PARTKEY'] >= 78) | (part['CONTAINER'].str.startswith('LG')) & (part['SIZE'] > 45) | (part['P_PARTKEY'] < 182) | (part['MFGR'] != 'Manufacturer#4')]

part[(part['RETAILPRICE'] != 991.9821135747349)].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 946.1802306403978) | (part['TYPE'].str.startswith('E'))][['SIZE']]

part[(part['RETAILPRICE'] >= 989.5265834898365) | (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'].isin(['Brand#23', 'Brand#55', 'Brand#51', 'Brand#12', 'Brand#33', 'Brand#34', 'Brand#15'])) & (part['RETAILPRICE'] == 918.4052980018382) | (part['P_PARTKEY'] != 198)]

part[(part['SIZE'] < 20) | (part['TYPE'] == 'S') & (part['SIZE'] < 19) | (part['CONTAINER'] != 'LG') | (part['P_NAME'] != 'blu')]

part[(part['SIZE'] < 24) | (part['TYPE'].str.startswith('P')) & (part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'].str.startswith(' ')) & (part['P_PARTKEY'] >= 27)]

part[(part['SIZE'] <= 40) | (part['P_NAME'] == 'p') | (part['P_NAME'].str.startswith('d')) | (part['P_NAME'] != 'lem') | (part['P_PARTKEY'] <= 109)]

part[(part['SIZE'] <= 8) & (part['TYPE'] != 'L') & (part['TYPE'].str.startswith('L')) | (part['MFGR'] == 'Manufacturer#3') | (part['CONTAINER'] == 'JUMBO')]

part[(part['SIZE'] >= 31) | (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'] == 'Brand#23') | (part['BRAND'].isin(['Brand#54', 'Brand#11', 'Brand#24', 'Brand#35', 'Brand#43'])) | (part['RETAILPRICE'] >= 1010.9946101663894)]

part[(part['TYPE'].str.startswith('E')) & (part['TYPE'] == 'STA') | (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] != 922.7956642037652) & (part['SIZE'] <= 45)]

part[(part['TYPE'].str.startswith('M'))][['RETAILPRICE', 'P_PARTKEY']]

part[['BRAND', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']]

part[['BRAND', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[['BRAND', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[['BRAND', 'SIZE', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[['BRAND', 'TYPE', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[['MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME']]

part[['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']]

part[['MFGR']].groupby(by=['MFGR']).agg('count')

part[['MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[['MFGR']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['MFGR']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[['MFGR']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'BRAND', 'RETAILPRICE', 'P_NAME']]

part[['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE']]

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[['P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']]

part[['P_NAME']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[['P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']]

part[['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'MFGR', 'TYPE', 'P_NAME']]

part[['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']]

part[['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[['RETAILPRICE', 'MFGR', 'SIZE', 'TYPE', 'P_NAME']]

part[['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'CONTAINER']]

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']]

part[['SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER']]

part[['SIZE']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'P_NAME']]

part[['TYPE', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_NAME']]

part[['TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER']]

part[['TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND']]

part[['TYPE']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']).agg('count')

partsupp.groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] != 3)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] <= 951.6527055364844) & (part['RETAILPRICE'] > 1078.201365868558)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'E') & (part['P_NAME'] != 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] > 84)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 673)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 9339) & (partsupp['PS_SUPPKEY'] < 152)][['P_COMMENT']]

partsupp[(partsupp['AVAILQTY'] == 7024)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 9330) & (partsupp['PS_SUPPKEY'] == 5826)][['P_COMMENT']]

partsupp[(partsupp['AVAILQTY'] > 109)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 35)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 18) | (partsupp['AVAILQTY'] < 9189) | (partsupp['PS_SUPPKEY'] != 6044) | (partsupp['PS_SUPPKEY'] > 4227) | (partsupp['PS_SUPPKEY'] <= 5338)]

partsupp[(partsupp['PS_PARTKEY'] == 6) & (partsupp['AVAILQTY'] == 7702) | (partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_PARTKEY'] == 28) | (partsupp['AVAILQTY'] == 5379)]

partsupp[(partsupp['PS_SUPPKEY'] <= 1658) | (partsupp['AVAILQTY'] <= 9060)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] == 2730)][['P_COMMENT', 'PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'] != 'b') & (partsupp['SUPPLYCOST'] <= 169.2332841744612) | (partsupp['AVAILQTY'] == 4817) | (partsupp['P_COMMENT'] == 'd') | (partsupp['AVAILQTY'] >= 7147)]

partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('y'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 894.1468184260974)][['SUPPLYCOST', 'PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] > 398.328299054493) | (partsupp['PS_SUPPKEY'] >= 741)][['SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] > 50.385672891774725)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('count')

partsupp[['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'l')][['R_NAME']]

region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'A')][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g')].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'M')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'g')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'A')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 3)][['R_NAME']]

region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'h')][['R_NAME']]

region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] != 1)][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'AME')][['R_REGIONKEY']]

region[(region['R_NAME'] != 'A')].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] > 1)][['R_NAME']]

region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('g'))][['R_NAME']]

region[(region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'h')][['R_NAME']]

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT']]

region[(region['R_NAME'] != 'M')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] != 0)][['R_COMMENT']]

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 3)][['R_COMMENT']]

region[(region['R_NAME'] == 'AME')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'E') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY']]

region[(region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 3)][['R_COMMENT']]

region[(region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 3)].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] != 'M')][['R_NAME']]

region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 3)].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_PHONE']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS']).agg('count')

supplier.groupby(by=['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier.groupby(by=['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_COMMENT'].str.startswith('l'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 5170.493078274767) & (supplier['S_ADDRESS'].str.startswith('U'))][['S_ACCTBAL']]

supplier[(supplier['S_ACCTBAL'] <= 2778.5495815470913) | (supplier['S_NATIONKEY'] == 4)][['S_ADDRESS']]

supplier[(supplier['S_ACCTBAL'] <= 475.1989772946097) | (supplier['S_ACCTBAL'] > -779.2115173696518)][['S_SUPPKEY']]

supplier[(supplier['S_ACCTBAL'] == 756.8897645461111)][['S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'] == 'f')].groupby(by=['S_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('the'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_ADDRESS']]

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 15) | (supplier['S_ADDRESS'].str.startswith('z')) & (supplier['S_ADDRESS'] != 'j') | (supplier['S_NATIONKEY'] != 18) & (supplier['S_PHONE'].str.startswith('17-'))]

supplier[(supplier['S_NATIONKEY'] == 15) & (supplier['S_NATIONKEY'] == 8) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 1106.3964360813732) | (supplier['S_SUPPKEY'] >= 113)]

supplier[(supplier['S_NATIONKEY'] > 11) & (supplier['S_SUPPKEY'] == 125) & (supplier['S_PHONE'] != '26-') | (supplier['S_SUPPKEY'] >= 88) | (supplier['S_ADDRESS'] != 'w')]

supplier[(supplier['S_NATIONKEY'] >= 12) & (supplier['S_NATIONKEY'] >= 2)][['S_COMMENT']]

supplier[(supplier['S_PHONE'] != '1') | (supplier['S_SUPPKEY'] >= 8)][['S_NAME']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']]

supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']]

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT']]

supplier[['S_NAME']].groupby(by=['S_NAME']).agg('count')

supplier[['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

customer.groupby(by=['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_PHONE', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer.groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 5603.6042253804335)][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'w')][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'y') | (customer['C_CUSTKEY'] < 23) & (customer['C_ADDRESS'] != 'u')][['MKTSEGMENT']]

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'n') & (customer['C_NATIONKEY'] == 8)][['C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] == 13)][['C_NAME', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_NATIONKEY'] > 11) & (customer['C_COMMENT'].str.startswith('o'))][['C_ADDRESS', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] >= 1) | (customer['C_CUSTKEY'] != 16) & (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS']]

customer[(customer['C_PHONE'] != '2') | (customer['C_COMMENT'] == 'g')].groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_CUSTKEY', 'C_PHONE', 'C_NAME']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) & (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'] == 't') & (customer['C_ADDRESS'] == ',') | (customer['C_CUSTKEY'] > 2) & (customer['C_NATIONKEY'] > 22)]

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_NATIONKEY'] == 0) | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_CUSTKEY']]

customer[['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']]

customer[['C_ACCTBAL', 'C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE']]

customer[['C_NAME', 'C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']]

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']]

lineitem.groupby(by=['COMMITDATE', 'SHIPMODE', 'LINENUMBER', 'L_PARTKEY', 'L_COMMENT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['DISCOUNT', 'EXTENDEDPRICE', 'LINESTATUS', 'L_COMMENT', 'SHIPMODE']).agg('count')

lineitem.groupby(by=['DISCOUNT', 'LINESTATUS', 'RETURNFLAG', 'L_SUPPKEY', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'COMMITDATE', 'LINENUMBER', 'L_SUPPKEY', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY']).agg('count')

lineitem.groupby(by=['LINESTATUS', 'RETURNFLAG', 'COMMITDATE', 'SHIPMODE', 'EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

lineitem.merge(orders[['CLERK', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['PS_SUPPKEY'] != 5828) | (partsupp['SUPPLYCOST'] == 373.5644161277234)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RECEIPTDATE'] < '1998-11-06')][['RETURNFLAG', 'DISCOUNT']]

lineitem[(lineitem['LINENUMBER'] > 4)][['QUANTITY', 'SHIPDATE', 'DISCOUNT']]

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['EXTENDEDPRICE'] != 36618.315552768974)].groupby(by=['COMMITDATE']).agg('count')

lineitem[['COMMITDATE', 'DISCOUNT']].groupby(by=['COMMITDATE']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'LINESTATUS']]

lineitem[['COMMITDATE', 'RECEIPTDATE', 'RETURNFLAG', 'LINENUMBER', 'LINESTATUS', 'DISCOUNT']]

lineitem[['DISCOUNT', 'L_COMMENT']].groupby(by=['DISCOUNT']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'TAX', 'L_COMMENT', 'LINENUMBER', 'SHIPDATE']]

lineitem[['L_COMMENT', 'RETURNFLAG', 'LINESTATUS', 'TAX', 'DISCOUNT', 'SHIPMODE']]

lineitem[['QUANTITY', 'LINENUMBER']].groupby(by=['QUANTITY']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[['RETURNFLAG', 'COMMITDATE', 'RECEIPTDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'DISCOUNT']]

lineitem[['RETURNFLAG', 'RECEIPTDATE']].groupby(by=['RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'TAX', 'LINENUMBER', 'SHIPINSTRUCT', 'LINESTATUS', 'RECEIPTDATE']]

lineitem[['SHIPINSTRUCT', 'L_COMMENT']].groupby(by=['L_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 3) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 2) & (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'e') & (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] != 'K')][['N_NATIONKEY']]

nation[(nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] != 't') | (nation['N_COMMENT'] == 'i')][['N_REGIONKEY']]

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'].str.startswith('a'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] == 2)].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'B') | (nation['N_COMMENT'] != 'y')][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NAME'] == 'P') & (nation['N_COMMENT'].str.startswith('p'))][['N_NAME']]

nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'l')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] != 7) | (nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] == 'p')][['N_NAME']]

nation[(nation['N_NATIONKEY'] < 8) | (nation['N_REGIONKEY'] > 3)].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'] != 'r') | (nation['N_REGIONKEY'] <= 3)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 0) | (nation['N_NATIONKEY'] < 9) | (nation['N_COMMENT'].str.startswith('v'))][['N_NAME']]

nation[(nation['N_NATIONKEY'] == 11) | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'].str.startswith('s'))][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 22) & (nation['N_COMMENT'] != 'o') & (nation['N_NAME'] == 'K')][['N_REGIONKEY']]

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] == 17)][['N_NAME']]

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] >= 1)][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] > 3)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] != 21)].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('count')

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['CLERK', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_COMMENT']).agg('sum', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'O_COMMENT']).agg('mean', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 148283) & (orders['O_CUSTKEY'] > 80710)][['O_ORDERKEY']]

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] <= 146978.00427380865) & (orders['O_ORDERKEY'] >= 730) & (orders['O_COMMENT'].str.startswith('uri')) & (orders['ORDERDATE'] <= '1992-01-13')]

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM', '1-URGENT']))][['SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']]

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] == 114357) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] < 225403.93007095)]

orders[(orders['O_COMMENT'].str.startswith('n')) & (orders['SHIPPRIORITY'] > 0)][['O_COMMENT', 'CLERK']]

orders[(orders['O_ORDERKEY'] < 85) & (orders['CLERK'] == 'C')].groupby(by=['O_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 631)][['ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT']]

orders[(orders['TOTALPRICE'] > 345398.0502877666)][['CLERK', 'O_ORDERKEY', 'ORDERDATE']]

orders[['CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK']).agg('sum', numeric_only=True)

orders[['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']]

orders[['CLERK', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('count')

orders[['ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK']].groupby(by=['CLERK']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['ORDERSTATUS', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS']).agg('count')

orders[['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['O_COMMENT', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']]

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']]

part.groupby(by=['BRAND', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'P_NAME']).agg('count')

part.groupby(by=['BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'TYPE', 'P_NAME', 'CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

part.groupby(by=['CONTAINER', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'TYPE', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'TYPE', 'P_NAME', 'SIZE', 'P_PARTKEY']).agg('count')

part.groupby(by=['MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND']).agg('count')

part.groupby(by=['MFGR', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'TYPE', 'SIZE']).agg('count')

part.groupby(by=['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'MFGR']).agg('count')

part.groupby(by=['P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE', 'MFGR']).agg('count')

part.groupby(by=['P_NAME', 'PT_COMMENT', 'SIZE', 'MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'MFGR', 'P_NAME', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_PARTKEY', 'MFGR', 'BRAND', 'CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'P_NAME', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'MFGR', 'PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'TYPE', 'BRAND']).agg('count')

part.groupby(by=['P_PARTKEY', 'SIZE', 'MFGR', 'TYPE', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'BRAND', 'CONTAINER']).agg('count')

part.groupby(by=['P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'SIZE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'PT_COMMENT', 'SIZE', 'MFGR', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'P_NAME', 'TYPE', 'CONTAINER', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'TYPE']).agg('count')

part.groupby(by=['TYPE', 'BRAND', 'SIZE', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'SIZE', 'BRAND', 'P_NAME', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#31', 'Brand#23', 'Brand#21', 'Brand#13', 'Brand#25']))][['CONTAINER', 'MFGR', 'RETAILPRICE']]

part[(part['BRAND'].isin(['Brand#35', 'Brand#42'])) | (part['BRAND'] != 'Brand#35') | (part['P_NAME'] == 's')][['MFGR']]

part[(part['CONTAINER'] != 'SM') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] != 57) & (part['CONTAINER'] != 'WRAP') & (part['MFGR'] != 'Manufacturer#3') | (part['P_PARTKEY'] > 76)]

part[(part['CONTAINER'] != 'WRAP') | (part['BRAND'] != 'Brand#23') | (part['PT_COMMENT'] == 'q') | (part['TYPE'].str.startswith('P')) | (part['CONTAINER'] == 'JUMBO') & (part['RETAILPRICE'] > 925.7666561292804)]

part[(part['CONTAINER'] != 'WRAP')][['TYPE', 'SIZE', 'MFGR']]

part[(part['CONTAINER'] == 'LG') | (part['SIZE'] == 34) | (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] == 'g') | (part['PT_COMMENT'].str.startswith('a')) | (part['P_NAME'].str.startswith('g'))]

part[(part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] == 39)].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] == 'M') & (part['TYPE'].str.startswith('S')) & (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] > 79) | (part['MFGR'] == 'Manufacturer#3')]

part[(part['CONTAINER'].str.startswith('WRAP'))][['MFGR', 'BRAND', 'RETAILPRICE']]

part[(part['MFGR'] != 'Manufacturer#1')].groupby(by=['P_NAME', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['RETAILPRICE'] > 1077.4982089341001) & (part['P_PARTKEY'] <= 178) & (part['TYPE'].str.startswith('P')) | (part['BRAND'] != 'Brand#33') | (part['SIZE'] > 38)]

part[(part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'] == 'MED')].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['PT_COMMENT'] == 'r') & (part['P_NAME'].str.startswith('s')) | (part['BRAND'] == 'Brand#21') | (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'].str.startswith('l'))]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) & (part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('n')) & (part['P_NAME'] == 'bis') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1'])) & (part['CONTAINER'] == 'LG')]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) & (part['CONTAINER'] == 'WRAP') & (part['P_NAME'] != 'v') & (part['RETAILPRICE'] >= 1073.9735707071418) & (part['BRAND'] != 'Brand#53') & (part['BRAND'] == 'Brand#55')]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3'])) & (part['SIZE'] <= 2)].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) | (part['TYPE'].str.startswith('E')) & (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] < 157) & (part['RETAILPRICE'] > 1028.5442372709547) | (part['MFGR'] == 'Manufacturer#4')]

part[(part['PT_COMMENT'] != 'i') | (part['TYPE'].str.startswith('E')) | (part['SIZE'] <= 21) & (part['CONTAINER'] != 'JUMBO') & (part['BRAND'] == 'Brand#25') & (part['MFGR'] == 'Manufacturer#2')]

part[(part['PT_COMMENT'] != 'l') & (part['SIZE'] > 12)][['SIZE', 'P_NAME']]

part[(part['PT_COMMENT'] == 's') & (part['P_NAME'] != 'd')][['MFGR', 'CONTAINER']]

part[(part['PT_COMMENT'].str.startswith('w'))].groupby(by=['SIZE', 'P_PARTKEY']).agg('count')

part[(part['P_NAME'] != 'bis') | (part['SIZE'] != 13) & (part['P_PARTKEY'] != 87) & (part['TYPE'] == 'M') & (part['P_NAME'] == 'v') & (part['MFGR'] != 'Manufacturer#1')]

part[(part['P_NAME'] != 'f') | (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] == 27) | (part['SIZE'] < 27) | (part['P_NAME'].str.startswith('t')) & (part['CONTAINER'].str.startswith('SM'))]

part[(part['P_NAME'] != 'o') & (part['PT_COMMENT'] != 't') | (part['P_PARTKEY'] >= 24) | (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] < 19) & (part['SIZE'] < 6)]

part[(part['P_NAME'] == 'v') & (part['BRAND'] != 'Brand#35') & (part['SIZE'] <= 6) | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] != 79) | (part['RETAILPRICE'] < 920.1929587280706)]

part[(part['P_PARTKEY'] != 53) | (part['RETAILPRICE'] != 921.6909404508176) & (part['BRAND'] == 'Brand#45')][['SIZE']]

part[(part['P_PARTKEY'] == 127) | (part['BRAND'].isin(['Brand#21', 'Brand#11', 'Brand#51', 'Brand#31', 'Brand#35', 'Brand#15']))].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 1021.4856078681718) & (part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'].str.startswith('n')) & (part['PT_COMMENT'].str.startswith('x')) & (part['P_NAME'].str.startswith('r')) | (part['SIZE'] == 46)]

part[(part['SIZE'] != 12) | (part['SIZE'] > 45) & (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'SMA') | (part['BRAND'] == 'Brand#43') & (part['BRAND'] == 'Brand#25')]

part[(part['SIZE'] != 43) & (part['PT_COMMENT'] == 'p') | (part['SIZE'] > 23)][['P_PARTKEY']]

part[(part['SIZE'] == 34) | (part['BRAND'].isin(['Brand#55', 'Brand#25', 'Brand#23', 'Brand#42'])) & (part['SIZE'] == 20) | (part['PT_COMMENT'] == 'a') & (part['SIZE'] == 34) & (part['CONTAINER'].str.startswith('SM'))]

part[(part['SIZE'] >= 19) & (part['P_PARTKEY'] >= 143) & (part['P_PARTKEY'] > 176) & (part['P_PARTKEY'] != 39) | (part['P_NAME'].str.startswith('g')) | (part['RETAILPRICE'] >= 1040.85318779883)]

part[(part['SIZE'] >= 9) | (part['PT_COMMENT'] == ' ') & (part['PT_COMMENT'] != 'c') & (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] == 'STA') | (part['P_PARTKEY'] <= 117)]

part[(part['TYPE'] == 'L') & (part['TYPE'] == 'P') & (part['RETAILPRICE'] >= 1073.7675576449265) | (part['SIZE'] != 29) & (part['PT_COMMENT'] == 'c') & (part['P_NAME'] == 'blu')]

part[(part['TYPE'] == 'P') & (part['RETAILPRICE'] >= 959.6089357848739) | (part['RETAILPRICE'] != 1079.1879545035015) | (part['PT_COMMENT'].str.startswith('d')) & (part['BRAND'] != 'Brand#44') & (part['P_NAME'] != 'p')]

part[(part['TYPE'] == 'P') | (part['PT_COMMENT'] != '!') & (part['P_NAME'] != 'o')][['CONTAINER']]

part[(part['TYPE'].str.startswith('SMA'))].groupby(by=['RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part[['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['BRAND', 'MFGR']].groupby(by=['MFGR']).agg('count')

part[['BRAND', 'TYPE']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[['MFGR', 'BRAND', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']]

part[['MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'BRAND', 'CONTAINER']]

part[['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND', 'PT_COMMENT']]

part[['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']]

part[['PT_COMMENT', 'MFGR', 'SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME']]

part[['PT_COMMENT', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'P_NAME']]

part[['PT_COMMENT', 'MFGR']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'TYPE']]

part[['PT_COMMENT', 'SIZE']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'TYPE']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'BRAND', 'P_PARTKEY']]

part[['P_NAME', 'TYPE']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME']]

part[['RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[['SIZE', 'P_NAME', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']]

part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'PT_COMMENT']]

part[['TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']]

part[['TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']]

part[['TYPE', 'CONTAINER', 'SIZE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[['TYPE', 'P_PARTKEY', 'SIZE', 'BRAND', 'CONTAINER', 'P_NAME']]

part[['TYPE', 'SIZE', 'BRAND', 'CONTAINER', 'P_NAME', 'MFGR']]

part[['TYPE', 'SIZE', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']]

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == 'r') & (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] != 'a')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'al ') | (supplier['S_COMMENT'] == 'q') | (supplier['S_COMMENT'] == 'c')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < -164.23842777458594) | (supplier['S_NATIONKEY'] >= 1)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 7913) | (partsupp['PS_SUPPKEY'] < 4704)][['P_COMMENT', 'PS_SUPPKEY']]

partsupp[(partsupp['AVAILQTY'] == 5178) | (partsupp['SUPPLYCOST'] >= 675.1324627046454)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] >= 31) & (partsupp['P_COMMENT'].str.startswith('.')) | (partsupp['SUPPLYCOST'] <= 653.9834039731395)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] != 1689) & (partsupp['SUPPLYCOST'] != 694.4082780502921) & (partsupp['PS_PARTKEY'] < 42)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] != 61) | (partsupp['PS_PARTKEY'] != 46)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] < 4104) | (partsupp['AVAILQTY'] != 1706) & (partsupp['PS_SUPPKEY'] >= 3030)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] > 3485) & (partsupp['PS_SUPPKEY'] != 3861)].groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4715) & (partsupp['PS_PARTKEY'] <= 42)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'o') | (partsupp['PS_SUPPKEY'] != 2916)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'u') & (partsupp['PS_SUPPKEY'] <= 4982) | (partsupp['PS_PARTKEY'] != 12)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] >= 854.787401237776) & (partsupp['PS_SUPPKEY'] >= 214)][['P_COMMENT', 'AVAILQTY']]

partsupp[['AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 3)].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'M')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'u')][['R_NAME']]

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'g')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 3)].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'h')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'u')][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 3)].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] <= 0)].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] < 1) & (region['R_NAME'] != 'AME')][['R_NAME']]

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] < 3)][['R_COMMENT']]

region[(region['R_NAME'] == 'A')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 1)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'g')].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'ASI')].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] <= 3)].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 1)][['R_NAME']]

region[(region['R_REGIONKEY'] != 3)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'].str.startswith('E'))].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'h')].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'l')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'ASI')][['R_COMMENT']]

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] < 3)].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AME')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] == 3)].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 3)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] != 1)][['R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] != 2)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']).agg('min', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 892.0658972822259)][['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']]

supplier[(supplier['S_ACCTBAL'] == 8798.098116917072) | (supplier['S_COMMENT'] != 'd') & (supplier['S_ADDRESS'].str.startswith('a')) & (supplier['S_COMMENT'] == 'al ') & (supplier['S_COMMENT'].str.startswith('es ')) & (supplier['S_ADDRESS'] != 'D')]

supplier[(supplier['S_ADDRESS'].str.startswith('3')) & (supplier['S_SUPPKEY'] == 199) | (supplier['S_SUPPKEY'] >= 6) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_COMMENT'] == 'r') & (supplier['S_SUPPKEY'] == 73)]

supplier[(supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_SUPPKEY'] == 163) & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE']]

supplier[(supplier['S_COMMENT'] != 'i') | (supplier['S_ADDRESS'].str.startswith('R'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'w') & (supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_NATIONKEY'] == 8) & (supplier['S_COMMENT'] != 'bli') | (supplier['S_PHONE'] != '2') | (supplier['S_ACCTBAL'] > 2104.4554654219637)]

supplier[(supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'] == '2') | (supplier['S_NATIONKEY'] <= 1) | (supplier['S_COMMENT'] == 'e') | (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_NAME'] == 'S')][['S_NAME', 'S_PHONE']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'y')][['S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_PHONE'] == '17-')][['S_NATIONKEY']]

supplier[(supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] < 18) | (supplier['S_ACCTBAL'] < 2835.887044821221)].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2'))][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] <= 171) & (supplier['S_ACCTBAL'] <= 4588.392844672806) | (supplier['S_COMMENT'] == 's') | (supplier['S_NATIONKEY'] < 21) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S')]

supplier[(supplier['S_SUPPKEY'] <= 49)].groupby(by=['S_NAME', 'S_SUPPKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 82)][['S_COMMENT', 'S_ACCTBAL', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_ADDRESS', 'S_NAME']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[['S_NAME', 'S_PHONE']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_NATIONKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'l')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'B')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 16)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'].str.startswith('I')) | (nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'] != 'u')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 618.4648591048758) & (customer['C_COMMENT'].str.startswith('e'))][['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_ADDRESS'].str.startswith('f')) | (customer['C_ACCTBAL'] <= 8946.989432505306) | (customer['C_PHONE'].str.startswith('25-'))][['C_PHONE', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'i') | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] > 4772.115639160843)][['C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'n') & (customer['C_ADDRESS'].str.startswith('q'))][['C_CUSTKEY', 'C_COMMENT', 'C_NAME']]

customer[(customer['C_CUSTKEY'] <= 60) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_PHONE'] == '13-') & (customer['C_NATIONKEY'] > 6) | (customer['C_ACCTBAL'] <= 7334.418137034434) & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] < 8375.32454263413)]

customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] == 6302.803240797709) | (customer['C_ADDRESS'].str.startswith('X')) & (customer['C_PHONE'] != '13-') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'].str.startswith('25-'))]

customer[(customer['C_PHONE'] == '27-') | (customer['C_NATIONKEY'] == 18) | (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '3') | (customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('13-'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE')].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_PHONE']).agg('count')

customer[['C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']]

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL']].groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('count')

customer[['C_PHONE', 'C_CUSTKEY']].groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_PHONE', 'MKTSEGMENT']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'MKTSEGMENT']).agg('count')

customer[['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('count')

lineitem.merge(orders[(orders['SHIPPRIORITY'] != 0)][['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.09585402687863293) | (lineitem['L_ORDERKEY'] == 47)][['RECEIPTDATE', 'SHIPMODE', 'LINESTATUS']]

lineitem[(lineitem['LINENUMBER'] < 6) & (lineitem['L_COMMENT'] != 'n') | (lineitem['TAX'] != 0.028844244444066493) | (lineitem['L_SUPPKEY'] > 2054) & (lineitem['QUANTITY'] < 36) & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINESTATUS'] == 'O')]

lineitem[(lineitem['TAX'] <= 0.025229388225501203)].groupby(by=['LINESTATUS', 'RETURNFLAG', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'LINENUMBER', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT', 'TAX']]

lineitem[['DISCOUNT', 'LINESTATUS']].groupby(by=['DISCOUNT', 'LINESTATUS']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'TAX', 'SHIPINSTRUCT']].groupby(by=['TAX']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPDATE', 'COMMITDATE', 'QUANTITY', 'RETURNFLAG', 'RECEIPTDATE', 'L_COMMENT']]

lineitem[['LINESTATUS', 'SHIPINSTRUCT', 'TAX']].groupby(by=['SHIPINSTRUCT']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'DISCOUNT', 'SHIPINSTRUCT']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'RECEIPTDATE', 'EXTENDEDPRICE']].groupby(by=['L_ORDERKEY']).agg('count')

lineitem[['SHIPDATE', 'L_SUPPKEY', 'LINESTATUS', 'L_ORDERKEY', 'L_PARTKEY', 'RETURNFLAG', 'RECEIPTDATE']]

lineitem[['SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem[['TAX', 'COMMITDATE', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'QUANTITY']]

lineitem[['TAX', 'LINENUMBER', 'L_PARTKEY', 'SHIPMODE', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG']]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'a') | (nation['N_NATIONKEY'] > 19) | (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] == 0)][['N_NAME']]

nation[(nation['N_COMMENT'] != 's') & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] != 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 't') & (nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == ' ') & (nation['N_NAME'].str.startswith('V')) | (nation['N_NATIONKEY'] <= 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't')].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] != 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'F') | (nation['N_NAME'].str.startswith('E'))].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'].str.startswith('v')) & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NAME'] != 'U') & (nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E') & (nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] <= 2)][['N_COMMENT']]

nation[(nation['N_NAME'] == 'V') | (nation['N_REGIONKEY'] <= 1)].groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] > 17)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] != 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] != 'J') & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 14) | (nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'v')].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_NATIONKEY'] > 10)].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 17) & (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] < 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 7) & (nation['N_NAME'] != 'P') | (nation['N_COMMENT'].str.startswith('n'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] > 21)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 10) | (nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] >= 3)][['N_NAME']]

nation[(nation['N_NATIONKEY'] > 22) | (nation['N_NATIONKEY'] < 11) & (nation['N_COMMENT'] == 's')][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 9) | (nation['N_COMMENT'] != 'p') | (nation['N_NAME'] != 'F') & (nation['N_COMMENT'] != 'u')][['N_NAME']]

nation[(nation['N_REGIONKEY'] < 0)].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NAME']]

nation[(nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] != 3) & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 14)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] != 1)].groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith(',')) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')]

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 89101) & (orders['O_COMMENT'] == 'o')][['ORDERSTATUS']]

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] == 'y') & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] != 5215.852216623047) & (orders['O_COMMENT'] != 'egu')]

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] == 346) | (orders['ORDERDATE'] == '1992-01-13')][['TOTALPRICE']]

orders[(orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] != 0)][['ORDERSTATUS']]

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 60646) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH'])) & (orders['SHIPPRIORITY'] != 0)]

orders[(orders['O_COMMENT'] != 'o') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] != 40583) | (orders['TOTALPRICE'] < 163344.95169720796)][['CLERK']]

orders[(orders['O_COMMENT'] == 'q')][['ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY']]

orders[(orders['O_COMMENT'].str.startswith(',')) & (orders['TOTALPRICE'] == 173045.38628664924)][['ORDERPRIORITY', 'ORDERSTATUS', 'O_COMMENT']]

orders[(orders['SHIPPRIORITY'] != 0) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != 'y') & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] > 77019) & (orders['TOTALPRICE'] < 348032.14135541883)]

orders[(orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'] != 'P')][['O_ORDERKEY']]

orders[(orders['SHIPPRIORITY'] < 0)].groupby(by=['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'].str.startswith('.')) & (orders['O_CUSTKEY'] >= 20510) | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] < 516) | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] <= 147583)]

orders[(orders['TOTALPRICE'] <= 93339.10590749343) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 24583) | (orders['ORDERDATE'] < '1992-01-13')]

orders[(orders['TOTALPRICE'] == 229160.75235018146)].groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERDATE']).agg('count')

orders[['CLERK', 'ORDERDATE']].groupby(by=['ORDERDATE', 'CLERK']).agg('mean', numeric_only=True)

orders[['CLERK', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[['CLERK', 'O_COMMENT']].groupby(by=['O_COMMENT', 'CLERK']).agg('count')

orders[['CLERK', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'CLERK']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']]

orders[['ORDERDATE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('count')

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']]

orders[['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']]

orders[['O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']]

orders[['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']]

orders[['O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('count')

orders[['SHIPPRIORITY', 'CLERK']].groupby(by=['CLERK', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'ORDERPRIORITY']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'ORDERDATE']].groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('count')

orders[['TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY']]

orders[['TOTALPRICE', 'O_COMMENT']].groupby(by=['O_COMMENT', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY']].groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('count')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] == 'Brand#33')].groupby(by=['BRAND', 'MFGR', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#44') | (part['RETAILPRICE'] < 925.259622819471)].groupby(by=['PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') & (part['TYPE'] != 'S') | (part['P_PARTKEY'] <= 169)].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'] == 'bis') | (part['BRAND'] == 'Brand#11')][['CONTAINER']]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['RETAILPRICE'] <= 1071.886227465828) & (part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('l')) | (part['P_NAME'] == 'lin') & (part['BRAND'] == 'Brand#34') & (part['SIZE'] < 10)]

part[(part['MFGR'] != 'Manufacturer#4')].groupby(by=['CONTAINER', 'MFGR', 'PT_COMMENT']).agg('count')

part[(part['MFGR'] != 'Manufacturer#5')].groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) | (part['P_PARTKEY'] <= 94)].groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1'])) & (part['CONTAINER'] == 'MED') | (part['P_PARTKEY'] == 167) | (part['P_PARTKEY'] > 101) | (part['P_PARTKEY'] >= 194) | (part['SIZE'] != 48) & (part['BRAND'] != 'Brand#53')]

part[(part['PT_COMMENT'] != 'i') & (part['P_PARTKEY'] <= 151)][['CONTAINER', 'MFGR', 'RETAILPRICE']]

part[(part['PT_COMMENT'] != 'i')].groupby(by=['TYPE', 'SIZE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'w') | (part['SIZE'] < 23) | (part['BRAND'] == 'Brand#22') | (part['PT_COMMENT'] == 'q') & (part['RETAILPRICE'] > 1085.9684252772) & (part['MFGR'] != 'Manufacturer#4') & (part['BRAND'].isin(['Brand#31']))]

part[(part['PT_COMMENT'] == 'u') & (part['P_NAME'] != 'm') & (part['PT_COMMENT'] != 'a') & (part['P_NAME'] != 'p') & (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] != 1094.1262691077695) | (part['P_NAME'] != 's')]

part[(part['PT_COMMENT'].str.startswith('e')) & (part['PT_COMMENT'].str.startswith('c')) & (part['P_NAME'] == 'blu') & (part['SIZE'] != 24) | (part['BRAND'].isin(['Brand#52', 'Brand#31', 'Brand#53', 'Brand#33', 'Brand#42', 'Brand#23', 'Brand#35', 'Brand#13'])) | (part['RETAILPRICE'] == 916.257704808665) & (part['PT_COMMENT'] == 'ly ')]

part[(part['PT_COMMENT'].str.startswith('i')) | (part['CONTAINER'] == 'MED') & (part['BRAND'] != 'Brand#23') & (part['PT_COMMENT'] != 'i') | (part['CONTAINER'] == 'MED') | (part['RETAILPRICE'] >= 993.4974777670972) & (part['P_NAME'] != 'f')]

part[(part['P_NAME'] != 'k') | (part['MFGR'] != 'Manufacturer#1') & (part['RETAILPRICE'] == 968.7870983704763) | (part['TYPE'] != 'S')][['P_NAME']]

part[(part['P_NAME'] != 's') | (part['TYPE'].str.startswith('S')) & (part['SIZE'] <= 7) | (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'].isin(['Brand#44', 'Brand#31', 'Brand#24', 'Brand#55', 'Brand#32', 'Brand#54', 'Brand#23', 'Brand#33', 'Brand#53', 'Brand#14', 'Brand#35', 'Brand#45', 'Brand#51'])) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] == 'Brand#23')]

part[(part['P_NAME'] == 'm')][['TYPE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('blu')) & (part['P_PARTKEY'] >= 83) & (part['SIZE'] > 19)].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('r')) & (part['P_PARTKEY'] <= 186) | (part['SIZE'] < 16) & (part['SIZE'] == 31) & (part['RETAILPRICE'] == 959.8994091707718) & (part['P_PARTKEY'] < 74) & (part['P_NAME'] == 's')]

part[(part['P_PARTKEY'] <= 90) | (part['PT_COMMENT'].str.startswith('the')) & (part['P_NAME'].str.startswith('blu')) | (part['SIZE'] == 34) | (part['P_NAME'] != 'c') & (part['SIZE'] == 11) | (part['P_PARTKEY'] < 198)]

part[(part['RETAILPRICE'] != 972.7212379066107) | (part['SIZE'] == 25) | (part['P_PARTKEY'] == 17) | (part['TYPE'] == 'M') & (part['SIZE'] != 26) & (part['SIZE'] != 5) | (part['PT_COMMENT'] == 'n')]

part[(part['RETAILPRICE'] < 1045.8344581222743) & (part['CONTAINER'] == 'WRAP') & (part['TYPE'].str.startswith('SMA')) & (part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] >= 93) | (part['SIZE'] <= 30) & (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['SIZE'] < 33) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['PT_COMMENT'] != '!') & (part['SIZE'] <= 43) & (part['PT_COMMENT'].str.startswith('a')) & (part['BRAND'] == 'Brand#23') & (part['P_PARTKEY'] != 104)]

part[(part['SIZE'] <= 44) | (part['SIZE'] < 14) | (part['P_NAME'] != 'a')].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['SIZE'] == 34) | (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] == 'Brand#33') | (part['SIZE'] > 13) & (part['SIZE'] != 13) & (part['BRAND'] == 'Brand#44') | (part['P_NAME'].str.startswith('lin'))]

part[(part['SIZE'] > 24) | (part['SIZE'] >= 20) | (part['P_PARTKEY'] == 121) | (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'].str.startswith('!')) | (part['BRAND'] == 'Brand#51') & (part['SIZE'] != 7)]

part[(part['SIZE'] > 5) | (part['CONTAINER'] != 'WRAP')][['RETAILPRICE', 'SIZE', 'PT_COMMENT']]

part[(part['SIZE'] >= 21) & (part['P_NAME'].str.startswith('lin'))].groupby(by=['P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'E') | (part['RETAILPRICE'] > 1071.477994752819) & (part['SIZE'] <= 21)].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'S') & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] == 'f') & (part['SIZE'] <= 33) | (part['PT_COMMENT'].str.startswith('x')) | (part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] > 61)]

part[(part['TYPE'] == 'P') & (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] <= 959.5918970332931) | (part['TYPE'].str.startswith('E')) & (part['P_PARTKEY'] >= 123) | (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] <= 1024.1317858384398)]

part[(part['TYPE'].str.startswith('P'))].groupby(by=['SIZE', 'RETAILPRICE', 'TYPE']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] != 1087.6485160834036) & (part['BRAND'] != 'Brand#55')].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME']]

part[['BRAND', 'MFGR']].groupby(by=['BRAND', 'MFGR']).agg('sum', numeric_only=True)

part[['BRAND', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

part[['BRAND', 'P_NAME', 'SIZE']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[['BRAND', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']]

part[['CONTAINER', 'BRAND']].groupby(by=['CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'MFGR']]

part[['CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']]

part[['CONTAINER', 'RETAILPRICE']].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['MFGR', 'BRAND', 'SIZE', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']]

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[['MFGR', 'TYPE', 'PT_COMMENT']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'MFGR', 'TYPE', 'SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME']]

part[['PT_COMMENT', 'P_NAME', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[['P_NAME', 'BRAND', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']]

part[['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'TYPE']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'MFGR']]

part[['P_NAME', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[['P_NAME', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']]

part[['P_PARTKEY', 'CONTAINER']].groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'MFGR']].groupby(by=['P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME', 'MFGR']]

part[['P_PARTKEY', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'BRAND']].groupby(by=['BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE', 'P_NAME']]

part[['RETAILPRICE', 'MFGR', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('count')

part[['RETAILPRICE', 'MFGR', 'SIZE', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']]

part[['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'P_NAME']]

part[['RETAILPRICE', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_NAME']]

part[['SIZE', 'MFGR', 'PT_COMMENT']].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[['SIZE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']]

part[['SIZE', 'P_PARTKEY', 'MFGR']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']]

part[['TYPE', 'P_NAME', 'SIZE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'MFGR']]

part[['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'MFGR']]

part[['TYPE', 'RETAILPRICE']].groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] != 90) | (part['SIZE'] >= 36) & (part['RETAILPRICE'] <= 1001.0469196413133) & (part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'SIZE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 's') & (supplier['S_ADDRESS'] != 'z') | (supplier['S_COMMENT'] != 'c') & (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] == 16) & (supplier['S_SUPPKEY'] == 138) & (supplier['S_ACCTBAL'] == 9305.453138260962)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('17-'))][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 2094)].merge(part[(part['BRAND'] == 'Brand#35')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 8370) | (partsupp['PS_PARTKEY'] != 20) & (partsupp['SUPPLYCOST'] <= 660.6648197964283)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 785) & (partsupp['AVAILQTY'] <= 1170) & (partsupp['AVAILQTY'] != 2174) | (partsupp['SUPPLYCOST'] != 910.1210813618933)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] != 11) & (partsupp['SUPPLYCOST'] <= 726.9547303488191)].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 2) & (partsupp['SUPPLYCOST'] < 109.09270698624844) | (partsupp['PS_SUPPKEY'] > 2803)][['SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] == 3) | (partsupp['PS_PARTKEY'] != 1) | (partsupp['P_COMMENT'] == ' th')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 10) & (partsupp['AVAILQTY'] > 4863) | (partsupp['SUPPLYCOST'] <= 876.7206956588285)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 33) & (partsupp['PS_SUPPKEY'] > 7387)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] != 1692)].merge(part[(part['BRAND'] != 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 2211) & (partsupp['PS_PARTKEY'] >= 38)].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 2407) & (partsupp['PS_SUPPKEY'] >= 6290)].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 2396) & (partsupp['SUPPLYCOST'] > 233.54862317271872)].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 7176) & (partsupp['AVAILQTY'] > 163) & (partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['AVAILQTY'] != 2421)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] > 1022) | (partsupp['AVAILQTY'] < 3387) & (partsupp['SUPPLYCOST'] <= 626.5984550112703)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 3973) & (partsupp['PS_PARTKEY'] > 26) | (partsupp['SUPPLYCOST'] == 424.23855849137425) | (partsupp['PS_PARTKEY'] <= 9)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] >= 2722) | (partsupp['PS_SUPPKEY'] >= 3362) | (partsupp['SUPPLYCOST'] <= 254.64055507124067)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'j') & (partsupp['SUPPLYCOST'] > 141.7453545464692) | (partsupp['SUPPLYCOST'] < 227.97180208591604)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 606.5525731877691) | (partsupp['AVAILQTY'] < 3782) & (partsupp['PS_SUPPKEY'] >= 880) | (partsupp['SUPPLYCOST'] != 838.0831681125557)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] <= 253.56189051745855) & (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['AVAILQTY'] != 4306) & (partsupp['PS_PARTKEY'] > 36)][['PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] <= 613.1222899090608) | (partsupp['PS_SUPPKEY'] > 5230) & (partsupp['PS_PARTKEY'] > 6)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 83.82980920071923) | (partsupp['AVAILQTY'] < 8130) & (partsupp['PS_PARTKEY'] >= 37) | (partsupp['P_COMMENT'] != 'j')][['PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] >= 601.0664809215015) | (partsupp['P_COMMENT'] == 'k') | (partsupp['PS_PARTKEY'] == 5)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('count')

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 1)].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 1)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'ASI')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 3)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'g')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'h')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'E')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'E') & (region['R_REGIONKEY'] < 1)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'u')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 0)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'AFR')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('E'))].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('M'))].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] == 'l')].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'E') | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'ASI')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] == 'AME')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] == 'E') | (region['R_NAME'] != 'M')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'g')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 1) | (region['R_NAME'] != 'ASI')].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] == 'E')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'u') & (region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] == 'E')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 0)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 1) | (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] < 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 1)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] != 'M')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] <= 1)].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'].str.startswith('E'))].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'G') & (nation['N_NAME'] != 'K')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 'c')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] == 9) & (nation['N_NAME'] == 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 7073.113476234008) & (supplier['S_NATIONKEY'] != 5) | (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] > 3) & (supplier['S_ADDRESS'].str.startswith('U')) | (supplier['S_ACCTBAL'] > 7155.388794004147) & (supplier['S_SUPPKEY'] >= 28)]

supplier[(supplier['S_ACCTBAL'] < 4348.327294117876) & (supplier['S_PHONE'] == '28-')][['S_PHONE', 'S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_ACCTBAL'] == 1017.753630481842) | (supplier['S_NATIONKEY'] > 20) & (supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_COMMENT'].str.startswith('e'))][['S_SUPPKEY']]

supplier[(supplier['S_ACCTBAL'] == 4995.378889951022) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] != 'S')].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_NATIONKEY'] > 4)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'].str.startswith('s')) | (supplier['S_ACCTBAL'] == 3193.634648687117) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 1317.4578051329388)][['S_ACCTBAL']]

supplier[(supplier['S_COMMENT'] == 'bli') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'al ')].groupby(by=['S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_SUPPKEY'] > 187) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'] != 'n') & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 179)]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != ',') | (supplier['S_NATIONKEY'] >= 22) | (supplier['S_PHONE'] != '26-') & (supplier['S_SUPPKEY'] >= 168) | (supplier['S_NATIONKEY'] != 14) & (supplier['S_SUPPKEY'] != 142)]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'd')][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 0) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S')][['S_NAME']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '1') | (supplier['S_ACCTBAL'] >= 1632.6945752008312) & (supplier['S_NATIONKEY'] == 4) | (supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'] != 'a') | (supplier['S_ACCTBAL'] >= 7129.423516508983)]

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] <= 10) | (supplier['S_COMMENT'] != ' ') & (supplier['S_SUPPKEY'] >= 42)][['S_COMMENT', 'S_NAME']]

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'] == '3')][['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 182)][['S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] == 132) & (supplier['S_COMMENT'] == 'x') & (supplier['S_COMMENT'] == 'es ') & (supplier['S_PHONE'].str.startswith('2'))][['S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] >= 47) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'b')][['S_COMMENT', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'i')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NATIONKEY'] <= 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_NAME'] == 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] < 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 798.6666790495588)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']]

customer[(customer['C_COMMENT'] != 'h')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == ',')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']]

customer[(customer['C_COMMENT'] == 'n') | (customer['C_ADDRESS'] != 'v') & (customer['C_ACCTBAL'] > 5985.169697001415) & (customer['C_ACCTBAL'] >= 8564.50173945745)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') | (customer['C_COMMENT'].str.startswith(' '))][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL']]

customer[(customer['C_CUSTKEY'] != 26)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 21)][['C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 83) & (customer['C_COMMENT'] != 'l') & (customer['C_ADDRESS'] != 'R')].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C')][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 10) & (customer['C_PHONE'] != '3') & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_ADDRESS'].str.startswith('d')) | (customer['C_PHONE'] != '18-')][['C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] > 2)].merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] > 20)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 22)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] != 3785.603509825901) | (customer['C_ACCTBAL'] >= 7798.498146115211) & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'z') & (customer['C_ADDRESS'] != 'f') & (customer['C_ADDRESS'].str.startswith('B'))]

customer[(customer['C_PHONE'].str.startswith('18-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE')][['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_PHONE']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']]

customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_PHONE', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']]

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] >= 186478.29186233602)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 7892) & (partsupp['PS_PARTKEY'] <= 46)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 6572) & (partsupp['AVAILQTY'] >= 7710)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINESTATUS'] != 'O') & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A']))].groupby(by=['TAX', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['QUANTITY'] > 31) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_SUPPKEY'] <= 4099) & (lineitem['EXTENDEDPRICE'] < 19338.651505522703)]

lineitem[(lineitem['DISCOUNT'] == 0.06701773843536818) | (lineitem['QUANTITY'] >= 22)][['RETURNFLAG', 'EXTENDEDPRICE', 'SHIPMODE', 'RECEIPTDATE']]

lineitem[(lineitem['EXTENDEDPRICE'] < 2952.6471528470884) | (lineitem['LINENUMBER'] > 6) | (lineitem['L_PARTKEY'] < 109331) & (lineitem['TAX'] >= 0.053808217230781594) | (lineitem['RETURNFLAG'] != 'A')][['QUANTITY']]

lineitem[(lineitem['LINENUMBER'] > 4) & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_COMMENT'] != 'y') & (lineitem['EXTENDEDPRICE'] == 20575.33450296815) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['QUANTITY'] < 39) | (lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['L_SUPPKEY'] > 3233)]

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_COMMENT'] == 'o') | (lineitem['L_PARTKEY'] >= 51827) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_ORDERKEY'] <= 60) | (lineitem['QUANTITY'] <= 48) | (lineitem['TAX'] != 0.053631209070004265) | (lineitem['L_SUPPKEY'] == 3630)]

lineitem[(lineitem['L_ORDERKEY'] < 42) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['LINESTATUS'] == 'O') | (lineitem['LINENUMBER'] != 5)][['SHIPINSTRUCT', 'RECEIPTDATE']]

lineitem[(lineitem['L_ORDERKEY'] < 81) & (lineitem['QUANTITY'] != 25) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPMODE'] != 'TRUCK')][['L_SUPPKEY', 'QUANTITY']]

lineitem[(lineitem['L_PARTKEY'] > 53599) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_PARTKEY'] < 17295) | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR']))][['COMMITDATE']]

lineitem[(lineitem['L_PARTKEY'] >= 155804) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['EXTENDEDPRICE'] < 68456.75098881686) | (lineitem['LINESTATUS'] != 'F') | (lineitem['TAX'] < 0.07239000642175114) | (lineitem['QUANTITY'] >= 47) & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON']))]

lineitem[(lineitem['QUANTITY'] >= 24) | (lineitem['L_ORDERKEY'] > 65) & (lineitem['TAX'] <= 0.03123512310018233) | (lineitem['LINENUMBER'] >= 6) & (lineitem['TAX'] < 0.07848944298160307) & (lineitem['L_ORDERKEY'] > 51) | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['LINENUMBER'] >= 5)]

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPMODE'] == 'MAIL')][['LINESTATUS', 'RETURNFLAG', 'QUANTITY', 'EXTENDEDPRICE']]

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['QUANTITY'] != 47) | (lineitem['COMMITDATE'] < '1992-05-15')][['SHIPMODE', 'LINESTATUS']]

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['EXTENDEDPRICE'] == 17986.853036586897) & (lineitem['QUANTITY'] != 40) & (lineitem['DISCOUNT'] > 0.019014780810491516) | (lineitem['L_PARTKEY'] < 192519) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')]

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['LINESTATUS'] != 'O') & (lineitem['L_COMMENT'] == 's') | (lineitem['LINENUMBER'] != 6)][['DISCOUNT']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] > 0.022897690470912214) & (lineitem['SHIPMODE'].isin(['AIR', 'FOB', 'MAIL', 'SHIP', 'TRUCK', 'RAIL'])) | (lineitem['EXTENDEDPRICE'] != 50394.76037665307) & (lineitem['L_PARTKEY'] <= 18592) | (lineitem['L_SUPPKEY'] > 4606) & (lineitem['L_COMMENT'] == 'p') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_ORDERKEY'] <= 80)]

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'LINENUMBER']].groupby(by=['EXTENDEDPRICE', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'L_SUPPKEY', 'L_COMMENT', 'QUANTITY', 'LINENUMBER', 'DISCOUNT', 'L_PARTKEY']]

lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT']].groupby(by=['LINESTATUS']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'COMMITDATE', 'RECEIPTDATE', 'TAX']].groupby(by=['RECEIPTDATE']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'COMMITDATE', 'TAX']]

lineitem[['LINESTATUS', 'L_COMMENT', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']]

lineitem[['L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'RETURNFLAG', 'RECEIPTDATE', 'SHIPMODE', 'L_ORDERKEY', 'DISCOUNT']]

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE', 'LINENUMBER', 'RETURNFLAG']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'SHIPINSTRUCT', 'TAX']].groupby(by=['TAX', 'RETURNFLAG']).agg('count')

lineitem[['SHIPDATE', 'RECEIPTDATE', 'LINESTATUS']].groupby(by=['LINESTATUS', 'RECEIPTDATE']).agg('count')

lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'L_COMMENT', 'TAX']].groupby(by=['SHIPMODE']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_NATIONKEY'] != 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 't') | (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'r')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') | (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] > 17)].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] <= 9)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] == 'v') | (nation['N_COMMENT'] == 'r') | (nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] <= 19)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'] != 't') & (nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] == 'p')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] > 5) & (nation['N_NATIONKEY'] == 21) & (nation['N_NATIONKEY'] >= 17)][['N_COMMENT', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('v'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] == 'R')].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'B')].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] < 15) | (nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'] != 'R') | (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'S')][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V')].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] > 2)].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'].str.startswith('p'))][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] <= 2) & (nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] == 10)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] <= 22) & (nation['N_NATIONKEY'] <= 19) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 5)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 16) | (nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] == 'K') & (nation['N_NATIONKEY'] >= 2)][['N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 17)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 23) | (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] < 10)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] >= 7)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] <= 15) | (nation['N_COMMENT'] != 'o')].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] != 't') & (nation['N_COMMENT'].str.startswith('p'))].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] < 18)].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] > 5) & (nation['N_NATIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] != 'u')].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] <= 17)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 2)][['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] > 13)][['N_NAME', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] >= 3)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 7760.332616551179) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_PHONE'] != '2') & (customer['C_COMMENT'] == 's') & (customer['C_CUSTKEY'] >= 75)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] > 13) | (customer['C_ADDRESS'] != '3') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'M') & (customer['C_ADDRESS'] != 'F')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_ORDERKEY'] <= 91) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] >= 60378)][['ORDERDATE']]

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '5-LOW')][['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] >= 775) | (orders['O_COMMENT'] != 'the') & (orders['TOTALPRICE'] <= 162804.60755218964) | (orders['ORDERSTATUS'] != 'P') & (orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] < 35999.40044601422) & (orders['O_CUSTKEY'] != 68219)]

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] <= 206)][['ORDERDATE', 'CLERK', 'ORDERPRIORITY']]

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] == '1992-01-13') & (orders['SHIPPRIORITY'] <= 0)][['CLERK']]

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] == 75747) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] == 0)][['TOTALPRICE', 'CLERK']]

orders[(orders['O_COMMENT'].str.startswith('q')) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] < 178) | (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 57073) | (orders['ORDERDATE'] != '1998-07-21')]

orders[(orders['O_ORDERKEY'] <= 56)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] < '1998-07-21')][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] < 291347.4683882742) & (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1992-01-13')]

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] < 151) & (orders['TOTALPRICE'] < 211804.7927598747) & (orders['ORDERSTATUS'] == 'O')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['CLERK', 'O_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY', 'ORDERDATE']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']]

orders[['O_COMMENT', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('count')

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']]

orders[['SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('count')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']]

part[(part['BRAND'] != 'Brand#15') | (part['RETAILPRICE'] <= 998.2875870718251) | (part['TYPE'].str.startswith('P')) | (part['TYPE'].str.startswith('S')) | (part['BRAND'] == 'Brand#23') & (part['RETAILPRICE'] == 1057.564481904279) & (part['PT_COMMENT'] != 'c') | (part['PT_COMMENT'] == 'e')]

part[(part['BRAND'] != 'Brand#21') & (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] != 96) & (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'] != 'm') | (part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] == 'b') & (part['P_NAME'] == 'cor')]

part[(part['BRAND'] != 'Brand#52') & (part['MFGR'] == 'Manufacturer#1') & (part['P_NAME'] != 'c') | (part['SIZE'] >= 20) & (part['P_NAME'] == 'o') & (part['BRAND'] == 'Brand#42') & (part['BRAND'] == 'Brand#53') & (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['BRAND'] != 'Brand#55') & (part['SIZE'] < 28) | (part['P_PARTKEY'] <= 79) & (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] < 1096.5665504359033) | (part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'].str.startswith('l')) & (part['CONTAINER'].str.startswith('SM'))]

part[(part['BRAND'] == 'Brand#35') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) | (part['TYPE'] == 'E')].groupby(by=['RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#35') | (part['P_PARTKEY'] < 8)][['P_NAME', 'BRAND', 'SIZE', 'RETAILPRICE']]

part[(part['BRAND'].isin(['Brand#54', 'Brand#15', 'Brand#35', 'Brand#45', 'Brand#51', 'Brand#52', 'Brand#23'])) & (part['RETAILPRICE'] < 1080.0070058422702) & (part['SIZE'] < 23) & (part['CONTAINER'] == 'MED') & (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] >= 17) & (part['CONTAINER'] == 'SM') & (part['TYPE'] != 'P')]

part[(part['CONTAINER'] != 'JUMBO') | (part['TYPE'] != 'E')].groupby(by=['MFGR', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'LG') | (part['TYPE'] != 'L') | (part['RETAILPRICE'] < 1029.0682025549556) | (part['SIZE'] != 41) & (part['P_NAME'] == 'c') & (part['BRAND'] == 'Brand#55') & (part['BRAND'] == 'Brand#55') | (part['TYPE'].str.startswith('L'))]

part[(part['CONTAINER'] == 'LG')].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] != 1089.362832846074) | (part['P_PARTKEY'] >= 73) | (part['P_PARTKEY'] < 150)].groupby(by=['BRAND']).agg('count')

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'] == 'JUMBO')][['BRAND', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']]

part[(part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'SIZE']).agg('count')

part[(part['MFGR'] != 'Manufacturer#5')].groupby(by=['P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] != 116) | (part['PT_COMMENT'] == 'i') & (part['P_PARTKEY'] != 111) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) | (part['PT_COMMENT'] == 'the') | (part['TYPE'] == 'L') & (part['P_NAME'] == 'h')]

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3'])) & (part['SIZE'] > 35)].groupby(by=['P_PARTKEY', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) | (part['RETAILPRICE'] > 947.977594293567) | (part['SIZE'] < 3) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1']))].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != ' fi') | (part['CONTAINER'] != 'MED') & (part['SIZE'] < 17)][['CONTAINER', 'P_NAME', 'MFGR']]

part[(part['PT_COMMENT'] != 'n')][['BRAND', 'TYPE', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME']]

part[(part['PT_COMMENT'] != 'ss ') & (part['P_PARTKEY'] >= 161) | (part['P_NAME'].str.startswith('n')) & (part['P_PARTKEY'] <= 168) | (part['TYPE'].str.startswith('M')) | (part['BRAND'] == 'Brand#54') & (part['CONTAINER'].str.startswith('WRAP')) & (part['PT_COMMENT'] != 'g')]

part[(part['PT_COMMENT'].str.startswith('i')) & (part['P_PARTKEY'] == 167)].groupby(by=['BRAND', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('p')) | (part['RETAILPRICE'] >= 1071.8484696571008) | (part['SIZE'] >= 15) & (part['P_PARTKEY'] >= 40)].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 'a') | (part['RETAILPRICE'] <= 1009.9712558554022) | (part['BRAND'].isin(['Brand#43']))].groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'h') & (part['P_PARTKEY'] <= 25) | (part['P_NAME'] == 'lem')][['MFGR', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('c')) & (part['BRAND'] != 'Brand#53') & (part['PT_COMMENT'].str.startswith('p')) | (part['P_NAME'] == 'k')].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['P_NAME'].str.startswith('k')) & (part['RETAILPRICE'] <= 1006.5962438041856) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) & (part['SIZE'] >= 1) & (part['SIZE'] != 48) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2'])) | (part['CONTAINER'] != 'WRAP') & (part['MFGR'] == 'Manufacturer#5')]

part[(part['P_NAME'].str.startswith('lin')) | (part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] == 165)][['CONTAINER', 'SIZE', 'TYPE']]

part[(part['P_PARTKEY'] < 114) | (part['BRAND'] != 'Brand#13') & (part['P_PARTKEY'] != 55) | (part['TYPE'].str.startswith('P')) | (part['SIZE'] >= 32) & (part['PT_COMMENT'].str.startswith(' fi')) & (part['P_PARTKEY'] <= 124) | (part['CONTAINER'] == 'SM')]

part[(part['P_PARTKEY'] <= 126)].groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] < 1013.7110186710031) | (part['PT_COMMENT'] == 'ss ')][['CONTAINER', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[(part['RETAILPRICE'] < 969.6063011201279) | (part['SIZE'] >= 21) | (part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] != 'M') | (part['RETAILPRICE'] != 912.1426956815814) | (part['BRAND'] != 'Brand#14') | (part['P_NAME'] == 'h') | (part['TYPE'] == 'M')]

part[(part['RETAILPRICE'] <= 1013.5144721396498) | (part['P_NAME'].str.startswith('r')) | (part['SIZE'] == 31)][['P_NAME', 'SIZE', 'CONTAINER']]

part[(part['RETAILPRICE'] >= 1068.5226135396815) & (part['P_PARTKEY'] >= 7) & (part['BRAND'] == 'Brand#34') | (part['TYPE'].str.startswith('E'))].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] >= 991.7258841066177) | (part['SIZE'] > 12) & (part['PT_COMMENT'] == 'h') | (part['P_PARTKEY'] >= 48) | (part['CONTAINER'].str.startswith('SM')) & (part['PT_COMMENT'] == 'n') | (part['CONTAINER'] != 'SM') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4']))]

part[(part['SIZE'] != 26) & (part['CONTAINER'] == 'SM')][['SIZE', 'MFGR', 'RETAILPRICE', 'TYPE']]

part[(part['SIZE'] == 13) | (part['CONTAINER'] == 'SM') | (part['MFGR'] != 'Manufacturer#3') | (part['TYPE'] != 'E') | (part['P_NAME'] != 'a') | (part['P_NAME'] != 'lin') & (part['TYPE'].str.startswith('P')) & (part['P_NAME'] != 'w')]

part[(part['SIZE'] >= 46) & (part['BRAND'] == 'Brand#54')].groupby(by=['P_PARTKEY', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'S') & (part['P_PARTKEY'] <= 184) | (part['P_PARTKEY'] <= 84)].groupby(by=['PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'CONTAINER', 'P_PARTKEY']]

part[['BRAND', 'P_NAME', 'TYPE']].groupby(by=['P_NAME', 'TYPE']).agg('min', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']]

part[['CONTAINER', 'BRAND', 'MFGR', 'TYPE']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[['CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['MFGR', 'BRAND', 'SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE']]

part[['MFGR', 'RETAILPRICE', 'P_NAME']].groupby(by=['RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'MFGR']].groupby(by=['MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'P_NAME', 'MFGR']].groupby(by=['PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'MFGR', 'TYPE', 'BRAND']]

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'BRAND']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME']].groupby(by=['P_NAME', 'PT_COMMENT']).agg('count')

part[['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']]

part[['P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND']]

part[['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['SIZE', 'P_NAME', 'MFGR']].groupby(by=['MFGR', 'SIZE']).agg('min', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER']].groupby(by=['P_PARTKEY', 'CONTAINER']).agg('count')

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']]

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE']]

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#51') | (part['P_NAME'].str.startswith('lem')) & (part['SIZE'] > 20) & (part['TYPE'].str.startswith('M')) & (part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] == 134) & (part['SIZE'] == 37) & (part['RETAILPRICE'] == 1011.3995326437201) | (part['P_PARTKEY'] == 152) & (part['RETAILPRICE'] >= 997.2795873251915)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 30) | (part['CONTAINER'] != 'LG')][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] == 2) & (part['SIZE'] <= 46) | (part['SIZE'] == 1) & (part['TYPE'] == 'SMA') & (part['TYPE'] != 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('STA')) & (part['TYPE'] == 'S')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']).agg('count')

partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 8097) | (partsupp['PS_PARTKEY'] > 16)].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 904)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 9489) & (partsupp['PS_SUPPKEY'] != 7246) | (partsupp['PS_PARTKEY'] >= 18) & (partsupp['AVAILQTY'] == 9642) & (partsupp['PS_PARTKEY'] > 8)][['AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] > 4160) & (partsupp['PS_SUPPKEY'] > 2553) | (partsupp['P_COMMENT'] == 'h') & (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['AVAILQTY'] == 7056)][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] != 23)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] != 38)].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 30) | (partsupp['PS_SUPPKEY'] > 1473) | (partsupp['P_COMMENT'] == 'v') | (partsupp['SUPPLYCOST'] != 40.51768962495794)][['SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] > 24) | (partsupp['AVAILQTY'] > 5058) | (partsupp['PS_PARTKEY'] == 9) | (partsupp['SUPPLYCOST'] < 893.8478383824691) | (partsupp['PS_PARTKEY'] == 43)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] >= 10)].groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 21) & (partsupp['PS_SUPPKEY'] != 7094) & (partsupp['AVAILQTY'] != 9308)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] < 4912) & (partsupp['P_COMMENT'] == 'e') | (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_PARTKEY'] == 46)][['P_COMMENT', 'PS_PARTKEY']]

partsupp[(partsupp['PS_SUPPKEY'] < 6558) & (partsupp['PS_SUPPKEY'] != 4630)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] < 6997) & (partsupp['PS_SUPPKEY'] == 5728) & (partsupp['P_COMMENT'] == 'y') | (partsupp['SUPPLYCOST'] < 915.9050552965131) | (partsupp['AVAILQTY'] > 5183)][['PS_PARTKEY']]

partsupp[(partsupp['PS_SUPPKEY'] <= 1157) & (partsupp['AVAILQTY'] <= 7795) | (partsupp['SUPPLYCOST'] != 973.5796692965675) | (partsupp['PS_PARTKEY'] >= 23)][['PS_SUPPKEY', 'AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] == 158) | (partsupp['P_COMMENT'].str.startswith('are')) & (partsupp['PS_PARTKEY'] < 24) | (partsupp['AVAILQTY'] >= 9548)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'v') | (partsupp['P_COMMENT'] != 'j') | (partsupp['AVAILQTY'] > 5089) & (partsupp['SUPPLYCOST'] > 59.532450275869714) | (partsupp['PS_SUPPKEY'] != 7024)][['AVAILQTY']]

partsupp[(partsupp['P_COMMENT'] == 'r') | (partsupp['PS_SUPPKEY'] < 798) | (partsupp['PS_SUPPKEY'] > 1186)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[(partsupp['SUPPLYCOST'] <= 370.49063231672415) | (partsupp['PS_PARTKEY'] > 42) & (partsupp['SUPPLYCOST'] < 806.8179772201838) & (partsupp['SUPPLYCOST'] < 479.81665391998814)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 569.2601882354345)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 135.2375974879079) | (partsupp['SUPPLYCOST'] <= 644.2760542519537)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#45') | (part['MFGR'] == 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 920.7045543808426) & (part['PT_COMMENT'] != 'y')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('count')

region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] == 1)].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] == 1)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'A')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'l')][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'M') & (region['R_NAME'].str.startswith('E'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] < 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] == 2)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'A') & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AME')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] != 2)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] < 0)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'g')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'M')].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] < 3) & (region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] <= 3) & (region['R_NAME'] == 'AME')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_NAME'] != 'A')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'E')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] <= 0)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'ASI')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'u')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'A')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI') | (region['R_NAME'].str.startswith('E'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] == 'E')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 1)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] <= 0)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'A')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AFR')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] == 'AME')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] == 2)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] == 1)][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'h')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'ASI')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] == 3)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 5045.967158072337) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_COMMENT'] == 'q') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '32-')][['S_NAME']]

supplier[(supplier['S_ACCTBAL'] == 5991.292754163591) & (supplier['S_NATIONKEY'] < 20) | (supplier['S_SUPPKEY'] >= 152) | (supplier['S_SUPPKEY'] > 174)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 2328.6937360587217) & (supplier['S_ADDRESS'] != '7')][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']]

supplier[(supplier['S_ADDRESS'] != 'p') | (supplier['S_ACCTBAL'] <= 8873.182943985224) & (supplier['S_ADDRESS'] == 'q') & (supplier['S_COMMENT'] == 'd')][['S_COMMENT', 'S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'] == 'v') & (supplier['S_PHONE'] != '17-') | (supplier['S_SUPPKEY'] > 106) | (supplier['S_COMMENT'].str.startswith('e'))][['S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_COMMENT'] != 'h') & (supplier['S_ADDRESS'].str.startswith('Z')) | (supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_ACCTBAL'] < 3152.0836405100126) & (supplier['S_ADDRESS'] != 'x')][['S_ADDRESS']]

supplier[(supplier['S_COMMENT'] != 'i')].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'j')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'the') & (supplier['S_SUPPKEY'] != 1) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'g')][['S_SUPPKEY', 'S_NAME']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 4811.426551574763) | (supplier['S_SUPPKEY'] != 102) | (supplier['S_ADDRESS'].str.startswith('5'))][['S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] != 11) | (supplier['S_COMMENT'] != 'x') | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] != 18)][['S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] == 8) & (supplier['S_NATIONKEY'] > 3) | (supplier['S_SUPPKEY'] < 114) & (supplier['S_PHONE'] != '32-')][['S_NATIONKEY', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] == '17-') | (supplier['S_SUPPKEY'] == 59) | (supplier['S_ACCTBAL'] <= -866.804489421037)][['S_COMMENT', 'S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_ADDRESS'] == 'y') | (supplier['S_ADDRESS'] == 'l') & (supplier['S_NATIONKEY'] >= 3)][['S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_PHONE'].str.startswith('17-'))][['S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 104) & (supplier['S_COMMENT'] != 'e')][['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']]

supplier[(supplier['S_SUPPKEY'] > 41)][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_SUPPKEY'] >= 72) & (supplier['S_SUPPKEY'] <= 70) & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 41) & (supplier['S_ACCTBAL'] > 3526.1860401368303)][['S_ACCTBAL']]

supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].groupby(by=['S_PHONE', 'S_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] == 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] == 's') & (nation['N_COMMENT'].str.startswith('o'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 0)].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 14)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] == 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] < 17) | (nation['N_COMMENT'] == 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] < 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] == 5150.424799661805) | (customer['C_CUSTKEY'] <= 45) & (customer['C_COMMENT'] == 'o')].groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7489.94823580628)][['C_CUSTKEY', 'C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[(customer['C_ADDRESS'] == 'L') | (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')].groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith(',')) | (customer['C_ADDRESS'] == '8') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] < 22) | (customer['C_CUSTKEY'] == 39)].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('u')) | (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_CUSTKEY'] <= 32) & (customer['C_COMMENT'] != ',')][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 66) | (customer['C_CUSTKEY'] < 5) & (customer['C_CUSTKEY'] < 64)][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE']]

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] == 8264.466550081297) & (customer['C_COMMENT'] == 'l')].merge(nation[(nation['N_REGIONKEY'] > 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('l'))][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] == 80) | (customer['C_ADDRESS'] == 'J') | (customer['C_ADDRESS'] == 'c') | (customer['C_NAME'].str.startswith('C'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C')].groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 1)][['C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 15) & (customer['C_ADDRESS'].str.startswith('x'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 6) & (customer['C_PHONE'] != '2') & (customer['C_PHONE'] != '25-')].groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_PHONE']).agg('count')

customer[(customer['C_NATIONKEY'] >= 5) | (customer['C_COMMENT'] == 'c')].groupby(by=['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_ACCTBAL'] >= 8015.714126200337) | (customer['C_PHONE'] != '22-') & (customer['C_ACCTBAL'] >= 5493.7511517126295) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'u')][['C_ACCTBAL']]

customer[(customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] != 3)][['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] == '4') | (customer['C_ADDRESS'] != 'Y') & (customer['C_ADDRESS'] != 'd') | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_PHONE', 'C_NATIONKEY']]

customer[(customer['C_PHONE'] == '3') & (customer['C_CUSTKEY'] >= 59) | (customer['C_ADDRESS'] == 'Q') | (customer['C_ADDRESS'].str.startswith('c')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'MACHINERY']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'].str.startswith('3')) & (customer['C_NATIONKEY'] < 16)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] > 5) & (customer['C_ADDRESS'] != '8') | (customer['C_CUSTKEY'] < 55) | (customer['C_ADDRESS'] != 'w') & (customer['C_ACCTBAL'] == 2353.251891765139)][['C_NAME']]

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_ACCTBAL'] >= 2946.890726448363) | (customer['C_COMMENT'] != 's') & (customer['C_NAME'] != 'C')].groupby(by=['C_NAME', 'C_ADDRESS']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith('y')) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'l') & (customer['C_CUSTKEY'] < 46)][['C_PHONE', 'C_ADDRESS']]

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']].groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_CUSTKEY', 'C_NAME', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_NAME', 'C_COMMENT', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] > 33234.12253407301) | (orders['TOTALPRICE'] != 34267.648032496036)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'Q') | (supplier['S_SUPPKEY'] <= 194) & (supplier['S_SUPPKEY'] <= 99)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 0) & (supplier['S_ACCTBAL'] < -962.0908801799471)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 7869) & (partsupp['AVAILQTY'] == 7774) | (partsupp['AVAILQTY'] != 581)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2334) | (partsupp['AVAILQTY'] >= 3960) | (partsupp['SUPPLYCOST'] != 169.32373883344488)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 638) | (partsupp['PS_PARTKEY'] >= 34)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_ORDERKEY'] >= 69) | (lineitem['TAX'] > 0.059267526943914045) & (lineitem['QUANTITY'] == 10) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['LINENUMBER'] <= 6)][['COMMITDATE']]

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_PARTKEY'] <= 149979) & (lineitem['L_ORDERKEY'] <= 3) & (lineitem['L_SUPPKEY'] < 1450) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE'])) & (lineitem['L_ORDERKEY'] >= 134) & (lineitem['L_SUPPKEY'] >= 9645) & (lineitem['L_PARTKEY'] > 128591)]

lineitem[(lineitem['LINENUMBER'] != 1) | (lineitem['TAX'] < 0.05862793723567531)][['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 68) | (lineitem['TAX'] < 0.06716444452133132) | (lineitem['LINENUMBER'] > 5) | (lineitem['L_COMMENT'] != 'q') & (lineitem['TAX'] < 0.015843277261133465) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['QUANTITY'] < 37) & (lineitem['DISCOUNT'] >= 0.09230957373416022) & (lineitem['SHIPDATE'] != '1992-04-27')]

lineitem[(lineitem['L_PARTKEY'] < 165844) & (lineitem['SHIPDATE'] <= '1992-04-27')][['LINENUMBER']].groupby(by=['LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 6468) | (lineitem['EXTENDEDPRICE'] == 85621.59429902553) | (lineitem['SHIPMODE'].isin(['AIR', 'MAIL', 'RAIL', 'TRUCK', 'SHIP', 'FOB'])) & (lineitem['L_PARTKEY'] > 107667)][['LINESTATUS', 'SHIPDATE', 'SHIPMODE']]

lineitem[(lineitem['L_SUPPKEY'] < 8230) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['DISCOUNT'] < 0.015080212535884797)][['L_COMMENT', 'LINESTATUS', 'LINENUMBER', 'EXTENDEDPRICE']]

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL', 'SHIP', 'TRUCK', 'REG AIR'])) & (lineitem['EXTENDEDPRICE'] <= 47591.796151338516) & (lineitem['L_PARTKEY'] > 69060) & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['LINENUMBER'] > 1) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['EXTENDEDPRICE'] < 21356.021823024992)]

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['LINENUMBER'] >= 1) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['QUANTITY'] < 17) & (lineitem['LINENUMBER'] <= 4) & (lineitem['LINENUMBER'] >= 6)][['TAX']]

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_ORDERKEY'] >= 49) | (lineitem['TAX'] < 0.000942005362007432)][['L_COMMENT', 'SHIPDATE', 'QUANTITY']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['LINESTATUS'] != 'O') & (lineitem['LINESTATUS'] == 'O') | (lineitem['TAX'] <= 0.025399729125482936)][['LINESTATUS', 'RETURNFLAG', 'LINENUMBER']]

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'REG AIR', 'AIR', 'TRUCK', 'RAIL', 'SHIP', 'FOB'])) | (lineitem['TAX'] < 0.04639164842689646) | (lineitem['L_SUPPKEY'] > 4785)][['L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'RECEIPTDATE']]

lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'SHIP', 'RAIL'])) | (lineitem['TAX'] >= 0.013309284891497724) & (lineitem['SHIPMODE'] != 'FOB') | (lineitem['L_PARTKEY'] > 88506) | (lineitem['TAX'] > 0.004283734031965079) | (lineitem['DISCOUNT'] < 0.0038021089199924973)][['COMMITDATE']]

lineitem[(lineitem['TAX'] == 0.010101114950716186) | (lineitem['TAX'] > 0.06896136252219001)][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.002456650397185616) | (lineitem['L_SUPPKEY'] > 9293) | (lineitem['L_ORDERKEY'] <= 157) & (lineitem['TAX'] <= 0.020180087541770676) | (lineitem['L_COMMENT'].str.startswith('o')) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['L_SUPPKEY'] < 3516) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['RETURNFLAG'] != 'R')]

lineitem[['COMMITDATE', 'RETURNFLAG', 'TAX', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPDATE']]

lineitem[['DISCOUNT', 'QUANTITY', 'LINENUMBER', 'L_COMMENT', 'LINESTATUS', 'SHIPDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG']]

lineitem[['DISCOUNT', 'QUANTITY', 'TAX', 'L_COMMENT', 'LINESTATUS']].groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'RECEIPTDATE', 'L_ORDERKEY', 'L_SUPPKEY', 'LINENUMBER']].groupby(by=['L_SUPPKEY']).agg('count')

lineitem[['L_COMMENT', 'COMMITDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'L_PARTKEY', 'RETURNFLAG', 'TAX']]

lineitem[['L_SUPPKEY', 'TAX', 'SHIPDATE', 'RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'L_COMMENT', 'LINENUMBER', 'LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE']]

lineitem[['RECEIPTDATE', 'SHIPDATE', 'SHIPMODE']].groupby(by=['SHIPDATE', 'SHIPMODE', 'RECEIPTDATE']).agg('min', numeric_only=True)

lineitem[['RETURNFLAG', 'DISCOUNT', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['DISCOUNT', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[['TAX', 'L_COMMENT', 'COMMITDATE', 'LINENUMBER']].groupby(by=['COMMITDATE', 'LINENUMBER']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] < 3) & (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'n') & (nation['N_NAME'] != 'F')][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 'o') & (nation['N_NAME'] == 'B') | (nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'o')].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'u')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'] != 'h') & (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'].str.startswith('R'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] == 'e')][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] > 3) & (nation['N_COMMENT'] != 's')].groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] != 6)].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'].str.startswith('o'))][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'y') & (nation['N_NAME'].str.startswith('E'))].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 'i')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != ' ')].groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'B')][['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'M')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] >= 0)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NAME'] == 'G') | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] == 'e')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] == 'I')].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 17) & (nation['N_NAME'] != 'E')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] != 2) | (nation['N_NATIONKEY'] < 2)][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 15)].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] != 13)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 15) | (nation['N_NATIONKEY'] != 14)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 3) | (nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] <= 17) & (nation['N_NAME'] != 'A')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 6) & (nation['N_NATIONKEY'] < 2) & (nation['N_NAME'] == 'R')].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NAME'] != 'R') | (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 21) & (nation['N_COMMENT'].str.startswith('t'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 13)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_REGIONKEY'] > 2)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'].str.startswith('B')) & (nation['N_NATIONKEY'] == 4)].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'U')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] <= 21)].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] == 'o')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] == 19)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] == 1)].groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'R')].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != '0') | (customer['C_ACCTBAL'] <= 2367.388193969333) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 3) | (customer['C_ADDRESS'].str.startswith('l')) & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] >= 1506.0429097603787) & (customer['C_CUSTKEY'] != 17) | (customer['C_NATIONKEY'] != 16) & (customer['C_ACCTBAL'] > -857.408824761141)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('count')

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['O_COMMENT'] != 'y') | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['O_COMMENT'] == 'u') & (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] <= 194171.8498958275) | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] <= 107982) & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] > 356) | (orders['O_COMMENT'] != 'k')]

orders[(orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C'))][['CLERK', 'ORDERSTATUS', 'O_ORDERKEY']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C')][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['SHIPPRIORITY'] > 0)][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '5-LOW']))][['ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] > 98955) & (orders['O_ORDERKEY'] > 494) | (orders['O_ORDERKEY'] < 665) & (orders['O_ORDERKEY'] < 59) | (orders['O_ORDERKEY'] != 170)]

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['TOTALPRICE'] <= 182252.31060903115) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 330495.83465091675)][['O_COMMENT', 'CLERK', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['TOTALPRICE'] < 170722.14711362935) | (orders['O_COMMENT'] == 'o')].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'd') & (orders['O_COMMENT'] == 'uri')][['CLERK']].groupby(by=['CLERK']).agg('count')

orders[(orders['O_COMMENT'] == 'b')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] == 'l') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERSTATUS'].isin(['O', 'P']))].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 63489) & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] <= 15525)][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] < 614) | (orders['ORDERPRIORITY'] == '2-HIGH')].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY']).agg('count')

orders[(orders['O_ORDERKEY'] > 115) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 88782.85078163784) & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW']))][['ORDERDATE']]

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 126745.6383256997) | (orders['TOTALPRICE'] >= 319828.531997471) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))][['SHIPPRIORITY']]

orders[(orders['TOTALPRICE'] < 209472.14365793118)].groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 109521.40533082596) & (orders['O_COMMENT'] != 'the') | (orders['TOTALPRICE'] <= 289874.8431532474) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM'])) & (orders['O_CUSTKEY'] > 97697) & (orders['O_COMMENT'] == 'uri') | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'] == 'uri') & (orders['O_CUSTKEY'] >= 137742)]

orders[(orders['TOTALPRICE'] > 177070.14313646435)][['ORDERPRIORITY', 'CLERK']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']]

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']).agg('count')

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS', 'CLERK', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'TOTALPRICE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#52') & (part['P_PARTKEY'] <= 60) & (part['RETAILPRICE'] > 917.0276345984724)].groupby(by=['PT_COMMENT', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#53') & (part['P_NAME'] != 's')][['MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['BRAND'] == 'Brand#55') | (part['SIZE'] > 18) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) & (part['CONTAINER'].str.startswith('WRAP')) | (part['MFGR'].isin(['Manufacturer#2']))][['RETAILPRICE', 'PT_COMMENT']]

part[(part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('lem')) & (part['PT_COMMENT'].str.startswith('kag'))].groupby(by=['P_PARTKEY', 'P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'MED')][['PT_COMMENT', 'MFGR']].groupby(by=['MFGR']).agg('count')

part[(part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] != 1084.476929456871) & (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] == 966.8266544705509) | (part['BRAND'].isin(['Brand#15', 'Brand#23', 'Brand#35', 'Brand#14', 'Brand#32', 'Brand#25', 'Brand#54', 'Brand#21', 'Brand#31'])) | (part['MFGR'] != 'Manufacturer#3') | (part['P_PARTKEY'] <= 65) | (part['CONTAINER'].str.startswith('WRAP')) | (part['P_NAME'].str.startswith('a'))]

part[(part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] == 1095.655471220515)][['CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'MFGR']]

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['RETAILPRICE'] == 944.0255321713968)].groupby(by=['RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] > 25) & (part['PT_COMMENT'] == 'w') & (part['MFGR'] == 'Manufacturer#3') | (part['TYPE'].str.startswith('M')) & (part['TYPE'] == 'SMA') & (part['PT_COMMENT'].str.startswith('ss ')) & (part['P_NAME'] == 'p') & (part['TYPE'].str.startswith('S'))]

part[(part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#4') & (part['BRAND'].isin(['Brand#44', 'Brand#31', 'Brand#35', 'Brand#14', 'Brand#11', 'Brand#32', 'Brand#23', 'Brand#33', 'Brand#54', 'Brand#25', 'Brand#52', 'Brand#55', 'Brand#24', 'Brand#34', 'Brand#22', 'Brand#43', 'Brand#41', 'Brand#53']))][['PT_COMMENT', 'SIZE', 'BRAND', 'RETAILPRICE']]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1'])) | (part['RETAILPRICE'] < 1006.2226394318718)].groupby(by=['CONTAINER', 'P_NAME', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'ly ')].groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'i') & (part['RETAILPRICE'] <= 1066.5562754365753)][['MFGR', 'CONTAINER', 'SIZE', 'BRAND', 'P_NAME']]

part[(part['PT_COMMENT'] == 'w') & (part['SIZE'] != 45) | (part['RETAILPRICE'] != 917.280463906726) | (part['RETAILPRICE'] < 988.5812054430511) & (part['P_PARTKEY'] != 141)].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('f')) | (part['SIZE'] != 25) & (part['SIZE'] > 22) & (part['P_PARTKEY'] > 69) & (part['TYPE'] == 'M') | (part['RETAILPRICE'] == 967.6585711315213) & (part['RETAILPRICE'] <= 905.2030331112236) & (part['P_PARTKEY'] != 139) | (part['PT_COMMENT'].str.startswith('p'))]

part[(part['PT_COMMENT'].str.startswith('r')) & (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] <= 1013.707456918052) | (part['TYPE'] != 'SMA') & (part['TYPE'] == 'STA') | (part['SIZE'] != 25) & (part['RETAILPRICE'] <= 957.4995908577214) & (part['P_NAME'] == 'lin') & (part['PT_COMMENT'] != 'm')]

part[(part['P_NAME'] != 'a') | (part['CONTAINER'] != 'WRAP')][['CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'i') & (part['PT_COMMENT'] != 'y') | (part['BRAND'].isin(['Brand#25'])) & (part['RETAILPRICE'] == 912.2373731397416) & (part['TYPE'] == 'M') & (part['SIZE'] < 6) & (part['P_NAME'] != 'lin') | (part['CONTAINER'] == 'LG') | (part['TYPE'].str.startswith('E'))]

part[(part['P_NAME'] == 'b') & (part['P_NAME'] != 'blu') & (part['P_NAME'] == 'lem') & (part['SIZE'] > 15) | (part['PT_COMMENT'] == 'g') | (part['TYPE'] == 'L')][['MFGR']]

part[(part['P_NAME'].str.startswith('a')) | (part['P_PARTKEY'] >= 180) & (part['BRAND'] != 'Brand#44') & (part['SIZE'] > 45) & (part['PT_COMMENT'] != 'q')].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('lin')) & (part['P_NAME'] != 'w') | (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] < 149) & (part['P_PARTKEY'] == 70) & (part['TYPE'] == 'E') & (part['PT_COMMENT'] != 't') | (part['TYPE'].str.startswith('SMA')) & (part['BRAND'] == 'Brand#31')]

part[(part['P_PARTKEY'] == 126) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2'])) | (part['BRAND'].isin(['Brand#14', 'Brand#51', 'Brand#43', 'Brand#33', 'Brand#12', 'Brand#42', 'Brand#53', 'Brand#13', 'Brand#21', 'Brand#55', 'Brand#44', 'Brand#24', 'Brand#32', 'Brand#34', 'Brand#52', 'Brand#25', 'Brand#41', 'Brand#35', 'Brand#31', 'Brand#54', 'Brand#11', 'Brand#45'])) & (part['PT_COMMENT'] != 'b') | (part['P_PARTKEY'] <= 171) | (part['BRAND'] == 'Brand#33') | (part['TYPE'] != 'M') & (part['P_PARTKEY'] >= 28) & (part['P_PARTKEY'] > 191)]

part[(part['P_PARTKEY'] > 118) & (part['P_PARTKEY'] <= 97)][['SIZE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] >= 96)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'MFGR']]

part[(part['RETAILPRICE'] >= 1010.6822300012375)][['BRAND', 'P_NAME', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']]

part[(part['SIZE'] < 19) & (part['P_NAME'] == 'y') & (part['CONTAINER'].str.startswith('LG')) | (part['RETAILPRICE'] < 1000.4797631699272) & (part['TYPE'] != 'P') | (part['P_NAME'] != 'w') & (part['P_NAME'].str.startswith('d')) & (part['BRAND'] == 'Brand#55') | (part['BRAND'].isin(['Brand#23', 'Brand#22', 'Brand#42', 'Brand#53', 'Brand#32', 'Brand#25', 'Brand#21', 'Brand#34', 'Brand#41', 'Brand#35', 'Brand#55', 'Brand#31', 'Brand#43', 'Brand#11', 'Brand#44', 'Brand#51', 'Brand#13', 'Brand#45', 'Brand#54', 'Brand#33', 'Brand#14', 'Brand#12']))]

part[(part['SIZE'] < 42) & (part['SIZE'] >= 2) | (part['CONTAINER'].str.startswith('LG'))][['CONTAINER', 'TYPE', 'BRAND', 'MFGR']]

part[(part['SIZE'] <= 29) & (part['P_PARTKEY'] >= 129) | (part['TYPE'] != 'S') | (part['BRAND'] != 'Brand#53') & (part['CONTAINER'].str.startswith('MED'))][['P_PARTKEY', 'MFGR']]

part[(part['SIZE'] <= 3) | (part['RETAILPRICE'] != 996.0293510573528) & (part['TYPE'] != 'P') & (part['SIZE'] != 12) & (part['P_PARTKEY'] > 197) & (part['BRAND'].isin(['Brand#43', 'Brand#23', 'Brand#53', 'Brand#14', 'Brand#41', 'Brand#45', 'Brand#25', 'Brand#32', 'Brand#12', 'Brand#22', 'Brand#33', 'Brand#34']))][['P_NAME']]

part[(part['SIZE'] >= 30)][['RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']]

part[(part['TYPE'] != 'E') | (part['SIZE'] < 31) & (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] > 1052.6502557640788) & (part['P_PARTKEY'] >= 132) & (part['TYPE'].str.startswith('L')) & (part['TYPE'] == 'M') | (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] >= 37)]

part[(part['TYPE'] == 'STA') & (part['P_PARTKEY'] < 46) & (part['P_PARTKEY'] < 97) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1'])) & (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'] == 'E')][['TYPE']]

part[(part['TYPE'].str.startswith('E')) & (part['P_NAME'] == 'h') | (part['RETAILPRICE'] >= 1007.0850935611857) | (part['CONTAINER'] == 'LG') | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] != 'Manufacturer#4') & (part['TYPE'] == 'L') & (part['BRAND'].isin(['Brand#14', 'Brand#51', 'Brand#25'])) & (part['P_NAME'] == 'a')]

part[(part['TYPE'].str.startswith('L')) & (part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] <= 47) & (part['SIZE'] < 32) | (part['P_NAME'] != 'p') | (part['PT_COMMENT'] == 't') | (part['SIZE'] == 45) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['TYPE'] == 'L')]

part[['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']]

part[['BRAND', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[['BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[['CONTAINER', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['P_NAME', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[['MFGR', 'P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[['MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'BRAND', 'TYPE', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'MFGR']].groupby(by=['MFGR', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[['P_NAME', 'P_PARTKEY', 'TYPE']].groupby(by=['TYPE', 'P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']]

part[['RETAILPRICE', 'P_NAME', 'MFGR']].groupby(by=['P_NAME', 'MFGR', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'TYPE']].groupby(by=['PT_COMMENT', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'BRAND', 'MFGR']].groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']]

part[['SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']]

part[['TYPE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']].groupby(by=['TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']]

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'MFGR', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'SIZE', 'TYPE']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'TYPE', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'P_NAME', 'MFGR']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['BRAND'] != 'Brand#33') & (part['RETAILPRICE'] != 1009.6005133318008) & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] > 26) & (part['RETAILPRICE'] <= 1015.0875166804552) | (part['RETAILPRICE'] >= 995.4200934355406)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] > 110) | (part['SIZE'] > 47) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) | (part['SIZE'] == 5) | (part['RETAILPRICE'] <= 1068.674647018163)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'STA') & (part['TYPE'].str.startswith('SMA')) | (part['P_NAME'] != 'k') | (part['TYPE'] == 'M') | (part['PT_COMMENT'] != 'o') & (part['P_NAME'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp.merge(part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('Q'))][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 15) & (supplier['S_SUPPKEY'] <= 119) & (supplier['S_PHONE'] != '14-')][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 3130) & (partsupp['P_COMMENT'] == 'c') | (partsupp['P_COMMENT'] == ' th') | (partsupp['PS_SUPPKEY'] > 2922) & (partsupp['AVAILQTY'] == 3615)][['SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] <= 4623)].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('count')

partsupp[(partsupp['AVAILQTY'] == 5092)][['PS_PARTKEY', 'P_COMMENT']].groupby(by=['PS_PARTKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] == 9300) | (partsupp['P_COMMENT'] == 'y')].merge(part[['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 166) & (partsupp['SUPPLYCOST'] == 331.3256297887465) | (partsupp['PS_PARTKEY'] < 49) & (partsupp['PS_SUPPKEY'] > 2093) | (partsupp['AVAILQTY'] <= 2053)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] != 21) | (partsupp['AVAILQTY'] > 2760) & (partsupp['PS_SUPPKEY'] <= 5553) & (partsupp['AVAILQTY'] != 6304) | (partsupp['PS_SUPPKEY'] == 144)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 16) & (partsupp['PS_PARTKEY'] < 21) | (partsupp['PS_PARTKEY'] >= 31) & (partsupp['PS_SUPPKEY'] < 959) | (partsupp['SUPPLYCOST'] < 375.1919711126145)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 23) & (partsupp['PS_SUPPKEY'] > 4196) & (partsupp['PS_SUPPKEY'] <= 7477) | (partsupp['P_COMMENT'] != 'i') & (partsupp['AVAILQTY'] > 3456)].groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 2858)][['SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1639) | (partsupp['PS_SUPPKEY'] > 3457) | (partsupp['SUPPLYCOST'] <= 659.5579347520792) & (partsupp['PS_SUPPKEY'] > 1407) & (partsupp['PS_PARTKEY'] != 45)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 2069)].merge(supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'] != '2') | (supplier['S_COMMENT'].str.startswith('x'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 4229) | (partsupp['PS_SUPPKEY'] <= 1516) | (partsupp['P_COMMENT'] != 'v') | (partsupp['SUPPLYCOST'] > 438.200186199869)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']]

partsupp[(partsupp['PS_SUPPKEY'] == 2595) & (partsupp['P_COMMENT'] != 'j')][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 2027) & (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['SUPPLYCOST'] > 103.52939477890922)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'] != ' th')].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'] == 'h') | (partsupp['AVAILQTY'] <= 1955)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['P_COMMENT'] == 'f') & (partsupp['SUPPLYCOST'] <= 827.9219603218036) | (partsupp['SUPPLYCOST'] >= 476.26055367992876) & (partsupp['AVAILQTY'] >= 5092) & (partsupp['P_COMMENT'] != 'c')].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('.')) | (partsupp['PS_PARTKEY'] != 24)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['PS_PARTKEY'] == 15) | (partsupp['PS_PARTKEY'] == 44)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'].str.startswith('v'))][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 945.0656008530623)].groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 295.5232712567676) | (partsupp['SUPPLYCOST'] <= 893.36164449807)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] > 454.91663524237066) | (partsupp['PS_SUPPKEY'] > 6851) | (partsupp['PS_PARTKEY'] > 12)].merge(part[(part['P_PARTKEY'] < 95)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 481.6979546811853) & (partsupp['SUPPLYCOST'] <= 298.2888864324241)].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 'a') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#33') | (part['BRAND'] != 'Brand#23') & (part['P_PARTKEY'] == 118)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'd')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('M')) | (region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] != 0)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'u')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] == 3)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 3)][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 2)][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('M'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 2)][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'A') & (region['R_REGIONKEY'] > 3)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] < 3)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'E')][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] == 2)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('u'))][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_NAME'] != 'ASI')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] >= 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] == 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 0)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'] != 'ASI')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'A')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] != 2)][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] > 0)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 2)][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 0)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('c'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] == 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] < 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('V'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] != 22) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 13)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 5)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 8) | (nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] != 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 5633.0926168876895) & (supplier['S_COMMENT'].str.startswith('l'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 65.13354887829769) | (supplier['S_ACCTBAL'] <= 4485.64128277708) | (supplier['S_ACCTBAL'] < 1546.6754412588014)][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_ADDRESS'] == 'B') & (supplier['S_ADDRESS'] == 'G') | (supplier['S_COMMENT'] != 'c')][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']]

supplier[(supplier['S_ADDRESS'] == 'I') | (supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_NATIONKEY'] > 0) | (supplier['S_ADDRESS'] == 'O') | (supplier['S_SUPPKEY'] <= 49)][['S_PHONE', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'] != 'al ') | (supplier['S_ADDRESS'] == 'w') | (supplier['S_ADDRESS'] == 't') & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_COMMENT'] == 'a') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] != '1') | (supplier['S_ACCTBAL'] > 3265.5022852165566) | (supplier['S_NATIONKEY'] <= 9)][['S_ACCTBAL']]

supplier[(supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] != 9644.891385521749)][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_COMMENT'].str.startswith('l'))][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('14-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '17-')][['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 12) | (supplier['S_SUPPKEY'] >= 88)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] != 22) | (supplier['S_SUPPKEY'] <= 160) & (supplier['S_ADDRESS'].str.startswith('P'))][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] < 2) & (supplier['S_COMMENT'] == 'a') & (supplier['S_COMMENT'] == 'h') | (supplier['S_SUPPKEY'] >= 163) | (supplier['S_COMMENT'] != 'y')][['S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] > 3)].groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_NAME']).agg('count')

supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_NATIONKEY'] <= 9) | (supplier['S_COMMENT'] == '!') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('L'))][['S_NAME']]

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'] != 'i')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] <= 6431.983307074572) & (supplier['S_COMMENT'] == '.') & (supplier['S_ADDRESS'] != 'f') | (supplier['S_ADDRESS'].str.startswith('E'))][['S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] != 30) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != '7')][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']]

supplier[(supplier['S_SUPPKEY'] < 102)][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] == 89)][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] == 'h')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] != 22) & (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'v')].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] != 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_NATIONKEY'] < 0)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 17) | (nation['N_NAME'] == 'C')].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 5)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 12)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 19) | (nation['N_NAME'] == 'P') & (nation['N_COMMENT'].str.startswith('v'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 212.08714667294066) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 12) & (customer['C_CUSTKEY'] == 81) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_ACCTBAL', 'C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] != 5398.294986509385) & (customer['C_ACCTBAL'] > -52.68897625339787) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']]

customer[(customer['C_ACCTBAL'] != 8118.067332991479) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_COMMENT'].str.startswith('t')) | (customer['C_NATIONKEY'] == 11) & (customer['C_NATIONKEY'] <= 11) & (customer['C_CUSTKEY'] < 84) & (customer['C_NAME'] != 'C')][['C_COMMENT']]

customer[(customer['C_ACCTBAL'] <= 6805.798165643327)].merge(nation[(nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 5280.714540832483) | (customer['C_NATIONKEY'] < 16) & (customer['C_COMMENT'] == ' ')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']]

customer[(customer['C_ACCTBAL'] == 7491.545504672798) & (customer['C_ACCTBAL'] == -400.7850356172397)][['C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'F') | (customer['C_ACCTBAL'] >= 693.0918215803008) & (customer['C_PHONE'] == '27-')][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'P') & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == '.') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'a') & (customer['C_COMMENT'] != ' ') | (customer['C_CUSTKEY'] != 35)].groupby(by=['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 57) | (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 4) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'] == 'x') & (customer['C_ACCTBAL'] == 5094.020243846998) & (customer['C_PHONE'].str.startswith('3'))][['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[(customer['C_CUSTKEY'] == 53)][['C_PHONE', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('count')

customer[(customer['C_CUSTKEY'] == 92) & (customer['C_NATIONKEY'] <= 2)][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] > 10) | (customer['C_ADDRESS'].str.startswith('O')) | (customer['C_COMMENT'] == 'o') & (customer['C_COMMENT'] != 'u') & (customer['MKTSEGMENT'] == 'BUILDING')][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']]

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('j')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NATIONKEY'] < 7)].groupby(by=['C_NATIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= 7723.676277364259) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NATIONKEY'] > 18) & (customer['C_NATIONKEY'] == 6) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_ACCTBAL'] > 5941.688010656786)][['C_ACCTBAL']]

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 96) | (customer['C_CUSTKEY'] > 67) | (customer['C_ADDRESS'] == 'Y')].groupby(by=['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 98)].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] != 'e')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '2') | (customer['C_ADDRESS'] == 'Q')][['C_PHONE']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('B')) & (customer['C_PHONE'] != '2')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] > 6570.627256370852) & (customer['C_CUSTKEY'] != 14) | (customer['C_NATIONKEY'] != 18) & (customer['C_NATIONKEY'] > 14)][['C_ACCTBAL']]

customer[(customer['C_NATIONKEY'] <= 13) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 6) | (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('9'))][['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] <= 22) | (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] == 51) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('c'))][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']]

customer[(customer['C_PHONE'] != '18-') & (customer['C_NATIONKEY'] > 20)][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']]

customer[(customer['C_PHONE'] != '22-') & (customer['C_PHONE'] != '2') | (customer['C_NATIONKEY'] < 9) & (customer['C_COMMENT'] == 's')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_NAME', 'C_PHONE']).agg('count')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('count')

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_ADDRESS'].str.startswith('M')) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] < 4) | (customer['C_PHONE'].str.startswith('13-'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] > 96612) | (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

lineitem.merge(orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']).agg('count')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'MFGR']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['BRAND'] != 'Brand#42') | (part['P_NAME'].str.startswith('d')) | (part['BRAND'] != 'Brand#24') | (part['SIZE'] <= 18)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 22) & (partsupp['AVAILQTY'] == 2944)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'v') | (partsupp['AVAILQTY'] >= 4564)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 895.7938571814278)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 59661.232438199695) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['RECEIPTDATE'] > '1992-05-02')].groupby(by=['L_PARTKEY', 'SHIPDATE', 'LINENUMBER', 'COMMITDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F'])) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['LINESTATUS'] != 'O') | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['EXTENDEDPRICE'] < 31607.379637401405)][['SHIPMODE']]

lineitem[(lineitem['L_ORDERKEY'] != 41) | (lineitem['LINENUMBER'] > 1) | (lineitem['EXTENDEDPRICE'] >= 8238.886286336328) | (lineitem['QUANTITY'] == 39) & (lineitem['L_PARTKEY'] > 133066) | (lineitem['TAX'] <= 0.02618176253402802) | (lineitem['LINESTATUS'] != 'O') | (lineitem['L_ORDERKEY'] > 38) & (lineitem['L_COMMENT'] != 'c') & (lineitem['L_PARTKEY'] > 150322)]

lineitem[(lineitem['L_SUPPKEY'] <= 9403) | (lineitem['DISCOUNT'] == 0.03410395747582514) | (lineitem['L_ORDERKEY'] == 23)][['TAX']].groupby(by=['TAX']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 8) | (lineitem['DISCOUNT'] <= 0.04797430167460462) | (lineitem['DISCOUNT'] != 0.08262160745389308) & (lineitem['L_COMMENT'].str.startswith('e')) & (lineitem['L_COMMENT'] == 'n') & (lineitem['EXTENDEDPRICE'] >= 55650.0541353903) & (lineitem['L_ORDERKEY'] < 93) & (lineitem['QUANTITY'] < 36) & (lineitem['DISCOUNT'] != 0.08206440485578566) & (lineitem['RECEIPTDATE'] <= '1992-05-02')]

lineitem[(lineitem['RETURNFLAG'] != 'A') | (lineitem['DISCOUNT'] < 0.06837779904824152) & (lineitem['LINESTATUS'].isin(['O']))][['LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'SHIPDATE', 'TAX']]

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['L_PARTKEY'] > 7095)][['SHIPMODE', 'TAX']]

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['L_PARTKEY'] <= 168043) | (lineitem['EXTENDEDPRICE'] <= 75782.65383798149) | (lineitem['DISCOUNT'] <= 0.018823394515384617)][['RECEIPTDATE', 'SHIPINSTRUCT', 'L_COMMENT']]

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['QUANTITY'] != 13) | (lineitem['EXTENDEDPRICE'] != 63554.03846777543) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['TAX'] != 0.001337542071049036) | (lineitem['SHIPMODE'].isin(['MAIL', 'FOB']))][['L_COMMENT', 'SHIPDATE']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['SHIPDATE', 'TAX', 'SHIPMODE', 'RECEIPTDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'EXTENDEDPRICE']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['L_PARTKEY'] <= 109345) & (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] <= 1) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['DISCOUNT'] > 0.05863247847225176)][['RECEIPTDATE']]

lineitem[['COMMITDATE', 'RECEIPTDATE', 'LINESTATUS', 'SHIPDATE', 'RETURNFLAG', 'TAX']].groupby(by=['COMMITDATE']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'QUANTITY', 'DISCOUNT', 'TAX', 'SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG']]

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE', 'SHIPDATE', 'LINESTATUS', 'COMMITDATE', 'DISCOUNT']]

lineitem[['L_COMMENT', 'LINESTATUS', 'L_PARTKEY', 'QUANTITY']].groupby(by=['LINESTATUS', 'L_COMMENT', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'L_ORDERKEY', 'L_SUPPKEY', 'LINESTATUS', 'SHIPDATE', 'SHIPMODE', 'DISCOUNT']]

lineitem[['L_COMMENT', 'RECEIPTDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'DISCOUNT']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[['L_PARTKEY', 'L_SUPPKEY', 'TAX', 'DISCOUNT', 'LINESTATUS', 'L_COMMENT', 'LINENUMBER', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPINSTRUCT']]

lineitem[['L_PARTKEY', 'QUANTITY', 'COMMITDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'LINESTATUS']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[['L_SUPPKEY', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'DISCOUNT', 'LINESTATUS', 'L_ORDERKEY', 'COMMITDATE', 'SHIPINSTRUCT', 'QUANTITY']]

lineitem[['L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'LINENUMBER', 'SHIPDATE', 'L_SUPPKEY', 'SHIPMODE', 'TAX', 'L_PARTKEY', 'COMMITDATE', 'RECEIPTDATE', 'LINESTATUS']]

lineitem[['QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG', 'TAX']].groupby(by=['RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'LINENUMBER', 'COMMITDATE', 'SHIPMODE', 'TAX', 'LINESTATUS']].groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

lineitem[['TAX', 'COMMITDATE', 'SHIPMODE', 'DISCOUNT', 'L_ORDERKEY', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINENUMBER']]

nation.merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'p') & (nation['N_NATIONKEY'] < 21) & (nation['N_REGIONKEY'] >= 1)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 12)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] >= 2)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] == 'e')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] == 'i') & (nation['N_NATIONKEY'] != 6) & (nation['N_COMMENT'] != 'e')].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'p')][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] <= 5)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] >= 4) & (nation['N_NAME'] != 'C')].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 's') & (nation['N_COMMENT'] != 'r')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't') & (nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] < 21)].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] <= 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] >= 12) | (nation['N_NATIONKEY'] > 22)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NAME'] == 'B') | (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 2)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] > 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('V'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'M') & (nation['N_NAME'] != 'C')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] == ' ')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] <= 0) & (nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] < 7)].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 0) | (nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 1) | (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_COMMENT'].str.startswith(' '))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 13)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 5) & (nation['N_REGIONKEY'] < 3)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 23) & (nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] > 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 5) & (nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] != 'r')][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_REGIONKEY'] <= 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] > 16)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] <= 7)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2)].merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'y') | (nation['N_REGIONKEY'] < 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] != 17) & (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 't') & (nation['N_NAME'] == 'E')].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] >= 23) & (nation['N_REGIONKEY'] != 1)].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] > 0)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] >= 2)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 3912.227451878787) & (customer['C_NATIONKEY'] < 15) & (customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] == 8810.78338930176) & (customer['C_ACCTBAL'] <= 7703.215512398747) & (customer['C_COMMENT'].str.startswith('s')) | (customer['C_COMMENT'] != 't')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'y') & (customer['C_ACCTBAL'] <= 8411.857016951119) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] < 7)][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] == 23) | (customer['C_COMMENT'] != 'a') & (customer['C_NATIONKEY'] <= 0) & (customer['C_COMMENT'] != 'c')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 5735.309701863677) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] < 16)][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_CUSTKEY'] <= 16) & (customer['C_COMMENT'] != 's') | (customer['C_PHONE'].str.startswith('1')) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] != 'X')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders.merge(customer[['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C')][['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']]

orders[(orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 119820.44332692241) | (orders['TOTALPRICE'] >= 315410.6428884076) | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 13963)][['ORDERSTATUS']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] >= 68263) & (orders['TOTALPRICE'] < 288207.62059215194) | (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] < 208534.99187313628) & (orders['SHIPPRIORITY'] < 0)][['SHIPPRIORITY']]

orders[(orders['CLERK'].str.startswith('C'))].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['TOTALPRICE'] != 146026.86068289343) & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['ORDERSTATUS'] == 'P')].groupby(by=['O_ORDERKEY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21')][['O_ORDERKEY', 'CLERK']].groupby(by=['O_ORDERKEY', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_COMMENT'] == 'j') | (orders['O_COMMENT'] != 'the')][['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] == '1998-07-21')].groupby(by=['TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED']))][['TOTALPRICE', 'CLERK']].groupby(by=['CLERK', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'] == ' ')].groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] >= 672) & (orders['O_ORDERKEY'] >= 532) & (orders['O_CUSTKEY'] > 140955) | (orders['TOTALPRICE'] != 102291.68819238574) | (orders['TOTALPRICE'] <= 187015.53971777082)][['O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['O_ORDERKEY'] <= 8) | (orders['O_COMMENT'].str.startswith('s')) & (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] >= 99)][['O_COMMENT']]

orders[(orders['O_CUSTKEY'] < 147777) | (orders['O_COMMENT'] != 'e') & (orders['O_ORDERKEY'] > 523) | (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('n'))][['TOTALPRICE', 'O_COMMENT', 'CLERK']]

orders[(orders['O_CUSTKEY'] < 53912)][['TOTALPRICE', 'ORDERDATE']].groupby(by=['ORDERDATE', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 16589) | (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] == 't') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_ORDERKEY'] <= 565) & (orders['TOTALPRICE'] != 8099.4929763205)][['SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] == 2347) & (orders['O_ORDERKEY'] == 680)].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 45201) | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'].isin(['O']))][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 18812) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] == 'C')][['O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] != 598)].merge(customer[(customer['C_CUSTKEY'] <= 59)][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 260) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] > 44563)][['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] > 657) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] < 90808) | (orders['O_CUSTKEY'] > 9174)][['O_COMMENT', 'CLERK', 'ORDERPRIORITY']]

orders[(orders['SHIPPRIORITY'] == 0)][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] == 'the') & (orders['TOTALPRICE'] == 158861.31865253035) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'] == 'O')][['O_COMMENT', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] < 217312.47213257023) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 70615.7937211525) | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] > 460) & (orders['O_ORDERKEY'] > 344)][['CLERK', 'ORDERSTATUS']]

orders[(orders['TOTALPRICE'] < 3399.3663236120033) | (orders['TOTALPRICE'] > 82594.5399697786) | (orders['O_COMMENT'] == 'i') | (orders['O_COMMENT'] == 'i')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']).agg('count')

part[(part['BRAND'] != 'Brand#11') | (part['BRAND'] != 'Brand#25') | (part['SIZE'] == 23) & (part['P_PARTKEY'] < 144) | (part['P_NAME'] != 'o')][['P_NAME', 'BRAND', 'RETAILPRICE']]

part[(part['BRAND'] == 'Brand#33') | (part['TYPE'] != 'M') | (part['CONTAINER'] != 'LG') | (part['PT_COMMENT'].str.startswith('c')) & (part['TYPE'] != 'E') & (part['BRAND'] != 'Brand#25')].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#45') & (part['BRAND'] != 'Brand#53') & (part['TYPE'] == 'S')][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME']]

part[(part['BRAND'].isin(['Brand#41', 'Brand#52', 'Brand#23', 'Brand#43', 'Brand#31', 'Brand#25', 'Brand#44', 'Brand#54', 'Brand#21', 'Brand#12', 'Brand#45', 'Brand#15', 'Brand#42', 'Brand#33', 'Brand#51', 'Brand#13', 'Brand#55', 'Brand#32', 'Brand#24', 'Brand#53', 'Brand#11', 'Brand#35', 'Brand#34', 'Brand#14'])) & (part['RETAILPRICE'] <= 931.8993128377601) & (part['BRAND'].isin(['Brand#43', 'Brand#51', 'Brand#52', 'Brand#31', 'Brand#23', 'Brand#11', 'Brand#42', 'Brand#34', 'Brand#55', 'Brand#41', 'Brand#24', 'Brand#32', 'Brand#22', 'Brand#25', 'Brand#13', 'Brand#53', 'Brand#45', 'Brand#14', 'Brand#44', 'Brand#54', 'Brand#21', 'Brand#15', 'Brand#12', 'Brand#33', 'Brand#35'])) & (part['CONTAINER'] == 'SM') & (part['P_NAME'].str.startswith('o'))][['BRAND', 'MFGR', 'CONTAINER']]

part[(part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] != 985.7152795892657) & (part['P_NAME'].str.startswith('h')) | (part['P_NAME'].str.startswith('g'))].groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] == 'WRAP') | (part['PT_COMMENT'] != 'f') & (part['P_NAME'] != 'n') & (part['RETAILPRICE'] != 964.3764588716376) & (part['RETAILPRICE'] < 1008.2137731666244)][['CONTAINER', 'PT_COMMENT']]

part[(part['CONTAINER'] == 'WRAP') | (part['BRAND'] != 'Brand#53') | (part['RETAILPRICE'] == 967.4133348777638)].groupby(by=['RETAILPRICE', 'SIZE', 'P_NAME', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] > 9) & (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] < 1087.3546688960864) & (part['RETAILPRICE'] >= 1065.888810661648) & (part['CONTAINER'].str.startswith('SM'))].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'].str.startswith('y'))][['BRAND', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']]

part[(part['MFGR'] != 'Manufacturer#1') | (part['BRAND'].isin(['Brand#21', 'Brand#24', 'Brand#23', 'Brand#53', 'Brand#55', 'Brand#44', 'Brand#42', 'Brand#35', 'Brand#54'])) | (part['RETAILPRICE'] == 1028.2615595931147) & (part['TYPE'] == 'E')][['BRAND', 'RETAILPRICE', 'MFGR', 'SIZE']]

part[(part['MFGR'] != 'Manufacturer#3') | (part['BRAND'].isin(['Brand#21', 'Brand#34', 'Brand#43', 'Brand#53'])) | (part['SIZE'] >= 31) | (part['P_NAME'] == 'y') & (part['MFGR'].isin(['Manufacturer#1'])) | (part['SIZE'] != 10)].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] != '!') & (part['BRAND'] != 'Brand#41')].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'SIZE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('b')) & (part['P_NAME'] != 't')].groupby(by=['RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('r')) | (part['P_NAME'].str.startswith('i')) | (part['CONTAINER'] != 'JUMBO')][['TYPE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['PT_COMMENT'].str.startswith('u')) & (part['RETAILPRICE'] > 1099.4330115472862) | (part['BRAND'] == 'Brand#33') & (part['P_NAME'] == 'lem') & (part['RETAILPRICE'] <= 926.8437185614305) | (part['SIZE'] < 23)].groupby(by=['PT_COMMENT']).agg('count')

part[(part['PT_COMMENT'].str.startswith('w')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] < 20) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] <= 2) & (part['P_PARTKEY'] < 175)][['P_PARTKEY']]

part[(part['P_NAME'] == 'cor') | (part['P_NAME'] != 'r')][['PT_COMMENT', 'MFGR']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('blu')) & (part['BRAND'].isin(['Brand#44', 'Brand#12', 'Brand#51', 'Brand#45', 'Brand#52', 'Brand#32', 'Brand#22']))].groupby(by=['SIZE', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 104) | (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'].str.startswith('E'))].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['P_PARTKEY'] <= 167) | (part['PT_COMMENT'] != ' ') | (part['P_NAME'].str.startswith('y'))][['BRAND']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 45) & (part['P_PARTKEY'] > 159) & (part['BRAND'].isin(['Brand#55', 'Brand#42', 'Brand#31', 'Brand#12', 'Brand#51', 'Brand#25', 'Brand#21'])) | (part['RETAILPRICE'] >= 939.5193873206092) | (part['PT_COMMENT'] == 'the')].groupby(by=['TYPE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 1001.5194835270183) | (part['BRAND'] == 'Brand#53') | (part['P_NAME'] == 's') | (part['TYPE'].str.startswith('M')) & (part['BRAND'] == 'Brand#13')].groupby(by=['PT_COMMENT', 'P_NAME']).agg('count')

part[(part['RETAILPRICE'] >= 956.6367554150547) | (part['BRAND'].isin(['Brand#52', 'Brand#43', 'Brand#12', 'Brand#14', 'Brand#32', 'Brand#51'])) & (part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] >= 1068.0721530635255) & (part['BRAND'].isin(['Brand#23', 'Brand#31', 'Brand#44', 'Brand#32', 'Brand#33', 'Brand#14', 'Brand#41', 'Brand#51', 'Brand#12', 'Brand#13', 'Brand#52', 'Brand#42', 'Brand#22', 'Brand#25', 'Brand#15', 'Brand#55', 'Brand#53', 'Brand#11', 'Brand#54', 'Brand#35', 'Brand#21']))].groupby(by=['P_NAME', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] != 41) | (part['SIZE'] >= 14) | (part['P_NAME'].str.startswith('h')) & (part['SIZE'] >= 43) | (part['SIZE'] != 28) & (part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] == 164)][['PT_COMMENT']]

part[(part['SIZE'] < 32) | (part['BRAND'] != 'Brand#52') | (part['CONTAINER'] == 'SM') & (part['P_NAME'] != 'r') | (part['P_PARTKEY'] >= 80)][['CONTAINER', 'BRAND', 'TYPE']]

part[(part['SIZE'] <= 26) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) & (part['MFGR'] != 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] <= 1031.9132882488855) & (part['P_NAME'] != 'lin')].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] == 17) & (part['P_NAME'] == 'c') & (part['P_NAME'].str.startswith('y')) | (part['BRAND'] != 'Brand#35') & (part['MFGR'] == 'Manufacturer#4')][['SIZE', 'P_PARTKEY', 'MFGR']]

part[(part['SIZE'] == 34) | (part['P_PARTKEY'] > 161) & (part['PT_COMMENT'].str.startswith('n')) | (part['SIZE'] == 15)].groupby(by=['P_PARTKEY', 'MFGR', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['SIZE'] == 35) | (part['SIZE'] == 40) | (part['P_PARTKEY'] <= 33) & (part['MFGR'] != 'Manufacturer#2')][['MFGR', 'SIZE', 'BRAND', 'PT_COMMENT']]

part[(part['SIZE'] > 37) | (part['P_PARTKEY'] <= 67) & (part['BRAND'] != 'Brand#22')].groupby(by=['PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'P') | (part['TYPE'] == 'M')].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'STA') & (part['P_PARTKEY'] == 39) & (part['TYPE'].str.startswith('SMA'))][['P_NAME']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['BRAND', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[['CONTAINER', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['MFGR', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

part[['MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['SIZE', 'MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'P_NAME', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'MFGR', 'BRAND']].groupby(by=['MFGR', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'TYPE', 'P_NAME', 'CONTAINER']].groupby(by=['TYPE', 'MFGR']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'MFGR', 'SIZE', 'BRAND']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'MFGR', 'P_PARTKEY', 'CONTAINER']).agg('count')

partsupp.merge(part[(part['BRAND'] == 'Brand#45') & (part['SIZE'] != 48) | (part['TYPE'] == 'L')][['P_PARTKEY', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] == 7) | (part['PT_COMMENT'].str.startswith(' ')) | (part['PT_COMMENT'].str.startswith('kag'))][['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] != '!') & (part['P_PARTKEY'] > 92) | (part['PT_COMMENT'].str.startswith('s')) | (part['MFGR'].isin(['Manufacturer#4'])) | (part['SIZE'] > 13) | (part['P_NAME'] == 'b') | (part['RETAILPRICE'] <= 1093.4414169916843)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith(' fi')) & (part['PT_COMMENT'] != ' fi') & (part['PT_COMMENT'] != 'x') & (part['P_PARTKEY'] < 134) & (part['RETAILPRICE'] > 1008.2704126338485) & (part['CONTAINER'] == 'WRAP') & (part['P_NAME'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] == 'w') & (part['SIZE'] != 16) & (part['TYPE'] != 'SMA') & (part['PT_COMMENT'] != 'h') & (part['P_PARTKEY'] < 115) & (part['TYPE'] == 'SMA') | (part['MFGR'] != 'Manufacturer#2')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] >= 149) | (part['RETAILPRICE'] != 958.3878663493076) & (part['RETAILPRICE'] <= 1084.1924070849504)][['P_PARTKEY', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] >= 18) & (part['P_PARTKEY'] != 147) | (part['PT_COMMENT'] != 'p')][['P_PARTKEY', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] >= 60) | (part['P_NAME'] == 'cor') & (part['P_NAME'].str.startswith('l')) | (part['RETAILPRICE'] < 998.7138466745156)][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] >= 940.5528276665243) & (part['BRAND'] == 'Brand#55') & (part['TYPE'] == 'S') | (part['P_NAME'].str.startswith('h')) | (part['SIZE'] != 23) | (part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] != 'k')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('E')) | (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] == 'h') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3'])) & (part['RETAILPRICE'] != 1093.04177136458) & (part['P_PARTKEY'] == 23) | (part['RETAILPRICE'] == 1069.7331550601548)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[['MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[['P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('count')

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 's') & (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_ADDRESS'].str.startswith('8'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 6378)].merge(part[['TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 7557) | (partsupp['PS_PARTKEY'] == 39)][['SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 7699)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 2579) | (partsupp['SUPPLYCOST'] <= 456.7835079784653) | (partsupp['PS_PARTKEY'] != 39) | (partsupp['P_COMMENT'] == ' ') & (partsupp['AVAILQTY'] != 758)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] > 12) | (partsupp['SUPPLYCOST'] <= 168.07754433646534) | (partsupp['SUPPLYCOST'] > 136.77404874913307) | (partsupp['P_COMMENT'] != 'h') & (partsupp['SUPPLYCOST'] != 794.6916595129396)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] > 46) | (partsupp['AVAILQTY'] == 3022) | (partsupp['SUPPLYCOST'] < 980.0926963904499) & (partsupp['PS_PARTKEY'] == 8) | (partsupp['PS_PARTKEY'] >= 28)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] <= 4239) & (partsupp['SUPPLYCOST'] > 622.7889106191452) & (partsupp['PS_SUPPKEY'] < 3935)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 2531)][['PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 5427) | (partsupp['P_COMMENT'] != 'b') & (partsupp['PS_SUPPKEY'] < 4379)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['SUPPLYCOST'] <= 317.53131015471865)][['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'f') | (partsupp['PS_PARTKEY'] >= 47) | (partsupp['PS_PARTKEY'] > 37)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 't')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['SUPPLYCOST'] == 152.2480595605252) & (partsupp['PS_SUPPKEY'] < 6643)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 245.19491767561743) & (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['P_COMMENT'].str.startswith('y'))][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 425.0094824090066) & (partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['PS_SUPPKEY'] != 3393)].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('p'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] < 2)][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'h')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'E')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AME')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AME') | (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 0)][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 1)][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] == 'h')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'C')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > -213.53305799774864) | (supplier['S_ADDRESS'] != 'y') & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6602.828405928183) | (supplier['S_SUPPKEY'] >= 72) & (supplier['S_NATIONKEY'] <= 20) | (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] != 'a')].groupby(by=['S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 7299.3612524362825) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('C'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_ADDRESS'] != '9') & (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_COMMENT'] == 'l') | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 9521.397764675707) | (supplier['S_COMMENT'] != 't')][['S_NAME']]

supplier[(supplier['S_COMMENT'] == 'v') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'N') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_NATIONKEY'] > 4) | (supplier['S_COMMENT'].str.startswith('k'))][['S_ACCTBAL']]

supplier[(supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] <= 36) | (supplier['S_SUPPKEY'] <= 135) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] < 9043.815987755373)][['S_COMMENT', 'S_NATIONKEY']]

supplier[(supplier['S_COMMENT'].str.startswith('x'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '1')].merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'j') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] == 14) | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'w') & (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] <= 53) & (supplier['S_NATIONKEY'] <= 15) | (supplier['S_COMMENT'].str.startswith('t'))][['S_SUPPKEY', 'S_NATIONKEY']]

supplier[(supplier['S_NATIONKEY'] != 10) | (supplier['S_NATIONKEY'] != 22) & (supplier['S_SUPPKEY'] != 75) & (supplier['S_COMMENT'] == 'bli') | (supplier['S_COMMENT'] == 'i') & (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ACCTBAL'] != 8625.582201306312)][['S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] != 19) & (supplier['S_ACCTBAL'] > 9766.131337354458) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'bli') & (supplier['S_COMMENT'] == '!') & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ADDRESS'].str.startswith('6'))][['S_PHONE']]

supplier[(supplier['S_NATIONKEY'] <= 17) & (supplier['S_SUPPKEY'] > 114) | (supplier['S_PHONE'] != '3')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] == 21) & (supplier['S_SUPPKEY'] != 5) & (supplier['S_PHONE'] != '14-')][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_SUPPKEY'] == 122) | (supplier['S_COMMENT'] == 'w') | (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_SUPPKEY'] >= 2) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS']]

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_SUPPKEY'] <= 64) | (supplier['S_NATIONKEY'] >= 2)][['S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 9904.161516665506)][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']]

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ADDRESS'] != 'j') & (supplier['S_ADDRESS'].str.startswith('t'))][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 32) & (supplier['S_COMMENT'] == 'j')][['S_COMMENT', 'S_ADDRESS']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 42) | (supplier['S_SUPPKEY'] == 61) | (supplier['S_SUPPKEY'] < 54) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'U')].groupby(by=['S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'P')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'a')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_COMMENT'] != 'e') & (nation['N_NAME'] != 'S')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 19)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] == 20) & (nation['N_REGIONKEY'] > 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] != -89.87311836931167)].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] >= 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 7927.839424823285) & (customer['C_ACCTBAL'] >= 8021.907470980408) | (customer['C_CUSTKEY'] == 35) | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_ACCTBAL'] < 4516.751633994708) & (customer['C_PHONE'] != '18-')][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 9081.957890575937) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] <= 8) & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_COMMENT'] != 'k')][['C_ADDRESS']]

customer[(customer['C_ACCTBAL'] > 1592.1543625491981) & (customer['C_ACCTBAL'] <= 2142.4301320539967) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_ADDRESS'] != 'S') & (customer['C_PHONE'] != '22-') & (customer['C_ACCTBAL'] >= 4108.1249773221425)].groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['C_ACCTBAL'] > 4283.641862550275) & (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'D') | (customer['C_PHONE'] == '22-') | (customer['C_COMMENT'] == 'q') | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == ',') & (customer['C_ACCTBAL'] >= 8978.717159056449)].merge(nation[(nation['N_NAME'] != 'E')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('I')) & (customer['C_NATIONKEY'] >= 3) | (customer['C_COMMENT'] != 'g') | (customer['C_NATIONKEY'] > 21) & (customer['C_ACCTBAL'] > 9696.81532633234) | (customer['C_COMMENT'].str.startswith('l')) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'] != 'C')][['MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'f') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'v') | (customer['C_COMMENT'] != 'r')][['C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'y')][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('c')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 4504.662874001393)][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_COMMENT'].str.startswith('f')) | (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_ACCTBAL'] > 4624.341451712874)].groupby(by=['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 14) | (customer['C_COMMENT'].str.startswith('s')) & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] == 289.0174641690028) & (customer['C_CUSTKEY'] < 88) & (customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 52) | (customer['C_NAME'] == 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] <= 77) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'O') & (customer['C_PHONE'].str.startswith('13-')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE']))][['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] > 14) & (customer['C_PHONE'].str.startswith('27-')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] < 3) & (customer['C_COMMENT'].str.startswith('i')) & (customer['C_CUSTKEY'] != 77) & (customer['C_COMMENT'] != 'c')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 43) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE']))].merge(nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 99)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 6) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_COMMENT'] == ',')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 12) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_CUSTKEY'] == 99) & (customer['C_ADDRESS'].str.startswith('x')) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] == '2')][['C_NAME']]

customer[(customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] == 19) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == '7')].merge(nation[(nation['N_NATIONKEY'] < 11) | (nation['N_REGIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] != 2330.827639288021) | (customer['C_COMMENT'].str.startswith('k')) & (customer['C_ADDRESS'] != 'o')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'o') | (customer['C_NATIONKEY'] > 11) | (customer['C_NATIONKEY'] != 18)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 22) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_NAME', 'C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 16) & (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'O') | (customer['C_ACCTBAL'] != 9188.43803648721) | (customer['C_PHONE'] == '3')][['C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_NATIONKEY'] == 19) & (customer['C_ADDRESS'] != 'i')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 2) & (customer['C_NATIONKEY'] <= 2) | (customer['C_CUSTKEY'] > 60) & (customer['C_CUSTKEY'] == 76)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 14) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] < 52) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] == 'k') | (customer['MKTSEGMENT'] == 'FURNITURE')][['MKTSEGMENT', 'C_COMMENT']]

customer[(customer['C_PHONE'] == '18-')][['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']]

customer[(customer['C_PHONE'] == '18-')][['C_NAME', 'MKTSEGMENT', 'C_NATIONKEY']].groupby(by=['C_NAME', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '27-') & (customer['C_ACCTBAL'] == 5831.35578517329) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_CUSTKEY'] < 30)][['C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] != 'p') | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_PHONE'] == '13-')][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] != 3453.4028960544174)].merge(nation.merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']].groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_PHONE', 'C_NAME']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_PHONE']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NAME']].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']).agg('count')

lineitem.merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] == 145312.3056062451) | (orders['O_COMMENT'].str.startswith('d')) | (orders['TOTALPRICE'] == 142720.63912173518)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] <= 28545) & (orders['O_CUSTKEY'] > 31625) & (orders['O_CUSTKEY'] >= 101900) | (orders['O_COMMENT'].str.startswith('uri')) & (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'].str.startswith(',')) | (orders['TOTALPRICE'] <= 350238.66241510067) & (orders['SHIPPRIORITY'] != 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] <= 158147.28565495607) | (orders['O_ORDERKEY'] == 262) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F']))][['O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

lineitem.merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'TYPE', 'SIZE']).agg('count')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 8865.303599997129)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 33) | (partsupp['PS_SUPPKEY'] > 7375)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5942) & (partsupp['P_COMMENT'] == ' ')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('the')) | (partsupp['PS_PARTKEY'] >= 1) & (partsupp['PS_SUPPKEY'] != 5599) & (partsupp['AVAILQTY'] < 540) | (partsupp['P_COMMENT'] != 'c')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 520.537946461226)].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) & (lineitem['RECEIPTDATE'] != '1992-05-02')][['QUANTITY', 'SHIPMODE', 'COMMITDATE', 'SHIPINSTRUCT', 'LINENUMBER']]

lineitem[(lineitem['DISCOUNT'] != 0.01842095960689698) & (lineitem['L_SUPPKEY'] <= 1092) | (lineitem['DISCOUNT'] > 0.06509425026498497) & (lineitem['QUANTITY'] >= 40) | (lineitem['RETURNFLAG'].isin(['R', 'N']))].groupby(by=['L_COMMENT', 'L_PARTKEY', 'LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.06060568718102123) & (lineitem['QUANTITY'] >= 34)][['DISCOUNT', 'L_COMMENT', 'SHIPMODE']].groupby(by=['SHIPMODE']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 2148.050558129207)].merge(partsupp.merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 30857.463588120205) & (lineitem['QUANTITY'] < 27) & (lineitem['L_SUPPKEY'] != 7753)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 2) & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_PARTKEY'] <= 184311) | (lineitem['EXTENDEDPRICE'] == 40201.127446606755)][['SHIPMODE', 'COMMITDATE', 'L_COMMENT', 'L_PARTKEY']]

lineitem[(lineitem['LINENUMBER'] <= 6) & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['COMMITDATE'] < '1998-10-16')][['QUANTITY', 'EXTENDEDPRICE', 'DISCOUNT', 'LINESTATUS', 'RECEIPTDATE']]

lineitem[(lineitem['LINESTATUS'].isin(['F']))][['EXTENDEDPRICE', 'QUANTITY', 'LINESTATUS']].groupby(by=['LINESTATUS', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['EXTENDEDPRICE'] <= 47432.21767686722) | (lineitem['TAX'] == 0.014245960309868685)][['QUANTITY', 'SHIPDATE', 'RECEIPTDATE', 'COMMITDATE', 'DISCOUNT']]

lineitem[(lineitem['L_COMMENT'] == 'q') & (lineitem['L_SUPPKEY'] != 9032) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['L_ORDERKEY'] == 123)][['L_COMMENT']].groupby(by=['L_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 67) | (lineitem['LINENUMBER'] != 6) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] <= 99)].merge(orders[['O_COMMENT', 'SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] >= 116) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPMODE'].isin(['RAIL']))].groupby(by=['LINENUMBER', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 130) | (lineitem['DISCOUNT'] == 0.006894088795652231) | (lineitem['EXTENDEDPRICE'] >= 16348.352468825526)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] == 171978) & (lineitem['L_SUPPKEY'] < 5968) & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_SUPPKEY'] == 782)].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['RECEIPTDATE'] == '1992-05-02')][['SHIPDATE']].groupby(by=['SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['DISCOUNT'] == 0.08091846736595547) & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['TAX'] >= 0.031110560371372466) | (lineitem['LINENUMBER'] > 3)][['TAX', 'EXTENDEDPRICE', 'COMMITDATE', 'QUANTITY']]

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['QUANTITY'] >= 9) | (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['LINENUMBER'] == 4) & (lineitem['DISCOUNT'] > 0.009833558237080443) | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_COMMENT'] != 'e')][['RECEIPTDATE', 'COMMITDATE']]

lineitem[(lineitem['TAX'] != 0.07433235235505775) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['DISCOUNT'] != 0.044163769694555356)][['LINESTATUS', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'QUANTITY', 'COMMITDATE']]

lineitem[(lineitem['TAX'] == 0.0010481074174606153) | (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['L_COMMENT'] != 'l') & (lineitem['DISCOUNT'] < 0.0321366149619891) & (lineitem['L_ORDERKEY'] != 30) | (lineitem['L_ORDERKEY'] != 166) | (lineitem['L_COMMENT'] != 'l')].groupby(by=['SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.03865404036014636) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['LINESTATUS'] == 'O') | (lineitem['L_COMMENT'].str.startswith(' ca'))][['L_ORDERKEY']].groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.05881012830680708) | (lineitem['TAX'] >= 0.05584106253326336) & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPMODE'].isin(['RAIL'])) & (lineitem['L_ORDERKEY'] != 74) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_PARTKEY'] < 188149) & (lineitem['L_ORDERKEY'] > 54)][['SHIPINSTRUCT']]

lineitem[['COMMITDATE', 'L_SUPPKEY', 'L_ORDERKEY', 'L_COMMENT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'SHIPMODE', 'LINESTATUS', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE', 'SHIPMODE', 'SHIPINSTRUCT']).agg('count')

lineitem[['L_COMMENT', 'COMMITDATE', 'L_PARTKEY', 'DISCOUNT', 'EXTENDEDPRICE']].groupby(by=['L_COMMENT', 'EXTENDEDPRICE', 'COMMITDATE']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'DISCOUNT']].groupby(by=['DISCOUNT', 'RECEIPTDATE']).agg('count')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'TAX', 'L_PARTKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'L_COMMENT']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'L_ORDERKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'RETURNFLAG']].groupby(by=['SHIPINSTRUCT', 'EXTENDEDPRICE', 'RETURNFLAG']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'].str.startswith('e'))][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] != 11) & (nation['N_NATIONKEY'] == 3)].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] != 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'y')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] > 0) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('F'))][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] >= 17) & (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] <= 3) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't') | (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] <= 14)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] < 18) | (nation['N_COMMENT'].str.startswith('p'))].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'V')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('u'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] == 'P') | (nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] <= 19)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'G') | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'a')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] != 18) & (nation['N_NATIONKEY'] != 19) | (nation['N_NATIONKEY'] > 2)].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'K') | (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] != 23)].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'K')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'M')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'P') & (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] > 22)][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] > 3) | (nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'u')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] >= 3)][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] == 'e')].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('A')) | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'C') & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'E')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'F') | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'] == 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] == 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] >= 11) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 20) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] == 9)][['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 4)].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] < 3) & (nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] > 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] <= 1) | (nation['N_NAME'] == 'K')][['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] >= 0) | (nation['N_NATIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 16) | (nation['N_COMMENT'] == 'n')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 21) | (nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'] != 'E') & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 6)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] >= 15) & (nation['N_COMMENT'] != 'h')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] != 20)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] != 'v')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] < 4)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] > 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] == 'n')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 't')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] == 23) & (nation['N_NAME'].str.startswith('F'))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] != 7) & (nation['N_REGIONKEY'] >= 1)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 8210.817940033481)][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != ',') & (customer['C_NATIONKEY'] < 11) & (customer['C_COMMENT'] != 'r') & (customer['C_NATIONKEY'] > 7) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != 'U') & (customer['C_COMMENT'] != 'g') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('1'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith(',')) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'].str.startswith('S'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('p'))][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 25)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] != 2) & (customer['C_COMMENT'] == 'k') & (customer['C_ADDRESS'] != 'S')][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'] == 'v') & (customer['C_ADDRESS'].str.startswith('z')) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] >= 23)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] == 64) & (customer['C_ACCTBAL'] >= 7038.064916087665) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('h'))][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] <= -360.9633947324645) | (customer['C_ADDRESS'] == 'm')][['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 304934.7822080968) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) | (orders['ORDERDATE'] != '1992-01-13') & (orders['TOTALPRICE'] != 106007.91042259737) & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('q'))][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS']]

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] >= 95324.80040005739) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1992-01-13')][['SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_CUSTKEY'] < 27269) & (orders['O_ORDERKEY'] > 384) | (orders['TOTALPRICE'] == 306234.5003152904) & (orders['TOTALPRICE'] != 259400.47156077088) | (orders['O_ORDERKEY'] == 607) | (orders['CLERK'] != 'C')][['SHIPPRIORITY', 'O_CUSTKEY']]

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['TOTALPRICE'] > 135944.31218017335) & (orders['O_CUSTKEY'] < 25641) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] < 126) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] != 195321.7428296556)][['TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERDATE'] < '1992-01-13')][['ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] > 85848.47718891827) | (orders['CLERK'].str.startswith('C'))].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] != 'ly ') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] > 751) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['O_ORDERKEY'] >= 190) | (orders['O_CUSTKEY'] < 61019)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ' re') | (orders['O_ORDERKEY'] <= 42) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['O_CUSTKEY'] > 16671) & (orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] <= 103719) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 77917) & (orders['ORDERSTATUS'].isin(['P']))].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 109035) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] != 'O')].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 121824) | (orders['O_CUSTKEY'] <= 20948) | (orders['TOTALPRICE'] > 271161.37110964896) | (orders['O_COMMENT'].str.startswith('n'))][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 678) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] > 782)].groupby(by=['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] == 309382.7587506421) & (orders['O_COMMENT'] == 'egu')][['ORDERDATE', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['SHIPPRIORITY'] > 0)].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 302961.3106993988) | (orders['ORDERDATE'] > '1992-01-13')].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 346756.26317645237) | (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] == 324496.8885441523) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1992-01-13')].groupby(by=['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']).agg('count')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].groupby(by=['ORDERDATE', 'CLERK', 'O_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'O_COMMENT', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['SHIPPRIORITY', 'CLERK', 'O_COMMENT']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['TOTALPRICE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#23') & (part['TYPE'].str.startswith('L')) | (part['CONTAINER'] != 'JUMBO') & (part['BRAND'].isin(['Brand#54', 'Brand#33', 'Brand#53', 'Brand#23', 'Brand#35', 'Brand#12', 'Brand#41', 'Brand#43', 'Brand#13'])) | (part['TYPE'].str.startswith('M'))].groupby(by=['SIZE', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['BRAND'].isin(['Brand#24', 'Brand#52', 'Brand#12', 'Brand#14', 'Brand#41', 'Brand#11', 'Brand#54', 'Brand#45', 'Brand#35', 'Brand#13', 'Brand#25', 'Brand#32', 'Brand#33', 'Brand#22', 'Brand#44'])) | (part['P_NAME'] == 'n') | (part['MFGR'] == 'Manufacturer#4')].groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['TYPE'] == 'L') & (part['PT_COMMENT'] == 'q')][['BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[(part['CONTAINER'] == 'WRAP') | (part['SIZE'] >= 36) | (part['PT_COMMENT'] != 's') & (part['BRAND'] == 'Brand#13') | (part['PT_COMMENT'] != 'n') | (part['P_NAME'] == 'p')].groupby(by=['P_PARTKEY', 'TYPE']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] < 117) & (part['MFGR'] == 'Manufacturer#4') | (part['TYPE'] == 'L')].groupby(by=['P_NAME', 'CONTAINER', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#4'])) | (part['P_PARTKEY'] <= 168) | (part['BRAND'] == 'Brand#22')][['BRAND', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[(part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] != 44) & (part['TYPE'].str.startswith('M')) | (part['PT_COMMENT'] == 'f') | (part['PT_COMMENT'].str.startswith('n')) | (part['P_PARTKEY'] <= 126)].groupby(by=['PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] >= 31) | (part['P_PARTKEY'] == 112)][['P_NAME', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4'])) & (part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'] == 'MED') | (part['P_PARTKEY'] > 146) | (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] >= 15) & (part['CONTAINER'] == 'WRAP')][['BRAND', 'SIZE']]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1']))][['BRAND', 'TYPE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[(part['PT_COMMENT'] != 'c') | (part['TYPE'] != 'M') & (part['PT_COMMENT'].str.startswith('u')) | (part['TYPE'] != 'STA')].groupby(by=['PT_COMMENT', 'P_NAME', 'CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] != 't') & (part['TYPE'].str.startswith('S')) | (part['P_PARTKEY'] <= 88) | (part['TYPE'] == 'L') & (part['P_NAME'] == 'g') | (part['RETAILPRICE'] != 944.522531617725) | (part['BRAND'] == 'Brand#11') & (part['TYPE'] == 'S')][['SIZE']]

part[(part['PT_COMMENT'].str.startswith('q')) & (part['RETAILPRICE'] < 1013.2657731685252) | (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] < 55) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1'])) | (part['RETAILPRICE'] > 908.6182128516302) | (part['P_NAME'] == 'p')][['SIZE', 'TYPE']]

part[(part['PT_COMMENT'].str.startswith('the')) & (part['RETAILPRICE'] > 1091.890149874213) & (part['P_PARTKEY'] == 191) | (part['P_NAME'] == 'lem')][['TYPE']].groupby(by=['TYPE']).agg('count')

part[(part['P_NAME'] != 'k')][['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']]

part[(part['P_NAME'] != 't') & (part['CONTAINER'] != 'JUMBO') & (part['BRAND'] != 'Brand#51') & (part['SIZE'] == 42) | (part['P_PARTKEY'] > 59)].groupby(by=['BRAND', 'PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'p')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND']]

part[(part['P_NAME'] == 't') & (part['RETAILPRICE'] < 1089.25461805938) | (part['RETAILPRICE'] <= 1057.9309711491271) & (part['BRAND'].isin(['Brand#44', 'Brand#14', 'Brand#25', 'Brand#13', 'Brand#52', 'Brand#32', 'Brand#12', 'Brand#35', 'Brand#15', 'Brand#42', 'Brand#51', 'Brand#41', 'Brand#53', 'Brand#11', 'Brand#22', 'Brand#23', 'Brand#24', 'Brand#43', 'Brand#54', 'Brand#33'])) | (part['TYPE'].str.startswith('S')) & (part['TYPE'] != 'SMA') | (part['TYPE'] != 'M') | (part['SIZE'] >= 6)][['CONTAINER']]

part[(part['P_PARTKEY'] != 101) | (part['SIZE'] > 5)][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']]

part[(part['P_PARTKEY'] != 69) | (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] < 27) & (part['P_NAME'] == 'blu')][['BRAND', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['P_PARTKEY'] < 160) & (part['MFGR'] != 'Manufacturer#1') | (part['CONTAINER'] != 'MED') & (part['PT_COMMENT'].str.startswith('y'))].groupby(by=['P_PARTKEY', 'MFGR', 'BRAND', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] > 86) & (part['CONTAINER'] == 'LG') | (part['SIZE'] == 32) & (part['P_NAME'] == 'm')][['BRAND', 'MFGR', 'P_NAME', 'CONTAINER', 'PT_COMMENT']]

part[(part['RETAILPRICE'] <= 1070.115500196801) & (part['P_PARTKEY'] < 190) & (part['CONTAINER'] == 'MED') & (part['RETAILPRICE'] == 933.5985045234248) & (part['CONTAINER'] != 'JUMBO') | (part['SIZE'] > 29) | (part['CONTAINER'] == 'LG')].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 1075.6489172087677) & (part['TYPE'] == 'STA') & (part['RETAILPRICE'] < 1071.6857930248234) | (part['MFGR'] == 'Manufacturer#3')].groupby(by=['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] != 35) | (part['RETAILPRICE'] != 962.0539978976211)][['BRAND', 'MFGR', 'SIZE', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']]

part[(part['SIZE'] < 18) & (part['TYPE'] == 'L') & (part['P_PARTKEY'] != 10) | (part['BRAND'] == 'Brand#21') | (part['PT_COMMENT'].str.startswith('ss '))].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part[(part['SIZE'] == 15) & (part['P_PARTKEY'] != 136) | (part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] != 1047.772006197174) & (part['P_NAME'] == 'm') & (part['PT_COMMENT'] != 'x') & (part['MFGR'] != 'Manufacturer#3')].groupby(by=['BRAND']).agg('count')

part[(part['SIZE'] > 11) & (part['P_NAME'].str.startswith('l'))][['RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('count')

part[(part['SIZE'] > 29) & (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] == 938.2685036199359) & (part['SIZE'] >= 25) & (part['PT_COMMENT'] != 'r') | (part['SIZE'] > 15) | (part['RETAILPRICE'] != 934.1936683733874)].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'L') & (part['P_NAME'] == 'g') & (part['PT_COMMENT'] == 'p') & (part['P_PARTKEY'] >= 132) & (part['RETAILPRICE'] >= 970.6311690202411)][['RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE']]

part[(part['TYPE'] != 'STA') & (part['P_PARTKEY'] != 148) | (part['CONTAINER'] == 'LG')][['PT_COMMENT', 'MFGR', 'CONTAINER', 'SIZE', 'BRAND', 'P_NAME']]

part[(part['TYPE'].str.startswith('SMA')) | (part['P_PARTKEY'] != 112) & (part['SIZE'] >= 32)].groupby(by=['PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'TYPE']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['TYPE'].str.startswith('S')) & (part['MFGR'] == 'Manufacturer#2') | (part['BRAND'] == 'Brand#54') | (part['CONTAINER'] == 'JUMBO') & (part['TYPE'] == 'SMA')][['MFGR', 'P_PARTKEY', 'RETAILPRICE']]

part[(part['TYPE'].str.startswith('STA')) | (part['P_NAME'] == 'lin') | (part['MFGR'] != 'Manufacturer#1') | (part['SIZE'] >= 37) & (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'] == 'Brand#41') | (part['TYPE'] == 'L')].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[['BRAND', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME']].groupby(by=['CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'PT_COMMENT', 'SIZE']].groupby(by=['CONTAINER', 'SIZE', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY', 'P_NAME', 'SIZE']].groupby(by=['CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY']).agg('count')

part[['MFGR', 'BRAND', 'SIZE', 'CONTAINER']].groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'MFGR']).agg('max', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[['MFGR', 'TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE']].groupby(by=['TYPE', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[['MFGR', 'TYPE', 'SIZE', 'PT_COMMENT', 'P_NAME']].groupby(by=['MFGR', 'P_NAME', 'TYPE']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'MFGR']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'TYPE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

part[['P_NAME', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['P_NAME', 'RETAILPRICE', 'CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part[['P_NAME', 'SIZE', 'TYPE', 'MFGR']].groupby(by=['P_NAME', 'MFGR', 'SIZE', 'TYPE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME']].groupby(by=['SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER']].groupby(by=['MFGR', 'P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'BRAND', 'CONTAINER']].groupby(by=['PT_COMMENT', 'CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'MFGR', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'BRAND', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE']].groupby(by=['PT_COMMENT', 'MFGR', 'TYPE']).agg('sum', numeric_only=True)

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'TYPE']].groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE', 'TYPE']).agg('count')

part[['TYPE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']].groupby(by=['BRAND', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[['TYPE', 'P_NAME', 'SIZE', 'P_PARTKEY']].groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE']).agg('count')

part[['TYPE', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'MFGR']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[['TYPE', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#22') | (part['P_NAME'].str.startswith('bis')) | (part['PT_COMMENT'] == 'a') | (part['BRAND'] != 'Brand#25') | (part['P_PARTKEY'] != 38) | (part['RETAILPRICE'] >= 1022.1144029483711) & (part['PT_COMMENT'] == 'r') | (part['MFGR'] != 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#3') | (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'] == 'w') & (part['TYPE'] != 'L') | (part['BRAND'].isin(['Brand#52', 'Brand#44', 'Brand#53', 'Brand#15', 'Brand#43', 'Brand#12', 'Brand#24', 'Brand#21', 'Brand#11', 'Brand#42', 'Brand#55'])) & (part['CONTAINER'] == 'SM') | (part['CONTAINER'] == 'MED') | (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith(' ')) | (part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] == 1073.0819684008256)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] < 915.0602561524054) | (part['CONTAINER'] != 'SM') | (part['SIZE'] != 2) & (part['SIZE'] <= 21) & (part['P_PARTKEY'] == 20) & (part['BRAND'] == 'Brand#14') & (part['SIZE'] != 5) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] > 913.9369971418213) | (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] == 21) | (part['SIZE'] <= 24)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['TYPE'].str.startswith('L')) & (part['PT_COMMENT'] != 'b') | (part['SIZE'] < 13) & (part['P_PARTKEY'] <= 123)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp.merge(part[['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] == '.') & (supplier['S_ACCTBAL'] < 1401.0849171915563) | (supplier['S_NAME'] != 'S')][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('2'))][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 7962) & (partsupp['PS_PARTKEY'] == 21) & (partsupp['PS_SUPPKEY'] < 956)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 1521)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 354) & (partsupp['SUPPLYCOST'] >= 831.7879919812508) | (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['PS_SUPPKEY'] <= 1898)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 3042) | (partsupp['P_COMMENT'] == 'the') & (partsupp['SUPPLYCOST'] == 960.0869136132499)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 31) & (partsupp['PS_PARTKEY'] <= 45)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 31) | (partsupp['AVAILQTY'] <= 630) & (partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['AVAILQTY'] >= 120)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 26) | (partsupp['AVAILQTY'] > 5869) & (partsupp['PS_PARTKEY'] <= 43) & (partsupp['SUPPLYCOST'] < 309.1875821065774) & (partsupp['PS_PARTKEY'] <= 23)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] == 13) & (partsupp['AVAILQTY'] > 3217) | (partsupp['SUPPLYCOST'] == 274.11234851974194)][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 38) & (partsupp['PS_PARTKEY'] != 38) | (partsupp['PS_SUPPKEY'] > 5032) | (partsupp['P_COMMENT'].str.startswith('r'))].merge(part[(part['TYPE'].str.startswith('P')) & (part['P_PARTKEY'] < 157)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 7) | (partsupp['PS_PARTKEY'] < 34)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 4) & (partsupp['AVAILQTY'] <= 2570)].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 5833) | (partsupp['AVAILQTY'] < 6161) & (partsupp['PS_SUPPKEY'] == 2984) & (partsupp['PS_PARTKEY'] == 1)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 6266) & (partsupp['SUPPLYCOST'] > 155.3519920344415)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'p') | (partsupp['SUPPLYCOST'] <= 585.4665879940217) & (partsupp['AVAILQTY'] <= 9379) & (partsupp['SUPPLYCOST'] > 861.90201310707) | (partsupp['SUPPLYCOST'] != 596.2863639260557)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']]

partsupp[(partsupp['P_COMMENT'] == ',') | (partsupp['SUPPLYCOST'] != 744.0863961758089) & (partsupp['PS_SUPPKEY'] > 4793)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'v') | (partsupp['AVAILQTY'] <= 7097) & (partsupp['P_COMMENT'] == ' ') | (partsupp['AVAILQTY'] == 2460)].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('b')) & (partsupp['SUPPLYCOST'] < 568.581515788878) | (partsupp['P_COMMENT'] == 'n') & (partsupp['PS_PARTKEY'] < 38)].merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 44.35730107592616) | (partsupp['PS_SUPPKEY'] > 1195) | (partsupp['PS_SUPPKEY'] < 5787)].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 358.71269108709697) | (partsupp['PS_SUPPKEY'] >= 4082)].merge(part[['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 400.6750867191944)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 456.2882045441545)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'f') | (supplier['S_NATIONKEY'] > 7) | (supplier['S_PHONE'] != '17-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['TYPE', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_NAME', 'TYPE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']).agg('count')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'M') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'G')].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] <= 18)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 9)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] == 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= -542.4652328925995) | (supplier['S_ACCTBAL'] >= 9256.074919517001) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 60)][['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_ACCTBAL'] > 6719.071074610828) & (supplier['S_NATIONKEY'] <= 11) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_COMMENT'] == 'd') | (supplier['S_ADDRESS'] != 'O')].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] >= -196.62830627788912) | (supplier['S_ACCTBAL'] < 1766.7240507374443) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 78) & (supplier['S_ADDRESS'].str.startswith('D'))].groupby(by=['S_ADDRESS', 'S_NAME', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_COMMENT'] == 'v') | (supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'] == 'P') | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 't')][['S_SUPPKEY', 'S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_NATIONKEY'] >= 9)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] != 23) | (supplier['S_COMMENT'] == 'a') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] > 84) & (supplier['S_NATIONKEY'] == 23) | (supplier['S_COMMENT'] != 'k') | (supplier['S_ACCTBAL'] != 7407.223345569543)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 1) | (supplier['S_ACCTBAL'] <= -396.55041599039396)][['S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 5) & (supplier['S_NATIONKEY'] > 18) | (supplier['S_SUPPKEY'] > 55) | (supplier['S_COMMENT'] == 's') & (supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] <= 9436.557561426936) | (supplier['S_PHONE'] != '3')].groupby(by=['S_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 1) & (supplier['S_PHONE'] != '17-') | (supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] > 4645.6089564515) | (supplier['S_ADDRESS'] != 'i')][['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] >= 0) & (supplier['S_NATIONKEY'] == 23)][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 14)].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 8) | (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] > 16) | (supplier['S_ADDRESS'] == 'I')][['S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_SUPPKEY'] > 191) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'].str.startswith('k'))][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT']]

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'].str.startswith('y')) & (supplier['S_NATIONKEY'] <= 0) | (supplier['S_COMMENT'].str.startswith('l'))].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] < 5)][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] != 143.9255897658859) & (supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ACCTBAL'] > 6903.483937497084) | (supplier['S_ADDRESS'] != 'S') | (supplier['S_SUPPKEY'] >= 89)][['S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 1642.9693152591574) & (supplier['S_ACCTBAL'] >= 3585.26400048136) & (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_COMMENT'] != 'w') | (supplier['S_ACCTBAL'] < 1087.7795230147956) & (supplier['S_ADDRESS'].str.startswith('8')) & (supplier['S_ADDRESS'] != 'S') | (supplier['S_SUPPKEY'] < 52) | (supplier['S_ACCTBAL'] >= 407.3001307686711)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] > 23) & (supplier['S_PHONE'] == '14-')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ACCTBAL'] < 2871.1140006873366)][['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_COMMENT'].str.startswith('d')) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] == 2905.955039778267) & (supplier['S_COMMENT'] != 'd') | (supplier['S_ADDRESS'].str.startswith('F')) & (supplier['S_NATIONKEY'] != 4)][['S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_PHONE'].str.startswith('3'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] != 738.5889223881891) & (supplier['S_ADDRESS'] == '0')].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 94) | (supplier['S_SUPPKEY'] == 28) | (supplier['S_NATIONKEY'] != 19)][['S_ADDRESS', 'S_NAME']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_NAME', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 's')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 'a') & (nation['N_NATIONKEY'] <= 10) | (nation['N_COMMENT'] == 'l')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] > 12)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] == 17)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 17)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] != 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] < 15)].merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 5262.637796087513) & (customer['C_ADDRESS'].str.startswith('r')) & (customer['C_ADDRESS'] == 'i')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 8517.386049747147) & (customer['C_NATIONKEY'] < 13) | (customer['C_NATIONKEY'] != 7) | (customer['C_ACCTBAL'] <= 8307.43512210878) & (customer['C_NATIONKEY'] > 4)][['C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 1609.9113717779119) & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY'])) & (customer['C_CUSTKEY'] < 16) | (customer['C_ACCTBAL'] != 4228.0153147547235) & (customer['C_ACCTBAL'] < 4357.699568577812) | (customer['C_ACCTBAL'] >= 7543.130404873473)].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] == 3238.4934424768053) & (customer['C_ADDRESS'] != 'F') & (customer['C_COMMENT'].str.startswith('u')) | (customer['C_COMMENT'] == 'h') | (customer['C_NATIONKEY'] < 15) & (customer['C_NAME'].str.startswith('C'))].groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == '7') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING'])) & (customer['C_NATIONKEY'] != 17) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('r'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'E') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] != 'H') & (customer['C_NATIONKEY'] <= 14) & (customer['C_ADDRESS'].str.startswith('d')) | (customer['C_NATIONKEY'] >= 14) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'X') | (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'a') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] != 'P') & (customer['C_ACCTBAL'] >= 872.361973558438) | (customer['C_ACCTBAL'] >= 8092.684402679115) | (customer['C_NAME'] != 'C')][['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[(customer['C_ADDRESS'] == 'r') & (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] > 70) | (customer['C_COMMENT'] != 'h') & (customer['C_ACCTBAL'] != 5802.775029339115)][['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != ',') & (customer['C_NATIONKEY'] == 22)][['C_ADDRESS', 'MKTSEGMENT', 'C_NAME']].groupby(by=['C_NAME', 'C_ADDRESS']).agg('count')

customer[(customer['C_COMMENT'] != ',') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] <= 1969.2185086646232) & (customer['C_COMMENT'].str.startswith('n'))][['C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] != 'e') & (customer['C_CUSTKEY'] == 20)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == 'F') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('o')) & (customer['C_COMMENT'] != ',') | (customer['C_NATIONKEY'] < 18)].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 68) & (customer['C_PHONE'].str.startswith('1'))].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 60) | (customer['C_ACCTBAL'] <= 2375.5817538629612) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] != 7017.899614855527) & (customer['C_NATIONKEY'] >= 2) | (customer['C_COMMENT'] == 'h') & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'i')].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 44) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING'])) & (customer['C_ACCTBAL'] <= 2387.7343414832812)][['C_PHONE', 'C_NAME', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] != ' ')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '2') & (customer['C_ADDRESS'] == 'I') & (customer['C_ADDRESS'].str.startswith('8')) | (customer['C_COMMENT'] == 'u') | (customer['C_PHONE'] != '2') | (customer['C_COMMENT'] != 'l')][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']]

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] == 35) & (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_ACCTBAL'] <= 7613.624098587639)][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 2)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 5) | (customer['C_NATIONKEY'] != 20)].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] != 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY'])) & (customer['C_ACCTBAL'] >= 649.0053591714911) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 9) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 21) | (customer['C_COMMENT'] == ',')][['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY'])) & (customer['C_COMMENT'] == 'w')][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ADDRESS']).agg('count')

customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_CUSTKEY', 'C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('y'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('count')

customer[['C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] < 22)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['MKTSEGMENT', 'C_NAME']).agg('count')

customer[['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] <= 91205) | (orders['O_COMMENT'] == '-') & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] != '1998-07-21') | (orders['TOTALPRICE'] > 196242.94958543254) | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] <= 36522) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['CLERK'].str.startswith('C'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 8)].merge(part[['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 289) & (partsupp['PS_PARTKEY'] == 6)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['L_SUPPKEY'] != 1557)][['DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG', 'RECEIPTDATE']].groupby(by=['SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 3) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['L_SUPPKEY', 'L_PARTKEY', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_COMMENT']]

lineitem[(lineitem['LINENUMBER'] >= 3) & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['L_ORDERKEY'] == 172) & (lineitem['LINENUMBER'] != 3) | (lineitem['DISCOUNT'] != 0.06300757061738753) & (lineitem['L_COMMENT'] == 'y')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == 'g')].merge(partsupp.merge(part[['SIZE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] <= 77152) | (lineitem['EXTENDEDPRICE'] != 12231.182595856526)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['PS_PARTKEY'] >= 43) & (partsupp['AVAILQTY'] < 1803) & (partsupp['P_COMMENT'] != 'p') | (partsupp['P_COMMENT'] == 'f')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] == 158931) | (lineitem['L_ORDERKEY'] <= 126) | (lineitem['EXTENDEDPRICE'] == 55156.07952526188) & (lineitem['L_SUPPKEY'] <= 4142) | (lineitem['L_SUPPKEY'] < 4119)][['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 153120) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_COMMENT'] != ' ') & (lineitem['L_SUPPKEY'] == 8064) | (lineitem['LINESTATUS'] != 'O') | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_PARTKEY'] == 157158) | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['SHIPDATE'] <= '1992-04-27')][['LINENUMBER']]

lineitem[(lineitem['QUANTITY'] <= 26)][['QUANTITY', 'LINENUMBER', 'EXTENDEDPRICE']].groupby(by=['LINENUMBER', 'EXTENDEDPRICE', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 20) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE'])) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_ORDERKEY'] >= 60) | (lineitem['L_PARTKEY'] <= 8879) | (lineitem['L_PARTKEY'] >= 145786) | (lineitem['LINENUMBER'] <= 3) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['DISCOUNT', 'EXTENDEDPRICE']]

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_COMMENT'] != 's. ')][['SHIPMODE', 'RETURNFLAG', 'SHIPDATE', 'LINESTATUS']].groupby(by=['SHIPDATE']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_COMMENT'] != ' re') | (lineitem['SHIPMODE'] != 'AIR') | (lineitem['QUANTITY'] >= 25) & (lineitem['L_COMMENT'] != 'k') | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['DISCOUNT'] > 0.07273174190429221) & (lineitem['EXTENDEDPRICE'] > 46880.94363512824)][['SHIPDATE', 'SHIPINSTRUCT']]

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['TAX'] > 0.05681797075244502) | (lineitem['LINENUMBER'] > 5) & (lineitem['LINESTATUS'] != 'O')][['COMMITDATE', 'L_COMMENT']].groupby(by=['L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['TAX'] > 0.05485126900713589) & (lineitem['L_SUPPKEY'] != 709) | (lineitem['RECEIPTDATE'] <= '1992-05-02')][['L_ORDERKEY']].groupby(by=['L_ORDERKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['RECEIPTDATE', 'DISCOUNT', 'QUANTITY', 'LINENUMBER']].groupby(by=['QUANTITY', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_COMMENT'] == 'q')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['TAX'] < 0.040336448109590556) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON']))].groupby(by=['QUANTITY', 'TAX', 'L_ORDERKEY', 'SHIPMODE', 'DISCOUNT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_ORDERKEY'] == 189) & (lineitem['QUANTITY'] >= 32) & (lineitem['L_SUPPKEY'] != 1883) | (lineitem['COMMITDATE'] == '1992-05-15')].groupby(by=['DISCOUNT', 'L_PARTKEY', 'LINESTATUS']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['DISCOUNT'] != 0.03408809319834349) & (lineitem['EXTENDEDPRICE'] <= 47977.8974321918) & (lineitem['L_SUPPKEY'] <= 6934) | (lineitem['L_PARTKEY'] == 47984)][['LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE']]

lineitem[(lineitem['TAX'] > 0.027462781913264296) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['EXTENDEDPRICE'] > 17223.568016243284)].groupby(by=['EXTENDEDPRICE', 'L_ORDERKEY', 'DISCOUNT', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT', 'SHIPDATE', 'TAX']].groupby(by=['L_COMMENT', 'EXTENDEDPRICE', 'TAX']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'SHIPDATE', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE', 'RECEIPTDATE']].groupby(by=['SHIPDATE', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 5581)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']].groupby(by=['RECEIPTDATE', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'RECEIPTDATE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RECEIPTDATE', 'L_PARTKEY', 'L_COMMENT', 'L_SUPPKEY', 'RETURNFLAG', 'TAX', 'COMMITDATE']].groupby(by=['L_SUPPKEY', 'RETURNFLAG']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] <= 3) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] > 0) & (nation['N_NAME'] == 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] == 20) & (nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] <= 5)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'v') & (nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] != 'n')].merge(region[(region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] >= 8)].merge(region[(region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'h')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] != 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] == 'l')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V') & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 'v') | (nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] == 14) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_COMMENT'] != 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'F') | (nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] < 6)][['N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'G')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] != 1) & (nation['N_NATIONKEY'] != 8)][['N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] != 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 22) & (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 4) | (nation['N_NATIONKEY'] <= 17) | (nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] >= 8)].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 5) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 5)].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 4)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 7)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 16)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] == 3)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_NAME'] == 'E') & (nation['N_COMMENT'] == 'o')][['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] > 6) | (nation['N_NATIONKEY'] <= 20) & (nation['N_NATIONKEY'] <= 9) & (nation['N_NAME'] == 'F')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 19)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] >= 23)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2)][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] > 4) | (nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] < 0) & (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] != 'h')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3)].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'J')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'].str.startswith('n'))][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 3) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'M') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 73) | (customer['C_CUSTKEY'] < 48) & (customer['C_ACCTBAL'] <= 2169.7878274870372) | (customer['C_COMMENT'] != 'i')][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_COMMENT'] == 'p')][['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD']))][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C')].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C')][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['CLERK'] == 'C')][['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT']]

orders[(orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13')][['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] >= 718) | (orders['O_CUSTKEY'] != 29518) & (orders['O_CUSTKEY'] <= 122024) & (orders['TOTALPRICE'] < 274491.4332982336) & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_ORDERKEY'] != 314)][['O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'O')][['TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] <= 50385) | (orders['O_ORDERKEY'] <= 777) | (orders['TOTALPRICE'] <= 74439.33567819794)][['O_ORDERKEY', 'ORDERDATE']].groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] <= 287495.04157702625) & (orders['O_ORDERKEY'] >= 14) | (orders['TOTALPRICE'] >= 324808.75132429134) & (orders['O_CUSTKEY'] < 95572) & (orders['O_COMMENT'] == 'the') & (orders['O_COMMENT'] == 'k') & (orders['ORDERDATE'] != '1998-07-21')][['SHIPPRIORITY', 'TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] == 439) & (orders['TOTALPRICE'] >= 245230.0547325985) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] != 728) | (orders['TOTALPRICE'] <= 202142.93580183023) & (orders['O_CUSTKEY'] <= 23766) | (orders['O_CUSTKEY'] == 14820)][['O_ORDERKEY', 'ORDERDATE']]

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM')][['ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '5-LOW'])) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] >= 349890.2283241553) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] != 38802)].merge(customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_NATIONKEY'] <= 9)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['TOTALPRICE'] <= 215152.55653831884) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERSTATUS'] == 'F')][['SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'].str.startswith('o')) & (orders['TOTALPRICE'] <= 195570.83871587494) | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 58930)].groupby(by=['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O')].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('ly ')) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_COMMENT'] != 'q')][['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 140510) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] != 0)][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['O_CUSTKEY'] == 53081) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'].str.startswith('e'))][['ORDERDATE', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 73640) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['O_COMMENT'] != 'j') & (orders['ORDERDATE'] == '1992-01-13')][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 61489) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'] != 'c') | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] < 83861) | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] >= 117477.02506829984) | (orders['SHIPPRIORITY'] <= 0)][['CLERK', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] != 328) & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != 'h') | (orders['TOTALPRICE'] < 321665.21880264283) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'F')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 486) | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] >= 14390.853169671014) | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] <= '1992-01-13')][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('count')

orders[(orders['TOTALPRICE'] >= 344755.9495038738) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['TOTALPRICE'] != 226162.50444260397) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['ORDERSTATUS'] != 'F')].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['CLERK', 'ORDERSTATUS', 'O_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'O_COMMENT', 'TOTALPRICE']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#51') | (part['P_NAME'].str.startswith('o')) | (part['PT_COMMENT'].str.startswith('ly ')) | (part['PT_COMMENT'] == 'p') & (part['BRAND'].isin(['Brand#11', 'Brand#25', 'Brand#55', 'Brand#51', 'Brand#24', 'Brand#52', 'Brand#21', 'Brand#42', 'Brand#13', 'Brand#54'])) | (part['TYPE'] == 'M')].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#32') & (part['P_PARTKEY'] < 113) & (part['P_NAME'].str.startswith('b')) & (part['MFGR'] != 'Manufacturer#3') | (part['TYPE'] != 'M')].groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['BRAND'] == 'Brand#54') | (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'].isin(['Brand#13', 'Brand#52', 'Brand#11', 'Brand#41', 'Brand#43', 'Brand#21', 'Brand#25', 'Brand#45', 'Brand#35', 'Brand#55', 'Brand#33', 'Brand#54', 'Brand#12', 'Brand#24', 'Brand#34', 'Brand#14', 'Brand#31', 'Brand#51', 'Brand#15'])) & (part['SIZE'] < 31) | (part['RETAILPRICE'] > 906.6725103865219)][['RETAILPRICE', 'MFGR', 'SIZE', 'TYPE', 'P_NAME']]

part[(part['BRAND'].isin(['Brand#24', 'Brand#43', 'Brand#52', 'Brand#55', 'Brand#33', 'Brand#34', 'Brand#21', 'Brand#42', 'Brand#12', 'Brand#53', 'Brand#41', 'Brand#32', 'Brand#31', 'Brand#15', 'Brand#45', 'Brand#14', 'Brand#23', 'Brand#13', 'Brand#22', 'Brand#35', 'Brand#25'])) & (part['TYPE'] == 'M') & (part['RETAILPRICE'] > 1047.4893825893844) | (part['P_NAME'] == 'l') & (part['RETAILPRICE'] < 919.3424420208466) | (part['BRAND'] == 'Brand#24') | (part['BRAND'].isin(['Brand#34', 'Brand#35', 'Brand#25', 'Brand#11', 'Brand#55', 'Brand#13', 'Brand#12', 'Brand#24', 'Brand#31', 'Brand#14', 'Brand#43', 'Brand#54', 'Brand#52', 'Brand#23', 'Brand#42', 'Brand#51', 'Brand#33', 'Brand#41', 'Brand#45', 'Brand#21'])) | (part['MFGR'] != 'Manufacturer#5')][['SIZE', 'CONTAINER']]

part[(part['CONTAINER'] != 'SM') & (part['TYPE'] == 'L') & (part['CONTAINER'] == 'LG') | (part['P_PARTKEY'] > 29)].groupby(by=['P_NAME', 'SIZE', 'BRAND', 'RETAILPRICE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'MED') & (part['BRAND'] != 'Brand#23') | (part['P_PARTKEY'] <= 89) & (part['CONTAINER'] != 'LG') | (part['TYPE'] != 'STA') | (part['MFGR'] != 'Manufacturer#1') & (part['PT_COMMENT'] == 'the') | (part['PT_COMMENT'] != 's')][['CONTAINER', 'PT_COMMENT']]

part[(part['CONTAINER'] == 'SM') | (part['BRAND'] == 'Brand#14') & (part['MFGR'] != 'Manufacturer#1') & (part['PT_COMMENT'].str.startswith(' ')) | (part['SIZE'] == 16) | (part['SIZE'] < 6) | (part['RETAILPRICE'] >= 916.2995532376804) | (part['CONTAINER'] != 'JUMBO')].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) | (part['P_PARTKEY'] == 50) & (part['MFGR'] != 'Manufacturer#4')][['BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER']]

part[(part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] == 'LG') & (part['SIZE'] > 47)][['P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'].str.startswith('SM')) & (part['PT_COMMENT'] != 'd') & (part['TYPE'] == 'L') | (part['SIZE'] >= 26) | (part['P_PARTKEY'] == 130)].groupby(by=['P_PARTKEY', 'SIZE', 'BRAND']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] == 'd') & (part['BRAND'] != 'Brand#21')].groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] > 995.8192405718802) & (part['SIZE'] < 43) | (part['P_PARTKEY'] <= 62)][['BRAND']].groupby(by=['BRAND']).agg('count')

part[(part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] != 'a') & (part['RETAILPRICE'] < 1090.8504743429294) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) | (part['BRAND'].isin(['Brand#55', 'Brand#45', 'Brand#34', 'Brand#42', 'Brand#21', 'Brand#22', 'Brand#14', 'Brand#41', 'Brand#23', 'Brand#43', 'Brand#13', 'Brand#51', 'Brand#25', 'Brand#11', 'Brand#24', 'Brand#15', 'Brand#53', 'Brand#12', 'Brand#52', 'Brand#33', 'Brand#32', 'Brand#31']))].groupby(by=['SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#3') | (part['P_NAME'] != 'blu')][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] < 1090.2822498683256) & (part['BRAND'] != 'Brand#23') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) & (part['P_NAME'].str.startswith('o')) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) & (part['RETAILPRICE'] <= 935.3435640290883) & (part['MFGR'] == 'Manufacturer#1')].groupby(by=['MFGR']).agg('count')

part[(part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] < 25) & (part['SIZE'] >= 37) & (part['PT_COMMENT'].str.startswith('ss ')) | (part['P_PARTKEY'] <= 89)][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'BRAND', 'TYPE']]

part[(part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'].str.startswith('i')) | (part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] == 'STA') & (part['MFGR'] != 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#1')][['BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[(part['MFGR'].isin(['Manufacturer#1'])) | (part['SIZE'] > 1)][['CONTAINER', 'P_NAME', 'SIZE', 'PT_COMMENT']].groupby(by=['CONTAINER']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) | (part['BRAND'] == 'Brand#12') | (part['PT_COMMENT'] != 'q') & (part['SIZE'] == 23) | (part['BRAND'] != 'Brand#44') | (part['P_NAME'] == 's') & (part['SIZE'] == 33) & (part['SIZE'] != 16) | (part['CONTAINER'] != 'WRAP')][['CONTAINER']]

part[(part['PT_COMMENT'] != 'b') | (part['CONTAINER'] == 'SM') & (part['P_NAME'] != 'i') & (part['PT_COMMENT'] == 'h') & (part['CONTAINER'].str.startswith('WRAP'))][['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR']]

part[(part['PT_COMMENT'] != 'ss ') & (part['PT_COMMENT'] != 'w') & (part['PT_COMMENT'].str.startswith('k')) & (part['P_PARTKEY'] != 5) | (part['BRAND'].isin(['Brand#34', 'Brand#44', 'Brand#33', 'Brand#41', 'Brand#35', 'Brand#22', 'Brand#53', 'Brand#45', 'Brand#55', 'Brand#21', 'Brand#13', 'Brand#25', 'Brand#11', 'Brand#23', 'Brand#43', 'Brand#52', 'Brand#14', 'Brand#24', 'Brand#54', 'Brand#42', 'Brand#12', 'Brand#31', 'Brand#32', 'Brand#15', 'Brand#51'])) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2'])) | (part['P_NAME'].str.startswith('h')) & (part['SIZE'] >= 35)][['CONTAINER', 'TYPE']]

part[(part['PT_COMMENT'] != 'y') & (part['BRAND'] != 'Brand#52') & (part['TYPE'] == 'M') & (part['PT_COMMENT'] != 'o') | (part['SIZE'] != 14) | (part['P_NAME'] == 'lin')].groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == '!') & (part['PT_COMMENT'] == 'g') & (part['TYPE'] != 'SMA') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) | (part['TYPE'] != 'STA') | (part['TYPE'] != 'P') | (part['MFGR'] != 'Manufacturer#1')].groupby(by=['TYPE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'g') & (part['BRAND'] == 'Brand#54') | (part['BRAND'] == 'Brand#42') & (part['CONTAINER'] != 'MED') | (part['SIZE'] < 35) | (part['CONTAINER'] == 'LG')].groupby(by=['SIZE', 'PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'n') | (part['BRAND'].isin(['Brand#23', 'Brand#45', 'Brand#43', 'Brand#55', 'Brand#52', 'Brand#14', 'Brand#24', 'Brand#35', 'Brand#34', 'Brand#42', 'Brand#13', 'Brand#21', 'Brand#33', 'Brand#15', 'Brand#51', 'Brand#41', 'Brand#32', 'Brand#54', 'Brand#44', 'Brand#22', 'Brand#31', 'Brand#53', 'Brand#25'])) | (part['P_PARTKEY'] > 145) | (part['P_NAME'].str.startswith('m')) & (part['P_NAME'] != 't') & (part['RETAILPRICE'] == 1007.4424394155836) & (part['MFGR'].isin(['Manufacturer#5'])) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4']))].groupby(by=['TYPE']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'o') | (part['SIZE'] >= 18) & (part['CONTAINER'] == 'JUMBO') & (part['BRAND'] != 'Brand#53') | (part['RETAILPRICE'] == 990.9173132602939)][['P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('!')) | (part['BRAND'] != 'Brand#45') | (part['P_NAME'] == 'cor') & (part['BRAND'].isin(['Brand#41', 'Brand#51', 'Brand#45'])) & (part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'].str.startswith('r'))][['RETAILPRICE', 'BRAND', 'P_NAME', 'PT_COMMENT']]

part[(part['P_NAME'] != 'blu') & (part['PT_COMMENT'] != 'c') | (part['PT_COMMENT'] == 'k') & (part['TYPE'] == 'P')].groupby(by=['P_PARTKEY', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_NAME']).agg('count')

part[(part['P_NAME'] != 's') & (part['MFGR'] != 'Manufacturer#4') & (part['CONTAINER'] == 'WRAP') & (part['BRAND'] != 'Brand#55') & (part['P_NAME'] != 'i') | (part['BRAND'] == 'Brand#15') | (part['P_NAME'].str.startswith('i'))].groupby(by=['MFGR', 'TYPE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 's') | (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] > 34) | (part['P_PARTKEY'] > 120)].groupby(by=['PT_COMMENT', 'SIZE', 'BRAND', 'P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 's') | (part['P_PARTKEY'] != 168) | (part['RETAILPRICE'] == 1009.7556642962202) & (part['PT_COMMENT'] == 'u') | (part['P_NAME'] == 'l') | (part['P_NAME'] == 'a') & (part['PT_COMMENT'].str.startswith('n')) | (part['RETAILPRICE'] == 1072.4910284836496)].groupby(by=['P_NAME']).agg('count')

part[(part['P_NAME'] == 't') | (part['TYPE'] != 'E') & (part['P_NAME'].str.startswith('b')) & (part['RETAILPRICE'] >= 1042.2867002905302) | (part['CONTAINER'] != 'JUMBO') & (part['SIZE'] > 10) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'] == 'o')].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 138) & (part['SIZE'] <= 21) | (part['P_PARTKEY'] == 3)][['P_NAME', 'CONTAINER']].groupby(by=['P_NAME', 'CONTAINER']).agg('count')

part[(part['P_PARTKEY'] < 168) | (part['PT_COMMENT'].str.startswith('a')) & (part['P_PARTKEY'] != 133) & (part['TYPE'] != 'STA') | (part['P_PARTKEY'] <= 194) | (part['SIZE'] >= 18) | (part['P_PARTKEY'] >= 103) | (part['SIZE'] > 8)].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 70) & (part['RETAILPRICE'] > 1060.095472664517) & (part['PT_COMMENT'] != '!') & (part['P_NAME'].str.startswith('v')) & (part['P_PARTKEY'] >= 139) | (part['BRAND'] != 'Brand#44')].groupby(by=['MFGR', 'P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] <= 65) & (part['MFGR'] == 'Manufacturer#1') & (part['RETAILPRICE'] != 989.7090400205213) & (part['SIZE'] <= 3)][['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'BRAND', 'MFGR']]

part[(part['P_PARTKEY'] <= 88) & (part['CONTAINER'] != 'JUMBO') & (part['SIZE'] != 14) | (part['PT_COMMENT'] != 'u') & (part['P_NAME'] == 't') & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] < 168) | (part['CONTAINER'] != 'SM')].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] > 142)][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[(part['RETAILPRICE'] < 991.7347889055444) & (part['RETAILPRICE'] == 1061.5304623857062) | (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] != 68) | (part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'] == 'w') | (part['PT_COMMENT'] == 'a')].groupby(by=['SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] == 1055.5344792736569) | (part['PT_COMMENT'] != 'k') | (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'] == 'STA') & (part['BRAND'].isin(['Brand#54', 'Brand#55', 'Brand#53', 'Brand#52', 'Brand#13', 'Brand#24', 'Brand#12', 'Brand#21', 'Brand#51', 'Brand#25', 'Brand#32', 'Brand#31', 'Brand#14', 'Brand#42', 'Brand#44'])) & (part['P_NAME'] == 'r') & (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'].isin(['Brand#41', 'Brand#45', 'Brand#52', 'Brand#35', 'Brand#14', 'Brand#51', 'Brand#23', 'Brand#22', 'Brand#15', 'Brand#25', 'Brand#42', 'Brand#12', 'Brand#21', 'Brand#13', 'Brand#53', 'Brand#44', 'Brand#54', 'Brand#11', 'Brand#31', 'Brand#33', 'Brand#55', 'Brand#34', 'Brand#32']))].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[(part['SIZE'] <= 38) & (part['RETAILPRICE'] < 1088.2247789915102) & (part['RETAILPRICE'] >= 1004.0107709014588) | (part['TYPE'] == 'L') | (part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['P_PARTKEY', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] > 16) | (part['RETAILPRICE'] >= 915.9822174120027) & (part['P_NAME'] != 'v')][['BRAND', 'MFGR', 'TYPE', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['SIZE'] > 34) | (part['PT_COMMENT'] != 'h') | (part['SIZE'] == 8) & (part['CONTAINER'] == 'MED')].groupby(by=['SIZE', 'BRAND', 'CONTAINER', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'S')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']].groupby(by=['CONTAINER']).agg('count')

part[(part['TYPE'] != 'S')][['RETAILPRICE', 'TYPE', 'P_PARTKEY', 'P_NAME']].groupby(by=['TYPE', 'RETAILPRICE']).agg('count')

part[(part['TYPE'] != 'STA') & (part['BRAND'].isin(['Brand#25', 'Brand#41', 'Brand#45', 'Brand#43', 'Brand#15', 'Brand#12', 'Brand#53', 'Brand#24', 'Brand#13', 'Brand#33', 'Brand#22', 'Brand#51', 'Brand#52', 'Brand#44', 'Brand#32', 'Brand#35', 'Brand#42', 'Brand#14', 'Brand#23', 'Brand#21', 'Brand#55', 'Brand#54', 'Brand#34', 'Brand#31', 'Brand#11'])) | (part['SIZE'] >= 33) | (part['TYPE'].str.startswith('M'))][['TYPE', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['TYPE'] == 'SMA') | (part['P_NAME'] != 'h') & (part['TYPE'].str.startswith('E')) & (part['TYPE'].str.startswith('STA')) | (part['PT_COMMENT'] != 'c') | (part['SIZE'] > 16)][['BRAND', 'TYPE', 'RETAILPRICE', 'CONTAINER']]

part[(part['TYPE'] == 'STA') | (part['TYPE'] != 'SMA') & (part['RETAILPRICE'] > 962.1415885479221) & (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'] != 'p') | (part['SIZE'] >= 7) & (part['SIZE'] < 43)].groupby(by=['RETAILPRICE', 'BRAND']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) & (part['BRAND'] != 'Brand#23') | (part['SIZE'] <= 19) | (part['CONTAINER'] == 'SM')].groupby(by=['SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

part[(part['TYPE'].str.startswith('S')) | (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'] == 'Brand#41') | (part['P_PARTKEY'] >= 158) | (part['TYPE'] != 'M') | (part['SIZE'] == 4) | (part['SIZE'] == 47) | (part['P_PARTKEY'] == 109)][['P_PARTKEY', 'TYPE']]

part[['BRAND', 'P_NAME', 'TYPE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER']].groupby(by=['TYPE', 'BRAND']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['SIZE', 'P_NAME', 'CONTAINER', 'PT_COMMENT']).agg('count')

part[['CONTAINER', 'SIZE', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']].groupby(by=['CONTAINER', 'SIZE', 'MFGR']).agg('min', numeric_only=True)

part[['CONTAINER', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

part[['MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

part[['MFGR', 'P_NAME', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']].groupby(by=['SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR']).agg('count')

part[['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']].groupby(by=['CONTAINER', 'RETAILPRICE', 'BRAND']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'MFGR']].groupby(by=['P_NAME', 'CONTAINER', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'MFGR', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME']].groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'MFGR', 'TYPE', 'P_NAME']].groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME', 'CONTAINER']].groupby(by=['PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['TYPE']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part[['SIZE', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']].groupby(by=['SIZE', 'TYPE', 'P_NAME', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'JUMBO') & (part['PT_COMMENT'].str.startswith('i')) & (part['RETAILPRICE'] != 1068.9283879234158) & (part['BRAND'] == 'Brand#15') & (part['CONTAINER'] != 'MED') & (part['P_NAME'].str.startswith('lem')) & (part['MFGR'] == 'Manufacturer#4') | (part['TYPE'].str.startswith('SMA')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] == 'a') & (part['PT_COMMENT'] != 'kag') & (part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] <= 43) | (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] == 971.2127982044652)][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] < 904.0254202432607) | (part['P_PARTKEY'] < 80) | (part['MFGR'] == 'Manufacturer#2') | (part['P_PARTKEY'] <= 131) & (part['BRAND'] == 'Brand#22') & (part['RETAILPRICE'] == 1052.5884197060402) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) | (part['RETAILPRICE'] >= 1001.8587562594289) & (part['RETAILPRICE'] != 952.3758987737075)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] <= 10)][['BRAND', 'TYPE', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 349.8144240107413) | (supplier['S_PHONE'] != '17-') & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'] != 'L') | (supplier['S_ACCTBAL'] == 2021.597703604092)][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'p') | (supplier['S_COMMENT'] == 'x') & (supplier['S_SUPPKEY'] == 190) & (supplier['S_SUPPKEY'] >= 90) | (supplier['S_COMMENT'].str.startswith('w'))][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('e')) | (supplier['S_COMMENT'].str.startswith('r'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 8240)].merge(supplier[(supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] >= 169)][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2855) & (partsupp['PS_SUPPKEY'] < 7426)].merge(part[(part['P_NAME'] != 'o')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 8738) | (partsupp['PS_SUPPKEY'] != 7174) | (partsupp['PS_SUPPKEY'] != 5896) & (partsupp['PS_SUPPKEY'] < 4075) | (partsupp['AVAILQTY'] != 1226)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 2840) & (partsupp['SUPPLYCOST'] > 49.76300859931128) & (partsupp['SUPPLYCOST'] > 605.7502531341567)].merge(part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 20) | (partsupp['SUPPLYCOST'] != 420.8881431458354) & (partsupp['SUPPLYCOST'] == 461.24085996471996) | (partsupp['AVAILQTY'] != 1184) & (partsupp['PS_SUPPKEY'] <= 1419)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 21) | (partsupp['P_COMMENT'] == 'l') | (partsupp['P_COMMENT'] == 'p') | (partsupp['SUPPLYCOST'] == 342.01479512711177)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 1651) | (partsupp['PS_SUPPKEY'] < 331) | (partsupp['PS_SUPPKEY'] != 2066) | (partsupp['SUPPLYCOST'] != 233.8213964384138) | (partsupp['SUPPLYCOST'] < 888.6126781105693)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 3795) | (partsupp['P_COMMENT'] != 'i')].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 17) & (nation['N_COMMENT'] == 'l')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 6270) & (partsupp['PS_SUPPKEY'] > 5742)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4375) | (partsupp['AVAILQTY'] == 6348) & (partsupp['AVAILQTY'] >= 9616)].merge(supplier[(supplier['S_ACCTBAL'] >= 9755.942349740577)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2855)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 2887) | (partsupp['SUPPLYCOST'] > 742.4701816985748) | (partsupp['AVAILQTY'] > 2719)].merge(part[(part['P_PARTKEY'] == 137) | (part['MFGR'] != 'Manufacturer#2') | (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'].str.startswith('k'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 1237)].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'v') & (partsupp['PS_PARTKEY'] <= 16) | (partsupp['PS_PARTKEY'] <= 6)][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['PS_PARTKEY'] < 20) | (partsupp['P_COMMENT'] == 'f')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['AVAILQTY'] != 158)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['AVAILQTY'] == 7025) | (partsupp['AVAILQTY'] <= 1566) | (partsupp['P_COMMENT'] == ',')][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 713.2261151804917) | (partsupp['SUPPLYCOST'] > 134.56536121950361) | (partsupp['SUPPLYCOST'] > 945.69279743034)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 142.92966700205375) | (partsupp['AVAILQTY'] == 6194) & (partsupp['AVAILQTY'] > 3848) | (partsupp['PS_SUPPKEY'] <= 428)].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 202.63353463996916) & (partsupp['PS_SUPPKEY'] >= 2970) | (partsupp['SUPPLYCOST'] <= 754.6936640807902) & (partsupp['SUPPLYCOST'] == 400.4403344351039) & (partsupp['PS_PARTKEY'] < 27)].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE']).agg('count')

partsupp[['PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'MED')][['P_NAME', 'TYPE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['SIZE'] <= 11) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4'])) & (part['PT_COMMENT'] == 'o') | (part['TYPE'] != 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 21) & (supplier['S_NATIONKEY'] != 15)][['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 3) & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == 'n') | (nation['N_NATIONKEY'] == 12)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('U'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] > 8)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 5) & (nation['N_NATIONKEY'] > 7)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 11)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 18) & (nation['N_NAME'] != 'V') | (nation['N_NAME'].str.startswith('M'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_NATIONKEY'] <= 12) | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'F')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= -612.28064043834) | (supplier['S_COMMENT'] == ',') | (supplier['S_PHONE'].str.startswith('14-'))][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 7018.130974256989)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '2') & (supplier['S_SUPPKEY'] <= 6) | (supplier['S_SUPPKEY'] <= 158)][['S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'O') | (supplier['S_NATIONKEY'] <= 19) | (supplier['S_SUPPKEY'] == 30) | (supplier['S_SUPPKEY'] != 95)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] == 'x') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 5) | (supplier['S_PHONE'] == '26-') | (supplier['S_ADDRESS'] != 'd')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_ADDRESS'] == '7') | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 2116.3377455243117)][['S_NAME']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'o') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'g') | (supplier['S_NATIONKEY'] <= 2)].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] == 'bli') & (supplier['S_ADDRESS'] != 'B') | (supplier['S_COMMENT'] != 'g') | (supplier['S_ACCTBAL'] <= 1135.7165860360913) | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'n')].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_SUPPKEY'] != 132) | (supplier['S_SUPPKEY'] >= 194) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] < -169.3238514167217) & (supplier['S_PHONE'].str.startswith('3'))][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_SUPPKEY'] >= 52) & (supplier['S_ACCTBAL'] <= 6954.319966493458) | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_PHONE'] != '2') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'] == 'O')][['S_COMMENT', 'S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] < 4758.894853351542) | (supplier['S_NATIONKEY'] > 13) & (supplier['S_ADDRESS'] == '9') & (supplier['S_NATIONKEY'] <= 2) | (supplier['S_ADDRESS'] == 'j')][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'f') | (supplier['S_ACCTBAL'] >= 9316.193603363174) | (supplier['S_NATIONKEY'] != 8) & (supplier['S_NATIONKEY'] < 5) | (supplier['S_ACCTBAL'] != -593.5732044775942)].merge(nation[(nation['N_NAME'] == 'R')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 4)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'bli') | (supplier['S_NATIONKEY'] >= 14) & (supplier['S_SUPPKEY'] >= 116) | (supplier['S_NATIONKEY'] < 16)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']]

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_PHONE'] == '14-') | (supplier['S_ADDRESS'] == 'l') & (supplier['S_ACCTBAL'] == 7122.10765088866) | (supplier['S_PHONE'] != '28-') & (supplier['S_ADDRESS'] == '8') | (supplier['S_COMMENT'] != 's')].groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 3) & (supplier['S_PHONE'] != '2') & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] == 5324.345295551525)].groupby(by=['S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 17) & (supplier['S_NATIONKEY'] != 15) | (supplier['S_COMMENT'] == 'b') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'h') | (supplier['S_NAME'].str.startswith('S'))].groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 0)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 3)][['S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '2')].merge(nation[(nation['N_NATIONKEY'] <= 16) | (nation['N_NAME'] != 'V') | (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_NATIONKEY'] == 14) & (supplier['S_NATIONKEY'] > 23)][['S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 68) & (supplier['S_NATIONKEY'] != 13) | (supplier['S_ADDRESS'].str.startswith('o')) | (supplier['S_NATIONKEY'] != 21) | (supplier['S_ACCTBAL'] != 8886.098116883602)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 31) | (supplier['S_PHONE'] == '1') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ACCTBAL'] <= 6966.726958965088)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[(supplier['S_SUPPKEY'] >= 165) & (supplier['S_SUPPKEY'] < 167) & (supplier['S_COMMENT'] != 'es ')][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_SUPPKEY'] >= 45) & (supplier['S_ADDRESS'] != 'd')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

supplier[['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NATIONKEY'] == 13) | (nation['N_NAME'] != 'C')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']).agg('count')

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 7)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'l')].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'] != 'S')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] == 'v') | (nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('P'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 10)].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] < 16)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 6) | (nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'] != 'i')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == 'v')].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 1017.3387009020078) & (customer['C_PHONE'] != '22-') | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] <= 7) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] >= 9247.04815737165)][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_ACCTBAL'] <= 2604.9833690861506)].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'] == 'C') & (nation['N_NATIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('y'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 6757.056295988465) & (customer['C_COMMENT'].str.startswith('s')) | (customer['C_CUSTKEY'] > 82) | (customer['C_ADDRESS'].str.startswith('o')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] > 7)][['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_ACCTBAL'] > 9444.705258489928) | (customer['C_PHONE'] == '3') | (customer['C_NAME'] != 'C')][['C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 2394.7494329243527)][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']].groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('count')

customer[(customer['C_ACCTBAL'] >= 3092.1864299908766) & (customer['C_CUSTKEY'] <= 47)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 7708.149648083578) | (customer['C_ACCTBAL'] == 6474.792765301579) | (customer['C_NATIONKEY'] == 11) | (customer['C_CUSTKEY'] == 74) & (customer['C_ACCTBAL'] > 3032.37928208291)][['C_ACCTBAL', 'C_PHONE']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('3')) & (customer['C_NATIONKEY'] <= 0) & (customer['C_PHONE'] == '13-') | (customer['C_NATIONKEY'] != 10) & (customer['C_ACCTBAL'] >= 2517.1168202904555) | (customer['C_NATIONKEY'] == 12) & (customer['C_NAME'].str.startswith('C'))].groupby(by=['C_NAME', 'C_COMMENT', 'MKTSEGMENT']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('o'))].merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_NATIONKEY'] > 6) | (nation['N_COMMENT'].str.startswith('e'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'y') & (customer['C_NATIONKEY'] <= 8) | (customer['C_NATIONKEY'] == 19) & (customer['C_PHONE'] != '1') | (customer['C_NATIONKEY'] != 22) & (customer['C_NATIONKEY'] < 12)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('k')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 4) | (customer['C_NATIONKEY'] != 13) & (customer['C_COMMENT'] != 'd') & (customer['C_COMMENT'] != 'h') & (customer['C_COMMENT'].str.startswith('g'))][['C_NAME', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] <= 7) & (customer['C_CUSTKEY'] <= 16) | (customer['C_PHONE'] == '27-') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'c') & (customer['C_ADDRESS'] != 'X') | (customer['C_COMMENT'] != 'w') & (customer['C_CUSTKEY'] < 59) | (customer['C_PHONE'] != '27-')][['C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'y') | (customer['C_ADDRESS'] != 'j') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'h')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] <= 4802.880934085632) & (customer['C_PHONE'] != '13-') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'l')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] != 11) & (customer['C_NATIONKEY'] <= 22) & (customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 16) | (customer['C_ACCTBAL'] < 4149.896972545535) | (customer['C_NATIONKEY'] == 9) & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_PHONE', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_PHONE']).agg('count')

customer[(customer['C_NATIONKEY'] == 17) | (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 10) | (customer['C_ACCTBAL'] > 9129.38315634798) | (customer['C_ADDRESS'] == 'Q') | (customer['C_ADDRESS'] != 'd') | (customer['C_CUSTKEY'] <= 3)][['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']]

customer[(customer['C_NATIONKEY'] > 5) | (customer['C_NATIONKEY'] != 21) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] >= 8877.799051264077) | (customer['C_ADDRESS'] == 'v') & (customer['C_ACCTBAL'] <= 7718.260438397936)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT']]

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] >= 71) | (customer['C_ACCTBAL'] >= 8558.89156661816) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] != 9571.281495559708)].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] >= 2)][['C_NATIONKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'C')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 78) | (customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] != 'p')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] != 20)][['C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 8) | (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_NAME']).agg('count')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] >= 249646.51764428586) | (orders['O_COMMENT'] == 'i')][['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] == '1998-07-21')][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] <= 330247.82928721275) & (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] > 82494.35243283316) & (orders['O_ORDERKEY'] > 475) | (orders['ORDERSTATUS'] == 'F')][['TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['P_NAME'] == 'lem')][['MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 2455) & (partsupp['AVAILQTY'] < 9466) & (partsupp['PS_PARTKEY'] < 36)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 9275) & (partsupp['PS_SUPPKEY'] != 6453) | (partsupp['P_COMMENT'] == 'q')].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 48) | (partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['PS_SUPPKEY'] > 5642)][['PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] != 15) | (part['PT_COMMENT'].str.startswith('n')) & (part['SIZE'] != 33) | (part['TYPE'].str.startswith('STA'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_ORDERKEY'] >= 1) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['LINENUMBER'] == 2) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['L_ORDERKEY']]

lineitem[(lineitem['DISCOUNT'] >= 0.0024274715487633824) & (lineitem['DISCOUNT'] != 0.03890871777530376) | (lineitem['DISCOUNT'] != 0.02364079814379354) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['EXTENDEDPRICE'] < 52017.72448759674)][['L_COMMENT', 'EXTENDEDPRICE']].groupby(by=['L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['TAX'] > 0.03978835084056422) & (lineitem['TAX'] < 0.014013160925204939) | (lineitem['LINENUMBER'] == 4) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['QUANTITY'] >= 43) & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['TAX'] < 0.02750678159204881)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != 'i') & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['RETURNFLAG'].isin(['R', 'N'])) | (lineitem['L_COMMENT'] != ' ') & (lineitem['QUANTITY'] <= 35) | (lineitem['L_ORDERKEY'] != 6) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_COMMENT'] != 'f') | (lineitem['L_SUPPKEY'] == 4895)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] >= 92235) | (lineitem['LINESTATUS'] != 'F') & (lineitem['LINESTATUS'] == 'F') | (lineitem['L_COMMENT'] == ' ') & (lineitem['QUANTITY'] < 33)].groupby(by=['LINESTATUS', 'L_SUPPKEY', 'LINENUMBER', 'SHIPMODE', 'DISCOUNT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] < 6349) | (lineitem['L_ORDERKEY'] == 29) | (lineitem['COMMITDATE'] >= '1992-05-15')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] < 7954)][['EXTENDEDPRICE', 'SHIPMODE', 'TAX', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS']]

lineitem[(lineitem['L_SUPPKEY'] > 4108) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['L_SUPPKEY'] != 4202) | (lineitem['L_SUPPKEY'] <= 1094) | (lineitem['RETURNFLAG'] == 'A')][['QUANTITY', 'SHIPMODE', 'TAX', 'SHIPDATE']]

lineitem[(lineitem['L_SUPPKEY'] >= 4517) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL', 'TRUCK', 'SHIP', 'FOB'])) | (lineitem['L_PARTKEY'] > 46970)][['SHIPDATE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 49) & (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['L_SUPPKEY'] >= 9482) | (lineitem['LINENUMBER'] > 3) & (lineitem['LINENUMBER'] == 2) & (lineitem['SHIPDATE'] <= '1992-04-27')][['TAX', 'LINENUMBER', 'DISCOUNT', 'LINESTATUS', 'L_COMMENT']]

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('s'))], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['EXTENDEDPRICE'] == 59289.095686855944) & (lineitem['L_PARTKEY'] != 53126) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['EXTENDEDPRICE'] == 77665.22623259068) & (lineitem['L_ORDERKEY'] == 176) & (lineitem['L_SUPPKEY'] != 7553)][['SHIPINSTRUCT']]

lineitem[['DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('count')

lineitem[['LINESTATUS', 'EXTENDEDPRICE', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPDATE']].groupby(by=['LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPDATE', 'L_ORDERKEY']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'QUANTITY', 'DISCOUNT', 'L_ORDERKEY', 'LINESTATUS', 'EXTENDEDPRICE']].groupby(by=['L_PARTKEY', 'LINESTATUS', 'QUANTITY', 'L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'LINESTATUS', 'DISCOUNT', 'SHIPMODE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'RETURNFLAG', 'TAX']].groupby(by=['SHIPINSTRUCT']).agg('min', numeric_only=True)

lineitem[['SHIPDATE', 'TAX', 'COMMITDATE', 'QUANTITY', 'SHIPINSTRUCT', 'L_COMMENT']].groupby(by=['QUANTITY', 'L_COMMENT', 'SHIPDATE', 'TAX']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'E') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'h') & (nation['N_NAME'] == 'P')].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'].str.startswith('l')) | (nation['N_COMMENT'] != 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 'l')].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'n')].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] == 'n') | (nation['N_NAME'].str.startswith('J'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') | (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'M') & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'] != 'G') & (nation['N_COMMENT'] == 'c')].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'] != 'r') | (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] < 2) | (nation['N_NAME'].str.startswith('K'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'C')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'] == 'G') & (nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'C')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] == 'V')].merge(region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'F')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] != 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] == 'C')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 1) | (nation['N_NATIONKEY'] < 16) & (nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] == 'h')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 23)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 5)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 5)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 7) & (nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 10) | (nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] == 5)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 11)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 23)].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 2) | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 6)][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_NATIONKEY'] <= 23)].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 3)].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 4)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] > 21)].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 6) | (nation['N_NATIONKEY'] <= 22) | (nation['N_NATIONKEY'] > 16)].merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] >= 4)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] != 't')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'A')].merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'V') | (nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] == 22)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'S')].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] > 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 's')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 10)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'] == 'I')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'] == 't') & (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 11) | (nation['N_NAME'] != 'B')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 17) & (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == 'i') & (nation['N_NATIONKEY'] != 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == '6') | (customer['C_NATIONKEY'] == 18) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'v')][['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] < 60) & (customer['C_ADDRESS'].str.startswith('R')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) | (customer['C_COMMENT'] != 'o')][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 19) | (customer['C_CUSTKEY'] == 81) & (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'].str.startswith('2'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] == 34) & (customer['C_NATIONKEY'] >= 12) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 31)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] <= 78886.0631371667) & (orders['O_COMMENT'] != 'w') | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] >= 308689.4777624976) | (orders['TOTALPRICE'] != 20658.714628595153) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['TOTALPRICE'] == 258593.79970885796)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] >= 280)].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERDATE'] < '1992-01-13')][['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21')][['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE']].groupby(by=['ORDERDATE', 'O_COMMENT', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] != 'h') & (orders['O_ORDERKEY'] >= 270) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 151632.88537244205) | (orders['O_CUSTKEY'] != 24499)][['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE']]

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'] != 'l')][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] >= 335506.2779765331) | (orders['ORDERPRIORITY'] != '5-LOW')][['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] >= 662) | (orders['O_COMMENT'] == 'o')].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] == 54489.38249159361) | (orders['ORDERPRIORITY'] == '2-HIGH')][['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] < 262926.977493488) | (orders['ORDERSTATUS'] == 'P')][['O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY']]

orders[(orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'] == 'O')][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']]

orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 89207)].merge(customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'h') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] == 107242.65210033601) | (orders['TOTALPRICE'] <= 274773.88389211724) | (orders['TOTALPRICE'] >= 188226.61510151482)].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 't') & (orders['O_CUSTKEY'] <= 131895)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('i')) | (orders['TOTALPRICE'] >= 350516.5492772658) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'O')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] != 139) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] < 192) | (orders['ORDERDATE'] <= '1992-01-13')][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 275896.61131877545) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] < 121) & (orders['ORDERSTATUS'].isin(['O', 'P']))].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 166674.33860282227)][['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERDATE']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT']].groupby(by=['O_COMMENT', 'CLERK', 'ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']).agg('count')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERDATE', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE']].groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].groupby(by=['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']).agg('count')

orders[['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#12') & (part['RETAILPRICE'] > 1058.7209910152708) | (part['RETAILPRICE'] != 903.3827991481306) | (part['RETAILPRICE'] != 1048.7804890134166) | (part['BRAND'].isin(['Brand#15', 'Brand#43', 'Brand#24', 'Brand#52', 'Brand#42', 'Brand#14', 'Brand#55', 'Brand#51', 'Brand#12', 'Brand#25', 'Brand#23', 'Brand#33', 'Brand#34', 'Brand#41', 'Brand#53', 'Brand#31', 'Brand#13', 'Brand#32', 'Brand#54']))][['RETAILPRICE', 'MFGR', 'SIZE', 'TYPE', 'BRAND', 'CONTAINER']]

part[(part['BRAND'] != 'Brand#52') & (part['P_NAME'] == 'bis') & (part['PT_COMMENT'] != 't') | (part['SIZE'] < 20) & (part['SIZE'] >= 48) | (part['P_PARTKEY'] != 108) & (part['SIZE'] < 31) & (part['MFGR'] != 'Manufacturer#3')].groupby(by=['MFGR', 'BRAND']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#32') & (part['CONTAINER'] != 'MED') | (part['SIZE'] > 19) & (part['TYPE'].str.startswith('STA')) & (part['SIZE'] == 1) & (part['BRAND'] == 'Brand#25')].groupby(by=['P_NAME', 'BRAND', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#41') & (part['CONTAINER'] == 'MED') | (part['PT_COMMENT'].str.startswith(' ')) | (part['RETAILPRICE'] >= 1064.222977481986) & (part['MFGR'] != 'Manufacturer#5') | (part['SIZE'] < 4) | (part['P_NAME'] == 'n')][['P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']]

part[(part['BRAND'].isin(['Brand#52', 'Brand#22', 'Brand#21', 'Brand#13', 'Brand#43', 'Brand#34', 'Brand#41', 'Brand#15', 'Brand#44', 'Brand#45', 'Brand#33', 'Brand#25', 'Brand#11', 'Brand#54', 'Brand#31', 'Brand#23', 'Brand#14', 'Brand#51', 'Brand#32', 'Brand#55', 'Brand#53'])) & (part['P_NAME'].str.startswith('blu')) | (part['SIZE'] == 33) | (part['BRAND'].isin(['Brand#55', 'Brand#22', 'Brand#15', 'Brand#44', 'Brand#14', 'Brand#23', 'Brand#33'])) & (part['BRAND'].isin(['Brand#33', 'Brand#23', 'Brand#11', 'Brand#15'])) & (part['PT_COMMENT'] != 'm') | (part['RETAILPRICE'] <= 962.0337512344873) & (part['BRAND'] == 'Brand#11')].groupby(by=['PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') | (part['P_NAME'].str.startswith('o')) & (part['RETAILPRICE'] >= 959.1561739130151) | (part['CONTAINER'].str.startswith('LG')) | (part['P_PARTKEY'] >= 131) | (part['BRAND'] != 'Brand#41')].groupby(by=['CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'MED') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] >= 18)][['P_PARTKEY', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') & (part['TYPE'] != 'S') | (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] >= 67) & (part['RETAILPRICE'] >= 1091.9075717296005) & (part['RETAILPRICE'] < 963.945140830349)].groupby(by=['CONTAINER', 'TYPE', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['P_NAME'].str.startswith('lem')) | (part['SIZE'] >= 40) & (part['CONTAINER'] == 'SM')][['P_PARTKEY', 'BRAND']].groupby(by=['P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] >= 124) & (part['P_PARTKEY'] < 78) | (part['PT_COMMENT'] != 'b') & (part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#25')].groupby(by=['TYPE', 'P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#1') | (part['SIZE'] >= 19) & (part['P_PARTKEY'] > 71) & (part['P_PARTKEY'] > 140) | (part['P_PARTKEY'] > 163)].groupby(by=['P_PARTKEY', 'BRAND', 'SIZE']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) | (part['RETAILPRICE'] < 1094.56545349518) & (part['PT_COMMENT'].str.startswith('w'))][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) & (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'] != 't') & (part['TYPE'].str.startswith('P')) & (part['P_PARTKEY'] == 30) & (part['PT_COMMENT'] != 'c') & (part['TYPE'] == 'P') & (part['PT_COMMENT'].str.startswith('m'))].groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] != 'a') & (part['RETAILPRICE'] <= 919.7161144949355)][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']]

part[(part['PT_COMMENT'] != 'i')][['P_NAME', 'TYPE', 'CONTAINER', 'MFGR']].groupby(by=['TYPE', 'MFGR', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'kag') & (part['CONTAINER'] != 'MED') | (part['P_NAME'].str.startswith('a')) & (part['MFGR'] != 'Manufacturer#4') & (part['CONTAINER'] != 'JUMBO') & (part['TYPE'] != 'L')][['MFGR']].groupby(by=['MFGR']).agg('count')

part[(part['PT_COMMENT'] != 'kag') | (part['P_NAME'] != 's') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2'])) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) & (part['CONTAINER'].str.startswith('SM')) & (part['TYPE'] == 'STA') & (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] <= 8) | (part['PT_COMMENT'] == 'o')].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == ' ') | (part['P_NAME'] != 'y')][['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 'ss ') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['TYPE'].str.startswith('E')) | (part['SIZE'] <= 48) | (part['TYPE'].str.startswith('STA')) | (part['SIZE'] != 46) & (part['P_PARTKEY'] <= 141) & (part['RETAILPRICE'] <= 923.4855787673991) & (part['P_NAME'] != 'blu')].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('ss ')) & (part['RETAILPRICE'] > 949.2343683281174) & (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] > 27) & (part['SIZE'] >= 26) | (part['MFGR'] == 'Manufacturer#4')][['PT_COMMENT', 'P_NAME', 'CONTAINER', 'BRAND', 'TYPE']]

part[(part['P_NAME'] != 'blu') & (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] != 920.3678791860447) & (part['RETAILPRICE'] <= 1001.9232065374921) & (part['BRAND'].isin(['Brand#31', 'Brand#15', 'Brand#45', 'Brand#32', 'Brand#43', 'Brand#13', 'Brand#34', 'Brand#25', 'Brand#24', 'Brand#14', 'Brand#44', 'Brand#54', 'Brand#35', 'Brand#11', 'Brand#12', 'Brand#52', 'Brand#53', 'Brand#41', 'Brand#42', 'Brand#21', 'Brand#33', 'Brand#23', 'Brand#22', 'Brand#55']))].groupby(by=['BRAND', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'blu') | (part['TYPE'] != 'L') & (part['PT_COMMENT'] == 'x') & (part['MFGR'] != 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#2') | (part['MFGR'] != 'Manufacturer#3')][['P_NAME']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'cor') & (part['CONTAINER'] != 'MED') & (part['BRAND'].isin(['Brand#41', 'Brand#25', 'Brand#14', 'Brand#45', 'Brand#34', 'Brand#44', 'Brand#24', 'Brand#12', 'Brand#13', 'Brand#15', 'Brand#21', 'Brand#54', 'Brand#55', 'Brand#52', 'Brand#22'])) | (part['PT_COMMENT'] != 'r') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) & (part['P_NAME'] == 'b')].groupby(by=['SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'i') & (part['SIZE'] < 14)][['P_NAME', 'BRAND', 'P_PARTKEY']].groupby(by=['BRAND', 'P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('i')) & (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] != 'y') | (part['P_NAME'].str.startswith('cor')) | (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] >= 157) | (part['BRAND'].isin(['Brand#51', 'Brand#25', 'Brand#41', 'Brand#34', 'Brand#13', 'Brand#15', 'Brand#45', 'Brand#22', 'Brand#14', 'Brand#55', 'Brand#24', 'Brand#54', 'Brand#35', 'Brand#23', 'Brand#42', 'Brand#43', 'Brand#32', 'Brand#31', 'Brand#33', 'Brand#12', 'Brand#21', 'Brand#53', 'Brand#11']))][['RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('l')) & (part['SIZE'] >= 15) & (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] != 'MED') | (part['SIZE'] <= 10) | (part['SIZE'] >= 21) & (part['CONTAINER'] == 'LG')].groupby(by=['P_PARTKEY', 'BRAND', 'TYPE']).agg('count')

part[(part['P_PARTKEY'] != 185) & (part['BRAND'].isin(['Brand#23', 'Brand#31', 'Brand#45', 'Brand#14', 'Brand#13', 'Brand#52', 'Brand#55', 'Brand#33', 'Brand#22', 'Brand#35', 'Brand#12', 'Brand#53', 'Brand#42', 'Brand#44', 'Brand#11', 'Brand#32', 'Brand#51'])) & (part['PT_COMMENT'] != 'b') & (part['TYPE'] != 'SMA') & (part['TYPE'] != 'M') | (part['RETAILPRICE'] > 1006.8660589748156)][['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']]

part[(part['P_PARTKEY'] < 149) | (part['P_PARTKEY'] <= 106) | (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] < 44) | (part['P_NAME'] != 'h') | (part['P_PARTKEY'] < 103) & (part['CONTAINER'] == 'MED') & (part['BRAND'] != 'Brand#41') | (part['P_PARTKEY'] == 19)].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 51) | (part['PT_COMMENT'] == 'p')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']]

part[(part['P_PARTKEY'] < 81) | (part['CONTAINER'] == 'LG') & (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'] != 'e') | (part['P_PARTKEY'] == 29) | (part['CONTAINER'] == 'MED') & (part['SIZE'] >= 11) & (part['PT_COMMENT'] == 'ss ')].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] <= 141) & (part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] != 195) | (part['TYPE'].str.startswith('L')) & (part['RETAILPRICE'] >= 903.5058053392853) | (part['TYPE'] != 'STA') | (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'] != 'd')].groupby(by=['BRAND', 'MFGR']).agg('count')

part[(part['P_PARTKEY'] == 75) | (part['P_PARTKEY'] < 172) & (part['MFGR'] == 'Manufacturer#4')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[(part['RETAILPRICE'] != 1001.1133379548351) & (part['RETAILPRICE'] >= 1066.4797207607448) | (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] == 1075.0492161422462) | (part['P_PARTKEY'] <= 79) & (part['BRAND'] != 'Brand#43') & (part['PT_COMMENT'].str.startswith('kag')) | (part['TYPE'].str.startswith('E')) | (part['MFGR'] != 'Manufacturer#1')].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] < 1009.7472515065358) | (part['P_PARTKEY'] == 17) | (part['TYPE'] != 'STA') & (part['MFGR'].isin(['Manufacturer#5'])) | (part['P_PARTKEY'] <= 4)][['RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'P_NAME']]

part[(part['RETAILPRICE'] >= 1097.4895981487703) & (part['SIZE'] > 34) & (part['P_NAME'] != 'd') & (part['P_PARTKEY'] != 97) | (part['BRAND'] != 'Brand#35') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) & (part['P_PARTKEY'] <= 141) | (part['RETAILPRICE'] < 970.2806684852485)].groupby(by=['PT_COMMENT', 'BRAND']).agg('count')

part[(part['SIZE'] != 8) & (part['TYPE'].str.startswith('SMA'))][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[(part['SIZE'] == 11) | (part['BRAND'] == 'Brand#35') | (part['BRAND'] != 'Brand#44') | (part['P_PARTKEY'] > 161) & (part['BRAND'].isin(['Brand#23', 'Brand#55', 'Brand#14', 'Brand#41', 'Brand#11', 'Brand#53', 'Brand#44', 'Brand#33', 'Brand#21', 'Brand#54', 'Brand#35', 'Brand#24'])) | (part['RETAILPRICE'] != 968.3910327752587) & (part['P_NAME'].str.startswith('i')) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1']))][['BRAND', 'SIZE', 'CONTAINER']]

part[(part['SIZE'] >= 29) | (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] != 'WRAP') | (part['TYPE'].str.startswith('E')) & (part['PT_COMMENT'] != 'ss ') & (part['RETAILPRICE'] > 963.9885553620483) | (part['PT_COMMENT'] == 'h') | (part['P_NAME'] == 'o') & (part['SIZE'] == 47)].groupby(by=['SIZE']).agg('count')

part[(part['TYPE'] != 'L') & (part['P_PARTKEY'] <= 157) | (part['P_PARTKEY'] < 195) & (part['P_NAME'].str.startswith('lin')) | (part['SIZE'] != 30) & (part['PT_COMMENT'] == 'q')].groupby(by=['MFGR', 'TYPE', 'P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'SMA') & (part['SIZE'] >= 14) | (part['BRAND'] != 'Brand#44') & (part['BRAND'] == 'Brand#11') | (part['PT_COMMENT'].str.startswith('f'))].groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'BRAND']).agg('count')

part[(part['TYPE'] != 'STA') | (part['BRAND'].isin(['Brand#41', 'Brand#32', 'Brand#54', 'Brand#42', 'Brand#22', 'Brand#13', 'Brand#52', 'Brand#12', 'Brand#21', 'Brand#45', 'Brand#55', 'Brand#34', 'Brand#44', 'Brand#25', 'Brand#23', 'Brand#15', 'Brand#24', 'Brand#53', 'Brand#43', 'Brand#11', 'Brand#14'])) & (part['RETAILPRICE'] < 986.0282988548663) & (part['RETAILPRICE'] >= 967.9574657309349) | (part['RETAILPRICE'] <= 991.0599924336445)].groupby(by=['P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'E') & (part['TYPE'].str.startswith('M')) & (part['TYPE'] == 'P') | (part['P_NAME'].str.startswith('c')) | (part['CONTAINER'] != 'SM') | (part['BRAND'].isin(['Brand#51', 'Brand#45', 'Brand#44', 'Brand#54', 'Brand#35', 'Brand#11', 'Brand#55', 'Brand#15', 'Brand#32', 'Brand#25', 'Brand#34'])) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) | (part['TYPE'].str.startswith('STA')) & (part['BRAND'] != 'Brand#25')][['P_PARTKEY', 'BRAND']]

part[(part['TYPE'] == 'S') | (part['P_NAME'] == 'bis') | (part['PT_COMMENT'] == 'c') & (part['PT_COMMENT'] != 'e') & (part['P_NAME'].str.startswith('cor')) & (part['BRAND'] != 'Brand#14') | (part['MFGR'] != 'Manufacturer#2')][['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER']]

part[(part['TYPE'] == 'STA') & (part['RETAILPRICE'] < 912.1340451712613) & (part['RETAILPRICE'] <= 943.882644210322) & (part['RETAILPRICE'] >= 994.266053154131)][['PT_COMMENT', 'SIZE']].groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('E')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] == 'r') | (part['MFGR'] == 'Manufacturer#1') | (part['MFGR'] != 'Manufacturer#5') | (part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'] != 'SM')][['BRAND', 'CONTAINER', 'SIZE']]

part[(part['TYPE'].str.startswith('S')) & (part['SIZE'] < 31) | (part['RETAILPRICE'] == 1023.0709434509159) & (part['BRAND'] != 'Brand#12') | (part['SIZE'] == 47) | (part['CONTAINER'] == 'WRAP') & (part['TYPE'].str.startswith('SMA')) | (part['P_NAME'] == 'lin') & (part['P_NAME'].str.startswith('cor'))][['TYPE', 'CONTAINER']]

part[['BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']].groupby(by=['P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

part[['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['BRAND', 'MFGR', 'TYPE', 'P_NAME', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['MFGR', 'BRAND', 'TYPE']).agg('mean', numeric_only=True)

part[['BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'CONTAINER', 'TYPE']].groupby(by=['SIZE', 'BRAND', 'MFGR', 'PT_COMMENT']).agg('count')

part[['CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_NAME']].groupby(by=['CONTAINER', 'PT_COMMENT', 'BRAND', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

part[['MFGR', 'BRAND', 'SIZE', 'TYPE', 'CONTAINER', 'P_NAME']].groupby(by=['CONTAINER', 'P_NAME', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']].groupby(by=['CONTAINER', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'SIZE']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'BRAND', 'P_PARTKEY']].groupby(by=['CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'BRAND']].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT']].groupby(by=['MFGR', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']].groupby(by=['SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['BRAND']).agg('count')

part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND']].groupby(by=['RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'].str.startswith('y'))][['TYPE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#3'])) | (part['PT_COMMENT'] != 'e') & (part['P_NAME'] != 'y') & (part['CONTAINER'].str.startswith('LG'))][['TYPE', 'SIZE', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('!')) & (part['RETAILPRICE'] > 1093.9397484096696) | (part['P_PARTKEY'] >= 10) & (part['MFGR'] != 'Manufacturer#1') & (part['RETAILPRICE'] >= 1041.0433548538622) | (part['PT_COMMENT'] == 'n')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] == 117) | (part['SIZE'] >= 30) & (part['CONTAINER'] != 'MED') | (part['CONTAINER'] == 'MED') & (part['TYPE'] != 'S') & (part['RETAILPRICE'] <= 1010.1422145365615)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part[['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[['TYPE', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_ADDRESS'] != 'F') & (supplier['S_SUPPKEY'] == 177) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] == 12)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 15) | (supplier['S_ACCTBAL'] > -28.15243774114515) | (supplier['S_COMMENT'] != 'o') & (supplier['S_ACCTBAL'] != 9237.193655459512) & (supplier['S_ACCTBAL'] == -500.2829290209826)].merge(nation[(nation['N_NAME'] == 'K')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 8011) & (partsupp['SUPPLYCOST'] < 156.59254500468566)].merge(part[(part['BRAND'] == 'Brand#25')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 2889) | (partsupp['AVAILQTY'] != 6821) | (partsupp['AVAILQTY'] <= 4936) & (partsupp['P_COMMENT'] == 'the') & (partsupp['AVAILQTY'] == 8767)][['P_COMMENT', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 2759) & (partsupp['PS_PARTKEY'] != 24) | (partsupp['PS_SUPPKEY'] == 2611) | (partsupp['PS_SUPPKEY'] > 2378)].merge(part[['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 148) | (partsupp['AVAILQTY'] <= 4321) & (partsupp['PS_SUPPKEY'] > 3842) | (partsupp['P_COMMENT'] != 'ly ')][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 4268) & (partsupp['AVAILQTY'] == 7317) & (partsupp['PS_PARTKEY'] <= 11)].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['RETAILPRICE'] != 935.3483680596886) & (part['MFGR'] != 'Manufacturer#1') & (part['P_NAME'].str.startswith('c')) & (part['P_NAME'] != 'n')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 3)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 32) | (partsupp['P_COMMENT'].str.startswith('c'))][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 39)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 21) & (partsupp['SUPPLYCOST'] <= 52.633259980857304) & (partsupp['SUPPLYCOST'] == 534.2837769781221) | (partsupp['SUPPLYCOST'] != 399.016539343675)][['AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 42) & (partsupp['PS_SUPPKEY'] >= 441) | (partsupp['SUPPLYCOST'] > 424.8755947265148) | (partsupp['AVAILQTY'] > 1963) | (partsupp['P_COMMENT'] != 'h')][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 25) & (partsupp['PS_SUPPKEY'] > 4305)].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 43) & (partsupp['PS_SUPPKEY'] <= 7093)].merge(part[['BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 3992) | (partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['SUPPLYCOST'] >= 387.9819863797953)].merge(part[['PT_COMMENT', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 434) & (partsupp['AVAILQTY'] != 3962) & (partsupp['PS_SUPPKEY'] < 2785) | (partsupp['AVAILQTY'] <= 9904)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 4641)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 1540) | (partsupp['PS_SUPPKEY'] <= 6408)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 2976.4419824310407) | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'a') & (partsupp['AVAILQTY'] != 5867) | (partsupp['AVAILQTY'] == 4676) | (partsupp['P_COMMENT'] == 'q')].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['PS_SUPPKEY'] > 5665) & (partsupp['PS_PARTKEY'] < 39) | (partsupp['P_COMMENT'].str.startswith('b'))].merge(part[(part['TYPE'] != 'P') & (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] > 971.8683152111837)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['AVAILQTY'] <= 7770) & (partsupp['SUPPLYCOST'] != 201.22460879057286) & (partsupp['PS_SUPPKEY'] == 4301)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'y') & (partsupp['SUPPLYCOST'] < 345.6473290591807)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['SUPPLYCOST'] == 543.751997886289) & (partsupp['SUPPLYCOST'] >= 417.2713270727419)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['PS_SUPPKEY'] >= 2903)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] > 58)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 420.7436001624933) | (partsupp['PS_PARTKEY'] >= 19)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 491.628075285954) | (partsupp['SUPPLYCOST'] <= 925.7769142061295) & (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['PS_PARTKEY'] >= 31)].merge(part[(part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] != 25) & (part['SIZE'] < 38) | (part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'SM') & (part['CONTAINER'] == 'WRAP') & (part['TYPE'] != 'S') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) | (part['P_NAME'] == 'y') | (part['RETAILPRICE'] > 989.520867219361)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != 'i')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 132) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'AME') | (region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'AME') & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] > 4) | (nation['N_NATIONKEY'] == 8) & (nation['N_NAME'] != 'S')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] > 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 21) & (nation['N_NAME'] != 'G')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 4)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 2290.0666209003757) | (supplier['S_ADDRESS'] == 'Z') | (supplier['S_ACCTBAL'] >= 4729.318008868149) & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_ACCTBAL'] >= 9496.300885392717)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[(supplier['S_ACCTBAL'] == 3805.837769510619) & (supplier['S_COMMENT'] != 'r') & (supplier['S_PHONE'] == '14-') & (supplier['S_PHONE'] == '1')][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_ACCTBAL'] == 913.5798940869345) & (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_ADDRESS'].str.startswith('n'))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 1859.6462391028451)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8433.75296834325) & (supplier['S_SUPPKEY'] < 159) | (supplier['S_COMMENT'] == 'j') | (supplier['S_SUPPKEY'] >= 33) | (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] == 7120.986013598904) & (supplier['S_SUPPKEY'] <= 18)][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_ACCTBAL'] > 9760.288258739776) & (supplier['S_NATIONKEY'] <= 23) | (supplier['S_ADDRESS'] == 'Q') & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] <= 51) | (supplier['S_SUPPKEY'] > 159) | (supplier['S_PHONE'] != '3')].merge(nation[(nation['N_COMMENT'] == 'e')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '0') & (supplier['S_SUPPKEY'] > 190) & (supplier['S_PHONE'] != '2') & (supplier['S_NATIONKEY'] >= 9) | (supplier['S_ACCTBAL'] >= 5151.385140342547) & (supplier['S_PHONE'] != '32-')].groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'R') | (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'o') & (supplier['S_ACCTBAL'] <= 9250.762829554518) & (supplier['S_ADDRESS'] != ' ')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_PHONE'] != '2') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ADDRESS'] == 'O') & (supplier['S_SUPPKEY'] >= 87)].groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('I')) | (supplier['S_PHONE'] != '28-')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('k'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('x')) & (supplier['S_ADDRESS'] != 'c') | (supplier['S_ADDRESS'] != '5') | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_ADDRESS'] == 'c')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('z')) | (supplier['S_ADDRESS'].str.startswith('1')) & (supplier['S_PHONE'] == '26-') & (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_PHONE']].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != ',')].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 16) | (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] != 'i')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'al ') & (supplier['S_ADDRESS'].str.startswith('m')) | (supplier['S_ADDRESS'] == 'Z') & (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] == 'i')].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'g')].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] != 'v')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'v') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'c')][['S_PHONE', 'S_NAME', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_PHONE']).agg('count')

supplier[(supplier['S_COMMENT'] == 'r') & (supplier['S_ACCTBAL'] < 8110.105515946442) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != ',')][['S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_COMMENT'] == 'v') & (supplier['S_NATIONKEY'] != 5)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == '!') | (supplier['S_ACCTBAL'] <= 152.5609458961128) | (supplier['S_PHONE'] != '2')].merge(nation.merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 6295.968707108747) & (supplier['S_SUPPKEY'] == 181) & (supplier['S_NATIONKEY'] != 2) & (supplier['S_COMMENT'].str.startswith('i')) | (supplier['S_NATIONKEY'] <= 16)].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '26-') & (supplier['S_NATIONKEY'] > 9)].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] == 11) & (nation['N_NATIONKEY'] != 21)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 16) | (supplier['S_SUPPKEY'] != 3) & (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_SUPPKEY'] != 14) | (supplier['S_SUPPKEY'] == 42) & (supplier['S_COMMENT'].str.startswith('c'))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] == 5) & (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_NATIONKEY'] == 7) & (supplier['S_ACCTBAL'] <= 8348.36002938769)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '17-')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_PHONE', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_SUPPKEY'] == 12) | (supplier['S_COMMENT'] != 'bli')][['S_ACCTBAL', 'S_NAME']].groupby(by=['S_NAME', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 170)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 7)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']).agg('count')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'M') & (nation['N_NAME'] != 'B') & (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] > 17) & (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] == 'o')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] == 'B') & (nation['N_NAME'] == 'M')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_COMMENT'] != 'a')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] <= 8)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NAME'] == 'J') & (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] != 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_COMMENT'] != 'r')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'] != 'J') | (nation['N_NAME'] != 'M')].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 'u')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 15) | (nation['N_NATIONKEY'] != 18) & (nation['N_COMMENT'].str.startswith('o'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 112.70782397275957)].merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 6365.978364233743)][['C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9723.201646890722) | (customer['C_NATIONKEY'] != 21) | (customer['C_ADDRESS'] == 'h') | (customer['C_COMMENT'] != 'e') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] < 9038.527814287514)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'B') | (customer['C_ADDRESS'] == 'g') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] != 'R')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'D') | (customer['C_ADDRESS'] != 'x') & (customer['C_PHONE'].str.startswith('2')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT']]

customer[(customer['C_ADDRESS'] != 'U') | (customer['C_PHONE'] != '18-') & (customer['C_PHONE'] != '18-') | (customer['C_CUSTKEY'] <= 15) & (customer['C_NATIONKEY'] >= 19) | (customer['C_CUSTKEY'] != 61) & (customer['C_CUSTKEY'] <= 96) & (customer['C_COMMENT'] != 'c')][['C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']]

customer[(customer['C_ADDRESS'] == '6') & (customer['C_ACCTBAL'] != 8686.924677522842) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] >= 6) | (customer['C_ACCTBAL'] <= 110.37343489293471) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'c')][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'P') & (customer['C_ADDRESS'] == '3')].merge(nation[(nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'd')].merge(nation.merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'q') & (customer['C_CUSTKEY'] < 27) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] <= 746.7976119561822) & (customer['C_NATIONKEY'] == 11)][['C_PHONE', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('i')) & (customer['C_ADDRESS'] != 'S') & (customer['C_NATIONKEY'] >= 13) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == 9072.382871622884) & (customer['C_ADDRESS'] != 'd') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] == 9)].merge(nation[(nation['N_COMMENT'] != 'l')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_PHONE'] != '2') & (customer['C_ACCTBAL'] < 7019.505567899293) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ACCTBAL'] <= 3.8542551633320272) & (customer['C_ADDRESS'].str.startswith('g'))][['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] > 22)][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 2) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_COMMENT'] == 'c')][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_ADDRESS']).agg('count')

customer[(customer['C_CUSTKEY'] == 26)][['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'i') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] != 'y') | (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_CUSTKEY'] <= 83)][['C_PHONE']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 8153.621732623225) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] == 'i')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'u') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE']))][['C_NAME', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('D')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] > 35) | (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] >= 1)][['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']]

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'n') & (customer['C_NATIONKEY'] != 22)].merge(nation[(nation['N_NATIONKEY'] != 22) | (nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] != 's')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 18) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'FURNITURE'])) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'u') | (customer['C_PHONE'] == '3') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 94)][['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] > 4) & (customer['C_COMMENT'] != 'n') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 4) | (customer['C_ADDRESS'].str.startswith('j')) & (customer['C_CUSTKEY'] > 5) & (customer['C_COMMENT'].str.startswith('p')) | (customer['C_COMMENT'] == 'y')].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] == 1618.9088716333322) & (customer['C_NATIONKEY'] >= 1) & (customer['C_NATIONKEY'] == 13) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] != 2) & (customer['C_ACCTBAL'] >= 6217.602539211797)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '3') & (customer['C_NATIONKEY'] >= 20) & (customer['C_PHONE'].str.startswith('27-'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] >= 15)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] != 16) | (customer['C_ADDRESS'] != 'x') | (customer['C_COMMENT'] != 't') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD'])) | (customer['C_PHONE'].str.startswith('1'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '25-')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('3')) & (customer['C_CUSTKEY'] < 77) & (customer['C_NATIONKEY'] > 7) | (customer['C_CUSTKEY'] != 30) | (customer['C_CUSTKEY'] != 22)][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']]

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] != 4) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] < 10) | (customer['C_PHONE'] != '18-') & (customer['C_NATIONKEY'] >= 18) & (customer['C_CUSTKEY'] <= 1)][['C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_PHONE'] == '1') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_REGIONKEY'] == 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_NATIONKEY'] != 14) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'] == 'U') | (customer['C_CUSTKEY'] < 20) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'r')].groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] == 6926.658529827108) | (customer['C_COMMENT'] == 'a')][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_NAME']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] != 21) & (nation['N_NATIONKEY'] == 17)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 12)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_ADDRESS'].str.startswith('v')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING'])) | (customer['C_CUSTKEY'] != 93)][['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_COMMENT'] == ',') & (customer['C_ADDRESS'] != 'T') | (customer['C_COMMENT'] == 'r')][['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('2'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] <= 84010) | (orders['O_ORDERKEY'] <= 18)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] < 516) & (orders['TOTALPRICE'] < 339715.72951291135)][['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(part[['BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 59) | (supplier['S_SUPPKEY'] < 96)][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 9798) & (partsupp['PS_PARTKEY'] == 20) & (partsupp['SUPPLYCOST'] < 291.3782500959433) & (partsupp['AVAILQTY'] >= 6236)].merge(part[['P_PARTKEY', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 7112)].merge(part[['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 2854) | (partsupp['SUPPLYCOST'] >= 145.9833902764846) & (partsupp['AVAILQTY'] == 5407)][['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_ORDERKEY'] >= 7) | (lineitem['L_SUPPKEY'] != 6187) | (lineitem['EXTENDEDPRICE'] != 22671.898775484802) & (lineitem['L_COMMENT'] == 'q') | (lineitem['TAX'] > 0.06816398396711132) | (lineitem['LINENUMBER'] < 5) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['TAX'] < 0.06691701448087162) & (lineitem['L_PARTKEY'] < 6993)].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 1)].merge(partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] <= 6) & (lineitem['L_ORDERKEY'] > 101) & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['L_SUPPKEY'] > 7908) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['EXTENDEDPRICE'] < 6851.972054068501) | (lineitem['LINENUMBER'] < 1) & (lineitem['DISCOUNT'] < 0.08286313142869932) | (lineitem['L_SUPPKEY'] >= 3147)][['RETURNFLAG', 'SHIPMODE', 'LINENUMBER']]

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['EXTENDEDPRICE'] < 21002.627765780642) & (lineitem['L_ORDERKEY'] >= 104) | (lineitem['LINENUMBER'] == 1) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['QUANTITY'] < 47)].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != ' ') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['L_ORDERKEY'] == 1) | (lineitem['RECEIPTDATE'] != '1998-11-06')][['QUANTITY', 'RETURNFLAG']].groupby(by=['QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'ly ') & (lineitem['EXTENDEDPRICE'] >= 55040.97975483522) | (lineitem['L_SUPPKEY'] >= 2325) & (lineitem['L_SUPPKEY'] <= 7032) | (lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['SHIPDATE'] >= '1998-10-30')][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('g')) | (lineitem['QUANTITY'] >= 45) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['L_PARTKEY'] >= 168483) | (lineitem['LINENUMBER'] < 3)][['EXTENDEDPRICE', 'DISCOUNT', 'TAX']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['QUANTITY'] != 6) | (lineitem['DISCOUNT'] == 0.08192120583154039) | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_SUPPKEY'] != 4477) & (lineitem['EXTENDEDPRICE'] <= 86560.59417919633) & (lineitem['L_PARTKEY'] < 35958) | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_ORDERKEY'] > 96)][['L_ORDERKEY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'LINENUMBER']]

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['TAX'] > 0.027793104362106833) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['TAX'] >= 0.04530198786658903) | (lineitem['SHIPMODE'] == 'TRUCK')][['QUANTITY', 'SHIPINSTRUCT', 'SHIPDATE']].groupby(by=['SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['TAX'] < 0.05737657863968765) & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_SUPPKEY'] < 3939) & (lineitem['L_COMMENT'] == ',') & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_COMMENT'].str.startswith('d')) | (lineitem['RETURNFLAG'].isin(['N', 'R'])) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['LINENUMBER', 'EXTENDEDPRICE']]

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['L_COMMENT'].str.startswith('q')) & (lineitem['L_COMMENT'].str.startswith('o'))].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['LINENUMBER'] >= 3) & (lineitem['EXTENDEDPRICE'] < 27416.58049044605) & (lineitem['LINENUMBER'] > 5) & (lineitem['LINESTATUS'] == 'O')].groupby(by=['RECEIPTDATE', 'RETURNFLAG', 'L_SUPPKEY', 'SHIPDATE', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['L_SUPPKEY'] > 267) | (lineitem['L_SUPPKEY'] >= 4108) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_PARTKEY'] < 73167)][['RETURNFLAG', 'LINESTATUS', 'QUANTITY']].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'MAIL') | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR'])) | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['TAX'] != 0.04246600543584788) | (lineitem['L_PARTKEY'] != 136478) & (lineitem['LINESTATUS'].isin(['F']))][['LINENUMBER']].groupby(by=['LINENUMBER']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'TAX', 'L_SUPPKEY', 'QUANTITY', 'L_COMMENT', 'LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY', 'LINESTATUS']].groupby(by=['COMMITDATE']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'LINENUMBER', 'RETURNFLAG', 'QUANTITY', 'DISCOUNT']].groupby(by=['QUANTITY', 'LINESTATUS', 'LINENUMBER', 'DISCOUNT', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPDATE', 'TAX', 'L_ORDERKEY', 'DISCOUNT', 'EXTENDEDPRICE', 'RECEIPTDATE']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'RETURNFLAG', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINENUMBER']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'TAX', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'DISCOUNT']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'] != 'n') | (nation['N_NAME'] != 'E')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] <= 14) | (nation['N_NATIONKEY'] != 19)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'p') | (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] == 'e') | (nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] == 'r') | (nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] != 8)].merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] != 4) & (nation['N_NATIONKEY'] < 1) & (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'] != 'F') | (nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('p'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NAME'] == 'J') & (nation['N_COMMENT'] == 'e')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'] != 'e') | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'] == 'R') | (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] < 17) | (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('R'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] <= 10)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 11) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 2) & (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] != 22)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 3) | (nation['N_COMMENT'] == 'r') | (nation['N_NAME'] != 'P')].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] > 1) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 23) | (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NATIONKEY'] == 12) & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] >= 0) | (nation['N_NATIONKEY'] < 17)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_NAME'] == 'V')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 21) | (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'I')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] >= 4)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] < 719.5596144315323) & (customer['C_CUSTKEY'] < 68) | (customer['C_NATIONKEY'] != 12)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 367.64441580688435) | (customer['C_NATIONKEY'] < 16) | (customer['C_PHONE'] == '3') | (customer['C_PHONE'] == '13-')][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 9764.100676926413) | (customer['C_CUSTKEY'] >= 27) & (customer['C_NATIONKEY'] != 22) & (customer['C_PHONE'].str.startswith('25-'))][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] == 'g') & (customer['C_CUSTKEY'] >= 85) & (customer['C_PHONE'] == '18-') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'] == '.')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] <= 3100.9883635678016) | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('n')) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] < '1992-01-13')][['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith('ly ')) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERDATE'] != '1998-07-21')][['CLERK', 'ORDERSTATUS', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 77126.0279827128) & (orders['TOTALPRICE'] > 146502.77937070848) & (orders['O_COMMENT'].str.startswith('e')) | (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] == 307852.1017054822) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] >= 98490)][['O_COMMENT', 'CLERK', 'ORDERPRIORITY']]

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] <= 153411.5481013438) & (orders['TOTALPRICE'] == 348441.0989160854) | (orders['O_COMMENT'] == 'ly ') & (orders['TOTALPRICE'] == 23433.405896986587) & (orders['O_ORDERKEY'] == 115) | (orders['ORDERPRIORITY'] == '1-URGENT')][['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK']]

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'] != 'j') & (orders['O_ORDERKEY'] >= 551)][['SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] != 247470.8445288362) & (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] < 79779) | (orders['TOTALPRICE'] <= 96177.15483245715) & (orders['TOTALPRICE'] > 85100.53472817772) | (orders['ORDERSTATUS'].isin(['P']))][['CLERK']].groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] <= 204121.93428447458)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('z')) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] != 29) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'].str.startswith('s')) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O']))].groupby(by=['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 24765) | (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_COMMENT'].str.startswith('w'))][['TOTALPRICE', 'CLERK']].groupby(by=['TOTALPRICE', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 567) & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] == 312125.71777837846)][['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[(orders['O_ORDERKEY'] < 329) & (orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'] != 'i') | (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] == '1998-07-21')][['TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 653) | (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('w'))][['TOTALPRICE', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY']]

orders[(orders['O_ORDERKEY'] == 679) & (orders['O_COMMENT'].str.startswith('f')) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_ADDRESS'] == 'a')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 498) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] == '.') | (orders['O_CUSTKEY'] <= 81986) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'] == 'O')][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] != 42234) | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] != 214) | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_COMMENT'] == 'l') & (customer['C_CUSTKEY'] != 56) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 126419.27214248132) & (orders['O_ORDERKEY'] == 640) & (orders['O_COMMENT'] != 'b') | (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] == 'x') | (orders['O_ORDERKEY'] >= 409)][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']]

orders[(orders['TOTALPRICE'] == 265566.1738348134) | (orders['O_CUSTKEY'] > 13533) | (orders['TOTALPRICE'] >= 152468.27533386167) | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] < 400) & (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] > 65261.24087017439)][['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK']]

orders[(orders['TOTALPRICE'] > 254374.30253443713) & (orders['O_COMMENT'].str.startswith('b')) | (orders['TOTALPRICE'] != 334468.8903451645) & (orders['O_COMMENT'] == 'c') & (orders['CLERK'].str.startswith('C'))][['O_ORDERKEY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].groupby(by=['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE']).agg('count')

orders[['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#33') | (part['RETAILPRICE'] >= 906.1875004965074) | (part['PT_COMMENT'].str.startswith('w')) | (part['BRAND'] != 'Brand#41')][['SIZE', 'P_PARTKEY', 'P_NAME']].groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'] == 'y') & (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] < 155) | (part['SIZE'] >= 46)][['P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[(part['BRAND'].isin(['Brand#12', 'Brand#51', 'Brand#43', 'Brand#53', 'Brand#35', 'Brand#32', 'Brand#41', 'Brand#31'])) & (part['RETAILPRICE'] >= 1058.8109450484299) & (part['P_PARTKEY'] <= 11) & (part['MFGR'] != 'Manufacturer#1')][['RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']]

part[(part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] <= 932.6896293631919) & (part['BRAND'].isin(['Brand#52'])) | (part['P_NAME'] == 'i') | (part['P_PARTKEY'] > 72) | (part['PT_COMMENT'] == 'e') | (part['MFGR'] != 'Manufacturer#4') & (part['CONTAINER'].str.startswith('LG'))].groupby(by=['PT_COMMENT', 'SIZE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['P_NAME'] != 'i') | (part['MFGR'] != 'Manufacturer#2') & (part['TYPE'] != 'P')][['CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[(part['CONTAINER'].str.startswith('SM')) | (part['BRAND'] != 'Brand#22') & (part['TYPE'].str.startswith('STA')) & (part['TYPE'] != 'STA') | (part['SIZE'] != 38) & (part['TYPE'].str.startswith('E'))].groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] > 1077.7106118044321) & (part['SIZE'] == 28) | (part['TYPE'].str.startswith('S')) | (part['RETAILPRICE'] <= 1007.2685341031843)][['TYPE', 'SIZE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']]

part[(part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] != 27) & (part['SIZE'] != 31) & (part['P_NAME'] == 'i') | (part['BRAND'] != 'Brand#13') & (part['BRAND'] != 'Brand#14')][['SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']]

part[(part['MFGR'] == 'Manufacturer#3') | (part['PT_COMMENT'].str.startswith('u')) | (part['P_PARTKEY'] > 90) & (part['RETAILPRICE'] <= 1078.355490441253)][['SIZE', 'BRAND', 'TYPE']].groupby(by=['TYPE', 'SIZE']).agg('count')

part[(part['PT_COMMENT'] != 'w') | (part['RETAILPRICE'] > 1007.7505955489971) | (part['PT_COMMENT'] != 'y') | (part['TYPE'] != 'L') | (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'].str.startswith('bis')) | (part['SIZE'] >= 27) | (part['PT_COMMENT'] == 'c') | (part['RETAILPRICE'] < 993.1933673457589)].groupby(by=['TYPE', 'P_NAME']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'b') & (part['P_NAME'] != 'd') & (part['RETAILPRICE'] < 999.7064881218043) & (part['TYPE'] != 'STA') & (part['CONTAINER'] != 'LG') | (part['P_NAME'] != 'blu') & (part['TYPE'] != 'S') & (part['PT_COMMENT'] == 'k') & (part['RETAILPRICE'] != 948.5776901630146)][['RETAILPRICE', 'TYPE', 'CONTAINER']]

part[(part['PT_COMMENT'] == 's') | (part['TYPE'] != 'L') | (part['P_PARTKEY'] >= 143) | (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] <= 1061.6067533845924)][['RETAILPRICE', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('ss ')) | (part['PT_COMMENT'].str.startswith('b')) & (part['P_NAME'] != 'b') & (part['CONTAINER'] != 'LG') & (part['PT_COMMENT'] != 'r')][['P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']]

part[(part['P_NAME'] != 'f') | (part['RETAILPRICE'] != 1089.739607760453) & (part['PT_COMMENT'] != 'c') | (part['SIZE'] > 47) & (part['P_PARTKEY'] > 42)][['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_NAME']]

part[(part['P_NAME'] == 'blu') | (part['CONTAINER'].str.startswith('LG')) | (part['PT_COMMENT'] != '!') | (part['SIZE'] == 29) | (part['BRAND'] == 'Brand#35') | (part['PT_COMMENT'].str.startswith('n')) & (part['TYPE'] != 'M')].groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'CONTAINER']).agg('count')

part[(part['P_NAME'] == 'h') | (part['SIZE'] >= 37) | (part['BRAND'].isin(['Brand#13', 'Brand#55', 'Brand#45', 'Brand#33'])) & (part['CONTAINER'] != 'JUMBO') | (part['TYPE'] != 'E') & (part['P_NAME'] != 'k')].groupby(by=['BRAND', 'P_NAME', 'SIZE', 'MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'lin') | (part['CONTAINER'] != 'SM') | (part['SIZE'] < 47) | (part['PT_COMMENT'] == 'f') | (part['SIZE'] == 20) & (part['BRAND'] == 'Brand#11')].groupby(by=['P_NAME', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

part[(part['P_NAME'] == 'w') | (part['TYPE'] != 'M') & (part['TYPE'] != 'SMA') | (part['TYPE'] == 'L') | (part['P_NAME'].str.startswith('f')) | (part['SIZE'] == 12) & (part['BRAND'].isin(['Brand#25', 'Brand#35']))][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'BRAND']]

part[(part['P_PARTKEY'] < 143) | (part['SIZE'] == 29) & (part['BRAND'] != 'Brand#35') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) | (part['TYPE'].str.startswith('E')) & (part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'].str.startswith('a')) | (part['TYPE'] == 'P')].groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] < 17) | (part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'].str.startswith('f')) & (part['TYPE'] == 'E') & (part['SIZE'] <= 8) & (part['CONTAINER'] != 'LG')][['TYPE', 'SIZE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] > 157) | (part['CONTAINER'] == 'WRAP') & (part['TYPE'] == 'S') & (part['BRAND'].isin(['Brand#42', 'Brand#54', 'Brand#43', 'Brand#52', 'Brand#45', 'Brand#12', 'Brand#41', 'Brand#14', 'Brand#34', 'Brand#51', 'Brand#21', 'Brand#35', 'Brand#31', 'Brand#22', 'Brand#23'])) & (part['PT_COMMENT'] != 'f') | (part['MFGR'] == 'Manufacturer#2')].groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'SIZE', 'TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 28) | (part['MFGR'] == 'Manufacturer#4')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] < 1016.0490628619126) & (part['P_PARTKEY'] <= 2) | (part['PT_COMMENT'] == ' ') & (part['RETAILPRICE'] != 1094.6711561455352) & (part['TYPE'] == 'P') & (part['BRAND'] != 'Brand#45')][['P_PARTKEY', 'BRAND']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 904.4297867510058) | (part['P_NAME'] != 'n') & (part['PT_COMMENT'].str.startswith('!')) | (part['MFGR'] == 'Manufacturer#1') & (part['P_NAME'] != 'k')][['CONTAINER', 'TYPE', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR']]

part[(part['RETAILPRICE'] >= 982.0755733975208) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) | (part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'] != 'ss ')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'BRAND', 'MFGR']]

part[(part['SIZE'] <= 20) & (part['TYPE'] != 'SMA') & (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'].isin(['Brand#15', 'Brand#45', 'Brand#53', 'Brand#23', 'Brand#43', 'Brand#55', 'Brand#52', 'Brand#44', 'Brand#42', 'Brand#34', 'Brand#14', 'Brand#51', 'Brand#32', 'Brand#54', 'Brand#21', 'Brand#31', 'Brand#13', 'Brand#25', 'Brand#22', 'Brand#12', 'Brand#24', 'Brand#33', 'Brand#11', 'Brand#35'])) | (part['RETAILPRICE'] != 992.1007416826184) | (part['PT_COMMENT'] == 'l') | (part['RETAILPRICE'] < 908.0133911883336) | (part['BRAND'] == 'Brand#14')].groupby(by=['CONTAINER', 'P_PARTKEY', 'MFGR']).agg('count')

part[(part['SIZE'] == 11) | (part['SIZE'] == 37) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2'])) | (part['RETAILPRICE'] != 998.7928872381507) & (part['TYPE'] != 'L') & (part['RETAILPRICE'] > 969.0986529822859) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) & (part['P_PARTKEY'] <= 119) & (part['MFGR'] != 'Manufacturer#1')][['P_NAME', 'BRAND', 'CONTAINER']]

part[(part['SIZE'] == 23) & (part['RETAILPRICE'] < 1040.1117374320406) | (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] != 1021.9509960973919) | (part['CONTAINER'] != 'WRAP') & (part['MFGR'] != 'Manufacturer#4')][['TYPE', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'MFGR']]

part[(part['SIZE'] >= 13) | (part['P_PARTKEY'] != 71) | (part['MFGR'].isin(['Manufacturer#4'])) & (part['TYPE'].str.startswith('S')) | (part['P_NAME'].str.startswith('blu')) & (part['SIZE'] != 20) & (part['MFGR'] == 'Manufacturer#5')].groupby(by=['PT_COMMENT', 'MFGR', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

part[(part['SIZE'] >= 38) | (part['TYPE'] == 'STA') | (part['P_NAME'].str.startswith('a')) & (part['SIZE'] > 40) & (part['MFGR'] == 'Manufacturer#2') & (part['BRAND'].isin(['Brand#33', 'Brand#53', 'Brand#51', 'Brand#25', 'Brand#55', 'Brand#45', 'Brand#34', 'Brand#44', 'Brand#13', 'Brand#31', 'Brand#35', 'Brand#41', 'Brand#21', 'Brand#42', 'Brand#52', 'Brand#32', 'Brand#15', 'Brand#24', 'Brand#14', 'Brand#11', 'Brand#12'])) & (part['CONTAINER'] == 'MED')].groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']).agg('count')

part[(part['TYPE'] == 'E') | (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] != 157) | (part['RETAILPRICE'] == 1072.4542891372962) & (part['TYPE'].str.startswith('S')) | (part['P_NAME'] == 'p') | (part['TYPE'] != 'STA') | (part['PT_COMMENT'].str.startswith('f'))].groupby(by=['P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'L') | (part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] != 156) & (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] != 1037.5158961750317) | (part['P_NAME'] != 'b')][['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']]

part[(part['TYPE'] == 'STA') & (part['BRAND'] != 'Brand#55') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2'])) | (part['P_PARTKEY'] == 32) | (part['P_PARTKEY'] <= 62) & (part['P_PARTKEY'] != 198) | (part['P_NAME'] != 'd') | (part['P_PARTKEY'] >= 185)].groupby(by=['BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('E')) | (part['PT_COMMENT'].str.startswith(' fi')) | (part['BRAND'] != 'Brand#52') & (part['PT_COMMENT'] != 'c') & (part['BRAND'].isin(['Brand#35', 'Brand#53', 'Brand#43', 'Brand#55', 'Brand#51', 'Brand#45', 'Brand#44', 'Brand#33', 'Brand#12', 'Brand#11', 'Brand#22', 'Brand#21', 'Brand#13', 'Brand#14', 'Brand#32', 'Brand#54'])) & (part['P_NAME'] == 'h') & (part['CONTAINER'].str.startswith('MED')) & (part['PT_COMMENT'].str.startswith('a'))].groupby(by=['SIZE', 'BRAND', 'RETAILPRICE']).agg('count')

part[(part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] == 957.613075483714) & (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] > 1063.802993797112) & (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] >= 966.0287951776177) | (part['MFGR'] == 'Manufacturer#5')].groupby(by=['BRAND', 'SIZE', 'MFGR', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) | (part['TYPE'] != 'S') & (part['SIZE'] < 6) | (part['P_PARTKEY'] < 83) | (part['SIZE'] != 47) & (part['P_PARTKEY'] <= 116) | (part['P_PARTKEY'] >= 125)][['BRAND', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']]

part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']].groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['CONTAINER', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part[['P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']].groupby(by=['MFGR', 'TYPE', 'CONTAINER', 'SIZE']).agg('max', numeric_only=True)

part[['P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']].groupby(by=['P_NAME', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['BRAND', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'TYPE', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[['TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['MFGR', 'RETAILPRICE']).agg('count')

part[['TYPE', 'P_NAME', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']].groupby(by=['P_NAME', 'PT_COMMENT', 'MFGR', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'MFGR']).agg('count')

partsupp.merge(part[(part['BRAND'] != 'Brand#51')][['BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['BRAND'].isin(['Brand#54', 'Brand#15', 'Brand#43', 'Brand#34', 'Brand#31', 'Brand#23'])) | (part['P_NAME'] != 'o') | (part['BRAND'].isin(['Brand#11', 'Brand#52', 'Brand#45', 'Brand#24', 'Brand#31', 'Brand#43', 'Brand#54', 'Brand#14', 'Brand#12'])) & (part['BRAND'] == 'Brand#51') & (part['BRAND'] == 'Brand#41') | (part['MFGR'] != 'Manufacturer#5')][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#4') & (part['P_PARTKEY'] == 10) & (part['P_PARTKEY'] > 129) & (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] != 45)][['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] > 6) & (part['BRAND'] != 'Brand#13') | (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE']).agg('count')

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NATIONKEY'] != 6) & (nation['N_NATIONKEY'] != 2) & (nation['N_NATIONKEY'] == 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 3100)].merge(part[['CONTAINER', 'TYPE', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 8590)].merge(part[['CONTAINER', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 3763) | (partsupp['AVAILQTY'] > 8252) | (partsupp['PS_PARTKEY'] == 22)].merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 1171) & (partsupp['PS_PARTKEY'] != 38) | (partsupp['PS_SUPPKEY'] <= 4608) | (partsupp['PS_PARTKEY'] > 30)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 2102) & (partsupp['PS_SUPPKEY'] > 382)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 34) | (partsupp['AVAILQTY'] == 2801)].merge(part[(part['SIZE'] >= 32) | (part['P_PARTKEY'] <= 3) & (part['SIZE'] == 43) & (part['BRAND'].isin(['Brand#43', 'Brand#51', 'Brand#44', 'Brand#41', 'Brand#23', 'Brand#25', 'Brand#21', 'Brand#14', 'Brand#52', 'Brand#31', 'Brand#53', 'Brand#12', 'Brand#42', 'Brand#24', 'Brand#35', 'Brand#13', 'Brand#33']))][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 37) & (partsupp['PS_PARTKEY'] >= 27) & (partsupp['SUPPLYCOST'] >= 741.324075614224) & (partsupp['P_COMMENT'] == 'c')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 1530) & (partsupp['SUPPLYCOST'] <= 25.730731713980177)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6338) & (partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'].str.startswith('l')) & (partsupp['PS_SUPPKEY'] <= 5579)].merge(part[['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 876) & (partsupp['SUPPLYCOST'] == 195.12762080817464) | (partsupp['PS_PARTKEY'] <= 18) & (partsupp['PS_PARTKEY'] == 14) & (partsupp['PS_PARTKEY'] <= 30)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 2781) | (partsupp['PS_PARTKEY'] >= 23) | (partsupp['PS_SUPPKEY'] < 3) | (partsupp['AVAILQTY'] < 1601) & (partsupp['SUPPLYCOST'] != 227.21952534488753)].merge(part[['SIZE', 'P_PARTKEY', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 6249) & (partsupp['PS_PARTKEY'] != 13)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 7111) | (partsupp['PS_PARTKEY'] != 4) & (partsupp['PS_SUPPKEY'] != 5361) | (partsupp['PS_PARTKEY'] <= 42) | (partsupp['P_COMMENT'] == 'o')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'a') & (partsupp['PS_SUPPKEY'] < 1306) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['SUPPLYCOST'] == 318.5419953430014)].merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'u')][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 5086.250707963824)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'bli') | (partsupp['PS_PARTKEY'] <= 13) | (partsupp['P_COMMENT'] == 'u')].merge(part[['P_NAME', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'r') & (partsupp['SUPPLYCOST'] <= 268.4964836057941) & (partsupp['AVAILQTY'] < 5974)][['PS_PARTKEY']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['AVAILQTY'] > 6674)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith(' th'))][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 110.23756227790565) & (partsupp['PS_PARTKEY'] <= 17) & (partsupp['PS_PARTKEY'] == 44)].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 148.65590652523792) & (partsupp['PS_SUPPKEY'] == 2972)].merge(supplier[(supplier['S_ADDRESS'] == '8')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 67.8672700888027) & (partsupp['P_COMMENT'] != 'the') & (partsupp['SUPPLYCOST'] > 690.3287165172007)].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 219.72091495686257) | (partsupp['PS_PARTKEY'] >= 15) | (partsupp['AVAILQTY'] > 9478) & (partsupp['PS_PARTKEY'] < 27)].merge(supplier[(supplier['S_COMMENT'] != 'o')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 237.33781011444793) & (partsupp['SUPPLYCOST'] < 555.8210294012284) | (partsupp['SUPPLYCOST'] != 674.5602745892462)].merge(supplier[(supplier['S_SUPPKEY'] >= 65) | (supplier['S_SUPPKEY'] == 69) | (supplier['S_ACCTBAL'] == 2723.370005213358) | (supplier['S_ACCTBAL'] > 2624.9639641631684) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'k')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 424.504976375249)].merge(supplier[(supplier['S_SUPPKEY'] >= 40)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 880.592173689325)].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 19.96371502812849) | (partsupp['PS_PARTKEY'] > 40) | (partsupp['SUPPLYCOST'] < 296.9985175337227) & (partsupp['AVAILQTY'] > 4752)].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 32.48514086875122) & (partsupp['SUPPLYCOST'] <= 354.218290121453)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 'w') | (part['P_PARTKEY'] > 172) & (part['P_PARTKEY'] == 158) & (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'].str.startswith('lem')) & (part['MFGR'].isin(['Manufacturer#1']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] <= 4) & (part['SIZE'] > 47) | (part['CONTAINER'].str.startswith('SM')) & (part['RETAILPRICE'] != 1065.0838584227952) & (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 6194.294122397411) | (supplier['S_ACCTBAL'] <= -456.64016034472377)][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('d')) | (part['BRAND'].isin(['Brand#31', 'Brand#23', 'Brand#53', 'Brand#35', 'Brand#52', 'Brand#42'])) & (part['TYPE'] == 'P') | (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'].str.startswith('L')) | (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'E') & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] > 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] >= 13) | (nation['N_NAME'] != 'A')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NAME'] != 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'].str.startswith('V'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] > 12) | (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'] == 'U')].merge(region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] < 22) | (nation['N_COMMENT'] != ' ')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 10)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'A') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 20)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 9)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 9) & (nation['N_COMMENT'] != 'o') | (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] != 13)].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] < 1) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] != 'R')].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] == 'B')].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= -393.45154945807246) & (supplier['S_NATIONKEY'] <= 20) & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 189) & (supplier['S_COMMENT'] != 'l') | (supplier['S_COMMENT'] != 'o') | (supplier['S_NAME'].str.startswith('S'))][['S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= -776.2396142867033) | (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '26-') | (supplier['S_COMMENT'] != 'f') & (supplier['S_NATIONKEY'] <= 2) & (supplier['S_COMMENT'] == 'v')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 4616.424357016399) & (supplier['S_ACCTBAL'] < 3028.0117431888475) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '26-') & (supplier['S_ACCTBAL'] > 2696.277769340033) | (supplier['S_ADDRESS'] != 'I') & (supplier['S_SUPPKEY'] == 116)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 8841.103165429642) | (supplier['S_ACCTBAL'] != 4887.823448772094) | (supplier['S_ACCTBAL'] != 4743.8442474775475)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '1') & (supplier['S_COMMENT'].str.startswith('n')) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'] == 'b') | (supplier['S_ACCTBAL'] >= 5640.279305829515)][['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'] != 'O') | (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] == 6234.952290407692) | (supplier['S_SUPPKEY'] <= 37) & (supplier['S_NATIONKEY'] < 15) & (supplier['S_SUPPKEY'] == 182) & (supplier['S_SUPPKEY'] == 65)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'N') | (supplier['S_ADDRESS'] == 'm') | (supplier['S_COMMENT'] != 'l') | (supplier['S_COMMENT'] == 't') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 10)][['S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'W') & (supplier['S_COMMENT'] == 'v') | (supplier['S_NATIONKEY'] == 7) & (supplier['S_NATIONKEY'] < 22) & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_COMMENT'] == 'j') | (supplier['S_SUPPKEY'] == 28)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'Y') | (supplier['S_PHONE'] == '32-') | (supplier['S_ADDRESS'] != 'W') & (supplier['S_ADDRESS'] != 'v') | (supplier['S_SUPPKEY'] == 167) & (supplier['S_SUPPKEY'] == 73)].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('z')) & (supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_ACCTBAL'] <= 7065.873461877836) & (supplier['S_ACCTBAL'] >= 1000.8335280249048) & (supplier['S_NATIONKEY'] > 10) & (supplier['S_ACCTBAL'] >= 6579.064962452138) & (supplier['S_COMMENT'].str.startswith('d'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'q') & (supplier['S_ACCTBAL'] >= -679.8124686166875) | (supplier['S_ADDRESS'] != 'M') | (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 't') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] >= 2118.270548876333) & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('the')) & (supplier['S_ADDRESS'] == 'G') | (supplier['S_PHONE'].str.startswith('1'))][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_SUPPKEY'] >= 119) | (supplier['S_NATIONKEY'] <= 17) | (supplier['S_ACCTBAL'] >= 3927.8000531948974) & (supplier['S_COMMENT'] != 'l')][['S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 75)].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_NATIONKEY'] != 21) | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] > 144) & (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_NATIONKEY'] < 10) | (supplier['S_NATIONKEY'] > 21) & (supplier['S_SUPPKEY'] != 174)][['S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] == 8006.2619683299845) & (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_COMMENT'] == 'q') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'g') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'x')].merge(nation[(nation['N_NATIONKEY'] > 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 12) & (supplier['S_ACCTBAL'] < -263.0403143021954) & (supplier['S_PHONE'].str.startswith('2'))].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 8) | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 5) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '3')].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 8)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 9) | (supplier['S_ADDRESS'] != 'S') & (supplier['S_PHONE'].str.startswith('32-'))][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 16) & (supplier['S_PHONE'] != '26-') & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'g') & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_PHONE'] != '3') | (supplier['S_PHONE'] == '28-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] < 91) & (supplier['S_NATIONKEY'] != 4) & (supplier['S_NATIONKEY'] > 13) & (supplier['S_COMMENT'] != 't') | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] >= 3930.228917165973) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] <= 8) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '17-')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] != 5611.346216613981) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 6688.079961794502) & (supplier['S_PHONE'].str.startswith('2'))][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_SUPPKEY'] == 43)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ADDRESS'].str.startswith('M')) | (supplier['S_ADDRESS'] != '5') & (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'] != '14-') & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 190)][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 118) & (supplier['S_COMMENT'].str.startswith('a')) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] >= 13) & (supplier['S_SUPPKEY'] <= 133) | (supplier['S_SUPPKEY'] < 13) | (supplier['S_SUPPKEY'] < 74)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 20) & (supplier['S_NATIONKEY'] > 11) | (supplier['S_NAME'] != 'S')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 60) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 86) & (supplier['S_PHONE'] == '3') & (supplier['S_COMMENT'] != 'the') | (supplier['S_ACCTBAL'] < 4536.954611924167) | (supplier['S_ACCTBAL'] > 2883.583551302174)].groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 116) & (supplier['S_SUPPKEY'] <= 196) | (supplier['S_NATIONKEY'] < 14) & (supplier['S_SUPPKEY'] > 163) | (supplier['S_ADDRESS'].str.startswith('v')) & (supplier['S_NATIONKEY'] >= 1) | (supplier['S_ACCTBAL'] > 6206.348334691151)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] <= 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'I')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'] == 'C')].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 18)].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_REGIONKEY'] < 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 21)].merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 3359.1866294639203) | (customer['C_ADDRESS'] == 'S')].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= -721.1523572231425) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'] == 's') | (customer['C_COMMENT'] == 'k') & (customer['C_ACCTBAL'] < 9947.811884613064) & (customer['C_CUSTKEY'] <= 44) | (customer['C_ACCTBAL'] != 7177.918526278231) | (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']]

customer[(customer['C_ACCTBAL'] <= 8461.75574437879)][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 3973.581685185094) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ACCTBAL'] != 4023.708982017856) | (customer['C_ADDRESS'].str.startswith('H')) | (customer['C_COMMENT'] != 'p') | (customer['C_COMMENT'] == 'd') & (customer['C_COMMENT'] != 't')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 5077.207037267716)].merge(nation[(nation['N_COMMENT'] != 'u')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 4986.267012131583) & (customer['C_ADDRESS'].str.startswith('D')) | (customer['C_ADDRESS'] == 'K') | (customer['C_CUSTKEY'] != 59) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING'])) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NAME'] != 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'H') & (customer['C_ACCTBAL'] >= 3208.7720388239404) & (customer['C_ACCTBAL'] == 6607.217152670109) & (customer['C_NATIONKEY'] == 3)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('J')) & (customer['C_ADDRESS'].str.startswith('7')) | (customer['C_ACCTBAL'] > 4895.469634266441) | (customer['C_PHONE'].str.startswith('3')) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] != 'v') | (customer['C_COMMENT'].str.startswith('i'))][['C_ADDRESS', 'C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != '.') | (customer['C_CUSTKEY'] <= 86) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] < 20)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != 'e') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] == 'a') | (customer['C_PHONE'] == '27-') & (customer['C_COMMENT'].str.startswith('t')) | (customer['C_NATIONKEY'] > 21) & (customer['C_ACCTBAL'] != 4213.704029478365) | (customer['C_CUSTKEY'] <= 1)][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'e') | (customer['C_COMMENT'].str.startswith('t')) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] >= 22)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'g') & (customer['C_COMMENT'].str.startswith('k')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] <= 55) & (customer['C_NATIONKEY'] < 1) | (customer['C_NATIONKEY'] > 17)][['C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 69) | (customer['C_NATIONKEY'] < 20) & (customer['C_ADDRESS'].str.startswith('Q'))].merge(nation[(nation['N_NATIONKEY'] < 14) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] <= 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 62) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 84) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] != '3') | (customer['C_CUSTKEY'] == 7)].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 89) | (customer['C_ACCTBAL'] == 1036.1125486588035) | (customer['C_CUSTKEY'] != 32) & (customer['C_COMMENT'] != '.') | (customer['C_COMMENT'].str.startswith('.'))][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 33) | (customer['C_CUSTKEY'] == 1) | (customer['C_CUSTKEY'] >= 60) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 3044.0528289263257)][['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']]

customer[(customer['C_CUSTKEY'] >= 47) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 19) & (customer['C_NATIONKEY'] <= 7) | (customer['C_ADDRESS'].str.startswith('0'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 84) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('2')) | (customer['C_COMMENT'] != 'i')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == 1475.2072625653796) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'].str.startswith('H')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '2') & (customer['C_ADDRESS'].str.startswith('U'))][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']]

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 91) & (customer['C_CUSTKEY'] == 61) & (customer['C_ACCTBAL'] != 9723.760706604724) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] >= 13) | (customer['C_NATIONKEY'] >= 15)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] == 81) | (customer['C_CUSTKEY'] <= 1) & (customer['C_ADDRESS'] != 'T') & (customer['C_ADDRESS'] == 'F') & (customer['C_PHONE'].str.startswith('22-'))][['C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] <= 13)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] > -485.62576058766825)].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] != 17) & (nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '1') | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 51) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 49) & (customer['C_NATIONKEY'] > 0) | (customer['C_CUSTKEY'] <= 84)][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('c')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE']))].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] > 8) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE']))].merge(nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] <= 5) | (customer['C_CUSTKEY'] != 93)].merge(nation[(nation['N_NATIONKEY'] > 21)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'].str.startswith('3')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] != 5) | (customer['C_ACCTBAL'] == 6023.5189903510045) | (customer['C_ACCTBAL'] >= 8774.511075773207) & (customer['C_ACCTBAL'] == 3963.6686493706175) | (customer['C_NATIONKEY'] != 11)][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'] != 't') | (customer['C_NATIONKEY'] <= 0) | (customer['C_COMMENT'] != 'w') | (customer['C_CUSTKEY'] <= 39) & (customer['C_CUSTKEY'] != 52) & (customer['C_ACCTBAL'] >= 902.0274410645079) | (customer['C_PHONE'] != '25-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] < 5) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] <= 12) & (customer['C_CUSTKEY'] > 56)][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] >= 37) & (customer['C_CUSTKEY'] <= 46)][['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].groupby(by=['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] < 633) | (orders['TOTALPRICE'] > 352218.7357893164) | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C')].merge(customer[(customer['C_NATIONKEY'] != 18) | (customer['C_CUSTKEY'] < 21) | (customer['C_COMMENT'].str.startswith('w'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'g') | (part['CONTAINER'].str.startswith('LG')) | (part['PT_COMMENT'] == 'd') | (part['P_PARTKEY'] != 120)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_COMMENT'] == 'r') | (supplier['S_SUPPKEY'] >= 92) & (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_ADDRESS'] == 'N')][['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 2558)].merge(part[(part['CONTAINER'] != 'JUMBO') & (part['SIZE'] != 6) | (part['P_PARTKEY'] <= 173) | (part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'].str.startswith('o')) & (part['SIZE'] >= 31) & (part['SIZE'] > 23)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 5213) & (partsupp['AVAILQTY'] != 4953) & (partsupp['AVAILQTY'] <= 2964)].merge(supplier[(supplier['S_ACCTBAL'] >= 6126.170757005834) & (supplier['S_ADDRESS'] != 'X') & (supplier['S_NATIONKEY'] >= 10) | (supplier['S_ACCTBAL'] < 8259.104189342837) & (supplier['S_NATIONKEY'] < 18)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 4621) & (partsupp['PS_SUPPKEY'] > 4853)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'l')][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] != 3797.9499094254115)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 956.5807914211248)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 870.7764230344311) | (partsupp['PS_PARTKEY'] <= 41) & (partsupp['PS_SUPPKEY'] == 3057)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['SIZE'] > 46)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.03643658484343914) | (lineitem['DISCOUNT'] != 0.04980548033653437) | (lineitem['EXTENDEDPRICE'] >= 58134.81968571634) | (lineitem['L_ORDERKEY'] > 6) & (lineitem['LINENUMBER'] != 1) & (lineitem['L_SUPPKEY'] < 4308) | (lineitem['L_PARTKEY'] >= 110145)].groupby(by=['L_PARTKEY', 'SHIPDATE', 'SHIPMODE', 'QUANTITY', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 17364.74446598052) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_PARTKEY'] == 129022)][['TAX', 'RECEIPTDATE', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT', 'TAX', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 42528.36535348054) | (lineitem['L_PARTKEY'] <= 23816) | (lineitem['L_SUPPKEY'] != 3974) & (lineitem['LINENUMBER'] > 6) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['EXTENDEDPRICE'] == 7449.010593965264) | (lineitem['SHIPDATE'] > '1998-10-30')][['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 66250.83340131935) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['EXTENDEDPRICE'] <= 42625.59437239595) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['EXTENDEDPRICE'] == 72535.85879607726) & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['DISCOUNT'] <= 0.006821879361328765) & (lineitem['SHIPMODE'] != 'AIR')].groupby(by=['L_COMMENT', 'RECEIPTDATE', 'SHIPMODE', 'L_SUPPKEY']).agg('count')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['QUANTITY'] == 10) & (lineitem['L_ORDERKEY'] == 62) & (lineitem['DISCOUNT'] != 0.01550743581140025) | (lineitem['SHIPMODE'] != 'MAIL')][['SHIPMODE', 'DISCOUNT', 'TAX', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != '.') & (lineitem['TAX'] >= 0.0323253135673635) | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_SUPPKEY'] <= 3818) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['QUANTITY'] > 24)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 2747) & (partsupp['SUPPLYCOST'] >= 624.0408388370205) & (partsupp['PS_PARTKEY'] == 31)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'd') & (lineitem['L_PARTKEY'] != 160917) & (lineitem['DISCOUNT'] == 0.017803267617064845)][['RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'q') | (partsupp['PS_SUPPKEY'] != 3107) & (partsupp['P_COMMENT'] != 'bli')], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == 'u')].merge(partsupp.merge(part[(part['RETAILPRICE'] != 988.2581071528355) & (part['BRAND'] != 'Brand#35')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 75) | (lineitem['SHIPDATE'] == '1998-10-30')][['RECEIPTDATE', 'L_COMMENT', 'L_PARTKEY', 'L_SUPPKEY', 'COMMITDATE', 'RETURNFLAG', 'DISCOUNT']].groupby(by=['RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 4891)].merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 3073.872684258337) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 3295) | (lineitem['L_PARTKEY'] <= 24416) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_ORDERKEY'] < 133)][['SHIPMODE', 'DISCOUNT', 'SHIPINSTRUCT', 'L_COMMENT']].groupby(by=['DISCOUNT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 4265) & (lineitem['EXTENDEDPRICE'] <= 35448.069689254036) | (lineitem['L_ORDERKEY'] <= 190) | (lineitem['L_SUPPKEY'] == 1314) & (lineitem['L_PARTKEY'] > 184933) & (lineitem['L_ORDERKEY'] >= 58) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RETURNFLAG'] == 'R') | (lineitem['LINENUMBER'] <= 4) & (lineitem['L_SUPPKEY'] >= 5710)][['QUANTITY', 'TAX', 'RECEIPTDATE']]

lineitem[(lineitem['L_SUPPKEY'] >= 5246) & (lineitem['L_SUPPKEY'] < 4042) | (lineitem['LINENUMBER'] <= 6) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['LINESTATUS'] == 'O')][['TAX', 'L_ORDERKEY', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] == 11) & (lineitem['LINESTATUS'] != 'F') | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['DISCOUNT'] <= 0.04984738699068519) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_COMMENT'].str.startswith('f'))][['LINENUMBER']].groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 16) | (lineitem['L_ORDERKEY'] >= 64) & (lineitem['L_ORDERKEY'] <= 57) | (lineitem['SHIPMODE'] != 'AIR')].merge(orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['L_ORDERKEY'] == 29) | (lineitem['LINESTATUS'].isin(['O', 'F']))].merge(orders[['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['EXTENDEDPRICE'] <= 39720.55219709394) | (lineitem['TAX'] < 0.03438209823371345) | (lineitem['DISCOUNT'] >= 0.019726812260673045) & (lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['L_COMMENT'] == '-') | (lineitem['TAX'] <= 0.07513613601862455) | (lineitem['SHIPDATE'] <= '1992-04-27')].groupby(by=['RECEIPTDATE', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['EXTENDEDPRICE'] != 9306.527316523485)][['QUANTITY', 'SHIPDATE', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'SHIPDATE', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['L_ORDERKEY'] != 46) | (lineitem['DISCOUNT'] == 0.08379719708816548)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'P_NAME']).agg('count')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['L_COMMENT'] != 'g') | (lineitem['EXTENDEDPRICE'] <= 49480.24578480098) & (lineitem['L_COMMENT'] == 'c') | (lineitem['LINESTATUS'] != 'O') | (lineitem['DISCOUNT'] != 0.07692127200602766) & (lineitem['COMMITDATE'] > '1998-10-16')][['LINESTATUS', 'SHIPINSTRUCT', 'DISCOUNT', 'SHIPDATE', 'L_COMMENT']]

lineitem[(lineitem['SHIPMODE'] == 'MAIL') | (lineitem['TAX'] < 0.04497882981789956) & (lineitem['LINENUMBER'] != 5) | (lineitem['DISCOUNT'] >= 0.030854512808426982) | (lineitem['EXTENDEDPRICE'] > 59142.03193685382) | (lineitem['QUANTITY'] < 49) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_PARTKEY'] < 140244) & (lineitem['L_PARTKEY'] <= 80347) | (lineitem['DISCOUNT'] == 0.026165797928801738)][['DISCOUNT', 'SHIPINSTRUCT', 'SHIPDATE']]

lineitem[['COMMITDATE', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['DISCOUNT', 'RETURNFLAG', 'SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPMODE', 'L_PARTKEY', 'LINENUMBER', 'L_SUPPKEY']].groupby(by=['L_SUPPKEY', 'SHIPMODE', 'SHIPDATE']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'RECEIPTDATE', 'RETURNFLAG', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'TAX']].groupby(by=['QUANTITY', 'LINENUMBER', 'SHIPMODE']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'DISCOUNT', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] == 3890) | (partsupp['AVAILQTY'] >= 1638)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('count')

lineitem[['SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY', 'TAX', 'LINENUMBER', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'COMMITDATE', 'L_ORDERKEY', 'LINESTATUS', 'L_SUPPKEY']].groupby(by=['L_COMMENT', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'LINESTATUS', 'L_PARTKEY']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'CONTAINER']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'].str.startswith('J'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'o')].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'u')].merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'].str.startswith('R')) & (nation['N_NAME'] == 'B')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] > 1) | (nation['N_REGIONKEY'] <= 0)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] == 19)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] > 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] == 9) & (nation['N_NATIONKEY'] < 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 15)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] >= 9) | (nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] != 12) | (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] >= 19)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'S') | (nation['N_NATIONKEY'] < 5)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] < 3) | (nation['N_NATIONKEY'] > 22)][['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'B')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] >= 3)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] < 14)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 12) & (nation['N_NATIONKEY'] > 19) & (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == ' ')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] != 2) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 3) | (nation['N_NATIONKEY'] != 9) & (nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] != 6)][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 8) & (nation['N_NATIONKEY'] <= 23) | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] == 'p')].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_NATIONKEY'] <= 22) | (nation['N_NATIONKEY'] >= 3) | (nation['N_NAME'] == 'K')][['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 12) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('S')) & (nation['N_COMMENT'] == 'a')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_NAME'] != 'U') | (nation['N_NATIONKEY'] == 8) | (nation['N_NAME'] != 'K')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] <= 22) & (nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] != 'r')].merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 5)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 3) & (nation['N_COMMENT'] != 'r')].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] > 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] < 10) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] > 22)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] != 8)].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'].str.startswith('A'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 21) | (nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'K')].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] != 'a')].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 12) | (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] > 1) | (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'C') | (nation['N_COMMENT'] != 't')].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] != 15) & (nation['N_NAME'] == 'K') | (nation['N_COMMENT'] == 'i')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'P') | (nation['N_COMMENT'] != ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'A')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == '8') | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_COMMENT'] != 'p')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 20) | (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] == 'F')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 303419.99932929897)][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS']).agg('count')

orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] != '1992-01-13') | (orders['TOTALPRICE'] <= 46867.06280151904)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 113699) & (orders['O_COMMENT'] == '-') & (orders['CLERK'] != 'C')].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] < '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] <= 4518.428841664594) & (customer['C_ACCTBAL'] == 2725.239010209053) & (customer['C_PHONE'] == '2') & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] < 285327.7791735133) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] >= 11149) | (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 705) & (orders['ORDERSTATUS'].isin(['F', 'O']))][['SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] == 475) | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 196078.5181942472) | (orders['ORDERDATE'] > '1998-07-21')][['ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'] != 'n') | (orders['O_ORDERKEY'] < 513)][['CLERK', 'O_ORDERKEY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'CLERK']).agg('count')

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['O_CUSTKEY'] == 48874) | (orders['O_ORDERKEY'] == 449) & (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_CUSTKEY'] >= 4179) | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] <= 179163.4433885856) | (orders['O_CUSTKEY'] != 120069)].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_COMMENT'].str.startswith('u')) & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '2-HIGH']))].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] >= 125821) | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] == 106848)][['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == 'f') | (orders['TOTALPRICE'] > 335784.4080081831) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH']))][['CLERK', 'ORDERDATE', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'ORDERDATE', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] != 't') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] == 311)][['ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']]

orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['O_ORDERKEY'] == 407) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] <= 84783.42029989797)][['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 41901)][['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 61650) & (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] < 197942.03490582897) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'] == 'P')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 85610) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 702) & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_CUSTKEY'] > 132202) | (orders['ORDERSTATUS'].isin(['P', 'F']))][['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE']].groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 768) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] == ' re') & (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] <= 30355.8876117005) | (orders['TOTALPRICE'] >= 170513.32291317286) & (orders['O_CUSTKEY'] > 117203) & (orders['O_CUSTKEY'] <= 76835)][['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] <= 159094.58429947429) & (orders['O_CUSTKEY'] != 73433) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] < 52592) & (orders['TOTALPRICE'] < 142162.60106401754)][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] <= 168160.24271500407) & (orders['O_COMMENT'].str.startswith('the')) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('o')) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_CUSTKEY'] < 15) | (customer['C_PHONE'] == '18-') | (customer['C_PHONE'] == '22-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 8212.265922505445) | (orders['ORDERSTATUS'] != 'P')].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] < 209855.8763376369) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERSTATUS'] != 'O')][['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']].groupby(by=['CLERK', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 188446.50981452985) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))].merge(customer[(customer['C_ADDRESS'] != ',') & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'].str.startswith('C'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY']).agg('count')

part[(part['BRAND'] != 'Brand#35')][['MFGR', 'TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') | (part['P_PARTKEY'] >= 10) | (part['SIZE'] >= 43) | (part['RETAILPRICE'] <= 939.3445312198772) | (part['CONTAINER'] != 'WRAP') & (part['BRAND'] != 'Brand#13') & (part['SIZE'] >= 21)][['CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']]

part[(part['BRAND'] == 'Brand#42') & (part['RETAILPRICE'] == 915.8857226714058) & (part['BRAND'] == 'Brand#31') & (part['P_PARTKEY'] < 65) & (part['BRAND'] != 'Brand#52') & (part['MFGR'] != 'Manufacturer#5')][['SIZE', 'P_NAME', 'MFGR', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['BRAND'] == 'Brand#51') & (part['BRAND'] != 'Brand#33') & (part['P_NAME'] == 'cor') & (part['PT_COMMENT'].str.startswith('w')) | (part['TYPE'] == 'L') | (part['SIZE'] <= 33)][['SIZE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#55') | (part['P_PARTKEY'] == 10) | (part['CONTAINER'] == 'MED') | (part['P_NAME'].str.startswith('f'))][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']]

part[(part['BRAND'].isin(['Brand#31', 'Brand#13', 'Brand#32', 'Brand#42', 'Brand#14', 'Brand#25', 'Brand#51', 'Brand#15', 'Brand#12', 'Brand#35', 'Brand#55'])) | (part['SIZE'] >= 25) & (part['TYPE'] != 'M')][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'BRAND', 'CONTAINER']].groupby(by=['BRAND', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#54', 'Brand#31', 'Brand#32', 'Brand#42', 'Brand#12', 'Brand#15', 'Brand#33', 'Brand#43'])) & (part['SIZE'] >= 17) | (part['TYPE'] == 'P') | (part['TYPE'] != 'S') | (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] >= 98) | (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] < 999.8147643240713)][['SIZE']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['P_NAME'] == 'y') & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'].isin(['Brand#41', 'Brand#12', 'Brand#53', 'Brand#31', 'Brand#34', 'Brand#42', 'Brand#35', 'Brand#55', 'Brand#51', 'Brand#23', 'Brand#33', 'Brand#32', 'Brand#52', 'Brand#13', 'Brand#25', 'Brand#22', 'Brand#14', 'Brand#54', 'Brand#11', 'Brand#43'])) & (part['CONTAINER'] != 'LG') & (part['P_NAME'].str.startswith('lin')) | (part['SIZE'] != 30)][['MFGR', 'TYPE', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY']]

part[(part['CONTAINER'] != 'SM') & (part['BRAND'] == 'Brand#55') & (part['TYPE'] == 'S') | (part['P_PARTKEY'] >= 47) & (part['CONTAINER'].str.startswith('SM')) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) & (part['BRAND'].isin(['Brand#12', 'Brand#31', 'Brand#55', 'Brand#45', 'Brand#25', 'Brand#51', 'Brand#32', 'Brand#11', 'Brand#21', 'Brand#22', 'Brand#13', 'Brand#34', 'Brand#54', 'Brand#42', 'Brand#24', 'Brand#43', 'Brand#53', 'Brand#23', 'Brand#52', 'Brand#33'])) & (part['SIZE'] >= 26)].groupby(by=['P_PARTKEY', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] == 1020.1783029093069)][['BRAND', 'MFGR', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] != 's') | (part['P_NAME'].str.startswith('d')) & (part['CONTAINER'] != 'LG') | (part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] >= 955.3706972816105) & (part['P_NAME'] == 'v')].groupby(by=['RETAILPRICE', 'BRAND', 'TYPE', 'SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'LG') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3'])) | (part['PT_COMMENT'] != 'a') | (part['SIZE'] > 36) | (part['RETAILPRICE'] <= 1026.3168995373092) | (part['BRAND'].isin(['Brand#22', 'Brand#13', 'Brand#23', 'Brand#32', 'Brand#34', 'Brand#25', 'Brand#54', 'Brand#33', 'Brand#42', 'Brand#52', 'Brand#15', 'Brand#43', 'Brand#24', 'Brand#21', 'Brand#12', 'Brand#35', 'Brand#41', 'Brand#14', 'Brand#53', 'Brand#11', 'Brand#51', 'Brand#44', 'Brand#45', 'Brand#31'])) & (part['BRAND'].isin(['Brand#24', 'Brand#53', 'Brand#32', 'Brand#33', 'Brand#14', 'Brand#44', 'Brand#23', 'Brand#11', 'Brand#51', 'Brand#22', 'Brand#42'])) & (part['TYPE'].str.startswith('P'))][['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND']]

part[(part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] > 961.7350775390616) & (part['P_NAME'] == 'a') | (part['P_PARTKEY'] != 128) | (part['RETAILPRICE'] > 935.2022999288375)][['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['CONTAINER'] == 'MED') & (part['P_PARTKEY'] <= 189) & (part['BRAND'] != 'Brand#54') & (part['TYPE'] == 'S') | (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] < 14) | (part['P_NAME'].str.startswith('d')) & (part['MFGR'] != 'Manufacturer#2')][['RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_NAME']]

part[(part['CONTAINER'] == 'SM') | (part['BRAND'] == 'Brand#33') | (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'] == 'q') & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_PARTKEY'] <= 49) & (part['P_PARTKEY'] > 30)][['BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'CONTAINER']]

part[(part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] >= 195)][['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1'])) | (part['PT_COMMENT'] == 'l') | (part['SIZE'] > 37) & (part['PT_COMMENT'].str.startswith('w')) | (part['P_PARTKEY'] != 93) | (part['RETAILPRICE'] >= 981.3177096179568) & (part['P_PARTKEY'] != 144) & (part['CONTAINER'] == 'WRAP')].groupby(by=['TYPE', 'CONTAINER', 'BRAND', 'SIZE']).agg('count')

part[(part['PT_COMMENT'] != 'c') | (part['PT_COMMENT'] == 'y') & (part['SIZE'] == 19) | (part['BRAND'] == 'Brand#53') | (part['RETAILPRICE'] != 963.6244948738905) | (part['BRAND'].isin(['Brand#22', 'Brand#45', 'Brand#11', 'Brand#33', 'Brand#41', 'Brand#43', 'Brand#51', 'Brand#44', 'Brand#23', 'Brand#54', 'Brand#15', 'Brand#31'])) | (part['RETAILPRICE'] < 1080.7968545481997)].groupby(by=['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'g') & (part['MFGR'] != 'Manufacturer#4')][['MFGR', 'SIZE', 'BRAND', 'TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'i') | (part['P_PARTKEY'] != 157) & (part['RETAILPRICE'] < 999.1375391379269) | (part['P_NAME'] != 'd') & (part['RETAILPRICE'] != 1012.480469795633) | (part['P_NAME'] == 'w')][['RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'].str.startswith('w')) & (part['BRAND'] != 'Brand#51') | (part['RETAILPRICE'] < 954.1934963161789) | (part['P_NAME'] != 'f') & (part['P_NAME'] != 'm') | (part['TYPE'].str.startswith('E'))][['BRAND', 'CONTAINER']].groupby(by=['BRAND', 'CONTAINER']).agg('count')

part[(part['P_NAME'] != 'a') | (part['PT_COMMENT'] != 'kag') | (part['BRAND'].isin(['Brand#13', 'Brand#33', 'Brand#11', 'Brand#21', 'Brand#31', 'Brand#15'])) & (part['RETAILPRICE'] >= 1083.0766215942006) | (part['MFGR'].isin(['Manufacturer#3'])) & (part['P_NAME'] != 'h') & (part['CONTAINER'] == 'LG') | (part['BRAND'] != 'Brand#14')][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'p') | (part['CONTAINER'].str.startswith('WRAP')) & (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] == 190) & (part['CONTAINER'] != 'WRAP') | (part['SIZE'] != 44) | (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] <= 1093.322822514399)][['BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 's') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5'])) | (part['BRAND'] == 'Brand#13') | (part['TYPE'].str.startswith('M')) & (part['RETAILPRICE'] <= 972.4071852763781) & (part['TYPE'] != 'L') & (part['BRAND'] == 'Brand#44') | (part['PT_COMMENT'] != 'm') | (part['MFGR'] == 'Manufacturer#1')].groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME']).agg('count')

part[(part['P_NAME'] == 'blu') & (part['P_PARTKEY'] != 48) & (part['BRAND'] == 'Brand#45') & (part['RETAILPRICE'] == 1086.9234506499322) | (part['PT_COMMENT'] != 'the') & (part['PT_COMMENT'] != 'p') | (part['P_NAME'] != 'r') | (part['P_NAME'].str.startswith('c'))][['RETAILPRICE', 'PT_COMMENT', 'SIZE', 'P_NAME', 'CONTAINER']]

part[(part['P_NAME'] == 'm') | (part['CONTAINER'] == 'MED')][['P_NAME', 'MFGR', 'RETAILPRICE', 'CONTAINER']].groupby(by=['RETAILPRICE', 'P_NAME', 'CONTAINER', 'MFGR']).agg('count')

part[(part['P_NAME'].str.startswith('d')) & (part['PT_COMMENT'] != 'h') & (part['TYPE'] == 'L') & (part['MFGR'] != 'Manufacturer#3') | (part['P_NAME'].str.startswith('bis'))][['TYPE', 'BRAND', 'RETAILPRICE', 'P_NAME']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] == 12) | (part['CONTAINER'].str.startswith('MED'))][['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE']].groupby(by=['SIZE', 'PT_COMMENT', 'MFGR', 'BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 180) & (part['TYPE'] != 'P') | (part['P_NAME'].str.startswith('blu')) & (part['P_NAME'].str.startswith('d')) | (part['BRAND'] != 'Brand#25') | (part['CONTAINER'] != 'WRAP') & (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] <= 149) & (part['CONTAINER'] == 'JUMBO')][['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY']]

part[(part['P_PARTKEY'] > 161) & (part['RETAILPRICE'] >= 1090.6992454585195) | (part['P_NAME'] != 'y') | (part['SIZE'] == 34) & (part['BRAND'].isin(['Brand#51', 'Brand#24', 'Brand#32', 'Brand#34', 'Brand#22', 'Brand#31', 'Brand#13', 'Brand#42', 'Brand#55', 'Brand#11', 'Brand#45', 'Brand#33', 'Brand#44', 'Brand#35', 'Brand#52', 'Brand#12', 'Brand#14'])) & (part['TYPE'] == 'SMA') | (part['BRAND'] != 'Brand#42')].groupby(by=['CONTAINER', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 123) & (part['PT_COMMENT'].str.startswith('d')) | (part['RETAILPRICE'] == 1055.616445802951) | (part['SIZE'] == 20) | (part['TYPE'].str.startswith('M')) & (part['MFGR'].isin(['Manufacturer#3'])) | (part['PT_COMMENT'].str.startswith('o')) | (part['SIZE'] != 25) & (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['MFGR', 'TYPE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] >= 177) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4'])) & (part['P_NAME'].str.startswith('c')) | (part['BRAND'] == 'Brand#23')][['RETAILPRICE', 'MFGR', 'SIZE']].groupby(by=['RETAILPRICE', 'MFGR', 'SIZE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] < 985.5315272463284) | (part['CONTAINER'] == 'MED') & (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'] == 'LG') | (part['P_PARTKEY'] <= 98) | (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] <= 45)][['MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] <= 924.2736104562968) | (part['P_PARTKEY'] != 29) | (part['PT_COMMENT'] == 'r') & (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] == '!') | (part['P_NAME'] == 'w') | (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'] == 'SMA') | (part['BRAND'].isin(['Brand#11', 'Brand#44']))].groupby(by=['P_NAME', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] > 1003.3778589668395) | (part['PT_COMMENT'] == 'd') | (part['SIZE'] == 23) & (part['BRAND'] != 'Brand#44') & (part['TYPE'] != 'E') | (part['BRAND'] == 'Brand#41')][['CONTAINER', 'P_NAME', 'SIZE']].groupby(by=['CONTAINER']).agg('count')

part[(part['RETAILPRICE'] > 1010.1253696783622) | (part['CONTAINER'] == 'LG')][['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE']].groupby(by=['RETAILPRICE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 945.2137051909853) & (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'] == 'n') & (part['RETAILPRICE'] > 963.1952693626556) | (part['RETAILPRICE'] <= 1082.8892353340264) & (part['P_NAME'].str.startswith('h'))][['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'TYPE', 'PT_COMMENT']]

part[(part['SIZE'] < 23) & (part['RETAILPRICE'] > 1036.7111806636365) & (part['MFGR'] == 'Manufacturer#1') & (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] > 937.3327228853534) & (part['TYPE'] == 'L') | (part['SIZE'] <= 42) | (part['PT_COMMENT'] == 'm') | (part['MFGR'] != 'Manufacturer#5')].groupby(by=['BRAND', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part[(part['SIZE'] < 28) | (part['RETAILPRICE'] <= 935.1421244064647) | (part['BRAND'].isin(['Brand#55', 'Brand#31', 'Brand#54', 'Brand#35', 'Brand#45', 'Brand#13'])) & (part['P_PARTKEY'] > 2) & (part['SIZE'] > 29) & (part['SIZE'] <= 11) & (part['CONTAINER'].str.startswith('LG')) | (part['P_PARTKEY'] >= 73) | (part['PT_COMMENT'] != 's')][['TYPE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']]

part[(part['SIZE'] > 43) & (part['SIZE'] >= 36) & (part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] == 'q') & (part['P_NAME'] == 'lin') | (part['PT_COMMENT'] == 'i') & (part['TYPE'].str.startswith('S')) & (part['CONTAINER'].str.startswith('WRAP'))][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'L') & (part['SIZE'] > 12) | (part['SIZE'] > 15) | (part['BRAND'].isin(['Brand#54', 'Brand#35', 'Brand#32', 'Brand#25', 'Brand#31', 'Brand#44'])) & (part['TYPE'] == 'L') | (part['RETAILPRICE'] != 992.2702666473947) | (part['MFGR'] != 'Manufacturer#1')].groupby(by=['BRAND', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

part[['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['BRAND', 'SIZE', 'MFGR']).agg('count')

part[['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['PT_COMMENT', 'P_NAME', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['RETAILPRICE', 'BRAND', 'MFGR', 'P_PARTKEY']).agg('count')

part[['SIZE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER']).agg('min', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_NAME', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_NAME', 'MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['SIZE', 'MFGR', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE']].groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#3') | (part['P_PARTKEY'] == 70) & (part['P_PARTKEY'] < 146) & (part['RETAILPRICE'] < 1089.1845545377496) | (part['P_NAME'] != 'lin') & (part['P_PARTKEY'] > 117)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != 'q') | (part['RETAILPRICE'] < 974.2674675075393)][['SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] == 'p') | (part['PT_COMMENT'] != 'kag') | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3'])) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] >= 126) | (part['P_PARTKEY'] == 93) & (part['BRAND'] != 'Brand#52')][['MFGR', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 42) | (part['SIZE'] != 1) & (part['P_PARTKEY'] <= 89) & (part['BRAND'] == 'Brand#42') | (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] > 1050.067665210333) & (part['MFGR'] != 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['SIZE'] >= 29) & (part['P_NAME'] == 't') & (part['P_PARTKEY'] < 183) | (part['TYPE'] != 'STA') | (part['PT_COMMENT'].str.startswith('o')) & (part['SIZE'] != 40)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp.merge(part[['BRAND', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[['TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= -135.47261807058044) | (supplier['S_ADDRESS'] != 'q') | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_COMMENT'].str.startswith('p'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8152) | (partsupp['P_COMMENT'] != '.') | (partsupp['PS_SUPPKEY'] <= 2866) | (partsupp['SUPPLYCOST'] >= 187.4388533191203) & (partsupp['PS_PARTKEY'] == 2)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 9227) & (partsupp['PS_SUPPKEY'] == 3383)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 1182) | (partsupp['AVAILQTY'] == 4252) & (partsupp['SUPPLYCOST'] != 91.9893092682013) | (partsupp['PS_SUPPKEY'] <= 6745)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 30) | (partsupp['P_COMMENT'].str.startswith('v')) | (partsupp['P_COMMENT'] == 'y')][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 820) | (partsupp['PS_SUPPKEY'] == 6666) & (partsupp['PS_PARTKEY'] > 34) | (partsupp['AVAILQTY'] != 1353)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2771) & (partsupp['P_COMMENT'] != 'c') | (partsupp['AVAILQTY'] < 807) | (partsupp['AVAILQTY'] == 1360) | (partsupp['PS_SUPPKEY'] >= 5595)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5896)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 3827) & (partsupp['P_COMMENT'] != 'r') | (partsupp['PS_SUPPKEY'] <= 4861)].merge(part[['P_PARTKEY', 'MFGR', 'SIZE', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 6618) | (partsupp['PS_PARTKEY'] == 33) & (partsupp['AVAILQTY'] < 6417) | (partsupp['PS_PARTKEY'] == 15)].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_COMMENT'] == 'i') | (supplier['S_PHONE'] != '26-')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == '.') | (partsupp['P_COMMENT'] != 'h') | (partsupp['P_COMMENT'] == 'a') | (partsupp['PS_PARTKEY'] > 36) & (partsupp['PS_PARTKEY'] > 8)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'f') & (partsupp['AVAILQTY'] >= 8588) & (partsupp['PS_SUPPKEY'] != 2053) | (partsupp['P_COMMENT'] != 'q') & (partsupp['PS_PARTKEY'] > 27)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('j')) | (partsupp['AVAILQTY'] < 6055) | (partsupp['PS_PARTKEY'] == 33) & (partsupp['PS_PARTKEY'] <= 46)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['PS_PARTKEY'] == 21) | (partsupp['AVAILQTY'] > 3750)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['P_COMMENT'] == 'n') & (partsupp['P_COMMENT'] == 'h') & (partsupp['PS_SUPPKEY'] > 5289)].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('x'))].merge(part[(part['BRAND'].isin(['Brand#34', 'Brand#45', 'Brand#43', 'Brand#31', 'Brand#32', 'Brand#13', 'Brand#44', 'Brand#25', 'Brand#23', 'Brand#22', 'Brand#53', 'Brand#15', 'Brand#24', 'Brand#21'])) | (part['P_PARTKEY'] > 156) & (part['BRAND'] != 'Brand#35') | (part['RETAILPRICE'] <= 1013.7952836278763) | (part['PT_COMMENT'].str.startswith('c')) & (part['SIZE'] <= 6) & (part['P_NAME'].str.startswith('b')) & (part['RETAILPRICE'] < 1022.0270070030582) | (part['RETAILPRICE'] != 1043.2474054590737)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 728.6782368049022)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '14-')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 867.9351497108497) & (partsupp['SUPPLYCOST'] <= 652.3869444597659) | (partsupp['P_COMMENT'].str.startswith('n'))].merge(part[['P_NAME', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 823.8342430517658) & (partsupp['AVAILQTY'] < 2596) & (partsupp['PS_SUPPKEY'] == 1103) & (partsupp['P_COMMENT'].str.startswith('r'))].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 834.7056012865434) | (partsupp['AVAILQTY'] >= 5669) & (partsupp['PS_PARTKEY'] <= 19)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 978.6153635370358) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'].isin(['Brand#41', 'Brand#25', 'Brand#54', 'Brand#51', 'Brand#43', 'Brand#24', 'Brand#14', 'Brand#33', 'Brand#22', 'Brand#11']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('t')) & (part['MFGR'] == 'Manufacturer#3') & (part['BRAND'] == 'Brand#22') & (part['P_NAME'] != 's') & (part['RETAILPRICE'] < 1077.9282677705828) & (part['P_NAME'].str.startswith('i')) | (part['MFGR'] != 'Manufacturer#4') | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_NAME', 'MFGR']).agg('count')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['TYPE', 'CONTAINER', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[['P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['PT_COMMENT'].str.startswith('k')) & (part['RETAILPRICE'] >= 949.4311615220782)][['P_PARTKEY', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['TYPE'] == 'L') | (part['PT_COMMENT'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'MFGR']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] < 22)][['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['MFGR'] != 'Manufacturer#2')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] >= 17) | (nation['N_NATIONKEY'] > 22) | (nation['N_COMMENT'] != 's')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'B') | (nation['N_NAME'] != 'P')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] != 8)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] != 2) | (nation['N_COMMENT'] == 'c') & (nation['N_COMMENT'].str.startswith('s'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 11) | (nation['N_REGIONKEY'] < 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NAME'] != 'E')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_NATIONKEY'] == 23) | (nation['N_NATIONKEY'] != 12)].merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_NATIONKEY'] < 18) | (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 4)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] > 2) & (nation['N_NATIONKEY'] >= 19)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 9)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 14) & (nation['N_NATIONKEY'] < 9) | (nation['N_NATIONKEY'] != 8)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 6538.602186514044) & (supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] <= 484.3503118092965) | (supplier['S_COMMENT'] != 'j')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= -566.3362367368588) | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 645.7380797708383)].merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_NAME'] == 'M') & (nation['N_NAME'] == 'M') | (nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 2794.365547283798) | (supplier['S_NATIONKEY'] > 5) & (supplier['S_COMMENT'] == 'w') | (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_PHONE'] != '3') & (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'J') & (supplier['S_NATIONKEY'] == 7) | (supplier['S_PHONE'] != '3') | (supplier['S_NATIONKEY'] != 12) & (supplier['S_NAME'] != 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'b') | (supplier['S_SUPPKEY'] == 182) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != '1') & (supplier['S_COMMENT'].str.startswith(','))].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('I')) | (supplier['S_COMMENT'] == ' sl') & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '26-') & (supplier['S_ACCTBAL'] >= 8793.25770016273) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == '.')].groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] != 'r')].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_ADDRESS'] == 'W') & (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] >= 9644.859883431585) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[(supplier['S_COMMENT'] == 'the') | (supplier['S_ACCTBAL'] > 5249.491864826916) | (supplier['S_NATIONKEY'] <= 21) & (supplier['S_ACCTBAL'] >= 3204.1746293150236) | (supplier['S_COMMENT'] == 'i') | (supplier['S_NATIONKEY'] > 4) & (supplier['S_COMMENT'].str.startswith('al '))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_NATIONKEY'] >= 18)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('h')) | (supplier['S_ACCTBAL'] != 3894.353497681138) | (supplier['S_COMMENT'] == 'v') | (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] >= 9191.230594542058) & (supplier['S_PHONE'] != '3') | (supplier['S_SUPPKEY'] > 32)].groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_ACCTBAL'] <= 1247.692760272667) & (supplier['S_SUPPKEY'] < 53) & (supplier['S_ADDRESS'] != 'k') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'bli')][['S_NAME', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'z') | (supplier['S_SUPPKEY'] < 87) | (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_NAME', 'S_PHONE']].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'the') & (supplier['S_SUPPKEY'] <= 4) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] == 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('Z')) & (supplier['S_NATIONKEY'] <= 20) & (supplier['S_NATIONKEY'] == 8)][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 18) | (supplier['S_PHONE'] != '1') | (supplier['S_ACCTBAL'] >= 1985.016888933157) & (supplier['S_ADDRESS'] != 'i') & (supplier['S_ADDRESS'].str.startswith(','))].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 5) & (supplier['S_COMMENT'] == 'e') | (supplier['S_ACCTBAL'] != 2554.9062285538657) | (supplier['S_NATIONKEY'] <= 19) & (supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_COMMENT'] != 's')].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 14)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] < 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_ACCTBAL'] >= 8172.59667586506)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '32-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 116) & (supplier['S_PHONE'] == '32-') | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] >= 23) | (supplier['S_COMMENT'].str.startswith('b'))][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 76) | (supplier['S_SUPPKEY'] != 80) | (supplier['S_ACCTBAL'] != 4211.5386066515775) & (supplier['S_ACCTBAL'] <= -375.2582888027349) | (supplier['S_ACCTBAL'] != 4823.413821160076) & (supplier['S_NATIONKEY'] == 5) & (supplier['S_COMMENT'].str.startswith('y'))].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_NAME'] == 'U') & (nation['N_NAME'].str.startswith('E'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 196) & (supplier['S_SUPPKEY'] != 131)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 36)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 60) | (supplier['S_SUPPKEY'] <= 107) & (supplier['S_ACCTBAL'] == 2782.36811285588) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ACCTBAL'] != 1181.1749697872713)][['S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_PHONE', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 42) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'] != 'i') | (supplier['S_ACCTBAL'] < 7359.16153520327) | (supplier['S_COMMENT'] == ' ') | (supplier['S_ADDRESS'] != 'x') | (supplier['S_PHONE'] == '32-')][['S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 17) | (nation['N_NATIONKEY'] < 2) & (nation['N_COMMENT'] == 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NATIONKEY'] == 20) | (nation['N_NATIONKEY'] != 9) & (nation['N_NAME'] == 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_COMMENT'].str.startswith('u'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] == 'J') & (nation['N_NAME'] != 'C')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'p')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'].str.startswith('A')) & (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 6) | (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 9)].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 20) | (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 'r')].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 2296.059197932346) & (customer['C_NATIONKEY'] <= 7)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 1253.1432263322567) & (customer['C_ADDRESS'] == 's') | (customer['C_CUSTKEY'] != 8)].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] == 7)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != '0') & (customer['C_ACCTBAL'] != -709.6886906974432) & (customer['C_PHONE'] != '22-')][['C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_COMMENT'] != 'v')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'D') & (customer['C_ADDRESS'] == 'P') & (customer['C_ADDRESS'].str.startswith('o')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] <= 57) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('w'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == '9') & (customer['C_ACCTBAL'] >= 2311.279669527458) & (customer['C_ADDRESS'] != '6') & (customer['C_CUSTKEY'] >= 41) & (customer['C_ACCTBAL'] == 4967.251545695286)].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] >= 11) & (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'F') | (customer['C_CUSTKEY'] != 63) & (customer['C_ADDRESS'] == 'H') & (customer['C_ACCTBAL'] < 6071.474748044929) & (customer['C_ADDRESS'].str.startswith('F'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'h') & (customer['C_NATIONKEY'] != 5) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] == 'P') | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_CUSTKEY'] >= 78) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']]

customer[(customer['C_COMMENT'] != 'w') | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'k') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_COMMENT'] == 'a') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] != 'X') | (customer['C_COMMENT'].str.startswith('i'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('n')) & (customer['C_ADDRESS'] != 'Q') & (customer['C_ACCTBAL'] == 6981.733995245226) | (customer['C_COMMENT'] == 'w') | (customer['C_COMMENT'].str.startswith('l'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] <= 12)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 28) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_ADDRESS'] != 'M') | (customer['C_PHONE'] == '22-')][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 95) | (customer['C_ADDRESS'].str.startswith('D')) & (customer['C_ADDRESS'] != 'K') | (customer['C_ADDRESS'] != 'Y') | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_NATIONKEY'] != 18) | (customer['C_PHONE'] == '13-')].merge(nation[(nation['N_NATIONKEY'] <= 21) | (nation['N_NATIONKEY'] < 9) | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] != 'p')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 57) | (customer['C_NATIONKEY'] <= 13) & (customer['C_COMMENT'].str.startswith('r')) | (customer['C_NATIONKEY'] != 17) | (customer['C_ACCTBAL'] > 8676.216153160485)][['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 6) & (customer['C_ACCTBAL'] < 1191.2904031645621) | (customer['C_CUSTKEY'] > 25)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 50) | (customer['C_PHONE'] == '18-')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 67) & (customer['C_NATIONKEY'] == 10) | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 10) & (customer['C_ACCTBAL'] == 290.21243758744663) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'G')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'P') & (customer['C_CUSTKEY'] == 87) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] <= 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'q') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 20) | (customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] > 6) | (customer['C_ADDRESS'] != 'Y')][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']]

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'X')][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('b')) & (customer['C_PHONE'] != '3') & (customer['C_NATIONKEY'] <= 15) | (customer['C_ADDRESS'] != 'M') & (customer['C_ADDRESS'].str.startswith('n')) | (customer['C_COMMENT'] != 'n') & (customer['C_ACCTBAL'] < 3817.1758520753247)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NATIONKEY'] >= 16) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] > 6113.84802357194) & (customer['C_COMMENT'] != 'e')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] != ' ') | (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] != 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 1) & (customer['C_NATIONKEY'] >= 12) & (customer['C_NAME'] != 'C')].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 22) | (customer['C_ADDRESS'] != 'M') | (customer['C_NATIONKEY'] == 12)].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] == 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 16) | (customer['C_NATIONKEY'] >= 14) & (customer['C_COMMENT'] != 'a') & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_ACCTBAL'] < 4871.947775260113) | (customer['C_PHONE'] == '25-')][['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 19) | (customer['C_ADDRESS'] != '9') | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'h') & (customer['C_CUSTKEY'] > 38) & (customer['C_ADDRESS'] == 'e') | (customer['C_PHONE'] != '18-')][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']]

customer[(customer['C_PHONE'] != '1') | (customer['C_COMMENT'].str.startswith('p')) & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '13-') | (customer['C_ADDRESS'] == 'i') & (customer['C_NATIONKEY'] == 7) & (customer['C_CUSTKEY'] >= 96)].merge(nation[(nation['N_NATIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 8) | (nation['N_NAME'].str.startswith('I'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') | (customer['C_ADDRESS'] == 'p') & (customer['C_ACCTBAL'] != 8799.340881823457) | (customer['C_ACCTBAL'] > 2537.39422104462) & (customer['C_NATIONKEY'] < 9)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '13-')].merge(nation[(nation['N_COMMENT'].str.startswith('h'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('2'))].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_PHONE'] == '13-') | (customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] < 57)][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY']))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].groupby(by=['C_PHONE', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['P', 'F']))][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith('q'))][['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'M') | (supplier['S_NATIONKEY'] >= 2) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 6643.103374433166)][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['LINENUMBER'] <= 3) & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['QUANTITY'] != 29) | (lineitem['TAX'] <= 0.027352232523282102) & (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINENUMBER'] < 1)][['LINENUMBER', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG', 'TAX']]

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_PARTKEY'] <= 118411) & (lineitem['TAX'] != 0.026458300894228952) | (lineitem['QUANTITY'] == 29) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['EXTENDEDPRICE'] <= 81056.4712756423) | (lineitem['DISCOUNT'] != 0.0848380490794633) & (lineitem['L_COMMENT'].str.startswith('t')) | (lineitem['L_SUPPKEY'] > 9397)][['LINESTATUS', 'COMMITDATE', 'DISCOUNT', 'RETURNFLAG']]

lineitem[(lineitem['LINENUMBER'] != 3) & (lineitem['EXTENDEDPRICE'] > 21599.468664187418) | (lineitem['QUANTITY'] == 6) & (lineitem['LINENUMBER'] < 4)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 4) | (lineitem['L_SUPPKEY'] != 5259) | (lineitem['DISCOUNT'] <= 0.03852203934864401)][['LINENUMBER', 'L_COMMENT', 'COMMITDATE', 'SHIPDATE', 'TAX']].groupby(by=['L_COMMENT', 'LINENUMBER', 'COMMITDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['AVAILQTY'] < 5716) | (partsupp['SUPPLYCOST'] == 801.996330053209) & (partsupp['PS_SUPPKEY'] == 978) & (partsupp['P_COMMENT'] != 'n')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F'])) & (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_PARTKEY'] < 190924)].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_COMMENT'] != 'd')][['RECEIPTDATE', 'L_PARTKEY', 'L_SUPPKEY', 'TAX', 'COMMITDATE']].groupby(by=['RECEIPTDATE', 'TAX', 'L_PARTKEY', 'COMMITDATE']).agg('count')

lineitem[(lineitem['L_COMMENT'] != '-') & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['L_ORDERKEY'] <= 169) | (lineitem['L_ORDERKEY'] <= 165) & (lineitem['L_SUPPKEY'] < 1515) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['LINENUMBER'] <= 3)].groupby(by=['LINENUMBER', 'L_ORDERKEY', 'TAX', 'L_SUPPKEY', 'L_PARTKEY']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] >= 9) & (lineitem['DISCOUNT'] != 0.03507623379759613)][['QUANTITY', 'RECEIPTDATE', 'L_ORDERKEY', 'LINESTATUS', 'RETURNFLAG']].groupby(by=['QUANTITY', 'L_ORDERKEY', 'RETURNFLAG', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 121517) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['QUANTITY'] == 25) | (lineitem['QUANTITY'] < 46) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['LINENUMBER'] > 5) | (lineitem['EXTENDEDPRICE'] >= 62274.44576675865)].groupby(by=['LINENUMBER', 'LINESTATUS', 'SHIPINSTRUCT', 'RETURNFLAG', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 70915) & (lineitem['L_PARTKEY'] < 151512) | (lineitem['LINENUMBER'] < 4)].merge(orders[(orders['O_ORDERKEY'] <= 644) | (orders['ORDERSTATUS'] != 'P') & (orders['ORDERDATE'] < '1992-01-13')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERPRIORITY']).agg('count')

lineitem[(lineitem['L_PARTKEY'] >= 144382) & (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'SHIP', 'TRUCK'])) & (lineitem['L_ORDERKEY'] > 130) & (lineitem['L_COMMENT'] == 'b')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] >= 48627)][['TAX', 'COMMITDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 889.2533524479335)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 9816) & (lineitem['L_COMMENT'] == 'k') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] != 3) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) | (lineitem['LINENUMBER'] > 3)][['RETURNFLAG', 'L_COMMENT']].groupby(by=['L_COMMENT', 'RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['QUANTITY'] != 19) | (lineitem['RETURNFLAG'].isin(['R', 'A'])) | (lineitem['LINENUMBER'] <= 2)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY']).agg('count')

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27')].merge(orders.merge(customer[(customer['C_ADDRESS'].str.startswith('f')) | (customer['C_COMMENT'] != 'q') & (customer['C_ACCTBAL'] >= -222.43083715856187) & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_NATIONKEY'] != 3) | (customer['C_ACCTBAL'] == -19.33661955834998) | (customer['C_ACCTBAL'] == 3605.068560289421)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['TAX'] >= 0.07323631151882239) & (lineitem['DISCOUNT'] > 0.038390524049989196) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['SHIPDATE'] < '1998-10-30')][['LINESTATUS', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'RAIL') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_ORDERKEY'] <= 26) | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['L_SUPPKEY'] >= 906) & (lineitem['L_PARTKEY'] < 41401)][['SHIPMODE', 'COMMITDATE']].groupby(by=['SHIPMODE', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.06615045349902696) | (lineitem['L_ORDERKEY'] <= 31) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_SUPPKEY'] != 3300) | (lineitem['L_COMMENT'] == 'y') & (lineitem['L_SUPPKEY'] >= 5839) | (lineitem['L_COMMENT'] != 'f') | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['RECEIPTDATE'] == '1992-05-02')][['RETURNFLAG', 'SHIPDATE', 'LINENUMBER', 'SHIPINSTRUCT']]

lineitem[['COMMITDATE', 'L_SUPPKEY', 'L_COMMENT', 'SHIPDATE', 'SHIPMODE']].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY', 'SHIPINSTRUCT', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] == ' ')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_COMMENT', 'COMMITDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY', 'LINENUMBER', 'L_ORDERKEY', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'LINENUMBER', 'DISCOUNT', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 1679)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPDATE', 'LINENUMBER', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] > 6246)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['QUANTITY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'TAX', 'COMMITDATE', 'SHIPMODE', 'LINENUMBER']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] == 'i')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == ' ') | (nation['N_NAME'] == 'J')].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NAME'] == 'K')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'o')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'AME') | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'r')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] <= 7)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 21) | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 'h') & (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 23) & (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 23) | (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 2) & (nation['N_NAME'] == 'S') | (nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] > 20)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 10)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_NATIONKEY'] > 11) & (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith('c'))][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] == 'c')][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] != 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0)].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] != 'V')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] == 7) | (nation['N_COMMENT'] != 'y') | (nation['N_NAME'] != 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] != 8) & (nation['N_NAME'] == 'B')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] < 560.3053547014547) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'p') & (customer['C_ACCTBAL'] < 8368.901851511435) | (customer['C_ACCTBAL'] == -188.92533961962113) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] == 20) | (customer['C_ADDRESS'].str.startswith('e'))][['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] == 29) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'].str.startswith('s')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'].str.startswith('p'))][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] != 2) | (customer['C_CUSTKEY'] == 30) & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 2300.75847831789)][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 182) | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] >= 29226.98652284201) | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] < 123813) & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['O_COMMENT'] != 'uri') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH'])) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21')][['SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '1-URGENT', '5-LOW', '4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] < 33784) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C')][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'].str.startswith(' '))].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '5-LOW'])) | (orders['O_COMMENT'].str.startswith('i')) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['O']))][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 75220) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] == 197875.7615157279)].merge(customer[(customer['C_NATIONKEY'] >= 19) & (customer['C_CUSTKEY'] >= 57)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 113056) | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'] == 'uri') | (orders['O_ORDERKEY'] > 640) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_COMMENT'] != 'o') | (customer['C_NATIONKEY'] != 2)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 155)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] < 250395.61214990373) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '5-LOW'])) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] != 'b') & (orders['O_CUSTKEY'] <= 29749) | (orders['O_COMMENT'] != 'z')][['CLERK', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] <= 302921.5173663625) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['TOTALPRICE'] < 44241.57656864406) | (orders['O_CUSTKEY'] > 80189) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] != 131474.63788415672)].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'].str.startswith('i'))].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 159149.00867517645) & (orders['TOTALPRICE'] > 84156.36023592555)][['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 244566.88851302007) & (orders['ORDERDATE'] < '1992-01-13') | (orders['O_CUSTKEY'] <= 53081) | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] >= 286874.5988185311) & (orders['O_ORDERKEY'] != 650) & (orders['O_CUSTKEY'] <= 97100) & (orders['ORDERDATE'] > '1998-07-21')].merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 158599.54372244078) & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] != 463)].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_PHONE'] == '2') | (customer['C_CUSTKEY'] > 98)][['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 205709.28589416316) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] != 127374) & (orders['TOTALPRICE'] >= 347177.91224923194) & (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] <= 235671.51060020013) & (orders['O_COMMENT'] != 'e') & (orders['O_COMMENT'] != 'h')][['TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') & (part['P_NAME'] != 'cor') | (part['BRAND'].isin(['Brand#22']))][['P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') & (part['SIZE'] >= 18) | (part['CONTAINER'] == 'MED') & (part['TYPE'] != 'SMA') & (part['TYPE'].str.startswith('SMA'))][['SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'SIZE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['MFGR'] != 'Manufacturer#3') | (part['MFGR'] != 'Manufacturer#1') | (part['P_NAME'] != 'b') | (part['PT_COMMENT'] != ' ') | (part['BRAND'].isin(['Brand#53', 'Brand#41', 'Brand#21', 'Brand#52', 'Brand#33', 'Brand#54', 'Brand#25', 'Brand#44', 'Brand#13', 'Brand#43', 'Brand#45', 'Brand#12', 'Brand#22', 'Brand#51', 'Brand#55', 'Brand#34'])) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] > 54)][['MFGR', 'TYPE']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'SM') & (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] == 'Brand#11') & (part['CONTAINER'] != 'MED') | (part['TYPE'] == 'M')][['BRAND', 'SIZE', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[(part['MFGR'] == 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#5') | (part['P_NAME'] == 'c') | (part['PT_COMMENT'] != 'o') | (part['MFGR'].isin(['Manufacturer#3'])) | (part['SIZE'] < 12) & (part['PT_COMMENT'] != 's') | (part['RETAILPRICE'] != 927.29397251975) | (part['CONTAINER'] == 'JUMBO')].groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) & (part['RETAILPRICE'] >= 972.8515854261418) & (part['P_PARTKEY'] == 128) | (part['P_NAME'] == 'k') & (part['BRAND'] != 'Brand#35')][['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2'])) & (part['BRAND'] == 'Brand#35') | (part['TYPE'] == 'S') | (part['RETAILPRICE'] != 936.1190325623) | (part['BRAND'] == 'Brand#52')][['SIZE', 'TYPE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 'f') | (part['CONTAINER'] == 'JUMBO') & (part['SIZE'] <= 40) & (part['RETAILPRICE'] == 1025.561411322567) | (part['P_PARTKEY'] > 157) & (part['MFGR'] != 'Manufacturer#5') | (part['P_NAME'] != 'lin') & (part['BRAND'].isin(['Brand#23', 'Brand#11', 'Brand#15', 'Brand#41', 'Brand#12', 'Brand#31', 'Brand#22', 'Brand#53', 'Brand#54', 'Brand#52', 'Brand#32', 'Brand#55', 'Brand#43', 'Brand#35', 'Brand#33', 'Brand#45', 'Brand#44', 'Brand#14', 'Brand#34', 'Brand#51', 'Brand#42', 'Brand#24', 'Brand#25', 'Brand#21']))][['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[(part['PT_COMMENT'].str.startswith('d')) & (part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] >= 65) | (part['BRAND'] != 'Brand#43') & (part['TYPE'] == 'SMA')][['RETAILPRICE', 'BRAND', 'P_NAME']].groupby(by=['P_NAME', 'RETAILPRICE', 'BRAND']).agg('count')

part[(part['PT_COMMENT'].str.startswith('l')) | (part['CONTAINER'] != 'MED') & (part['TYPE'] == 'SMA') | (part['TYPE'] != 'M') | (part['P_PARTKEY'] <= 172)][['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[(part['P_NAME'] != 'a') & (part['MFGR'] == 'Manufacturer#3') | (part['PT_COMMENT'] == 'p') | (part['SIZE'] >= 45) | (part['CONTAINER'] == 'MED') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) | (part['P_PARTKEY'] >= 81) | (part['PT_COMMENT'] == 'x') & (part['RETAILPRICE'] > 957.3780303590885)].groupby(by=['RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('bis')) | (part['PT_COMMENT'] != 'the')][['P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE', 'BRAND']].groupby(by=['SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['P_NAME'].str.startswith('blu'))][['BRAND', 'P_NAME', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('s')) & (part['BRAND'] == 'Brand#32') & (part['P_PARTKEY'] <= 56) | (part['P_NAME'].str.startswith('d')) & (part['P_NAME'] != 'c') & (part['PT_COMMENT'] == 'l')][['BRAND', 'CONTAINER', 'TYPE', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] < 156) | (part['RETAILPRICE'] > 1020.4381232239468) & (part['SIZE'] > 15)][['SIZE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND', 'PT_COMMENT']].groupby(by=['TYPE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] != 1089.4992966486325) & (part['BRAND'] != 'Brand#54') | (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] > 1078.829933023074) | (part['TYPE'] == 'SMA') & (part['CONTAINER'] == 'JUMBO') | (part['SIZE'] > 48) | (part['SIZE'] > 29) | (part['P_NAME'] != 'a')].groupby(by=['TYPE', 'P_PARTKEY', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 1029.53176821289) | (part['P_PARTKEY'] != 13) & (part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] == 175) | (part['CONTAINER'] == 'WRAP') | (part['SIZE'] >= 13) & (part['TYPE'] == 'M') & (part['BRAND'] == 'Brand#55')][['TYPE', 'CONTAINER', 'SIZE', 'BRAND', 'MFGR', 'RETAILPRICE']]

part[(part['RETAILPRICE'] <= 969.5950068165602) & (part['SIZE'] == 48) & (part['P_NAME'] == 'i') & (part['RETAILPRICE'] <= 995.5134824787358) & (part['RETAILPRICE'] != 1035.2583363466003)][['CONTAINER', 'P_NAME', 'SIZE']].groupby(by=['P_NAME', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] == 1035.350158170685) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) & (part['CONTAINER'] == 'JUMBO') | (part['SIZE'] > 16) & (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'].str.startswith('y'))][['TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']]

part[(part['SIZE'] != 9) | (part['SIZE'] > 24) | (part['BRAND'].isin(['Brand#52', 'Brand#51', 'Brand#12', 'Brand#35', 'Brand#11', 'Brand#42', 'Brand#15', 'Brand#53', 'Brand#54', 'Brand#34', 'Brand#44'])) & (part['SIZE'] > 31) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1'])) | (part['SIZE'] < 9) | (part['BRAND'] == 'Brand#11')][['P_PARTKEY', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] < 24) | (part['P_NAME'].str.startswith('c'))][['SIZE', 'MFGR', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['SIZE', 'RETAILPRICE', 'MFGR', 'BRAND']).agg('mean', numeric_only=True)

part[(part['SIZE'] == 25) | (part['RETAILPRICE'] == 1049.047782167173) | (part['TYPE'].str.startswith('S')) & (part['P_NAME'].str.startswith('lem')) | (part['P_NAME'] != 'd') & (part['P_NAME'] != 'b') | (part['SIZE'] == 15) | (part['P_NAME'].str.startswith('f')) | (part['P_PARTKEY'] > 91)][['CONTAINER']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'S') & (part['PT_COMMENT'].str.startswith('m')) & (part['RETAILPRICE'] >= 985.4170305226385) & (part['SIZE'] < 31) | (part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'] != 'JUMBO') | (part['P_PARTKEY'] <= 6)][['MFGR', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['TYPE'] == 'STA') | (part['P_NAME'] != 'v') | (part['P_PARTKEY'] == 58) | (part['P_NAME'] != 't') | (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('e')) & (part['P_NAME'] == 'lem')][['BRAND', 'TYPE', 'SIZE']].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['SIZE'] != 12) & (part['P_PARTKEY'] > 156) & (part['TYPE'].str.startswith('M')) | (part['P_NAME'].str.startswith('i')) | (part['CONTAINER'].str.startswith('WRAP'))][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND']]

part[['BRAND', 'MFGR', 'SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['CONTAINER', 'BRAND', 'SIZE', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['SIZE', 'CONTAINER', 'MFGR', 'TYPE']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'CONTAINER', 'MFGR', 'SIZE', 'BRAND']).agg('min', numeric_only=True)

part[['CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']).agg('min', numeric_only=True)

part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE']].groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['PT_COMMENT', 'MFGR', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['BRAND', 'PT_COMMENT', 'CONTAINER', 'TYPE', 'P_NAME']).agg('count')

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'TYPE', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != 'w') | (part['TYPE'] != 'P') | (part['PT_COMMENT'].str.startswith('the')) & (part['P_PARTKEY'] >= 195) | (part['CONTAINER'] == 'LG') & (part['MFGR'] != 'Manufacturer#5')][['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == 'g') & (part['BRAND'] == 'Brand#51') | (part['MFGR'] == 'Manufacturer#2') | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#1') & (part['SIZE'] > 40) & (part['P_PARTKEY'] > 97)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('a')) | (part['TYPE'] != 'E') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5']))][['BRAND', 'SIZE', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] != 118) | (part['RETAILPRICE'] > 1045.367340147806) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3'])) | (part['P_NAME'] != 'w') & (part['MFGR'] == 'Manufacturer#5') & (part['BRAND'].isin(['Brand#44', 'Brand#43', 'Brand#53', 'Brand#52']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] == 104) & (part['BRAND'].isin(['Brand#42', 'Brand#13', 'Brand#22', 'Brand#45'])) | (part['SIZE'] != 33)][['P_PARTKEY', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] == 1058.7308361528455) & (part['P_NAME'] != 'a') & (part['SIZE'] != 48) | (part['P_NAME'].str.startswith('o')) & (part['CONTAINER'] == 'MED') | (part['MFGR'] == 'Manufacturer#3') | (part['BRAND'] != 'Brand#44')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[(part['SIZE'] >= 29)][['TYPE', 'SIZE', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['TYPE'] != 'E') & (part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#13') & (part['TYPE'] == 'L') & (part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'].str.startswith('a')) | (part['RETAILPRICE'] != 982.3754843458659) & (part['TYPE'] == 'L') | (part['P_NAME'] != 'c')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('min', numeric_only=True)

partsupp.merge(part[(part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] >= 951.1187675608563)][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 8246.814314057383) | (supplier['S_ADDRESS'] == '8') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] <= 22) & (supplier['S_ACCTBAL'] >= 3710.1632571283326) & (supplier['S_PHONE'] != '26-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 8071.627849497302) | (supplier['S_SUPPKEY'] == 156) | (supplier['S_ADDRESS'].str.startswith(' ')) | (supplier['S_ACCTBAL'] < 919.3426902362808)][['S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 69) & (supplier['S_ACCTBAL'] <= 6186.734007588114) & (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 20) | (supplier['S_NATIONKEY'] < 15) & (supplier['S_ACCTBAL'] <= 5688.477399044518) | (supplier['S_SUPPKEY'] != 132) | (supplier['S_SUPPKEY'] >= 85) | (supplier['S_ADDRESS'] == 'r') & (supplier['S_COMMENT'].str.startswith('g'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'] == 'v') | (supplier['S_ACCTBAL'] > 3465.293659799445)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] <= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9659) & (partsupp['PS_SUPPKEY'] < 7547) | (partsupp['PS_PARTKEY'] < 40) | (partsupp['AVAILQTY'] >= 2876)].merge(part[(part['RETAILPRICE'] <= 1085.4258153564206) | (part['TYPE'] != 'E') & (part['CONTAINER'] == 'WRAP') & (part['TYPE'] == 'L')][['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 9722)].merge(part[(part['SIZE'] == 22) & (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'].isin(['Brand#21', 'Brand#24', 'Brand#35', 'Brand#55', 'Brand#31', 'Brand#22', 'Brand#34', 'Brand#13', 'Brand#44', 'Brand#15', 'Brand#32', 'Brand#53', 'Brand#41', 'Brand#43', 'Brand#25'])) | (part['CONTAINER'] == 'MED') & (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 2179) & (partsupp['AVAILQTY'] < 7779)].merge(part[['BRAND', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 545) & (partsupp['P_COMMENT'] == ' ')].merge(supplier[(supplier['S_NATIONKEY'] != 15) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 17)][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 8241) & (partsupp['P_COMMENT'] != '.') & (partsupp['PS_PARTKEY'] == 21)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 35) | (partsupp['AVAILQTY'] == 1658) & (partsupp['AVAILQTY'] >= 930)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 10)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] > 19)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 21) | (partsupp['SUPPLYCOST'] == 698.452540582881) & (partsupp['SUPPLYCOST'] == 283.2426672811267) & (partsupp['PS_PARTKEY'] <= 41) & (partsupp['PS_SUPPKEY'] == 4676)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 37) & (partsupp['SUPPLYCOST'] != 184.5850606068087) & (partsupp['PS_PARTKEY'] != 23) & (partsupp['SUPPLYCOST'] == 964.9697848932506)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 3391) | (partsupp['P_COMMENT'] == 'q') & (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_PARTKEY'] >= 1)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1615) | (partsupp['SUPPLYCOST'] >= 578.21514104851) | (partsupp['AVAILQTY'] == 495) & (partsupp['SUPPLYCOST'] > 874.1942543915046)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['SIZE'] > 18)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 6014) & (partsupp['PS_SUPPKEY'] >= 1644)].merge(part[['BRAND', 'SIZE', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 5675) & (partsupp['PS_SUPPKEY'] == 433) | (partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['SUPPLYCOST'] <= 934.6091520060423)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] >= 186) | (part['RETAILPRICE'] == 921.579407593835) | (part['TYPE'].str.startswith('STA'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'p')].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE', 'S_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'k') & (partsupp['PS_PARTKEY'] == 20) | (partsupp['PS_PARTKEY'] == 21)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'n')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'CONTAINER', 'RETAILPRICE']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['SUPPLYCOST'] < 156.7718683553472) & (partsupp['PS_SUPPKEY'] != 6121)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 511.2104612641098) & (partsupp['P_COMMENT'] != 'ly ') & (partsupp['AVAILQTY'] < 586) | (partsupp['PS_PARTKEY'] > 36) | (partsupp['PS_SUPPKEY'] >= 3567)].merge(part[['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 76.98441342518315) | (partsupp['SUPPLYCOST'] >= 317.7849884094508) & (partsupp['PS_PARTKEY'] > 6)].merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 765.390959069043) & (partsupp['AVAILQTY'] < 9488)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] != 'y') & (part['P_PARTKEY'] != 4) & (part['MFGR'] != 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'] != ' fi') & (part['TYPE'] != 'S') & (part['BRAND'] != 'Brand#13') | (part['BRAND'] == 'Brand#24')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['CONTAINER', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['BRAND'].isin(['Brand#15']))][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['TYPE'] == 'SMA') & (part['MFGR'].isin(['Manufacturer#5'])) & (part['MFGR'] != 'Manufacturer#1') & (part['BRAND'] != 'Brand#11') & (part['P_PARTKEY'] >= 3) | (part['TYPE'] == 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['TYPE', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['MFGR'].isin(['Manufacturer#5']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'CONTAINER']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['SIZE'] >= 13) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) | (part['PT_COMMENT'] == 'x') | (part['BRAND'] != 'Brand#31') & (part['BRAND'] == 'Brand#32') | (part['RETAILPRICE'] < 948.9258679772013) | (part['RETAILPRICE'] <= 1022.1414226306592)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']).agg('count')

supplier.merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] == 18)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'E')].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] != 'C') & (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 148.23176387708963) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 129) | (supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_SUPPKEY'] <= 61) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] < 8)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 1769.330354228877) | (supplier['S_SUPPKEY'] < 126)].merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] >= 4) & (nation['N_COMMENT'] == 'p') & (nation['N_NAME'] != 'A')].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 8978.62799689991)].merge(nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 6435.134392123016) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] > 3564.5193962894846) | (supplier['S_ADDRESS'] == 'v') & (supplier['S_SUPPKEY'] != 162)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 8081.679769065949) & (supplier['S_COMMENT'] != 'n') | (supplier['S_ADDRESS'] != 'n') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 3458.64662246686) & (supplier['S_COMMENT'] != 'o') | (supplier['S_PHONE'] != '28-') | (supplier['S_SUPPKEY'] >= 44) | (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= -603.1687741941571) | (supplier['S_COMMENT'] == ' ') | (supplier['S_NATIONKEY'] == 11) & (supplier['S_COMMENT'] != 'g') | (supplier['S_ADDRESS'].str.startswith('D')) | (supplier['S_NATIONKEY'] <= 13)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] != '2') & (supplier['S_NATIONKEY'] >= 6) | (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_SUPPKEY'] == 56) | (supplier['S_PHONE'] != '2')][['S_COMMENT', 'S_NAME']].groupby(by=['S_COMMENT', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'J') | (supplier['S_NATIONKEY'] < 1) & (supplier['S_ACCTBAL'] > 4811.689369989566) & (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_ACCTBAL'] <= -333.32964562077154) & (supplier['S_SUPPKEY'] != 170) | (supplier['S_PHONE'] != '17-')][['S_ADDRESS', 'S_NAME']].groupby(by=['S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'e') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] > 3921.9695473352886) & (supplier['S_NATIONKEY'] > 19) & (supplier['S_ACCTBAL'] > 8233.822170934098)].merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] >= 22) & (nation['N_NAME'].str.startswith('J'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == ',') | (supplier['S_SUPPKEY'] == 187) | (supplier['S_SUPPKEY'] > 53) & (supplier['S_SUPPKEY'] == 175)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != ',')].merge(nation[(nation['N_NATIONKEY'] < 4)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'f') | (supplier['S_NATIONKEY'] > 9) & (supplier['S_ACCTBAL'] > 6584.599681013151) | (supplier['S_NATIONKEY'] == 1) & (supplier['S_NATIONKEY'] > 3)].merge(nation[(nation['N_COMMENT'].str.startswith('i'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'n')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'the') | (supplier['S_SUPPKEY'] < 75) | (supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_SUPPKEY'] >= 56)][['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'w') | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] < 4) | (supplier['S_ADDRESS'].str.startswith('Y')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 8) & (supplier['S_ADDRESS'] != 'J')].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'F') & (nation['N_COMMENT'] == 'h') & (nation['N_NAME'] != 'E')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] == 6) | (supplier['S_NATIONKEY'] < 2)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('n')) & (supplier['S_COMMENT'] != 'a') & (supplier['S_ACCTBAL'] <= 6877.071831963484) & (supplier['S_PHONE'] != '1') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 198)][['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('q'))].merge(nation[(nation['N_NATIONKEY'] != 10) | (nation['N_NATIONKEY'] == 14) | (nation['N_NATIONKEY'] == 11) | (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_COMMENT'] != 'k') & (supplier['S_NATIONKEY'] < 5) | (supplier['S_NATIONKEY'] != 16) | (supplier['S_SUPPKEY'] > 57)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')][['S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 2596.7468687845912)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 22) | (supplier['S_COMMENT'] != 'c')][['S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 18) & (supplier['S_COMMENT'] != '!')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 6) | (supplier['S_COMMENT'] == 'd')].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 8)].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] <= 7) & (nation['N_NATIONKEY'] <= 7)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '1')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT', 'S_PHONE', 'S_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 131) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ACCTBAL'] == 230.78089946771888) & (supplier['S_NATIONKEY'] >= 11)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT']].groupby(by=['S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 88) | (supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_COMMENT'] != 'y')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith(' '))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'S') | (nation['N_NAME'].str.startswith('G'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NATIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NATIONKEY'] >= 3) & (nation['N_COMMENT'] == 't') | (nation['N_NAME'] == 'B')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 4) & (nation['N_NATIONKEY'] < 12) & (nation['N_NAME'] == 'A') & (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_NATIONKEY'] < 22)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('C'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != 'n') | (customer['C_ADDRESS'] != '9') | (customer['C_COMMENT'] == 'f')][['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'd') | (customer['C_COMMENT'] == 'c') | (customer['C_CUSTKEY'] > 74) & (customer['C_ADDRESS'] == 'r') & (customer['C_CUSTKEY'] < 67)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('7')) | (customer['C_ACCTBAL'] == 2224.0213854127824) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 3) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'BUILDING']))].merge(nation.merge(region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('p')) | (customer['C_ACCTBAL'] != 1372.663426912417) | (customer['C_CUSTKEY'] != 66) & (customer['C_ADDRESS'] == 'z') & (customer['C_PHONE'] != '13-') & (customer['C_CUSTKEY'] <= 13) & (customer['C_NATIONKEY'] > 19) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE']))][['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_COMMENT'] != 'e') & (customer['C_ACCTBAL'] >= 6499.822407438519) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] < 22) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] >= 3832.340317664507)][['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['C_COMMENT'] != 'o') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] < 12) & (nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'r') | (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] > 65)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'o') & (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] <= 22)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'T') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] >= 91) & (customer['C_CUSTKEY'] < 58)].merge(nation[(nation['N_NAME'] == 'R')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] == 'd') | (customer['C_PHONE'] == '1') & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] > 18) | (customer['C_NATIONKEY'] == 16) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 22)].merge(nation[(nation['N_COMMENT'] != 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith(',')) & (customer['C_NATIONKEY'] <= 18) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_NATIONKEY'] >= 12)].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NATIONKEY'] > 23) & (nation['N_NAME'].str.startswith('K'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 25) & (customer['C_CUSTKEY'] >= 10) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] <= 18) & (customer['C_COMMENT'].str.startswith(','))].merge(nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 87) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ADDRESS'] != 'O') | (customer['C_ADDRESS'] == 'f') | (customer['C_CUSTKEY'] > 74) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY']))].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] != ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 26) | (customer['C_PHONE'] != '13-') & (customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] != 8) & (customer['C_CUSTKEY'] != 32)].merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('x'))][['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C')].merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 11) | (customer['C_CUSTKEY'] == 64) | (customer['C_PHONE'] == '13-') & (customer['C_ADDRESS'] != 'v') | (customer['C_PHONE'] != '2') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_ADDRESS'] == 'd') | (customer['C_ACCTBAL'] >= 5715.167981182577)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 17) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'BUILDING'])) & (customer['C_COMMENT'].str.startswith('.')) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'] != 'u')].merge(nation[(nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'] == 'J') & (nation['N_NAME'] != 'A')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 22) | (customer['C_CUSTKEY'] < 67) & (customer['C_NATIONKEY'] != 9) | (customer['C_NATIONKEY'] == 14) | (customer['C_NATIONKEY'] > 9) | (customer['C_CUSTKEY'] < 64)].merge(nation[(nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 13) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 15) | (customer['C_PHONE'] == '22-') & (customer['C_PHONE'] == '2') | (customer['C_COMMENT'] != 'h')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 19) | (customer['C_PHONE'] == '2') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'] == 'w')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '1') & (customer['C_ADDRESS'] == 'L') | (customer['C_NATIONKEY'] != 2) | (customer['C_ADDRESS'] != 'n')].merge(nation.merge(region[(region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] < 5833.399380449498) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'f')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] != 9390.537081422413) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] > 37)].merge(nation[(nation['N_NATIONKEY'] == 11)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] != 4) | (customer['MKTSEGMENT'] == 'BUILDING')][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] == 'w')].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] != 'G')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] <= 12) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] <= 7) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != '.')].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE']))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 10) & (nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] > 0) & (nation['N_NAME'] == 'U')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'] != 'V')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

lineitem.merge(orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] != '1998-07-21') | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] >= 2670) & (orders['O_ORDERKEY'] >= 285)][['ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) & (orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] >= 201) | (orders['TOTALPRICE'] < 60337.77966646401) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] <= 319049.4005137599) & (orders['ORDERSTATUS'] != 'P')][['TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] == 188) & (orders['O_ORDERKEY'] == 209) | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'].str.startswith('ly '))][['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('x')) & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] == 165)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 5460)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['DISCOUNT'] != 0.08932338123568097) & (lineitem['L_ORDERKEY'] >= 48) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['LINENUMBER'] >= 4) & (lineitem['SHIPDATE'] == '1998-10-30')][['EXTENDEDPRICE', 'RETURNFLAG', 'LINESTATUS']].groupby(by=['EXTENDEDPRICE', 'LINESTATUS']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'n') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['TAX'] <= 0.044597883592857886)].merge(partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 24) & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['EXTENDEDPRICE'] != 29197.65899865558) & (lineitem['TAX'] != 0.022865753454671296) & (lineitem['L_ORDERKEY'] <= 17) | (lineitem['DISCOUNT'] > 0.054052274452671106) & (lineitem['RECEIPTDATE'] >= '1992-05-02')][['EXTENDEDPRICE', 'LINENUMBER', 'RECEIPTDATE', 'SHIPMODE', 'SHIPDATE', 'L_COMMENT', 'COMMITDATE', 'DISCOUNT']]

lineitem[(lineitem['L_ORDERKEY'] > 118) & (lineitem['EXTENDEDPRICE'] <= 27676.82339322965) | (lineitem['LINENUMBER'] <= 3) | (lineitem['TAX'] >= 0.01972363406815667) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['EXTENDEDPRICE'] > 85545.08807189729) | (lineitem['L_COMMENT'].str.startswith('j')) & (lineitem['L_SUPPKEY'] <= 7643)].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] > 170) | (lineitem['TAX'] == 0.024815279330775486) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['LINENUMBER'] < 4) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'].isin(['MAIL', 'TRUCK', 'AIR', 'FOB', 'RAIL'])) & (lineitem['L_COMMENT'] != 'n')][['COMMITDATE', 'L_PARTKEY', 'RECEIPTDATE', 'QUANTITY']].groupby(by=['L_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 23) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPDATE'] >= '1998-10-30')].merge(partsupp[(partsupp['SUPPLYCOST'] < 228.65369362463008) | (partsupp['P_COMMENT'] != 'q')].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] < 9648) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['QUANTITY'] == 48) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['TAX'] <= 0.01130695603399956) & (lineitem['EXTENDEDPRICE'] != 30702.748909718564) | (lineitem['QUANTITY'] <= 28) | (lineitem['L_ORDERKEY'] < 135)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] >= 38) & (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['L_SUPPKEY'] != 1965) | (lineitem['TAX'] > 0.009270544891430905) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['EXTENDEDPRICE', 'LINENUMBER', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT']]

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['LINESTATUS'] == 'F') & (lineitem['L_PARTKEY'] == 109603) & (lineitem['LINENUMBER'] > 4) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['RETURNFLAG'] == 'R')][['SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'QUANTITY', 'EXTENDEDPRICE', 'LINENUMBER']]

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_PARTKEY'] < 37746) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_COMMENT'] == 'l')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 417.58445452255927) & (partsupp['PS_PARTKEY'] == 8) & (partsupp['P_COMMENT'] == 'i')].merge(part[(part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['TAX'] < 0.05344139214214749) & (lineitem['RETURNFLAG'] == 'N')][['LINENUMBER', 'COMMITDATE', 'SHIPDATE', 'EXTENDEDPRICE', 'RECEIPTDATE']].groupby(by=['LINENUMBER', 'EXTENDEDPRICE', 'SHIPDATE', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] >= '1992-05-02')].merge(orders[['SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_SUPPKEY'] < 1230) & (lineitem['L_ORDERKEY'] != 127) | (lineitem['DISCOUNT'] > 0.042475596508089346) & (lineitem['L_SUPPKEY'] != 767) | (lineitem['L_PARTKEY'] == 107663)][['L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'SHIPINSTRUCT']].groupby(by=['LINENUMBER']).agg('count')

lineitem[(lineitem['TAX'] != 0.035658850190562225) & (lineitem['L_PARTKEY'] <= 123986) | (lineitem['L_COMMENT'] != ' ') & (lineitem['RECEIPTDATE'] >= '1992-05-02')][['DISCOUNT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.04022692704381114) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['DISCOUNT'] >= 0.08977548830066583) & (lineitem['L_SUPPKEY'] > 6880) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['SHIPMODE'] != 'FOB') | (lineitem['L_COMMENT'].str.startswith(' re')) & (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'RAIL']))][['SHIPDATE', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE', 'SHIPDATE']).agg('count')

lineitem[['COMMITDATE', 'L_PARTKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'QUANTITY']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']].groupby(by=['DISCOUNT', 'COMMITDATE', 'L_SUPPKEY', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[['DISCOUNT', 'RETURNFLAG', 'SHIPDATE', 'SHIPMODE', 'SHIPINSTRUCT', 'L_COMMENT', 'EXTENDEDPRICE', 'COMMITDATE', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE', 'LINESTATUS', 'COMMITDATE', 'TAX']].groupby(by=['SHIPINSTRUCT', 'EXTENDEDPRICE', 'TAX', 'QUANTITY', 'RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'TAX', 'SHIPMODE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_PARTKEY', 'COMMITDATE', 'LINESTATUS']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('count')

nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] != 'v')].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] < 8)][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'] == 'u')].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] == 12) & (nation['N_NATIONKEY'] == 19)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'C')].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] < 2)].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'] == 'o')].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'U') & (nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 11)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith('l'))][['N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] == 10) & (nation['N_COMMENT'].str.startswith('p'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'F')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] >= 1) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('P'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] != 10)][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 4) | (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 5) | (nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 1) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == 'y') | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 22) & (nation['N_COMMENT'] == ' ')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] < 18)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] <= 10)].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] > 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] == 'i') | (nation['N_NAME'] != 'C')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] == ' ')].merge(region[(region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 7)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] > 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 4483.367047406493) & (customer['C_ADDRESS'] != 'x') & (customer['C_PHONE'] != '27-') & (customer['C_ADDRESS'] == 'U')].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'].str.startswith('s'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 7) | (customer['C_PHONE'] != '13-') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'p')].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '1') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '2') & (customer['C_PHONE'] != '3')].merge(nation[(nation['N_NATIONKEY'] == 7) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('y')) & (nation['N_COMMENT'] == 'v') | (nation['N_NAME'] != 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'] != 'i') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] > 15) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] >= 29) | (customer['C_ADDRESS'] == 'L') | (customer['C_PHONE'] == '25-')][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] != 'F')][['ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_ADDRESS'] != 'U')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_CUSTKEY'] > 61) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 38)][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] >= 155) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 321493.2186616552) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 510) & (orders['O_COMMENT'] != 'r')][['ORDERDATE', 'SHIPPRIORITY', 'CLERK']].groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_CUSTKEY'] == 137722) | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['O_CUSTKEY'] != 22700) | (orders['SHIPPRIORITY'] > 0)][['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] < 130810) & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] <= 170206.57985711133) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW', '4-NOT SPECIFIED'])) & (orders['ORDERPRIORITY'] != '2-HIGH')][['TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['TOTALPRICE', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] == 252) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['F'])) | (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] >= 94645.40372436712) & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 8853.882100195606) & (orders['ORDERSTATUS'] != 'F')].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith(' ')) | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['O_COMMENT'].str.startswith('d')) | (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] > 0)][['CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('egu')) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] == 98276)][['O_CUSTKEY']].merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('j')) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] < 133844) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] <= 265) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERDATE'] != '1992-01-13') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '1-URGENT')].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 1305) | (orders['TOTALPRICE'] >= 211151.15181482094) & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['TOTALPRICE'] == 318340.23420167196) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 22400) | (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] < 210713.23564380078)][['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 253) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['TOTALPRICE'] > 282101.1445791745) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['O_ORDERKEY'] > 577)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_COMMENT'] != 'l')][['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['TOTALPRICE'] <= 142866.78352629644) & (orders['O_CUSTKEY'] < 35606) | (orders['O_COMMENT'] == 'j') | (orders['O_CUSTKEY'] >= 106522) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_CUSTKEY'] != 42380) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] > 28988) | (orders['TOTALPRICE'] > 76475.96267179892)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK']]

orders[(orders['TOTALPRICE'] <= 185636.61113112685) & (orders['TOTALPRICE'] <= 108510.17122475163) & (orders['TOTALPRICE'] < 234604.3792205659) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 325950.2446066447) | (orders['TOTALPRICE'] == 19060.301044027015)].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_REGIONKEY'] >= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders[['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'].isin(['Brand#13', 'Brand#34', 'Brand#24', 'Brand#32', 'Brand#12', 'Brand#15', 'Brand#41', 'Brand#43', 'Brand#44', 'Brand#23'])) | (part['P_PARTKEY'] < 8) & (part['TYPE'].str.startswith('SMA')) & (part['P_PARTKEY'] < 173) | (part['RETAILPRICE'] > 1042.301806632237) | (part['PT_COMMENT'] == 'd')][['SIZE', 'TYPE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['BRAND'].isin(['Brand#31', 'Brand#52', 'Brand#24', 'Brand#54', 'Brand#41', 'Brand#45', 'Brand#33', 'Brand#55', 'Brand#23', 'Brand#22', 'Brand#21', 'Brand#13', 'Brand#44', 'Brand#14'])) | (part['MFGR'] != 'Manufacturer#1') | (part['CONTAINER'] != 'MED') & (part['BRAND'] == 'Brand#25') | (part['RETAILPRICE'] != 968.2423172508518) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'] != 'k') & (part['SIZE'] == 40) & (part['PT_COMMENT'] != 'k')][['BRAND', 'MFGR', 'P_NAME', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['CONTAINER'] != 'LG')][['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND', 'P_NAME']].groupby(by=['BRAND', 'SIZE', 'TYPE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'SM') & (part['BRAND'].isin(['Brand#22', 'Brand#35', 'Brand#42', 'Brand#34', 'Brand#15', 'Brand#13', 'Brand#53', 'Brand#54', 'Brand#41', 'Brand#52', 'Brand#23', 'Brand#14', 'Brand#51', 'Brand#45', 'Brand#32', 'Brand#55', 'Brand#11', 'Brand#25', 'Brand#33', 'Brand#12', 'Brand#43', 'Brand#44', 'Brand#21'])) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3'])) | (part['PT_COMMENT'] == '!') | (part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'].str.startswith('u')) | (part['TYPE'].str.startswith('SMA')) | (part['RETAILPRICE'] <= 912.0672278227678)][['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']]

part[(part['MFGR'] == 'Manufacturer#1') & (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] >= 2) | (part['SIZE'] == 11) & (part['CONTAINER'] != 'MED') & (part['BRAND'] == 'Brand#35') | (part['BRAND'] == 'Brand#51')][['SIZE', 'RETAILPRICE', 'BRAND', 'CONTAINER']].groupby(by=['SIZE']).agg('count')

part[(part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] >= 118) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2']))][['CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']].groupby(by=['BRAND', 'CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'k') | (part['PT_COMMENT'] != 'ss ') | (part['BRAND'] != 'Brand#33') & (part['SIZE'] < 18) | (part['P_NAME'] == 'k') | (part['MFGR'] == 'Manufacturer#2') & (part['PT_COMMENT'].str.startswith('h')) & (part['RETAILPRICE'] == 1065.9360508678258)][['RETAILPRICE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'ly ') & (part['P_NAME'] == 'c') & (part['TYPE'] == 'L') & (part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] > 9) & (part['RETAILPRICE'] > 1035.3146919947735)][['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 'p') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) | (part['BRAND'].isin(['Brand#21', 'Brand#24', 'Brand#54', 'Brand#32', 'Brand#35', 'Brand#25', 'Brand#55', 'Brand#11', 'Brand#13', 'Brand#44'])) | (part['CONTAINER'] != 'WRAP') | (part['PT_COMMENT'] == ' ') | (part['PT_COMMENT'] != 'u') & (part['P_PARTKEY'] < 33) & (part['BRAND'].isin(['Brand#45', 'Brand#51', 'Brand#13', 'Brand#43', 'Brand#14', 'Brand#25', 'Brand#24', 'Brand#41', 'Brand#34', 'Brand#31', 'Brand#33', 'Brand#35', 'Brand#12'])) & (part['TYPE'] == 'P')].groupby(by=['SIZE', 'P_NAME', 'MFGR', 'BRAND', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'a') & (part['PT_COMMENT'] != 'ly ') & (part['PT_COMMENT'] == 't') & (part['BRAND'] != 'Brand#24') & (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] != 'r') | (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] == 'JUMBO') & (part['PT_COMMENT'] == ' fi')].groupby(by=['TYPE', 'SIZE', 'CONTAINER', 'MFGR', 'BRAND']).agg('count')

part[(part['P_NAME'] == 'b') | (part['TYPE'] == 'P') | (part['TYPE'].str.startswith('L')) & (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] != 42)][['BRAND', 'P_NAME', 'SIZE', 'TYPE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['P_NAME'] == 'cor')][['BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'MFGR', 'TYPE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('a')) | (part['P_PARTKEY'] >= 134) | (part['P_NAME'].str.startswith('b')) | (part['SIZE'] == 42) & (part['BRAND'] != 'Brand#21') | (part['P_NAME'] != 'd') & (part['MFGR'] != 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#4') | (part['CONTAINER'] == 'SM')].groupby(by=['CONTAINER', 'P_PARTKEY', 'TYPE', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['P_NAME'].str.startswith('y')) | (part['TYPE'].str.startswith('S')) | (part['RETAILPRICE'] < 970.4832080482036) | (part['P_PARTKEY'] != 168) & (part['SIZE'] <= 15) & (part['BRAND'] != 'Brand#51')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[(part['P_PARTKEY'] != 37) | (part['BRAND'] != 'Brand#53') | (part['P_PARTKEY'] != 72) | (part['RETAILPRICE'] != 1007.6036456674375) | (part['MFGR'] == 'Manufacturer#2') | (part['RETAILPRICE'] != 1047.2856398718495) | (part['MFGR'] == 'Manufacturer#5')][['SIZE', 'TYPE', 'MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] > 84) | (part['CONTAINER'].str.startswith('LG')) & (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'] == 'p') & (part['BRAND'].isin(['Brand#12', 'Brand#25', 'Brand#31', 'Brand#21'])) | (part['MFGR'] == 'Manufacturer#4')][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']]

part[(part['P_PARTKEY'] >= 102) & (part['BRAND'] != 'Brand#14') | (part['P_PARTKEY'] != 144) & (part['P_PARTKEY'] != 89) & (part['PT_COMMENT'] == 'k') | (part['BRAND'].isin(['Brand#14', 'Brand#31', 'Brand#12', 'Brand#13', 'Brand#43', 'Brand#42', 'Brand#51', 'Brand#22', 'Brand#23', 'Brand#24', 'Brand#35', 'Brand#44', 'Brand#11', 'Brand#15', 'Brand#52', 'Brand#54', 'Brand#55', 'Brand#25', 'Brand#33', 'Brand#32'])) | (part['RETAILPRICE'] != 994.1784469477911) & (part['RETAILPRICE'] == 912.506038833296)][['BRAND', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['P_PARTKEY'] >= 111) | (part['P_PARTKEY'] == 105) | (part['TYPE'] == 'L') & (part['BRAND'] == 'Brand#32') & (part['CONTAINER'] != 'MED') | (part['P_NAME'].str.startswith('cor'))][['CONTAINER', 'BRAND', 'RETAILPRICE', 'P_NAME']].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] != 3) | (part['P_NAME'] == 'h') & (part['SIZE'] != 9) & (part['SIZE'] < 31) & (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] < 189) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2'])) & (part['BRAND'] != 'Brand#34') & (part['PT_COMMENT'] != 'r')][['BRAND', 'MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['SIZE'] >= 23) & (part['SIZE'] != 36) & (part['CONTAINER'].str.startswith('SM'))][['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'MFGR', 'RETAILPRICE']].groupby(by=['CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('E')) | (part['P_NAME'] != 'w') & (part['CONTAINER'] == 'SM') & (part['BRAND'].isin(['Brand#35', 'Brand#45', 'Brand#51', 'Brand#52', 'Brand#25', 'Brand#22', 'Brand#13', 'Brand#23', 'Brand#15', 'Brand#42', 'Brand#21', 'Brand#31', 'Brand#41', 'Brand#44', 'Brand#32', 'Brand#14', 'Brand#34', 'Brand#55', 'Brand#53', 'Brand#24', 'Brand#12'])) & (part['P_PARTKEY'] != 173) & (part['PT_COMMENT'].str.startswith('m'))][['SIZE', 'TYPE', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']]

part[(part['TYPE'].str.startswith('P')) & (part['P_PARTKEY'] < 67) & (part['CONTAINER'] != 'MED') | (part['TYPE'].str.startswith('STA')) & (part['CONTAINER'] != 'JUMBO')][['CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']].groupby(by=['CONTAINER', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'MFGR', 'TYPE', 'SIZE', 'CONTAINER']).agg('count')

part[['RETAILPRICE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

part[['SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'm') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1'])) | (part['BRAND'].isin(['Brand#54', 'Brand#22', 'Brand#23', 'Brand#25', 'Brand#44', 'Brand#33', 'Brand#15', 'Brand#41', 'Brand#13', 'Brand#34', 'Brand#32', 'Brand#14', 'Brand#53', 'Brand#11', 'Brand#31'])) | (part['TYPE'].str.startswith('E')) | (part['SIZE'] < 47) & (part['PT_COMMENT'] != 'ss ') & (part['CONTAINER'] == 'WRAP') | (part['CONTAINER'] != 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[['CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('count')

partsupp.merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 7) & (nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 8691.318746618645) | (supplier['S_ACCTBAL'] < 4365.298753808478)].merge(nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 1700) & (partsupp['PS_SUPPKEY'] >= 6055) | (partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'] == 'y')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 7340) & (partsupp['PS_PARTKEY'] == 23)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 3023) | (partsupp['PS_PARTKEY'] >= 20) & (partsupp['AVAILQTY'] < 6752) & (partsupp['SUPPLYCOST'] < 398.60183917514945)].merge(part[(part['PT_COMMENT'].str.startswith('y')) | (part['RETAILPRICE'] == 994.942660688828) | (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 4733) | (partsupp['PS_SUPPKEY'] <= 2286) | (partsupp['PS_SUPPKEY'] != 5400)].merge(part[['BRAND', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'MFGR']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 2427)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['TYPE'] == 'P')][['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 4323)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('t')) | (supplier['S_NATIONKEY'] != 6) | (supplier['S_NATIONKEY'] <= 7) | (supplier['S_SUPPKEY'] <= 114) & (supplier['S_ADDRESS'] == ' ')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 5799) | (partsupp['SUPPLYCOST'] >= 365.8396157926088) & (partsupp['PS_SUPPKEY'] >= 1914)].merge(part[(part['RETAILPRICE'] <= 937.1558725421771) | (part['BRAND'] == 'Brand#32') | (part['P_NAME'].str.startswith('l')) & (part['CONTAINER'] != 'MED') & (part['RETAILPRICE'] > 1071.8658292758516) & (part['PT_COMMENT'] == 's') & (part['TYPE'] == 'P') & (part['P_PARTKEY'] < 197) | (part['P_NAME'] == 'bis')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 3984) & (partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['P_COMMENT'].str.startswith('bli'))].merge(supplier[(supplier['S_PHONE'] == '2')].merge(nation[(nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'].str.startswith('k'))][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'd') & (partsupp['PS_SUPPKEY'] <= 215) | (partsupp['P_COMMENT'] != 'k') | (partsupp['AVAILQTY'] < 1860) & (partsupp['SUPPLYCOST'] == 94.71331658027908)].merge(supplier[(supplier['S_SUPPKEY'] < 60)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['SUPPLYCOST'] >= 306.0704011893988) & (partsupp['AVAILQTY'] != 9851)].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('.'))].merge(part[(part['PT_COMMENT'] != 'ly ') | (part['MFGR'] == 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#4') & (part['BRAND'].isin(['Brand#11', 'Brand#22', 'Brand#52', 'Brand#54', 'Brand#55', 'Brand#41', 'Brand#31', 'Brand#42', 'Brand#44', 'Brand#32', 'Brand#24', 'Brand#45', 'Brand#25', 'Brand#13', 'Brand#53', 'Brand#51', 'Brand#14'])) | (part['P_NAME'] != 'i') | (part['RETAILPRICE'] <= 1069.6474561286138) & (part['SIZE'] != 4)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 133.61667213461556) & (partsupp['PS_SUPPKEY'] != 1039) & (partsupp['SUPPLYCOST'] > 955.8022413759297) & (partsupp['P_COMMENT'] != 'c') | (partsupp['AVAILQTY'] > 4837)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 581.8491818389305) | (partsupp['PS_SUPPKEY'] > 1757) | (partsupp['PS_PARTKEY'] != 6) & (partsupp['SUPPLYCOST'] == 904.7723525410582)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('n')) | (supplier['S_ACCTBAL'] <= 4873.684828664173) & (supplier['S_ACCTBAL'] == -768.5176550142921) | (supplier['S_COMMENT'] == 'b') & (supplier['S_NATIONKEY'] <= 0) & (supplier['S_ADDRESS'] == '1') | (supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#52', 'Brand#31', 'Brand#12', 'Brand#22', 'Brand#54', 'Brand#33', 'Brand#24', 'Brand#55', 'Brand#14', 'Brand#44', 'Brand#53', 'Brand#45', 'Brand#51', 'Brand#32', 'Brand#11', 'Brand#13', 'Brand#34', 'Brand#25', 'Brand#42', 'Brand#35', 'Brand#41', 'Brand#23', 'Brand#43'])) | (part['RETAILPRICE'] > 1081.9936129994217) & (part['RETAILPRICE'] >= 1053.6467222262152) & (part['CONTAINER'].str.startswith('SM')) & (part['TYPE'] == 'P') & (part['P_NAME'].str.startswith('k')) & (part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith('y'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['PT_COMMENT'] == 'y') & (part['RETAILPRICE'] >= 1024.6547804140048) | (part['P_NAME'] != 'f') | (part['CONTAINER'] != 'MED') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) & (part['RETAILPRICE'] > 1051.5450560232252) | (part['SIZE'] == 30)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'L') & (part['BRAND'].isin(['Brand#15', 'Brand#45', 'Brand#21', 'Brand#33', 'Brand#34', 'Brand#53', 'Brand#14', 'Brand#52', 'Brand#24', 'Brand#42', 'Brand#43', 'Brand#32', 'Brand#22'])) | (part['P_NAME'].str.startswith('v')) & (part['SIZE'] <= 1)][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'q') | (part['P_NAME'] == 'h')][['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 940.3237154023317) & (part['SIZE'] <= 40)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'L') & (part['RETAILPRICE'] > 1056.5456401133401) | (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'] == 'r')][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[['TYPE', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] >= 16) | (supplier['S_NATIONKEY'] != 7) | (supplier['S_NATIONKEY'] >= 22) | (supplier['S_NATIONKEY'] == 21)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] != 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] >= 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 6) & (nation['N_NAME'] != 'C') & (nation['N_NAME'] == 'F') | (nation['N_COMMENT'] != 's')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] == 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 6044.211285300789) | (supplier['S_ACCTBAL'] < -861.413341261166) & (supplier['S_ACCTBAL'] > 8382.39021335454) | (supplier['S_ACCTBAL'] < -244.44275638982595) | (supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_ACCTBAL'] > 3518.488199081128)][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 2025.67131453051) & (supplier['S_SUPPKEY'] <= 197) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'p') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 151) & (supplier['S_NATIONKEY'] > 5)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 4176.0734765984635) | (supplier['S_ADDRESS'] == 'd')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 3064.0322356349834) & (supplier['S_ACCTBAL'] == 8489.72227522856) | (supplier['S_SUPPKEY'] >= 49) & (supplier['S_PHONE'] == '1')].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] > 3) & (nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 7005.736175078384) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 13) | (supplier['S_ACCTBAL'] <= 5864.844155574578) | (supplier['S_SUPPKEY'] != 21) | (supplier['S_SUPPKEY'] > 74) & (supplier['S_COMMENT'] == ',')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'G') & (supplier['S_NATIONKEY'] <= 7) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'o')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'q') | (supplier['S_ACCTBAL'] >= 7388.050659785907) | (supplier['S_SUPPKEY'] <= 3) | (supplier['S_SUPPKEY'] == 163) & (supplier['S_ADDRESS'].str.startswith('i')) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] >= 172)].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('t')) & (supplier['S_SUPPKEY'] == 35)][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_PHONE'] == '2') & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] <= 19)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('u')) & (supplier['S_ADDRESS'] == 'S') | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_NATIONKEY'] != 6) & (supplier['S_COMMENT'] == 'q') & (supplier['S_NAME'] != 'S')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != '7') | (supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] <= 133) | (supplier['S_ACCTBAL'] < 9766.405242499566) & (supplier['S_ADDRESS'].str.startswith('Z'))][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < 7112.602237407042) & (supplier['S_ADDRESS'].str.startswith('v'))].merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_COMMENT'] != 'e') & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 110)][['S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 18) & (supplier['S_COMMENT'] == 'f') & (supplier['S_ADDRESS'] != 'v')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 18) | (supplier['S_ADDRESS'] != 'T')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 2) | (supplier['S_PHONE'] != '1') & (supplier['S_ADDRESS'] == 'v') & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] < 121) & (supplier['S_NAME'] == 'S')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 5) | (supplier['S_SUPPKEY'] == 166) | (supplier['S_NATIONKEY'] != 18) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 12) & (supplier['S_ACCTBAL'] == -118.69047690685386)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 20)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 3) | (supplier['S_ADDRESS'].str.startswith('F')) | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] != 143) & (supplier['S_PHONE'].str.startswith('17-'))][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '3')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] > 16) | (supplier['S_NATIONKEY'] != 21) | (supplier['S_ACCTBAL'] >= 5229.705470247618)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '1') | (supplier['S_NATIONKEY'] > 5) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 1166.636718459841)].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_ACCTBAL'] < 614.699930497954) & (supplier['S_SUPPKEY'] >= 198)].merge(nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 141) & (supplier['S_ADDRESS'] != 'c') & (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_PHONE'] != '1') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] < 14)].merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_NATIONKEY'] <= 8)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 39) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'F') & (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 52) | (supplier['S_PHONE'] == '2') | (supplier['S_NATIONKEY'] <= 23) & (supplier['S_NATIONKEY'] >= 0)].merge(nation[(nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 9) & (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_ACCTBAL'] != -708.1664922797331) & (supplier['S_PHONE'] != '17-') & (supplier['S_COMMENT'] != 'g')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 87) | (supplier['S_SUPPKEY'] != 48) | (supplier['S_NATIONKEY'] == 12) | (supplier['S_NATIONKEY'] > 15) | (supplier['S_ACCTBAL'] > 4302.378011010109) & (supplier['S_NATIONKEY'] > 19)].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 0) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'] == 'J')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'] == 'p')].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] > 2) | (nation['N_NAME'] != 'S')].merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] == 'J')].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] != -9.890292985537599) | (customer['C_CUSTKEY'] != 22) & (customer['C_ACCTBAL'] < 4221.216800643748) | (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NATIONKEY'] > 22)][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 3490.9785414805456) & (customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] != 21) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'q') | (customer['C_ADDRESS'].str.startswith('r')) & (customer['C_NATIONKEY'] > 11)][['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']]

customer[(customer['C_ACCTBAL'] != 7132.217946071224)].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8802.311317143365) | (customer['C_NATIONKEY'] >= 2) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NATIONKEY'] != 14) & (customer['C_ADDRESS'] == 'x') | (customer['C_NATIONKEY'] > 14) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 8436.17921495038) | (customer['C_NATIONKEY'] >= 15) | (customer['C_COMMENT'] == ' ') | (customer['C_COMMENT'] != 'u') & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('k')) | (customer['C_PHONE'] != '22-') | (customer['C_PHONE'] != '2')].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9763.30779606102) | (customer['C_ADDRESS'] == 'K') & (customer['C_NATIONKEY'] >= 14) | (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] <= 3352.609488720008) & (customer['C_CUSTKEY'] < 42)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9834.71380346019) & (customer['C_CUSTKEY'] >= 54) | (customer['C_CUSTKEY'] > 42) & (customer['C_ACCTBAL'] >= 3201.6408535641976) | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_PHONE'].str.startswith('27-'))][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 408.4977198234744) | (customer['C_NATIONKEY'] >= 3) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('s')) & (customer['C_ACCTBAL'] <= 8495.099955260743)][['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'] != 'I') | (customer['C_PHONE'] != '18-') & (customer['C_NATIONKEY'] < 16) & (customer['C_ADDRESS'] != '6') | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'T') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_COMMENT'] == 'l')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'n') & (customer['C_NATIONKEY'] == 21) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_PHONE'] == '25-') & (customer['C_PHONE'].str.startswith('13-'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != 'h') | (customer['C_COMMENT'].str.startswith('.'))].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['C_CUSTKEY'] != 80) & (customer['C_ACCTBAL'] < 8001.135800440747) & (customer['C_ADDRESS'] == 'm') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 't')].merge(nation[(nation['N_NATIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('s')) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_COMMENT'] != 'k') | (customer['C_ACCTBAL'] >= 7306.969077205546) | (customer['C_COMMENT'] == 'y') | (customer['C_NATIONKEY'] > 7) | (customer['C_ACCTBAL'] >= 5201.588701533975)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] != 15) | (nation['N_NAME'] != 'J')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 8) & (customer['C_PHONE'] == '3') & (customer['C_ACCTBAL'] > 7787.984813334493) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] == -326.09837507563554) | (customer['C_NATIONKEY'] <= 0)].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 99) & (customer['C_CUSTKEY'] != 44) | (customer['C_ADDRESS'] != 'Q')][['C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 88)].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 22) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] != 99) | (customer['C_ACCTBAL'] <= 1462.954083429337) | (customer['C_COMMENT'].str.startswith('u'))][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 49)].merge(nation[(nation['N_NATIONKEY'] < 12) | (nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('P')) & (nation['N_NATIONKEY'] == 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == '7') & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('l')) & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 37) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] != 10)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] != 1) | (customer['C_ADDRESS'] != 'q') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_ACCTBAL'] == 4996.5771077453965) | (customer['C_CUSTKEY'] < 22) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'n')][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']).agg('count')

customer[(customer['C_NATIONKEY'] != 14)].merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] == 10) & (customer['C_ADDRESS'] != 'E') | (customer['C_PHONE'] == '18-') | (customer['C_PHONE'] != '1') | (customer['C_NATIONKEY'] < 17) | (customer['C_ADDRESS'].str.startswith('L')) & (customer['C_NATIONKEY'] != 0)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '2') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('I'))].merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] != 'q')].merge(nation.merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] <= 1279.5122040635174)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] == 7)].merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('2'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 11) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD']))][['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING')][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_NATIONKEY'] >= 21) & (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'a') & (customer['C_ACCTBAL'] <= 7179.679052156715) & (customer['C_PHONE'] == '13-')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 1) & (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_PHONE', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'].str.startswith('c'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('u'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_NATIONKEY'] > 11) & (customer['C_ACCTBAL'] != 2676.1674018434464) | (customer['C_CUSTKEY'] <= 72) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_NATIONKEY'] > 22) | (customer['C_CUSTKEY'] >= 77)][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] >= 270) & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] != 'SM') | (part['MFGR'].isin(['Manufacturer#3'])) | (part['P_PARTKEY'] <= 93)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'TYPE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['P_NAME'].str.startswith('o')) | (part['P_NAME'].str.startswith('b')) & (part['RETAILPRICE'] >= 1012.7832379706213) & (part['SIZE'] > 47) | (part['PT_COMMENT'] != ' fi') & (part['BRAND'].isin(['Brand#32', 'Brand#52', 'Brand#14', 'Brand#44', 'Brand#24', 'Brand#23', 'Brand#21', 'Brand#11', 'Brand#53', 'Brand#43', 'Brand#35', 'Brand#12', 'Brand#45', 'Brand#13', 'Brand#54', 'Brand#33', 'Brand#42', 'Brand#41', 'Brand#22', 'Brand#34', 'Brand#51', 'Brand#15'])) | (part['BRAND'] == 'Brand#13') & (part['PT_COMMENT'] != 'kag') | (part['MFGR'] != 'Manufacturer#1')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 116)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 1981)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 9571) & (partsupp['PS_SUPPKEY'] != 5764) & (partsupp['PS_SUPPKEY'] < 6260) | (partsupp['SUPPLYCOST'] == 118.34063527140655)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 48)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5856) | (partsupp['SUPPLYCOST'] == 125.52026409610349)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 3544)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] != 'c') & (part['CONTAINER'].str.startswith('JUMBO'))][['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'h') & (partsupp['SUPPLYCOST'] == 168.6033638328294) & (partsupp['P_COMMENT'] == ' th') & (partsupp['PS_PARTKEY'] <= 23) & (partsupp['P_COMMENT'].str.startswith(','))].merge(part[(part['P_PARTKEY'] >= 63) | (part['P_NAME'] == 'bis')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 69.82154782081994) | (partsupp['AVAILQTY'] >= 3292)].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'BRAND', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']).agg('count')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['DISCOUNT'] <= 0.037920113560892144) | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['L_ORDERKEY'] != 185) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['DISCOUNT'] > 0.05721140888109676) & (lineitem['L_ORDERKEY'] == 8) & (lineitem['RECEIPTDATE'] >= '1992-05-02')].merge(partsupp[(partsupp['AVAILQTY'] <= 8186)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] != 4) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINENUMBER'] != 5) | (lineitem['EXTENDEDPRICE'] <= 87069.29329714985)][['EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 2) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['SHIPMODE'] != 'RAIL')][['SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders[(orders['SHIPPRIORITY'] > 0)][['ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] == 1) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE'])) & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_PARTKEY'] <= 42133) & (lineitem['L_SUPPKEY'] <= 541) | (lineitem['QUANTITY'] >= 41) | (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['QUANTITY'] != 28)][['EXTENDEDPRICE', 'LINESTATUS', 'RECEIPTDATE', 'L_COMMENT', 'RETURNFLAG', 'SHIPDATE', 'LINENUMBER']]

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['L_SUPPKEY', 'TAX', 'RECEIPTDATE', 'DISCOUNT', 'LINENUMBER']].groupby(by=['L_SUPPKEY', 'TAX', 'RECEIPTDATE', 'LINENUMBER', 'DISCOUNT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 139) | (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['EXTENDEDPRICE'] != 3129.1099092804398) & (lineitem['L_COMMENT'] == 'c')].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] == 79988) & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['QUANTITY'] < 37) & (lineitem['TAX'] < 0.02936853905341522) & (lineitem['DISCOUNT'] <= 0.09480727863147718) & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_SUPPKEY'] == 5567)][['QUANTITY', 'LINENUMBER', 'SHIPINSTRUCT', 'L_PARTKEY']].groupby(by=['LINENUMBER', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 29) & (lineitem['LINENUMBER'] >= 4) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['LINESTATUS'] != 'O')][['COMMITDATE', 'TAX', 'SHIPINSTRUCT', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 97.46318065973838) | (partsupp['PS_SUPPKEY'] == 2556)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27')].merge(partsupp[(partsupp['SUPPLYCOST'] != 449.4554507533864) | (partsupp['PS_SUPPKEY'] <= 5592) & (partsupp['P_COMMENT'] != 'the') | (partsupp['AVAILQTY'] != 7958)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['EXTENDEDPRICE'] >= 33144.14723043279) | (lineitem['L_ORDERKEY'] < 37) | (lineitem['TAX'] >= 0.025169926743015207) | (lineitem['DISCOUNT'] < 0.062233925285800074) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['LINESTATUS'].isin(['F', 'O']))][['DISCOUNT', 'LINENUMBER', 'SHIPDATE']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['RETURNFLAG'] != 'R') & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['LINENUMBER'] < 2) | (lineitem['SHIPDATE'] == '1992-04-27')].merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 44871) | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] > 15213) | (orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] == 65619.46046895676) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERDATE'] > '1998-07-21')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['EXTENDEDPRICE'] < 50250.55168979735) & (lineitem['LINENUMBER'] >= 1) | (lineitem['L_ORDERKEY'] < 46)][['COMMITDATE', 'DISCOUNT', 'LINESTATUS', 'RECEIPTDATE']].groupby(by=['LINESTATUS', 'DISCOUNT']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['LINENUMBER'] == 6) | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['LINESTATUS'] == 'F') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['L_COMMENT'].str.startswith(' re'))].merge(orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] <= 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'LINESTATUS', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'QUANTITY', 'SHIPMODE', 'TAX']].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'L_SUPPKEY', 'TAX']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'L_COMMENT', 'L_PARTKEY', 'L_ORDERKEY', 'RETURNFLAG', 'DISCOUNT', 'LINESTATUS']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'L_SUPPKEY', 'COMMITDATE', 'TAX', 'SHIPDATE']].merge(orders[(orders['ORDERSTATUS'].isin(['P']))].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'TAX', 'DISCOUNT', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPINSTRUCT']].merge(orders[(orders['CLERK'] != 'C')][['ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'LINESTATUS', 'QUANTITY', 'L_PARTKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

lineitem[['TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPMODE', 'SHIPDATE', 'LINENUMBER']].merge(orders[['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'o') & (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] <= 2)].merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h')].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] != 'u')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] <= 8)].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'C') | (nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] != 'n')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] != 23) | (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'G')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] > 3) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'U')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] == 23) & (nation['N_NATIONKEY'] < 2)].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] == 'i') | (nation['N_REGIONKEY'] <= 0)][['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 8)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 10) | (nation['N_NATIONKEY'] <= 16) | (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 12)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] == 15) & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 3) | (nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] > 6) & (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 8) | (nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] == 'P')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 0) | (nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] != 5)][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] == 'U')].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] != 1433.637003451469) | (customer['C_ACCTBAL'] < 3468.878220338738) & (customer['C_NATIONKEY'] >= 1) & (customer['C_CUSTKEY'] > 83) | (customer['C_ADDRESS'].str.startswith('L')) | (customer['C_ACCTBAL'] < 9011.4276904723) & (customer['C_COMMENT'] != 'q') & (customer['C_PHONE'] == '2')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 7338.163053412938) | (customer['C_COMMENT'] != 'w') & (customer['C_NATIONKEY'] == 14) | (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == '6')].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] <= 3) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] == 5459.862635450757) | (customer['C_PHONE'] != '3')].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '3') | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] < 85) & (customer['C_ACCTBAL'] > 5809.395999842266) & (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NATIONKEY'] >= 22)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'l') | (customer['C_CUSTKEY'] > 55) | (customer['C_COMMENT'].str.startswith('e')) | (customer['C_PHONE'].str.startswith('2')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] <= -87.94949941778634)][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 5) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] <= 55) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'l') & (customer['C_COMMENT'].str.startswith('h'))].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] > 10)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] > 18)].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] != 'o') & (nation['N_NATIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 963.0033389137536) | (customer['C_ACCTBAL'] < 7650.975756147758) & (customer['C_NATIONKEY'] >= 0) & (customer['C_COMMENT'] != 'y') | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_ACCTBAL'] >= 114.60484256473092)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C')][['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']).agg('count')

orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'w')].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] <= 791) & (orders['O_CUSTKEY'] == 37456) | (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[(customer['C_ACCTBAL'] < 6210.908144245727) | (customer['C_COMMENT'].str.startswith('g')) | (customer['C_ACCTBAL'] >= 582.9873627378329)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] > 620) | (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['TOTALPRICE'] != 74799.810002994) | (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] == 159753.88575864842) & (orders['O_ORDERKEY'] != 7) & (orders['O_CUSTKEY'] >= 21843) | (orders['O_COMMENT'].str.startswith('u')) | (orders['ORDERPRIORITY'] == '1-URGENT')][['O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']]

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1992-01-13')][['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'CLERK']).agg('count')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] == 19) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] == 19806)].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'].str.startswith('Y'))][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '3-MEDIUM', '5-LOW'])) | (orders['O_ORDERKEY'] == 521) | (orders['O_CUSTKEY'] >= 33223) & (orders['O_CUSTKEY'] == 115048) | (orders['TOTALPRICE'] == 8962.20240306572) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_COMMENT'] != 'k') | (orders['O_COMMENT'] != 'x') & (orders['ORDERSTATUS'].isin(['P']))][['ORDERSTATUS', 'TOTALPRICE']].groupby(by=['ORDERSTATUS', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_COMMENT'] != 'q') | (orders['O_CUSTKEY'] < 137534) & (orders['O_CUSTKEY'] > 59352) & (orders['O_CUSTKEY'] < 69919) | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] == 728)][['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'] == 'P')].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith(' ')) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C')].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 144905) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_ORDERKEY'] <= 127) & (orders['O_ORDERKEY'] != 797) & (orders['ORDERPRIORITY'].isin(['2-HIGH']))][['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 120694) & (orders['O_ORDERKEY'] > 432) & (orders['O_COMMENT'].str.startswith('w'))].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 64511) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] > 53609) | (orders['O_COMMENT'].str.startswith('g')) & (orders['TOTALPRICE'] < 269094.448439904) | (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] <= 147615)].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 7794) | (orders['O_CUSTKEY'] == 61824) & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 'ly ') | (orders['O_CUSTKEY'] < 80041) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C')][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] >= 89197) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 267) & (orders['O_CUSTKEY'] == 41324) & (orders['TOTALPRICE'] < 16820.843795974586) & (orders['O_CUSTKEY'] != 118638) | (orders['O_ORDERKEY'] > 16) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('z')) | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'O_COMMENT', 'CLERK']].groupby(by=['CLERK', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 481) & (orders['TOTALPRICE'] == 240394.9225212728) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '1-URGENT')][['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] != 91) & (orders['TOTALPRICE'] > 114090.3273794616) & (orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['C_ADDRESS'] == 'n') | (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_CUSTKEY'] >= 7) | (customer['C_COMMENT'].str.startswith('a'))][['C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 15770.0011506994) & (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 758) | (orders['O_CUSTKEY'] == 92863) | (orders['O_ORDERKEY'] > 593) & (orders['O_ORDERKEY'] < 126) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM', '1-URGENT', '5-LOW'])) & (orders['O_COMMENT'] == 'l') | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] <= 112690.11103960298) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'] == 'egu')].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('count')

orders[(orders['TOTALPRICE'] != 255778.81639168103) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH', '5-LOW'])) & (orders['O_CUSTKEY'] <= 64668) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW', '2-HIGH'])) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_CUSTKEY'] == 12948)][['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 22638.20506843929) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] <= 206) | (orders['O_COMMENT'] != 's') | (orders['ORDERDATE'] < '1992-01-13') | (orders['TOTALPRICE'] >= 280682.33416139224) & (orders['CLERK'] != 'C')].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 309960.9537975334) & (orders['O_ORDERKEY'] >= 89) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] == 94104)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('I')) | (nation['N_NAME'] == 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 329662.967898733) | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] <= 716) | (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['O_COMMENT'].str.startswith('i')) | (orders['O_COMMENT'].str.startswith(' ')) & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 'f') | (orders['O_COMMENT'].str.startswith('-'))][['O_COMMENT', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 16) | (customer['C_CUSTKEY'] == 11) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 19)][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] == '13-')][['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('count')

part[(part['BRAND'] != 'Brand#55') & (part['TYPE'] != 'S') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_NAME'] != 's') & (part['P_NAME'] == 'cor') & (part['P_PARTKEY'] <= 98) | (part['P_NAME'].str.startswith('b')) & (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] == 'JUMBO')][['CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']]

part[(part['BRAND'] == 'Brand#44') | (part['BRAND'].isin(['Brand#13', 'Brand#43', 'Brand#31', 'Brand#14', 'Brand#11', 'Brand#22', 'Brand#42', 'Brand#32', 'Brand#41', 'Brand#15', 'Brand#34', 'Brand#24', 'Brand#12', 'Brand#25', 'Brand#33', 'Brand#23', 'Brand#54', 'Brand#53', 'Brand#21', 'Brand#45', 'Brand#55', 'Brand#51', 'Brand#52'])) & (part['BRAND'].isin(['Brand#55', 'Brand#13', 'Brand#42', 'Brand#44', 'Brand#51', 'Brand#11', 'Brand#32', 'Brand#43', 'Brand#45', 'Brand#34', 'Brand#12', 'Brand#24', 'Brand#23', 'Brand#35', 'Brand#41', 'Brand#21', 'Brand#53', 'Brand#33', 'Brand#52', 'Brand#54', 'Brand#25', 'Brand#15', 'Brand#22'])) & (part['PT_COMMENT'] != 'ss ') | (part['BRAND'] != 'Brand#53') & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] >= 1032.781275371004)][['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#35', 'Brand#22', 'Brand#55', 'Brand#43', 'Brand#14', 'Brand#21'])) & (part['RETAILPRICE'] == 976.0306820922457) | (part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] != 'p') | (part['P_PARTKEY'] > 185) | (part['TYPE'] != 'M') | (part['RETAILPRICE'] > 1091.1994952423038)][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']]

part[(part['CONTAINER'] != 'MED') | (part['BRAND'].isin(['Brand#34', 'Brand#15', 'Brand#42', 'Brand#55', 'Brand#22', 'Brand#43', 'Brand#24', 'Brand#45', 'Brand#53', 'Brand#35', 'Brand#41', 'Brand#12', 'Brand#13', 'Brand#51', 'Brand#11', 'Brand#23', 'Brand#33', 'Brand#32', 'Brand#25', 'Brand#14'])) & (part['P_PARTKEY'] > 168) & (part['SIZE'] < 19) & (part['MFGR'] != 'Manufacturer#5')][['BRAND', 'CONTAINER', 'MFGR', 'PT_COMMENT']].groupby(by=['BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['CONTAINER'] != 'LG')][['MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME']].groupby(by=['P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'BRAND']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] < 1071.3611413873537) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4'])) | (part['RETAILPRICE'] >= 1049.3520212441629) & (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] == 152) | (part['RETAILPRICE'] >= 997.1923599438005)][['BRAND', 'RETAILPRICE', 'SIZE', 'MFGR']].groupby(by=['BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] != 'P') & (part['BRAND'] == 'Brand#44')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') | (part['TYPE'] != 'L')][['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1'])) | (part['SIZE'] != 43) & (part['CONTAINER'] == 'MED') | (part['BRAND'] == 'Brand#53')][['RETAILPRICE', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5']))][['MFGR', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['SIZE', 'P_NAME', 'MFGR']).agg('count')

part[(part['PT_COMMENT'] != 'd') & (part['P_NAME'] != 'bis') | (part['MFGR'].isin(['Manufacturer#3'])) & (part['P_NAME'] == 'y') | (part['MFGR'] == 'Manufacturer#4') | (part['BRAND'] != 'Brand#31') | (part['P_PARTKEY'] < 93)][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('c')) | (part['P_NAME'] == 'a') | (part['P_NAME'].str.startswith('p')) | (part['PT_COMMENT'] != 'x') | (part['TYPE'] != 'L') & (part['P_NAME'] != 'cor') & (part['PT_COMMENT'] == 'ly ') & (part['BRAND'] != 'Brand#51') | (part['P_PARTKEY'] != 4)][['BRAND', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[(part['PT_COMMENT'].str.startswith('l')) & (part['SIZE'] <= 35) & (part['SIZE'] > 26) | (part['PT_COMMENT'].str.startswith('u')) | (part['TYPE'] != 'S') | (part['TYPE'].str.startswith('P'))][['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']].groupby(by=['BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'h') & (part['CONTAINER'] == 'LG') & (part['BRAND'] == 'Brand#13')][['PT_COMMENT', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']].groupby(by=['SIZE', 'P_NAME', 'PT_COMMENT']).agg('count')

part[(part['P_NAME'] != 'p') | (part['SIZE'] > 35) & (part['BRAND'] != 'Brand#54') | (part['RETAILPRICE'] >= 914.9411313656411)][['BRAND', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']].groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE', 'MFGR']).agg('count')

part[(part['P_NAME'] == 'b') & (part['P_NAME'] != 't') | (part['P_NAME'] == 's') & (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] <= 36) | (part['PT_COMMENT'] != 't') & (part['MFGR'] != 'Manufacturer#4')][['CONTAINER', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('w')) | (part['MFGR'] == 'Manufacturer#3') | (part['PT_COMMENT'].str.startswith('n')) & (part['P_PARTKEY'] > 172) & (part['PT_COMMENT'] == 'n') & (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'].str.startswith('o'))][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] != 1055.874311263352) | (part['SIZE'] < 14) | (part['SIZE'] <= 38) | (part['SIZE'] < 35) & (part['CONTAINER'] == 'SM') & (part['CONTAINER'] != 'LG')][['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['RETAILPRICE'] <= 954.4042776779401) | (part['PT_COMMENT'] != 's') | (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] == 978.5825869463577) & (part['P_PARTKEY'] <= 131) & (part['P_NAME'].str.startswith('y')) & (part['PT_COMMENT'] == 'o') & (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'].str.startswith('SM'))][['PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[(part['RETAILPRICE'] >= 986.9331211901166) | (part['BRAND'].isin(['Brand#25', 'Brand#53', 'Brand#24', 'Brand#14', 'Brand#21', 'Brand#11', 'Brand#55', 'Brand#51', 'Brand#42', 'Brand#23'])) & (part['CONTAINER'].str.startswith('SM'))][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['P_NAME']).agg('count')

part[(part['SIZE'] <= 16) | (part['P_PARTKEY'] <= 8) | (part['RETAILPRICE'] < 929.8556660287459) | (part['PT_COMMENT'] == 'ss ') | (part['P_NAME'].str.startswith('f')) & (part['P_PARTKEY'] >= 101) | (part['PT_COMMENT'].str.startswith('f')) & (part['TYPE'] == 'SMA') & (part['MFGR'] == 'Manufacturer#1')][['BRAND', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'TYPE', 'PT_COMMENT']]

part[(part['TYPE'] == 'M') | (part['P_NAME'] == 'bis') | (part['PT_COMMENT'].str.startswith('ly ')) | (part['CONTAINER'].str.startswith('LG')) | (part['TYPE'].str.startswith('E')) | (part['P_PARTKEY'] == 196) | (part['P_PARTKEY'] == 149)][['CONTAINER', 'BRAND', 'MFGR']].groupby(by=['BRAND', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] == 'cor') & (part['TYPE'] == 'P') & (part['RETAILPRICE'] == 1096.3657598071175) | (part['CONTAINER'] != 'JUMBO') | (part['BRAND'].isin(['Brand#55', 'Brand#51', 'Brand#24', 'Brand#13'])) | (part['P_PARTKEY'] <= 91) | (part['P_NAME'].str.startswith('k'))][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('Q'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 14) | (supplier['S_SUPPKEY'] != 68) & (supplier['S_PHONE'] == '32-') | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_ACCTBAL'] < 7419.570476773278)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 106) | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 29) & (supplier['S_COMMENT'].str.startswith('u')) & (supplier['S_NATIONKEY'] <= 13) | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 40) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 2374.0134077776547) & (supplier['S_COMMENT'] == 'b') & (supplier['S_COMMENT'].str.startswith('c'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 7116) & (partsupp['PS_SUPPKEY'] <= 1865)].merge(part[(part['P_NAME'].str.startswith('b'))][['P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 7980) & (partsupp['PS_SUPPKEY'] > 5858)].merge(supplier[(supplier['S_SUPPKEY'] == 5) & (supplier['S_PHONE'] == '14-') | (supplier['S_PHONE'] != '1')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 3348) | (partsupp['PS_PARTKEY'] > 41) & (partsupp['P_COMMENT'] == 'u')][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 45) & (partsupp['P_COMMENT'] == 'b')].merge(part[(part['P_NAME'].str.startswith('bis')) & (part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'] != 'lem') | (part['BRAND'] != 'Brand#24') | (part['RETAILPRICE'] >= 1026.993738900915) | (part['SIZE'] >= 29) | (part['P_NAME'] != 'lem')][['SIZE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 8)].merge(supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] <= 38) & (partsupp['PS_PARTKEY'] != 28) | (partsupp['AVAILQTY'] != 709)].merge(part[(part['P_PARTKEY'] <= 33)][['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 15) & (partsupp['PS_PARTKEY'] == 39) | (partsupp['P_COMMENT'].str.startswith('p')) | (partsupp['AVAILQTY'] <= 3519)].merge(part[(part['SIZE'] > 40) & (part['PT_COMMENT'] == 'c') & (part['P_NAME'].str.startswith('lem')) & (part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] >= 51)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 11)].merge(part[(part['SIZE'] <= 2) | (part['SIZE'] == 36) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1'])) & (part['BRAND'] == 'Brand#54') & (part['RETAILPRICE'] < 981.0199911991355) | (part['RETAILPRICE'] <= 1043.0283308376904) | (part['SIZE'] <= 15)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2558) | (partsupp['PS_PARTKEY'] <= 17) | (partsupp['PS_PARTKEY'] < 32) & (partsupp['P_COMMENT'].str.startswith('e'))][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 426) & (partsupp['PS_SUPPKEY'] <= 2227) | (partsupp['PS_SUPPKEY'] >= 3225) & (partsupp['PS_SUPPKEY'] >= 7164)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] == 'A')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 4601)].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3']))][['PT_COMMENT', 'SIZE', 'CONTAINER', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] < 3501) & (partsupp['AVAILQTY'] == 7004)].merge(part[(part['BRAND'].isin(['Brand#35', 'Brand#13', 'Brand#31', 'Brand#44', 'Brand#51', 'Brand#25', 'Brand#43', 'Brand#41', 'Brand#55', 'Brand#14', 'Brand#11', 'Brand#45', 'Brand#52', 'Brand#24', 'Brand#32', 'Brand#12', 'Brand#22', 'Brand#23', 'Brand#53', 'Brand#42', 'Brand#15', 'Brand#21', 'Brand#33'])) & (part['CONTAINER'].str.startswith('WRAP')) & (part['RETAILPRICE'] < 964.0721669130867) | (part['BRAND'] == 'Brand#14') | (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] <= 181)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] < 4408)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['SIZE', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5006) & (partsupp['SUPPLYCOST'] == 695.3975431526547)].merge(part[(part['RETAILPRICE'] >= 1047.2168685955514) & (part['CONTAINER'] != 'WRAP') & (part['P_NAME'].str.startswith('v'))][['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 1520) & (partsupp['PS_SUPPKEY'] >= 3956) & (partsupp['SUPPLYCOST'] <= 979.7731486739863) & (partsupp['P_COMMENT'] == 'r')][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] == 960.6328966551146) & (part['BRAND'] != 'Brand#22') | (part['CONTAINER'] == 'SM') | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1734) & (partsupp['AVAILQTY'] > 3366) & (partsupp['P_COMMENT'] != 'are') & (partsupp['P_COMMENT'].str.startswith('c'))][['PS_PARTKEY', 'AVAILQTY']].merge(part[['BRAND', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3530)].merge(part[['BRAND', 'MFGR', 'SIZE', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4525) | (partsupp['SUPPLYCOST'] > 322.7765348863016) | (partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['P_COMMENT'] != 'o')][['PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != '.')].merge(part[['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ';') & (partsupp['SUPPLYCOST'] < 633.1643764153922)].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'i') & (partsupp['SUPPLYCOST'] != 265.1263806007286) & (partsupp['AVAILQTY'] >= 6227)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] == 11) | (nation['N_NATIONKEY'] > 23) | (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 't') & (partsupp['SUPPLYCOST'] > 843.9079267749881) & (partsupp['PS_PARTKEY'] == 18) | (partsupp['AVAILQTY'] < 9477)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['CONTAINER', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('.'))][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('d'))].merge(part[(part['BRAND'].isin(['Brand#25', 'Brand#55', 'Brand#13', 'Brand#31', 'Brand#54', 'Brand#51', 'Brand#45'])) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'] != 'Brand#51') & (part['P_NAME'] != 's') | (part['SIZE'] <= 38) & (part['P_NAME'].str.startswith('g')) & (part['SIZE'] != 39) & (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('h')) & (partsupp['SUPPLYCOST'] > 449.92107842846474) | (partsupp['AVAILQTY'] < 3228) | (partsupp['AVAILQTY'] <= 7596) | (partsupp['PS_PARTKEY'] <= 1)].merge(part[['P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 700.2427511464227) | (partsupp['PS_PARTKEY'] > 23) | (partsupp['P_COMMENT'] == '.') & (partsupp['AVAILQTY'] > 2754)].merge(part[(part['BRAND'] == 'Brand#14') | (part['BRAND'].isin(['Brand#45', 'Brand#23', 'Brand#55', 'Brand#12', 'Brand#13', 'Brand#44', 'Brand#21', 'Brand#32', 'Brand#15', 'Brand#54', 'Brand#34', 'Brand#53', 'Brand#22', 'Brand#33', 'Brand#35', 'Brand#52', 'Brand#43', 'Brand#42'])) | (part['TYPE'] == 'E') | (part['MFGR'] == 'Manufacturer#4') | (part['TYPE'] != 'SMA') | (part['P_NAME'] == 'g') | (part['PT_COMMENT'] != 'd') & (part['RETAILPRICE'] != 1040.1829637809972) | (part['BRAND'] == 'Brand#13')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['SIZE'] <= 32) | (part['BRAND'] == 'Brand#15')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'SIZE', 'P_NAME', 'PT_COMMENT']).agg('count')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['CONTAINER'] != 'MED') | (part['BRAND'] != 'Brand#24') & (part['BRAND'] != 'Brand#14') & (part['P_PARTKEY'] != 109) | (part['TYPE'] != 'M') & (part['CONTAINER'] != 'JUMBO')][['P_PARTKEY', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('n')) | (part['BRAND'].isin(['Brand#52', 'Brand#45', 'Brand#55', 'Brand#23', 'Brand#42', 'Brand#21', 'Brand#32', 'Brand#33', 'Brand#41', 'Brand#53', 'Brand#22', 'Brand#25', 'Brand#51', 'Brand#24', 'Brand#35', 'Brand#14', 'Brand#34', 'Brand#43', 'Brand#44', 'Brand#31', 'Brand#13', 'Brand#12', 'Brand#54', 'Brand#11'])) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['RETAILPRICE'] <= 1045.0862485840762) & (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 1076.5241880777176) | (part['PT_COMMENT'] != 'the') | (part['SIZE'] > 24) | (part['PT_COMMENT'].str.startswith(' ')) | (part['BRAND'].isin(['Brand#34', 'Brand#22', 'Brand#45', 'Brand#31', 'Brand#51', 'Brand#44', 'Brand#13', 'Brand#32', 'Brand#52', 'Brand#41', 'Brand#25', 'Brand#21', 'Brand#53', 'Brand#42', 'Brand#35', 'Brand#55', 'Brand#54', 'Brand#12', 'Brand#15', 'Brand#24', 'Brand#23']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] != 6995.554132825617) & (supplier['S_ACCTBAL'] < 5659.693072714236)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['SIZE'] > 21) & (part['RETAILPRICE'] != 979.1915900180855) | (part['RETAILPRICE'] >= 970.6195468906141) & (part['BRAND'] != 'Brand#21') | (part['RETAILPRICE'] < 923.2000713766873) | (part['BRAND'].isin(['Brand#32', 'Brand#15', 'Brand#31', 'Brand#34', 'Brand#13'])) & (part['BRAND'] == 'Brand#54') & (part['P_PARTKEY'] < 108)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#3')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('y')) | (part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'] == 'i')][['BRAND', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'r')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'] != ' ')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] == 3) & (nation['N_NATIONKEY'] <= 19)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'M') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] == 9) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] >= 6) | (nation['N_NAME'] == 'I')].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'] == 'AME') & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 8780.584919499546) | (supplier['S_COMMENT'] == 'g') & (supplier['S_ACCTBAL'] < 7915.783344308401) & (supplier['S_ACCTBAL'] != 4363.988874575078) & (supplier['S_SUPPKEY'] == 98) | (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ADDRESS'] == '8')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 1375.274671811512) & (supplier['S_PHONE'] == '17-')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 3140.8422266282605) & (supplier['S_NATIONKEY'] > 13) | (supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] == -456.77603178288564) & (supplier['S_SUPPKEY'] >= 103) & (supplier['S_COMMENT'] != 'd') | (supplier['S_NATIONKEY'] != 2) | (supplier['S_COMMENT'] != 'q') | (supplier['S_ADDRESS'].str.startswith('l')) & (supplier['S_NATIONKEY'] <= 0)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'I') & (supplier['S_COMMENT'].str.startswith('the')) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == ' ')].merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_NATIONKEY'] < 1) & (supplier['S_NATIONKEY'] >= 11) & (supplier['S_ACCTBAL'] == -488.989829339163) | (supplier['S_NATIONKEY'] > 12)][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_SUPPKEY'] != 89)].merge(nation[(nation['N_NATIONKEY'] < 15) & (nation['N_NAME'] != 'U')].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'q') & (supplier['S_ADDRESS'].str.startswith('q')) & (supplier['S_ACCTBAL'] >= 6840.3970441269685) & (supplier['S_ADDRESS'] == 'V') & (supplier['S_NATIONKEY'] == 5)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY']].groupby(by=['S_COMMENT', 'S_PHONE', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'the') & (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] < 109) | (supplier['S_ADDRESS'] != '4') | (supplier['S_NAME'] == 'S')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_ACCTBAL'] < 451.2294966635566) & (supplier['S_NATIONKEY'] < 21) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'y') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'W') & (supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] != 166) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_COMMENT'] == 'f') & (supplier['S_NATIONKEY'] > 18) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'o') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 4966.702767414061)].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_ACCTBAL'] != 5173.419073338172) & (supplier['S_COMMENT'] != 'q') | (supplier['S_SUPPKEY'] == 134) & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('n'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != 'V') | (supplier['S_COMMENT'] != 'v') & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_SUPPKEY'] <= 34) & (supplier['S_ADDRESS'] == 'I')].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] >= 8878.064161055681) & (supplier['S_SUPPKEY'] > 179) & (supplier['S_ADDRESS'] != 'i') & (supplier['S_PHONE'] == '28-') & (supplier['S_COMMENT'].str.startswith('d')) | (supplier['S_ADDRESS'].str.startswith('I'))][['S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_ACCTBAL'] != 7997.477593916125) | (supplier['S_NATIONKEY'] <= 9) | (supplier['S_COMMENT'] != 'f') & (supplier['S_SUPPKEY'] != 106)].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] <= 14) & (nation['N_REGIONKEY'] != 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'k')][['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == -60.0776569584807) & (supplier['S_NATIONKEY'] >= 0) | (supplier['S_NATIONKEY'] > 22) | (supplier['S_NATIONKEY'] < 16)].merge(nation[(nation['N_NATIONKEY'] > 6) & (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] <= 8)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 13) | (supplier['S_SUPPKEY'] == 128) | (supplier['S_ACCTBAL'] >= 5375.685731626929)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_SUPPKEY'] != 30) | (supplier['S_ACCTBAL'] <= 4253.4366245752) & (supplier['S_NATIONKEY'] < 23) | (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_NAME'] != 'S')][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 11) & (supplier['S_ACCTBAL'] > 6700.091587801526) & (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_PHONE'] == '3') & (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 14)].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] == 9) & (nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 23) | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 6735.928398109358) | (supplier['S_SUPPKEY'] < 90) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'W')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 4) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_COMMENT'].str.startswith('n'))].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == ' ')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 18) & (supplier['S_ADDRESS'] == '2') & (supplier['S_COMMENT'] != 'w')].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_ACCTBAL'] > 7818.918846106114) & (supplier['S_PHONE'] != '1') & (supplier['S_PHONE'] == '28-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] > 7988.401795229752) | (supplier['S_COMMENT'].str.startswith('a')) & (supplier['S_ADDRESS'].str.startswith('Z'))][['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'] == '6')].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_NATIONKEY'] >= 12)].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] > 15) & (supplier['S_COMMENT'] == 'x') | (supplier['S_PHONE'] == '2')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] > 4059.7050180382776) | (supplier['S_ADDRESS'] != 'm') | (supplier['S_SUPPKEY'] >= 151) & (supplier['S_NATIONKEY'] >= 18) | (supplier['S_ACCTBAL'] == 3966.8747070251693) & (supplier['S_PHONE'] == '17-')][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ADDRESS'] == '1') | (supplier['S_COMMENT'] == 'x')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] != '2') & (supplier['S_SUPPKEY'] != 3) | (supplier['S_ACCTBAL'] <= 2497.784851245855) & (supplier['S_SUPPKEY'] < 50)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 162) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > -240.23035086769187)].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'] == 'n') & (nation['N_NAME'].str.startswith('S')) & (nation['N_COMMENT'].str.startswith('r'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 31) | (supplier['S_SUPPKEY'] > 160) & (supplier['S_ADDRESS'] != 'i') & (supplier['S_COMMENT'] != 'r') & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 16)].merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 36) & (supplier['S_SUPPKEY'] >= 191) | (supplier['S_ADDRESS'].str.startswith('t')) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] < 158) | (supplier['S_ADDRESS'].str.startswith('7'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 125)][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 127) | (supplier['S_NATIONKEY'] >= 16) & (supplier['S_NATIONKEY'] <= 8) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == ',') & (supplier['S_SUPPKEY'] > 122)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 170)].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] > 5) | (nation['N_COMMENT'] == 'u')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 25)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 15) & (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] == 12)].merge(region[(region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('count')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'].str.startswith('n'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'E')].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] > 11) & (nation['N_NAME'].str.startswith('M'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 19) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'] != 'B')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] != ' ')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 5754.967667489474) | (customer['C_COMMENT'].str.startswith('n'))][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8802.22112640738) & (customer['C_NATIONKEY'] <= 0) & (customer['C_ADDRESS'].str.startswith('3')) | (customer['C_ACCTBAL'] > 938.9576815608327) & (customer['C_COMMENT'] != 'p') | (customer['C_ACCTBAL'] > 5632.968354730227) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 2432.5335851491755) | (customer['C_NATIONKEY'] > 4) & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'c') | (customer['C_ACCTBAL'] == 4439.543199062209) | (customer['C_ACCTBAL'] != 4303.349829361208) & (customer['C_PHONE'].str.startswith('18-'))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 2857.9086577925423) | (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_NATIONKEY'] < 15) & (nation['N_COMMENT'] != 'n') | (nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'X')].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'G') & (nation['N_COMMENT'] != ' ')].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'd')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'B') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'g') & (customer['C_CUSTKEY'] <= 42)][['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'O') | (customer['C_ADDRESS'] != '8') | (customer['C_ADDRESS'] == 'v') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'p') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_COMMENT'] != 'u')].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'q') & (customer['C_CUSTKEY'] > 63) & (customer['C_ACCTBAL'] != 5121.995304832608)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'e') & (customer['C_COMMENT'] != 'n') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 98) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '1')][['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'p') | (customer['C_NATIONKEY'] <= 16) | (customer['C_COMMENT'] == 'w') | (customer['C_ACCTBAL'] > -401.82274164152204) & (customer['C_COMMENT'] != 'q') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'v') & (customer['C_PHONE'].str.startswith('22-'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'x') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] != 'S') & (customer['C_ADDRESS'].str.startswith('L')) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('w')) | (customer['C_NATIONKEY'] == 8) & (customer['C_ADDRESS'] == 'm') | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_COMMENT'] == 'f')][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 98) | (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != ' ') | (customer['C_ADDRESS'] != 'T') | (customer['C_COMMENT'] == 'l') | (customer['C_PHONE'] == '22-')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 3) & (customer['C_PHONE'] != '27-') & (customer['C_ADDRESS'].str.startswith('l')) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] != 17)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 2) | (customer['C_ADDRESS'] == 'M') | (customer['C_PHONE'].str.startswith('22-')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] < 37) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 6) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'] != 'B') & (customer['C_ACCTBAL'] > 3490.9161488544114) & (customer['C_ACCTBAL'] != 7330.647993682349) & (customer['C_NATIONKEY'] == 12) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'] != 'c')].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'] != 'i') | (nation['N_NAME'] != 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 8)].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 'v') & (nation['N_NATIONKEY'] >= 9)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 17) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '22-') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] != 0) & (nation['N_NATIONKEY'] <= 9)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '2') & (customer['C_ACCTBAL'] != 3983.1111037233723) & (customer['C_CUSTKEY'] <= 48) | (customer['C_PHONE'] == '13-')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') & (customer['C_PHONE'] == '1') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 7804.704134432875) & (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_NATIONKEY'] <= 18)].merge(nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_NAME'] == 'K')].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'] != 'u') | (customer['C_COMMENT'] == 'a') & (customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'] == 'f') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] == 'u') | (customer['C_COMMENT'] != 'u')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] > 51) & (customer['C_NATIONKEY'] == 19) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_NATIONKEY'] != 10) & (customer['C_NATIONKEY'] > 22) | (customer['C_ACCTBAL'] < 9360.534812392558) & (customer['C_PHONE'] == '2') & (customer['C_ACCTBAL'] <= 1716.4856632214346) | (customer['C_CUSTKEY'] >= 67) & (customer['C_NAME'] != 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] >= 14) & (customer['C_ACCTBAL'] < 1708.4513703464745) & (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ADDRESS'] == 'q')].merge(nation.merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] == 8) | (customer['C_NATIONKEY'] < 1) & (customer['C_CUSTKEY'] == 24)][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING'])) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] > 20) & (customer['C_COMMENT'].str.startswith('i'))][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] > 22) | (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2)].merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 4)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'].str.startswith('I'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'k') | (orders['CLERK'] == 'C')].merge(customer[(customer['C_CUSTKEY'] <= 3) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] == '22-') | (customer['C_PHONE'] != '2')][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] != 16802) | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] > 207875.1105845741) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] >= 403) | (orders['O_CUSTKEY'] >= 6606) | (orders['TOTALPRICE'] == 200423.4846274498)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'CLERK']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] > 759) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'egu') & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_ORDERKEY'] == 790) & (orders['O_COMMENT'] != 'a')][['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] == 347844.83983359305) & (orders['TOTALPRICE'] >= 25910.780823581) | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] > 207) & (orders['SHIPPRIORITY'] != 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] > 241218.41129516702) & (orders['O_ORDERKEY'] >= 711) & (orders['O_CUSTKEY'] <= 119253)].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] >= 83) | (customer['C_ADDRESS'] == '9') | (customer['C_NATIONKEY'] <= 18)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[['SIZE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'MFGR']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 9602)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 4) | (partsupp['AVAILQTY'] < 4565)].merge(supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_SUPPKEY'] >= 69) & (supplier['S_SUPPKEY'] >= 115)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 44) | (partsupp['P_COMMENT'] == 'f') | (partsupp['AVAILQTY'] >= 2058) & (partsupp['SUPPLYCOST'] < 427.16637866131964) | (partsupp['P_COMMENT'] == 'i')].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1365) & (partsupp['PS_SUPPKEY'] <= 3725) & (partsupp['AVAILQTY'] == 2378) | (partsupp['P_COMMENT'] != ';') | (partsupp['PS_PARTKEY'] >= 13)].merge(part[(part['PT_COMMENT'].str.startswith('l')) & (part['PT_COMMENT'].str.startswith(' ')) | (part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'l')][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['TYPE'].str.startswith('L')) | (part['P_PARTKEY'] <= 178) | (part['P_PARTKEY'] >= 187) | (part['TYPE'] != 'L') & (part['MFGR'] == 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) | (part['SIZE'] <= 14)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'the')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'v')].merge(part[(part['TYPE'] != 'M') | (part['PT_COMMENT'] != 's')][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('b'))].merge(part[(part['TYPE'].str.startswith('SMA')) & (part['TYPE'] == 'M')][['TYPE', 'SIZE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] > 45)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] > 12) & (supplier['S_SUPPKEY'] > 67) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] > 8)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.06896799472627706) | (lineitem['QUANTITY'] > 7) & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['SHIPMODE'] == 'MAIL')][['EXTENDEDPRICE', 'LINENUMBER', 'L_ORDERKEY', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT', 'TAX']]

lineitem[(lineitem['EXTENDEDPRICE'] != 87054.56237256379) | (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['QUANTITY'] != 17) | (lineitem['TAX'] == 0.07124478272692286) | (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'TRUCK'])) | (lineitem['L_ORDERKEY'] >= 124) & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['TAX'] < 0.07307657712639326) | (lineitem['LINESTATUS'] != 'F')].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK', 'O_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 53664.564773490834) & (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 816.760370151375) | (partsupp['SUPPLYCOST'] > 190.39374861349032) | (partsupp['P_COMMENT'] != 'ly ') | (partsupp['PS_SUPPKEY'] < 1192) & (partsupp['AVAILQTY'] != 4870)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] == 3610.6307892081227) & (lineitem['QUANTITY'] < 5) & (lineitem['QUANTITY'] == 37) | (lineitem['SHIPMODE'].isin(['SHIP'])) & (lineitem['L_SUPPKEY'] != 5922)][['L_PARTKEY', 'DISCOUNT', 'SHIPMODE', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['P_COMMENT'] != 'e') & (partsupp['SUPPLYCOST'] != 727.3427537369962) & (partsupp['PS_SUPPKEY'] > 6396)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 30636.125631578776) | (lineitem['L_COMMENT'] == 'e') | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_SUPPKEY'] != 3906)][['COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['L_SUPPKEY'] != 5322) | (lineitem['L_COMMENT'] == 'o') | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['EXTENDEDPRICE'] >= 72007.31360350203) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['SHIPMODE'] == 'FOB')][['SHIPMODE', 'L_SUPPKEY', 'QUANTITY', 'TAX', 'DISCOUNT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'RETURNFLAG']]

lineitem[(lineitem['L_ORDERKEY'] <= 130) | (lineitem['L_PARTKEY'] >= 91271) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['QUANTITY'] >= 7) | (lineitem['TAX'] >= 0.06404527069717877) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['SHIPMODE'] != 'SHIP')][['COMMITDATE', 'L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'TAX', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE']]

lineitem[(lineitem['L_PARTKEY'] == 47054)].merge(orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['CLERK'] == 'C')][['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 81402)][['QUANTITY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 1613) & (partsupp['PS_SUPPKEY'] != 2657) & (partsupp['SUPPLYCOST'] < 815.365232948539)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 27)].merge(partsupp.merge(part[['RETAILPRICE', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 2)].merge(orders[(orders['CLERK'] != 'C')][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['EXTENDEDPRICE'] >= 14877.888993322891) & (lineitem['L_SUPPKEY'] >= 774) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['L_PARTKEY'] > 130489) & (lineitem['L_COMMENT'] == ' ca') & (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 877.9946502633993)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_PARTKEY'] > 114068) & (lineitem['DISCOUNT'] < 0.02586300007759438) & (lineitem['L_COMMENT'] != 'q') | (lineitem['QUANTITY'] == 2)].merge(partsupp.merge(part[(part['RETAILPRICE'] != 915.6743368105145) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) | (part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] != 34)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['L_ORDERKEY'] < 123) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['LINENUMBER'] <= 5) & (lineitem['L_ORDERKEY'] <= 30)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['QUANTITY'] <= 14) & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_PARTKEY'] >= 182621) | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_COMMENT'] != 'o')].merge(orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_ORDERKEY'] != 294)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['DISCOUNT'] >= 0.08886781833712731) & (lineitem['EXTENDEDPRICE'] > 44988.54885472382)][['COMMITDATE', 'SHIPMODE', 'QUANTITY', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_COMMENT'].str.startswith('b')) & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_SUPPKEY'] <= 126) & (lineitem['LINESTATUS'] == 'O') | (lineitem['L_ORDERKEY'] != 193) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'MAIL') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['EXTENDEDPRICE'] < 56756.421311900274) | (lineitem['LINESTATUS'] == 'F')].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['O']))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPMODE', 'RECEIPTDATE', 'L_ORDERKEY', 'QUANTITY', 'SHIPDATE', 'DISCOUNT']].merge(orders[['CLERK', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'TAX', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG']].merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'RECEIPTDATE']].merge(orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE']].merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] == 322525.43895917694) | (orders['SHIPPRIORITY'] <= 0)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'LINENUMBER']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED'])) & (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'RETURNFLAG', 'LINENUMBER', 'L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY']].merge(partsupp.merge(part[['MFGR', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'] == 'P') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'] == 'z')].merge(customer[(customer['C_NATIONKEY'] != 9) | (customer['C_ACCTBAL'] <= 3443.053891490329) & (customer['C_NATIONKEY'] >= 13) | (customer['C_PHONE'] != '25-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'] != 'c') | (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'v')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] != 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] > 4) & (nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'] != 'K')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] == ' ') | (nation['N_COMMENT'] == ' ') & (nation['N_NAME'] != 'M')].merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] > 4) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] != 11)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'G') | (nation['N_NAME'] == 'B') & (nation['N_NAME'] != 'F') | (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'G') | (nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] < 1)].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'] == 'R') | (nation['N_NAME'].str.startswith('M'))][['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'] == 'E') | (nation['N_NAME'] != 'P') & (nation['N_COMMENT'] == 'a')][['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 15) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 5) | (nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] != 'o') | (nation['N_NAME'] == 'R')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_NATIONKEY'] < 0) & (nation['N_NATIONKEY'] == 9) & (nation['N_COMMENT'].str.startswith('p'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 1) & (nation['N_NATIONKEY'] == 6) | (nation['N_NAME'] != 'K') | (nation['N_NAME'] == 'P')][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 7)].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'e') & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] > 2) & (nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2)].merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'AME') & (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NAME'] == 'E') & (nation['N_NAME'] != 'S')].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] == 5) & (nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'o')].merge(region[(region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] == 7)].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] < 7048.1489436806805) & (customer['C_ACCTBAL'] > 9235.862574534154)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 3512.4157314548947) & (customer['C_ADDRESS'] == 'h') | (customer['C_CUSTKEY'] != 36) | (customer['C_COMMENT'].str.startswith('a')) | (customer['C_CUSTKEY'] >= 13) | (customer['C_CUSTKEY'] != 9)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] == 21) | (customer['C_CUSTKEY'] >= 2) | (customer['C_CUSTKEY'] <= 91) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] <= 18) & (nation['N_COMMENT'] == 'v') | (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE'])) | (customer['C_CUSTKEY'] == 79) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '27-') | (customer['C_COMMENT'] == 'd') & (customer['C_PHONE'] != '25-')][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 341927.97023654776) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_ORDERKEY'] != 156) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['TOTALPRICE'] >= 77843.98903582149) & (orders['O_COMMENT'] != 'j')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C')][['O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] == 676) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['TOTALPRICE'] == 241721.32116057127) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'f') & (customer['C_COMMENT'] != 'd') & (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'].str.startswith(','))].merge(customer[(customer['C_COMMENT'] != ' ') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] > 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] <= 102569.21079533585)][['ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] <= 182921.6181239141) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] <= 269) & (orders['O_CUSTKEY'] <= 147209)].merge(customer[(customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] < 1164.435130563219) & (customer['C_COMMENT'].str.startswith('o')) & (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] == 605)].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'f')].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ',') | (orders['O_CUSTKEY'] >= 108388) | (orders['O_CUSTKEY'] > 147777) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'].str.startswith('c'))].merge(customer[['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 3894) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_ORDERKEY'] >= 154) | (orders['TOTALPRICE'] != 202804.62570594138)][['O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] >= 15) & (customer['C_COMMENT'] == 'p')][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 120914) & (orders['O_ORDERKEY'] == 403) & (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'].str.startswith('egu')) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] >= 390) & (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '2-HIGH')][['ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS']).agg('count')

orders[(orders['O_CUSTKEY'] == 139862)].merge(customer[(customer['C_COMMENT'] == 't') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_PHONE'] == '27-') | (customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 67005) & (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] <= 122204.60975755511) | (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] >= 69028) | (orders['O_COMMENT'].str.startswith('-')) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] >= 202)].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] < 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 301) | (orders['O_COMMENT'].str.startswith('s')) | (orders['O_CUSTKEY'] < 41080) | (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] != 329256.7503624635) & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERSTATUS'] != 'P')][['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERDATE', 'O_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 'z') | (orders['O_COMMENT'] != 'g')].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] != '1992-01-13')][['ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] > 127782) | (orders['O_CUSTKEY'] == 113385) & (orders['O_CUSTKEY'] == 146971) | (orders['SHIPPRIORITY'] != 0) | (orders['O_COMMENT'] == 'b')][['TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 106055.72850304701) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM']))][['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT']].groupby(by=['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] > 122228.93594238903) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] >= 65277.99434547657) | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) & (orders['ORDERSTATUS'] == 'P')][['O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['C_ACCTBAL'] != 6753.043269235344)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 196114.09586277287) & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] < 158) | (orders['O_CUSTKEY'] <= 106613) | (orders['ORDERSTATUS'] != 'F') | (orders['O_ORDERKEY'] < 567) & (orders['O_COMMENT'].str.startswith('h'))][['TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 0) | (customer['C_CUSTKEY'] <= 27) | (customer['C_PHONE'].str.startswith('22-')) | (customer['C_NATIONKEY'] == 12) & (customer['C_ADDRESS'].str.startswith(',')) & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#41') & (part['CONTAINER'] != 'LG') | (part['PT_COMMENT'] != 'b') | (part['RETAILPRICE'] > 1039.7525271555505) | (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] == 921.1391572483806)][['RETAILPRICE', 'P_NAME', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_NAME', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#41', 'Brand#12', 'Brand#31', 'Brand#34', 'Brand#52', 'Brand#25', 'Brand#45', 'Brand#24', 'Brand#44', 'Brand#15'])) & (part['RETAILPRICE'] >= 920.1426367225001) | (part['P_PARTKEY'] < 170) & (part['TYPE'].str.startswith('L')) & (part['P_PARTKEY'] > 107) & (part['RETAILPRICE'] <= 991.527814994743) & (part['PT_COMMENT'] == 'b') | (part['P_NAME'].str.startswith('t'))][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] == 30) | (part['TYPE'] != 'S') | (part['P_PARTKEY'] < 69) | (part['P_PARTKEY'] > 129) & (part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#1') & (part['BRAND'] == 'Brand#32')][['MFGR', 'CONTAINER', 'PT_COMMENT']].groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['TYPE'] == 'L') & (part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] > 1086.6931591913115) | (part['TYPE'].str.startswith('SMA')) | (part['CONTAINER'].str.startswith('WRAP'))][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']]

part[(part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] < 39) | (part['PT_COMMENT'] != '!')][['MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'TYPE', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] != 'w') | (part['TYPE'].str.startswith('STA')) & (part['P_NAME'] != 's') & (part['RETAILPRICE'] < 965.4967155369217) | (part['TYPE'] != 'E') | (part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'] == 'f') & (part['CONTAINER'] == 'JUMBO')][['SIZE', 'CONTAINER', 'MFGR']].groupby(by=['CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#5') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] <= 168)][['MFGR', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']].groupby(by=['SIZE', 'P_NAME', 'CONTAINER', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != ' ') | (part['P_NAME'] != 'g') & (part['BRAND'] == 'Brand#24') & (part['P_PARTKEY'] != 153) | (part['CONTAINER'] == 'JUMBO') & (part['P_NAME'].str.startswith('d')) | (part['RETAILPRICE'] == 910.3407694287658) & (part['P_NAME'] != 't') & (part['CONTAINER'] == 'LG')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'BRAND', 'MFGR']]

part[(part['PT_COMMENT'] == 'e') & (part['SIZE'] <= 18) & (part['RETAILPRICE'] != 927.5686645729434) | (part['PT_COMMENT'] == '!') | (part['CONTAINER'] == 'JUMBO') & (part['MFGR'] != 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['P_NAME'].str.startswith('lem'))][['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 'f') | (part['P_NAME'].str.startswith('c')) | (part['RETAILPRICE'] < 932.4611529995763) & (part['P_NAME'] == 'w') | (part['RETAILPRICE'] == 922.3887965372436) | (part['RETAILPRICE'] > 1040.1028977738576) & (part['P_PARTKEY'] > 41) & (part['CONTAINER'].str.startswith('WRAP'))][['CONTAINER', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['CONTAINER', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] == 1020.8047417619249) | (part['P_NAME'] == 's') & (part['BRAND'] != 'Brand#51') | (part['RETAILPRICE'] < 903.546669009484)][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'PT_COMMENT', 'BRAND']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'SIZE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] > 1006.1998731524063) & (part['SIZE'] != 48)][['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['RETAILPRICE', 'BRAND', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['SIZE'] == 31) & (part['PT_COMMENT'] == 'x') & (part['TYPE'] != 'L') & (part['SIZE'] == 7)][['TYPE', 'P_NAME', 'SIZE', 'MFGR', 'RETAILPRICE']].groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['SIZE'] >= 18) | (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] == 'y') | (part['TYPE'] != 'SMA') & (part['P_PARTKEY'] <= 69) | (part['BRAND'].isin(['Brand#23', 'Brand#43', 'Brand#35', 'Brand#21', 'Brand#14', 'Brand#44', 'Brand#13', 'Brand#54', 'Brand#51', 'Brand#42'])) & (part['P_NAME'] != 'v') | (part['TYPE'] == 'SMA') | (part['SIZE'] > 36)][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']].groupby(by=['RETAILPRICE']).agg('count')

part[(part['SIZE'] >= 22) | (part['PT_COMMENT'].str.startswith('o'))][['TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']].groupby(by=['MFGR', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'P') & (part['P_PARTKEY'] <= 87) & (part['PT_COMMENT'].str.startswith('l')) | (part['MFGR'] == 'Manufacturer#2')][['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER']].groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1'])) | (part['TYPE'] == 'SMA') | (part['SIZE'] != 11) | (part['CONTAINER'].str.startswith('SM')) | (part['P_PARTKEY'] != 19) & (part['CONTAINER'] == 'SM') & (part['SIZE'] != 41) & (part['MFGR'] == 'Manufacturer#3')][['BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']]

part[(part['TYPE'].str.startswith('STA'))][['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER']].groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'MED') & (part['SIZE'] != 29) | (part['P_PARTKEY'] > 168) | (part['SIZE'] == 40) | (part['RETAILPRICE'] != 1061.0718819877623) & (part['BRAND'].isin(['Brand#33', 'Brand#42'])) | (part['SIZE'] <= 34) & (part['PT_COMMENT'] != 'n')][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('count')

partsupp.merge(part[(part['PT_COMMENT'] == 'c') | (part['P_PARTKEY'] == 70) & (part['RETAILPRICE'] < 917.7395032510819) & (part['P_PARTKEY'] > 174) | (part['RETAILPRICE'] > 950.3200586391667) | (part['TYPE'] != 'STA') | (part['SIZE'] == 14) | (part['TYPE'] == 'M') | (part['SIZE'] != 23)][['TYPE', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] != 'a')][['BRAND', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] <= 15)].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 4803.507246424278) | (supplier['S_PHONE'] != '32-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == '!') & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_SUPPKEY'] > 10) | (supplier['S_SUPPKEY'] <= 144) | (supplier['S_SUPPKEY'] <= 21) & (supplier['S_NATIONKEY'] >= 0) & (supplier['S_ACCTBAL'] != 3639.2210733830343)][['S_ADDRESS', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 46) & (supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_NATIONKEY'] != 16)].merge(nation.merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 144) & (supplier['S_PHONE'] != '1')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 6071) | (partsupp['PS_SUPPKEY'] != 1424) & (partsupp['PS_PARTKEY'] >= 10)].merge(supplier[(supplier['S_PHONE'] == '2') & (supplier['S_ADDRESS'] != 'i') & (supplier['S_SUPPKEY'] <= 193) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'D')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 4694) & (partsupp['P_COMMENT'] == 'y')].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 170) & (supplier['S_NATIONKEY'] == 18)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2399) & (partsupp['AVAILQTY'] < 3570) | (partsupp['SUPPLYCOST'] < 427.5610139763833)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'O') & (supplier['S_ADDRESS'] != 'a') & (supplier['S_NATIONKEY'] == 9) & (supplier['S_NATIONKEY'] > 18)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 8586)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 6329)].merge(supplier[(supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 3825) | (partsupp['PS_PARTKEY'] >= 37) & (partsupp['P_COMMENT'] == 'y')].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 32) | (partsupp['PS_SUPPKEY'] != 1256)].merge(supplier[(supplier['S_NATIONKEY'] != 3) | (supplier['S_ACCTBAL'] <= -571.0360152384981) | (supplier['S_SUPPKEY'] != 83) | (supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] != 90) & (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 43) | (partsupp['SUPPLYCOST'] <= 559.0276951565537) & (partsupp['SUPPLYCOST'] == 538.921868704684)].merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] <= 49) | (partsupp['SUPPLYCOST'] < 548.5827864699554)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 45) & (partsupp['SUPPLYCOST'] != 373.9277817817084)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2482) | (partsupp['PS_PARTKEY'] < 35) & (partsupp['PS_SUPPKEY'] > 6920)][['P_COMMENT', 'PS_PARTKEY']].merge(part[['BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 3282) & (partsupp['PS_PARTKEY'] >= 13) | (partsupp['P_COMMENT'] != 'c') & (partsupp['P_COMMENT'].str.startswith('h')) & (partsupp['SUPPLYCOST'] <= 188.28080051374886)].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5'])) & (part['SIZE'] == 14) & (part['PT_COMMENT'].str.startswith('t'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 1434)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'MED') & (part['CONTAINER'] != 'LG') | (part['BRAND'] != 'Brand#25') | (part['TYPE'].str.startswith('M')) & (part['CONTAINER'] != 'SM') | (part['TYPE'] != 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 4648) | (partsupp['PS_SUPPKEY'] <= 4872) & (partsupp['PS_SUPPKEY'] < 3392)][['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 4198.233991464252) & (supplier['S_PHONE'] != '2')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1578) | (partsupp['P_COMMENT'] != 'c') | (partsupp['PS_SUPPKEY'] < 4003) | (partsupp['SUPPLYCOST'] != 737.3687976090778)].merge(part[(part['P_PARTKEY'] < 125) | (part['P_PARTKEY'] < 157) & (part['P_PARTKEY'] <= 86) & (part['CONTAINER'] == 'MED') & (part['CONTAINER'] != 'LG') & (part['PT_COMMENT'] != 'm')][['P_PARTKEY', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3670) & (partsupp['PS_SUPPKEY'] == 908)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'STA') & (part['SIZE'] == 12)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5946) | (partsupp['AVAILQTY'] == 3152) & (partsupp['SUPPLYCOST'] == 145.3564087868491) & (partsupp['SUPPLYCOST'] == 118.34580057713984) | (partsupp['SUPPLYCOST'] > 241.9899731181987)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['AVAILQTY'] == 9280)].merge(part[(part['P_PARTKEY'] >= 159) & (part['SIZE'] != 33) | (part['RETAILPRICE'] <= 1012.5495034726337) & (part['SIZE'] != 6)][['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'r') | (partsupp['P_COMMENT'] == 'n') & (partsupp['P_COMMENT'] == 'i')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'h')].merge(supplier[(supplier['S_SUPPKEY'] == 40) | (supplier['S_ACCTBAL'] != 1881.515458545395)].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['PS_PARTKEY'] >= 41) | (partsupp['PS_PARTKEY'] > 13) & (partsupp['PS_SUPPKEY'] <= 7058) | (partsupp['PS_PARTKEY'] != 18)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 2703.3178845051316) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'] == '4') | (supplier['S_ACCTBAL'] > 638.0934222876785) & (supplier['S_NATIONKEY'] >= 0)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 204.55884292736792) | (partsupp['PS_SUPPKEY'] == 6970) | (partsupp['AVAILQTY'] == 8767) & (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['AVAILQTY'] < 5629)].merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 652.402847656396) & (partsupp['PS_PARTKEY'] >= 2) & (partsupp['SUPPLYCOST'] > 618.0230076360195) & (partsupp['PS_SUPPKEY'] == 6905) | (partsupp['P_COMMENT'].str.startswith('h'))][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'P') | (supplier['S_ADDRESS'] != 'I')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 182.06301934622417) & (partsupp['SUPPLYCOST'] == 60.150502024923654) & (partsupp['PS_SUPPKEY'] < 6526)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] == 6401.303010918367) & (supplier['S_COMMENT'] != 'the')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 242.80298364333026)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#21', 'Brand#22', 'Brand#35', 'Brand#54', 'Brand#44', 'Brand#53', 'Brand#52', 'Brand#43', 'Brand#51'])) | (part['SIZE'] >= 20) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 64.87735755419078) & (partsupp['AVAILQTY'] >= 458) & (partsupp['AVAILQTY'] == 3433)].merge(part[(part['P_NAME'] == 'i') | (part['PT_COMMENT'].str.startswith('kag')) & (part['P_PARTKEY'] != 92) | (part['P_PARTKEY'] == 130)][['BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 850.1996972902662) & (partsupp['AVAILQTY'] < 5131) & (partsupp['SUPPLYCOST'] == 225.87920030420764) & (partsupp['P_COMMENT'] == 'e')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 289.36008780863415) | (partsupp['PS_SUPPKEY'] != 1259)].merge(supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_NATIONKEY'] != 13) & (supplier['S_PHONE'] != '2') | (supplier['S_COMMENT'] == 'u')][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

partsupp[['PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'] != 'E') | (part['P_PARTKEY'] > 77) | (part['BRAND'] == 'Brand#31') | (part['BRAND'] == 'Brand#52') & (part['RETAILPRICE'] == 1018.8870489359965)][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] == ' ') | (part['SIZE'] < 46) & (part['P_NAME'] == 'w') & (part['SIZE'] == 17) | (part['RETAILPRICE'] > 992.8544446814774) & (part['PT_COMMENT'] == 'l')][['BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'f') & (part['P_PARTKEY'] == 89) & (part['RETAILPRICE'] > 991.7487774993305) & (part['SIZE'] <= 38) & (part['RETAILPRICE'] != 1027.4611366598979) | (part['SIZE'] < 11)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] > 5) & (part['CONTAINER'].str.startswith('WRAP')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3'])) | (part['P_PARTKEY'] > 126) | (part['TYPE'] != 'STA') | (part['P_PARTKEY'] < 157) & (part['SIZE'] == 27) & (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['SIZE'] == 29) | (part['SIZE'] < 29)][['TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 13) | (supplier['S_COMMENT'].str.startswith('f'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']).agg('count')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] == 8077.7589956646125) | (supplier['S_COMMENT'] == 'r') & (supplier['S_NATIONKEY'] > 4) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-'))][['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] != 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_NAME'] == 'I') | (nation['N_NAME'] == 'M') & (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 21) | (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'].str.startswith('v'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] >= 5) & (nation['N_NATIONKEY'] <= 5)].merge(region[(region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_COMMENT'] == 't') | (nation['N_NATIONKEY'] <= 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_ACCTBAL'] < 1612.818226468418)].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] < 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 5265.586825068909) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] <= 19)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 5588.260327201085) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '17-')].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 6764.40965109155)][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6663.893335978003) & (supplier['S_NATIONKEY'] != 6) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_ACCTBAL'] <= -762.7823605180781) | (supplier['S_NATIONKEY'] > 19) & (supplier['S_NATIONKEY'] >= 23)].merge(nation[(nation['N_COMMENT'] != 'p')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 3645.399360390611) & (supplier['S_ACCTBAL'] < 5935.477646361407) | (supplier['S_COMMENT'] != ' ') & (supplier['S_COMMENT'] != 'y')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'Y') & (supplier['S_COMMENT'] != 'b')].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'the') & (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] > 164)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'h') | (supplier['S_ADDRESS'].str.startswith('4')) & (supplier['S_ADDRESS'] != 'v') | (supplier['S_ADDRESS'] != 'T')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

supplier[(supplier['S_COMMENT'] == ' ')].merge(nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] >= 19) & (nation['N_COMMENT'] != 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'g') & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_PHONE'].str.startswith('1'))][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_ADDRESS'] != 'S') & (supplier['S_SUPPKEY'] > 31) | (supplier['S_SUPPKEY'] == 7)].merge(nation[(nation['N_NAME'] != 'F')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('.'))][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NATIONKEY'] != 21) & (supplier['S_COMMENT'] == 'q') | (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 7)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 42) | (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_NATIONKEY'] >= 23)].merge(nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'l') & (supplier['S_ADDRESS'].str.startswith('7'))].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_COMMENT'] != 'r') | (nation['N_COMMENT'] == 'c')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'] != 'V') & (nation['N_NAME'] != 'S') | (nation['N_COMMENT'] == ' ')].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 16) | (supplier['S_COMMENT'] == 'x')].merge(nation[(nation['N_NATIONKEY'] == 16) | (nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] < 14) & (nation['N_NAME'] == 'S')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 0) | (supplier['S_ADDRESS'] != 'j')].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] >= 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 0) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] <= 10) & (nation['N_NAME'] != 'K') | (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 8) | (supplier['S_COMMENT'] == 's') & (supplier['S_SUPPKEY'] <= 19)].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] <= 11)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] <= 9409.126659476908) | (supplier['S_ACCTBAL'] == 102.45035903131475) & (supplier['S_NATIONKEY'] >= 7)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '17-') | (supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] > 2281.5759024372255) & (supplier['S_ACCTBAL'] >= 6682.965661375786)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ACCTBAL'] >= 4630.777076895099) | (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] <= 13) & (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'] == 'm')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_SUPPKEY'] >= 78) | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ACCTBAL'] > 8495.568406321776) | (supplier['S_ADDRESS'] != 'v')].merge(nation[(nation['N_NATIONKEY'] >= 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'] == '28-') & (supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'] == '1') & (supplier['S_ACCTBAL'] >= -372.14100338875687) | (supplier['S_SUPPKEY'] == 33) & (supplier['S_SUPPKEY'] < 43)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 141) & (supplier['S_ACCTBAL'] < 2025.1470148553383) & (supplier['S_COMMENT'] == 'i')].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] > 12) | (nation['N_NAME'].str.startswith('P'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 186) | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NATIONKEY'] < 22) | (supplier['S_NATIONKEY'] > 8) & (supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_SUPPKEY'] < 145) & (supplier['S_SUPPKEY'] <= 61)].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] > 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 47) | (supplier['S_ACCTBAL'] >= 5453.120758392152) & (supplier['S_ACCTBAL'] < 2395.778093736534)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 67) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_ACCTBAL'] == 8584.239091820762) | (supplier['S_ACCTBAL'] > 7020.178084376393)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 71) & (supplier['S_NATIONKEY'] > 17) | (supplier['S_ACCTBAL'] < 2782.6156679055666) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_PHONE'] != '17-')].merge(nation[(nation['N_NAME'] != 'G') | (nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 81) & (supplier['S_ADDRESS'] != 'N') & (supplier['S_SUPPKEY'] <= 166) & (supplier['S_NATIONKEY'] > 14)][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 110) | (supplier['S_NATIONKEY'] < 17) & (supplier['S_SUPPKEY'] < 194) | (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 23)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] >= 1)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] == 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'P')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'u') & (nation['N_COMMENT'] == 'c')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != -62.02982268034157) | (customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] < 2484.030801027294) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] != 19) & (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 355.4142202766827) | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ACCTBAL'] == 7860.182881224764) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 89) | (customer['C_NATIONKEY'] < 1)].merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 3272.7457655236503) | (customer['C_ACCTBAL'] != 8698.785461443042) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] <= 6128.850420781369)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 5081.269800761139) | (customer['C_ACCTBAL'] > 3748.830142292187) | (customer['C_ACCTBAL'] != 5085.406884904792) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_CUSTKEY'] < 94)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 2849.046276733575) | (customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] != 2)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 4000.4863565215846) | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_NATIONKEY'] == 8) & (customer['C_ACCTBAL'] == 1217.9038585910066) | (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] == 28)].merge(nation[(nation['N_NAME'] == 'J') & (nation['N_COMMENT'] == 'v') & (nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 4661.606052317378) | (customer['C_NATIONKEY'] > 2) | (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] <= 2961.3962304574416) & (customer['C_CUSTKEY'] >= 74) & (customer['C_ADDRESS'] != 'p')].merge(nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 7034.839747226936) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('I')) | (customer['C_ADDRESS'].str.startswith('T'))].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'] != 'e') | (customer['C_ACCTBAL'] != 6515.274388371638) | (customer['C_ACCTBAL'] >= 5895.375160854668) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] >= 22)][['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_NAME'] == 'J')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('7')) | (customer['C_ADDRESS'] != 'p') & (customer['C_ACCTBAL'] != 598.8015484997404) | (customer['C_ACCTBAL'] >= 9039.49801611522) & (customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] != 7906.919197307574) & (customer['C_COMMENT'] != 'd')].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'].str.startswith('V')) | (nation['N_NATIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('r'))].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] <= 6) | (nation['N_REGIONKEY'] != 3)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'c') | (customer['C_NATIONKEY'] <= 16) & (customer['C_ADDRESS'] == 'd')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] == 'd') | (customer['C_COMMENT'] == 'o')][['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] <= 10) | (customer['C_PHONE'].str.startswith('25-'))].merge(nation.merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 't') | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] == 85)].merge(nation[(nation['N_NATIONKEY'] <= 5)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('p')) & (customer['C_PHONE'] == '18-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 65)][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'M')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] < 8672.103924094197) | (customer['C_CUSTKEY'] >= 55) | (customer['C_PHONE'] == '3')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('M'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'p')].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'l') | (customer['C_ACCTBAL'] < 14.623059756767702) | (customer['C_ACCTBAL'] >= 1848.6916409201622) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ADDRESS'].str.startswith('M'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 14) & (customer['C_ACCTBAL'] != 872.8734685346635) & (customer['C_PHONE'] == '27-') & (customer['C_COMMENT'] != 'p') & (customer['C_ADDRESS'].str.startswith('g'))][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['C_NATIONKEY'] != 17) | (customer['C_CUSTKEY'] >= 9) & (customer['C_COMMENT'] != 'g') | (customer['C_COMMENT'] != 'a') | (customer['C_NATIONKEY'] == 9) & (customer['C_NATIONKEY'] <= 1) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '1')].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] < 6) | (nation['N_NATIONKEY'] > 16)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 2) | (customer['C_ADDRESS'] != 'L')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 12) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'].str.startswith('o')) & (customer['C_ADDRESS'] != 'U') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'] == 'A')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 22) | (customer['C_CUSTKEY'] != 81) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_CUSTKEY'] > 23)].merge(nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_NATIONKEY'] < 4) & (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] <= 4) | (customer['C_PHONE'] == '2') | (customer['C_CUSTKEY'] > 62) & (customer['C_CUSTKEY'] != 20) | (customer['C_ADDRESS'] != 'q') & (customer['C_ADDRESS'] != 'S') | (customer['C_NATIONKEY'] > 14)].merge(nation[(nation['N_NATIONKEY'] <= 20)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 11) | (customer['C_NATIONKEY'] < 2) | (customer['C_NATIONKEY'] < 7) & (customer['C_ACCTBAL'] > -489.5436698516851) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_COMMENT'] != 'l') & (customer['C_NATIONKEY'] <= 22)][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 1)].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 7) | (customer['C_ADDRESS'] == 'H')][['C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '2') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] > 38) | (customer['C_COMMENT'].str.startswith('k')) & (customer['C_PHONE'] == '18-')].merge(nation.merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '2') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING'])) | (customer['C_CUSTKEY'] != 37) | (customer['C_COMMENT'] != 'u') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_COMMENT'] == 't')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_CUSTKEY'] != 45) & (customer['C_ACCTBAL'] >= 5698.135000946615) & (customer['C_COMMENT'].str.startswith('o')) | (customer['C_PHONE'] != '1') | (customer['C_CUSTKEY'] != 19) & (customer['C_ADDRESS'] != 'b') | (customer['C_ACCTBAL'] == 9422.656127507547)][['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_CUSTKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('B')) & (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_NATIONKEY'] != 15) | (customer['C_ACCTBAL'] == 3921.4920758448516) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] != 3890.8843666853872) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] > 2813.0137993984004) & (customer['C_NATIONKEY'] != 5) & (customer['C_ADDRESS'] != '8') & (customer['C_NATIONKEY'] > 2) & (customer['C_PHONE'] != '22-')].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] > 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_COMMENT'] != ' ') | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_CUSTKEY'] < 13) & (customer['C_NATIONKEY'] > 6) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_COMMENT'].str.startswith('s'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] != 'P')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] >= 22)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] != 21)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] < 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] != 5)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NATIONKEY'] == 17) | (nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'] == 'o') | (nation['N_NAME'] == 'B')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 3) & (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] != 437) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] > 98164.15430015938) & (orders['O_CUSTKEY'] < 60544) | (orders['ORDERSTATUS'] == 'P')].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 3285) | (partsupp['SUPPLYCOST'] <= 265.82238722515655) & (partsupp['PS_SUPPKEY'] < 4212) & (partsupp['SUPPLYCOST'] == 781.2822847101295)].merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 4128) & (partsupp['P_COMMENT'].str.startswith(','))].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 480.635733814853)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'E')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 550.6260665713618) & (partsupp['PS_SUPPKEY'] != 778) | (partsupp['P_COMMENT'].str.startswith('are')) & (partsupp['SUPPLYCOST'] != 528.4191815265374)].merge(part[(part['CONTAINER'] == 'MED') & (part['P_NAME'] != 'c') | (part['BRAND'] == 'Brand#24') & (part['BRAND'].isin(['Brand#33', 'Brand#45', 'Brand#25', 'Brand#22', 'Brand#31', 'Brand#41', 'Brand#54', 'Brand#44', 'Brand#42', 'Brand#35', 'Brand#34', 'Brand#51'])) & (part['TYPE'].str.startswith('STA'))][['CONTAINER', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 340.62226648380124)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 444.9013020880651) & (partsupp['SUPPLYCOST'] <= 450.66641532738595) | (partsupp['PS_PARTKEY'] <= 25) & (partsupp['AVAILQTY'] != 3518)].merge(part[(part['RETAILPRICE'] < 1047.3443462799032)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'LG') | (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] <= 992.6538465261285) & (part['TYPE'] != 'P') | (part['SIZE'] != 36) | (part['CONTAINER'].str.startswith('JUMBO'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE']).agg('count')

lineitem[(lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_ORDERKEY'] >= 163) | (lineitem['L_COMMENT'] != 'lit') & (lineitem['L_ORDERKEY'] > 45) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['L_ORDERKEY'] != 33) & (lineitem['EXTENDEDPRICE'] == 40629.57720246086)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 1281)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('count')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['QUANTITY'] != 23) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['TAX'] >= 0.057494734956375276) | (lineitem['L_SUPPKEY'] > 9807) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['LINESTATUS'].isin(['F']))].merge(orders.merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] == 0.06484915254129296) | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['LINESTATUS'] != 'F') & (lineitem['L_PARTKEY'] != 22147) & (lineitem['SHIPDATE'] <= '1992-04-27')][['EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPMODE', 'TAX', 'L_SUPPKEY', 'LINENUMBER', 'DISCOUNT', 'SHIPDATE']].groupby(by=['SHIPMODE']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.0250273913363938) & (lineitem['L_COMMENT'] == ' re')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 23714.955590922404) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['EXTENDEDPRICE'] == 54263.47757996027) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['COMMITDATE'] == '1998-10-16')].merge(partsupp[(partsupp['AVAILQTY'] >= 5265) & (partsupp['PS_SUPPKEY'] >= 5661) & (partsupp['SUPPLYCOST'] >= 679.3538038343618) & (partsupp['AVAILQTY'] != 6742)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 67106.15966122216)][['RECEIPTDATE', 'L_COMMENT', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'SHIPMODE', 'DISCOUNT']].merge(orders[['O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 75359.31742017859) & (lineitem['LINESTATUS'] != 'F') | (lineitem['QUANTITY'] <= 5)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['AVAILQTY'] >= 2029) | (partsupp['AVAILQTY'] != 1011)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 183) | (lineitem['TAX'] > 0.05161416701642658)].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['SIZE'] == 43) & (part['SIZE'] >= 35) & (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] != 'Brand#22')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] == 58238) | (lineitem['L_PARTKEY'] > 152805) & (lineitem['L_PARTKEY'] >= 114526) & (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['EXTENDEDPRICE'] >= 12673.994911123875) | (lineitem['TAX'] >= 0.0013046664285130572) & (lineitem['LINESTATUS'] != 'F')][['DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'L_SUPPKEY']].groupby(by=['SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 853) & (lineitem['L_SUPPKEY'] > 2071) & (lineitem['LINENUMBER'] == 1) & (lineitem['DISCOUNT'] != 0.09216613304759219) | (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_PARTKEY'] == 78430) | (lineitem['EXTENDEDPRICE'] < 71241.71885871342)].merge(orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 140067) & (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] < 11) & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 658) | (partsupp['SUPPLYCOST'] > 164.84525231728412) & (partsupp['P_COMMENT'] == 'u') | (partsupp['SUPPLYCOST'] == 29.440888617228754) | (partsupp['PS_PARTKEY'] > 39)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['DISCOUNT'] <= 0.006398009010027828) & (lineitem['DISCOUNT'] != 0.004430829380880674) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_ORDERKEY'] != 180) | (lineitem['QUANTITY'] <= 15) | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_ORDERKEY'] > 54)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP'])) | (lineitem['QUANTITY'] == 12) & (lineitem['LINESTATUS'] == 'O') | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['COMMITDATE'] != '1998-10-16')][['SHIPDATE', 'L_COMMENT', 'L_SUPPKEY', 'LINESTATUS', 'QUANTITY', 'SHIPINSTRUCT', 'DISCOUNT', 'RETURNFLAG']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_COMMENT'].str.startswith('b')) & (lineitem['EXTENDEDPRICE'] == 62649.2512906429) & (lineitem['DISCOUNT'] != 0.009916251489662443)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 27) & (partsupp['AVAILQTY'] == 1692) | (partsupp['SUPPLYCOST'] != 498.8336522573858)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['LINENUMBER'] > 5) & (lineitem['TAX'] <= 0.06659743544928229) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['QUANTITY'] > 8)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'RETURNFLAG', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPMODE', 'QUANTITY']].merge(orders[['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'TAX', 'QUANTITY', 'LINENUMBER', 'DISCOUNT', 'L_ORDERKEY', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3638) | (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['PS_SUPPKEY'] > 1165)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'COMMITDATE', 'LINENUMBER', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 'k') | (partsupp['PS_PARTKEY'] >= 38) | (partsupp['SUPPLYCOST'] >= 279.6261892173718) & (partsupp['SUPPLYCOST'] != 923.5179137940278)].merge(part[(part['RETAILPRICE'] != 990.979025110415) | (part['P_NAME'] == 'lin')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'LINENUMBER', 'QUANTITY', 'SHIPDATE', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] > 11) | (nation['N_NATIONKEY'] != 5) & (nation['N_COMMENT'] != 'o')].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] >= 20) | (nation['N_NATIONKEY'] != 13)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_NATIONKEY'] != 2) & (nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] != 9)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] == 12) | (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] >= 14) & (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] > 6) & (nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 13) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 23)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 'o') & (nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 16) | (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'] == 'B') | (nation['N_NAME'] == 'C')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] > 21) | (nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= 4006.594426165102) | (customer['C_CUSTKEY'] > 67)].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'c')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] > 1556.1650006311274) | (customer['C_COMMENT'] == 'g') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 19) | (customer['C_NATIONKEY'] > 0) | (customer['C_ACCTBAL'] > 2862.181274909275) & (customer['C_CUSTKEY'] == 10)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == '7')].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] != 10)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

orders.merge(customer[(customer['C_COMMENT'] != 'u')].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] != 'J')].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 79)].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 21) | (customer['C_NATIONKEY'] <= 8) | (customer['C_NATIONKEY'] > 5) & (customer['C_ACCTBAL'] != -41.14842267911865) & (customer['C_ACCTBAL'] == 9601.240220515614) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] < 17)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] <= 7) | (customer['C_COMMENT'] == 'h') & (customer['C_ADDRESS'].str.startswith('K')) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NATIONKEY'] >= 9) | (customer['C_NATIONKEY'] <= 14)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 3) & (customer['C_ADDRESS'] == ',') & (customer['C_PHONE'] != '25-') & (customer['C_CUSTKEY'] != 75) & (customer['C_ADDRESS'].str.startswith('0')) & (customer['C_ADDRESS'] != '6') & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 728.6005657550727)][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) & (customer['C_PHONE'] != '18-') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY'])) & (customer['C_PHONE'] != '25-') & (customer['C_COMMENT'].str.startswith('p')) & (customer['C_ADDRESS'].str.startswith('i'))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('ly '))].merge(customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21')][['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['O_CUSTKEY'] >= 78014) | (orders['O_CUSTKEY'] >= 19212) | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] >= 647) | (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] >= 71)].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['TOTALPRICE'] != 275624.63691473764) & (orders['O_ORDERKEY'] == 250) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] < 103321)][['TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['O_COMMENT'] != 'z') | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'] == 'u') & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NATIONKEY'] > 20)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_COMMENT'] == ',') | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] >= 87793.96573342344)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] <= 375) & (orders['O_CUSTKEY'] != 97111) & (orders['O_ORDERKEY'] < 614) | (orders['O_COMMENT'] == 'l')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['ORDERDATE'] != '1992-01-13') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'].str.startswith('y'))][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('count')

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] <= 104665) | (orders['TOTALPRICE'] < 224790.7355608492) & (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] <= 198) & (orders['O_ORDERKEY'] > 205) & (orders['O_CUSTKEY'] > 118095) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['CLERK'] != 'C')].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] >= 155684.39306139873) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer.merge(nation[(nation['N_NATIONKEY'] < 5) & (nation['N_NATIONKEY'] > 4) | (nation['N_NATIONKEY'] < 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] == 99049) & (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] == 483) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] < 118465.12689076153) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] <= 216) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) & (orders['O_CUSTKEY'] <= 50526) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] != 99) & (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] <= 97) & (orders['TOTALPRICE'] > 76027.90339978623) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] >= 213171.02841338274)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != ',') | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['O_CUSTKEY'] != 40086) & (orders['TOTALPRICE'] < 346843.32052922004) | (orders['O_CUSTKEY'] >= 49790) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'] != 'u')][['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('count')

orders[(orders['O_COMMENT'] == 'egu') | (orders['O_CUSTKEY'] >= 93961) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '2-HIGH'])) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['TOTALPRICE'] <= 62771.56677482458)].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_PHONE'] == '13-') | (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith(' re')) | (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] == 740) & (orders['TOTALPRICE'] < 105531.77588265613) | (orders['O_COMMENT'] != 'k') & (orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] != 'l')].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != ' ') | (customer['C_COMMENT'] != 'e') | (customer['C_ADDRESS'].str.startswith('d')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING']))][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 58326) | (orders['O_CUSTKEY'] <= 70141) & (orders['TOTALPRICE'] <= 171570.7750463126) & (orders['CLERK'].str.startswith('C'))].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 72129) | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED']))].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['O_ORDERKEY'] == 722) | (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] == 554) | (orders['TOTALPRICE'] < 352423.3071198393)][['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 729) | (orders['O_CUSTKEY'] <= 103096) & (orders['O_CUSTKEY'] == 123144) & (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 623) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERSTATUS'] == 'F')].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 39589.80792610127) & (orders['O_COMMENT'] != 's') | (orders['O_ORDERKEY'] == 249) & (orders['TOTALPRICE'] <= 216616.16238737365) & (orders['O_CUSTKEY'] <= 5042)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'a')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] >= 22) & (customer['C_CUSTKEY'] <= 40) | (customer['C_PHONE'].str.startswith('27-'))][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] != 8400.89202466606) | (customer['C_NATIONKEY'] == 2)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#22') | (part['RETAILPRICE'] == 1021.0677809857791) | (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'] != 'Brand#11') | (part['TYPE'] == 'L') | (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] <= 1005.6023694990807) & (part['PT_COMMENT'] != 'd') | (part['CONTAINER'] == 'JUMBO')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']]

part[(part['CONTAINER'] == 'LG') | (part['TYPE'] != 'S') & (part['RETAILPRICE'] == 938.9116016107007) | (part['P_PARTKEY'] < 170) | (part['RETAILPRICE'] < 1011.3895624132483) | (part['SIZE'] < 17) | (part['P_PARTKEY'] <= 158) | (part['P_PARTKEY'] > 155) & (part['P_PARTKEY'] != 43)][['CONTAINER', 'P_PARTKEY', 'SIZE']].groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['P_PARTKEY'] >= 107) | (part['TYPE'] == 'M') & (part['P_PARTKEY'] <= 89) & (part['MFGR'] == 'Manufacturer#1')][['TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']].groupby(by=['BRAND', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') | (part['P_PARTKEY'] >= 111) & (part['P_PARTKEY'] <= 4) & (part['P_NAME'] != 'p') | (part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'].str.startswith('l'))][['BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['BRAND', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'a') | (part['MFGR'] == 'Manufacturer#2') & (part['PT_COMMENT'] == 'c') | (part['MFGR'] == 'Manufacturer#3') | (part['MFGR'] != 'Manufacturer#5')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('o')) & (part['TYPE'] != 'E') & (part['PT_COMMENT'] == 'u') | (part['P_PARTKEY'] == 41) | (part['RETAILPRICE'] <= 902.6486787308886) | (part['BRAND'] != 'Brand#53') | (part['RETAILPRICE'] == 1068.3369714569114) | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] >= 1036.1003463279753)][['RETAILPRICE', 'MFGR', 'CONTAINER']].groupby(by=['CONTAINER', 'MFGR', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'r') | (part['TYPE'] == 'E') | (part['BRAND'].isin(['Brand#32', 'Brand#42', 'Brand#55', 'Brand#53', 'Brand#54', 'Brand#14', 'Brand#15', 'Brand#22', 'Brand#21', 'Brand#11', 'Brand#12', 'Brand#13', 'Brand#23', 'Brand#25', 'Brand#45', 'Brand#35', 'Brand#44', 'Brand#43', 'Brand#34', 'Brand#33', 'Brand#31', 'Brand#41'])) & (part['PT_COMMENT'] != 't') | (part['P_PARTKEY'] != 27) | (part['SIZE'] != 16) | (part['P_PARTKEY'] < 86) & (part['TYPE'] == 'STA') | (part['P_PARTKEY'] >= 39)][['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['P_PARTKEY'] > 172) | (part['P_NAME'] == 'f') | (part['SIZE'] == 7)][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['TYPE', 'MFGR', 'CONTAINER']).agg('count')

part[(part['RETAILPRICE'] != 1001.7731772695184) & (part['P_PARTKEY'] <= 198) & (part['PT_COMMENT'] != 'p')][['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']].groupby(by=['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['SIZE'] != 8) | (part['P_PARTKEY'] > 3) | (part['P_PARTKEY'] != 12) & (part['P_PARTKEY'] >= 78) & (part['P_NAME'].str.startswith('g'))][['BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['SIZE'] >= 7) | (part['SIZE'] != 21) | (part['P_PARTKEY'] < 142) | (part['PT_COMMENT'] != 'c')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'MFGR']].groupby(by=['TYPE', 'SIZE', 'MFGR']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] != 930.6826826621789) | (part['BRAND'] != 'Brand#25') | (part['P_PARTKEY'] < 165) & (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('e')) & (part['RETAILPRICE'] != 1096.0001030046406) & (part['TYPE'] != 'E')][['TYPE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] <= 1091.9894401113725) & (part['P_PARTKEY'] == 70) | (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] != 'Brand#13') | (part['PT_COMMENT'] != ' fi') & (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4'])) & (part['MFGR'] == 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#4')][['PT_COMMENT', 'MFGR', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] == 935.8115218456766) & (part['BRAND'].isin(['Brand#55', 'Brand#31', 'Brand#25', 'Brand#23', 'Brand#35', 'Brand#34', 'Brand#12', 'Brand#21', 'Brand#13', 'Brand#15', 'Brand#24', 'Brand#41', 'Brand#44', 'Brand#53', 'Brand#52', 'Brand#14', 'Brand#11', 'Brand#42', 'Brand#22', 'Brand#51', 'Brand#43', 'Brand#33', 'Brand#45'])) & (part['CONTAINER'] != 'SM') & (part['P_NAME'] != 'f') & (part['PT_COMMENT'] != 'b') | (part['P_NAME'].str.startswith('cor'))][['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['TYPE'] != 'E') | (part['P_NAME'] != 'i') | (part['TYPE'] == 'STA') | (part['TYPE'] == 'E') | (part['PT_COMMENT'] == '!')][['RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['TYPE'].str.startswith('P')) | (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] != 1000.9801075166416) | (part['MFGR'] != 'Manufacturer#2')][['BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] != 21) | (nation['N_NAME'] == 'P')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 10)].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] <= 0) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 9651) & (partsupp['PS_PARTKEY'] >= 49) | (partsupp['SUPPLYCOST'] != 946.0998960930197) | (partsupp['PS_SUPPKEY'] >= 4371) | (partsupp['PS_SUPPKEY'] != 4217)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 4710) & (partsupp['AVAILQTY'] != 2645) | (partsupp['PS_SUPPKEY'] <= 3616)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] != 1003.1936590246319) | (part['PT_COMMENT'] != 'y') & (part['SIZE'] >= 15) & (part['P_NAME'].str.startswith('m')) | (part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'].str.startswith('g'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 1457)].merge(part[(part['TYPE'] == 'P') | (part['P_NAME'] == 'd') | (part['BRAND'].isin(['Brand#45', 'Brand#14', 'Brand#55', 'Brand#35', 'Brand#22', 'Brand#13', 'Brand#24', 'Brand#23', 'Brand#44', 'Brand#31', 'Brand#11', 'Brand#51', 'Brand#33'])) & (part['BRAND'] != 'Brand#33') & (part['SIZE'] > 21) & (part['RETAILPRICE'] <= 1029.5722020486785) & (part['SIZE'] <= 26) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3'])) & (part['P_PARTKEY'] >= 42)][['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 3) & (partsupp['AVAILQTY'] < 944) | (partsupp['PS_SUPPKEY'] != 6468) | (partsupp['PS_PARTKEY'] < 1) & (partsupp['PS_SUPPKEY'] == 4567)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 43) & (partsupp['PS_PARTKEY'] == 41) & (partsupp['PS_SUPPKEY'] == 2197) & (partsupp['AVAILQTY'] >= 9956) | (partsupp['PS_SUPPKEY'] < 246)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 5007)].merge(supplier[(supplier['S_COMMENT'] != 'd') & (supplier['S_ADDRESS'] != 'H') | (supplier['S_ADDRESS'].str.startswith('p')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 5) & (supplier['S_SUPPKEY'] <= 91) & (supplier['S_SUPPKEY'] < 184)][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 1630) | (partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] == 'f') & (partsupp['SUPPLYCOST'] >= 965.9291440813469)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] != 'Manufacturer#3') & (part['P_NAME'] != 'f') | (part['RETAILPRICE'] <= 936.9196449602841)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 2245) | (partsupp['PS_SUPPKEY'] >= 4878) | (partsupp['PS_PARTKEY'] != 16) & (partsupp['PS_PARTKEY'] <= 28) & (partsupp['PS_SUPPKEY'] == 5165)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'o') | (partsupp['AVAILQTY'] == 9697) | (partsupp['SUPPLYCOST'] <= 105.67329952926063) | (partsupp['P_COMMENT'] != 'are')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'n') | (partsupp['AVAILQTY'] >= 6508) | (partsupp['PS_SUPPKEY'] > 185) & (partsupp['P_COMMENT'].str.startswith(';'))].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'u') | (partsupp['AVAILQTY'] == 3412) | (partsupp['PS_SUPPKEY'] < 3478) & (partsupp['PS_SUPPKEY'] == 1124)].merge(supplier[(supplier['S_ACCTBAL'] <= 5339.627752920295) | (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] >= 16) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] != '28-')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_PARTKEY'] != 32) & (partsupp['SUPPLYCOST'] == 406.211181347368)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'MFGR', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['PS_SUPPKEY'] < 3156)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 3)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 289.09724981446874) | (partsupp['PS_SUPPKEY'] == 1887) | (partsupp['SUPPLYCOST'] >= 637.6922780191414) & (partsupp['AVAILQTY'] > 1050)].merge(supplier[(supplier['S_ACCTBAL'] <= 856.1147530791784) | (supplier['S_SUPPKEY'] == 143)][['S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 332.0550699746104) & (partsupp['P_COMMENT'] != ' ') & (partsupp['PS_PARTKEY'] >= 17)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'].str.startswith('w')) | (part['BRAND'] == 'Brand#31') & (part['P_NAME'].str.startswith('v')) & (part['RETAILPRICE'] < 1045.0271434367503)][['P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 881.2293896697342) & (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_SUPPKEY'] < 4078) | (partsupp['AVAILQTY'] != 3701) & (partsupp['SUPPLYCOST'] > 686.2734678805211)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 642.3763457509743) | (partsupp['PS_PARTKEY'] < 35) & (partsupp['P_COMMENT'] == 'a') | (partsupp['SUPPLYCOST'] <= 335.45120136608716) | (partsupp['SUPPLYCOST'] > 543.5484217632453)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 'u') & (part['PT_COMMENT'] == 'ly ') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['RETAILPRICE'] < 973.77131143759) & (part['BRAND'] != 'Brand#54')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == 8388.977576506033) & (supplier['S_SUPPKEY'] != 145)].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'].str.startswith('o'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['SIZE', 'P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'] != 'Brand#22') | (part['PT_COMMENT'] == 'ss ') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2'])) | (part['BRAND'].isin(['Brand#33', 'Brand#15', 'Brand#22', 'Brand#12', 'Brand#25', 'Brand#42', 'Brand#24', 'Brand#55', 'Brand#53', 'Brand#31', 'Brand#35', 'Brand#11', 'Brand#34', 'Brand#44', 'Brand#43', 'Brand#21', 'Brand#45', 'Brand#13', 'Brand#51', 'Brand#52'])) | (part['P_PARTKEY'] != 123) | (part['SIZE'] <= 47) & (part['P_PARTKEY'] != 75) | (part['RETAILPRICE'] < 1040.1169040474142)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['TYPE'] != 'S') | (part['BRAND'].isin(['Brand#12'])) | (part['TYPE'] != 'M') | (part['SIZE'] <= 22) & (part['SIZE'] != 29) & (part['P_NAME'] != 'p') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] <= 10) & (supplier['S_COMMENT'] == 'bli')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] > 61) & (part['P_PARTKEY'] == 130) & (part['SIZE'] > 19) | (part['RETAILPRICE'] >= 986.7956550831949) | (part['P_PARTKEY'] != 195) | (part['MFGR'] == 'Manufacturer#2')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 8349.912156596243)].merge(nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['MFGR', 'BRAND', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['BRAND', 'P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'P')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 4) | (nation['N_NATIONKEY'] >= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] != 'F') & (nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 7) | (nation['N_NATIONKEY'] >= 9) | (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 3206.1937125748154) | (supplier['S_SUPPKEY'] == 74) & (supplier['S_NATIONKEY'] < 21)].merge(nation[(nation['N_COMMENT'] == 'c')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 5440.116484183373) | (supplier['S_ACCTBAL'] <= 9851.669309667175) & (supplier['S_SUPPKEY'] != 171) & (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] < 6) | (supplier['S_SUPPKEY'] > 121)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'i') | (supplier['S_COMMENT'] != 'es ') & (supplier['S_COMMENT'].str.startswith('i')) | (supplier['S_ADDRESS'].str.startswith('t')) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == '2') | (supplier['S_SUPPKEY'] != 198) | (supplier['S_ADDRESS'].str.startswith('4')) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 10) & (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'd') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 8) & (supplier['S_COMMENT'].str.startswith('o'))].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('C')) | (supplier['S_ACCTBAL'] > 2258.3162462775617) & (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 86)].merge(nation[(nation['N_NATIONKEY'] > 19) & (nation['N_NATIONKEY'] >= 21) & (nation['N_REGIONKEY'] < 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_SUPPKEY'] < 86) | (supplier['S_SUPPKEY'] > 95) | (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_SUPPKEY'] == 182)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'e') & (supplier['S_NATIONKEY'] != 13)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_COMMENT'].str.startswith('!'))][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'] != 'x') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'f') & (supplier['S_SUPPKEY'] > 166) | (supplier['S_COMMENT'] != 'h') & (supplier['S_ACCTBAL'] <= 3508.253756314868)].merge(nation[(nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == ' sl')][['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'e') & (supplier['S_ACCTBAL'] > -862.4194257092246)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 179) & (supplier['S_SUPPKEY'] <= 18) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 11) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('d'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 22) | (supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_COMMENT'] != 't')][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'E')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == 9795.758232225537) & (supplier['S_SUPPKEY'] < 122) & (supplier['S_NATIONKEY'] <= 5) | (supplier['S_ACCTBAL'] == 9251.027302514998) & (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] != 7) | (supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] <= 9029.856172678206)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 19) & (supplier['S_ADDRESS'] != 'f') & (supplier['S_ACCTBAL'] == 4369.192358161281)].merge(nation[(nation['N_NATIONKEY'] == 20) | (nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] == 'M')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 12) | (supplier['S_NATIONKEY'] < 16) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'T') | (supplier['S_ADDRESS'] != ' ')].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 7) & (supplier['S_ADDRESS'].str.startswith('y')) & (supplier['S_PHONE'] != '32-') & (supplier['S_SUPPKEY'] < 85) & (supplier['S_ADDRESS'] == '8') & (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 0) | (supplier['S_PHONE'] == '28-') & (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'] != 'H')].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] >= 4696.9459405337675) | (supplier['S_PHONE'] != '1')][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] == 'u') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ACCTBAL'] != -288.5521455997954) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'O')][['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME', 'S_COMMENT', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'].str.startswith('28-'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-'))][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('J'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 58) | (supplier['S_ACCTBAL'] >= 3009.778943123795)].merge(nation[(nation['N_NATIONKEY'] > 20) & (nation['N_COMMENT'] == 'e') & (nation['N_NAME'].str.startswith('C'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 6)][['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] != 3)].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 104) | (supplier['S_ADDRESS'] == 'n') | (supplier['S_COMMENT'] != ' sl') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith(' '))][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 43) | (supplier['S_SUPPKEY'] <= 66) & (supplier['S_SUPPKEY'] >= 34) & (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_COMMENT'] != 'l') & (supplier['S_COMMENT'].str.startswith('w'))][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 24) | (supplier['S_NATIONKEY'] != 9) & (supplier['S_SUPPKEY'] != 8) | (supplier['S_NATIONKEY'] != 23) & (supplier['S_NATIONKEY'] != 9)].merge(nation[(nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] >= 187) | (supplier['S_PHONE'] != '32-')].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] >= 22)].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 19) | (supplier['S_ADDRESS'].str.startswith('v')) & (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_ACCTBAL'] == 3221.595455749599)].merge(nation[(nation['N_NATIONKEY'] == 0) & (nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] < 22)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'].str.startswith('S'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'C')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'].str.startswith('s'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] < 23)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 19) & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 3) & (nation['N_NATIONKEY'] < 22) | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 2) & (nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] != 13) & (nation['N_NATIONKEY'] != 13)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 9015.677570053727) | (customer['C_NATIONKEY'] < 5) | (customer['C_COMMENT'] == 'q') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] == 7449.725097928831) | (customer['C_ACCTBAL'] > 5204.692215126077) | (customer['C_ACCTBAL'] > 3617.461120955979)].merge(nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 4121.817260287413) | (customer['C_ACCTBAL'] != 3672.536863325833) | (customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] != 2) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 3266.598281329506)].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 7875.99071052486) | (customer['C_PHONE'] == '2') | (customer['C_PHONE'] == '1') & (customer['C_ACCTBAL'] > 2564.9522179446294)].merge(nation[(nation['N_NATIONKEY'] >= 5) | (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 7392.013918246554) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'G') & (nation['N_NAME'] != 'V')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'S')].merge(nation[(nation['N_NATIONKEY'] == 6) & (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'T')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('d')) & (customer['C_NATIONKEY'] == 9) | (customer['C_ADDRESS'] != 'v') & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].groupby(by=['C_NAME', 'C_PHONE', 'C_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'd') & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'].str.startswith('a')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'e') & (customer['C_ACCTBAL'] >= 2535.968508620446) | (customer['C_ACCTBAL'] != 8816.40958864764) | (customer['C_NATIONKEY'] <= 14) | (customer['C_ACCTBAL'] < 5419.43833114573)].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] > 6) | (nation['N_COMMENT'].str.startswith('l'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'] == 'e') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 14)].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] != 9) | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 't') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'BUILDING'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] < 22) | (customer['C_NATIONKEY'] >= 10) & (customer['C_NATIONKEY'] >= 13) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] < 29)].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] <= 7240.659699722893)].merge(nation[(nation['N_NATIONKEY'] != 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 56) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] > 2) | (customer['C_NATIONKEY'] < 12) | (customer['C_PHONE'] == '18-') & (customer['C_NATIONKEY'] > 8)].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'].str.startswith('c'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 15) & (customer['C_ADDRESS'] == 'i')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 32) | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_COMMENT'] == 'u') & (customer['MKTSEGMENT'] == 'BUILDING')][['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 93) & (customer['C_ADDRESS'] != 'H') | (customer['C_CUSTKEY'] < 79) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '18-')].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 59) & (customer['C_PHONE'] != '3') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] < 9) & (customer['C_COMMENT'] != 'g') & (customer['C_ADDRESS'].str.startswith('J')) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] != 'P')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 73) & (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'] != 'b') & (customer['C_CUSTKEY'] <= 66) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] == -113.48356910860628) | (customer['MKTSEGMENT'] != 'BUILDING')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 78) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] > 51) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith(',')) & (customer['C_CUSTKEY'] < 34)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != '4')][['MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 909.0066181017685) | (customer['C_ACCTBAL'] == 6863.640237334507) | (customer['C_NATIONKEY'] <= 5)].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 6) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('e')) & (customer['C_NATIONKEY'] > 19) | (customer['C_ADDRESS'] == 'o') | (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 18) | (customer['C_COMMENT'] == 'l') & (customer['C_CUSTKEY'] <= 83) & (customer['C_CUSTKEY'] <= 18) | (customer['C_NATIONKEY'] < 16) | (customer['C_NATIONKEY'] <= 8) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] < 22) | (nation['N_NAME'].str.startswith('S'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 19) | (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] == 16) & (customer['C_COMMENT'] == 'u') | (customer['C_NATIONKEY'] > 13)].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] != 22) & (nation['N_NATIONKEY'] != 5) | (nation['N_COMMENT'] == ' ')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '1') | (customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] == 15) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] > 52) & (customer['C_ACCTBAL'] >= 8092.76823852059) | (customer['C_CUSTKEY'] <= 39)].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] >= 15) & (nation['N_REGIONKEY'] > 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') & (customer['C_NATIONKEY'] <= 6) & (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] > 7)].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_ACCTBAL'] != 1561.138863072626) & (customer['C_ACCTBAL'] == 435.5124167100514)].merge(nation[(nation['N_NATIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] == 22) & (nation['N_COMMENT'] == 'n')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] == 'A') | (nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] != 'E') & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 8824) & (partsupp['AVAILQTY'] <= 6819) & (partsupp['SUPPLYCOST'] != 188.7877872560705) & (partsupp['SUPPLYCOST'] > 77.45504403972132)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 5) & (partsupp['SUPPLYCOST'] == 955.0171823225758) | (partsupp['SUPPLYCOST'] != 729.4274613942821) & (partsupp['PS_PARTKEY'] == 12) | (partsupp['P_COMMENT'].str.startswith(' '))][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] > 3) | (part['TYPE'] != 'L') & (part['PT_COMMENT'].str.startswith('h')) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'] == 'Brand#53')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 38)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['TYPE'] != 'STA') | (part['BRAND'] != 'Brand#53') & (part['P_NAME'] == 't') & (part['P_PARTKEY'] <= 120)][['P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#5'])) & (part['TYPE'] == 'E') | (part['RETAILPRICE'] <= 1071.243522973456) & (part['PT_COMMENT'] == 'b') | (part['P_NAME'] == 'cor') | (part['TYPE'].str.startswith('SMA')) | (part['PT_COMMENT'].str.startswith('x')) & (part['MFGR'] != 'Manufacturer#1') | (part['CONTAINER'] == 'WRAP')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['SHIPDATE'] > '1992-04-27')][['COMMITDATE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_PARTKEY', 'QUANTITY', 'L_ORDERKEY', 'LINESTATUS', 'L_COMMENT']].groupby(by=['COMMITDATE', 'L_ORDERKEY']).agg('count')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_PARTKEY'] > 184353) | (lineitem['L_ORDERKEY'] != 129)][['QUANTITY', 'SHIPDATE', 'RECEIPTDATE', 'RETURNFLAG', 'TAX', 'COMMITDATE', 'LINENUMBER']].groupby(by=['RECEIPTDATE', 'SHIPDATE', 'LINENUMBER', 'QUANTITY', 'COMMITDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 2) & (lineitem['LINENUMBER'] > 1)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3355)].merge(part[(part['P_PARTKEY'] == 50)][['P_NAME', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'O')][['COMMITDATE', 'SHIPMODE', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['L_SUPPKEY'] == 707) & (lineitem['EXTENDEDPRICE'] < 26080.97026755151) & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['QUANTITY'] != 17) & (lineitem['EXTENDEDPRICE'] != 32158.47714236148) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['L_ORDERKEY'] > 113) & (lineitem['L_SUPPKEY'] != 9946)].merge(orders[['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 'l') & (lineitem['EXTENDEDPRICE'] == 73599.34864903109) | (lineitem['DISCOUNT'] < 0.0168250278071873) | (lineitem['QUANTITY'] <= 34) & (lineitem['QUANTITY'] < 1) | (lineitem['TAX'] <= 0.01848782497198437) & (lineitem['QUANTITY'] == 26) | (lineitem['L_ORDERKEY'] != 130)].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('b')) | (lineitem['TAX'] >= 0.04268551643146439) | (lineitem['LINENUMBER'] < 1) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['TAX'] <= 0.007071182932617761) | (lineitem['LINENUMBER'] > 2) & (lineitem['L_PARTKEY'] == 132716)].merge(partsupp[(partsupp['AVAILQTY'] > 691) & (partsupp['PS_SUPPKEY'] > 6577) | (partsupp['PS_SUPPKEY'] >= 586) | (partsupp['AVAILQTY'] == 1945)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 22) | (lineitem['LINESTATUS'] == 'F') | (lineitem['LINENUMBER'] >= 2) | (lineitem['EXTENDEDPRICE'] == 76514.5132578284) | (lineitem['SHIPMODE'].isin(['TRUCK'])) | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['LINENUMBER'] > 4) & (lineitem['L_PARTKEY'] > 33079) & (lineitem['L_SUPPKEY'] == 7803) | (lineitem['COMMITDATE'] >= '1998-10-16')][['LINESTATUS', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE']].groupby(by=['SHIPINSTRUCT', 'COMMITDATE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] != 150864) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_COMMENT'].str.startswith('v'))].merge(partsupp[(partsupp['SUPPLYCOST'] != 837.8805976949715) & (partsupp['SUPPLYCOST'] < 504.2597015185906)].merge(part[(part['SIZE'] != 23) | (part['RETAILPRICE'] <= 1047.9763015884935) & (part['P_NAME'] != 'y') & (part['BRAND'] != 'Brand#32') & (part['PT_COMMENT'].str.startswith('u'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] == 140367) & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['TAX'] == 0.04754386098580073) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['RECEIPTDATE'] < '1992-05-02')][['L_COMMENT', 'COMMITDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPDATE', 'QUANTITY', 'DISCOUNT']].groupby(by=['LINESTATUS', 'COMMITDATE', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 2213) & (lineitem['L_PARTKEY'] > 151378) & (lineitem['L_PARTKEY'] != 68960)][['L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'QUANTITY', 'L_COMMENT', 'EXTENDEDPRICE', 'COMMITDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 4875) & (lineitem['L_ORDERKEY'] < 71) | (lineitem['L_PARTKEY'] != 72230) | (lineitem['L_ORDERKEY'] > 129) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['LINENUMBER'] != 2) | (lineitem['L_ORDERKEY'] == 10) & (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_ORDERKEY'] <= 171)][['LINESTATUS', 'RECEIPTDATE', 'LINENUMBER']].groupby(by=['LINENUMBER', 'LINESTATUS', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['L_PARTKEY'] < 174301) | (lineitem['TAX'] <= 0.04345233864971368) | (lineitem['DISCOUNT'] == 0.06754919147347123) | (lineitem['SHIPINSTRUCT'].isin(['NONE'])) | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['LINESTATUS'].isin(['F']))].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'k')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R', 'A']))].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['P_COMMENT'].str.startswith('c'))][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['TYPE'] == 'L') & (part['BRAND'].isin(['Brand#53', 'Brand#35', 'Brand#55', 'Brand#42', 'Brand#54', 'Brand#25', 'Brand#11', 'Brand#21', 'Brand#14'])) & (part['P_NAME'] == 'g') | (part['TYPE'] == 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['EXTENDEDPRICE'] >= 49635.58192876521) & (lineitem['DISCOUNT'] >= 0.006499669375991813) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['QUANTITY'] <= 5) | (lineitem['EXTENDEDPRICE'] != 74945.41090077058) & (lineitem['L_SUPPKEY'] != 5965) & (lineitem['RETURNFLAG'].isin(['N', 'R']))][['L_PARTKEY', 'LINENUMBER', 'L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'L_SUPPKEY']].groupby(by=['L_SUPPKEY', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp[(partsupp['PS_PARTKEY'] <= 2) & (partsupp['PS_PARTKEY'] == 8) & (partsupp['PS_PARTKEY'] > 10) & (partsupp['PS_SUPPKEY'] >= 2999) | (partsupp['PS_PARTKEY'] <= 39)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'L_SUPPKEY', 'L_PARTKEY', 'RECEIPTDATE', 'LINENUMBER', 'SHIPMODE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY', 'TAX', 'SHIPINSTRUCT', 'LINESTATUS', 'RECEIPTDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 667.3667780704354) & (partsupp['PS_PARTKEY'] == 39) & (partsupp['PS_SUPPKEY'] >= 4491) | (partsupp['PS_SUPPKEY'] > 5210)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'SHIPDATE', 'LINENUMBER', 'COMMITDATE', 'L_PARTKEY', 'L_COMMENT', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] < 45) & (partsupp['AVAILQTY'] <= 8999) & (partsupp['PS_PARTKEY'] > 30) & (partsupp['SUPPLYCOST'] != 71.97010577879773)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'L_ORDERKEY', 'SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'RETURNFLAG', 'L_PARTKEY', 'COMMITDATE', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(orders[(orders['CLERK'].str.startswith('C'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPMODE', 'RETURNFLAG', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'LINENUMBER', 'SHIPINSTRUCT', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE']].merge(orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2608)].merge(part[(part['SIZE'] > 2) & (part['RETAILPRICE'] == 1047.7016381268459) | (part['P_NAME'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPMODE', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] == 0) & (nation['N_NAME'] != 'A')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] <= 0)][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'V') & (nation['N_NAME'] == 'B') & (nation['N_NAME'] == 'I') & (nation['N_COMMENT'] == 't')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('o'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 5) & (nation['N_NATIONKEY'] < 14) & (nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] != 17)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AME') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 1) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] < 11)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] == 13) & (customer['C_NATIONKEY'] == 22) & (customer['C_NATIONKEY'] < 1) | (customer['C_ACCTBAL'] == 1216.4551379288591) & (customer['C_CUSTKEY'] == 72) & (customer['C_COMMENT'] != 'i')].merge(nation[(nation['N_NATIONKEY'] != 19)].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] > 21)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] < 5) | (nation['N_NAME'].str.startswith('F'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '27-') & (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] != 131) | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERSTATUS'] == 'O')].merge(customer[(customer['C_ADDRESS'] == 'g') | (customer['C_NATIONKEY'] >= 2) | (customer['C_CUSTKEY'] <= 23) | (customer['C_CUSTKEY'] != 34) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] >= 35)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_CUSTKEY'] == 51802) | (orders['O_CUSTKEY'] == 128204) | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH']))].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('count')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 444) | (orders['O_ORDERKEY'] <= 397) & (orders['O_ORDERKEY'] != 611) | (orders['ORDERDATE'] < '1992-01-13') & (orders['TOTALPRICE'] > 315472.05142637115)].merge(customer.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW'])) & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] > 222355.7195107145) | (orders['O_CUSTKEY'] <= 9427)].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'P')][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['TOTALPRICE'] > 38248.88345825567) | (orders['O_CUSTKEY'] != 101508) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1992-01-13')][['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('j')) & (orders['O_COMMENT'].str.startswith('r')) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_CUSTKEY'] <= 78) | (customer['C_ADDRESS'].str.startswith('Q')) | (customer['MKTSEGMENT'] == 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 44632) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ACCTBAL'] > 5590.657940541188) | (customer['C_PHONE'] != '18-') & (customer['C_COMMENT'] != 'n')].merge(nation[(nation['N_NATIONKEY'] != 23)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 69387) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] >= 30145) & (orders['O_COMMENT'].str.startswith('y')) & (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] == 0)].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 16438) & (orders['O_ORDERKEY'] >= 152) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '1-URGENT']))].merge(customer[(customer['C_CUSTKEY'] > 83) & (customer['C_PHONE'] != '18-') | (customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] > 53) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_PHONE'].str.startswith('27-'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 10818) & (orders['TOTALPRICE'] <= 218376.8857422366) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] >= 10) | (customer['C_NATIONKEY'] <= 16) | (customer['C_ACCTBAL'] <= 2298.0396319570677)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 707) | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'].str.startswith('b')) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERDATE'] != '1992-01-13')].merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 71) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 'c')][['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] < 139595.5823145073) | (orders['O_ORDERKEY'] >= 700) | (orders['O_COMMENT'] == '-') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'O') | (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY']].groupby(by=['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] <= 246) & (orders['O_COMMENT'] != 'a') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERDATE'] != '1998-07-21')][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'CLERK']].groupby(by=['ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'].str.startswith('b')) | (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] < 38111)][['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 36336) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_CUSTKEY'] < 49)][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] != 247581.57526344105) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_COMMENT'] != 'the') & (orders['TOTALPRICE'] < 96536.65832610276) | (orders['SHIPPRIORITY'] <= 0)].merge(customer[(customer['C_ACCTBAL'] != 1968.5073284831683) | (customer['C_ACCTBAL'] != 1424.7434420418244) & (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'] == 'q') | (customer['C_ACCTBAL'] > 1071.4010967643637) & (customer['MKTSEGMENT'] != 'FURNITURE')][['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 122737.54431429421) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'a') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] < 16346)].merge(customer[(customer['C_NATIONKEY'] != 7) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != 'd') & (customer['C_ACCTBAL'] <= 5969.207391858234) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD']))][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 342809.6443712893) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] >= 279) & (orders['O_CUSTKEY'] == 113768)].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']).agg('count')

orders[(orders['TOTALPRICE'] == 340100.6825587712)].merge(customer[(customer['C_NATIONKEY'] <= 4)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] >= 57004.076198721654) & (orders['ORDERDATE'] > '1998-07-21') | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] == 185103.57932360366) | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 'k') & (orders['O_COMMENT'] != 'b')].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_NATIONKEY'] >= 15) | (customer['C_PHONE'] != '13-') | (customer['C_NATIONKEY'] < 22)][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('count')

orders[['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'y')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] >= 22) | (customer['C_ADDRESS'].str.startswith('0')) & (customer['C_NATIONKEY'] != 4) & (customer['C_NATIONKEY'] == 21) | (customer['C_ACCTBAL'] == 9286.818312045263) | (customer['C_CUSTKEY'] < 48) & (customer['C_PHONE'].str.startswith('2'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE']].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] <= 9)][['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] > 1098.5336639532836) & (part['SIZE'] < 4) | (part['PT_COMMENT'].str.startswith('e'))][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['BRAND', 'CONTAINER', 'SIZE']).agg('count')

part[(part['CONTAINER'].str.startswith('MED')) & (part['RETAILPRICE'] != 1037.7893139669673) & (part['P_PARTKEY'] == 12) | (part['SIZE'] <= 17) | (part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] < 1059.0671744416024)][['BRAND', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']].groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) | (part['P_NAME'].str.startswith('b')) | (part['P_NAME'].str.startswith('i')) & (part['MFGR'] == 'Manufacturer#5')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']].groupby(by=['CONTAINER', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'kag') | (part['P_NAME'] == 'v') & (part['CONTAINER'] == 'LG') & (part['TYPE'] != 'S') & (part['BRAND'] == 'Brand#21') | (part['MFGR'].isin(['Manufacturer#2'])) | (part['BRAND'] == 'Brand#44') | (part['TYPE'] != 'E') & (part['PT_COMMENT'].str.startswith('ly '))][['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('a')) & (part['PT_COMMENT'] != 'u') | (part['RETAILPRICE'] <= 990.193471714996) | (part['SIZE'] >= 35) & (part['P_NAME'] == 'b') | (part['SIZE'] > 24) & (part['P_NAME'] != 'i')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'MFGR']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('s')) | (part['RETAILPRICE'] > 940.4669833326416) & (part['CONTAINER'] == 'MED')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']].groupby(by=['MFGR', 'P_PARTKEY', 'P_NAME', 'SIZE']).agg('count')

part[(part['P_NAME'] != 'bis') & (part['SIZE'] == 32) | (part['P_PARTKEY'] <= 169) | (part['PT_COMMENT'].str.startswith('h')) & (part['PT_COMMENT'] != 'w')][['RETAILPRICE', 'BRAND', 'MFGR', 'SIZE', 'P_NAME', 'CONTAINER']].groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'SIZE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'blu') | (part['SIZE'] > 36) & (part['RETAILPRICE'] <= 1061.2031123248835) | (part['BRAND'].isin(['Brand#44'])) & (part['CONTAINER'] != 'SM') & (part['TYPE'] == 'L')][['SIZE', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 93) | (part['BRAND'] == 'Brand#43') & (part['TYPE'].str.startswith('S')) & (part['TYPE'] != 'M') & (part['P_PARTKEY'] >= 19) | (part['PT_COMMENT'].str.startswith('m')) & (part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'].str.startswith('MED'))][['P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['SIZE'] < 11) | (part['PT_COMMENT'].str.startswith('o')) & (part['MFGR'] != 'Manufacturer#3') | (part['TYPE'].str.startswith('S')) | (part['SIZE'] > 13) & (part['P_PARTKEY'] <= 174)][['MFGR', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] > 131) | (part['CONTAINER'] != 'WRAP') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['BRAND'] == 'Brand#41') & (part['CONTAINER'] == 'LG') | (part['TYPE'].str.startswith('L')) | (part['BRAND'] == 'Brand#15') | (part['MFGR'] == 'Manufacturer#4')][['P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('count')

partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] < 10) & (nation['N_NATIONKEY'] <= 11) | (nation['N_COMMENT'] == 'r')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] != 's') & (supplier['S_ACCTBAL'] < 9715.918037020085) | (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_PHONE'] == '26-') | (supplier['S_NATIONKEY'] > 12)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_SUPPKEY'] >= 48) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] > 2181.081860940307) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] < 16) & (nation['N_NATIONKEY'] > 0) | (nation['N_NATIONKEY'] != 9) | (nation['N_COMMENT'] != 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] == '2')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 41) & (supplier['S_ACCTBAL'] == 4536.806570094864) | (supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] == 12) & (supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] > 15) | (supplier['S_NATIONKEY'] >= 9)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 110) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] < 8) & (supplier['S_SUPPKEY'] >= 46) | (supplier['S_ADDRESS'].str.startswith('2')) & (supplier['S_COMMENT'] == 's') & (supplier['S_COMMENT'].str.startswith('h'))][['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] >= 5)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_NATIONKEY'] >= 19) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 4576) & (partsupp['PS_PARTKEY'] < 37) & (partsupp['AVAILQTY'] >= 292) & (partsupp['AVAILQTY'] <= 8629) | (partsupp['SUPPLYCOST'] != 20.757769173414626)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] != '9') | (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 4824) | (partsupp['PS_PARTKEY'] != 11) | (partsupp['SUPPLYCOST'] > 459.03792326532323) | (partsupp['PS_SUPPKEY'] < 3869) | (partsupp['SUPPLYCOST'] <= 517.014024138733)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2200) & (partsupp['SUPPLYCOST'] != 379.0131953402206) | (partsupp['AVAILQTY'] < 2756) | (partsupp['PS_PARTKEY'] <= 34) | (partsupp['P_COMMENT'].str.startswith('d'))].merge(part[(part['BRAND'] != 'Brand#25') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4'])) & (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('h')) | (part['SIZE'] <= 21) | (part['SIZE'] == 48)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 4370) | (partsupp['SUPPLYCOST'] <= 875.4552721278338) | (partsupp['PS_PARTKEY'] >= 49) & (partsupp['SUPPLYCOST'] <= 603.1533495520064) & (partsupp['PS_SUPPKEY'] == 1320)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= 7140.582903414302) & (supplier['S_NAME'] == 'S')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 6592)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'S') | (part['SIZE'] >= 33) & (part['P_NAME'] != 'b') | (part['P_NAME'].str.startswith('f'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 4108)].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 14) & (partsupp['PS_PARTKEY'] < 45)].merge(part[(part['CONTAINER'] != 'LG') & (part['P_NAME'] == 'i') & (part['P_NAME'].str.startswith('o')) & (part['BRAND'] == 'Brand#45') | (part['RETAILPRICE'] == 1085.7536794480957) | (part['SIZE'] < 23)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 26) | (partsupp['P_COMMENT'] == 'h') & (partsupp['AVAILQTY'] != 2106) | (partsupp['P_COMMENT'].str.startswith('c'))][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != 'b') & (supplier['S_ACCTBAL'] <= -344.38409673891954) | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 34) & (partsupp['SUPPLYCOST'] != 568.2862320574915) | (partsupp['AVAILQTY'] > 9639) & (partsupp['AVAILQTY'] < 1118) | (partsupp['AVAILQTY'] > 3167)].merge(part[(part['PT_COMMENT'] != 'q') | (part['P_PARTKEY'] >= 110) & (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] >= 140)][['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 43)].merge(part[(part['P_PARTKEY'] >= 83) | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] != 1075.639629787838) | (part['RETAILPRICE'] > 1007.6899800994723) & (part['SIZE'] < 2) & (part['BRAND'] != 'Brand#35')][['RETAILPRICE', 'BRAND', 'MFGR', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 9) | (partsupp['AVAILQTY'] > 1632) | (partsupp['PS_SUPPKEY'] <= 6318)].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == ' ')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 5048)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 162)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 409) | (partsupp['AVAILQTY'] != 9483) | (partsupp['PS_SUPPKEY'] == 4217) | (partsupp['P_COMMENT'] != 's')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 5343) & (partsupp['SUPPLYCOST'] < 889.588971864156) & (partsupp['AVAILQTY'] >= 4730) & (partsupp['SUPPLYCOST'] != 796.2171100863417) & (partsupp['PS_PARTKEY'] < 8)].merge(part[(part['BRAND'] != 'Brand#51') & (part['PT_COMMENT'] != 'f') & (part['CONTAINER'] != 'LG') | (part['PT_COMMENT'].str.startswith('n'))][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] > 3504) & (partsupp['P_COMMENT'] == ' ')].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'x') | (partsupp['P_COMMENT'].str.startswith('d')) & (partsupp['PS_PARTKEY'] == 11) & (partsupp['SUPPLYCOST'] > 451.4107237752948) | (partsupp['AVAILQTY'] < 8969)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == ',') | (partsupp['SUPPLYCOST'] != 886.1378801205601) & (partsupp['PS_PARTKEY'] < 8)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'E')].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['SUPPLYCOST'] <= 333.21346990327015) | (partsupp['P_COMMENT'] != 'c')][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 403.8755878547567) & (partsupp['AVAILQTY'] > 1381)][['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_ADDRESS'] == 'j')][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 407.83764568775416) | (partsupp['SUPPLYCOST'] >= 390.0779430120887) & (partsupp['P_COMMENT'] == 'y') | (partsupp['AVAILQTY'] == 8392) & (partsupp['P_COMMENT'].str.startswith('k'))][['PS_PARTKEY']].merge(part[(part['SIZE'] > 47) | (part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 96.03177567972185) & (partsupp['SUPPLYCOST'] == 669.3720227427617) & (partsupp['AVAILQTY'] <= 9135) & (partsupp['AVAILQTY'] > 6409) & (partsupp['AVAILQTY'] == 1679)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 230.49555995529704)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_NATIONKEY'] > 3) | (supplier['S_ACCTBAL'] != 5723.8251580026545) & (supplier['S_COMMENT'] != 'v') | (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] <= 46) & (part['SIZE'] <= 14) | (part['SIZE'] < 46) & (part['RETAILPRICE'] == 1028.4399204319827)][['TYPE', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 't') & (supplier['S_NATIONKEY'] != 14)][['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['SIZE'] != 13) | (part['PT_COMMENT'] == 'kag') | (part['BRAND'] != 'Brand#11') & (part['PT_COMMENT'].str.startswith('ly ')) & (part['P_PARTKEY'] <= 98)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'MFGR', 'BRAND', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#34') | (part['PT_COMMENT'] != 'h') | (part['BRAND'] == 'Brand#11') & (part['CONTAINER'] == 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['SIZE'] != 22) | (part['P_NAME'] == 'i') | (part['P_NAME'] != 'cor') | (part['PT_COMMENT'] != 'ss ')][['P_PARTKEY', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_COMMENT'] == 'h') & (nation['N_NAME'] == 'M')].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NATIONKEY'] <= 15)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] != 9) & (nation['N_NATIONKEY'] <= 11) | (nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_NAME'] != 'E') & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_COMMENT'] == 'h') | (nation['N_NAME'] != 'J')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_NATIONKEY'] == 20) | (nation['N_NAME'] == 'K') & (nation['N_COMMENT'] != 'o')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'M') | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 9632.60564103283) | (supplier['S_SUPPKEY'] == 23) | (supplier['S_COMMENT'] == 'u') | (supplier['S_NATIONKEY'] < 13) | (supplier['S_SUPPKEY'] <= 98)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 3870.802848051513)].merge(nation[(nation['N_NATIONKEY'] != 13) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] == 'J')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 8962.704157161405)].merge(nation[(nation['N_NATIONKEY'] > 1) | (nation['N_COMMENT'] != 'p') | (nation['N_NAME'] == 'U')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 1052.5536408816367) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'S')][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'F') | (supplier['S_COMMENT'] != 's')].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] != 22) & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'K') | (supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] == 83) & (supplier['S_ADDRESS'] == 'Z') | (supplier['S_SUPPKEY'] <= 89)][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_SUPPKEY'] < 68) | (supplier['S_SUPPKEY'] != 51)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 's') | (supplier['S_ACCTBAL'] >= 2569.755613406922) | (supplier['S_PHONE'] == '1')].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'u')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'v') & (supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] > 3774.727881971231) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 164)][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_COMMENT'].str.startswith('q'))].merge(nation[(nation['N_NATIONKEY'] != 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'w')].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 21) | (supplier['S_COMMENT'] != 'f') | (supplier['S_PHONE'] != '26-') & (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] != '26-')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] >= 8148.303778098122) & (supplier['S_SUPPKEY'] > 89) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] == 21)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'bli') & (supplier['S_ADDRESS'] != '2')].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'u')][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'Q') & (supplier['S_ACCTBAL'] <= 4233.590891153166) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_NATIONKEY'] >= 23)][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 198) & (supplier['S_ADDRESS'] == '8') | (supplier['S_NATIONKEY'] > 3) & (supplier['S_SUPPKEY'] > 10) | (supplier['S_NATIONKEY'] >= 14) | (supplier['S_ADDRESS'] != '6')].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 6) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_SUPPKEY'] >= 104) | (supplier['S_PHONE'] == '32-')].merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_NAME'] == 'AFR') & (region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 21) | (supplier['S_PHONE'].str.startswith('14-'))].merge(nation[(nation['N_NATIONKEY'] != 7) & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] < 122)].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '17-')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'] != 'E') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 137)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('17-'))].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] < 6)].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 187) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == ',')][['S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 30) | (supplier['S_PHONE'] != '2') & (supplier['S_NATIONKEY'] > 14) | (supplier['S_ACCTBAL'] > 9340.998351319346) & (supplier['S_COMMENT'] == 't') | (supplier['S_NATIONKEY'] != 18)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 47) & (supplier['S_SUPPKEY'] != 115) | (supplier['S_SUPPKEY'] > 66) | (supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_ADDRESS'] == 'F')].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] != 'V') & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] == 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 176)].merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_NAME'] == 'M')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 194) & (supplier['S_NATIONKEY'] >= 18) & (supplier['S_ADDRESS'] == 'b') | (supplier['S_NATIONKEY'] <= 17) | (supplier['S_ACCTBAL'] > 7298.468539884771) & (supplier['S_ADDRESS'] != 'p') & (supplier['S_ACCTBAL'] < 1130.6686495468327)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 79) & (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'] != 'x') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 77) | (supplier['S_NATIONKEY'] < 12) & (supplier['S_COMMENT'].str.startswith('w'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 117) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 15) & (supplier['S_ADDRESS'] != 'l') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'I') & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] == 1) | (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'].str.startswith('n'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 35) | (supplier['S_COMMENT'] == ',') | (supplier['S_ACCTBAL'] > 4366.339188320669) | (supplier['S_PHONE'] != '1')][['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'].str.startswith('G'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 7) & (supplier['S_ADDRESS'] == 'B') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'u') | (supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'h') & (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 175) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == '3') | (supplier['S_COMMENT'].str.startswith('h'))].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] != 's') | (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'].str.startswith(' '))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 't')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_NATIONKEY'] != 3) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'I')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'E') & (nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] != 'M')].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_NATIONKEY'] != 21) & (nation['N_REGIONKEY'] == 1)].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] != 0) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'AFR') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 4034.051543531993) | (customer['C_ADDRESS'] != 'T') | (customer['C_ADDRESS'] != '8') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 9) | (customer['C_ADDRESS'] == 'T') | (customer['C_COMMENT'] == 'f')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 4670.3302252790045) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] < 15) | (customer['C_PHONE'] == '27-')].merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 9888.123705959615) & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_NATIONKEY'] == 3) & (customer['C_ADDRESS'].str.startswith('e')) | (customer['C_COMMENT'] == 'e') | (customer['C_ADDRESS'] == 'P')].merge(nation[(nation['N_NATIONKEY'] >= 2) | (nation['N_NATIONKEY'] != 23) & (nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] >= 11)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 9187.819566837685) & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '1') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 12) & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] != 'o')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 989.6121600773756) | (customer['C_CUSTKEY'] >= 32) | (customer['C_ADDRESS'].str.startswith('U')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] < 0) & (customer['C_ADDRESS'] != 's')][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9916.856799244091) | (customer['C_CUSTKEY'] > 27) & (customer['C_COMMENT'] == ',') & (customer['C_ADDRESS'] == 'z') & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('7')) | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_NATIONKEY'] != 15) | (customer['C_COMMENT'] == 'l')].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] >= 9)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != ',') & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) & (customer['C_PHONE'] == '3') | (customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 'u') & (customer['C_CUSTKEY'] <= 60) | (customer['C_CUSTKEY'] != 93) | (customer['C_ACCTBAL'] >= 1895.7337708458435) | (customer['C_ADDRESS'] == 'h') | (customer['C_CUSTKEY'] < 81) & (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_ACCTBAL'] == 7384.177264748938)][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].groupby(by=['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith(',')) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] >= 3) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_ACCTBAL'] != 9017.219355774107)].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_COMMENT'] != 'v') | (nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] == 1)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 8) & (customer['C_CUSTKEY'] >= 44)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] != 'E') | (nation['N_NAME'].str.startswith('F'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 42) & (customer['C_COMMENT'] == 'c') & (customer['C_PHONE'] != '22-') | (customer['C_ADDRESS'] == '4') & (customer['C_ACCTBAL'] == 9170.611329517864)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 11) | (customer['C_ADDRESS'] != 'x') & (customer['C_COMMENT'] != 'y') | (customer['C_ADDRESS'] == 'q') | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 40) | (customer['C_NATIONKEY'] != 21) | (customer['C_CUSTKEY'] == 66)].merge(nation[(nation['N_NATIONKEY'] != 21) | (nation['N_NATIONKEY'] >= 5)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 5) | (customer['C_ACCTBAL'] >= 7109.906812182743)][['MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NATIONKEY'] > 10) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'R')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 20) | (customer['C_COMMENT'] == ',') | (customer['C_COMMENT'].str.startswith('e'))][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 19) & (customer['C_CUSTKEY'] > 69) & (customer['C_ACCTBAL'] != 8699.121606097917)].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] == 'C')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] == 'f') | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_ADDRESS'] != 'x') & (customer['C_ADDRESS'] != 'm') | (customer['C_ACCTBAL'] <= -731.4591161757819) & (customer['C_NAME'] == 'C')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] == 12) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] != 1983.6105896278623) & (customer['C_PHONE'] != '1') | (customer['C_NAME'] == 'C')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] <= 20) | (nation['N_NATIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 21) & (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'p')].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_NATIONKEY'] != 22) & (nation['N_NATIONKEY'] != 17) | (nation['N_NATIONKEY'] == 16)].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] > 3) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] != 20) & (nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] > 1) | (nation['N_NATIONKEY'] <= 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith('t')) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] == '1998-07-21')][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 16)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 38) & (partsupp['PS_SUPPKEY'] <= 3860) & (partsupp['PS_PARTKEY'] > 46) & (partsupp['SUPPLYCOST'] > 922.191608146306) & (partsupp['SUPPLYCOST'] == 319.0391576990275)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 45.242707498329366) | (partsupp['SUPPLYCOST'] < 501.3605219198337) & (partsupp['PS_SUPPKEY'] > 6471) & (partsupp['AVAILQTY'] < 8538) | (partsupp['AVAILQTY'] > 3868)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 6)].merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != '.') & (customer['C_CUSTKEY'] < 75) & (customer['C_ADDRESS'].str.startswith(',')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING'])) & (customer['C_NATIONKEY'] != 7) | (customer['C_ACCTBAL'] <= 9906.891345839356)][['C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP'])) & (lineitem['DISCOUNT'] >= 0.06978805301997797) & (lineitem['L_SUPPKEY'] >= 776)].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'p') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) | (lineitem['TAX'] >= 0.029158106843923618) & (lineitem['TAX'] != 0.005888179224311161) | (lineitem['TAX'] > 0.022665245729882856) | (lineitem['L_PARTKEY'] == 182714) | (lineitem['RETURNFLAG'].isin(['N']))][['L_COMMENT', 'QUANTITY', 'L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'LINENUMBER']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] != 66) & (lineitem['QUANTITY'] <= 9) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_ORDERKEY'] > 67)][['L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 13046) & (lineitem['DISCOUNT'] < 0.07070406595117838) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(orders[(orders['O_CUSTKEY'] != 144583) | (orders['ORDERDATE'] < '1998-07-21') | (orders['O_ORDERKEY'] != 90) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] == 698)][['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] >= 33898)].merge(orders.merge(customer[(customer['C_CUSTKEY'] >= 54) | (customer['C_ACCTBAL'] == 119.4874149049208) & (customer['C_NATIONKEY'] < 14) & (customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] >= 1211.09731990282)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 9758) & (lineitem['SHIPMODE'].isin(['RAIL'])) & (lineitem['L_SUPPKEY'] != 7513) | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['L_SUPPKEY'] > 1231) & (lineitem['SHIPDATE'] != '1992-04-27')].merge(orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] >= 30147.435884214567) | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] == 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] == 1858) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['L_ORDERKEY'] == 51)].merge(partsupp[(partsupp['AVAILQTY'] > 9272) | (partsupp['SUPPLYCOST'] >= 512.7247034519022) | (partsupp['PS_SUPPKEY'] > 629) | (partsupp['PS_PARTKEY'] <= 1)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 1989) | (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL', 'AIR', 'SHIP', 'FOB', 'TRUCK', 'REG AIR'])) | (lineitem['LINESTATUS'] != 'F') | (lineitem['L_SUPPKEY'] < 3775) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['SHIPINSTRUCT'] == 'NONE')][['L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 2510) & (lineitem['L_PARTKEY'] >= 58441) | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_SUPPKEY'] > 5667) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['LINESTATUS'] != 'F') | (lineitem['EXTENDEDPRICE'] > 67901.34425911207) & (lineitem['EXTENDEDPRICE'] != 63238.660246374595)].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 5483) | (lineitem['RETURNFLAG'] != 'R')].merge(partsupp[(partsupp['P_COMMENT'] == 'u') | (partsupp['SUPPLYCOST'] < 404.2996036845359) | (partsupp['AVAILQTY'] > 9500) | (partsupp['AVAILQTY'] <= 6190) & (partsupp['P_COMMENT'].str.startswith('l'))].merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 39) & (lineitem['QUANTITY'] < 8) | (lineitem['EXTENDEDPRICE'] < 46978.63556051377) & (lineitem['L_PARTKEY'] > 144016) & (lineitem['DISCOUNT'] < 0.07895258197559918) | (lineitem['LINENUMBER'] == 1) | (lineitem['TAX'] > 0.027230950097283574) & (lineitem['RETURNFLAG'] == 'R')].merge(partsupp[(partsupp['PS_PARTKEY'] > 9) | (partsupp['PS_PARTKEY'] == 1)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_PARTKEY'] != 3934)].merge(partsupp[(partsupp['SUPPLYCOST'] < 661.3824912496876) & (partsupp['AVAILQTY'] >= 3302) | (partsupp['PS_SUPPKEY'] > 7526) | (partsupp['AVAILQTY'] != 4444)].merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['QUANTITY'] != 28)].merge(orders[(orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINENUMBER'] >= 4) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['EXTENDEDPRICE'] != 72232.11210445655)].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1992-04-27')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('l')) | (partsupp['PS_PARTKEY'] > 28) & (partsupp['SUPPLYCOST'] <= 224.65363573925788) | (partsupp['AVAILQTY'] > 8218) | (partsupp['SUPPLYCOST'] >= 774.8758349091154)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['QUANTITY'] == 33) & (lineitem['L_ORDERKEY'] > 159) & (lineitem['DISCOUNT'] >= 0.08736412489866519) & (lineitem['DISCOUNT'] >= 0.027676214355545903) & (lineitem['TAX'] < 0.01624183369906426) & (lineitem['LINENUMBER'] < 1) | (lineitem['QUANTITY'] != 45)][['TAX', 'SHIPDATE', 'COMMITDATE', 'RECEIPTDATE', 'L_COMMENT', 'LINENUMBER']].groupby(by=['RECEIPTDATE', 'LINENUMBER', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.0017793202436897104) | (lineitem['LINESTATUS'] != 'O') | (lineitem['L_COMMENT'].str.startswith('i')) & (lineitem['TAX'] != 0.06588074253928436) & (lineitem['L_COMMENT'] == 'v') & (lineitem['DISCOUNT'] != 0.06413254693067552) & (lineitem['QUANTITY'] >= 33) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD']))].merge(partsupp[(partsupp['SUPPLYCOST'] != 952.8242428967484) | (partsupp['SUPPLYCOST'] > 995.6752290912367) & (partsupp['AVAILQTY'] >= 3287)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] > 0.02985057397199502) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['DISCOUNT'] < 0.02367892983622202) & (lineitem['QUANTITY'] == 22) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['COMMITDATE'] != '1998-10-16')][['L_ORDERKEY', 'RETURNFLAG']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

lineitem[['L_ORDERKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'RECEIPTDATE', 'DISCOUNT', 'SHIPINSTRUCT']].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 3) & (partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] == 1467)].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'SHIPMODE', 'COMMITDATE', 'RECEIPTDATE', 'DISCOUNT']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] < 964.6137838843276) | (part['MFGR'] != 'Manufacturer#4') & (part['TYPE'] == 'P') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 24) | (partsupp['SUPPLYCOST'] < 819.7976162440827) | (partsupp['PS_SUPPKEY'] < 5440) | (partsupp['PS_PARTKEY'] <= 19) | (partsupp['PS_PARTKEY'] > 18)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT']].merge(partsupp.merge(part[(part['TYPE'] == 'L') & (part['P_NAME'] != 'blu') & (part['CONTAINER'] == 'JUMBO') & (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'].isin(['Brand#22', 'Brand#35', 'Brand#11', 'Brand#24', 'Brand#52'])) & (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RETURNFLAG', 'L_ORDERKEY', 'COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE']].merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 4731.765527103284) & (customer['C_CUSTKEY'] > 32) | (customer['C_ACCTBAL'] <= 7060.137952501856) | (customer['C_ACCTBAL'] < 2183.2939067173406)][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] < 20) | (nation['N_NATIONKEY'] >= 6) | (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] < 23)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NAME'] != 'K') | (nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] == 'n')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 17) & (nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] > 22) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] == 7899.992211058501) & (customer['C_PHONE'] != '2') | (customer['C_CUSTKEY'] <= 5) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_COMMENT'] == 'c')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'p') & (customer['C_CUSTKEY'] >= 11) | (customer['C_CUSTKEY'] >= 48) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '3')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('d')) & (customer['C_COMMENT'] != 'l') | (customer['C_COMMENT'] == 'd') & (customer['C_CUSTKEY'] >= 90) | (customer['C_CUSTKEY'] != 64) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING']))].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'] != 'V')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] != 'V')].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] > 9) | (customer['C_ADDRESS'] != 'M') & (customer['C_COMMENT'] == 'g') & (customer['C_COMMENT'] != 'h') & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '3') | (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] != 'a')].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 234) | (orders['O_CUSTKEY'] != 35619) | (orders['O_ORDERKEY'] >= 136) & (orders['O_COMMENT'] != 'y')].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] != 60177) | (orders['O_ORDERKEY'] == 87) & (orders['O_COMMENT'] != 'u') & (orders['TOTALPRICE'] != 146558.23897401989) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] < 218402.77256723162) & (orders['O_COMMENT'] == 'u')].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] < 398) | (orders['O_ORDERKEY'] > 725) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW', '3-MEDIUM']))].merge(customer.merge(nation[(nation['N_NAME'] == 'K') & (nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] <= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] > 92175) & (orders['ORDERDATE'] == '1992-01-13') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'] == 'C')][['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED'])) | (orders['O_ORDERKEY'] != 219) | (orders['TOTALPRICE'] < 159038.54215325808) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] >= 111) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'O')][['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') | (orders['O_ORDERKEY'] <= 324)][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_ADDRESS'] == 'd') | (customer['C_ADDRESS'].str.startswith(',')) | (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] != 23) & (nation['N_NAME'] != 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] != 137) & (orders['ORDERDATE'] == '1992-01-13')][['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] != 44) | (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['O_COMMENT'] != ',') | (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] > 187197.598775295) | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_ORDERKEY'] > 47) & (orders['O_ORDERKEY'] < 363) | (orders['O_COMMENT'].str.startswith('n'))].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('count')

orders[(orders['O_COMMENT'] != 'uri') & (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] <= -327.0462793157161) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'w') | (customer['C_CUSTKEY'] > 87) | (customer['C_COMMENT'] != '.') | (customer['C_ADDRESS'].str.startswith('F')) | (customer['C_ADDRESS'] != 'x')][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'ly ') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['TOTALPRICE'] > 230162.64711344294) & (orders['ORDERSTATUS'] != 'P')].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 20)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 41146) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_ORDERKEY'] >= 453) | (orders['O_COMMENT'] != 'i')].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('count')

orders[(orders['O_ORDERKEY'] < 104) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'] != 'h')].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 512) & (orders['TOTALPRICE'] < 186537.23752613884) & (orders['O_COMMENT'] != '.') & (orders['O_CUSTKEY'] == 92540)].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 245575.35651634916) | (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] < 119026.34404821695) & (orders['O_COMMENT'] == 'j') & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['O_COMMENT'] == ' re')].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 4944.39680233147) & (customer['C_ADDRESS'] == 'P')][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] >= 127467) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '5-LOW'])) | (orders['O_COMMENT'].str.startswith('n'))].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE']))][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 37759) & (orders['O_CUSTKEY'] >= 112365) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] > 71219) | (orders['CLERK'] == 'C')][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE']).agg('count')

orders[(orders['TOTALPRICE'] > 156176.35192359268) | (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'] != 'w') | (orders['O_ORDERKEY'] != 670)][['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 323449.30596921203) | (orders['O_COMMENT'] != 's') & (orders['O_COMMENT'] != 'a') & (orders['O_COMMENT'] == 'j') & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 81283.59481426206) & (orders['O_COMMENT'] == 'uri')].merge(customer[(customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'].str.startswith('H')) | (customer['C_COMMENT'].str.startswith('s')) & (customer['C_ACCTBAL'] < -881.6361940433104) | (customer['C_COMMENT'] == 'p')][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] >= 2834.4573362939764) | (customer['C_ACCTBAL'] > 1487.7164391131669) | (customer['C_ADDRESS'].str.startswith('a')) | (customer['C_ACCTBAL'] < 4721.962311030329)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_PHONE']).agg('count')

orders[['SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] > 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] == 'h') & (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ADDRESS'] != 'O') | (customer['C_ADDRESS'].str.startswith('u')) & (customer['C_ACCTBAL'] > 8875.002548374505) & (customer['C_COMMENT'] != 'e') & (customer['C_ACCTBAL'] == 5612.872011474374)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['PT_COMMENT'].str.startswith('x')) & (part['SIZE'] < 42) | (part['PT_COMMENT'] == 'the') & (part['BRAND'].isin(['Brand#41'])) & (part['MFGR'] == 'Manufacturer#1') & (part['TYPE'] == 'M') & (part['CONTAINER'] != 'MED')][['MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['MFGR', 'P_NAME']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] > 129) & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] >= 179) & (part['TYPE'] == 'M') | (part['TYPE'] == 'E') & (part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'y')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']].groupby(by=['PT_COMMENT', 'SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] >= 911.7307309091915) | (part['P_PARTKEY'] == 34) & (part['P_PARTKEY'] < 64) & (part['TYPE'].str.startswith('P')) & (part['CONTAINER'] == 'SM') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1'])) & (part['P_PARTKEY'] >= 98) & (part['BRAND'].isin(['Brand#35'])) | (part['SIZE'] <= 21)][['P_NAME', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']].groupby(by=['P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] > 26) | (part['TYPE'] != 'L') & (part['BRAND'] != 'Brand#53') & (part['TYPE'] == 'M') | (part['RETAILPRICE'] > 933.4352919049314) & (part['P_NAME'] != 'i') & (part['RETAILPRICE'] != 986.8179740030898) | (part['P_PARTKEY'] < 120)][['RETAILPRICE', 'TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'MFGR']].groupby(by=['PT_COMMENT', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_NAME'].str.startswith('d')) | (part['RETAILPRICE'] == 1035.2816247286648) | (part['TYPE'] != 'STA') & (part['TYPE'].str.startswith('E')) & (part['CONTAINER'].str.startswith('MED')) & (part['TYPE'] != 'SMA') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1'])) | (part['BRAND'].isin(['Brand#51', 'Brand#11', 'Brand#31', 'Brand#45', 'Brand#32', 'Brand#15', 'Brand#41', 'Brand#21', 'Brand#25', 'Brand#52', 'Brand#13', 'Brand#44', 'Brand#34'])) & (part['PT_COMMENT'] != 'g')][['MFGR', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 18) | (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_COMMENT'] != 's')].merge(nation[(nation['N_NATIONKEY'] >= 0)].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 2038) | (partsupp['PS_SUPPKEY'] <= 7492) & (partsupp['P_COMMENT'] != 'a')][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] == ' fi') | (part['P_PARTKEY'] <= 148) | (part['TYPE'] == 'P') & (part['BRAND'].isin(['Brand#33', 'Brand#14', 'Brand#24', 'Brand#13', 'Brand#21', 'Brand#34', 'Brand#43', 'Brand#42', 'Brand#31', 'Brand#41', 'Brand#11', 'Brand#55', 'Brand#32', 'Brand#15', 'Brand#54'])) & (part['P_PARTKEY'] < 66) | (part['BRAND'] == 'Brand#22') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 3015) & (partsupp['P_COMMENT'] == ' th') | (partsupp['AVAILQTY'] < 6902) | (partsupp['P_COMMENT'] != 'are') | (partsupp['P_COMMENT'] == 'p')][['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 9398) & (partsupp['P_COMMENT'].str.startswith('r'))].merge(part[(part['PT_COMMENT'] != 'ss ') | (part['PT_COMMENT'] == 'g') & (part['CONTAINER'] != 'LG') | (part['BRAND'] == 'Brand#35') & (part['MFGR'] != 'Manufacturer#1')][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 24) & (partsupp['P_COMMENT'] != ' th') & (partsupp['P_COMMENT'] != 'r')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] > 127)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 1)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'y')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 19) & (partsupp['PS_SUPPKEY'] < 6718) & (partsupp['AVAILQTY'] > 4378)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 188)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 29) & (partsupp['PS_PARTKEY'] != 17) & (partsupp['PS_PARTKEY'] >= 33) & (partsupp['PS_PARTKEY'] > 6) & (partsupp['PS_PARTKEY'] <= 36)].merge(part[['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 12) & (partsupp['PS_PARTKEY'] == 19)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] != 37) | (part['SIZE'] < 23) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) | (part['BRAND'] == 'Brand#31') & (part['CONTAINER'].str.startswith('JUMBO'))][['CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 5038) & (partsupp['P_COMMENT'] == 'e') & (partsupp['AVAILQTY'] > 4536) | (partsupp['PS_SUPPKEY'] < 4444) & (partsupp['PS_SUPPKEY'] >= 4344)].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 4807) & (partsupp['AVAILQTY'] <= 5487) | (partsupp['P_COMMENT'] != 'x') | (partsupp['SUPPLYCOST'] >= 374.6434884449898) | (partsupp['AVAILQTY'] == 558)].merge(supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] < 178) & (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('h'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 2959)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['TYPE'] == 'L') & (part['RETAILPRICE'] == 1024.9687124057655) | (part['P_PARTKEY'] != 139) & (part['SIZE'] != 15) & (part['SIZE'] >= 39)][['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'e') & (partsupp['PS_PARTKEY'] < 46) | (partsupp['AVAILQTY'] != 4876) | (partsupp['PS_PARTKEY'] < 48)][['PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('!')) | (part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'].str.startswith('g'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'i') | (partsupp['AVAILQTY'] > 7828) | (partsupp['SUPPLYCOST'] < 245.97810189337235) | (partsupp['SUPPLYCOST'] <= 58.52665025271385) | (partsupp['AVAILQTY'] == 2592)][['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'o') & (partsupp['PS_SUPPKEY'] <= 823) | (partsupp['PS_PARTKEY'] != 45)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] == 'the') | (supplier['S_PHONE'].str.startswith('28-'))][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'r')][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 5) & (supplier['S_ADDRESS'] == 'r') | (supplier['S_ADDRESS'] != 'C') & (supplier['S_ADDRESS'] != 'P') & (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'].str.startswith('28-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['P_COMMENT'].str.startswith('the')) | (partsupp['PS_SUPPKEY'] >= 7034)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] <= 170) & (supplier['S_PHONE'] == '17-') | (supplier['S_NATIONKEY'] < 18) & (supplier['S_SUPPKEY'] >= 169) & (supplier['S_SUPPKEY'] == 41)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['AVAILQTY'] >= 8520) | (partsupp['PS_PARTKEY'] < 34)].merge(supplier[(supplier['S_NATIONKEY'] < 0)][['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 785.5735928787582) & (partsupp['SUPPLYCOST'] <= 366.7195132525287) | (partsupp['P_COMMENT'] != 'f') | (partsupp['PS_SUPPKEY'] != 2918)][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] == 984.8182512139059)][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 939.4422322757273) & (partsupp['PS_PARTKEY'] != 12)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['MFGR', 'TYPE', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 220.72917445577013) & (partsupp['PS_SUPPKEY'] <= 2395) | (partsupp['PS_PARTKEY'] != 42)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 362.94036636341514) | (partsupp['AVAILQTY'] > 5217) | (partsupp['PS_SUPPKEY'] > 3944)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 964.5661079961399) | (part['BRAND'].isin(['Brand#15', 'Brand#33', 'Brand#44', 'Brand#42', 'Brand#23', 'Brand#41', 'Brand#51'])) | (part['TYPE'].str.startswith('P')) & (part['P_NAME'].str.startswith('b')) | (part['PT_COMMENT'].str.startswith('a'))][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 116.44200159670953)].merge(part[['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'BRAND', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 379.1633671587258)].merge(part[(part['P_NAME'].str.startswith('t')) & (part['RETAILPRICE'] != 1045.2797651250003) | (part['MFGR'] == 'Manufacturer#2') | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#2') | (part['BRAND'] == 'Brand#14') & (part['TYPE'] != 'E') & (part['TYPE'].str.startswith('M')) & (part['MFGR'].isin(['Manufacturer#5']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#51') | (part['RETAILPRICE'] >= 1032.381254286748) | (part['P_PARTKEY'] > 179) | (part['MFGR'].isin(['Manufacturer#3'])) & (part['BRAND'] == 'Brand#52') & (part['PT_COMMENT'] == 'g') | (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'] == 'STA')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'y') & (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_SUPPKEY'] != 181) | (supplier['S_PHONE'] == '1') & (supplier['S_ACCTBAL'] >= 2225.3346037441897) | (supplier['S_NATIONKEY'] <= 1) | (supplier['S_PHONE'] == '3')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] == 'm') & (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] < 46) | (part['BRAND'] != 'Brand#53')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] > 9) & (supplier['S_ACCTBAL'] == 242.50239439721054)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] <= 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] > 148) | (supplier['S_ADDRESS'] == 'u') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] != 111)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] == 'b') & (part['P_PARTKEY'] <= 10) & (part['P_NAME'] == 'g') & (part['RETAILPRICE'] <= 1055.2820050646435) & (part['MFGR'].isin(['Manufacturer#3'])) | (part['MFGR'] == 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'G')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'].str.startswith('B'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 14) | (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] < 12) & (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8604.31051222888)].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] != 'J')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8778.357868738463) | (supplier['S_ADDRESS'] == 'L')].merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '5') & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'] == ' ') & (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'].str.startswith('28-'))].merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_NATIONKEY'] > 3) & (nation['N_NATIONKEY'] > 8)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'H') | (supplier['S_ADDRESS'] != 'k') | (supplier['S_NATIONKEY'] >= 19) | (supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_ADDRESS'].str.startswith('2')) & (supplier['S_COMMENT'] == 'j') & (supplier['S_SUPPKEY'] == 31)].merge(nation[(nation['N_NATIONKEY'] == 20) & (nation['N_COMMENT'] == 'r')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'U') & (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'j') & (supplier['S_NATIONKEY'] == 4) | (supplier['S_ACCTBAL'] == 1806.8509766729237) | (supplier['S_ADDRESS'] != 'X') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'] == 'C') & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'I')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == '1') | (supplier['S_ADDRESS'] == '4') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'l')].merge(nation[(nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == '2') & (supplier['S_NATIONKEY'] <= 20) & (supplier['S_NATIONKEY'] == 22) & (supplier['S_COMMENT'].str.startswith('l'))].merge(nation[(nation['N_NATIONKEY'] != 16) | (nation['N_COMMENT'].str.startswith('c'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == '3') | (supplier['S_SUPPKEY'] > 59) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] < -367.61292967742713) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 9)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('F')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_ACCTBAL'] >= 6863.761530697767)].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] != 10)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('s')) & (supplier['S_ACCTBAL'] != 2435.0946019672037) | (supplier['S_COMMENT'].str.startswith(','))][['S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('u')) | (supplier['S_PHONE'] == '17-') | (supplier['S_SUPPKEY'] < 26) & (supplier['S_ADDRESS'] == 'd') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 181)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'bli') & (supplier['S_NATIONKEY'] > 19) & (supplier['S_COMMENT'] == ',')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_NATIONKEY'] == 13) | (supplier['S_ACCTBAL'] > 1340.0752021295164) & (supplier['S_ACCTBAL'] == 9190.831939774955) & (supplier['S_ADDRESS'] == 'W')].merge(nation[(nation['N_NATIONKEY'] <= 21) | (nation['N_NAME'] == 'J')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == '9') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('1')) & (supplier['S_ACCTBAL'] >= 8133.312858506381) | (supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_ACCTBAL'] != 899.2534189594699)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] >= 1705.740638000282) & (supplier['S_ACCTBAL'] < 5866.559821281297)].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] >= 11)].merge(region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == 5290.407305698131)][['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'n')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 14) & (supplier['S_SUPPKEY'] < 170) & (supplier['S_SUPPKEY'] < 107) & (supplier['S_SUPPKEY'] == 173)][['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 5) | (supplier['S_COMMENT'] != 'o') | (supplier['S_ACCTBAL'] < 5193.649563689964) & (supplier['S_ACCTBAL'] == 9169.512036170343) | (supplier['S_ACCTBAL'] > 9132.279953387004) | (supplier['S_ADDRESS'] != 'K')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 20) | (supplier['S_PHONE'] != '2') | (supplier['S_PHONE'] != '17-')][['S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_ADDRESS'].str.startswith('9')) | (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_ACCTBAL'] >= -426.4660623792686) | (supplier['S_COMMENT'] == 'g') & (supplier['S_ACCTBAL'] > 9541.922696948406) & (supplier['S_ADDRESS'].str.startswith('S'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 105) & (supplier['S_SUPPKEY'] >= 46) & (supplier['S_ADDRESS'] == 'd') & (supplier['S_SUPPKEY'] <= 96) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_ACCTBAL'] >= 2922.279549681921)].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] == 'K') & (nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 188) & (supplier['S_COMMENT'] != 't') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 6) & (supplier['S_PHONE'] == '28-')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] <= 15)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] > 11)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] == 17)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'].str.startswith('S'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 19) | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 9224.204072727929) & (customer['C_NATIONKEY'] <= 9) & (customer['C_CUSTKEY'] != 50) | (customer['C_ADDRESS'] == '4') | (customer['C_COMMENT'] == 'w') & (customer['C_PHONE'] == '25-')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'K') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] != 1)][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'T')][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'g') & (customer['C_ADDRESS'] != 'b') | (customer['C_ADDRESS'] == 's') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] > 2258.941031650819) | (customer['C_CUSTKEY'] > 83)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == ',') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ACCTBAL'] >= 9709.636750956597) & (customer['C_NATIONKEY'] >= 10) | (customer['C_ADDRESS'] != '6') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] == 32) & (customer['C_PHONE'].str.startswith('27-'))][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'g') & (customer['C_COMMENT'] != 'r') | (customer['C_NATIONKEY'] == 21) & (customer['C_NATIONKEY'] != 17) & (customer['C_COMMENT'] == 'w') & (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'l') & (customer['C_ACCTBAL'] <= 9969.928460755807) & (customer['C_CUSTKEY'] < 16) | (customer['C_ADDRESS'] != 'B') | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_PHONE'].str.startswith('18-'))].merge(nation[(nation['N_NATIONKEY'] != 20)].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 54) | (customer['C_ADDRESS'] != 'a') | (customer['C_PHONE'] != '18-') | (customer['C_COMMENT'] != 'o') | (customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] == 39) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] <= 12) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] != 'r')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] == 25) | (customer['C_ADDRESS'] != 'z') | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 21) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'B') & (customer['C_CUSTKEY'] <= 93) | (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_NATIONKEY'] < 0) | (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('M'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 84) | (customer['C_CUSTKEY'] < 59) & (customer['C_ADDRESS'] == 'f') & (customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'] != 'w') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '13-') | (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 9592.763904475554) | (customer['C_CUSTKEY'] != 22) | (customer['C_COMMENT'] != 'i') | (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'].str.startswith('4'))].merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '1') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'K') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] > 9) | (customer['C_NATIONKEY'] <= 7) & (customer['C_COMMENT'] == 'l')][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']].groupby(by=['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] >= 5) | (customer['C_NATIONKEY'] <= 1)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 7)].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] != 21)].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 17) | (customer['C_NATIONKEY'] < 10) & (customer['C_COMMENT'] != 'y') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] == '2')][['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] != 3525.1978759001486)][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] <= 82) | (customer['C_PHONE'] != '22-') & (customer['C_NATIONKEY'] != 6) | (customer['C_ACCTBAL'] > 9659.709149739889)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_CUSTKEY'] > 73) | (customer['C_ACCTBAL'] < -741.7252665823912) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD', 'BUILDING']))][['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] != 'a')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_ACCTBAL'] >= 8450.702795770036) | (customer['C_ACCTBAL'] >= 2060.9765395675495) | (customer['C_COMMENT'].str.startswith('e')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] < 16)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_COMMENT'].str.startswith('r'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith('u')) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] == 'C')][['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] != 23)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] >= 97418) | (orders['O_COMMENT'] != '-') & (orders['O_COMMENT'] != 'c') & (orders['O_CUSTKEY'] == 141333) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] < 341259.82798394875) & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] > 106173)].merge(customer[(customer['C_COMMENT'] == 'c') & (customer['C_COMMENT'] != 'w') | (customer['C_NATIONKEY'] > 9) | (customer['C_NATIONKEY'] < 5) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_PHONE'] == '22-') | (customer['C_NATIONKEY'] == 21) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 9455.102184653559) & (supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_ADDRESS'].str.startswith('Q')) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '17-')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1052.0132870892521) | (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] >= 61) | (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] != 40) | (part['TYPE'] != 'SMA') & (part['RETAILPRICE'] < 981.7054850721307) & (part['SIZE'] == 39) | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.06497447426426935) & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['L_SUPPKEY'] > 4861) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 250.26700032831872)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.07421836017610779) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_ORDERKEY'] != 52) & (lineitem['EXTENDEDPRICE'] <= 72559.6545130779) & (lineitem['L_SUPPKEY'] != 8202) | (lineitem['L_ORDERKEY'] < 72)].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'u')][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

lineitem[(lineitem['DISCOUNT'] == 0.06479425791197495) & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['SHIPDATE'] <= '1992-04-27')][['QUANTITY', 'L_COMMENT', 'SHIPDATE', 'SHIPMODE', 'DISCOUNT', 'TAX', 'RETURNFLAG', 'COMMITDATE', 'RECEIPTDATE', 'LINESTATUS']].groupby(by=['RECEIPTDATE', 'RETURNFLAG', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] < 38471.76617904168) & (lineitem['L_COMMENT'] != 'o') | (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['LINENUMBER'] == 2) | (lineitem['RETURNFLAG'] != 'A')].merge(orders[(orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] < 103) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 't') & (orders['O_CUSTKEY'] == 48332) | (orders['ORDERSTATUS'].isin(['F', 'P']))][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 77120.02871282634) | (lineitem['EXTENDEDPRICE'] <= 47123.536747134065) | (lineitem['L_SUPPKEY'] >= 825) | (lineitem['L_ORDERKEY'] > 145)][['SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY', 'DISCOUNT', 'RECEIPTDATE', 'SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINESTATUS']).agg('count')

lineitem[(lineitem['LINENUMBER'] != 5) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['LINENUMBER'] >= 6) & (lineitem['SHIPMODE'] == 'REG AIR')].merge(partsupp[(partsupp['AVAILQTY'] >= 2826)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] <= 2) & (lineitem['QUANTITY'] != 17) | (lineitem['L_ORDERKEY'] > 183) | (lineitem['L_COMMENT'] != 'j') & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['EXTENDEDPRICE'] > 85541.33376577418) | (lineitem['COMMITDATE'] >= '1998-10-16')].merge(partsupp.merge(part[(part['BRAND'] != 'Brand#42') & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] > 91) & (part['PT_COMMENT'].str.startswith('y')) | (part['PT_COMMENT'] == 'w') | (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] == 34) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == ' re') & (lineitem['LINENUMBER'] <= 4) | (lineitem['SHIPMODE'] != 'AIR')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 15) | (partsupp['AVAILQTY'] > 7241) & (partsupp['SUPPLYCOST'] < 441.8521834083948) & (partsupp['P_COMMENT'] != ' ')].merge(part[['PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('o')) | (lineitem['L_ORDERKEY'] <= 139) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['LINENUMBER'] > 2) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_ORDERKEY'] > 93) & (lineitem['L_ORDERKEY'] == 108) & (lineitem['L_PARTKEY'] == 197626)].merge(partsupp.merge(part[['PT_COMMENT', 'MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('p')) | (lineitem['DISCOUNT'] < 0.05690827357039227) & (lineitem['L_SUPPKEY'] >= 5418) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'AIR', 'MAIL', 'TRUCK', 'SHIP'])) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPMODE'] != 'FOB') | (lineitem['L_PARTKEY'] <= 133065)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 640) | (partsupp['PS_PARTKEY'] == 14) & (partsupp['P_COMMENT'] != 'p') | (partsupp['SUPPLYCOST'] < 29.305200398349577) & (partsupp['AVAILQTY'] >= 8552)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 47) & (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'SHIP', 'TRUCK', 'MAIL', 'AIR', 'FOB'])) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_ORDERKEY'] == 109) & (lineitem['L_SUPPKEY'] >= 1446) & (lineitem['SHIPMODE'] == 'AIR') | (lineitem['L_SUPPKEY'] > 3087)].merge(orders[['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] == 158) & (lineitem['L_SUPPKEY'] == 3572) | (lineitem['EXTENDEDPRICE'] != 3534.5608976992003) | (lineitem['LINENUMBER'] <= 5) | (lineitem['L_PARTKEY'] <= 40696) | (lineitem['TAX'] == 0.026379442122924753) | (lineitem['LINENUMBER'] > 4) & (lineitem['L_ORDERKEY'] != 1) | (lineitem['DISCOUNT'] < 0.03837501564240878) | (lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '32-')][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] < 193616) & (lineitem['LINENUMBER'] >= 4) & (lineitem['TAX'] < 0.012255240502326972) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['RETURNFLAG'] == 'N')].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['P_NAME', 'TYPE', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] == 195843) & (lineitem['L_PARTKEY'] < 56953) | (lineitem['QUANTITY'] != 38) | (lineitem['TAX'] == 0.020469416920285068) & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_COMMENT'] == 'ly ') & (lineitem['LINENUMBER'] > 1) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['EXTENDEDPRICE'] != 68382.20294452552) | (lineitem['TAX'] == 0.06272642004545992)].merge(orders[(orders['O_ORDERKEY'] <= 285) & (orders['O_CUSTKEY'] <= 135946)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 153124) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_SUPPKEY'] <= 7208) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_PARTKEY'] <= 137552) & (lineitem['TAX'] == 0.024732452137311338)].merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] < 34834.04956914228) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED'])) | (orders['O_COMMENT'] != 'q') & (orders['TOTALPRICE'] > 324359.276126118) | (orders['SHIPPRIORITY'] < 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] >= 2874) | (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['L_COMMENT'].str.startswith('r'))].merge(partsupp[(partsupp['AVAILQTY'] >= 5078) & (partsupp['P_COMMENT'].str.startswith('r'))].merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 45) & (lineitem['LINENUMBER'] != 5) | (lineitem['DISCOUNT'] != 0.09429417890878844)].merge(orders[(orders['O_CUSTKEY'] > 34073) & (orders['O_CUSTKEY'] != 64942) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] == 20)].merge(orders.merge(customer[(customer['C_COMMENT'] != 'q') & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_PHONE'] == '1') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'x') | (customer['C_ADDRESS'] != 'u') & (customer['C_CUSTKEY'] != 92)].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] < 20) | (nation['N_NATIONKEY'] < 20)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['DISCOUNT'] >= 0.07124636112802576) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_PARTKEY'] != 172848) & (lineitem['EXTENDEDPRICE'] >= 33375.30594870333) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_SUPPKEY'] <= 4429) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'SHIP', 'FOB', 'TRUCK', 'AIR', 'MAIL']))].merge(partsupp[(partsupp['PS_PARTKEY'] <= 33) | (partsupp['PS_PARTKEY'] <= 2) & (partsupp['PS_PARTKEY'] == 29)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06')][['L_PARTKEY', 'L_SUPPKEY', 'SHIPDATE', 'RECEIPTDATE', 'DISCOUNT', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_PARTKEY'] < 123402) | (lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL', 'RAIL', 'FOB', 'AIR', 'TRUCK', 'SHIP'])) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['TAX'] <= 0.012554719131518892) & (lineitem['L_SUPPKEY'] > 4143) | (lineitem['TAX'] < 0.018939487056181783) | (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['DISCOUNT'] == 0.06918248664900649)].merge(partsupp[(partsupp['AVAILQTY'] != 2309) & (partsupp['SUPPLYCOST'] > 57.485931336474756) & (partsupp['P_COMMENT'].str.startswith('are'))][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['LINENUMBER'] <= 5)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['PS_PARTKEY'] != 45) & (partsupp['PS_SUPPKEY'] <= 1368)].merge(part[(part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] >= 2) & (part['SIZE'] >= 43) | (part['P_PARTKEY'] <= 177) | (part['SIZE'] == 10) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) | (part['SIZE'] > 5) | (part['P_PARTKEY'] >= 81) & (part['BRAND'].isin(['Brand#35', 'Brand#41', 'Brand#42', 'Brand#12', 'Brand#15', 'Brand#23', 'Brand#13', 'Brand#11', 'Brand#53', 'Brand#33', 'Brand#21']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['DISCOUNT'] <= 0.07212930641318423) | (lineitem['RETURNFLAG'].isin(['N', 'A']))].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] > 21)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['L_PARTKEY'] < 177650) & (lineitem['QUANTITY'] >= 47) | (lineitem['LINENUMBER'] <= 4) & (lineitem['L_COMMENT'] != ',') | (lineitem['L_SUPPKEY'] == 3262) & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['DISCOUNT'] < 0.07681524717761351) | (lineitem['LINESTATUS'] == 'O')].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE']))].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['P_NAME'].str.startswith('o')) & (part['P_PARTKEY'] > 84) | (part['RETAILPRICE'] >= 1010.8817176456322) | (part['P_NAME'] == 'h') & (part['PT_COMMENT'] != 'g') & (part['RETAILPRICE'] < 943.4268047142536) & (part['TYPE'] == 'E') & (part['BRAND'] != 'Brand#55')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'LINESTATUS', 'COMMITDATE', 'SHIPMODE', 'DISCOUNT']].merge(orders[['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT', 'LINENUMBER', 'RECEIPTDATE']].merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 6)].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'LINESTATUS', 'RETURNFLAG', 'LINENUMBER', 'TAX', 'SHIPMODE', 'RECEIPTDATE']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] <= 131) & (part['SIZE'] > 37) | (part['SIZE'] <= 8) | (part['P_NAME'] == 'g') | (part['CONTAINER'].str.startswith('MED'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'RETURNFLAG', 'TAX', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] == 263.3361955801704) & (partsupp['P_COMMENT'] == 'o')].merge(part[['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPDATE', 'RECEIPTDATE']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] != 'MED') & (part['RETAILPRICE'] > 1088.1849778393957) & (part['RETAILPRICE'] > 1093.132177481297) | (part['PT_COMMENT'] == 'p') & (part['CONTAINER'] == 'SM') | (part['PT_COMMENT'].str.startswith('w'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'L_ORDERKEY', 'L_PARTKEY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'DISCOUNT']].merge(orders[['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_NATIONKEY'] != 7) & (nation['N_NATIONKEY'] == 9) | (nation['N_NAME'] != 'A')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'A') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'] == 'E')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] < 3339.5500679995257) | (customer['C_PHONE'] != '27-') | (customer['C_PHONE'] == '18-')][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] != 8) & (nation['N_COMMENT'] != 'e')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 9954.861598100653) | (customer['C_ACCTBAL'] <= -515.0647651432603) | (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NATIONKEY'] > 17) & (customer['C_NATIONKEY'] <= 15) & (customer['C_CUSTKEY'] >= 27) & (customer['C_ADDRESS'] == 'o') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('L')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] <= 3559.1314757380705) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 2) | (customer['C_CUSTKEY'] >= 48)][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'p') & (customer['C_NATIONKEY'] >= 19) & (customer['C_NATIONKEY'] <= 13) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'E') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_CUSTKEY'] != 64) | (customer['C_COMMENT'] == 'g')].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] <= 22) & (customer['C_CUSTKEY'] != 64) | (customer['C_COMMENT'] == 'g') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_PHONE'] == '18-') | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] < 95) | (customer['C_COMMENT'] != 'c')][['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY'])) & (customer['C_COMMENT'].str.startswith('k')) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] != 'e') & (customer['C_ACCTBAL'] == 3797.3439355655983)].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] == 471) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] < 112908.73287160548) & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] <= 203336.4880329953) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '5-LOW']))].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] >= 601) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] <= 259723.65183691733) | (orders['O_CUSTKEY'] < 40802)].merge(customer[(customer['C_CUSTKEY'] == 91) | (customer['C_ADDRESS'] != 'i') | (customer['C_ACCTBAL'] <= -802.641945603017) & (customer['C_NATIONKEY'] != 5) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_COMMENT'] == 'e') | (customer['C_PHONE'] == '1')][['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] != 332) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] != 'C')].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] != 'h') & (orders['ORDERSTATUS'].isin(['F']))].merge(customer[(customer['C_ADDRESS'] == '9') & (customer['C_PHONE'] != '22-') | (customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] != 15) & (customer['C_COMMENT'] == 'c') & (customer['C_COMMENT'] != 'i') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] != 'C')][['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] == 'w') & (customer['C_NATIONKEY'] > 11) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] > 116569) | (orders['O_COMMENT'].str.startswith('i')) & (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] < 292312.87033176137) | (orders['ORDERSTATUS'] == 'O')].merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_CUSTKEY'] > 135887) | (orders['ORDERDATE'] != '1992-01-13') & (orders['TOTALPRICE'] >= 99450.22721044689) | (orders['O_COMMENT'] == ',') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] <= '1998-07-21')][['ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['O_COMMENT', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] == 177) & (orders['O_CUSTKEY'] > 51361)].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW'])) | (orders['O_ORDERKEY'] > 296)].merge(customer[(customer['C_ACCTBAL'] >= 2670.376913140579)][['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM'])) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['O_CUSTKEY'] > 33293) & (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] <= 299913.98485502024) & (orders['TOTALPRICE'] >= 11734.387652667338)].merge(customer[(customer['C_ACCTBAL'] < 2682.7073387269256) & (customer['C_ACCTBAL'] != 3233.4547129635866) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING'])) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] == 6189.018245905645) | (customer['C_ACCTBAL'] > 4013.9300162222617) | (customer['C_ADDRESS'] != 'r') | (customer['C_ACCTBAL'] <= 7487.331304410638)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('count')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer[(customer['C_ADDRESS'] == 'n') & (customer['C_CUSTKEY'] >= 42) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD']))].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 'a')].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_COMMENT'] == ' ') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] >= 169) & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0)].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'ly ') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_COMMENT'].str.startswith('o')) | (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('-')) & (orders['CLERK'] != 'C')][['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].groupby(by=['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 132510) | (orders['O_CUSTKEY'] < 64451)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 58013) | (orders['ORDERDATE'] > '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] >= 21) | (customer['C_ADDRESS'] != 'o') & (customer['C_COMMENT'] == 'w') | (customer['C_CUSTKEY'] <= 47) & (customer['C_NATIONKEY'] == 13) & (customer['C_ACCTBAL'] >= 7251.766949091497)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 12264) & (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] == '1998-07-21') | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer[(customer['C_COMMENT'].str.startswith('o')) | (customer['C_ADDRESS'].str.startswith('6'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 335) & (orders['TOTALPRICE'] == 146618.36426651565)][['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 769) & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] == 670) | (orders['O_COMMENT'].str.startswith('w')) & (orders['TOTALPRICE'] >= 235771.03089377575) & (orders['O_ORDERKEY'] <= 279) & (orders['O_COMMENT'] == 'z') & (orders['O_ORDERKEY'] < 207) | (orders['O_COMMENT'].str.startswith('t'))].merge(customer[(customer['C_ACCTBAL'] < -490.6634217614049) | (customer['C_ADDRESS'] == '6') | (customer['C_NATIONKEY'] == 9) & (customer['C_ADDRESS'] == 'u') | (customer['C_CUSTKEY'] > 86)][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 114) | (orders['O_CUSTKEY'] >= 140903) & (orders['O_CUSTKEY'] != 33584) & (orders['O_ORDERKEY'] >= 384) | (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] < 64692)].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 16) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '3-MEDIUM'])) | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] > 265063.9436670001)][['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 180186.799368828)].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_PHONE'] == '22-') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] <= 5)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']).agg('mean', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 11) & (customer['C_ADDRESS'] != 'J') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] == 'v')].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] == 16) & (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] <= 39) | (customer['C_CUSTKEY'] <= 7) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_ADDRESS'] == 'F') & (customer['C_NATIONKEY'] > 5)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']).agg('count')

orders[['O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 's') | (part['RETAILPRICE'] >= 1011.0675947943816) | (part['RETAILPRICE'] >= 968.2443775520218) & (part['SIZE'] == 47) & (part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] == 'g') & (part['MFGR'] != 'Manufacturer#4')][['SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'the') & (part['SIZE'] != 27) & (part['P_NAME'].str.startswith('cor')) | (part['PT_COMMENT'] == 'i') | (part['BRAND'].isin(['Brand#23', 'Brand#44', 'Brand#41', 'Brand#34', 'Brand#43', 'Brand#24', 'Brand#25', 'Brand#52', 'Brand#14'])) | (part['PT_COMMENT'] == 'q') | (part['P_NAME'].str.startswith('h')) & (part['P_PARTKEY'] >= 65)][['SIZE', 'P_PARTKEY', 'TYPE', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith(' ')) & (part['P_PARTKEY'] >= 163) & (part['BRAND'] == 'Brand#13') & (part['BRAND'].isin(['Brand#14', 'Brand#23', 'Brand#31', 'Brand#11', 'Brand#32', 'Brand#25', 'Brand#33', 'Brand#55', 'Brand#21', 'Brand#44', 'Brand#22', 'Brand#45', 'Brand#54', 'Brand#41', 'Brand#53', 'Brand#51', 'Brand#15', 'Brand#43', 'Brand#42', 'Brand#12', 'Brand#24', 'Brand#35', 'Brand#34', 'Brand#52'])) & (part['P_NAME'].str.startswith('d')) | (part['TYPE'].str.startswith('E'))][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']].groupby(by=['PT_COMMENT', 'SIZE', 'P_NAME', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] < 21) & (part['RETAILPRICE'] >= 1038.5235613495527) | (part['PT_COMMENT'] != 'i') | (part['PT_COMMENT'] != '!') | (part['RETAILPRICE'] > 1074.5060457578013) | (part['TYPE'] == 'L') | (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] > 142)][['CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'STA') | (part['SIZE'] > 11) & (part['SIZE'] > 2) & (part['P_PARTKEY'] > 146) & (part['SIZE'] != 37)][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']].groupby(by=['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'STA') & (part['TYPE'] == 'STA') & (part['P_PARTKEY'] == 82) | (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] > 93) | (part['BRAND'].isin(['Brand#15', 'Brand#44', 'Brand#52', 'Brand#11', 'Brand#45', 'Brand#31', 'Brand#22', 'Brand#41', 'Brand#51', 'Brand#35', 'Brand#32', 'Brand#55', 'Brand#21', 'Brand#43', 'Brand#25', 'Brand#33', 'Brand#42', 'Brand#24', 'Brand#14', 'Brand#53', 'Brand#13'])) & (part['RETAILPRICE'] != 1000.3953647130287) | (part['SIZE'] > 11)][['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']].groupby(by=['CONTAINER', 'TYPE', 'SIZE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['TYPE'] == 'SMA') | (part['MFGR'] != 'Manufacturer#3') & (part['TYPE'].str.startswith('M')) | (part['RETAILPRICE'] <= 1082.2057236246794)][['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'BRAND', 'RETAILPRICE']).agg('count')

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 12) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] == 129) & (supplier['S_COMMENT'] != 't')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'F')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 1083) & (partsupp['PS_SUPPKEY'] == 4996) & (partsupp['PS_SUPPKEY'] < 3338) & (partsupp['P_COMMENT'] == 'a')].merge(supplier[(supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] <= 6) & (supplier['S_SUPPKEY'] == 180) & (supplier['S_SUPPKEY'] >= 174)].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 372) | (partsupp['P_COMMENT'] != 'q') & (partsupp['AVAILQTY'] <= 8651) & (partsupp['PS_PARTKEY'] != 16) | (partsupp['PS_PARTKEY'] != 25)].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 7818) | (partsupp['AVAILQTY'] < 4380) & (partsupp['P_COMMENT'] == 'v')].merge(part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 1) | (partsupp['PS_SUPPKEY'] >= 7073) | (partsupp['PS_SUPPKEY'] != 6129) | (partsupp['SUPPLYCOST'] <= 749.1258523135909)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'].str.startswith('m')) | (part['P_NAME'].str.startswith('f')) | (part['SIZE'] > 21) & (part['SIZE'] < 32) | (part['PT_COMMENT'] == 'ss ') & (part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] != 71) | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 24) | (partsupp['AVAILQTY'] < 7819)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] == 'j') | (supplier['S_ACCTBAL'] >= 6041.202470029613) & (supplier['S_ACCTBAL'] <= 2810.3422489421073) & (supplier['S_PHONE'] != '17-') & (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_SUPPKEY'] < 166) & (supplier['S_NATIONKEY'] > 9)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 5) | (partsupp['SUPPLYCOST'] < 413.74389620534976) & (partsupp['PS_SUPPKEY'] < 4639)].merge(supplier[(supplier['S_ACCTBAL'] > -125.47039844394772)][['S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] > 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 10)].merge(supplier[(supplier['S_COMMENT'] != 'the') | (supplier['S_PHONE'] == '17-') | (supplier['S_ACCTBAL'] != -838.0228945525038) | (supplier['S_COMMENT'] != 'i') | (supplier['S_ACCTBAL'] > -288.03397813760114) & (supplier['S_NATIONKEY'] >= 12) | (supplier['S_NATIONKEY'] >= 22)][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 18) | (partsupp['AVAILQTY'] > 7699) | (partsupp['PS_PARTKEY'] >= 2) | (partsupp['AVAILQTY'] >= 7141) | (partsupp['AVAILQTY'] <= 3281)].merge(supplier[(supplier['S_ACCTBAL'] > 8447.486370245197) | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_NATIONKEY'] == 9)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 48) | (partsupp['PS_SUPPKEY'] >= 6289) | (partsupp['PS_PARTKEY'] != 1)].merge(supplier[(supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_NATIONKEY'] < 15) | (supplier['S_PHONE'] == '14-')][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6329)].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'J')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1506)][['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 3288) | (partsupp['AVAILQTY'] < 3871) | (partsupp['P_COMMENT'].str.startswith(' th'))][['PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 4848)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'P_NAME', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 7267) | (partsupp['SUPPLYCOST'] > 770.3086742212039)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_NATIONKEY'] > 0) | (nation['N_NATIONKEY'] != 7)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1015) & (partsupp['SUPPLYCOST'] > 58.51388189137484)].merge(supplier[(supplier['S_ACCTBAL'] == 6438.136887440551) | (supplier['S_ACCTBAL'] == 5785.580976508272) & (supplier['S_SUPPKEY'] == 105) & (supplier['S_ADDRESS'].str.startswith('U')) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NATIONKEY'] < 8) | (supplier['S_ADDRESS'].str.startswith('N'))][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['PS_PARTKEY'] < 20)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'K')][['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'are')][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] != 10) | (part['RETAILPRICE'] == 999.4589486387401) & (part['PT_COMMENT'] != 's') & (part['TYPE'].str.startswith('P')) | (part['P_NAME'].str.startswith('t')) | (part['RETAILPRICE'] == 1060.9714822428068)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' ') | (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['P_COMMENT'] == ' th')].merge(supplier[(supplier['S_NATIONKEY'] >= 0) & (supplier['S_ACCTBAL'] == 8052.0866594651225) & (supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] != 'j')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' ') | (partsupp['SUPPLYCOST'] != 720.8450039292866) | (partsupp['AVAILQTY'] < 7832)].merge(part[(part['PT_COMMENT'].str.startswith('o')) | (part['P_PARTKEY'] > 112) | (part['TYPE'] == 'SMA') | (part['RETAILPRICE'] == 939.7693144422676) & (part['P_PARTKEY'] < 72) | (part['BRAND'] == 'Brand#45') | (part['TYPE'] != 'M')][['P_NAME', 'BRAND', 'SIZE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'f') | (partsupp['P_COMMENT'] == ';') & (partsupp['P_COMMENT'] == 'x') & (partsupp['PS_SUPPKEY'] > 4761) & (partsupp['AVAILQTY'] != 9624)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] >= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('are')) & (partsupp['PS_PARTKEY'] > 43)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 155)][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_SUPPKEY'] != 842) & (partsupp['PS_PARTKEY'] < 24) | (partsupp['P_COMMENT'] == ',') & (partsupp['PS_SUPPKEY'] < 5164)].merge(supplier[(supplier['S_COMMENT'] != 'al ') & (supplier['S_ADDRESS'] != 'f') | (supplier['S_ADDRESS'] == 'L') & (supplier['S_COMMENT'] != 'o') | (supplier['S_SUPPKEY'] != 108) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 320.10249899158686) & (partsupp['SUPPLYCOST'] == 148.48290541161688) | (partsupp['SUPPLYCOST'] == 807.4379518978114)].merge(part[(part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] <= 162) & (part['P_NAME'] == 'b') | (part['RETAILPRICE'] != 949.492945015974) | (part['PT_COMMENT'] == 'm') & (part['RETAILPRICE'] >= 928.3543073985403) & (part['RETAILPRICE'] < 907.6575833770768) | (part['MFGR'] != 'Manufacturer#4')][['TYPE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 965.3883030425375)].merge(supplier[(supplier['S_ACCTBAL'] == 1863.0067644464395)].merge(nation[(nation['N_NAME'] != 'U')].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 332.69320945608854)].merge(supplier[(supplier['S_PHONE'].str.startswith('17-'))].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 701.3069364763713) & (partsupp['AVAILQTY'] > 7100) | (partsupp['AVAILQTY'] > 1191) | (partsupp['PS_SUPPKEY'] == 6054) & (partsupp['AVAILQTY'] >= 3020)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 291.40720340406364) | (partsupp['AVAILQTY'] != 2132) | (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['P_COMMENT'] == 'bli')].merge(part[(part['RETAILPRICE'] >= 969.1136692819528) & (part['BRAND'] != 'Brand#42') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] > 1031.076819662351) & (part['TYPE'] == 'L') & (part['TYPE'].str.startswith('L'))][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 772.8400191253681) | (partsupp['AVAILQTY'] >= 4485) | (partsupp['PS_PARTKEY'] <= 29) | (partsupp['P_COMMENT'].str.startswith('i'))].merge(part[['BRAND', 'TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'SIZE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'SIZE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] == 'e')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] > 20) & (supplier['S_SUPPKEY'] <= 107) & (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'] != 'o')][['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 4497.390688092222) & (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'] != ' ') & (supplier['S_SUPPKEY'] >= 31) & (supplier['S_ADDRESS'].str.startswith('F'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] >= 38) & (supplier['S_PHONE'] == '1')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'bis') & (part['SIZE'] <= 10) | (part['RETAILPRICE'] == 1071.8834612512467) | (part['P_PARTKEY'] == 24) | (part['TYPE'] == 'SMA') | (part['PT_COMMENT'] == 'e') | (part['RETAILPRICE'] < 950.0740209919214) & (part['SIZE'] == 10) & (part['BRAND'] == 'Brand#25')][['P_PARTKEY', 'CONTAINER', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] >= 2)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'E') & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 6947.897216090373) & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('K')) & (supplier['S_ADDRESS'] == 'R')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 3288.293637277373) & (supplier['S_NATIONKEY'] != 1) | (supplier['S_SUPPKEY'] != 176) & (supplier['S_SUPPKEY'] == 83) & (supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_SUPPKEY'] == 38) & (supplier['S_NATIONKEY'] <= 10)].merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 1806.1731838114158) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'v') | (supplier['S_NATIONKEY'] > 3) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] < 8433.60175785008)].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NAME'] == 'P')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 3482.8678657343144) & (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] < 27) | (supplier['S_PHONE'] != '3') & (supplier['S_ADDRESS'] != 'X')][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 452.3919105536015) | (supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_ADDRESS'] != 'd') | (supplier['S_NAME'] == 'S')].merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'e') | (supplier['S_ADDRESS'] == 'Y') & (supplier['S_PHONE'] != '28-') & (supplier['S_ACCTBAL'] == 9558.013528577258) & (supplier['S_ADDRESS'].str.startswith('2')) & (supplier['S_NATIONKEY'] == 10)].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'N') | (supplier['S_NATIONKEY'] == 16) & (supplier['S_ADDRESS'] == 'C') | (supplier['S_SUPPKEY'] >= 185)].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] <= 1) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('o')) & (supplier['S_SUPPKEY'] >= 181) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] != 18) & (nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != ' sl') | (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_PHONE'] == '17-')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != ',') & (supplier['S_SUPPKEY'] <= 22) & (supplier['S_ACCTBAL'] < 3371.811177849142) & (supplier['S_SUPPKEY'] < 81)][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'b') & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_NATIONKEY'] < 2) & (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_NAME'] == 'B') | (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'].str.startswith('G'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'i') & (supplier['S_SUPPKEY'] != 159) | (supplier['S_NATIONKEY'] > 23) & (supplier['S_COMMENT'].str.startswith('e'))][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'r') & (supplier['S_SUPPKEY'] != 26) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 793.6134291432709) | (supplier['S_ACCTBAL'] == 7795.043516091827)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'x') & (supplier['S_NATIONKEY'] == 15) & (supplier['S_ACCTBAL'] == 6530.1211756717) & (supplier['S_SUPPKEY'] != 41) | (supplier['S_SUPPKEY'] >= 114) & (supplier['S_SUPPKEY'] > 74) & (supplier['S_PHONE'] == '26-')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] >= 6) & (supplier['S_ACCTBAL'] >= 7619.721372545163)].merge(nation[(nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('bli'))][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] >= 1350.2403839355231) & (supplier['S_SUPPKEY'] != 60) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'es ') | (supplier['S_NATIONKEY'] == 7)].merge(nation[(nation['N_NATIONKEY'] == 20)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('h')) | (supplier['S_SUPPKEY'] >= 138)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] > 22) & (supplier['S_NATIONKEY'] < 16)][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] < 9) | (supplier['S_ACCTBAL'] < 8124.230714763346) & (supplier['S_COMMENT'] != 'a') & (supplier['S_SUPPKEY'] > 50) | (supplier['S_COMMENT'] == '!') & (supplier['S_SUPPKEY'] <= 51) & (supplier['S_SUPPKEY'] == 21)].merge(nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_NATIONKEY'] == 1) & (nation['N_NATIONKEY'] != 16)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 13)][['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 22) | (supplier['S_COMMENT'] != 'j') | (supplier['S_ADDRESS'] == 'P') | (supplier['S_SUPPKEY'] > 19) & (supplier['S_ADDRESS'] == 'x') & (supplier['S_ACCTBAL'] < 7577.888331172774) & (supplier['S_NATIONKEY'] >= 21)].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'AME') | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 23) & (supplier['S_NATIONKEY'] != 1) & (supplier['S_ADDRESS'] == 'l')][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 23) | (supplier['S_PHONE'] == '32-') | (supplier['S_COMMENT'] != '!')][['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] > 8) | (nation['N_NATIONKEY'] <= 14) | (nation['N_REGIONKEY'] <= 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_NATIONKEY'] == 11) & (supplier['S_NATIONKEY'] <= 11) & (supplier['S_COMMENT'] == '.')].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] == 'V')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '14-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_SUPPKEY'] <= 60)].merge(nation.merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_SUPPKEY'] >= 117) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ADDRESS'] != 'C') & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] == 'S')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 1) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 58) & (supplier['S_PHONE'] == '1') & (supplier['S_ACCTBAL'] != 2371.9443549722228) & (supplier['S_NATIONKEY'] <= 1) | (supplier['S_ADDRESS'] != '7')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 20) & (supplier['S_NATIONKEY'] > 14) | (supplier['S_ACCTBAL'] < 5112.635657912696) | (supplier['S_NATIONKEY'] > 16) & (supplier['S_NATIONKEY'] == 11)][['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 90)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 146) | (supplier['S_PHONE'] == '32-') | (supplier['S_SUPPKEY'] > 112)].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] > 16)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] <= 13) | (nation['N_NATIONKEY'] < 5) & (nation['N_NAME'] != 'F')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'] == 'G') | (nation['N_COMMENT'].str.startswith('y'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'] == 'R') | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == 'v') | (nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] != 'V')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] == 'A') | (nation['N_COMMENT'] == 'o')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] != 537.2644247372825) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_NAME'] != 'C')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == -657.977999047778) | (customer['C_NATIONKEY'] == 1) | (customer['C_COMMENT'] == '.') & (customer['C_COMMENT'].str.startswith('u')) & (customer['C_PHONE'].str.startswith('13-'))][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 1263.8095890857903) & (customer['C_ADDRESS'] != 'I') | (customer['C_NATIONKEY'] < 12) | (customer['C_NATIONKEY'] != 0) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_COMMENT'] == ' ')][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 9749.400759218242) | (customer['C_ADDRESS'].str.startswith('s')) & (customer['C_NATIONKEY'] != 4) | (customer['C_PHONE'] != '13-') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NATIONKEY'] < 0) | (customer['C_PHONE'] != '22-')].merge(nation[(nation['N_COMMENT'] != 'r')].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'P') | (customer['C_CUSTKEY'] != 5) | (customer['C_PHONE'] == '18-') & (customer['C_NAME'] != 'C')][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == '3') | (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] < 9) & (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] >= 6558.144371499506)][['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] == 'd') | (customer['C_ACCTBAL'] >= 2667.920876009099) | (customer['C_COMMENT'] == 'g') | (customer['C_NATIONKEY'] > 7) & (customer['C_ADDRESS'].str.startswith('7')) | (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('4')) & (customer['C_COMMENT'] == 's') & (customer['C_NATIONKEY'] != 12) | (customer['C_ACCTBAL'] != 786.2789826803137) | (customer['C_COMMENT'] != 'd') & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('H')) | (customer['C_COMMENT'] != 'i') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 5) | (customer['C_PHONE'].str.startswith('3')) | (customer['C_PHONE'] != '25-')].merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('q')) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] >= 68) & (customer['C_COMMENT'] != 'c') | (customer['C_CUSTKEY'] != 45) & (customer['C_NATIONKEY'] == 22) | (customer['C_ACCTBAL'] <= 2189.430048318404)].merge(nation[(nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 46)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] > -157.78101938264717) & (customer['C_ADDRESS'] == 'z') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] != 97) & (customer['C_ADDRESS'] != 'b')].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 35) | (customer['C_COMMENT'] == 'd') & (customer['C_PHONE'] == '22-') & (customer['C_ADDRESS'] == '7') & (customer['C_COMMENT'] != 'f') | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD']))][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 2) | (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ACCTBAL'] > 3605.082963813111) & (customer['C_NATIONKEY'] < 3) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] > 924.9102013548609)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 11) & (customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) | (customer['C_NATIONKEY'] > 19)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 22) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 47) | (customer['C_ACCTBAL'] > 8997.569974493323) & (customer['C_ACCTBAL'] < 4.75423611096403) | (customer['C_NATIONKEY'] < 5) & (customer['C_ADDRESS'] != '0') | (customer['C_CUSTKEY'] > 46)][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 21) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] >= 7405.380479146268) & (customer['C_CUSTKEY'] == 58) & (customer['C_NATIONKEY'] == 12)][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] == 'G')].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_COMMENT'].str.startswith('i'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] > 0) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] < 88) & (customer['C_ACCTBAL'] <= 796.8301803633253) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] < 4) | (customer['C_COMMENT'] == 'a')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 1) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 9820.988730839028) & (customer['C_PHONE'] == '18-')].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] <= 5) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NATIONKEY'] >= 8) | (customer['C_NATIONKEY'] <= 10) & (customer['C_ACCTBAL'] <= 7543.47266893666)][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] != 17)].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_COMMENT'] != 'o') | (nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] != 'M')].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] != 'p')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] != 13)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] != 'r') & (nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_ADDRESS'] == 'D') & (customer['C_ACCTBAL'] < 2849.1783465462304) & (customer['C_NATIONKEY'] < 12) | (customer['C_PHONE'] != '27-') | (customer['C_NATIONKEY'] >= 14) & (customer['C_CUSTKEY'] >= 4) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] != '25-')].merge(nation.merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] == 'E') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] < 3340.884160840141) & (customer['C_COMMENT'] == 'n')].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) | (orders['O_ORDERKEY'] > 643) & (orders['O_CUSTKEY'] == 143825) & (orders['O_COMMENT'] == 'u') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT', '3-MEDIUM'])) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_COMMENT'].str.startswith('w')) & (orders['ORDERDATE'] > '1992-01-13')][['CLERK', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'CLERK', 'O_COMMENT', 'O_ORDERKEY']).agg('count')

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 71) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'c') | (supplier['S_ACCTBAL'] < -104.61022585546141)].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5842) | (partsupp['PS_SUPPKEY'] <= 1886) | (partsupp['SUPPLYCOST'] > 44.17195043626298) & (partsupp['P_COMMENT'].str.startswith('n')) & (partsupp['AVAILQTY'] == 1007)].merge(part[(part['MFGR'].isin(['Manufacturer#4'])) | (part['SIZE'] < 32) | (part['BRAND'] != 'Brand#33')][['P_PARTKEY', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'SIZE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 2264) & (partsupp['PS_PARTKEY'] != 22) | (partsupp['P_COMMENT'] == 'l')].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'j') & (supplier['S_PHONE'] == '17-') | (supplier['S_COMMENT'] != 'u') | (supplier['S_ACCTBAL'] != 3241.599552817027)].merge(nation[(nation['N_REGIONKEY'] == 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.040402590271082964) & (lineitem['L_SUPPKEY'] == 1479) | (lineitem['L_COMMENT'] == 'o') | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_COMMENT'] == '.') | (lineitem['L_COMMENT'] != 'ly ') | (lineitem['LINENUMBER'] <= 5) & (lineitem['LINENUMBER'] >= 2) | (lineitem['LINESTATUS'] != 'F')][['SHIPDATE', 'COMMITDATE', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] >= 6) & (lineitem['L_PARTKEY'] >= 28886) & (lineitem['L_SUPPKEY'] != 1344) & (lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['RETURNFLAG'] != 'N')][['QUANTITY', 'LINESTATUS', 'COMMITDATE', 'DISCOUNT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_PARTKEY', 'RETURNFLAG', 'TAX']].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['L_ORDERKEY'] >= 166) & (lineitem['L_ORDERKEY'] >= 139) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] == 2) & (lineitem['L_PARTKEY'] < 91270) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['DISCOUNT'] < 0.0778472661505845) & (lineitem['QUANTITY'] >= 29)].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] > 133)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == 'b') | (lineitem['TAX'] > 0.007312576284766781)][['L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'SHIPDATE', 'LINENUMBER', 'SHIPMODE', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] != 181) | (lineitem['L_COMMENT'] != 'y') & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'REG AIR', 'MAIL', 'RAIL', 'FOB', 'AIR']))].merge(partsupp.merge(part[(part['BRAND'] == 'Brand#21') | (part['TYPE'].str.startswith('S')) | (part['BRAND'].isin(['Brand#23'])) & (part['MFGR'] == 'Manufacturer#2') & (part['TYPE'] != 'S') | (part['SIZE'] > 24) | (part['PT_COMMENT'] == 'u') & (part['SIZE'] > 29) | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 191881) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['L_PARTKEY'] != 6565)][['SHIPDATE', 'L_PARTKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] > 2847) & (lineitem['L_ORDERKEY'] < 121)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#3') | (part['MFGR'].isin(['Manufacturer#1'])) & (part['P_NAME'].str.startswith('g')) | (part['P_NAME'] != 'lem')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'TYPE', 'MFGR']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 43) & (lineitem['QUANTITY'] >= 11) | (lineitem['TAX'] <= 0.04451673262523107) & (lineitem['LINENUMBER'] <= 6)].merge(partsupp[(partsupp['AVAILQTY'] >= 9306)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['QUANTITY'] <= 44) & (lineitem['L_ORDERKEY'] > 58) | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_PARTKEY'] <= 106857) | (lineitem['QUANTITY'] != 6) | (lineitem['L_ORDERKEY'] > 100) | (lineitem['L_COMMENT'] != 'i')].merge(partsupp[(partsupp['SUPPLYCOST'] != 741.5784920923235) & (partsupp['PS_PARTKEY'] == 5) | (partsupp['PS_PARTKEY'] < 33) | (partsupp['AVAILQTY'] >= 6305)].merge(supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_ACCTBAL'] <= -26.791442342141863) & (supplier['S_SUPPKEY'] <= 77)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['QUANTITY'] <= 25) | (lineitem['EXTENDEDPRICE'] < 47300.2309307908) & (lineitem['TAX'] > 0.0733806587194082) | (lineitem['LINENUMBER'] < 6) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['EXTENDEDPRICE'] != 35480.36613498269) | (lineitem['SHIPDATE'] != '1992-04-27')].merge(partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) | (part['RETAILPRICE'] == 977.7576733318798)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_SUPPKEY'] >= 5225)][['QUANTITY', 'L_ORDERKEY']].merge(orders[(orders['CLERK'] == 'C') | (orders['TOTALPRICE'] < 241150.1327205944) | (orders['O_COMMENT'] == 'the') & (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['L_SUPPKEY'] < 6961) | (lineitem['DISCOUNT'] != 0.08969966564741924) & (lineitem['DISCOUNT'] >= 0.03424116850082794) | (lineitem['L_ORDERKEY'] == 68) & (lineitem['L_ORDERKEY'] <= 190) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['EXTENDEDPRICE'] >= 32645.06196370884)][['TAX', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPDATE', 'COMMITDATE', 'L_SUPPKEY', 'SHIPMODE', 'DISCOUNT', 'QUANTITY']].groupby(by=['RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON']))].merge(orders[(orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] < 43695) | (orders['O_CUSTKEY'] < 92069) & (orders['O_CUSTKEY'] <= 80705) & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] < 88142.86560578847)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK', 'TOTALPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['L_SUPPKEY'] <= 9839) & (lineitem['EXTENDEDPRICE'] <= 24538.380320423556) | (lineitem['TAX'] >= 0.020395835028027547)][['QUANTITY', 'L_ORDERKEY', 'RECEIPTDATE', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 29) & (supplier['S_SUPPKEY'] < 50)][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'AIR', 'SHIP', 'TRUCK', 'REG AIR'])) & (lineitem['EXTENDEDPRICE'] > 86522.05244090005) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['LINESTATUS'] == 'O') | (lineitem['EXTENDEDPRICE'] < 3407.4210680836313) & (lineitem['TAX'] >= 0.025846260691595378) | (lineitem['LINENUMBER'] < 5)][['EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'SHIPDATE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 49) & (partsupp['SUPPLYCOST'] <= 869.2940173057361) | (partsupp['SUPPLYCOST'] > 697.9538097612717) & (partsupp['PS_PARTKEY'] <= 1) & (partsupp['PS_SUPPKEY'] != 6236)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] < 0.049476348967293894) | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_PARTKEY'] <= 130379) | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_PARTKEY'] > 129343) & (lineitem['L_COMMENT'] != 'l') | (lineitem['L_COMMENT'] == 'u')].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] < 0.0659542793381296)].merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('l')) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 15)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'LINENUMBER', 'L_COMMENT', 'SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp.merge(part[['CONTAINER', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'SHIPMODE', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['P_COMMENT'] != 'o')][['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'TAX', 'RECEIPTDATE', 'DISCOUNT', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY', 'COMMITDATE', 'RETURNFLAG', 'QUANTITY']].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] <= 85156) | (orders['O_COMMENT'] != 'o') | (orders['TOTALPRICE'] > 54960.694575066984) | (orders['O_ORDERKEY'] < 752) | (orders['CLERK'] != 'C')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2201) & (partsupp['AVAILQTY'] >= 6908)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] > -102.28596240569675) & (supplier['S_COMMENT'] != 'g')].merge(nation[(nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] > 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RECEIPTDATE', 'COMMITDATE', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] == 18) | (nation['N_REGIONKEY'] > 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'EXTENDEDPRICE', 'L_ORDERKEY', 'L_SUPPKEY', 'DISCOUNT', 'TAX']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_NATIONKEY'] != 15) | (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'I') & (nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'].str.startswith('B'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] > 11) & (nation['N_NATIONKEY'] == 23)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] < 1238.168478531034) & (customer['C_CUSTKEY'] > 87)][['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] >= 4376.419489134979)][['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'].str.startswith('o'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] > 11) | (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('w')) | (customer['C_ADDRESS'] != 'm') | (customer['C_CUSTKEY'] >= 79)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 126920) & (orders['O_COMMENT'] != 'f') & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] != 65157) & (orders['O_CUSTKEY'] >= 47644) & (orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] == 0)][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C')].merge(customer.merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'].str.startswith('l'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] <= 119451) | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] == 606)].merge(customer[(customer['C_COMMENT'].str.startswith('y')) & (customer['C_NATIONKEY'] > 9) | (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] < 2156.151489647589) & (customer['C_PHONE'] != '25-') | (customer['C_ADDRESS'] == 'B')][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 98.54515607438407) & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '3')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['TOTALPRICE'] != 178941.5867383162) | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] == 68949) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 18)].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] >= 318290.87435842) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] >= 579) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] < '1992-01-13') | (orders['TOTALPRICE'] != 303080.42302825715)][['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != ' re') & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_ORDERKEY'] < 390) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] >= 19485) & (orders['O_ORDERKEY'] == 254) & (orders['O_CUSTKEY'] > 116608)][['O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'i') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] >= 258) & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'] == 'o') | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] < 22601)].merge(customer[(customer['C_ADDRESS'] == 'M') | (customer['C_PHONE'] == '22-') & (customer['C_COMMENT'] != 's') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 51906) & (orders['O_COMMENT'].str.startswith('e'))][['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] != 'r') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] != 9) & (customer['C_ACCTBAL'] <= 4626.360046744661) | (customer['C_NATIONKEY'] <= 20) & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] >= 7) & (customer['C_COMMENT'] != 'r')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 140814) | (orders['TOTALPRICE'] < 244951.48637234597) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'].str.startswith('t')) & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] < '1992-01-13') | (orders['TOTALPRICE'] > 197312.35846653252) | (orders['CLERK'] == 'C')].merge(customer[(customer['C_ACCTBAL'] <= 7116.5377315388805) & (customer['C_ADDRESS'].str.startswith('c')) | (customer['C_COMMENT'] != 'p') & (customer['C_COMMENT'] != 'o') & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 160140.93009471303) | (orders['TOTALPRICE'] < 221550.54852300507) & (orders['ORDERSTATUS'] != 'F')].merge(customer[(customer['C_ADDRESS'].str.startswith('3')) | (customer['C_COMMENT'] == 'i')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 14452.936132082868) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '3-MEDIUM'])) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT', '2-HIGH', '3-MEDIUM'])) & (orders['CLERK'] != 'C')].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 23) & (nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] >= 6)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] != 'w')][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('p'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#52') & (part['SIZE'] >= 13) | (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] != 989.5770946002526) | (part['BRAND'].isin(['Brand#25', 'Brand#51', 'Brand#13', 'Brand#31'])) & (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] != 'Brand#25') & (part['CONTAINER'] != 'MED') & (part['MFGR'] != 'Manufacturer#4')][['BRAND', 'MFGR', 'TYPE', 'P_NAME', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['CONTAINER', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#33') & (part['PT_COMMENT'].str.startswith('a')) & (part['SIZE'] < 30) & (part['P_PARTKEY'] >= 83) | (part['P_NAME'] != 'w') & (part['BRAND'] != 'Brand#35') | (part['RETAILPRICE'] < 935.1422964556358) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4']))][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']].groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'e') | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] > 18) & (part['P_PARTKEY'] == 96) & (part['SIZE'] <= 45) | (part['BRAND'] != 'Brand#15') | (part['TYPE'] != 'E') | (part['BRAND'] == 'Brand#25') | (part['BRAND'].isin(['Brand#41', 'Brand#11', 'Brand#51', 'Brand#21', 'Brand#15', 'Brand#22', 'Brand#43', 'Brand#13', 'Brand#32', 'Brand#55', 'Brand#12']))][['MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 'b') & (part['P_PARTKEY'] < 89) | (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] > 156) & (part['BRAND'] != 'Brand#25') | (part['PT_COMMENT'] != ' ') & (part['BRAND'] != 'Brand#44')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'TYPE', 'CONTAINER', 'MFGR']).agg('count')

part[(part['P_NAME'] != 'v') & (part['TYPE'].str.startswith('L')) | (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] != 'Brand#24') | (part['TYPE'] != 'M') | (part['TYPE'] == 'L') & (part['RETAILPRICE'] == 948.0291136084116)][['MFGR', 'TYPE', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER']).agg('count')

part[(part['P_PARTKEY'] <= 199) & (part['P_PARTKEY'] <= 193) & (part['PT_COMMENT'] != 'p') & (part['CONTAINER'] == 'MED') | (part['CONTAINER'] == 'WRAP')][['SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'TYPE', 'MFGR', 'BRAND', 'SIZE']).agg('count')

part[(part['P_PARTKEY'] == 72) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'].str.startswith('p')) & (part['CONTAINER'] != 'MED') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3'])) | (part['P_NAME'] != 'd') & (part['CONTAINER'] == 'WRAP')][['MFGR', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']].groupby(by=['PT_COMMENT', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] <= 1088.012542469785) | (part['RETAILPRICE'] < 1033.5454826070581) | (part['PT_COMMENT'] != 'k') & (part['CONTAINER'] == 'MED') & (part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] <= 43) & (part['P_NAME'] != 'n') & (part['CONTAINER'] == 'LG') | (part['CONTAINER'] != 'MED')][['TYPE', 'CONTAINER', 'SIZE', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'] != 'i') | (part['SIZE'] >= 9)][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] == ' ') | (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'].str.startswith(' '))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'u') | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 5368.065338216669) | (supplier['S_NATIONKEY'] >= 16) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_PHONE'] == '14-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 4530)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] != 12)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 3853) & (partsupp['AVAILQTY'] <= 8818)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 7)].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_NATIONKEY'] < 22) | (nation['N_NATIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 1823) | (partsupp['PS_SUPPKEY'] >= 2331) | (partsupp['AVAILQTY'] == 3577) | (partsupp['PS_PARTKEY'] > 4)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'WRAP') & (part['P_PARTKEY'] != 10) | (part['PT_COMMENT'].str.startswith('f')) | (part['PT_COMMENT'] == 'i') & (part['RETAILPRICE'] > 1071.9104031215052)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 4418) & (partsupp['PS_PARTKEY'] > 1) & (partsupp['AVAILQTY'] != 6957) & (partsupp['AVAILQTY'] >= 8509)][['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'r') & (part['P_PARTKEY'] == 102) | (part['PT_COMMENT'] == 'r') & (part['RETAILPRICE'] == 990.864992123043) & (part['TYPE'] == 'S') | (part['SIZE'] != 21)][['BRAND', 'P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 4443) & (partsupp['AVAILQTY'] <= 311) | (partsupp['AVAILQTY'] >= 2450) & (partsupp['PS_PARTKEY'] < 14) | (partsupp['P_COMMENT'] == 'x')].merge(part[(part['PT_COMMENT'] == 'o') | (part['PT_COMMENT'] == 'g') & (part['SIZE'] >= 4) & (part['SIZE'] >= 10) & (part['BRAND'] == 'Brand#55') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4'])) & (part['P_NAME'].str.startswith('f'))][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 23)][['PS_PARTKEY']].merge(part[(part['P_PARTKEY'] == 134) | (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'k') & (part['TYPE'].str.startswith('M')) | (part['P_PARTKEY'] < 154) & (part['P_PARTKEY'] >= 63)][['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 3) & (partsupp['SUPPLYCOST'] != 104.97561276050138) & (partsupp['SUPPLYCOST'] < 510.6466847470877) | (partsupp['PS_SUPPKEY'] > 3226)].merge(part[['SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 40) & (partsupp['AVAILQTY'] < 2169) | (partsupp['P_COMMENT'] == 'f')].merge(supplier[(supplier['S_ACCTBAL'] <= 3915.6706117050644) & (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_ADDRESS'].str.startswith('t'))][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2835)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['SIZE'] <= 40) & (part['RETAILPRICE'] == 1014.9625457022629) | (part['SIZE'] != 40)][['P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 710) & (partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['PS_SUPPKEY'] != 5401)].merge(part[(part['PT_COMMENT'] != 'w')][['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] < 778)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['TYPE'].str.startswith('P')) | (part['P_NAME'] != 'v') | (part['BRAND'] == 'Brand#32') | (part['MFGR'] == 'Manufacturer#3') & (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 646) | (partsupp['P_COMMENT'] == 'g')][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] >= 179) | (supplier['S_NATIONKEY'] >= 0) & (supplier['S_COMMENT'] == ' ') | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ';') | (partsupp['PS_PARTKEY'] != 11) | (partsupp['SUPPLYCOST'] == 171.35501553245345) | (partsupp['AVAILQTY'] >= 3429) | (partsupp['P_COMMENT'] != 'o')].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] == 14) | (nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] >= 0)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'k')][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'x') | (partsupp['P_COMMENT'] == 'u') & (partsupp['AVAILQTY'] >= 5692)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['AVAILQTY'] < 5031) | (partsupp['SUPPLYCOST'] > 962.7308991836768) & (partsupp['P_COMMENT'] == 'd')].merge(supplier[(supplier['S_ACCTBAL'] != 3998.4256061922815) | (supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('.'))][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['SUPPLYCOST'] == 889.9989864220186) & (partsupp['PS_PARTKEY'] != 45) & (partsupp['SUPPLYCOST'] < 709.6608284030667) & (partsupp['SUPPLYCOST'] >= 245.60798891199354)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['AVAILQTY'] >= 4255) & (partsupp['PS_SUPPKEY'] != 1706) & (partsupp['SUPPLYCOST'] != 563.9396014952755)][['PS_PARTKEY']].merge(part[(part['TYPE'] != 'S') & (part['PT_COMMENT'] != 'the') | (part['BRAND'] == 'Brand#55') | (part['RETAILPRICE'] > 916.3068613714112)][['P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 859.6376924092494) | (partsupp['P_COMMENT'] == 'k')].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'R') | (nation['N_COMMENT'] != 'o')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 7) | (nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('A'))][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['TYPE'].str.startswith('S')) & (part['TYPE'] != 'L') & (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] == 1054.2166012627442) & (part['CONTAINER'] == 'JUMBO') | (part['TYPE'] != 'S') & (part['P_NAME'].str.startswith('b')) & (part['RETAILPRICE'] == 922.0165038126429) & (part['TYPE'].str.startswith('SMA'))][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'u') & (part['RETAILPRICE'] >= 935.4591114569296) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'] != 'y') & (part['CONTAINER'] == 'JUMBO')][['P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] != 'i')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NAME'] == 'U') & (nation['N_NAME'] == 'U') & (nation['N_NATIONKEY'] < 18)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] >= 10)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] > 1090.474444681865) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3'])) | (part['BRAND'] == 'Brand#23') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) & (part['P_NAME'] != 'w') | (part['MFGR'] == 'Manufacturer#3')][['RETAILPRICE', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] == 2) | (part['RETAILPRICE'] < 924.4883209532758) | (part['SIZE'] > 3) & (part['RETAILPRICE'] == 959.1013303287755) & (part['TYPE'].str.startswith('S')) & (part['SIZE'] != 11)][['P_NAME', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NAME'] == 'P')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] < 9) & (nation['N_NATIONKEY'] >= 17) | (nation['N_NATIONKEY'] >= 14)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > -19.93268951775508) & (supplier['S_COMMENT'] == 'b') & (supplier['S_SUPPKEY'] > 129) | (supplier['S_SUPPKEY'] < 15) | (supplier['S_SUPPKEY'] > 96) | (supplier['S_NATIONKEY'] != 6) | (supplier['S_ADDRESS'] == 'O')][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6768.628054729814) | (supplier['S_PHONE'] != '32-') & (supplier['S_ADDRESS'] == '8') | (supplier['S_PHONE'] == '14-') | (supplier['S_COMMENT'] == 'x') & (supplier['S_COMMENT'] != 'j') & (supplier['S_SUPPKEY'] >= 18)][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 7281.869613537857) | (supplier['S_COMMENT'] != 'bli') | (supplier['S_PHONE'].str.startswith('3'))][['S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'B') & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'I')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != ',') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 153) | (supplier['S_COMMENT'] == 't') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ADDRESS'].str.startswith('5'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != ',') | (supplier['S_COMMENT'] == 'v') & (supplier['S_ACCTBAL'] <= 3811.7120727150013) | (supplier['S_SUPPKEY'] <= 133)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'Y') | (supplier['S_ACCTBAL'] <= 7478.293124576637)].merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'E') | (supplier['S_PHONE'] != '1') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < 4072.326373478001) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] <= 0)].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] < 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_ACCTBAL'] > 94.28835600656885) | (supplier['S_COMMENT'] != '!') | (supplier['S_SUPPKEY'] <= 90) & (supplier['S_NATIONKEY'] < 12)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('1')) | (supplier['S_ADDRESS'] == '5') & (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_SUPPKEY'] >= 103)].merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'h') & (supplier['S_SUPPKEY'] != 35)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 140) | (supplier['S_ACCTBAL'] <= 1619.9786954098997) & (supplier['S_NATIONKEY'] <= 21) | (supplier['S_COMMENT'] != 'b') | (supplier['S_ADDRESS'] != 'r')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 3912.020507164214) | (supplier['S_ADDRESS'] == 'b') & (supplier['S_ACCTBAL'] > -433.83477536730754) & (supplier['S_SUPPKEY'] > 127) & (supplier['S_COMMENT'].str.startswith('i'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 192) & (supplier['S_SUPPKEY'] <= 147) & (supplier['S_COMMENT'] == 'k') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '17-')][['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 13)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 0) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_COMMENT'] != 'h') & (supplier['S_SUPPKEY'] == 172) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'] != 'q')].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] == 2) | (nation['N_NATIONKEY'] < 21) & (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] < -707.2782151553945) | (supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_ADDRESS'] == 'j') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('O'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_PHONE'] == '28-') | (supplier['S_ACCTBAL'] >= 9735.432589164095) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('t')) & (supplier['S_NATIONKEY'] == 14) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '1')][['S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_NATIONKEY'] <= 10)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 144) | (supplier['S_ADDRESS'] != 'i') & (supplier['S_COMMENT'] == 'f') | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 13)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 127)][['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'K') & (nation['N_NAME'] == 'R') | (nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] <= 15) & (nation['N_NAME'].str.startswith('C'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NAME'] == 'G') & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 6263.985780732091) & (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] <= 81) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] != 23) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'r')][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] > 7912.406607757344) | (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_ACCTBAL'] < -349.864821263518) & (customer['C_COMMENT'] != 'd') | (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'] == 'l')].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'y') & (customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_ADDRESS'] != 'a') | (customer['C_COMMENT'].str.startswith('.')) | (customer['C_PHONE'].str.startswith('2')) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] > 3)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] == 'y') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE'])) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE']))][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 54) & (customer['C_ACCTBAL'] > 5679.626168117955) | (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_CUSTKEY'] == 6) & (customer['C_ACCTBAL'] <= -728.7908414351785) & (customer['C_PHONE'] == '3') & (customer['C_NATIONKEY'] < 15) & (customer['C_CUSTKEY'] != 20)].merge(nation[(nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 23) | (customer['C_COMMENT'] != 'd') | (customer['C_ADDRESS'] != 'M') | (customer['C_ADDRESS'] == 'T')][['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 10) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_REGIONKEY'] > 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 87) | (customer['C_NATIONKEY'] >= 10)][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 10)][['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] <= 6) | (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_ADDRESS'] == 'n') | (customer['C_PHONE'] != '13-') & (customer['C_COMMENT'].str.startswith(' '))].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'E')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 15) | (customer['C_CUSTKEY'] != 49) | (customer['C_CUSTKEY'] != 58) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 78) | (customer['C_CUSTKEY'] >= 61) & (customer['C_ACCTBAL'] > -34.27933159652855) | (customer['C_COMMENT'] == '.')].merge(nation[(nation['N_NATIONKEY'] != 20) & (nation['N_NATIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] != 11) | (customer['C_ADDRESS'] != 'T') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 46) & (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'].str.startswith('3')) & (customer['C_ADDRESS'] != 'u') | (customer['C_COMMENT'] == 'o') | (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'].str.startswith('w'))][['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] == 23)].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_PHONE'] == '2') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'z') | (customer['C_NAME'] != 'C')][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('K'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'C')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'ASI') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] >= 19) | (nation['N_REGIONKEY'] != 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] == 'K') & (nation['N_NAME'] == 'G')].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] > 24944) & (orders['O_CUSTKEY'] < 32949) & (orders['O_COMMENT'] != 'l') & (orders['O_CUSTKEY'] != 11191) & (orders['ORDERPRIORITY'] == '3-MEDIUM')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith('s')) & (orders['O_ORDERKEY'] == 15)].merge(customer[(customer['C_NATIONKEY'] >= 3) | (customer['C_NATIONKEY'] > 0) | (customer['C_NATIONKEY'] <= 3) & (customer['C_COMMENT'] != 'n') | (customer['C_CUSTKEY'] <= 92) | (customer['C_ADDRESS'] == 'E') | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_ACCTBAL'] > 4621.904400885865)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] != 120) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_ORDERKEY'] >= 212) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] == 97076.69363714094)].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 23)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 9) | (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NATIONKEY'] < 4) & (customer['C_ACCTBAL'] <= 982.6423632306617) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] <= 2231.5374965248175)][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'F') & (supplier['S_NATIONKEY'] >= 7) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 57) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'W') | (supplier['S_ADDRESS'].str.startswith('k'))][['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 32) & (partsupp['P_COMMENT'] != 'd') | (partsupp['SUPPLYCOST'] == 147.9370643101721) | (partsupp['PS_PARTKEY'] != 31) | (partsupp['PS_SUPPKEY'] <= 2675)].merge(part[(part['RETAILPRICE'] == 968.7852138407054) & (part['TYPE'] == 'M') | (part['TYPE'] == 'P') | (part['P_NAME'] != 'w') | (part['BRAND'] != 'Brand#41') | (part['RETAILPRICE'] <= 1097.8578757992898) | (part['BRAND'] == 'Brand#44')][['TYPE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 910.0149600851981)].merge(supplier.merge(nation[(nation['N_NAME'] == 'J')].merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 0) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 30) & (part['SIZE'] != 41) & (part['RETAILPRICE'] > 1084.2401707572453)][['P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'a') | (supplier['S_SUPPKEY'] <= 114)][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != ',')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == ' ')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('count')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_ADDRESS'] != 'w') & (supplier['S_ADDRESS'] != 'y') | (supplier['S_ADDRESS'].str.startswith('d')) & (supplier['S_NATIONKEY'] != 23) & (supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NATIONKEY'] != 21)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] > 0.05753932153669714) | (lineitem['QUANTITY'] <= 45) & (lineitem['L_COMMENT'] != 'p') & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['LINENUMBER'] > 5) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['COMMITDATE'] == '1998-10-16')].merge(partsupp[(partsupp['P_COMMENT'] == 's') | (partsupp['PS_SUPPKEY'] > 3971) | (partsupp['P_COMMENT'].str.startswith('e'))][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 56817.66168053228) | (lineitem['TAX'] != 0.037219218376125365) | (lineitem['SHIPMODE'].isin(['AIR', 'FOB', 'RAIL', 'SHIP', 'REG AIR', 'MAIL'])) & (lineitem['QUANTITY'] > 34) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) | (lineitem['L_SUPPKEY'] > 5978) & (lineitem['L_SUPPKEY'] == 1305) | (lineitem['COMMITDATE'] <= '1998-10-16')][['L_ORDERKEY', 'COMMITDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 72010.72628549987) & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A']))].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'].str.startswith('h')) | (supplier['S_COMMENT'] != '!') | (supplier['S_SUPPKEY'] > 89) & (supplier['S_COMMENT'] == ' sl')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F'])) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) & (lineitem['LINESTATUS'] == 'F') & (lineitem['QUANTITY'] >= 36) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINESTATUS'] == 'F')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 5) | (partsupp['P_COMMENT'] != ';') | (partsupp['PS_SUPPKEY'] == 3397)].merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] == 5) | (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != ' ') | (lineitem['L_COMMENT'] == 'q')].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#55', 'Brand#43'])) | (part['PT_COMMENT'] != 'a') | (part['SIZE'] < 36) & (part['BRAND'] != 'Brand#21') | (part['SIZE'] >= 20) & (part['P_PARTKEY'] < 26) | (part['RETAILPRICE'] >= 970.8669178145784) | (part['P_NAME'] == 'o') & (part['P_NAME'] == 'n')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 141) | (lineitem['L_ORDERKEY'] < 46) & (lineitem['DISCOUNT'] > 0.0987908300511101) | (lineitem['SHIPDATE'] >= '1992-04-27')][['RECEIPTDATE', 'SHIPMODE', 'SHIPDATE', 'QUANTITY', 'LINENUMBER', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS']].merge(orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 180) | (lineitem['L_ORDERKEY'] > 107) | (lineitem['SHIPMODE'] == 'FOB')][['L_PARTKEY', 'QUANTITY', 'L_COMMENT', 'L_SUPPKEY']].merge(partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'] != 'C')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] < 143387) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_PARTKEY'] < 75985) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['QUANTITY'] > 3) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['DISCOUNT'] < 0.06442794484306787)].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] == 4483) | (lineitem['L_SUPPKEY'] > 1462) & (lineitem['LINESTATUS'] == 'O') | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['L_ORDERKEY'] <= 139) & (lineitem['SHIPMODE'] == 'SHIP')].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['TAX'] > 0.032738810449865) | (lineitem['L_SUPPKEY'] <= 6900) | (lineitem['L_COMMENT'] == 'a') & (lineitem['RETURNFLAG'].isin(['A', 'R']))].merge(partsupp[(partsupp['PS_SUPPKEY'] == 5868) & (partsupp['PS_PARTKEY'] < 19)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['BRAND'].isin(['Brand#25', 'Brand#44', 'Brand#14', 'Brand#52', 'Brand#54', 'Brand#24'])) & (part['P_NAME'] == 'lem')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N'])) & (lineitem['L_COMMENT'] != 'i') | (lineitem['TAX'] != 0.037252574837580384)].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['P_NAME', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'SHIP') | (lineitem['L_ORDERKEY'] != 35) | (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_SUPPKEY'] == 4204) | (lineitem['TAX'] > 0.058595021645165474) & (lineitem['TAX'] <= 0.04853775334436077) | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['COMMITDATE'] >= '1992-05-15')].merge(orders[(orders['O_COMMENT'].str.startswith('r')) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] < 432)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['COMMITDATE', 'RECEIPTDATE', 'TAX', 'QUANTITY', 'LINENUMBER', 'LINESTATUS', 'L_ORDERKEY', 'SHIPDATE']].merge(orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY', 'TAX', 'SHIPMODE', 'EXTENDEDPRICE', 'L_COMMENT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] <= 18) | (part['P_PARTKEY'] < 88) & (part['SIZE'] >= 27) & (part['SIZE'] < 42) | (part['BRAND'] != 'Brand#54') | (part['P_PARTKEY'] != 143)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] != 9856) | (partsupp['PS_PARTKEY'] <= 22) | (partsupp['SUPPLYCOST'] != 592.7512341953999) | (partsupp['PS_PARTKEY'] > 40)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['EXTENDEDPRICE', 'L_COMMENT', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != 'i') | (partsupp['SUPPLYCOST'] <= 939.3127894499868)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[['CONTAINER', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'RECEIPTDATE', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPMODE', 'LINESTATUS']].merge(partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'SHIPDATE', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] == 5) & (partsupp['SUPPLYCOST'] >= 923.6728853535915) | (partsupp['PS_PARTKEY'] != 27)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'TYPE']).agg('count')

lineitem[['L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'TAX', 'SHIPMODE', 'QUANTITY', 'EXTENDEDPRICE', 'LINENUMBER']].merge(partsupp.merge(part[(part['TYPE'] != 'S') | (part['P_NAME'].str.startswith('a')) | (part['PT_COMMENT'].str.startswith('!')) & (part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] != 25) & (part['P_PARTKEY'] != 106) | (part['PT_COMMENT'] != 'c') & (part['RETAILPRICE'] != 919.8815080686519) & (part['P_PARTKEY'] >= 35)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'LINESTATUS', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp.merge(part[['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'SHIPDATE', 'TAX', 'LINESTATUS', 'L_COMMENT', 'L_ORDERKEY', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 6948) | (partsupp['PS_PARTKEY'] < 49) & (partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['PS_PARTKEY'] < 16)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'QUANTITY', 'L_COMMENT', 'LINENUMBER', 'DISCOUNT', 'LINESTATUS', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] < 8219)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['SIZE'] < 5) | (part['P_NAME'] == 'w')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] < 18) & (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 3561.751673492947) | (customer['C_COMMENT'] == 'n') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] > 28) & (customer['C_COMMENT'].str.startswith('u')) & (customer['C_PHONE'].str.startswith('18-'))][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] <= 20) | (nation['N_COMMENT'] == 'h')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 's') & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] == 0) | (nation['N_NAME'] == 'G') | (nation['N_NAME'] != 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] >= 77) & (customer['C_ADDRESS'] != 'i') & (customer['C_PHONE'] != '2')].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] < 7) & (customer['C_NATIONKEY'] != 1) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] < 59) | (customer['C_COMMENT'] == 'w')][['C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] >= 16) | (customer['C_COMMENT'] == 'h') & (customer['C_ADDRESS'] != 'p') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'] == 'z') | (customer['C_CUSTKEY'] <= 57) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('x')) & (orders['O_CUSTKEY'] > 146578) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('z')) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '1-URGENT', '3-MEDIUM', '5-LOW']))].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 53892.11313918802) | (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 122792.89242902084) | (orders['ORDERDATE'] <= '1998-07-21')][['O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'].str.startswith('a')) | (orders['O_COMMENT'] == 'x')][['ORDERDATE', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] == 'r') | (orders['TOTALPRICE'] < 117498.49848842931) | (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] != 59487) | (orders['TOTALPRICE'] >= 107561.77212378793) | (orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] >= 18958.863958561393)].merge(customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED'])) & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] <= 60161) & (orders['O_CUSTKEY'] <= 94645) | (orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] > 340926.5737241514) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['CLERK'] == 'C')].merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] >= 44264.59531051398) | (orders['O_COMMENT'] != 'd')].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F')].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F']))].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['ORDERSTATUS'] != 'F') | (orders['O_ORDERKEY'] == 564)][['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'b') & (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] <= 529) | (orders['O_CUSTKEY'] < 1033) | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] <= 10605.3392989155)][['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] == 'y') | (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] < 152) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_CUSTKEY'] >= 125535)].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('g')) | (orders['O_ORDERKEY'] != 520) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] == 443) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1992-01-13')][['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'] != '3') | (customer['C_ACCTBAL'] == 9779.359925472554)][['C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 97652) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['O_ORDERKEY'] >= 635)][['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 82395) & (orders['TOTALPRICE'] >= 323349.9470498475) & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('g')) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW']))].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 135031) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 1555.7264214752408) | (customer['C_CUSTKEY'] >= 87) | (customer['C_PHONE'] == '13-')][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 98) & (orders['ORDERDATE'] == '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] != 1045.082687340962) & (customer['C_CUSTKEY'] == 80)].merge(nation[(nation['N_NATIONKEY'] <= 16) | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['C_PHONE'] != '25-') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] < 7794.888127486913) & (customer['C_COMMENT'] == 'r') | (customer['C_ACCTBAL'] < -723.5753124831749) & (customer['C_NATIONKEY'] != 11) | (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'].str.startswith('D'))].merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['TOTALPRICE'] == 133105.966604112) | (orders['O_ORDERKEY'] >= 100) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] != 69523) | (orders['O_CUSTKEY'] <= 81596) & (orders['O_ORDERKEY'] <= 15)][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_COMMENT'] == 'egu') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] >= 132643.82887826266) | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'] == 'a')].merge(customer.merge(nation[(nation['N_NAME'] != 'E')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0)][['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 338560.4490142351) | (orders['O_CUSTKEY'] != 106088) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] > 253) | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] > 652)][['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY']).agg('count')

orders[(orders['TOTALPRICE'] == 78226.10554042866) | (orders['O_COMMENT'] != 'a') | (orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'] == '.')].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_NAME'] != 'R')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] >= 187882.62238807246)].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < -709.1451321031886) & (customer['C_CUSTKEY'] < 20) & (customer['C_ACCTBAL'] == 5126.116884274426) | (customer['C_ADDRESS'].str.startswith('J')) & (customer['C_CUSTKEY'] > 20) & (customer['C_NATIONKEY'] == 8) | (customer['C_CUSTKEY'] == 62)][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'].str.startswith('Y')) | (customer['C_PHONE'].str.startswith('2'))][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']].merge(customer[(customer['C_CUSTKEY'] >= 62) & (customer['C_COMMENT'] == 'e') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= 5882.5990029863715) | (customer['C_ADDRESS'] == 'd')][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == 'l') & (part['MFGR'] != 'Manufacturer#5') | (part['SIZE'] != 8) & (part['P_PARTKEY'] >= 27) & (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] <= 109)][['TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'BRAND', 'CONTAINER', 'TYPE']).agg('count')

partsupp.merge(part[(part['P_PARTKEY'] > 6) | (part['PT_COMMENT'] == 't') | (part['CONTAINER'].str.startswith('WRAP')) & (part['P_PARTKEY'] < 168) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] > 1059.673292195881) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4']))][['PT_COMMENT', 'MFGR', 'TYPE', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY']).agg('count')

partsupp.merge(part[(part['SIZE'] != 25) | (part['PT_COMMENT'] == 'p') | (part['MFGR'].isin(['Manufacturer#4'])) | (part['P_NAME'].str.startswith('h')) & (part['SIZE'] <= 30) & (part['CONTAINER'] == 'WRAP')][['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 's') & (nation['N_COMMENT'] == 'r') | (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 5958.367245865406) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'the') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('L'))].merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_NAME'] != 'I')].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'i') & (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 5) & (nation['N_COMMENT'].str.startswith('t')) | (nation['N_NATIONKEY'] >= 22)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 6453) & (partsupp['PS_SUPPKEY'] > 4215) | (partsupp['AVAILQTY'] != 633) | (partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['PS_SUPPKEY'] > 3416)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] != 'q') | (part['BRAND'] == 'Brand#15') & (part['CONTAINER'] == 'MED') | (part['SIZE'] != 45) & (part['CONTAINER'].str.startswith('MED'))][['P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 5954) & (partsupp['PS_PARTKEY'] < 7) | (partsupp['P_COMMENT'].str.startswith('i'))][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 9859) | (partsupp['P_COMMENT'] == 'p') & (partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['AVAILQTY'] >= 4332)].merge(supplier[(supplier['S_ACCTBAL'] == 8208.653728693735) | (supplier['S_PHONE'] != '26-') & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] > 15)].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 1049)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 38) & (partsupp['PS_SUPPKEY'] == 3035) | (partsupp['SUPPLYCOST'] <= 948.3305241826743) | (partsupp['AVAILQTY'] == 2393)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'].str.startswith('w')) & (part['PT_COMMENT'].str.startswith('n'))][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 22) & (partsupp['P_COMMENT'] != 'ly ') | (partsupp['PS_PARTKEY'] > 14) | (partsupp['AVAILQTY'] == 4153)][['PS_PARTKEY']].merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 5001) & (partsupp['PS_SUPPKEY'] != 3626) & (partsupp['AVAILQTY'] < 3428) & (partsupp['PS_SUPPKEY'] == 7473) | (partsupp['P_COMMENT'].str.startswith('j'))].merge(part[(part['PT_COMMENT'] == 'kag') & (part['SIZE'] == 17) | (part['MFGR'] != 'Manufacturer#5') & (part['P_PARTKEY'] < 2) | (part['BRAND'].isin(['Brand#25', 'Brand#22', 'Brand#21', 'Brand#32', 'Brand#11', 'Brand#51', 'Brand#43', 'Brand#12', 'Brand#14', 'Brand#13'])) & (part['BRAND'] != 'Brand#22') | (part['CONTAINER'].str.startswith('SM')) | (part['BRAND'] == 'Brand#21') | (part['BRAND'] == 'Brand#45')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4887)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 19)].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6317) | (partsupp['P_COMMENT'] != 'g') & (partsupp['SUPPLYCOST'] < 809.4728593342084) & (partsupp['AVAILQTY'] != 86)].merge(part[(part['P_PARTKEY'] <= 174) & (part['BRAND'] != 'Brand#51') | (part['TYPE'].str.startswith('S')) & (part['MFGR'] != 'Manufacturer#2') | (part['P_PARTKEY'] < 2) | (part['RETAILPRICE'] <= 1055.3898353779414) & (part['P_NAME'] != 'r') | (part['P_PARTKEY'] <= 157)][['PT_COMMENT', 'MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 641) | (partsupp['P_COMMENT'] != 'k')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 5088) & (partsupp['PS_SUPPKEY'] <= 10) & (partsupp['P_COMMENT'].str.startswith('a')) & (partsupp['PS_PARTKEY'] != 36) & (partsupp['PS_SUPPKEY'] == 1057)].merge(supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'p') | (partsupp['PS_PARTKEY'] != 1) & (partsupp['SUPPLYCOST'] < 932.6534285549412)].merge(part[(part['PT_COMMENT'].str.startswith('i')) | (part['BRAND'] == 'Brand#45') & (part['P_NAME'].str.startswith('r')) & (part['SIZE'] >= 14) & (part['P_NAME'] == 'h') | (part['BRAND'] == 'Brand#41') & (part['BRAND'] == 'Brand#35')][['TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'b') & (partsupp['PS_SUPPKEY'] == 2300)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('l'))].merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'x') & (supplier['S_COMMENT'].str.startswith('u'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 143.26525143974797) & (partsupp['AVAILQTY'] >= 5313) | (partsupp['P_COMMENT'] != 'p') & (partsupp['P_COMMENT'] != 'e')][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('a')) | (part['P_PARTKEY'] < 177) | (part['RETAILPRICE'] <= 953.2695121960242) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 697.3375830898486) | (partsupp['PS_PARTKEY'] < 45)].merge(part[(part['TYPE'].str.startswith('L')) | (part['BRAND'].isin(['Brand#45', 'Brand#34', 'Brand#25', 'Brand#11', 'Brand#35', 'Brand#24', 'Brand#12'])) | (part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] < 914.756693437399) & (part['BRAND'] == 'Brand#43')][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_SUPPKEY'] <= 70) | (supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] < 2432.5220135496593) & (supplier['S_ADDRESS'].str.startswith('7'))][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] < 15) & (nation['N_COMMENT'] == 'a') | (nation['N_NAME'] != 'A') | (nation['N_NAME'] == 'J')].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] != 'w') & (part['BRAND'] == 'Brand#33') & (part['PT_COMMENT'] != 'r') & (part['SIZE'] <= 34) & (part['CONTAINER'] == 'JUMBO') & (part['BRAND'].isin(['Brand#31', 'Brand#55', 'Brand#51', 'Brand#23', 'Brand#11', 'Brand#35', 'Brand#14', 'Brand#44', 'Brand#22', 'Brand#32', 'Brand#52', 'Brand#41', 'Brand#34', 'Brand#13', 'Brand#43', 'Brand#21', 'Brand#54', 'Brand#25', 'Brand#24', 'Brand#45'])) & (part['MFGR'] == 'Manufacturer#1')][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['RETAILPRICE', 'MFGR', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 105) & (supplier['S_ACCTBAL'] == 1945.221367838429)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 11) | (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] == 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 7) | (nation['N_NATIONKEY'] > 22) & (nation['N_NATIONKEY'] <= 1) | (nation['N_COMMENT'] == 'r')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 6184.695696863904) & (supplier['S_ADDRESS'].str.startswith('a'))][['S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 6544.813143548855) & (supplier['S_COMMENT'] == ',') & (supplier['S_ADDRESS'] == 'E') | (supplier['S_PHONE'] == '14-') & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_PHONE'] == '14-') & (supplier['S_PHONE'] != '2')].merge(nation[(nation['N_NATIONKEY'] > 23)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'F') & (supplier['S_ADDRESS'] == 'Q')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] > 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'k') | (supplier['S_NATIONKEY'] != 1) | (supplier['S_PHONE'] != '3') | (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_ADDRESS'] == 'h') & (supplier['S_NATIONKEY'] <= 23) & (supplier['S_ADDRESS'].str.startswith('X'))][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] == 164) | (supplier['S_COMMENT'] != 'y') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_ADDRESS'] != 'w')].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 1568.627993359539)].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_COMMENT'] == 'r') & (nation['N_NAME'] != 'F') & (nation['N_COMMENT'] == 'y')].merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'q') & (supplier['S_COMMENT'] != 'w') & (supplier['S_SUPPKEY'] != 163) & (supplier['S_ADDRESS'] == '8')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 11) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'c') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ADDRESS'] != 'Y') & (supplier['S_ADDRESS'] != '8') | (supplier['S_ADDRESS'] != 'P')].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] == 'h')].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 11) | (supplier['S_PHONE'] != '32-') | (supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] == 'e') & (supplier['S_ACCTBAL'] > 536.7989962581169)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'] == 'd')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'a') & (supplier['S_ACCTBAL'] > 3630.8045333939117) & (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_SUPPKEY'] == 9)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '17-')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 27) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] < 8080.348152870863) | (supplier['S_SUPPKEY'] != 175) | (supplier['S_ACCTBAL'] != 9840.694320340142) & (supplier['S_ADDRESS'] != 'I')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 162)].merge(nation[(nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_COMMENT'] == 'l')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 2222.331580350489) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] == 9) | (customer['C_ADDRESS'] != 'v') | (customer['C_NATIONKEY'] >= 17) | (customer['C_CUSTKEY'] <= 86)][['C_NATIONKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_NAME'].str.startswith('K'))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] == -270.14004133002175) & (customer['C_ADDRESS'] == 'T') | (customer['C_ADDRESS'] != 'J') | (customer['C_CUSTKEY'] <= 22) & (customer['C_PHONE'] != '3')].merge(nation[(nation['N_NATIONKEY'] >= 19) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'B') | (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('b')) | (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] != 90.99987621530431) & (customer['MKTSEGMENT'] == 'BUILDING')][['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != 'c') | (customer['C_ADDRESS'] != 'b') & (customer['C_CUSTKEY'] < 92) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY'])) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 8) | (customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] >= 15) & (nation['N_NAME'] == 'F')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_CUSTKEY'] < 77) & (customer['C_CUSTKEY'] <= 58) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] >= 54) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] < 4758.59202019609)][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 63)][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] == 63) & (customer['C_PHONE'] == '3') & (customer['C_ADDRESS'] == 'g') & (customer['C_COMMENT'].str.startswith('w')) & (customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] == 'q')][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith(' ')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_PHONE'] != '1')].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] > 0) & (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] > 1) | (customer['C_ADDRESS'] == 'T') | (customer['C_ACCTBAL'] >= 5965.949214022302) & (customer['C_COMMENT'] != 'u') | (customer['C_PHONE'].str.startswith('1')) | (customer['C_ACCTBAL'] != 6802.354959006966) & (customer['C_ADDRESS'] == 'a') | (customer['C_NATIONKEY'] <= 7)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 1) | (customer['C_ADDRESS'].str.startswith('8')) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_ACCTBAL'] < 5218.085169671102) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] > 1) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] != 'a') & (customer['C_ADDRESS'].str.startswith('E')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_COMMENT'] != 'g') | (customer['C_COMMENT'] != 'l') & (customer['C_NATIONKEY'] >= 0)][['C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'A')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ADDRESS'].str.startswith('Y')) & (customer['C_ACCTBAL'] > 9399.30879844593) | (customer['C_PHONE'] == '27-')][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] == 2) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('t')) | (customer['C_CUSTKEY'] < 76) | (customer['C_ACCTBAL'] > 7196.368159216572)].merge(nation[(nation['N_NATIONKEY'] >= 19) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] != 18)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 9) & (customer['C_ACCTBAL'] != 371.4500393655321) & (customer['C_NATIONKEY'] > 10)].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] != 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] > 6)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] <= 7) | (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] != 5010.5307508672195)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'h')][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'].isin(['Brand#31', 'Brand#34', 'Brand#55', 'Brand#52', 'Brand#42', 'Brand#45', 'Brand#43', 'Brand#14', 'Brand#23', 'Brand#12', 'Brand#22', 'Brand#25'])) | (part['P_PARTKEY'] > 2) | (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] == 'M')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['PS_PARTKEY'] < 8) | (partsupp['PS_PARTKEY'] < 25)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['BRAND', 'SIZE', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_PARTKEY'] != 35) & (partsupp['AVAILQTY'] <= 6945) & (partsupp['PS_PARTKEY'] < 30) & (partsupp['PS_SUPPKEY'] != 1477)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] < 76)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'SIZE', 'P_PARTKEY', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['EXTENDEDPRICE'] != 39307.7194386188) | (lineitem['LINENUMBER'] != 4) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_SUPPKEY'] < 8313) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINENUMBER'] >= 6) | (lineitem['SHIPMODE'] == 'FOB')].merge(partsupp.merge(part[(part['CONTAINER'] == 'JUMBO') | (part['SIZE'] >= 19) & (part['P_NAME'] == 'f') | (part['TYPE'].str.startswith('STA'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'MFGR']).agg('count')

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['QUANTITY'] > 45) | (lineitem['L_SUPPKEY'] > 6465) & (lineitem['TAX'] >= 0.0714096327242449) | (lineitem['L_COMMENT'] == 'l') & (lineitem['LINENUMBER'] != 4) & (lineitem['TAX'] >= 0.054550540999683185)][['SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'L_PARTKEY', 'COMMITDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINESTATUS']].groupby(by=['RECEIPTDATE', 'LINESTATUS', 'L_PARTKEY', 'DISCOUNT', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.03727729069652441) | (lineitem['LINENUMBER'] == 6) | (lineitem['TAX'] > 0.050798102072242106) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_PARTKEY'] < 176155) & (lineitem['RETURNFLAG'] != 'A') | (lineitem['RETURNFLAG'] != 'A')][['L_COMMENT', 'SHIPMODE', 'L_ORDERKEY', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'RECEIPTDATE']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 74155.92634087779) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['QUANTITY'] != 43)][['COMMITDATE', 'L_ORDERKEY', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 12) & (partsupp['SUPPLYCOST'] > 774.4293155145685) & (partsupp['PS_PARTKEY'] == 34) | (partsupp['PS_SUPPKEY'] != 1930)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 42557.79651178269) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_COMMENT'] != ',') | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPDATE'] < '1998-10-30')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3335)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'TYPE', 'BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['QUANTITY'] < 8) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['L_PARTKEY'] == 104301) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['LINENUMBER'] >= 2) | (lineitem['DISCOUNT'] != 0.03579455708117481) | (lineitem['L_COMMENT'].str.startswith('f'))][['L_COMMENT', 'L_PARTKEY', 'RETURNFLAG', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']].groupby(by=['L_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'p') & (lineitem['EXTENDEDPRICE'] <= 33523.69718824817) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['TAX'] >= 0.06442699309027605) & (lineitem['L_SUPPKEY'] == 7401)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] != 5) | (supplier['S_SUPPKEY'] < 84)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 185) & (lineitem['TAX'] < 0.04470255768136399) | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN', 'NONE']))].merge(partsupp[(partsupp['SUPPLYCOST'] <= 853.7387256960142)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] == 5950) & (lineitem['L_PARTKEY'] != 160246)][['L_SUPPKEY', 'L_PARTKEY', 'SHIPDATE', 'RECEIPTDATE', 'L_COMMENT', 'LINESTATUS', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 4231) | (lineitem['L_PARTKEY'] == 54300) | (lineitem['DISCOUNT'] < 0.08268187322745478)].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 8) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] > 6968.147467906534) & (supplier['S_ACCTBAL'] < 6204.725571632303)][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['DISCOUNT'] < 0.05372424588320532) & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_SUPPKEY'] != 5512) & (lineitem['QUANTITY'] > 42) & (lineitem['L_PARTKEY'] == 75428)][['EXTENDEDPRICE', 'L_COMMENT', 'L_PARTKEY', 'L_SUPPKEY', 'TAX', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'] != 'j')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_SUPPKEY'] < 2868) & (lineitem['L_PARTKEY'] <= 145701) | (lineitem['SHIPDATE'] != '1998-10-30')].merge(partsupp.merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'y')][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.05225361362699225)].merge(partsupp[(partsupp['PS_PARTKEY'] == 7) | (partsupp['P_COMMENT'] == ';') & (partsupp['SUPPLYCOST'] != 880.5266394843844) & (partsupp['SUPPLYCOST'] > 195.66337074044648) & (partsupp['AVAILQTY'] == 7147)].merge(supplier[(supplier['S_SUPPKEY'] >= 121)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'L_SUPPKEY', 'LINENUMBER', 'DISCOUNT']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'] != 'Manufacturer#5') | (part['BRAND'] == 'Brand#34') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) & (part['P_PARTKEY'] != 197) | (part['P_PARTKEY'] < 57) & (part['MFGR'].isin(['Manufacturer#1'])) & (part['P_PARTKEY'] != 114)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'SHIPMODE', 'RETURNFLAG', 'L_SUPPKEY', 'QUANTITY', 'L_COMMENT', 'LINENUMBER', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] == 'e') | (partsupp['P_COMMENT'] == 'bli') | (partsupp['AVAILQTY'] < 4618) | (partsupp['P_COMMENT'] == 'k') | (partsupp['SUPPLYCOST'] != 626.8770686086157)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINENUMBER', 'COMMITDATE', 'L_PARTKEY', 'L_COMMENT', 'DISCOUNT', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] > 44) | (partsupp['SUPPLYCOST'] != 132.41256756644106) | (partsupp['P_COMMENT'] != ' th') & (partsupp['PS_PARTKEY'] <= 49)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPDATE', 'RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE', 'QUANTITY', 'LINENUMBER']].merge(partsupp.merge(part[(part['TYPE'].str.startswith('M')) | (part['PT_COMMENT'] == 'o') & (part['TYPE'] != 'S') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) & (part['BRAND'] == 'Brand#22') & (part['P_NAME'] != 'bis')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'LINENUMBER']].merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM'])) & (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] == 'uri') & (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG', 'COMMITDATE', 'QUANTITY', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'L_COMMENT']].merge(orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] == 16834) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['TOTALPRICE'] != 55967.69493491153) & (orders['TOTALPRICE'] < 17986.20913647869)].merge(customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE', 'SHIPMODE', 'DISCOUNT', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] == 7335) & (partsupp['SUPPLYCOST'] >= 109.64515562430208) & (partsupp['PS_PARTKEY'] <= 11) | (partsupp['PS_PARTKEY'] <= 17) & (partsupp['PS_PARTKEY'] >= 44)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_PARTKEY'] < 38) | (partsupp['SUPPLYCOST'] <= 779.6333460571939) | (partsupp['P_COMMENT'].str.startswith('g')) | (partsupp['PS_SUPPKEY'] != 5989) & (partsupp['P_COMMENT'] != 'the')].merge(part[(part['MFGR'].isin(['Manufacturer#4'])) & (part['MFGR'] == 'Manufacturer#4')][['P_PARTKEY', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'LINESTATUS', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(partsupp.merge(part[(part['RETAILPRICE'] == 942.9764436784715) | (part['TYPE'] == 'STA') | (part['SIZE'] <= 28) | (part['MFGR'] == 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3']))][['P_NAME', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('p'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 7806.6461029205675) | (customer['C_COMMENT'] == 'l') | (customer['C_CUSTKEY'] < 41) & (customer['C_ADDRESS'] != '8') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] < 4880.4027575732825) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING']))].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] >= 65) | (customer['C_ACCTBAL'] <= 6841.632647812201) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] <= 2657.6081874049733) | (customer['C_CUSTKEY'] < 70) | (customer['C_ADDRESS'].str.startswith('Y'))].merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_NATIONKEY'] == 21) | (nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] == 21) | (nation['N_COMMENT'] != 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C')][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 0) | (nation['N_NAME'] != 'M')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] > 557) | (orders['SHIPPRIORITY'] <= 0)].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT'])) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] < 787) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED']))][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] < 54175.41475020173) & (orders['O_CUSTKEY'] <= 25750) & (orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['C_NATIONKEY'] < 3) & (customer['C_ACCTBAL'] != 8388.247999493587) | (customer['C_CUSTKEY'] == 48) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == ',') | (customer['C_ACCTBAL'] >= 9591.42057519809) & (customer['C_ADDRESS'] == 'Y')][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] == 'p') & (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != '-') & (orders['CLERK'] != 'C')].merge(customer[(customer['C_CUSTKEY'] == 91) | (customer['C_ADDRESS'].str.startswith('b')) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_NATIONKEY'] != 1) | (customer['C_CUSTKEY'] < 6) & (customer['C_CUSTKEY'] <= 89) & (customer['C_ADDRESS'].str.startswith('I'))][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('d')) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['TOTALPRICE'] != 354700.354861923) | (orders['O_CUSTKEY'] == 135179) | (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 's')][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 128026) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT'])) | (orders['O_ORDERKEY'] >= 713)][['TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] != 0) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'H')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 17639) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] != ' ')].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] == 'h') | (nation['N_NAME'] == 'I')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_COMMENT'] != '-') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH'])) & (orders['O_ORDERKEY'] < 448) & (orders['TOTALPRICE'] < 98400.04806913518) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_NATIONKEY'] <= 4) | (customer['C_ADDRESS'] == 'j')][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_COMMENT'] == 'egu')].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'MACHINERY'])) & (customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'] != 'c') & (customer['C_NATIONKEY'] >= 8)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['O_COMMENT'] == 'ly ')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 286457.74546439253) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] != 133784) | (orders['O_ORDERKEY'] > 234) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_CUSTKEY'] > 43)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 146156.49432216934) & (orders['O_CUSTKEY'] == 7688) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_CUSTKEY'] > 134648) | (orders['ORDERDATE'] == '1992-01-13') | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] == 589)].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['TOTALPRICE'] > 309365.0561348541)].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 266004.6671578997) & (orders['O_ORDERKEY'] < 177) | (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['O_ORDERKEY'] <= 98) & (orders['TOTALPRICE'] == 152727.4773321695) & (orders['O_ORDERKEY'] < 71) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_ORDERKEY'] <= 531) & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] >= 17) | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] >= 6)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'l')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] >= 22) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY']))][['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 18) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('K')) | (customer['C_CUSTKEY'] >= 97)].merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] != 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] == 7574.056738930989) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '27-') & (customer['C_ADDRESS'] != 'B') & (customer['C_CUSTKEY'] < 58)][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('count')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] != 980.3276589770617) & (part['P_NAME'] == 'h') & (part['SIZE'] == 34) & (part['TYPE'] != 'L') & (part['P_NAME'] == 'r') & (part['PT_COMMENT'] == 'e') | (part['P_NAME'].str.startswith('g')) | (part['PT_COMMENT'].str.startswith('o'))][['RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']].groupby(by=['TYPE', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'q') & (part['P_NAME'] != 'd') | (part['CONTAINER'] != 'MED') | (part['TYPE'] != 'S') | (part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] != 'Brand#12') | (part['BRAND'].isin(['Brand#24', 'Brand#45'])) | (part['PT_COMMENT'] == 'a') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4']))][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'TYPE', 'BRAND', 'MFGR']].groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE']).agg('count')

part[(part['P_NAME'] != 'y') & (part['SIZE'] <= 20) & (part['TYPE'].str.startswith('STA')) | (part['TYPE'] != 'S') & (part['SIZE'] == 40) & (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'] != 'k') & (part['P_PARTKEY'] > 1) | (part['TYPE'] != 'SMA')][['MFGR', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] == 1015.2222494291193) | (part['PT_COMMENT'].str.startswith('h')) | (part['P_PARTKEY'] != 150) | (part['BRAND'] != 'Brand#53') & (part['RETAILPRICE'] <= 1000.7495499902627) & (part['SIZE'] <= 9) & (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] != 'v') & (part['CONTAINER'] == 'MED')][['BRAND', 'MFGR', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].groupby(by=['BRAND', 'SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#25') | (part['P_PARTKEY'] > 15) & (part['SIZE'] != 27) & (part['RETAILPRICE'] >= 1066.5428011615918) | (part['P_PARTKEY'] >= 38)][['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_NAME', 'TYPE', 'MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['SIZE'] <= 33) | (part['BRAND'] == 'Brand#21') & (part['P_NAME'] == 'blu') | (part['PT_COMMENT'].str.startswith('i')) | (part['MFGR'] != 'Manufacturer#2') | (part['P_PARTKEY'] < 42) | (part['RETAILPRICE'] > 1060.3848163964076) | (part['SIZE'] == 42) | (part['CONTAINER'] == 'JUMBO')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 486.8880664934172) & (supplier['S_ADDRESS'].str.startswith('u')) | (supplier['S_NATIONKEY'] != 11) | (supplier['S_SUPPKEY'] == 15)][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ACCTBAL'] <= -424.03617518672513) & (supplier['S_ACCTBAL'] > -958.668523383879) & (supplier['S_NATIONKEY'] == 22)].merge(nation[(nation['N_NAME'] == 'J')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 62) & (supplier['S_ACCTBAL'] <= -434.5820738383734) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == ' sl') | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_NATIONKEY'] >= 17) | (supplier['S_COMMENT'] != 'c')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 158) & (supplier['S_ACCTBAL'] < 4601.327776337343)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 6) | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] > 10) | (nation['N_NAME'] == 'M')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 3985) | (partsupp['P_COMMENT'] == 'a') | (partsupp['PS_PARTKEY'] <= 39)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'o')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 6765) | (partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_PARTKEY'] > 19)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_COMMENT'].str.startswith('!'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 1290) & (partsupp['SUPPLYCOST'] == 878.5352125215618) & (partsupp['PS_SUPPKEY'] < 6738) & (partsupp['PS_PARTKEY'] <= 31) | (partsupp['AVAILQTY'] >= 9577)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] != 'Brand#33') & (part['TYPE'].str.startswith('L')) & (part['P_PARTKEY'] <= 144) | (part['P_NAME'] == 'k') | (part['P_PARTKEY'] > 171) & (part['RETAILPRICE'] > 932.7869161683755) & (part['CONTAINER'] == 'MED') & (part['TYPE'] != 'E') | (part['RETAILPRICE'] >= 1020.3520577817735)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 3209) | (partsupp['PS_SUPPKEY'] == 4991) | (partsupp['PS_PARTKEY'] >= 13) | (partsupp['AVAILQTY'] <= 8902)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 5) & (supplier['S_ACCTBAL'] > 544.7660857108981) & (supplier['S_NATIONKEY'] < 4) | (supplier['S_PHONE'] != '3') | (supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 4482) & (partsupp['PS_SUPPKEY'] >= 7536) | (partsupp['P_COMMENT'] != 'j')][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'JUMBO') | (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'].str.startswith('cor')) & (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] > 41) | (part['TYPE'] != 'M')][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 342) & (partsupp['PS_SUPPKEY'] > 1322) & (partsupp['PS_PARTKEY'] != 32)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 1652) & (partsupp['P_COMMENT'] == 'h') | (partsupp['SUPPLYCOST'] != 937.1544113257116)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] != 24) & (part['SIZE'] != 43) & (part['TYPE'] == 'P') | (part['SIZE'] < 34)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 23) & (partsupp['PS_SUPPKEY'] != 6578) | (partsupp['PS_SUPPKEY'] >= 6572)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5550) & (partsupp['PS_PARTKEY'] > 2) | (partsupp['P_COMMENT'].str.startswith('p'))].merge(part[(part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'p') | (part['TYPE'].str.startswith('L'))][['RETAILPRICE', 'MFGR', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'TYPE', 'CONTAINER']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 2125) | (partsupp['SUPPLYCOST'] > 744.7053876885174) | (partsupp['P_COMMENT'] != 'f') | (partsupp['P_COMMENT'] != 'are')][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4789) & (partsupp['P_COMMENT'].str.startswith('the')) | (partsupp['PS_SUPPKEY'] <= 828)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#13') & (part['P_PARTKEY'] != 10) | (part['P_NAME'] != 'f') & (part['BRAND'] != 'Brand#35') & (part['CONTAINER'] == 'SM') | (part['TYPE'] != 'E') & (part['P_NAME'].str.startswith('k')) | (part['PT_COMMENT'].str.startswith('m')) & (part['MFGR'] == 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 2272) | (partsupp['PS_SUPPKEY'] >= 5008)].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'h') | (partsupp['PS_PARTKEY'] < 21) | (partsupp['PS_SUPPKEY'] < 1660)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('S')) & (supplier['S_NATIONKEY'] == 10) | (supplier['S_NATIONKEY'] == 22) | (supplier['S_ADDRESS'] == 'M') | (supplier['S_ADDRESS'] == 'D') & (supplier['S_ADDRESS'] == '0')][['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 429.9864310131848) | (partsupp['PS_SUPPKEY'] == 2880) & (partsupp['PS_PARTKEY'] < 11) & (partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['P_COMMENT'] != 'bli')].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 740.4968602122776)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] != 6666.712706413932)][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 527.5533856251627) & (partsupp['PS_SUPPKEY'] > 7076) | (partsupp['AVAILQTY'] > 463)].merge(part[(part['RETAILPRICE'] > 934.5679473826771) | (part['SIZE'] > 26) | (part['RETAILPRICE'] > 946.1589739164601) | (part['BRAND'].isin(['Brand#44', 'Brand#53', 'Brand#23', 'Brand#11', 'Brand#32', 'Brand#22', 'Brand#52', 'Brand#21', 'Brand#35', 'Brand#55', 'Brand#24', 'Brand#45', 'Brand#25', 'Brand#43', 'Brand#42', 'Brand#14', 'Brand#34'])) | (part['TYPE'] == 'E') & (part['SIZE'] != 7) | (part['P_NAME'] == 'w') & (part['SIZE'] > 7)][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 7115.356327473635) | (supplier['S_ACCTBAL'] > 8343.661558118016) & (supplier['S_NATIONKEY'] >= 2) | (supplier['S_ACCTBAL'] >= 137.6872738194636) | (supplier['S_PHONE'] != '2')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] == 115.88936910864209) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 4) & (supplier['S_ADDRESS'] != 't')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('G'))].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'] == 'S')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'g') & (part['P_NAME'] == 'k') & (part['P_PARTKEY'] > 94)][['BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_ADDRESS'] != 'j') & (supplier['S_ADDRESS'] == 'x') | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 5386.806273193093) & (supplier['S_SUPPKEY'] == 104) & (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 5952.114327059787) | (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_PHONE'] == '14-') & (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_ACCTBAL'] > 4910.0962066556585) | (supplier['S_PHONE'] != '14-')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'O')].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'q') | (supplier['S_ACCTBAL'] <= 2297.206630377461) & (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_NATIONKEY'] < 1) & (supplier['S_NATIONKEY'] == 4) & (supplier['S_PHONE'] == '28-')][['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '14-') & (supplier['S_COMMENT'] != 'g')][['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] == 'r') & (supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] == 124)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] > 2)].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'].str.startswith('s'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 11) & (supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_ADDRESS'] != 'O') & (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_SUPPKEY'] != 92) | (supplier['S_NATIONKEY'] != 18)].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_NATIONKEY'] <= 4)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 1) & (supplier['S_COMMENT'] != 'es ') & (supplier['S_ACCTBAL'] <= 4923.764582520253)].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] > 0) & (nation['N_NATIONKEY'] < 17)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_NATIONKEY'] > 8)][['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'] != 'c') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] <= 18)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_SUPPKEY'] < 130) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ACCTBAL'] <= 4797.197595278674)].merge(nation[(nation['N_NATIONKEY'] > 20) & (nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] >= 9) | (nation['N_NATIONKEY'] > 0)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 174) | (supplier['S_SUPPKEY'] == 65) | (supplier['S_ADDRESS'] != ' ')].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 109) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_ADDRESS'] != 'U')][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 40) & (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] != 'i')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 9) & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] != 't') & (nation['N_NATIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NATIONKEY'] > 19) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 7) | (nation['N_NATIONKEY'] <= 1) | (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 175.89313879284578) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NATIONKEY'] > 10) | (customer['C_ADDRESS'] == 'p')][['C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] == 5) & (nation['N_NATIONKEY'] <= 17)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 2240.879508820096) & (customer['C_NATIONKEY'] == 1) & (customer['C_ADDRESS'].str.startswith('B')) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 32) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] == 1) | (customer['C_COMMENT'] != 'o')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 7809.531190128193) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'S') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_CUSTKEY'] <= 38) & (customer['C_ADDRESS'].str.startswith('Y'))][['C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != '.') | (customer['C_ACCTBAL'] == 9859.848443685569) | (customer['C_ACCTBAL'] < 1231.4688579750455) & (customer['C_PHONE'] == '3') & (customer['C_NATIONKEY'] >= 11) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != '7')].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_NATIONKEY'] < 20) & (nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 'l')].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'e') | (customer['C_ADDRESS'] != ',') & (customer['C_ACCTBAL'] != 6587.581254377875) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] != 'e') | (customer['C_PHONE'].str.startswith('22-')) | (customer['C_ACCTBAL'] <= -157.88696126480897) | (customer['C_NATIONKEY'] == 9)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'd') & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE'])) & (customer['C_COMMENT'].str.startswith(',')) | (customer['C_NATIONKEY'] != 19) & (customer['C_NATIONKEY'] > 22) & (customer['C_NATIONKEY'] <= 19) & (customer['C_COMMENT'] != 'o')][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('p')) & (customer['C_NATIONKEY'] < 22) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_PHONE'] == '13-') & (customer['C_ACCTBAL'] == -155.87836824186684) | (customer['C_NATIONKEY'] != 13) & (customer['MKTSEGMENT'].isin(['FURNITURE']))][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 18) & (customer['C_ACCTBAL'] <= 1922.0735602559876) & (customer['C_ADDRESS'] != 'h') | (customer['C_ACCTBAL'] <= -490.4277919005885) | (customer['C_NATIONKEY'] <= 19)][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('B'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 67) & (customer['C_ADDRESS'] == 'r') & (customer['C_NATIONKEY'] <= 20) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ACCTBAL'] < 7584.442376399273)].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'P')].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] < 13) | (customer['C_ADDRESS'] != 'r') | (customer['C_CUSTKEY'] < 39)][['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == 678.462927277362) | (customer['C_ADDRESS'] == 'I') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 2656.8427782613307)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 8) & (customer['C_ADDRESS'] == 'Q') | (customer['C_COMMENT'] == 'a') | (customer['C_ACCTBAL'] >= 228.7210052965579) & (customer['C_NATIONKEY'] > 7) & (customer['C_NAME'] != 'C')][['C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 21) & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] == 27) | (customer['C_NATIONKEY'] < 15)][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] != 9) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] == 17)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 2) | (customer['C_COMMENT'] == 'p') | (customer['C_COMMENT'] != 'a') | (customer['C_PHONE'] == '27-') & (customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] == 20) | (customer['C_ACCTBAL'] < 1505.099308608585)][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 7) & (nation['N_NAME'] == 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 0) & (customer['C_PHONE'] != '3') | (customer['C_ADDRESS'] != 'B') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_NATIONKEY'] >= 17) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 0) & (customer['C_ACCTBAL'] >= 109.07129030708211) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] > 6669.456139025427) & (customer['C_ADDRESS'] == 'n') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

customer[(customer['C_PHONE'] != '2') | (customer['C_COMMENT'] == 'o') & (customer['C_PHONE'] == '25-') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] > 21) | (nation['N_NATIONKEY'] != 11)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '13-') | (customer['C_ACCTBAL'] != 9280.635296834298) | (customer['C_CUSTKEY'] < 1) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'].str.startswith('d'))][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'] == 'k') | (customer['C_CUSTKEY'] < 6) & (customer['C_NATIONKEY'] < 22) & (customer['C_ADDRESS'].str.startswith('s')) | (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] != 12)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 4)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] != ' re') & (orders['TOTALPRICE'] <= 331409.3337213492) | (orders['TOTALPRICE'] == 295388.94028227794) & (orders['O_COMMENT'] == 'u') | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] != 'j') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] != 140297)][['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] <= 309795.50174627115)][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] != 'M') & (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'] == 's')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 2011) | (partsupp['PS_PARTKEY'] >= 15) | (partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['PS_PARTKEY'] > 4)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'P') | (part['SIZE'] <= 27) & (part['P_NAME'] == 'd')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 5346) | (partsupp['SUPPLYCOST'] < 248.0313185286434)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('V'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 't') & (partsupp['PS_PARTKEY'] == 49) | (partsupp['AVAILQTY'] == 8864)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] > 902.2999101564058) | (part['BRAND'] != 'Brand#23')][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_PARTKEY'] == 57598) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['LINESTATUS'] == 'F') | (lineitem['QUANTITY'] > 26) | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['DISCOUNT'] <= 0.012122019390502193) | (lineitem['L_ORDERKEY'] < 61) & (lineitem['SHIPDATE'] > '1992-04-27')].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_ORDERKEY'] < 83) & (lineitem['TAX'] == 0.07713521425602092) | (lineitem['TAX'] != 0.06453719199587726)].merge(orders.merge(customer[(customer['C_COMMENT'].str.startswith('o')) | (customer['C_COMMENT'] == 'u')].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

lineitem[(lineitem['DISCOUNT'] > 0.03585712531408865) | (lineitem['L_PARTKEY'] <= 174032) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['EXTENDEDPRICE'] > 80816.06358681156) & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_ORDERKEY'] >= 142)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 2965) & (partsupp['P_COMMENT'] == 'are') | (partsupp['PS_SUPPKEY'] <= 2161) | (partsupp['PS_SUPPKEY'] != 1341) & (partsupp['PS_SUPPKEY'] >= 2786)][['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] <= 0.07636976734120754) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['TYPE'] != 'M') | (part['TYPE'] != 'P') & (part['BRAND'] != 'Brand#24') | (part['MFGR'] == 'Manufacturer#5') & (part['RETAILPRICE'] <= 1021.4456304095736) & (part['BRAND'] != 'Brand#34')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] == 4) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['QUANTITY'] <= 33) | (lineitem['L_PARTKEY'] <= 131672) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_SUPPKEY'] != 2569) | (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['RETURNFLAG'].isin(['N', 'R']))].merge(orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['LINESTATUS'].isin(['F']))].merge(orders[(orders['O_CUSTKEY'] >= 76409) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT'])) | (orders['O_COMMENT'] == 'the') & (orders['SHIPPRIORITY'] < 0)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('count')

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL', 'AIR', 'RAIL'])) | (lineitem['LINENUMBER'] != 2) | (lineitem['L_COMMENT'].str.startswith('i'))].merge(partsupp[(partsupp['AVAILQTY'] > 1747) | (partsupp['PS_SUPPKEY'] <= 1872)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('h')) & (part['P_NAME'] != 'n') & (part['P_PARTKEY'] > 190) | (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] == 'JUMBO') & (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'f') & (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['DISCOUNT'] > 0.06049656253945693) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['SHIPINSTRUCT'] != 'NONE')][['L_SUPPKEY', 'SHIPDATE', 'DISCOUNT', 'LINESTATUS', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE', 'EXTENDEDPRICE', 'QUANTITY']].merge(orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] != 154531) | (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['LINENUMBER'] != 4)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 26) | (partsupp['PS_PARTKEY'] >= 4) & (partsupp['SUPPLYCOST'] != 706.3263248949849) | (partsupp['PS_PARTKEY'] >= 32) & (partsupp['AVAILQTY'] != 4651)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == ' ') & (supplier['S_SUPPKEY'] > 31)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 124870) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE']))].merge(orders[(orders['O_ORDERKEY'] != 116) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] != 148711.4690582) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) & (orders['TOTALPRICE'] != 276833.50158940227)].merge(customer[['C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['QUANTITY'] < 43) | (lineitem['L_SUPPKEY'] <= 1081)].merge(partsupp[(partsupp['PS_SUPPKEY'] == 150) & (partsupp['PS_PARTKEY'] != 9) & (partsupp['PS_SUPPKEY'] >= 2277) | (partsupp['AVAILQTY'] > 6019)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_NATIONKEY'] < 22)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['SHIPMODE'] == 'RAIL')][['L_SUPPKEY', 'L_COMMENT', 'RECEIPTDATE']].merge(partsupp.merge(part[(part['CONTAINER'] != 'MED') & (part['RETAILPRICE'] != 910.1925100315317)][['BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['QUANTITY'] < 26) | (lineitem['L_SUPPKEY'] == 7520) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['EXTENDEDPRICE'] < 82339.74030832482) | (lineitem['L_ORDERKEY'] != 79) | (lineitem['TAX'] == 0.03325244953719721)].merge(partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['L_ORDERKEY'] != 108) & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_SUPPKEY'] != 3449) | (lineitem['COMMITDATE'] < '1998-10-16')].merge(orders[['TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_ORDERKEY'] > 96) & (lineitem['L_SUPPKEY'] <= 9381) | (lineitem['L_SUPPKEY'] <= 2148)].merge(partsupp.merge(part[(part['TYPE'].str.startswith('P')) & (part['CONTAINER'] == 'SM') | (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] > 1) & (part['P_NAME'] != 'lin') | (part['CONTAINER'] == 'WRAP') & (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'MAIL') & (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['EXTENDEDPRICE'] == 80081.3726203229) | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['QUANTITY'] < 30) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['LINESTATUS'] == 'F')].merge(partsupp[(partsupp['PS_SUPPKEY'] < 6523) & (partsupp['PS_SUPPKEY'] != 1822) | (partsupp['PS_PARTKEY'] > 35)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] != 'SMA') & (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] > 0.026856373324316004) & (lineitem['LINENUMBER'] < 6)].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NAME'] == 'K') & (nation['N_NAME'] != 'B')].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPMODE', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] == ',') & (partsupp['P_COMMENT'].str.startswith('b')) & (partsupp['SUPPLYCOST'] >= 679.7703102495813)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 6269.345355476093) | (supplier['S_ACCTBAL'] != 6484.893298538834)][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['L_PARTKEY', 'COMMITDATE', 'RECEIPTDATE', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2540) | (partsupp['P_COMMENT'] != 'bli') & (partsupp['SUPPLYCOST'] > 631.383662175794)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] != 'g')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'SHIPDATE', 'DISCOUNT', 'LINESTATUS', 'L_COMMENT', 'SHIPMODE', 'COMMITDATE']].merge(partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#3'])) | (part['BRAND'].isin(['Brand#55', 'Brand#51', 'Brand#43', 'Brand#24', 'Brand#31', 'Brand#41', 'Brand#13', 'Brand#14', 'Brand#25', 'Brand#34', 'Brand#15', 'Brand#54', 'Brand#44', 'Brand#23', 'Brand#32'])) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2'])) | (part['RETAILPRICE'] < 985.0931222590057)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'P_NAME']).agg('count')

lineitem[['SHIPDATE', 'SHIPMODE', 'RECEIPTDATE', 'LINESTATUS', 'QUANTITY', 'DISCOUNT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE']].merge(orders[(orders['TOTALPRICE'] > 109081.77858918386) & (orders['O_CUSTKEY'] > 86384) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] >= 44308) | (orders['ORDERSTATUS'] != 'O') & (orders['O_CUSTKEY'] > 118881) & (orders['CLERK'] == 'C')][['ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 8091) | (partsupp['PS_PARTKEY'] != 23) & (partsupp['PS_PARTKEY'] > 35) & (partsupp['SUPPLYCOST'] > 117.49078089236069) | (partsupp['PS_SUPPKEY'] > 5204)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']).agg('count')

lineitem[['TAX', 'LINENUMBER', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY', 'QUANTITY', 'L_COMMENT']].merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] < 43778) & (orders['TOTALPRICE'] > 318087.37913456396) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] < 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'CLERK', 'SHIPPRIORITY']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] == 8898.300672985868) & (customer['C_ACCTBAL'] > 4127.000417853267) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'] == '1') & (customer['C_COMMENT'].str.startswith('q'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 3378.043412243708)][['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 19) | (customer['C_ACCTBAL'] < 408.77467549448943) & (customer['C_CUSTKEY'] <= 99) | (customer['C_CUSTKEY'] != 71) & (customer['C_COMMENT'].str.startswith('h')) & (customer['C_NATIONKEY'] >= 20)].merge(nation[(nation['N_NATIONKEY'] == 18) & (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] != 8) | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] < 39068) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_COMMENT'] == 'e') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 71) & (customer['C_CUSTKEY'] < 94) | (customer['C_ADDRESS'] == '9') | (customer['C_ACCTBAL'] >= 2578.202764694934)][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['CLERK'] == 'C')].merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'].str.startswith('a')) & (customer['C_ADDRESS'] != '7')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'u') & (nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] >= 142755) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE']))].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['TOTALPRICE'] <= 191195.18388636166)].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'BUILDING'])) & (customer['C_ACCTBAL'] >= 911.8602346799728) | (customer['C_ADDRESS'] != 'q') & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 9) & (customer['C_NATIONKEY'] > 14)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] <= 0)][['SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NATIONKEY'] == 11) | (customer['C_ADDRESS'] != 'w') | (customer['C_COMMENT'].str.startswith('t')) | (customer['C_CUSTKEY'] < 35)][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_COMMENT'].str.startswith('uri'))].merge(customer[(customer['C_COMMENT'].str.startswith('p')) | (customer['C_ACCTBAL'] > 7654.33166787206) | (customer['C_CUSTKEY'] <= 27)][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['TOTALPRICE'] < 220090.65235712033) | (orders['TOTALPRICE'] > 36679.973480625085)].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] != 'e') | (orders['O_COMMENT'].str.startswith('u')) | (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == '.') & (orders['O_CUSTKEY'] < 109840) & (orders['ORDERDATE'] > '1998-07-21') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 10)].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('e')) & (orders['TOTALPRICE'] == 36816.52797424707) & (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERDATE'] <= '1998-07-21') | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] < 160769.60437455424)].merge(customer[(customer['C_NATIONKEY'] == 18) | (customer['C_ACCTBAL'] <= 7239.8626271616495) | (customer['C_ACCTBAL'] < 4373.057825203081)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('y')) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM'])) | (orders['TOTALPRICE'] != 80529.78839465494) | (orders['O_CUSTKEY'] != 50300) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] != 44185)].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 62087) & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] >= 92) | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_COMMENT'] != 'e') | (orders['O_ORDERKEY'] <= 446) | (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C')][['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] == 1705.5730725489266) & (customer['C_ADDRESS'] == 'g')][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 72552) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '3-MEDIUM', '5-LOW'])) | (orders['O_CUSTKEY'] > 116719)].merge(customer[(customer['C_NATIONKEY'] >= 0) & (customer['C_ADDRESS'] != 'm') | (customer['C_NATIONKEY'] > 5) & (customer['C_ACCTBAL'] < 7842.318328926956)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 180) & (orders['O_COMMENT'].str.startswith('b')) | (orders['O_COMMENT'].str.startswith('x')) | (orders['O_CUSTKEY'] != 100395) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] <= 53827) | (orders['CLERK'] == 'C')][['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 499) & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE'])) | (customer['C_COMMENT'] == 'e') & (customer['C_NATIONKEY'] == 9) & (customer['C_COMMENT'] != 'd') & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_ADDRESS'] != 'n') | (customer['C_PHONE'] != '2')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['O_ORDERKEY'] >= 786) & (orders['O_ORDERKEY'] < 112) & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] <= 95748) | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['ORDERSTATUS'] != 'P')].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] <= 14) | (nation['N_COMMENT'] != 'u') | (nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] > '1998-07-21')].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 266048.5850533784) | (orders['O_CUSTKEY'] < 137557) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['O_COMMENT'] == 'c')].merge(customer[(customer['C_NATIONKEY'] >= 10) | (customer['C_ADDRESS'].str.startswith('x')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] >= 17) & (customer['C_CUSTKEY'] > 71)][['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] != 67745.4442547459) | (orders['TOTALPRICE'] >= 312946.2479224225) | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C')].merge(customer[(customer['C_ACCTBAL'] >= -637.8313473430836) | (customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] >= 75) | (customer['C_CUSTKEY'] > 67) & (customer['C_NATIONKEY'] != 9) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 236282.38026396287) & (orders['TOTALPRICE'] > 41899.83950575069) | (orders['O_ORDERKEY'] < 295) & (orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] <= 64515)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NATIONKEY'] != 13) & (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] > 11)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 93991.27992185614) & (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] > 260350.1143257567)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] != 12) & (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] < 16) & (customer['C_PHONE'] == '18-') & (customer['C_COMMENT'] == 'i') | (customer['C_COMMENT'].str.startswith('u'))][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] != 17) & (customer['C_ACCTBAL'] >= 6332.96804439089) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_CUSTKEY'] <= 88)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE'])) & (customer['C_COMMENT'] == 'p') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'g') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] < 21) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] < 8188.839459323732) & (customer['C_CUSTKEY'] == 93) | (customer['C_ADDRESS'] == '4') & (customer['C_CUSTKEY'] > 34)].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] > 45) | (customer['C_CUSTKEY'] > 51) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD']))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

part[(part['P_PARTKEY'] > 111) & (part['RETAILPRICE'] >= 994.007395240302) & (part['BRAND'].isin(['Brand#44'])) & (part['BRAND'].isin(['Brand#25', 'Brand#23', 'Brand#35', 'Brand#12'])) | (part['SIZE'] >= 13) & (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] > 28) | (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'] == 'w')][['BRAND', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['P_NAME', 'MFGR', 'BRAND', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] <= 4) | (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'b') | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_COMMENT'] != 'x') | (supplier['S_ADDRESS'] == ',')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] != 'l')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'].str.startswith('28-'))][['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 11) | (nation['N_NATIONKEY'] <= 18) | (nation['N_NATIONKEY'] >= 11)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] > 70) | (supplier['S_PHONE'] != '32-') | (supplier['S_PHONE'] != '17-') | (supplier['S_PHONE'] == '26-') | (supplier['S_NATIONKEY'] >= 13)].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'] == 'J')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 181)].merge(nation[(nation['N_NATIONKEY'] == 1) & (nation['N_NATIONKEY'] >= 13) | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'a')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 6) & (nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] > 9)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5840)].merge(part[(part['SIZE'] > 38) | (part['P_PARTKEY'] <= 7) | (part['RETAILPRICE'] > 1030.4431459598004) & (part['RETAILPRICE'] == 1055.469233074952)][['RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9431) & (partsupp['AVAILQTY'] > 7470) | (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['PS_SUPPKEY'] == 5392) & (partsupp['PS_PARTKEY'] == 37)].merge(supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 120) & (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 6780) & (partsupp['PS_PARTKEY'] == 13) | (partsupp['AVAILQTY'] == 9131) | (partsupp['P_COMMENT'] == 'b')].merge(part[(part['BRAND'] != 'Brand#44') & (part['MFGR'] != 'Manufacturer#5')][['CONTAINER', 'TYPE', 'RETAILPRICE', 'SIZE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 767) | (partsupp['AVAILQTY'] >= 9220) | (partsupp['AVAILQTY'] >= 7629)].merge(supplier[(supplier['S_NATIONKEY'] == 23) | (supplier['S_NATIONKEY'] < 19) & (supplier['S_SUPPKEY'] > 81) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'o')][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 9685) | (partsupp['AVAILQTY'] == 3564) & (partsupp['SUPPLYCOST'] < 353.73776580448543) | (partsupp['PS_PARTKEY'] < 26)][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] != 'v') | (part['SIZE'] < 2) & (part['RETAILPRICE'] > 1062.2674267836558) & (part['P_PARTKEY'] != 14) | (part['PT_COMMENT'].str.startswith('c'))][['P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 22) | (partsupp['AVAILQTY'] == 3035) & (partsupp['SUPPLYCOST'] >= 65.60091300228243) & (partsupp['PS_SUPPKEY'] >= 1187) & (partsupp['P_COMMENT'] == 'j')][['PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 44) | (partsupp['PS_PARTKEY'] > 38) & (partsupp['PS_PARTKEY'] > 31)].merge(supplier[(supplier['S_NATIONKEY'] > 13) & (supplier['S_COMMENT'] == 'f')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 39) | (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['PS_PARTKEY'] != 43) | (partsupp['P_COMMENT'] == ' th') & (partsupp['AVAILQTY'] > 1803)].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 40) & (partsupp['PS_PARTKEY'] < 30) | (partsupp['PS_SUPPKEY'] > 4771) | (partsupp['AVAILQTY'] != 7149) & (partsupp['PS_PARTKEY'] < 10)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'LG') | (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'] != 's') & (part['CONTAINER'] == 'SM') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 98) | (partsupp['PS_SUPPKEY'] < 1992) | (partsupp['P_COMMENT'] != 'bli') & (partsupp['AVAILQTY'] > 1111) & (partsupp['PS_PARTKEY'] != 46)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 2348) & (partsupp['PS_SUPPKEY'] <= 4732) & (partsupp['PS_PARTKEY'] < 18)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('9')) | (supplier['S_ADDRESS'] != 'T') & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] == 'es ') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('U'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6681) & (partsupp['PS_SUPPKEY'] <= 113) & (partsupp['PS_SUPPKEY'] <= 787)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['BRAND'].isin(['Brand#14', 'Brand#31', 'Brand#44', 'Brand#32', 'Brand#13', 'Brand#54', 'Brand#43', 'Brand#34', 'Brand#15', 'Brand#22', 'Brand#23', 'Brand#53', 'Brand#24', 'Brand#35', 'Brand#52', 'Brand#51', 'Brand#12', 'Brand#33', 'Brand#45', 'Brand#25'])) & (part['TYPE'].str.startswith('SMA')) | (part['P_PARTKEY'] >= 174)][['SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' th') | (partsupp['P_COMMENT'] != 'b') & (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['PS_SUPPKEY'] <= 2479)].merge(part[(part['PT_COMMENT'].str.startswith('b')) & (part['PT_COMMENT'] != 'a') | (part['RETAILPRICE'] != 990.3070190776348)][['P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'TYPE', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' th')].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'e') | (partsupp['P_COMMENT'] == 't') & (partsupp['PS_PARTKEY'] < 41) & (partsupp['PS_SUPPKEY'] == 6664)].merge(part[(part['P_NAME'] == 'lin') & (part['RETAILPRICE'] <= 1050.1385146793334) | (part['P_NAME'] != 'c')][['TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'TYPE', 'P_NAME', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 't') | (partsupp['PS_SUPPKEY'] >= 6920) & (partsupp['SUPPLYCOST'] >= 783.2494568274101) | (partsupp['SUPPLYCOST'] >= 907.071154269611) & (partsupp['PS_SUPPKEY'] > 2707)].merge(part[(part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] > 1089.5033634831716) | (part['CONTAINER'] != 'SM') & (part['SIZE'] <= 29) & (part['P_PARTKEY'] != 62) & (part['PT_COMMENT'] == ' fi') | (part['RETAILPRICE'] == 1028.3870132456666) | (part['MFGR'] == 'Manufacturer#2')][['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['P_COMMENT'] != '.') | (partsupp['PS_SUPPKEY'] >= 7460) | (partsupp['PS_SUPPKEY'] < 1111)].merge(supplier[(supplier['S_ADDRESS'] != 'C') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 9) | (supplier['S_ADDRESS'] == 't')].merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'F')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['SUPPLYCOST'] < 412.9345639140508) & (partsupp['SUPPLYCOST'] < 931.0999519499607)].merge(supplier[(supplier['S_ADDRESS'].str.startswith(' ')) & (supplier['S_SUPPKEY'] >= 171) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 53) | (supplier['S_COMMENT'] != 'f')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 443.0843412492431) | (partsupp['SUPPLYCOST'] < 477.3139866837036) | (partsupp['PS_PARTKEY'] > 10) | (partsupp['P_COMMENT'].str.startswith('h')) | (partsupp['PS_PARTKEY'] < 1)].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 626.1767776685289) & (partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['SUPPLYCOST'] >= 666.4859576951358) | (partsupp['P_COMMENT'] != 'ly ')][['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] < 19) & (supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] >= 2735.235042908612) & (supplier['S_ACCTBAL'] != 1739.73216753767)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 952.2665670342641) | (partsupp['PS_PARTKEY'] < 5) & (partsupp['PS_SUPPKEY'] != 4137)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('I'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 160.09391631592013) | (partsupp['PS_SUPPKEY'] == 1534) & (partsupp['PS_PARTKEY'] < 31) & (partsupp['AVAILQTY'] <= 6235) & (partsupp['AVAILQTY'] >= 7252)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] == 173) & (supplier['S_ADDRESS'] == 'W')].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 206.5027722142227) | (partsupp['P_COMMENT'] == 't') | (partsupp['AVAILQTY'] >= 9720) | (partsupp['AVAILQTY'] >= 5113) | (partsupp['AVAILQTY'] <= 5122)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 17)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#22') & (part['CONTAINER'] != 'MED') & (part['SIZE'] != 15) & (part['BRAND'].isin(['Brand#21', 'Brand#44', 'Brand#43', 'Brand#51', 'Brand#24', 'Brand#32', 'Brand#15'])) | (part['CONTAINER'] == 'LG')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] < 22) | (nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['TYPE'] != 'SMA') & (part['BRAND'].isin(['Brand#53', 'Brand#11', 'Brand#12', 'Brand#51', 'Brand#42', 'Brand#13', 'Brand#22', 'Brand#23', 'Brand#55', 'Brand#45', 'Brand#43', 'Brand#33', 'Brand#21', 'Brand#52', 'Brand#44', 'Brand#14', 'Brand#41', 'Brand#32', 'Brand#15'])) | (part['MFGR'] == 'Manufacturer#4') | (part['RETAILPRICE'] != 951.4789952288784) | (part['SIZE'] > 47) | (part['BRAND'] != 'Brand#12')][['BRAND', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'MFGR']).agg('count')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_ADDRESS'] == 'L') | (supplier['S_ACCTBAL'] > 7776.28783803595)][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ADDRESS'] != 'D')][['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_NATIONKEY'] == 4) & (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'Q') | (supplier['S_SUPPKEY'] < 149) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_SUPPKEY'] < 32)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] == 11) & (supplier['S_ADDRESS'] != 'n') & (supplier['S_ACCTBAL'] < 5981.232298476576) & (supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] == -899.631502338232)][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 52) | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_NATIONKEY'] != 19)][['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 115) | (supplier['S_PHONE'] != '14-') & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] != 'g')].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] > 3) & (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] != 23)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 7) & (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_ADDRESS'].str.startswith('X')) & (supplier['S_NATIONKEY'] > 19) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'] == 'r')].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 21) | (supplier['S_ACCTBAL'] != 1294.7334540373379) | (supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_SUPPKEY'] != 130) | (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'] == 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 10) | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_COMMENT'].str.startswith('n')) & (supplier['S_SUPPKEY'] == 45) & (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 23) & (supplier['S_ACCTBAL'] >= 3228.7073773842385) | (supplier['S_NATIONKEY'] > 16)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'] == 'H') | (supplier['S_ADDRESS'].str.startswith('v')) & (supplier['S_ADDRESS'] == 'q')][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_PHONE'] == '1') & (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_NATIONKEY'] > 16) | (supplier['S_ACCTBAL'] > 2230.188734528324)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] == 'p') & (nation['N_NAME'] == 'I')].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 89) | (supplier['S_ADDRESS'] != 'T') & (supplier['S_ADDRESS'] != 'C') & (supplier['S_COMMENT'] == 'a') & (supplier['S_COMMENT'] == 'k') | (supplier['S_NATIONKEY'] < 17) | (supplier['S_ACCTBAL'] == 2534.591827302239)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 111) | (supplier['S_ADDRESS'] != 'x') & (supplier['S_NATIONKEY'] != 14)][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 11)].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 43) & (supplier['S_NATIONKEY'] <= 7) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 109)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] == 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 18) & (nation['N_NATIONKEY'] != 3) | (nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] < 13)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 9967.768474745128) | (customer['C_NATIONKEY'] >= 2) | (customer['C_NATIONKEY'] <= 5)].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] >= 10) | (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'] == 'i')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 1823.718889054614) | (customer['C_ACCTBAL'] == 2022.5684686507434) & (customer['C_NATIONKEY'] <= 12) & (customer['C_CUSTKEY'] > 61)][['C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] == 0) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'g') & (customer['C_ACCTBAL'] > -27.76556326796708) | (customer['C_NATIONKEY'] != 18) | (customer['C_ACCTBAL'] >= 7595.060293354823)][['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'q') & (customer['C_NATIONKEY'] == 9)][['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 18)].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != 't') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 19) & (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_NATIONKEY'] != 15)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 49) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] != ',') | (customer['C_CUSTKEY'] == 57)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == 5974.047782159282) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 29) | (customer['C_COMMENT'] == 'd') & (customer['C_COMMENT'] != 'r') | (customer['C_ACCTBAL'] < 6319.118863093595)][['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_COMMENT'] != ' ') & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] < 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] < 13)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] != 'm') & (customer['C_CUSTKEY'] < 25)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 10)].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != '3') | (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'u') & (customer['C_CUSTKEY'] != 27)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] > 59)][['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '18-')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'] == 'u') | (nation['N_NAME'].str.startswith('G'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] >= 4360.209756052055) | (customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] >= 53) | (customer['C_ACCTBAL'] > 9792.869771894731)].merge(nation[(nation['N_COMMENT'] == 'i')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ACCTBAL'] == 794.3183921074924) & (customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['C_CUSTKEY'] != 99) | (customer['C_CUSTKEY'] <= 72) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] < -142.39869055465795) & (customer['C_ADDRESS'] != 's') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '18-')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'] != 's') | (customer['C_NATIONKEY'] < 3) & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_COMMENT'] != 'l') & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_CUSTKEY'] == 59)][['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] > 1) | (customer['C_NATIONKEY'] > 4) & (customer['C_NATIONKEY'] > 10)][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] >= 8289.18971391649) | (customer['C_ADDRESS'] != '4')][['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('u')) | (customer['C_COMMENT'].str.startswith('t')) | (customer['C_PHONE'] != '2')][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) | (customer['C_ADDRESS'] != 's') & (customer['C_COMMENT'] == 'k') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_ACCTBAL'] >= 4011.9127911996366)][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 't')].merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] < 10) | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] <= 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 3112)].merge(part[(part['PT_COMMENT'] == 'e') | (part['P_PARTKEY'] == 110) & (part['TYPE'] == 'P') & (part['BRAND'] == 'Brand#14') | (part['BRAND'] == 'Brand#22') & (part['P_PARTKEY'] >= 38) & (part['SIZE'] < 27) & (part['TYPE'] != 'L') | (part['CONTAINER'].str.startswith('SM'))][['SIZE', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 26) & (partsupp['PS_SUPPKEY'] < 319) & (partsupp['P_COMMENT'] != 't') & (partsupp['AVAILQTY'] == 9678)].merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'] == '28-') & (supplier['S_NATIONKEY'] == 3)].merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'd')].merge(part[(part['RETAILPRICE'] < 1026.9722553219558) & (part['BRAND'] == 'Brand#43') | (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1']))][['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'BRAND']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 546.3791750282984) & (partsupp['SUPPLYCOST'] == 204.3295848266609) & (partsupp['P_COMMENT'] == 'x')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['BRAND'] != 'Brand#13') | (part['P_PARTKEY'] >= 84) | (part['CONTAINER'] == 'LG')][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] != 0.059267834917738564) & (lineitem['RETURNFLAG'] == 'A')].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_NATIONKEY'] < 11)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.06962229981099893)].merge(partsupp.merge(part[(part['P_NAME'] != 'h') & (part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] == 'q') | (part['RETAILPRICE'] < 933.8199246243331)][['TYPE', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'MFGR', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.04151972313014272) & (lineitem['LINENUMBER'] == 6) & (lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['SUPPLYCOST'] != 775.0641704896765) & (partsupp['AVAILQTY'] >= 9194) | (partsupp['AVAILQTY'] != 9369) | (partsupp['PS_PARTKEY'] == 29) & (partsupp['PS_SUPPKEY'] <= 4897)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 83007.9073823248) | (lineitem['QUANTITY'] != 42) & (lineitem['LINENUMBER'] >= 1) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['L_PARTKEY'] < 195986) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPINSTRUCT'] != 'NONE')][['QUANTITY', 'SHIPDATE', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 79265.2399490913) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['L_COMMENT'].str.startswith('a'))].merge(orders.merge(customer[(customer['C_PHONE'] == '1') & (customer['C_ACCTBAL'] < 1639.58392857142) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 21) | (customer['C_ADDRESS'] == 'x')].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 'p') & (nation['N_NAME'].str.startswith('V'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F')].merge(orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '3-MEDIUM'])) | (orders['TOTALPRICE'] == 44795.43891630128) | (orders['TOTALPRICE'] >= 292575.2778638631) & (orders['O_ORDERKEY'] <= 20)].merge(customer[(customer['C_PHONE'] != '3')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['QUANTITY'] <= 15) & (lineitem['L_ORDERKEY'] < 87) | (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] <= 4) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('ly ')) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['L_PARTKEY'] >= 28247) | (lineitem['DISCOUNT'] < 0.015852994921692544) | (lineitem['LINENUMBER'] > 1) | (lineitem['EXTENDEDPRICE'] < 41309.177198544356) | (lineitem['L_SUPPKEY'] == 5102) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_COMMENT'] != 'f')].merge(orders.merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 137) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['TAX'] != 0.014765043404926362) & (lineitem['L_ORDERKEY'] <= 136)][['QUANTITY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'P_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 14449) & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_ORDERKEY'] != 65) | (lineitem['QUANTITY'] >= 6)].merge(orders.merge(customer[(customer['C_CUSTKEY'] <= 24) & (customer['C_COMMENT'] != 'u') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) & (customer['C_NATIONKEY'] != 22) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_COMMENT'].str.startswith('y'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 6526) & (lineitem['L_COMMENT'].str.startswith('e')) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['LINENUMBER'] < 2)][['QUANTITY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'RETURNFLAG', 'SHIPMODE']].merge(partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 1938) & (lineitem['L_ORDERKEY'] <= 45) & (lineitem['L_ORDERKEY'] >= 43) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['TAX'] >= 0.042647907875175424) & (lineitem['DISCOUNT'] > 0.04943614188664935) & (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP', 'MAIL', 'AIR', 'REG AIR']))][['SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER', 'COMMITDATE', 'DISCOUNT', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS']).agg('count')

lineitem[(lineitem['QUANTITY'] != 14) | (lineitem['EXTENDEDPRICE'] <= 67804.90122774566) | (lineitem['L_PARTKEY'] < 33991) | (lineitem['L_PARTKEY'] != 82108) & (lineitem['EXTENDEDPRICE'] == 10302.51941371026)].merge(partsupp[(partsupp['SUPPLYCOST'] != 60.871469709449215) | (partsupp['SUPPLYCOST'] >= 82.76743251683871) & (partsupp['AVAILQTY'] >= 5852) | (partsupp['AVAILQTY'] != 4507) | (partsupp['PS_PARTKEY'] != 32)].merge(part[['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['L_COMMENT'] == 'p') & (lineitem['QUANTITY'] >= 38)].merge(partsupp[(partsupp['PS_PARTKEY'] != 12) | (partsupp['SUPPLYCOST'] != 476.1513501515393) & (partsupp['SUPPLYCOST'] == 498.9877754029035) | (partsupp['P_COMMENT'].str.startswith('l'))].merge(supplier[(supplier['S_NATIONKEY'] >= 23) | (supplier['S_ADDRESS'].str.startswith('y')) & (supplier['S_COMMENT'] != 'n')].merge(nation[(nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['QUANTITY'] > 34) & (lineitem['SHIPMODE'] != 'AIR') | (lineitem['L_ORDERKEY'] < 73) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['LINESTATUS'] != 'O') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_PARTKEY'] > 5301) | (lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['PS_PARTKEY'] != 48)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] == 'MAIL') | (lineitem['L_SUPPKEY'] > 6688) | (lineitem['RECEIPTDATE'] <= '1998-11-06')][['TAX', 'RECEIPTDATE', 'SHIPINSTRUCT', 'SHIPDATE', 'LINENUMBER', 'COMMITDATE', 'L_SUPPKEY', 'SHIPMODE', 'DISCOUNT', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 564.5302373309994) & (partsupp['SUPPLYCOST'] < 327.33886641416893)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'QUANTITY', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'DISCOUNT', 'RECEIPTDATE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 1) & (supplier['S_NATIONKEY'] > 18) | (supplier['S_NAME'] == 'S')].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY', 'L_COMMENT', 'L_SUPPKEY', 'SHIPMODE', 'QUANTITY']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'SIZE']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_COMMENT']].merge(orders[(orders['ORDERSTATUS'] == 'F') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH'])) | (orders['TOTALPRICE'] == 62549.09381361399) & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 69303) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] > 0)].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT']].merge(partsupp[(partsupp['PS_PARTKEY'] == 16) | (partsupp['PS_PARTKEY'] == 31) | (partsupp['SUPPLYCOST'] < 193.65572030264494) | (partsupp['PS_PARTKEY'] > 42)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] != 2141.753409841975) | (customer['C_NATIONKEY'] > 13) | (customer['C_ADDRESS'].str.startswith('4')) | (customer['C_COMMENT'] == 's') & (customer['C_CUSTKEY'] == 56)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] >= 6)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 85)].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] != 19)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] == 76) | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 7) | (customer['C_PHONE'] == '3') & (customer['C_COMMENT'].str.startswith('o')) & (customer['C_ADDRESS'].str.startswith('F')) & (customer['C_COMMENT'] != 'g') | (customer['C_NATIONKEY'] > 4) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'U')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_CUSTKEY'] >= 62) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 2033.1775239391736) & (customer['C_PHONE'].str.startswith('3')) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_PHONE'] != '13-') & (customer['C_ACCTBAL'] >= -41.081869538610704)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] > 7152) & (orders['CLERK'] != 'C')][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_COMMENT'].str.startswith('b')) & (orders['O_ORDERKEY'] < 764) & (orders['O_ORDERKEY'] != 518) & (orders['O_ORDERKEY'] < 649) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW'])) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] == '1998-07-21') | (orders['O_CUSTKEY'] < 84015)].merge(customer[(customer['C_CUSTKEY'] <= 1) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith(','))][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('count')

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] == 544) | (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_COMMENT'].str.startswith(' re')) & (orders['TOTALPRICE'] > 103894.07528337959) & (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['O_COMMENT'] != 's') | (orders['O_ORDERKEY'] >= 601) & (orders['TOTALPRICE'] <= 331027.2228376476) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT'])) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'q')].merge(customer.merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'] == 'I')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] == ',')].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] != 47) & (customer['C_ADDRESS'] != 'D') & (customer['C_COMMENT'] == 'd')].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['O_COMMENT'] == 'q') | (orders['TOTALPRICE'] == 264443.79565864627) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] > 354) & (orders['TOTALPRICE'] != 296586.9121289225)].merge(customer[(customer['C_NATIONKEY'] >= 5) | (customer['C_ACCTBAL'] > 640.574459560876) & (customer['C_CUSTKEY'] < 48) | (customer['C_CUSTKEY'] == 56)][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 31870) | (orders['O_ORDERKEY'] == 464) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] == 90360) & (orders['TOTALPRICE'] > 35210.97332606325) & (orders['O_CUSTKEY'] == 24550) | (orders['O_CUSTKEY'] != 145277) | (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 70261) & (orders['TOTALPRICE'] == 247291.89391810822) | (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] != 794)][['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 125) | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] >= 582) | (orders['ORDERDATE'] == '1998-07-21')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'f') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_CUSTKEY'] != 41)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] <= 14894.943345514863) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['TOTALPRICE'] < 10262.198503966922) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] >= 56118.234008719504) | (orders['O_COMMENT'] != 'l')][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 41307.33354101338) & (orders['O_CUSTKEY'] >= 93549) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] >= 88)].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_CUSTKEY'] == 10) & (customer['C_PHONE'].str.startswith('27-')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'g')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 87)].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('F'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] >= 16) & (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] <= -514.652438315363) | (customer['C_COMMENT'] != 'r') & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'] == '13-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] < 6348.823151527587) & (supplier['S_ACCTBAL'] == 8016.297745837738) | (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'].str.startswith('P'))][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] > 4) & (nation['N_NAME'].str.startswith('U'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] < 19) | (supplier['S_ACCTBAL'] < 291.8941267144762) | (supplier['S_ADDRESS'] != 'C') & (supplier['S_ADDRESS'].str.startswith('X')) & (supplier['S_NAME'] != 'S')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp.merge(supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_SUPPKEY'] <= 196) | (supplier['S_SUPPKEY'] > 57) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != '7') & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_COMMENT'] == 'es ')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 1279) & (partsupp['SUPPLYCOST'] < 388.6928539914468) | (partsupp['P_COMMENT'].str.startswith('x'))][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] != 1099.7778851692458) & (supplier['S_PHONE'] == '1') | (supplier['S_COMMENT'] == 'u')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 3484) | (partsupp['PS_PARTKEY'] == 10) | (partsupp['PS_SUPPKEY'] > 4457) & (partsupp['AVAILQTY'] != 9595) & (partsupp['PS_SUPPKEY'] >= 5866)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['TYPE', 'P_NAME', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 28) | (partsupp['PS_PARTKEY'] <= 31)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 49) & (partsupp['PS_SUPPKEY'] != 1294)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'J')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 187) & (partsupp['PS_SUPPKEY'] != 6971) | (partsupp['AVAILQTY'] == 4171) | (partsupp['AVAILQTY'] > 7710)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 20) & (supplier['S_PHONE'] != '17-') & (supplier['S_SUPPKEY'] == 136) & (supplier['S_NATIONKEY'] != 18)][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 4852) | (partsupp['PS_SUPPKEY'] < 7122) & (partsupp['SUPPLYCOST'] <= 667.988541567759) | (partsupp['PS_PARTKEY'] > 18) & (partsupp['PS_PARTKEY'] <= 10)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] == 5) & (nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 5389) | (partsupp['PS_SUPPKEY'] <= 4530) | (partsupp['AVAILQTY'] != 5993) & (partsupp['SUPPLYCOST'] != 217.74988930908793) | (partsupp['PS_SUPPKEY'] > 1612)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_NATIONKEY'] != 0) & (supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] >= 137)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3815) & (partsupp['SUPPLYCOST'] != 187.63767899414177) & (partsupp['P_COMMENT'] == 'bli') | (partsupp['AVAILQTY'] < 4762) & (partsupp['P_COMMENT'] == 'ly ')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] < 1080.6113667699935)][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4223) | (partsupp['P_COMMENT'] != 'u') & (partsupp['PS_PARTKEY'] > 41) & (partsupp['AVAILQTY'] != 2541)][['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != '!') & (part['MFGR'] == 'Manufacturer#4') & (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] <= 989.8125766151196) & (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'].isin(['Brand#34', 'Brand#41', 'Brand#13', 'Brand#15', 'Brand#25', 'Brand#43', 'Brand#23', 'Brand#21', 'Brand#45', 'Brand#24', 'Brand#52', 'Brand#14', 'Brand#42', 'Brand#44', 'Brand#22', 'Brand#12', 'Brand#51'])) | (part['PT_COMMENT'] != 'p') | (part['CONTAINER'] == 'MED') | (part['PT_COMMENT'] == 'm')][['SIZE', 'P_PARTKEY', 'PT_COMMENT', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 1012)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] != 'V') | (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 297.01276515305204) & (partsupp['PS_SUPPKEY'] >= 6447)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '1') | (supplier['S_SUPPKEY'] <= 42)].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 196) & (supplier['S_SUPPKEY'] <= 131)][['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_NAME'] != 'E')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 6827.244258830106) | (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_SUPPKEY'] >= 199)][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'u') & (supplier['S_ACCTBAL'] == 8248.77651040006) & (supplier['S_SUPPKEY'] <= 132) & (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'g') & (supplier['S_NATIONKEY'] > 17)].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NATIONKEY'] >= 1) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 66) | (supplier['S_SUPPKEY'] == 138) & (supplier['S_ADDRESS'] != 'E') & (supplier['S_COMMENT'] != 'a')].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 10) & (supplier['S_SUPPKEY'] >= 41) & (supplier['S_ACCTBAL'] > 5302.929653115626) & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'T') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 6) | (supplier['S_COMMENT'] == ',') & (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] != '2') | (supplier['S_NATIONKEY'] < 7) & (supplier['S_PHONE'] != '26-') | (supplier['S_NATIONKEY'] >= 19)][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 23) & (supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_PHONE'] == '26-') & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] == 123)].merge(nation[(nation['N_NATIONKEY'] > 19) | (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 18) | (supplier['S_SUPPKEY'] >= 37) | (supplier['S_NATIONKEY'] < 23) | (supplier['S_ACCTBAL'] != 7533.738060127717) | (supplier['S_NATIONKEY'] != 0) & (supplier['S_NATIONKEY'] >= 4) | (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 0)][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_ACCTBAL'] <= 9237.437585838848) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'v') & (supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] == 10)][['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] >= 174)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 22) & (nation['N_NATIONKEY'] >= 7) | (nation['N_NATIONKEY'] >= 8)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NAME'] == 'E') & (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] == 1) | (nation['N_COMMENT'] == ' ') & (nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] < 6)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 3645.75540129628) | (customer['C_COMMENT'] != 'i') | (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 557.2226375131486) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY', 'FURNITURE'])) & (customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] >= 5) | (customer['C_CUSTKEY'] != 68) | (customer['C_NATIONKEY'] <= 11) & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_NATIONKEY'] == 17)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 17) & (nation['N_COMMENT'] != ' ') & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] != 10)][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 12) | (customer['C_CUSTKEY'] >= 39) | (customer['C_ADDRESS'] == 'x') & (customer['MKTSEGMENT'] != 'FURNITURE')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] != 937.2054540119836)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') & (customer['C_PHONE'] == '22-') | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '25-') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) & (customer['C_CUSTKEY'] < 82)][['C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] != 'u')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_ADDRESS'] == '0') & (customer['C_PHONE'] != '1') | (customer['C_NATIONKEY'] < 22) | (customer['C_ADDRESS'] != 'E')].merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_COMMENT'] == 'p') | (customer['C_COMMENT'] == 'y') & (customer['C_COMMENT'] != 'd')][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] <= 12) | (nation['N_REGIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'].str.startswith('Y')) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_ACCTBAL'] != 904.3981189834658) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 1) | (customer['C_ADDRESS'] == '7') | (customer['C_ACCTBAL'] > 1794.572670578454) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('T'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] == 'o') & (customer['C_ADDRESS'] != 'S') & (customer['C_PHONE'].str.startswith('3')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] != 18) & (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] > 14)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] >= -657.2098121556586) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] <= 20) | (customer['C_ACCTBAL'] > 2479.40673653521) | (customer['C_COMMENT'].str.startswith(',')) | (customer['C_CUSTKEY'] < 48)].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] < 62502) & (orders['O_CUSTKEY'] >= 26862) & (orders['O_ORDERKEY'] > 670) & (orders['O_ORDERKEY'] > 433) | (orders['ORDERDATE'] != '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_COMMENT'] != ' ')][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] < 130450.57083625694) & (orders['O_COMMENT'] == 'e') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['O_COMMENT'] != ' re') & (orders['ORDERDATE'] == '1998-07-21')].merge(customer[(customer['C_COMMENT'] == 's') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] != '13-')][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 40) | (partsupp['AVAILQTY'] < 6814)].merge(part[(part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] >= 999.3147385653409) & (part['RETAILPRICE'] == 985.6320368898675) | (part['P_NAME'] != 'm') & (part['BRAND'] != 'Brand#14') | (part['SIZE'] <= 30) & (part['P_PARTKEY'] > 167) & (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] <= 1069.0846604447313)][['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3998) | (partsupp['PS_PARTKEY'] == 15) & (partsupp['AVAILQTY'] >= 3861) & (partsupp['PS_PARTKEY'] != 24) & (partsupp['PS_SUPPKEY'] > 5075)].merge(part[['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'TYPE', 'BRAND', 'PT_COMMENT', 'CONTAINER']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'v') | (partsupp['SUPPLYCOST'] <= 105.56510875923281) | (partsupp['AVAILQTY'] == 3773)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'].isin(['Brand#33', 'Brand#24', 'Brand#35', 'Brand#15', 'Brand#23', 'Brand#13', 'Brand#43', 'Brand#42', 'Brand#45', 'Brand#55', 'Brand#54', 'Brand#41', 'Brand#12', 'Brand#21', 'Brand#14', 'Brand#44', 'Brand#52', 'Brand#31', 'Brand#22', 'Brand#25'])) & (part['P_PARTKEY'] != 47) & (part['PT_COMMENT'].str.startswith('s')) | (part['PT_COMMENT'] != 'h') & (part['SIZE'] != 34) | (part['RETAILPRICE'] >= 935.2616570531359) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1'])) & (part['CONTAINER'] != 'LG')][['P_PARTKEY', 'CONTAINER', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] == 7413.825510765409)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_PARTKEY'] < 52521) | (lineitem['L_PARTKEY'] <= 116387) & (lineitem['L_SUPPKEY'] != 4575) | (lineitem['L_SUPPKEY'] < 7168) & (lineitem['L_SUPPKEY'] > 2675)][['TAX', 'COMMITDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'].str.startswith('J'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 12218.936176633575) | (lineitem['L_PARTKEY'] == 72822) & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['TAX'] != 0.026661370575408946) | (lineitem['QUANTITY'] >= 17) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['QUANTITY'] == 36)].merge(partsupp[(partsupp['P_COMMENT'] != 'e') & (partsupp['PS_SUPPKEY'] <= 4847)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('w')) | (part['SIZE'] >= 16) & (part['BRAND'].isin(['Brand#43', 'Brand#54', 'Brand#15', 'Brand#25', 'Brand#13', 'Brand#11', 'Brand#32', 'Brand#21', 'Brand#41', 'Brand#34', 'Brand#24', 'Brand#53', 'Brand#12'])) | (part['P_NAME'].str.startswith('i'))][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 41637.46199971429) | (lineitem['SHIPMODE'] != 'TRUCK')].merge(partsupp[(partsupp['SUPPLYCOST'] < 852.3307599080421) & (partsupp['AVAILQTY'] >= 6573) | (partsupp['P_COMMENT'] == ';') & (partsupp['SUPPLYCOST'] < 419.2500971854665) & (partsupp['AVAILQTY'] <= 339)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[['PT_COMMENT', 'MFGR', 'TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'a') | (lineitem['L_COMMENT'] != 'v')][['L_ORDERKEY', 'TAX', 'RETURNFLAG', 'COMMITDATE', 'SHIPMODE', 'L_SUPPKEY', 'LINENUMBER']].merge(orders[(orders['TOTALPRICE'] <= 55934.98505350351) & (orders['TOTALPRICE'] < 138898.3039887753) | (orders['O_CUSTKEY'] >= 109919) | (orders['O_CUSTKEY'] >= 87563) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] != 723) | (orders['O_ORDERKEY'] != 682) & (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'ORDERDATE']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('b')) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['COMMITDATE'] == '1992-05-15')].merge(orders[(orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] > 201083.44995207386)].merge(customer[(customer['C_ACCTBAL'] != 444.0164398623574) & (customer['C_CUSTKEY'] != 21) | (customer['C_ADDRESS'] == 'm') & (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] < 143) & (lineitem['DISCOUNT'] >= 0.03647266831459133) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['DISCOUNT'] != 0.05779339260534987) & (lineitem['LINESTATUS'] != 'O') | (lineitem['EXTENDEDPRICE'] == 72149.43897463268) & (lineitem['L_SUPPKEY'] > 3933)].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['SIZE', 'P_NAME', 'MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] > 35) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_COMMENT'].str.startswith('.')) | (lineitem['L_COMMENT'] == ' ') | (lineitem['L_PARTKEY'] <= 153696) | (lineitem['QUANTITY'] >= 22) | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['PS_PARTKEY'] == 18)].merge(supplier[(supplier['S_PHONE'].str.startswith('17-'))][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 76185) & (lineitem['QUANTITY'] >= 27) | (lineitem['L_SUPPKEY'] <= 7933) | (lineitem['LINENUMBER'] > 6) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_COMMENT'] == 'a') | (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['EXTENDEDPRICE'] >= 65092.20771776741) & (lineitem['DISCOUNT'] == 0.0818197395011857) & (lineitem['L_PARTKEY'] >= 103763)].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['BRAND', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] > 7494) | (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_SUPPKEY'] != 1283) | (lineitem['TAX'] == 0.07193143693932087) | (lineitem['QUANTITY'] < 49)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'X') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_PHONE'] == '1') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '32-')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 2031) & (lineitem['LINENUMBER'] >= 4) | (lineitem['L_COMMENT'].str.startswith('q'))][['TAX', 'COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'SHIPMODE', 'QUANTITY']].merge(partsupp.merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 11) & (lineitem['L_PARTKEY'] >= 168301) | (lineitem['QUANTITY'] <= 8) & (lineitem['LINESTATUS'] != 'O')].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'l')].merge(region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_COMMENT'].str.startswith('q')) | (lineitem['DISCOUNT'] != 0.021491666547951507) | (lineitem['L_COMMENT'] == ',') & (lineitem['DISCOUNT'] > 0.08854236185600214) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['LINENUMBER'] > 5) & (lineitem['L_PARTKEY'] <= 108964) & (lineitem['L_PARTKEY'] < 137594) | (lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp[(partsupp['PS_PARTKEY'] == 38) & (partsupp['PS_PARTKEY'] > 11)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['LINENUMBER'] != 4) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['L_PARTKEY'] > 147939) & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['RECEIPTDATE'] <= '1992-05-02')][['QUANTITY', 'LINESTATUS', 'DISCOUNT', 'SHIPMODE', 'COMMITDATE', 'L_ORDERKEY', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 861)].merge(part[(part['RETAILPRICE'] >= 950.5049341758598) & (part['P_PARTKEY'] >= 153)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_COMMENT'] == 'v') | (lineitem['DISCOUNT'] == 0.04419738560711836)].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#53') & (part['RETAILPRICE'] < 1066.6221211369154) & (part['P_PARTKEY'] != 137) | (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'] != 'g') & (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] != 'i') & (part['P_NAME'] != 'y')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RETURNFLAG'] == 'A') | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_SUPPKEY'] < 7268)].merge(partsupp[(partsupp['SUPPLYCOST'] > 524.4729323365437) & (partsupp['AVAILQTY'] > 7342) | (partsupp['PS_PARTKEY'] >= 43)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_NAME'] == 'V') & (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['EXTENDEDPRICE'] >= 4823.9121133724875) & (lineitem['QUANTITY'] == 34)][['L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'L_SUPPKEY', 'RETURNFLAG', 'COMMITDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD', 'NONE'])) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['L_PARTKEY'] == 123594) & (lineitem['L_COMMENT'] == 'b') & (lineitem['EXTENDEDPRICE'] > 39549.41744273419) & (lineitem['LINESTATUS'] != 'F')][['L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 27)].merge(part[(part['TYPE'] == 'STA') & (part['SIZE'] >= 19) | (part['RETAILPRICE'] != 1005.0951898493682) | (part['P_PARTKEY'] < 114) | (part['PT_COMMENT'].str.startswith('d')) & (part['P_NAME'] == 'p')][['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['L_COMMENT'] != 'p') & (lineitem['QUANTITY'] >= 4) & (lineitem['EXTENDEDPRICE'] > 63232.194258418014) & (lineitem['QUANTITY'] == 3) | (lineitem['LINENUMBER'] != 1) | (lineitem['LINESTATUS'] == 'F')].merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] <= 93) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_CUSTKEY'] <= 44)][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'TRUCK', 'FOB'])) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['TAX'] != 0.07392294221793706) & (lineitem['LINENUMBER'] <= 1)].merge(orders[(orders['O_ORDERKEY'] > 153) & (orders['TOTALPRICE'] == 73157.87657357761) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_NATIONKEY'] < 17) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'D') | (customer['C_NATIONKEY'] >= 7) | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'SHIPDATE', 'RECEIPTDATE', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'QUANTITY']].merge(partsupp.merge(part[(part['CONTAINER'] == 'MED') | (part['SIZE'] <= 4) | (part['P_PARTKEY'] <= 99) | (part['P_PARTKEY'] > 78) & (part['CONTAINER'].str.startswith('MED'))][['P_PARTKEY', 'SIZE', 'P_NAME', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPMODE', 'RETURNFLAG', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE']].merge(orders[['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] != 9)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 3977.068897315816) & (customer['C_NATIONKEY'] >= 8) & (customer['C_COMMENT'].str.startswith('g')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'H') & (customer['C_ACCTBAL'] > 2343.2071019553005) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 5) | (customer['C_CUSTKEY'] > 57)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'J') | (customer['C_NATIONKEY'] != 9)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] < 1) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD']))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders.merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] >= 6524) & (orders['ORDERSTATUS'] == 'O') & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] != 'e') & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] == 'C')].merge(customer[(customer['C_ADDRESS'] == 'b') | (customer['C_ACCTBAL'] > 7204.970223520727)].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] != 242) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 42938.96598727427)][['ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'f') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 13507)].merge(customer[(customer['C_ADDRESS'] != 'd') & (customer['C_ACCTBAL'] > 9371.212190047212) & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 87) | (customer['C_CUSTKEY'] >= 20) & (customer['C_COMMENT'] == 'g') | (customer['C_NATIONKEY'] >= 4)].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH'])) | (orders['ORDERSTATUS'] != 'O')].merge(customer.merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NAME'] != 'P')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['O_COMMENT'] == ',') & (orders['O_ORDERKEY'] >= 688) & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] == 'C')].merge(customer[(customer['C_NATIONKEY'] != 8) | (customer['C_CUSTKEY'] != 57)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_CUSTKEY'] != 80) | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_NATIONKEY'] == 13)].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'] != 'n')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] <= 3404) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] > '1992-01-13')][['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NATIONKEY'] != 7) | (customer['C_ACCTBAL'] >= -785.4263820228283) | (customer['C_NATIONKEY'] < 16)][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P')][['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ACCTBAL'] < 1366.2867763671911) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] != 12) | (customer['C_ADDRESS'] == 'c') & (customer['C_NATIONKEY'] >= 13)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] > 23586.324447075232) & (orders['O_CUSTKEY'] <= 142571) & (orders['TOTALPRICE'] > 68768.07355955608) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] <= 68) | (customer['C_PHONE'] != '18-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['TOTALPRICE'] >= 43415.09564242866) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '2-HIGH', '1-URGENT'])) | (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] <= 48771) | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_CUSTKEY'] == 65) & (customer['C_ACCTBAL'] <= 5034.254395717288) & (customer['C_CUSTKEY'] <= 11) & (customer['C_CUSTKEY'] != 60)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] < 288746.73108953034) | (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] != 763)].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'A') & (nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'].str.startswith('K'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['O_CUSTKEY'] != 85656)][['O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_ACCTBAL'] >= -642.7486566812892) & (customer['C_ACCTBAL'] >= 4399.999640796041) & (customer['C_NATIONKEY'] != 2) & (customer['C_NATIONKEY'] <= 22) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['O_ORDERKEY'] == 134) | (orders['O_CUSTKEY'] <= 101876) | (orders['O_ORDERKEY'] >= 570) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] < 88)].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_COMMENT'] == 'a')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'y') & (orders['ORDERSTATUS'].isin(['P', 'F']))][['TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('l')) | (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] < 0)][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 120831)][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] > 11)].merge(region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 709) | (orders['TOTALPRICE'] >= 5226.557301798708) | (orders['O_COMMENT'].str.startswith('c')) & (orders['O_CUSTKEY'] <= 35935) & (orders['O_ORDERKEY'] > 193) | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'b') & (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 728) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] == 353) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_COMMENT'] == 'the') | (orders['TOTALPRICE'] > 100999.63361579827) & (orders['O_ORDERKEY'] == 505) | (orders['TOTALPRICE'] != 67586.21659009694)].merge(customer[(customer['C_CUSTKEY'] <= 3) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_NATIONKEY'] > 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] != 'd') | (orders['O_CUSTKEY'] <= 5005) & (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['O_COMMENT'].str.startswith('g'))].merge(customer[(customer['C_COMMENT'].str.startswith('e')) | (customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] >= 32) & (customer['C_ACCTBAL'] < 4954.580682334988) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] != 75)].merge(nation[(nation['N_NAME'].str.startswith('A'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

orders[(orders['TOTALPRICE'] != 250357.14856949958) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'].isin(['P']))][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 147127.24489140746) | (orders['O_CUSTKEY'] <= 45651) | (orders['O_ORDERKEY'] > 645) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_COMMENT'] != 't') | (customer['C_NATIONKEY'] > 8) | (customer['C_PHONE'] == '3')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 213553.69274638774) & (orders['O_COMMENT'] != 'k') & (orders['O_COMMENT'] != 'c') | (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] <= 92781) & (orders['O_ORDERKEY'] <= 142) & (orders['ORDERSTATUS'] != 'F')][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] != 59) | (customer['C_PHONE'] == '1') | (customer['C_ADDRESS'] == 'F') & (customer['C_CUSTKEY'] != 97) | (customer['C_ADDRESS'] == 'Q') & (customer['C_ADDRESS'].str.startswith('j'))][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 168212.2440890267) | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'w')][['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_ADDRESS'] == 'r') & (customer['C_COMMENT'].str.startswith('s')) | (customer['C_NATIONKEY'] <= 9)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'c') & (customer['C_ADDRESS'] == 'z') & (customer['C_ACCTBAL'] < 3919.2253934356504) & (customer['C_COMMENT'].str.startswith('l')) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] != 17)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 13)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] < 13) & (nation['N_COMMENT'] == 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 6299.4851469319265) & (supplier['S_ACCTBAL'] > 9465.624217225262) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_NATIONKEY'] == 13) & (nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 8765.700673565012) & (supplier['S_SUPPKEY'] <= 127) | (supplier['S_ACCTBAL'] > 6988.051391823453) & (supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_NATIONKEY'] <= 22)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_ADDRESS'] == '0') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] < 22) & (supplier['S_SUPPKEY'] < 174)][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] < 5) | (nation['N_NAME'].str.startswith('E'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5664) & (partsupp['AVAILQTY'] <= 3714) & (partsupp['P_COMMENT'] != 'd') & (partsupp['SUPPLYCOST'] == 877.0415180172159) & (partsupp['SUPPLYCOST'] >= 801.0920927017825)].merge(part[(part['CONTAINER'].str.startswith('MED')) & (part['RETAILPRICE'] > 961.1909286246064) & (part['SIZE'] <= 15) | (part['SIZE'] != 31) | (part['SIZE'] <= 10) & (part['SIZE'] < 34) & (part['P_NAME'] != 'y') | (part['BRAND'].isin(['Brand#51', 'Brand#13', 'Brand#24', 'Brand#32', 'Brand#15'])) & (part['PT_COMMENT'] == ' ')][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 7385)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 24) & (partsupp['PS_SUPPKEY'] != 4854) & (partsupp['AVAILQTY'] < 1726)].merge(part[(part['MFGR'] == 'Manufacturer#4') | (part['P_PARTKEY'] <= 109) | (part['BRAND'] != 'Brand#24') & (part['SIZE'] <= 34) | (part['BRAND'].isin(['Brand#35', 'Brand#53', 'Brand#34', 'Brand#55', 'Brand#13', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#22', 'Brand#41', 'Brand#24', 'Brand#44', 'Brand#31', 'Brand#51', 'Brand#11', 'Brand#52', 'Brand#14', 'Brand#23', 'Brand#21', 'Brand#32', 'Brand#33', 'Brand#42', 'Brand#45'])) & (part['P_PARTKEY'] > 179)][['CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND', 'P_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] == 19) | (partsupp['PS_SUPPKEY'] >= 6954) | (partsupp['PS_PARTKEY'] < 36)].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 13) | (partsupp['SUPPLYCOST'] > 609.6050386055317) | (partsupp['SUPPLYCOST'] >= 661.1320361052727) | (partsupp['SUPPLYCOST'] != 958.5025960375996)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('O')) & (supplier['S_ACCTBAL'] > 1047.2415450881747)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5755)].merge(supplier[(supplier['S_SUPPKEY'] <= 139) | (supplier['S_COMMENT'] != 'd') & (supplier['S_NAME'] == 'S')][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'R')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 493) | (partsupp['P_COMMENT'] == 'are') & (partsupp['SUPPLYCOST'] > 911.5771774763107)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'are') | (partsupp['SUPPLYCOST'] >= 543.7130091197884) & (partsupp['AVAILQTY'] < 9942) | (partsupp['AVAILQTY'] >= 8076)].merge(part[(part['P_PARTKEY'] <= 75) | (part['P_NAME'] == 'bis') & (part['BRAND'].isin(['Brand#45', 'Brand#52', 'Brand#32', 'Brand#23', 'Brand#31', 'Brand#35', 'Brand#14', 'Brand#34', 'Brand#42', 'Brand#13', 'Brand#11', 'Brand#22', 'Brand#15'])) | (part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] == ' ') | (part['SIZE'] == 43)][['BRAND', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'BRAND', 'MFGR']).agg('count')

partsupp[(partsupp['P_COMMENT'] == ' th')][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'M') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1'])) | (part['RETAILPRICE'] < 948.8929823169019) | (part['BRAND'] == 'Brand#31') | (part['SIZE'] < 45) | (part['PT_COMMENT'].str.startswith('i')) & (part['CONTAINER'] == 'WRAP')][['P_NAME', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 635.2778106233924)].merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'] != 'm') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '32-') | (supplier['S_NATIONKEY'] >= 22) | (supplier['S_ADDRESS'] == '9')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 846.3702186990589) & (partsupp['SUPPLYCOST'] >= 676.3831774932886) & (partsupp['AVAILQTY'] > 7425)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 2722.5029187571527) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'l') & (supplier['S_COMMENT'].str.startswith('h')) | (supplier['S_SUPPKEY'] >= 1)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 781.4503666358098) | (partsupp['AVAILQTY'] >= 9090) & (partsupp['SUPPLYCOST'] != 968.9959647642507) | (partsupp['AVAILQTY'] >= 146)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['PT_COMMENT'] != 's') | (part['P_NAME'] == 's') & (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'y') & (part['RETAILPRICE'] <= 928.1298243184348)][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 821.5232140948566) | (partsupp['SUPPLYCOST'] < 820.330397014595) | (partsupp['AVAILQTY'] <= 2406)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('f')) | (part['RETAILPRICE'] > 939.2554825164056) & (part['BRAND'].isin(['Brand#12', 'Brand#41', 'Brand#11', 'Brand#51', 'Brand#43', 'Brand#52', 'Brand#35', 'Brand#55', 'Brand#24', 'Brand#54', 'Brand#23', 'Brand#33', 'Brand#32', 'Brand#21', 'Brand#22', 'Brand#44', 'Brand#31', 'Brand#25'])) & (part['TYPE'] != 'SMA') | (part['P_PARTKEY'] < 182) & (part['SIZE'] >= 1) & (part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] <= 5) | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] > 40) | (part['PT_COMMENT'].str.startswith('a')) | (part['TYPE'].str.startswith('SMA')) | (part['TYPE'] == 'E') & (part['PT_COMMENT'] == 'y') & (part['BRAND'].isin(['Brand#24', 'Brand#35', 'Brand#41', 'Brand#54', 'Brand#42', 'Brand#31', 'Brand#32', 'Brand#23', 'Brand#12', 'Brand#51', 'Brand#21', 'Brand#15', 'Brand#52', 'Brand#11', 'Brand#34', 'Brand#22', 'Brand#43', 'Brand#44', 'Brand#45', 'Brand#14']))][['P_NAME', 'BRAND', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'the')].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 1097.5513882106468) & (part['P_NAME'] == 'l') & (part['RETAILPRICE'] > 957.009223758398) | (part['RETAILPRICE'] > 947.7122070280041) & (part['RETAILPRICE'] == 927.8726179234843) & (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] > 56)][['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 7259.177948096233) & (supplier['S_ACCTBAL'] == 6135.746758978613) & (supplier['S_PHONE'] != '14-') | (supplier['S_COMMENT'] != 'v') & (supplier['S_NATIONKEY'] == 15) | (supplier['S_SUPPKEY'] == 35) | (supplier['S_COMMENT'].str.startswith('a'))].merge(nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 2373.7865050246837) | (supplier['S_ACCTBAL'] < 2514.8263699210584) | (supplier['S_PHONE'] == '2') | (supplier['S_COMMENT'] == 'the') & (supplier['S_COMMENT'] != ',')].merge(nation[(nation['N_COMMENT'] != 'h')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('T'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_ACCTBAL'] == 3286.8767861395154)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '7') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] < 179) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'B') | (supplier['S_ADDRESS'].str.startswith('R')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] >= 10) & (supplier['S_SUPPKEY'] < 71)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'U') & (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('a'))][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 13) | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] < 22)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_PHONE'] == '26-') & (supplier['S_PHONE'] == '32-')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('p'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != ' sl') & (supplier['S_ADDRESS'].str.startswith('e'))][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_PHONE'] == '32-') | (supplier['S_PHONE'] == '28-') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'q')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] > 156) | (supplier['S_ADDRESS'] == 'V') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '28-') | (supplier['S_ACCTBAL'] != 8431.241662855096)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_SUPPKEY'] > 145) | (supplier['S_ADDRESS'] != '7') | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 17) | (supplier['S_COMMENT'] != 'al ') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] != 10) | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_SUPPKEY'] != 170) & (supplier['S_ACCTBAL'] == -594.8801945284367) | (supplier['S_COMMENT'] == 'bli') & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 10) & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_SUPPKEY'] != 156) & (supplier['S_NATIONKEY'] != 7) & (supplier['S_ACCTBAL'] != 6491.078519217233) & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 12)].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'] != '3') | (supplier['S_COMMENT'] == 'v') | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] < 9) | (supplier['S_NATIONKEY'] <= 8)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] >= 9548.927675596897) | (supplier['S_ACCTBAL'] > 1998.4371658702933)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_COMMENT'] != 'y') | (supplier['S_SUPPKEY'] > 75) | (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_PHONE'] == '28-') & (supplier['S_ADDRESS'] != 's')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NATIONKEY'] != 5) | (supplier['S_ACCTBAL'] <= 5683.444255764086) | (supplier['S_ADDRESS'] == 'V') | (supplier['S_NATIONKEY'] >= 10) & (supplier['S_SUPPKEY'] >= 67)][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] < 11)].merge(region[(region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 18)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 181) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 13) & (supplier['S_SUPPKEY'] != 73) | (supplier['S_SUPPKEY'] == 73) | (supplier['S_ADDRESS'] == 'M') | (supplier['S_SUPPKEY'] > 174)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8931.389873329254) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] != 'k') & (customer['C_NATIONKEY'] >= 20)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 9065.064608685952) | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_COMMENT'] != 't') | (customer['C_NATIONKEY'] >= 19) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_ACCTBAL'] > -52.600604714755036) | (customer['C_CUSTKEY'] == 8)][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 9)].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'D') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] != 'U') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '13-') | (customer['C_COMMENT'] == 'q') & (customer['C_ADDRESS'] == 'b')][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_ADDRESS'] == 'Q') | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] <= 56) | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] != 's')].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'h') | (customer['C_NATIONKEY'] == 0) & (customer['C_ACCTBAL'] == 7471.449868250231) | (customer['C_CUSTKEY'] >= 33) | (customer['C_ACCTBAL'] >= 1427.4251643516977)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'] != 'a') | (nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 21) & (customer['C_ACCTBAL'] > 6806.069276654336)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] < 6385.77721019579) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING']))][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 15) & (customer['C_ADDRESS'] != 'w')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] <= 18) | (nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] > 8)].merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 5)][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] == 'P') | (nation['N_NATIONKEY'] != 2) & (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 14) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_ACCTBAL'] < 7981.869115912539) | (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('M')) & (customer['C_ACCTBAL'] < 2327.4457921480885) | (customer['C_NAME'] != 'C')][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] > 4) | (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] == 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-') & (customer['C_COMMENT'].str.startswith('o'))][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] == 'i') & (nation['N_NATIONKEY'] >= 7)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] >= 6496.433165165076) | (customer['C_ADDRESS'] == 'x') & (customer['C_NATIONKEY'] >= 15) | (customer['C_CUSTKEY'] >= 6) & (customer['C_CUSTKEY'] >= 63) & (customer['C_COMMENT'] != 'l')][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] >= 6) & (customer['C_NATIONKEY'] != 22) & (customer['C_PHONE'] != '2') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] < 4) & (nation['N_NATIONKEY'] == 1) | (nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY'])) & (customer['C_NATIONKEY'] >= 10) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '22-') | (customer['C_ACCTBAL'] != 9610.337938701183) & (customer['C_NATIONKEY'] == 16)][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] != 20) & (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 3) & (nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] == 'v') | (nation['N_NAME'] == 'F')].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] != 'C')].merge(customer[(customer['C_NATIONKEY'] >= 5) | (customer['C_NATIONKEY'] != 1) & (customer['C_PHONE'] != '27-') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_PHONE'] == '22-') | (customer['C_COMMENT'].str.startswith('s')) & (customer['C_ADDRESS'] != 'm')][['C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] < 213446.4551321634)].merge(customer[(customer['C_COMMENT'] != 'e') | (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] > 98815) | (orders['TOTALPRICE'] > 98185.80135391753) & (orders['TOTALPRICE'] >= 7468.453988914588) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH'])) | (orders['O_CUSTKEY'] >= 94327) & (orders['O_CUSTKEY'] != 61487) | (orders['O_COMMENT'] != 'b') | (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'd') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'].str.startswith('d')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] >= 2) | (customer['C_COMMENT'] != 'a') | (customer['C_ACCTBAL'] == 8685.444265285212)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 24) & (partsupp['AVAILQTY'] != 8177) & (partsupp['PS_SUPPKEY'] < 5063) & (partsupp['PS_PARTKEY'] >= 30) | (partsupp['PS_SUPPKEY'] > 7482)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['LINESTATUS'] != 'F') & (lineitem['LINESTATUS'] != 'F') | (lineitem['DISCOUNT'] < 0.06352801264503714) & (lineitem['TAX'] != 0.05478087600938003) | (lineitem['L_ORDERKEY'] != 29) | (lineitem['DISCOUNT'] > 0.050914233208355975) | (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['LINENUMBER'] >= 3) | (lineitem['EXTENDEDPRICE'] > 86808.30094635178)][['L_ORDERKEY', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'DISCOUNT', 'LINENUMBER']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'd') | (lineitem['EXTENDEDPRICE'] == 44110.00910827338) & (lineitem['DISCOUNT'] >= 0.008069945113483445)].merge(partsupp[(partsupp['P_COMMENT'] == 'n') & (partsupp['AVAILQTY'] != 7989) & (partsupp['PS_PARTKEY'] == 16) & (partsupp['PS_SUPPKEY'] > 1525) & (partsupp['SUPPLYCOST'] <= 376.8045360145734)][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['TYPE'] != 'STA') | (part['P_NAME'] == 'blu') | (part['SIZE'] >= 32) & (part['BRAND'] != 'Brand#12')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'lit') & (lineitem['QUANTITY'] < 19) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['COMMITDATE'] != '1992-05-15')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 1037.9431132788025) | (part['P_PARTKEY'] < 76) & (part['PT_COMMENT'] == ' ')][['BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 132549) | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['L_SUPPKEY'] != 3920) | (lineitem['L_PARTKEY'] == 88236) & (lineitem['QUANTITY'] == 44) & (lineitem['QUANTITY'] > 21) & (lineitem['QUANTITY'] > 9) | (lineitem['L_ORDERKEY'] >= 92) | (lineitem['QUANTITY'] > 27) | (lineitem['RETURNFLAG'] == 'A')][['L_SUPPKEY', 'TAX', 'L_COMMENT', 'LINESTATUS', 'L_ORDERKEY', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 8235) | (lineitem['L_SUPPKEY'] <= 4301) | (lineitem['QUANTITY'] > 5)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 81) & (supplier['S_NATIONKEY'] >= 10) & (supplier['S_COMMENT'] == 'h') | (supplier['S_COMMENT'] != 's') | (supplier['S_PHONE'] == '17-') & (supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 3057) & (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['L_PARTKEY'] <= 97335) | (lineitem['LINENUMBER'] == 5)][['L_PARTKEY', 'LINENUMBER', 'EXTENDEDPRICE', 'LINESTATUS', 'L_SUPPKEY', 'RETURNFLAG']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 16) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 175) & (supplier['S_ADDRESS'] != 'T') | (supplier['S_ADDRESS'] != 'J') | (supplier['S_ADDRESS'] != 's')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 21) | (lineitem['LINENUMBER'] == 6) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['LINENUMBER'] > 6) | (lineitem['LINENUMBER'] <= 1) | (lineitem['L_PARTKEY'] >= 117834) | (lineitem['L_COMMENT'] == 'c') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['L_COMMENT'] != 'a')][['L_COMMENT', 'QUANTITY', 'EXTENDEDPRICE', 'TAX', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['L_SUPPKEY'] >= 7425)][['L_PARTKEY', 'COMMITDATE', 'SHIPDATE', 'L_ORDERKEY']].merge(orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['QUANTITY'] == 47) & (lineitem['LINENUMBER'] > 2) & (lineitem['L_SUPPKEY'] >= 5228) | (lineitem['L_COMMENT'] != '.') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['DISCOUNT'] == 0.08062452772651746) | (lineitem['EXTENDEDPRICE'] <= 17122.337589364295)].merge(orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['L_PARTKEY'] < 107421)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['PS_SUPPKEY'] >= 3703) | (partsupp['AVAILQTY'] < 2480) | (partsupp['PS_PARTKEY'] <= 7)].merge(part[(part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] < 44) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) | (part['TYPE'].str.startswith('M')) | (part['P_NAME'] != 'v') & (part['PT_COMMENT'].str.startswith('y')) | (part['TYPE'] == 'E')][['P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] <= 0.02020671741966418) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['LINENUMBER'] < 4) | (lineitem['QUANTITY'] == 31) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['DISCOUNT'] <= 0.008467319285898922)][['L_COMMENT', 'COMMITDATE', 'TAX', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp.merge(part[(part['P_PARTKEY'] != 51) | (part['BRAND'] == 'Brand#23') | (part['RETAILPRICE'] <= 1007.3304579353369) | (part['PT_COMMENT'] == 'c') | (part['RETAILPRICE'] <= 920.5813225294046) & (part['BRAND'] == 'Brand#13') & (part['P_PARTKEY'] != 66) | (part['CONTAINER'] != 'LG') & (part['PT_COMMENT'] != 'd')][['PT_COMMENT', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'RECEIPTDATE', 'L_PARTKEY', 'RETURNFLAG', 'LINESTATUS', 'COMMITDATE', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != ',') | (partsupp['SUPPLYCOST'] == 771.1881307871977)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 7) & (partsupp['P_COMMENT'] != 'c') & (partsupp['SUPPLYCOST'] == 314.0496780875383) | (partsupp['PS_PARTKEY'] >= 7)].merge(part[(part['BRAND'] == 'Brand#24') | (part['RETAILPRICE'] < 1063.6117692412627) & (part['BRAND'].isin(['Brand#31', 'Brand#13', 'Brand#44', 'Brand#14', 'Brand#42', 'Brand#23', 'Brand#22', 'Brand#51', 'Brand#41', 'Brand#53', 'Brand#24', 'Brand#11', 'Brand#35', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#33', 'Brand#15', 'Brand#55', 'Brand#32'])) & (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] != 1025.745417393254)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'L_SUPPKEY', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 7194) & (partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['PS_SUPPKEY'] > 4537)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'SM') & (part['PT_COMMENT'] == 'kag') & (part['P_NAME'] == 'o') | (part['P_NAME'].str.startswith('w')) & (part['TYPE'] != 'STA')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'TAX']].merge(orders.merge(customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_COMMENT'].str.startswith('a'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= -509.65239207650853) | (customer['C_CUSTKEY'] >= 63) & (customer['C_CUSTKEY'] == 31) & (customer['C_ADDRESS'] != 'd') | (customer['C_CUSTKEY'] == 15) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 80) | (customer['C_PHONE'] != '1')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'e') & (customer['C_ACCTBAL'] >= 8548.84309472071) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 4872.07734581202) & (customer['C_CUSTKEY'] <= 93) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_CUSTKEY'] < 63)].merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] != 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 24)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] >= 21) | (customer['C_ACCTBAL'] <= 7282.837775397404) | (customer['C_CUSTKEY'] > 9) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] != 'L')].merge(nation[(nation['N_NATIONKEY'] >= 9)].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'] == 't') | (orders['O_CUSTKEY'] < 22392) & (orders['SHIPPRIORITY'] <= 0)][['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] != 262) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT'])) & (orders['O_CUSTKEY'] == 116413) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1998-07-21')].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] < 134896) | (orders['TOTALPRICE'] <= 35913.641544454025)].merge(customer[(customer['C_NATIONKEY'] < 15) | (customer['C_ACCTBAL'] == 1070.447972154738) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'BUILDING')][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT']).agg('count')

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['O_COMMENT'] != 'uri')][['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_NAME'] == 'E')].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] != 80140.09399737263) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] <= 730) & (orders['ORDERDATE'] != '1998-07-21')].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'P')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] == 'l')].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'a')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') | (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] != '22-') | (customer['C_ACCTBAL'] >= 9633.094156652996) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING'])) & (customer['C_ACCTBAL'] >= -640.7119401543086) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE']))].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] <= 5) | (nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P'])) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT'])) | (orders['O_ORDERKEY'] != 744) & (orders['O_ORDERKEY'] <= 564) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'] != ' ') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '5-LOW'])) & (orders['CLERK'] != 'C')].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 88098) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['O_ORDERKEY'] <= 382) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] >= 0)][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 237) | (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] < 61363.80634394607) | (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 725)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 413) & (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] < '1992-01-13')][['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] == 353064.9165068428) & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] >= 29836) & (orders['O_COMMENT'] != 's')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

orders[['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= 291.04221905217014) | (customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_ADDRESS'] != 'Y') | (customer['C_ADDRESS'] == 'J') & (customer['C_ACCTBAL'] < 6093.105967256993) | (customer['C_ACCTBAL'] == 7535.351287315432)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_ACCTBAL'] > 964.2959673454898) | (customer['C_ACCTBAL'] != 3997.8179226376187) | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_COMMENT'] == 'o')][['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'].str.startswith('J')) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_PHONE'] == '18-') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'n') | (customer['C_ADDRESS'].str.startswith('n')) | (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] >= 17)].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 23) & (nation['N_NATIONKEY'] >= 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == ' sl') & (supplier['S_NATIONKEY'] <= 0)][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] > 0) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 559) | (partsupp['SUPPLYCOST'] <= 99.51954761983059) & (partsupp['SUPPLYCOST'] < 393.15355654265886) | (partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['PS_SUPPKEY'] <= 1322)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 1022.778110068143) & (supplier['S_ADDRESS'] == '8')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 13) & (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] > 12)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 45) & (partsupp['AVAILQTY'] < 7130) | (partsupp['PS_SUPPKEY'] <= 5888)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 989.3200397507876) & (part['SIZE'] < 37) | (part['P_PARTKEY'] >= 198) & (part['RETAILPRICE'] != 1011.5614895884117) | (part['BRAND'] != 'Brand#35') & (part['SIZE'] > 22) | (part['BRAND'] == 'Brand#11') | (part['TYPE'] != 'L') & (part['P_NAME'] != 'w')][['CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 41) | (partsupp['AVAILQTY'] < 7341) & (partsupp['PS_PARTKEY'] >= 4) | (partsupp['SUPPLYCOST'] > 420.7411656307584)][['PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'JUMBO') | (part['P_NAME'] != 'g') & (part['RETAILPRICE'] < 1095.819564777311) & (part['BRAND'] == 'Brand#14') & (part['TYPE'].str.startswith('L')) | (part['TYPE'].str.startswith('M')) | (part['PT_COMMENT'].str.startswith('r')) | (part['MFGR'] != 'Manufacturer#1')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3715)].merge(supplier[(supplier['S_SUPPKEY'] <= 195) & (supplier['S_COMMENT'] != ',') & (supplier['S_NATIONKEY'] > 6) & (supplier['S_ADDRESS'] != 's') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] == '3')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('k'))][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_SUPPKEY'] >= 126)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 315.53358797172706) & (partsupp['AVAILQTY'] > 4998) | (partsupp['PS_PARTKEY'] < 32) & (partsupp['PS_SUPPKEY'] == 6062) & (partsupp['P_COMMENT'].str.startswith('x'))][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'] == 'Manufacturer#2') | (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] != 'L') & (part['TYPE'] != 'M') | (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] > 37) & (part['SIZE'] != 6) & (part['RETAILPRICE'] < 1037.1457970646247) | (part['BRAND'].isin(['Brand#11', 'Brand#22', 'Brand#35', 'Brand#43', 'Brand#52', 'Brand#44', 'Brand#41', 'Brand#42', 'Brand#31', 'Brand#23', 'Brand#21', 'Brand#55', 'Brand#53', 'Brand#32', 'Brand#25', 'Brand#54', 'Brand#34', 'Brand#15', 'Brand#14', 'Brand#12', 'Brand#13']))][['P_PARTKEY', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_SUPPKEY'] != 131) | (supplier['S_PHONE'] == '32-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] != 3335.954601898896) | (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 4309.749447798994) & (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_PHONE'] == '3')].merge(nation[(nation['N_COMMENT'] == ' ')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 19) | (supplier['S_PHONE'] == '26-') & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] != 10)].merge(nation[(nation['N_NATIONKEY'] > 22)].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] <= 174) & (part['P_NAME'] == 'i') | (part['P_PARTKEY'] > 94) | (part['TYPE'] != 'STA') | (part['CONTAINER'] == 'LG') | (part['P_NAME'] != 'r') | (part['CONTAINER'] != 'WRAP') | (part['BRAND'] != 'Brand#42') & (part['BRAND'] != 'Brand#43')][['P_NAME', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'F') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_ACCTBAL'] < 520.7325790350001) & (supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_NATIONKEY'] < 17)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 17) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NAME'] == 'U')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'k') | (supplier['S_NATIONKEY'] >= 5) | (supplier['S_NATIONKEY'] > 17) & (supplier['S_NATIONKEY'] > 12) | (supplier['S_NATIONKEY'] > 12) | (supplier['S_ACCTBAL'] > 842.9133274696599)].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] <= 14) | (nation['N_NATIONKEY'] != 15)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'd') | (supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] != 'i') & (supplier['S_NATIONKEY'] > 10) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'h') & (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_ACCTBAL'] < 5925.381605282486)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == ' sl') | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 17) & (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_ACCTBAL'] == 4409.869630032939)].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 18) | (supplier['S_NATIONKEY'] >= 15) & (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_ACCTBAL'] <= 5436.784395621272) & (supplier['S_ADDRESS'] == 'y') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] != 18)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 11) | (supplier['S_ADDRESS'] == 'c') | (supplier['S_NATIONKEY'] < 13) & (supplier['S_ADDRESS'].str.startswith('X')) | (supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_NATIONKEY'] > 14) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 6)][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] != 8) | (nation['N_NAME'] == 'V') & (nation['N_COMMENT'] != 'i')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 15) & (supplier['S_SUPPKEY'] <= 2) & (supplier['S_NATIONKEY'] < 6) | (supplier['S_NATIONKEY'] == 1)][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] == 'r')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'] == 'b') | (supplier['S_SUPPKEY'] >= 27) | (supplier['S_NATIONKEY'] > 8) | (supplier['S_ADDRESS'] != 'e') & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] > 15) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] != 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] < 7612.410844092122) | (supplier['S_SUPPKEY'] > 192) & (supplier['S_SUPPKEY'] != 46) | (supplier['S_SUPPKEY'] < 88)][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 99) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 174) & (supplier['S_SUPPKEY'] <= 85)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 149) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] == 80) | (supplier['S_ACCTBAL'] <= 6259.0470217199045) & (supplier['S_ACCTBAL'] > 2870.292647971847) & (supplier['S_PHONE'].str.startswith('32-'))][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 181) | (supplier['S_COMMENT'] == 'y') & (supplier['S_COMMENT'] == 'g') & (supplier['S_SUPPKEY'] >= 179) | (supplier['S_NATIONKEY'] == 10)][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_NAME'] != 'C') & (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 1068.1492516845449) & (customer['C_ADDRESS'] == '4') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 24)][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'S') & (customer['C_ACCTBAL'] < 3164.2177375253855) & (customer['C_CUSTKEY'] >= 76) & (customer['C_PHONE'] == '27-') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] == 'r') & (customer['C_ACCTBAL'] <= 9838.745326747592)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'c') & (customer['C_COMMENT'].str.startswith('l')) & (customer['C_ACCTBAL'] <= 2960.3014735573015) & (customer['C_CUSTKEY'] < 61) & (customer['C_ACCTBAL'] != -313.61270825513895) | (customer['C_CUSTKEY'] > 41)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'c') | (customer['C_ADDRESS'] != 'b') & (customer['C_CUSTKEY'] > 17) | (customer['C_NATIONKEY'] == 21) & (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NATIONKEY'] >= 10) & (customer['C_CUSTKEY'] < 83)][['C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 't') | (customer['C_ACCTBAL'] <= 5834.143545798411) | (customer['C_CUSTKEY'] > 60) | (customer['C_COMMENT'] != 't') | (customer['C_ACCTBAL'] < 8750.065152173156) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 60) & (customer['C_PHONE'].str.startswith('27-'))][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'h') & (customer['C_PHONE'] == '25-') & (customer['C_ADDRESS'] == 'I') | (customer['C_ADDRESS'] == ',') | (customer['C_ACCTBAL'] > 1415.9485443502927) | (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith(' ')) & (customer['C_PHONE'].str.startswith('3')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] >= 40) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '25-')][['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 50) & (customer['C_COMMENT'].str.startswith('t')) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] != 3996.432449283586) & (customer['C_ACCTBAL'] == 4710.99591051178) | (customer['C_PHONE'] != '25-') | (customer['C_ADDRESS'] == 'v')][['C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_COMMENT'] == 'a') | (nation['N_COMMENT'] == ' ')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 14) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY'])) & (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ACCTBAL'] < -651.0814941547372) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] > 15) | (customer['C_PHONE'] != '18-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING'])) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] > 77) & (customer['C_NATIONKEY'] >= 19)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] < 2) | (nation['N_COMMENT'] != 'i')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 4) & (customer['C_COMMENT'] == 'o') | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ACCTBAL'] <= 6321.497304440414) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_CUSTKEY'] <= 41) & (customer['C_NATIONKEY'] < 4)][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] >= 5) | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_ACCTBAL'] != 6441.515323510709) & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] > 4681.309154566193) | (customer['C_ACCTBAL'] != 2610.0762704126632) | (customer['C_COMMENT'] != 's')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] == 92) | (customer['C_COMMENT'] == 'l') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_COMMENT'] != 's') | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 21)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] >= 6) | (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '1-URGENT')][['TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'R')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'].str.startswith('r')) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] != 102040) & (orders['O_COMMENT'] != 'h')].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 17) & (nation['N_NAME'] == 'M')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'] != ',') | (orders['O_ORDERKEY'] > 129) | (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] >= 83709.11183493013) | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_CUSTKEY'] == 114998) | (orders['O_CUSTKEY'] > 88686)][['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'the') | (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 320.7930948533322) | (partsupp['PS_PARTKEY'] > 1) | (partsupp['PS_SUPPKEY'] == 2221) | (partsupp['P_COMMENT'] != 'o')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] <= 141) | (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_NATIONKEY'] < 16) | (supplier['S_SUPPKEY'] < 80) | (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'] == '1')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_PHONE'] != '1') & (supplier['S_ACCTBAL'] > 8452.030783584683) | (supplier['S_COMMENT'] != ' sl')][['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.07087936375539428) & (lineitem['EXTENDEDPRICE'] != 27817.207592401388) & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['SHIPDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER', 'L_SUPPKEY']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 43258.289232093404) & (lineitem['L_PARTKEY'] < 193447) | (lineitem['DISCOUNT'] != 0.019596806708294525)].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 59870.05704811789) | (lineitem['EXTENDEDPRICE'] <= 18292.269441224616) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['SHIPMODE', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPDATE', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 541.5814180148492)].merge(part[(part['SIZE'] > 27) | (part['RETAILPRICE'] >= 973.617413692612) | (part['PT_COMMENT'].str.startswith('t')) & (part['CONTAINER'] != 'SM') | (part['BRAND'].isin(['Brand#12', 'Brand#51', 'Brand#55', 'Brand#11', 'Brand#25', 'Brand#34', 'Brand#24', 'Brand#22', 'Brand#32'])) & (part['RETAILPRICE'] >= 1003.6937874131472) & (part['P_NAME'].str.startswith('bis'))][['RETAILPRICE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] == 1) & (lineitem['L_PARTKEY'] >= 7517) | (lineitem['L_ORDERKEY'] < 152) & (lineitem['QUANTITY'] <= 11)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('o')) | (partsupp['PS_SUPPKEY'] != 6648) | (partsupp['PS_SUPPKEY'] != 7395)].merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['L_COMMENT'] == '-') | (lineitem['DISCOUNT'] > 0.047281760393346306) | (lineitem['EXTENDEDPRICE'] > 6228.988791949259) & (lineitem['DISCOUNT'] == 0.09245417506170213) & (lineitem['EXTENDEDPRICE'] != 11646.43229467243) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['QUANTITY'] >= 17) | (lineitem['QUANTITY'] < 17) | (lineitem['DISCOUNT'] <= 0.01615477273792113)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 107) | (supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'] != 'x') | (supplier['S_ACCTBAL'] < 9312.021682188393) | (supplier['S_ACCTBAL'] == -16.832802958238176) & (supplier['S_SUPPKEY'] < 70) & (supplier['S_ACCTBAL'] <= 5842.820186728273)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'y') | (lineitem['SHIPDATE'] == '1998-10-30')][['EXTENDEDPRICE', 'RETURNFLAG', 'L_SUPPKEY', 'L_COMMENT', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] == 5) & (partsupp['PS_PARTKEY'] < 8) | (partsupp['P_COMMENT'] != 'p') | (partsupp['PS_SUPPKEY'] != 2485)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == '.') & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'NONE']))].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'n') & (part['BRAND'] == 'Brand#53')][['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'g') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['DISCOUNT'] != 0.05631881675725862) | (lineitem['L_PARTKEY'] >= 126892) | (lineitem['L_ORDERKEY'] <= 69) & (lineitem['QUANTITY'] < 48) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['DISCOUNT'] > 0.04572813951260658)][['L_ORDERKEY', 'COMMITDATE', 'L_SUPPKEY']].merge(orders[(orders['O_ORDERKEY'] >= 321) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] >= 2) | (nation['N_NATIONKEY'] == 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['L_SUPPKEY'] != 9083) & (lineitem['EXTENDEDPRICE'] >= 28833.83434303962) & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['TAX'] <= 0.047243178225749353)].merge(orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'O') | (orders['O_CUSTKEY'] >= 79021) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_PHONE'] == '2')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] <= 9671) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['EXTENDEDPRICE'] > 47480.0897369034)][['L_PARTKEY']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'p') | (part['BRAND'] != 'Brand#44') & (part['P_PARTKEY'] >= 59) | (part['P_PARTKEY'] == 183) | (part['BRAND'] == 'Brand#15') | (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'] == 'a') | (part['P_NAME'] != 'lem')][['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06')][['EXTENDEDPRICE', 'COMMITDATE', 'RECEIPTDATE', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'ly ') & (partsupp['AVAILQTY'] != 7187)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['LINENUMBER'] != 6) | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['L_COMMENT'] != 't')][['L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 8) & (nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] == 0.017847597206933886) | (lineitem['LINENUMBER'] < 2) | (lineitem['DISCOUNT'] >= 0.04929324719979683) | (lineitem['TAX'] >= 0.015470228060218645)].merge(partsupp[(partsupp['P_COMMENT'] != 'a') & (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_SUPPKEY'] != 6895) | (partsupp['PS_SUPPKEY'] > 2564)].merge(supplier[(supplier['S_SUPPKEY'] == 157) & (supplier['S_NATIONKEY'] <= 15) | (supplier['S_ACCTBAL'] != -252.9871037934156) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPMODE'].isin(['MAIL', 'SHIP'])) | (lineitem['TAX'] >= 0.06373556058567492) & (lineitem['LINENUMBER'] != 1) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['TAX'] != 0.001363482803093321)].merge(partsupp.merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_COMMENT'].str.startswith('v')) & (lineitem['L_SUPPKEY'] <= 5869) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] != 3) | (lineitem['RETURNFLAG'].isin(['R']))].merge(orders[(orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'ly ') | (orders['SHIPPRIORITY'] >= 0)][['ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_COMMENT', 'CLERK', 'O_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_PARTKEY'] == 172125) | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['TAX'] < 0.0686454165047376) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['L_PARTKEY'] >= 151769) | (lineitem['COMMITDATE'] == '1992-05-15')].merge(orders[(orders['TOTALPRICE'] <= 192705.77459835302) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] < 551) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERSTATUS'] == 'F')][['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['QUANTITY'] != 7) & (lineitem['LINENUMBER'] >= 2) & (lineitem['DISCOUNT'] < 0.09631081709062583) & (lineitem['TAX'] == 0.06948340188460099) & (lineitem['L_COMMENT'].str.startswith('a')) | (lineitem['QUANTITY'] > 24)][['SHIPMODE', 'COMMITDATE', 'L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] > 918.2423440813404) | (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'] == ' ') | (part['P_NAME'].str.startswith('r')) & (part['SIZE'] > 26) | (part['SIZE'] < 24) & (part['BRAND'] == 'Brand#13')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] >= 0.051016767754572256) & (lineitem['LINENUMBER'] <= 3) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['SHIPDATE'] >= '1998-10-30')][['L_ORDERKEY', 'TAX', 'COMMITDATE', 'QUANTITY', 'L_COMMENT', 'EXTENDEDPRICE', 'LINESTATUS']].merge(orders[(orders['O_ORDERKEY'] >= 85) & (orders['O_CUSTKEY'] < 107192) | (orders['O_CUSTKEY'] <= 32013) & (orders['TOTALPRICE'] != 153606.9421654046) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] < 301668.4045965339) & (orders['TOTALPRICE'] <= 46858.50272763152) | (orders['TOTALPRICE'] == 141159.31344976297) & (orders['ORDERSTATUS'].isin(['O', 'P']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT']].merge(orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'TAX', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER']].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '2') & (supplier['S_NATIONKEY'] == 12) | (supplier['S_COMMENT'].str.startswith('n'))][['S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']).agg('count')

lineitem[['L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] <= 757) | (orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] < 26387) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] < 90)][['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'L_ORDERKEY', 'DISCOUNT', 'L_COMMENT', 'RECEIPTDATE']].merge(partsupp[(partsupp['AVAILQTY'] < 2899) & (partsupp['SUPPLYCOST'] >= 91.44083332733271) | (partsupp['AVAILQTY'] > 6066) & (partsupp['P_COMMENT'] != 'x')].merge(supplier[(supplier['S_ACCTBAL'] < -754.020331173324) & (supplier['S_ACCTBAL'] < 304.14264880623386) | (supplier['S_COMMENT'].str.startswith('v'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'DISCOUNT', 'LINESTATUS', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'L_PARTKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'RETURNFLAG', 'SHIPMODE', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 2552) & (partsupp['SUPPLYCOST'] > 701.0534494858613)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 11)][['RETAILPRICE', 'BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'L_COMMENT', 'SHIPMODE', 'EXTENDEDPRICE', 'COMMITDATE', 'L_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'RETURNFLAG', 'TAX', 'L_COMMENT', 'SHIPINSTRUCT', 'RECEIPTDATE', 'SHIPMODE', 'L_PARTKEY', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('5'))].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'V') & (nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] != 6560) | (partsupp['AVAILQTY'] > 4900) | (partsupp['PS_SUPPKEY'] >= 5605) | (partsupp['PS_PARTKEY'] == 7)].merge(supplier[(supplier['S_ADDRESS'] == '4') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 1) | (supplier['S_COMMENT'] != '!') & (supplier['S_PHONE'].str.startswith('3'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('0')) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] < 2)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('l'))].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['O_CUSTKEY'] < 21820) & (orders['O_CUSTKEY'] == 35942) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_ACCTBAL'] < 106.2043031301024) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] > 86687) | (orders['ORDERDATE'] != '1998-07-21') & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] > 29) & (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['O_COMMENT'] == 'x') | (orders['O_CUSTKEY'] >= 13183)].merge(customer[(customer['C_COMMENT'] == 'u')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 11581) | (orders['TOTALPRICE'] == 53464.735901889224) | (orders['O_CUSTKEY'] != 7395) | (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] < 597) & (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] != 141158.56536056174)][['SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] != 97) | (customer['C_ACCTBAL'] == 5835.458653293768) | (customer['C_ACCTBAL'] != 1233.2687241548142) | (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] != 46) & (customer['C_ADDRESS'] == '9') | (customer['C_ADDRESS'].str.startswith('6'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 134441) | (orders['TOTALPRICE'] < 109651.97714171841) | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] < 710) & (orders['O_COMMENT'] == '.') | (orders['O_ORDERKEY'] == 604) & (orders['O_CUSTKEY'] == 29411)].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] == 21) | (nation['N_NATIONKEY'] == 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 169) | (orders['O_CUSTKEY'] > 122793) | (orders['TOTALPRICE'] != 4433.815546692775) & (orders['O_COMMENT'].str.startswith('k')) | (orders['O_ORDERKEY'] == 291)][['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 19) & (nation['N_COMMENT'] == 't') | (nation['N_COMMENT'] == 's') | (nation['N_NAME'] == 'J')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] == 122107) | (orders['O_COMMENT'] != 'l') | (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] > 146575)][['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_ADDRESS'] != 'p') & (customer['C_ACCTBAL'] <= 6358.8018066664545) & (customer['C_CUSTKEY'] >= 12)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] != 17) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'].str.startswith('h')) & (customer['C_CUSTKEY'] >= 41)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 335334.2277714607) & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] < 77519.7840278163)][['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] <= 16) & (nation['N_COMMENT'] != 'y')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 280963.36337015836) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['O_ORDERKEY'] == 166) & (orders['TOTALPRICE'] == 265857.3143534387) | (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 36608.564704002725) | (orders['O_COMMENT'] != 'h') & (orders['TOTALPRICE'] >= 336212.0505693526) | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERDATE'] > '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] != 8) & (customer['C_PHONE'] == '3') | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 't') | (customer['C_ADDRESS'].str.startswith('9'))][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 352332.7202897551) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'k') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] != '5-LOW')][['ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'] != 'C')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] == 952.6142762656241) | (customer['C_ACCTBAL'] != 4200.185802577689) | (customer['C_COMMENT'].str.startswith('n')) & (customer['C_CUSTKEY'] >= 27) & (customer['C_COMMENT'].str.startswith('s')) & (customer['C_NATIONKEY'] == 13)].merge(nation[(nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] > 8653.370719027038) | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_ACCTBAL'] == 3874.5352027802646) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '18-') & (customer['C_NATIONKEY'] <= 0) | (customer['C_ACCTBAL'] < 7110.077140418452) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING']))][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('k')) & (customer['C_PHONE'] != '13-') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 6711.220560639145) & (customer['C_ACCTBAL'] != 1361.8183259626358) | (customer['C_NATIONKEY'] >= 6)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] > 84) & (customer['C_ADDRESS'] == 'R') & (customer['C_ADDRESS'].str.startswith('m')) | (customer['C_ACCTBAL'] < 9437.46379631447) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] != 'w')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NATIONKEY'] >= 2) & (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 2956) & (partsupp['P_COMMENT'] == 'g') & (partsupp['AVAILQTY'] < 4756)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] != 19)].merge(nation[(nation['N_NATIONKEY'] > 1) & (nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 3926)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '1') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NATIONKEY'] >= 19) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_COMMENT'] != 'e')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 9128)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['MFGR'] != 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5'])) | (part['P_NAME'] != 'n') & (part['CONTAINER'] != 'SM')][['MFGR', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 6545) | (partsupp['PS_PARTKEY'] >= 18)].merge(supplier[(supplier['S_ACCTBAL'] >= 3474.768030709759) | (supplier['S_SUPPKEY'] == 17)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NAME'] != 'P')].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 7206) & (partsupp['PS_PARTKEY'] >= 7)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'SM') & (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'].isin(['Brand#42', 'Brand#12', 'Brand#15', 'Brand#13', 'Brand#11', 'Brand#33', 'Brand#55', 'Brand#41', 'Brand#24', 'Brand#34', 'Brand#44', 'Brand#21', 'Brand#31', 'Brand#54'])) & (part['PT_COMMENT'] != 'x') & (part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'] == 'f')][['PT_COMMENT', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 7276) | (partsupp['PS_PARTKEY'] != 2) | (partsupp['PS_PARTKEY'] <= 37) & (partsupp['AVAILQTY'] < 2033)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 18) | (nation['N_NATIONKEY'] > 15)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 811) & (partsupp['PS_PARTKEY'] >= 49) & (partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['AVAILQTY'] >= 3397)].merge(supplier[(supplier['S_SUPPKEY'] < 16) | (supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'] != 'i') | (supplier['S_NATIONKEY'] >= 0)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'b') & (partsupp['SUPPLYCOST'] != 984.2332335738755) | (partsupp['SUPPLYCOST'] == 42.8507161898648) & (partsupp['PS_PARTKEY'] >= 20) | (partsupp['P_COMMENT'].str.startswith('u'))].merge(supplier[(supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_ADDRESS'] == 'i') | (supplier['S_COMMENT'] == 'al ') & (supplier['S_ACCTBAL'] < 8691.055869400338)].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'] == 'o') & (nation['N_NAME'] == 'C') & (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'r') & (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['PS_SUPPKEY'] < 2988) & (partsupp['PS_PARTKEY'] < 15)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] < 7058.62278794406)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 534.7068623809591) & (partsupp['SUPPLYCOST'] == 308.57736745212065) | (partsupp['PS_PARTKEY'] == 7) & (partsupp['AVAILQTY'] <= 9453)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 623.91162986873) & (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['AVAILQTY'] != 3623) & (partsupp['PS_SUPPKEY'] >= 219) & (partsupp['SUPPLYCOST'] >= 614.2027424478349)].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] == 'Q') & (supplier['S_NATIONKEY'] == 17) & (supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] != 125) | (supplier['S_SUPPKEY'] == 147) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ACCTBAL'] > 5692.908613672916)].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'] != 'n')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'u') | (supplier['S_COMMENT'] == 'u') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 137) | (supplier['S_ADDRESS'] == '6') & (supplier['S_ADDRESS'].str.startswith('9'))][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] == 9) & (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8154.016781005718) & (supplier['S_SUPPKEY'] < 111) & (supplier['S_SUPPKEY'] > 196) | (supplier['S_NATIONKEY'] < 20) & (supplier['S_ACCTBAL'] < 208.87625664275993)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'f') | (supplier['S_SUPPKEY'] >= 197) | (supplier['S_NATIONKEY'] >= 12) | (supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_SUPPKEY'] == 151)][['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 't') & (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_PHONE'] == '26-') & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'] == 'q') & (supplier['S_SUPPKEY'] <= 89) & (supplier['S_PHONE'] != '2')][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'K')].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'es ') & (supplier['S_PHONE'] == '17-') | (supplier['S_PHONE'] != '2')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 11) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 9) | (supplier['S_ADDRESS'].str.startswith('f')) & (supplier['S_PHONE'].str.startswith('28-'))][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 4) & (supplier['S_NATIONKEY'] < 5) | (supplier['S_ACCTBAL'] >= 6567.297386382497) & (supplier['S_ACCTBAL'] != 4433.471289066629) | (supplier['S_PHONE'].str.startswith('1'))][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_ADDRESS'] != 'm')][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] != 'F') & (nation['N_NATIONKEY'] != 22) & (nation['N_COMMENT'].str.startswith('y'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] < 36) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('i')) & (supplier['S_ADDRESS'] == 'd') & (supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NATIONKEY'] == 17) | (nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'l')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 1) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] > 2345.1917506937975) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '25-') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 5) | (customer['C_CUSTKEY'] != 97)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] == 'q') | (customer['C_COMMENT'] == 'i') | (customer['C_COMMENT'] != 'y') & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] != 5831.405268748753) | (customer['C_COMMENT'].str.startswith('u')) | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_NAME'] != 'C')][['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 66) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] <= 21) | (customer['C_ADDRESS'].str.startswith('u')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] >= 2) & (customer['MKTSEGMENT'] != 'MACHINERY')][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 12)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 6325.899216568228) | (customer['C_COMMENT'].str.startswith('y')) & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_COMMENT'].str.startswith(',')) | (customer['C_CUSTKEY'] > 79)][['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 2) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_COMMENT'] == ',')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 18) & (nation['N_NAME'] == 'R') & (nation['N_NAME'] == 'J') | (nation['N_NAME'] == 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 5277.9776846160075) & (customer['C_ACCTBAL'] > 7362.098141350043) | (customer['C_ADDRESS'] != 'o') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('v'))][['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 20) & (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'u') | (nation['N_NAME'] != 'S')].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] < 10)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'] != 'd') | (orders['ORDERSTATUS'] != 'O') | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] != 452)][['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] > 18)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] == 16) | (customer['C_ACCTBAL'] == 198.37853074479222) & (customer['C_NATIONKEY'] == 22)][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['RETURNFLAG'] != 'N') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_SUPPKEY'] < 1768) | (lineitem['L_SUPPKEY'] > 6747)].merge(partsupp.merge(part[['TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'c') & (lineitem['L_SUPPKEY'] < 9196) & (lineitem['DISCOUNT'] >= 0.0057962131718013125) | (lineitem['LINESTATUS'] == 'F') | (lineitem['QUANTITY'] != 46) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['L_SUPPKEY'] >= 8597) | (lineitem['SHIPMODE'] != 'REG AIR')].merge(partsupp.merge(part[(part['CONTAINER'] == 'SM') | (part['BRAND'].isin(['Brand#31', 'Brand#11', 'Brand#24', 'Brand#53', 'Brand#32', 'Brand#35', 'Brand#14', 'Brand#42', 'Brand#23', 'Brand#44', 'Brand#51', 'Brand#43', 'Brand#21', 'Brand#45', 'Brand#34', 'Brand#22', 'Brand#52', 'Brand#41', 'Brand#33', 'Brand#12', 'Brand#54'])) & (part['CONTAINER'] != 'JUMBO') & (part['BRAND'].isin(['Brand#25', 'Brand#24', 'Brand#45', 'Brand#33', 'Brand#41', 'Brand#54', 'Brand#15', 'Brand#52', 'Brand#13'])) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5']))][['SIZE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 103) | (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['TAX'] <= 0.036530747492974955) & (lineitem['L_ORDERKEY'] == 124) & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'REG AIR', 'TRUCK', 'MAIL'])) | (lineitem['TAX'] >= 0.03661780549705356) & (lineitem['L_PARTKEY'] == 8386)].merge(orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 117759.19294984308) | (orders['O_ORDERKEY'] != 487) & (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] != 'egu') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] == 'P')][['TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 152194) & (lineitem['LINENUMBER'] > 5) & (lineitem['SHIPMODE'].isin(['SHIP', 'RAIL', 'TRUCK', 'REG AIR', 'MAIL'])) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['LINENUMBER'] >= 5) | (lineitem['SHIPDATE'] != '1998-10-30')][['SHIPMODE', 'L_ORDERKEY', 'L_COMMENT', 'COMMITDATE', 'QUANTITY']].merge(orders[(orders['TOTALPRICE'] >= 42907.02508530409) & (orders['O_ORDERKEY'] <= 68) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] != 180889) | (lineitem['DISCOUNT'] == 0.08915087928533222) & (lineitem['LINESTATUS'] != 'O') & (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['TAX'] != 0.0005342187154104749) | (lineitem['L_ORDERKEY'] == 68)][['L_COMMENT', 'COMMITDATE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'SHIPMODE', 'QUANTITY']].merge(partsupp[(partsupp['P_COMMENT'] != 'g') & (partsupp['P_COMMENT'] == 'u') | (partsupp['AVAILQTY'] <= 3933) | (partsupp['AVAILQTY'] < 7044)][['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] > 15) & (lineitem['LINENUMBER'] >= 2) & (lineitem['L_ORDERKEY'] != 15) | (lineitem['RETURNFLAG'] != 'R')][['L_SUPPKEY', 'TAX', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY', 'COMMITDATE', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 15) & (partsupp['AVAILQTY'] >= 9349) | (partsupp['AVAILQTY'] == 7122)].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) & (part['TYPE'] == 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] != 41) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['L_PARTKEY'] != 2794) & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE']))][['EXTENDEDPRICE', 'LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE', 'RETURNFLAG', 'COMMITDATE', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['L_SUPPKEY'] <= 3106) & (lineitem['L_COMMENT'] != 'f') | (lineitem['QUANTITY'] == 32)][['L_COMMENT', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5109) & (partsupp['P_COMMENT'] == 'r')].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

lineitem[(lineitem['TAX'] > 0.04767560774183794) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['QUANTITY'] < 25) | (lineitem['EXTENDEDPRICE'] == 86346.99721975402)][['L_ORDERKEY', 'LINENUMBER', 'TAX', 'DISCOUNT']].merge(orders[['O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'I')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['COMMITDATE', 'L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE', 'TAX', 'SHIPDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp.merge(part[['BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'RECEIPTDATE', 'RETURNFLAG', 'L_ORDERKEY', 'LINENUMBER', 'LINESTATUS', 'DISCOUNT']].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_ORDERKEY'] < 641) | (orders['ORDERSTATUS'] == 'O')].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[['DISCOUNT', 'QUANTITY', 'LINENUMBER', 'SHIPDATE', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].merge(orders.merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['DISCOUNT', 'TAX', 'QUANTITY', 'SHIPDATE', 'LINESTATUS', 'RECEIPTDATE', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPINSTRUCT']].merge(orders.merge(customer[(customer['C_ACCTBAL'] >= 611.4363881656279) | (customer['C_PHONE'] == '2') & (customer['C_CUSTKEY'] == 67) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('l'))][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'L_ORDERKEY']].merge(orders[(orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] != 138599) | (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] != 554)].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] < 12)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINENUMBER', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] > 10) & (partsupp['PS_SUPPKEY'] >= 3185) & (partsupp['PS_PARTKEY'] < 8) | (partsupp['AVAILQTY'] >= 8508) | (partsupp['SUPPLYCOST'] > 305.90730637161244)][['AVAILQTY', 'PS_PARTKEY']].merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'SHIPDATE', 'LINESTATUS', 'SHIPMODE', 'L_ORDERKEY', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'] != 'u')][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 1) | (supplier['S_ACCTBAL'] == 8021.747010450646)][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'LINENUMBER', 'L_ORDERKEY', 'SHIPDATE', 'SHIPMODE']].merge(orders[['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] != 8641.200810413986) & (customer['C_CUSTKEY'] >= 61) & (customer['C_NATIONKEY'] > 11) & (customer['C_ADDRESS'] != '6') & (customer['C_CUSTKEY'] == 98) & (customer['C_CUSTKEY'] == 48)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'RETURNFLAG', 'LINESTATUS', 'L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'] == 't') & (partsupp['PS_PARTKEY'] != 12) & (partsupp['SUPPLYCOST'] == 843.6405672140471) | (partsupp['PS_PARTKEY'] != 33)].merge(supplier[(supplier['S_SUPPKEY'] >= 191) & (supplier['S_SUPPKEY'] <= 162)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[['TAX', 'L_PARTKEY', 'L_ORDERKEY', 'RETURNFLAG', 'RECEIPTDATE']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE']).agg('count')

orders[(orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '1-URGENT'])) | (orders['ORDERDATE'] < '1998-07-21') | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] > 105) & (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'].isin(['O', 'P']))].merge(customer[(customer['C_COMMENT'] != 'u') | (customer['C_PHONE'] != '27-') | (customer['C_COMMENT'] != 'q') | (customer['C_NATIONKEY'] != 5) & (customer['C_COMMENT'] != ' ') | (customer['C_PHONE'].str.startswith('2')) | (customer['C_ADDRESS'] == 'E')].merge(nation[(nation['N_NATIONKEY'] < 11)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] < 121450) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] != 18) | (nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH', '1-URGENT'])) | (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'] != 'w') & (orders['O_ORDERKEY'] < 302) & (orders['O_CUSTKEY'] == 92638) & (orders['O_CUSTKEY'] != 51818) | (orders['O_CUSTKEY'] >= 7282) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_NATIONKEY'] >= 6)][['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 23) | (nation['N_NATIONKEY'] > 11)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 138184) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] >= 149) & (orders['O_COMMENT'].str.startswith('uri'))].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] > 20) & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P')][['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 18)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] < 244339.63012937858) & (orders['O_ORDERKEY'] != 453) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_COMMENT'].str.startswith('g'))].merge(customer[(customer['C_PHONE'] == '2') & (customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] != 'p')].merge(nation[(nation['N_NAME'] == 'F')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ' ') & (orders['TOTALPRICE'] >= 26813.471328211104) | (orders['O_COMMENT'] == 'a')][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] == 'u') | (customer['C_PHONE'] == '2') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) | (customer['C_ACCTBAL'] != 8196.188264958317)][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'n') & (orders['O_COMMENT'] == 'y') & (orders['O_COMMENT'] != 'egu') & (orders['TOTALPRICE'] == 88063.2195151248)].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] < 7) | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 153) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] <= 88187) & (orders['TOTALPRICE'] != 270888.6017862825) | (orders['O_ORDERKEY'] > 442) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'] == 'C')][['ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_ADDRESS'] != '7') & (customer['C_CUSTKEY'] >= 94) | (customer['C_ADDRESS'] == 'd') | (customer['C_NATIONKEY'] == 7) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_ACCTBAL'] >= 1076.0202993551009)][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] < 7813) & (orders['TOTALPRICE'] < 194257.36668864932) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] == 492) & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] < 18792) | (orders['O_CUSTKEY'] > 20826)][['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 191777.6628924751) | (orders['TOTALPRICE'] >= 173247.1061721925) & (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 641) | (orders['O_COMMENT'].str.startswith('-'))][['O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_CUSTKEY'] > 70) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '2') | (customer['C_ADDRESS'].str.startswith('S')) & (customer['C_ACCTBAL'] >= 9394.54286809452) | (customer['C_COMMENT'] == 'g') | (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= 184.14356175681291)].merge(nation[(nation['N_NATIONKEY'] <= 8) & (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('e'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] <= 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('n')) & (customer['C_NATIONKEY'] != 3) | (customer['C_PHONE'].str.startswith('27-'))][['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE'])) & (customer['C_CUSTKEY'] < 55) & (customer['C_NATIONKEY'] != 22) | (customer['C_PHONE'] != '22-') & (customer['C_PHONE'].str.startswith('3')) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] <= 17) | (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] != 4)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 4)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

orders[['SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'p') & (customer['C_COMMENT'] == 's') | (customer['C_ADDRESS'].str.startswith('K')) | (customer['C_CUSTKEY'] >= 15) & (customer['C_NATIONKEY'] == 4)][['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] > 51) | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_COMMENT'].str.startswith('p')) | (customer['C_ACCTBAL'] >= 1071.6268155344314)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] <= 2701) & (partsupp['PS_SUPPKEY'] <= 587) | (partsupp['SUPPLYCOST'] > 477.4555167950324) & (partsupp['AVAILQTY'] != 5357) & (partsupp['PS_SUPPKEY'] != 5767)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('R')) & (supplier['S_SUPPKEY'] <= 124) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] >= 23) | (supplier['S_NATIONKEY'] == 13) & (supplier['S_COMMENT'] == 'r') | (supplier['S_SUPPKEY'] >= 101)][['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 6585) | (partsupp['PS_PARTKEY'] <= 22) & (partsupp['PS_PARTKEY'] != 6)].merge(part[(part['TYPE'] != 'S') | (part['RETAILPRICE'] >= 930.4944343171977) | (part['RETAILPRICE'] > 922.8174636379555) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'] == 'E') & (part['RETAILPRICE'] != 993.1082181153226) & (part['P_NAME'] == 'c')][['MFGR', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'CONTAINER']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 3238) | (partsupp['PS_SUPPKEY'] == 3422) & (partsupp['AVAILQTY'] <= 7125)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 4) & (nation['N_NAME'] == 'C') | (nation['N_NATIONKEY'] > 6)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 24) | (partsupp['AVAILQTY'] >= 4041) | (partsupp['P_COMMENT'] == 'p') & (partsupp['PS_SUPPKEY'] <= 4049)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] == 'v') & (part['PT_COMMENT'].str.startswith('ss '))][['MFGR', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 2429) | (partsupp['PS_PARTKEY'] > 8) & (partsupp['AVAILQTY'] < 2067)][['PS_PARTKEY']].merge(part[(part['SIZE'] != 17) & (part['CONTAINER'].str.startswith('WRAP')) & (part['BRAND'] == 'Brand#13') | (part['SIZE'] < 15) & (part['TYPE'] == 'M') & (part['P_PARTKEY'] > 128) | (part['TYPE'] == 'E')][['P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 558.264202330498) | (partsupp['PS_PARTKEY'] >= 15) & (partsupp['AVAILQTY'] > 8269)].merge(supplier[(supplier['S_ADDRESS'] == 'I') & (supplier['S_NATIONKEY'] == 13) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] < 6942.47635763007) & (supplier['S_NATIONKEY'] <= 4)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 913.6974724084797) | (partsupp['PS_PARTKEY'] > 9) & (partsupp['SUPPLYCOST'] > 235.32232712049571) & (partsupp['P_COMMENT'] != 'l')].merge(part[(part['P_PARTKEY'] > 94) & (part['TYPE'].str.startswith('S')) | (part['SIZE'] == 48) & (part['TYPE'] == 'L') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) | (part['PT_COMMENT'].str.startswith('w')) & (part['P_PARTKEY'] >= 112) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4'])) | (part['SIZE'] >= 25)][['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'TYPE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < -384.13485588256833) & (supplier['S_NATIONKEY'] == 21) | (supplier['S_COMMENT'].str.startswith('a')) & (supplier['S_COMMENT'] == 't') | (supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] <= 179)][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'al ') & (supplier['S_NATIONKEY'] <= 17) & (supplier['S_ADDRESS'] != 'D') & (supplier['S_NATIONKEY'] <= 3)][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] <= 19) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_SUPPKEY'] <= 70) | (supplier['S_SUPPKEY'] <= 106) & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_COMMENT'].str.startswith('al '))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] == 'e') & (nation['N_NATIONKEY'] >= 3)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'k') | (supplier['S_ACCTBAL'] <= 6028.082681839484) & (supplier['S_ADDRESS'] == 'r') | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'u') | (supplier['S_NAME'] != 'S')][['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] == 16)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'] == 'i') | (supplier['S_SUPPKEY'] < 152) | (supplier['S_ADDRESS'] == 'u') | (supplier['S_NATIONKEY'] == 22) & (supplier['S_COMMENT'] != 'n')][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 13) | (supplier['S_ACCTBAL'] > 4761.920094274511) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('q'))][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] <= 0) & (nation['N_COMMENT'] == 'i')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 183) & (supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'].str.startswith('t'))][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 29) | (supplier['S_NATIONKEY'] >= 13) & (supplier['S_SUPPKEY'] >= 109) & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('l'))][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] >= 18)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith('y'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'o') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] == 15) | (customer['C_COMMENT'] == 't')][['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 31) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_ADDRESS'].str.startswith('e')) | (customer['C_NATIONKEY'] > 21)][['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 5) | (customer['C_PHONE'] != '3') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_CUSTKEY'] == 59) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] >= 8861.931970203532) | (customer['C_PHONE'].str.startswith('25-'))][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'C') & (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] <= 4)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] == -99.38741280598401) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'] != 'o') | (customer['C_COMMENT'].str.startswith('.')) & (customer['C_CUSTKEY'] != 12) & (customer['C_NATIONKEY'] > 8)].merge(nation[(nation['N_COMMENT'] != 'v')].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4723) & (partsupp['P_COMMENT'] != '.') & (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['PS_PARTKEY'] <= 13)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 3596.5759685233397) & (supplier['S_ADDRESS'] != 'i') | (supplier['S_NATIONKEY'] <= 16)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 377.109372547169) | (partsupp['P_COMMENT'] != 'r') & (partsupp['PS_PARTKEY'] != 18) | (partsupp['PS_PARTKEY'] < 9)].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'].str.startswith('r')) & (part['P_NAME'] != 'b') & (part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] < 1075.0556497488355) | (part['PT_COMMENT'].str.startswith('r')) & (part['P_NAME'] != 'f') | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] < 59)][['MFGR', 'TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] == 'a') | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.043513719062071333) & (lineitem['DISCOUNT'] <= 0.059671052883745725) | (lineitem['L_PARTKEY'] != 144762)][['L_ORDERKEY', 'TAX', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 599) & (partsupp['AVAILQTY'] < 7842)].merge(part[(part['PT_COMMENT'].str.startswith('b')) | (part['TYPE'] != 'P')][['BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPDATE'] > '1998-10-30')][['COMMITDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'EXTENDEDPRICE', 'QUANTITY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] >= 23) & (part['SIZE'] > 45) | (part['TYPE'] != 'STA') | (part['BRAND'] == 'Brand#24') & (part['SIZE'] != 9) | (part['P_PARTKEY'] == 132) & (part['RETAILPRICE'] != 1031.8110056057544) | (part['P_NAME'].str.startswith('cor'))][['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'r') | (lineitem['L_COMMENT'] == ' ca') | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'FOB', 'TRUCK', 'RAIL'])) & (lineitem['L_COMMENT'] == 'ly ') | (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE'])) & (lineitem['DISCOUNT'] != 0.0937127684182311) & (lineitem['L_PARTKEY'] >= 160443) & (lineitem['SHIPDATE'] >= '1998-10-30')][['RETURNFLAG', 'SHIPMODE', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp.merge(part[(part['BRAND'] == 'Brand#44') & (part['SIZE'] <= 36) & (part['P_NAME'] != 'l') & (part['P_NAME'] != 'r') | (part['TYPE'].str.startswith('SMA')) & (part['P_NAME'].str.startswith('lin')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) | (part['P_PARTKEY'] < 123) & (part['PT_COMMENT'].str.startswith('u'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 's') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['EXTENDEDPRICE'] == 48763.38374313341) | (lineitem['SHIPMODE'].isin(['MAIL'])) & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) | (lineitem['L_COMMENT'].str.startswith('.')) | (lineitem['L_ORDERKEY'] != 67)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ACCTBAL'] <= 2232.365881584811)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('i')) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_PARTKEY'] == 171972) & (lineitem['L_SUPPKEY'] > 5074) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['SHIPDATE'] != '1992-04-27')].merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('y'))].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] > 5684) | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] == ',') | (orders['TOTALPRICE'] == 209366.83451904522) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'].str.startswith(' re')) | (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_ACCTBAL'] > 2848.8209894842225) & (customer['C_CUSTKEY'] >= 5)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 63860) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_ORDERKEY'] != 99) & (lineitem['QUANTITY'] > 34) | (lineitem['LINESTATUS'].isin(['O']))].merge(partsupp[(partsupp['AVAILQTY'] >= 8194) | (partsupp['PS_PARTKEY'] > 32)][['PS_PARTKEY', 'P_COMMENT']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 8724) & (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['LINENUMBER'] > 3) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] <= 28) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_PARTKEY'] > 57680)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] >= 8) & (nation['N_REGIONKEY'] > 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 20) & (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['EXTENDEDPRICE'] < 31141.880088707683) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['DISCOUNT'] > 0.04414528301906989) & (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['RETURNFLAG'] != 'R')][['L_PARTKEY', 'SHIPDATE', 'SHIPMODE', 'RECEIPTDATE', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_COMMENT'] == 'x') | (supplier['S_NATIONKEY'] < 23) | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02')].merge(orders[(orders['TOTALPRICE'] == 189313.54778796472) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_ORDERKEY'] != 638) & (orders['TOTALPRICE'] <= 132153.35845109884) | (orders['O_CUSTKEY'] < 7666) & (orders['O_COMMENT'] == 'b')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_SUPPKEY'] < 6706)][['DISCOUNT', 'RETURNFLAG', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_PARTKEY', 'COMMITDATE', 'LINENUMBER']].merge(partsupp[(partsupp['AVAILQTY'] != 5690) | (partsupp['PS_SUPPKEY'] == 7456) & (partsupp['PS_PARTKEY'] <= 6)][['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_PARTKEY'] < 32223)][['LINESTATUS', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] == 'n') & (part['SIZE'] >= 44) | (part['P_PARTKEY'] > 34) | (part['RETAILPRICE'] > 929.249624122253) | (part['BRAND'] != 'Brand#11')][['MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['EXTENDEDPRICE'] != 28238.102989692863) & (lineitem['EXTENDEDPRICE'] >= 10742.249682220294) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE', 'SHIPMODE']].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 56)][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'MAIL'])) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RETURNFLAG'].isin(['R', 'N']))][['QUANTITY', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'RETURNFLAG']].merge(orders.merge(customer.merge(nation[(nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'REG AIR', 'TRUCK'])) & (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_PARTKEY'] > 105728) & (lineitem['DISCOUNT'] != 0.022349378962975532) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_SUPPKEY'] > 4907) & (lineitem['LINENUMBER'] <= 3)].merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'] == 'P') | (orders['O_CUSTKEY'] != 73749) | (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1998-07-21')].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[(customer['C_PHONE'] != '27-') & (customer['C_CUSTKEY'] > 12) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'r') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'] != 'C')][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] <= 16) & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] > 13) & (nation['N_NATIONKEY'] > 4)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'] == 'c') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['O_ORDERKEY'] == 337) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] > 298) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['O_COMMENT', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_ACCTBAL'] > -312.7720503837912)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_ACCTBAL'] > 2756.929494876384) | (customer['C_CUSTKEY'] < 46) & (customer['C_ACCTBAL'] != 3120.033903047147)][['C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] != 126675) & (orders['O_ORDERKEY'] == 747) & (orders['TOTALPRICE'] != 190730.15104028722) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] != 82319)][['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= 4470.541401531568) & (customer['C_ADDRESS'].str.startswith('x')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '2') | (customer['C_ADDRESS'] != '8')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] <= 751) | (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY'])) & (customer['C_ADDRESS'] == 'd')].merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_REGIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] < 476) | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 472) & (orders['O_ORDERKEY'] > 85)][['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_NATIONKEY'] >= 1) & (customer['C_NATIONKEY'] > 7) | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '5-LOW')][['ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] == 'BUILDING')][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] < 141364.22369086885) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 523) | (orders['O_CUSTKEY'] > 129757) | (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['C_ADDRESS'].str.startswith('c')) | (customer['C_COMMENT'] != 'a')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_ACCTBAL'] != 1683.7031749484413) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_NATIONKEY'] == 11) & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_PHONE'] != '13-') & (customer['C_NAME'] != 'C')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'y')][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('w')) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'the') | (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] < 318) & (orders['O_COMMENT'].str.startswith('n'))][['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 766) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERSTATUS'] != 'P') & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 23252) | (orders['O_CUSTKEY'] >= 24626) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'] == 'C')].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] != 'P') | (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 1) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] != 280159.786191576) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE']))][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 358) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'] != 'O') | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_PHONE'].str.startswith('1')) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] >= 13) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY']))].merge(nation[(nation['N_NAME'] == 'J')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 338) & (orders['O_COMMENT'] == 'c')].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] >= 710)].merge(customer[(customer['C_ACCTBAL'] == 9528.851886262033) | (customer['C_ACCTBAL'] > 1817.9066525918201) | (customer['C_COMMENT'] != 'e') & (customer['C_COMMENT'].str.startswith('s')) & (customer['C_CUSTKEY'] >= 97)][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] == 22) | (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] <= 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NATIONKEY'] < 5) | (customer['C_NATIONKEY'] >= 8)].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] != 'r') | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] != 'I')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] != 'a') | (orders['TOTALPRICE'] == 256842.51494355916) | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_CUSTKEY'] == 61424) & (orders['SHIPPRIORITY'] >= 0)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] == '22-')].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'E') | (nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 353436.752229097) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] == 140886.77664726952) | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 11) & (nation['N_NAME'].str.startswith('E'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] > 19) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_ADDRESS'] != 'I') & (customer['C_CUSTKEY'] < 2) & (customer['C_ADDRESS'].str.startswith('H')) & (customer['C_PHONE'] == '25-')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_PHONE'] == '18-') & (customer['C_PHONE'] != '13-') | (customer['C_ADDRESS'] == 'j')][['C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_CUSTKEY'] <= 98) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'C') | (supplier['S_SUPPKEY'] >= 148) | (supplier['S_SUPPKEY'] != 111) & (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_ADDRESS'] == 'B')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] == 14) & (partsupp['PS_SUPPKEY'] != 6436) & (partsupp['P_COMMENT'] == 'h') | (partsupp['PS_PARTKEY'] > 47) | (partsupp['P_COMMENT'] != 'g')].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 6434) & (partsupp['PS_PARTKEY'] > 43)][['PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_SUPPKEY'] <= 28)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] <= 19)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'n') | (partsupp['PS_SUPPKEY'] >= 1631)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != 'y') | (supplier['S_SUPPKEY'] < 151) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 19)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 254.29662518585332) | (partsupp['AVAILQTY'] > 1754) | (partsupp['P_COMMENT'] == 'o') | (partsupp['P_COMMENT'] != ';') & (partsupp['SUPPLYCOST'] > 854.7576551138689)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] >= -396.84742043767005) & (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'L') | (part['TYPE'] != 'STA') & (part['CONTAINER'] != 'LG') | (part['CONTAINER'] != 'SM') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3'])) & (part['P_NAME'].str.startswith('b')) | (part['SIZE'] <= 10)][['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 123) | (supplier['S_COMMENT'] != 'l') & (supplier['S_ADDRESS'] != 'y') | (supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] != 8035.360642644372) | (supplier['S_NATIONKEY'] > 15)].merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_NATIONKEY'] >= 6) & (supplier['S_ACCTBAL'] <= 3827.7527232205703)][['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] != 'q') | (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_SUPPKEY'] != 158) | (supplier['S_NATIONKEY'] <= 13)][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] != 7)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_SUPPKEY'] == 109) & (supplier['S_ADDRESS'] != 'c') & (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_COMMENT'] != '!')][['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 5) | (nation['N_NATIONKEY'] >= 6)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ADDRESS'] != 'C') | (supplier['S_ACCTBAL'] == 4389.893728159646) & (supplier['S_COMMENT'] != 'e') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 6273.687941295385) | (supplier['S_NATIONKEY'] > 3)][['S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 73) & (supplier['S_ADDRESS'] == 'e') & (supplier['S_ADDRESS'] == '5')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] <= 6) & (nation['N_NAME'].str.startswith('S'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ADDRESS'] != 's') | (customer['C_ADDRESS'] == 'K') | (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'] != '8') | (customer['C_COMMENT'] == 'p') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] <= 6)][['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 71) | (customer['C_PHONE'] != '3') | (customer['C_COMMENT'] != 'r') & (customer['C_NATIONKEY'] <= 12) & (customer['C_COMMENT'] == 'o')][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] >= 5)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 0) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_NATIONKEY'] != 4) & (customer['C_ADDRESS'] == 'S') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_NAME'] != 'V') & (nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] != 'r')].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] < 5114.917103631601) | (customer['C_NATIONKEY'] == 10) & (customer['C_COMMENT'] != 'i') | (customer['C_CUSTKEY'] > 94) | (customer['C_NATIONKEY'] < 10) & (customer['C_NATIONKEY'] < 7)][['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] != 7) | (nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 77) & (orders['O_ORDERKEY'] != 333) | (orders['CLERK'] != 'C')].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_CUSTKEY'] >= 88) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY'])) & (customer['C_ADDRESS'] == 'U') & (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 194) | (supplier['S_ACCTBAL'] <= 3467.4361295455155)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'M')].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] >= 1) | (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'are') & (partsupp['SUPPLYCOST'] <= 596.5951680506495) | (partsupp['PS_SUPPKEY'] == 1027) | (partsupp['PS_PARTKEY'] <= 29)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('D')) | (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_COMMENT'] == ' ') & (supplier['S_ACCTBAL'] == 6329.081145180546) & (supplier['S_ACCTBAL'] >= 9108.344825908023) & (supplier['S_NATIONKEY'] > 10) & (supplier['S_SUPPKEY'] <= 79)][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] >= 1050.5250442384497) & (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'].str.startswith('LG')) & (part['SIZE'] == 11) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] == 'Brand#13') & (part['CONTAINER'] != 'LG')][['PT_COMMENT', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.0016613860797081493) & (lineitem['LINENUMBER'] < 3) | (lineitem['L_PARTKEY'] <= 35317) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['L_SUPPKEY'] == 7992) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_ORDERKEY'] < 66)][['RECEIPTDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['PS_PARTKEY'] > 25) & (partsupp['SUPPLYCOST'] <= 629.783811114956) & (partsupp['SUPPLYCOST'] > 623.1385075391961) | (partsupp['PS_PARTKEY'] < 20)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 2) | (lineitem['L_PARTKEY'] <= 162305) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['EXTENDEDPRICE'] < 51934.84842708544) | (lineitem['EXTENDEDPRICE'] > 4318.614081108362) | (lineitem['LINENUMBER'] < 2) | (lineitem['L_COMMENT'].str.startswith('s. ')) | (lineitem['LINENUMBER'] == 6) & (lineitem['QUANTITY'] < 32)].merge(partsupp[(partsupp['AVAILQTY'] < 9687) & (partsupp['P_COMMENT'].str.startswith('a'))].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 9759.310526758243)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] > 4) | (lineitem['RECEIPTDATE'] >= '1992-05-02')].merge(partsupp[(partsupp['SUPPLYCOST'] < 185.02513640939912) & (partsupp['PS_PARTKEY'] != 27) | (partsupp['SUPPLYCOST'] != 133.56309594602772)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 19) & (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['DISCOUNT'] != 0.029424652533388208)][['TAX', 'DISCOUNT', 'LINESTATUS', 'L_ORDERKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT']].merge(orders[(orders['TOTALPRICE'] == 194064.60630594872) & (orders['O_CUSTKEY'] != 31880) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] != 'q') | (orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] > 0)].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != 'b') | (lineitem['DISCOUNT'] <= 0.006822841074160058)][['L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 48) | (partsupp['PS_PARTKEY'] != 13) & (partsupp['SUPPLYCOST'] == 772.9656731786589)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#22') | (part['P_NAME'] == 'r') & (part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#23') & (part['SIZE'] > 18) & (part['PT_COMMENT'].str.startswith('c')) & (part['RETAILPRICE'] > 1062.5867536039227) & (part['PT_COMMENT'] != 'l')][['P_NAME', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'e') & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_SUPPKEY'] == 214) & (lineitem['L_PARTKEY'] == 82684) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_COMMENT'] != 'q') & (lineitem['L_SUPPKEY'] > 1750) & (lineitem['QUANTITY'] >= 29)].merge(orders[(orders['O_CUSTKEY'] != 130559) | (orders['O_CUSTKEY'] == 134357) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] != 11956) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_CUSTKEY'] >= 18110)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 33110) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['QUANTITY'] > 16) | (lineitem['L_ORDERKEY'] < 110)][['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'LINENUMBER', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 2) & (supplier['S_COMMENT'].str.startswith('t')) & (supplier['S_NATIONKEY'] <= 22) & (supplier['S_ACCTBAL'] == 8510.122989737982) & (supplier['S_NATIONKEY'] > 8) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] >= 173783) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['COMMITDATE', 'SHIPINSTRUCT', 'DISCOUNT', 'RECEIPTDATE', 'TAX', 'SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS']].merge(orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 8622) | (lineitem['TAX'] != 0.07799671091043925) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['DISCOUNT'] == 0.09612899096361041)].merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'i') & (customer['C_ADDRESS'] == '0') | (customer['C_PHONE'] == '13-') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_PHONE'] != '18-') & (customer['C_PHONE'] == '1')].merge(nation[(nation['N_COMMENT'] != 'o')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 3496)][['TAX', 'COMMITDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'SHIPMODE', 'QUANTITY', 'DISCOUNT']].merge(orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] <= 6) & (lineitem['LINENUMBER'] < 6) & (lineitem['EXTENDEDPRICE'] == 36320.7326960718)].merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 92) | (customer['C_NATIONKEY'] >= 2) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '25-') & (customer['C_PHONE'].str.startswith('27-'))][['C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] >= 9) | (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] <= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['LINENUMBER'] >= 1) | (lineitem['DISCOUNT'] > 0.006062412629261604)][['L_SUPPKEY', 'SHIPDATE', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 37)].merge(supplier[(supplier['S_ACCTBAL'] != 6431.445183773768) | (supplier['S_PHONE'] != '17-') | (supplier['S_ADDRESS'] != '7') & (supplier['S_SUPPKEY'] != 94) & (supplier['S_NATIONKEY'] < 13) | (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['TAX'] > 0.07275701610149458) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['L_COMMENT'] == ' ')][['QUANTITY', 'LINENUMBER', 'L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'SHIPMODE', 'L_SUPPKEY', 'RETURNFLAG', 'TAX', 'DISCOUNT']].merge(partsupp[(partsupp['AVAILQTY'] > 562)].merge(part[(part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'].str.startswith('f'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[['L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'RETURNFLAG', 'SHIPMODE', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 54.61312408791207) & (partsupp['PS_SUPPKEY'] == 1255) & (partsupp['PS_PARTKEY'] <= 43) | (partsupp['AVAILQTY'] >= 2647)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY', 'L_PARTKEY', 'QUANTITY', 'COMMITDATE', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE']].merge(orders.merge(customer[['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'f') & (customer['C_ACCTBAL'] >= 2374.0212134203634) | (customer['C_ADDRESS'] == 'e')][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] < 5) | (nation['N_NATIONKEY'] <= 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] >= 9) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_COMMENT'] != 'u') & (customer['C_ADDRESS'].str.startswith('H')) | (customer['C_COMMENT'] != ',') | (customer['C_ADDRESS'] == 'h') | (customer['C_ADDRESS'] != 'Y')][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] < 189661.66236732408) & (orders['O_CUSTKEY'] < 43810)][['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] < 164)].merge(customer[(customer['C_COMMENT'] != 'k') & (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_ADDRESS'].str.startswith('O')) | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] == 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] > 189841.22380503966) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW', '2-HIGH'])) & (orders['O_CUSTKEY'] < 110053)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 15014) | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] > 657) | (orders['TOTALPRICE'] < 87515.25981924526)].merge(customer[(customer['C_COMMENT'].str.startswith('h')) | (customer['C_NATIONKEY'] < 2)][['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] > 16) & (nation['N_NATIONKEY'] < 12)].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 51320) | (orders['TOTALPRICE'] <= 172348.51375531664) | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 32166) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] >= 39885) & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_COMMENT'].str.startswith('l'))].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 300) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] != 97451) | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 'egu')].merge(customer[(customer['C_COMMENT'].str.startswith('d'))][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 110) & (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] < 227413.95637315308) & (orders['O_CUSTKEY'] > 139600)].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] > 18) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] != 'r')].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 26) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] == 62) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERDATE'] < '1992-01-13')][['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'a') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] <= 9128.612915106107) | (customer['C_PHONE'] == '1') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 5) | (nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] <= 49814.23449299515) | (orders['O_COMMENT'] != ' re')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_CUSTKEY'] < 53) | (customer['C_ADDRESS'] == '0')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0)][['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_NATIONKEY'] > 14) | (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] != 's')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] != ' ') & (customer['C_COMMENT'] != 'p') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'] != 'g') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] < 21) & (nation['N_NAME'] != 'E') | (nation['N_NAME'] != 'V')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_NATIONKEY'] < 16) & (supplier['S_SUPPKEY'] >= 26) & (supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_ADDRESS'] != 'a') & (supplier['S_ADDRESS'] == 'H') & (supplier['S_NATIONKEY'] != 14)][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 1207) & (partsupp['AVAILQTY'] == 5587)].merge(supplier[(supplier['S_ACCTBAL'] == 3940.6474268588636) | (supplier['S_ADDRESS'].str.startswith('S')) & (supplier['S_PHONE'] == '14-') & (supplier['S_ADDRESS'] == 'y') & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 8758.617906071657) & (supplier['S_COMMENT'] != 'al ')][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 1552) & (partsupp['AVAILQTY'] == 7733) & (partsupp['PS_PARTKEY'] == 23) | (partsupp['PS_SUPPKEY'] > 3424)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 199) & (partsupp['PS_SUPPKEY'] <= 2731)].merge(supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_ACCTBAL'] == 1801.2054260944876) & (supplier['S_ADDRESS'] == ' ') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] < 12) | (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 8)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] == 17) & (partsupp['PS_PARTKEY'] == 21) | (partsupp['PS_SUPPKEY'] == 5103) & (partsupp['SUPPLYCOST'] < 359.58615606124346) & (partsupp['AVAILQTY'] != 6694)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] > 74) | (part['TYPE'].str.startswith('S')) | (part['BRAND'].isin(['Brand#54', 'Brand#24'])) | (part['PT_COMMENT'] == 'b') | (part['RETAILPRICE'] >= 989.1318636985009) | (part['RETAILPRICE'] > 1035.0493905633841) | (part['SIZE'] != 40)][['SIZE', 'BRAND', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4823) & (partsupp['P_COMMENT'] != '.') & (partsupp['AVAILQTY'] > 4114) | (partsupp['AVAILQTY'] <= 475)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 2300.0440996215866) & (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_SUPPKEY'] == 118) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 1) | (supplier['S_COMMENT'].str.startswith('h'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'a') | (partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] < 6988) & (partsupp['SUPPLYCOST'] > 201.14375620890644) | (partsupp['P_COMMENT'] == 'are')].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('k')) | (partsupp['PS_PARTKEY'] != 34) & (partsupp['AVAILQTY'] < 1047)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] != 15) & (part['P_NAME'] != 's') & (part['BRAND'] != 'Brand#52') & (part['BRAND'] == 'Brand#33') | (part['CONTAINER'] == 'JUMBO') & (part['BRAND'].isin(['Brand#34', 'Brand#13', 'Brand#35', 'Brand#45', 'Brand#21', 'Brand#52', 'Brand#23', 'Brand#22', 'Brand#14', 'Brand#31', 'Brand#12', 'Brand#42', 'Brand#54', 'Brand#51', 'Brand#53'])) | (part['RETAILPRICE'] >= 1074.8046631374436) | (part['PT_COMMENT'].str.startswith('b')) | (part['RETAILPRICE'] != 998.6236119234751)][['P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 920.6717226825141) | (partsupp['AVAILQTY'] > 1322) | (partsupp['SUPPLYCOST'] == 630.1696764489852) & (partsupp['SUPPLYCOST'] <= 828.1659788545561)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != 'u') | (supplier['S_PHONE'] != '3')].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'] != ' ')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 369.2130891733722) & (partsupp['PS_PARTKEY'] == 28)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] < 1062.4482616740904) & (part['PT_COMMENT'] != 'n') & (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] != 'i')][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 787.1625510991545) | (partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['P_COMMENT'].str.startswith(',')) & (partsupp['PS_SUPPKEY'] == 293) & (partsupp['AVAILQTY'] >= 321)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] <= 185) & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_ACCTBAL'] < 7270.726764436197) | (supplier['S_ACCTBAL'] != 2245.762323379776) & (supplier['S_NATIONKEY'] >= 9)][['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'S')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_PHONE'] != '28-') & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 8397.74989383998) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] > 20)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] >= 3183.122328544805) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 3) & (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_ACCTBAL'] < 5204.073689035298)][['S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 18) & (supplier['S_PHONE'] == '32-') & (supplier['S_NATIONKEY'] <= 18) & (supplier['S_NATIONKEY'] > 13) | (supplier['S_COMMENT'] != 'k') | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 5082.973233938888)][['S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 13)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 14) & (supplier['S_COMMENT'].str.startswith('f'))][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] < 21) & (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 31) | (supplier['S_NATIONKEY'] < 21) & (supplier['S_ACCTBAL'] > 4854.643681020108) & (supplier['S_ADDRESS'].str.startswith('r'))][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 6014.498673843275) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'].str.startswith('2'))][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'c') & (customer['C_PHONE'] == '3') & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_CUSTKEY'] < 58) | (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 11) & (nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] != 63.55621456751692) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] <= 0)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 3788) | (partsupp['PS_PARTKEY'] <= 20)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('U')) & (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_COMMENT'] != 'f') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 7140.2549868679) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= 9673.725522707675)][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['TAX'] < 0.051872594616053015) | (lineitem['L_SUPPKEY'] <= 1586) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPMODE'] != 'SHIP')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_NAME', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.09477016221091428) | (lineitem['SHIPMODE'].isin(['RAIL', 'AIR', 'FOB'])) | (lineitem['DISCOUNT'] != 0.0633375566381431) | (lineitem['EXTENDEDPRICE'] != 42414.406668651376) | (lineitem['EXTENDEDPRICE'] < 7592.497219691633) & (lineitem['TAX'] < 0.03215831989591515) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['EXTENDEDPRICE'] > 30044.664535602493) & (lineitem['SHIPDATE'] > '1998-10-30')][['LINENUMBER', 'EXTENDEDPRICE', 'SHIPMODE', 'L_ORDERKEY']].merge(orders[(orders['O_CUSTKEY'] <= 25938) | (orders['O_CUSTKEY'] != 125827) & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] <= 82797) | (orders['TOTALPRICE'] <= 173850.7970497748) | (orders['TOTALPRICE'] == 94682.5160449183) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] != '2-HIGH')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 78916.51757383066) & (lineitem['DISCOUNT'] <= 0.0014486552922692852) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_COMMENT'] == 'b') & (lineitem['DISCOUNT'] < 0.05747890180353637) | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['RECEIPTDATE'] < '1998-11-06')][['COMMITDATE', 'RECEIPTDATE', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] < 3290) & (partsupp['SUPPLYCOST'] > 338.32737343853904) | (partsupp['PS_SUPPKEY'] > 1310) | (partsupp['PS_PARTKEY'] > 19)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] < 106) & (lineitem['LINESTATUS'] == 'O') | (lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] >= 28) & (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['SHIPMODE'] != 'AIR')][['RETURNFLAG', 'L_PARTKEY', 'QUANTITY', 'TAX', 'LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['AVAILQTY'] < 5148) & (partsupp['SUPPLYCOST'] > 464.9884495031828)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['CONTAINER', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] == 43) & (lineitem['LINENUMBER'] == 4) | (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'FOB', 'SHIP', 'MAIL'])) | (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_COMMENT'] == 'q') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_SUPPKEY'] >= 3759) | (lineitem['LINESTATUS'] != 'F')][['QUANTITY', 'LINENUMBER', 'L_ORDERKEY', 'SHIPDATE', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINESTATUS']].merge(orders[(orders['O_CUSTKEY'] >= 53486) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '2-HIGH'])) | (orders['TOTALPRICE'] == 86415.96884801854) & (orders['O_CUSTKEY'] < 86905) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['TOTALPRICE'] < 141458.78285809158) & (orders['TOTALPRICE'] < 226878.49693779746)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] <= 166182) & (lineitem['RECEIPTDATE'] <= '1992-05-02')][['QUANTITY', 'LINENUMBER', 'COMMITDATE', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 840.5424102185308)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '14-')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] == 0.036176211619293026) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['L_COMMENT'].str.startswith('lit')) & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_COMMENT'] != '-') & (lineitem['QUANTITY'] <= 28) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 6749) | (partsupp['PS_PARTKEY'] < 40) | (partsupp['P_COMMENT'] == 'h') | (partsupp['PS_SUPPKEY'] < 5272)].merge(supplier[(supplier['S_SUPPKEY'] > 159) & (supplier['S_PHONE'] == '17-') & (supplier['S_NATIONKEY'] < 7) & (supplier['S_NAME'] != 'S')][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['DISCOUNT', 'TAX', 'QUANTITY', 'L_COMMENT', 'LINESTATUS', 'L_ORDERKEY', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(orders.merge(customer[(customer['C_CUSTKEY'] <= 24) & (customer['C_NATIONKEY'] >= 14) & (customer['C_ADDRESS'] == 'p') & (customer['C_NATIONKEY'] > 7)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_COMMENT', 'L_SUPPKEY', 'SHIPDATE', 'LINENUMBER', 'RETURNFLAG', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_ACCTBAL'] < 2847.3066221368495) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] != 6) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 17)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE']].merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('t')) & (part['RETAILPRICE'] < 1046.5264229370973) | (part['MFGR'] == 'Manufacturer#2') | (part['BRAND'].isin(['Brand#11', 'Brand#21', 'Brand#53', 'Brand#24', 'Brand#12', 'Brand#41', 'Brand#45', 'Brand#52', 'Brand#22', 'Brand#25', 'Brand#54', 'Brand#31', 'Brand#51', 'Brand#14', 'Brand#23', 'Brand#33', 'Brand#13', 'Brand#43', 'Brand#34'])) | (part['BRAND'] != 'Brand#45')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_NAME', 'TYPE', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'LINENUMBER', 'L_SUPPKEY', 'DISCOUNT', 'LINESTATUS', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1338) | (partsupp['SUPPLYCOST'] > 168.73728546274916)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] <= 2561.941893575353) & (supplier['S_ACCTBAL'] < 9171.613941727059) & (supplier['S_ACCTBAL'] == -690.2848430665586)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('max', numeric_only=True)

lineitem[['RECEIPTDATE', 'LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'QUANTITY', 'TAX', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] <= 7) & (nation['N_NATIONKEY'] >= 5)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'LINENUMBER', 'L_ORDERKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(orders[(orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] > 82619) & (orders['O_CUSTKEY'] == 113255) | (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == 'f') | (orders['ORDERDATE'] < '1998-07-21')].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 19) & (nation['N_NATIONKEY'] != 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

lineitem[['SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT', 'L_PARTKEY', 'QUANTITY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'DISCOUNT', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] < 41) | (partsupp['PS_PARTKEY'] <= 22) & (partsupp['PS_SUPPKEY'] <= 6800)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_COMMENT'] != 'h')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 63) & (customer['C_COMMENT'] != 'k') & (customer['C_ACCTBAL'] != 6852.562751332795) & (customer['C_ACCTBAL'] > 6374.173190050797) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'E')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 99) & (customer['C_ACCTBAL'] == 7407.458029652622) & (customer['C_ADDRESS'] == 'O') | (customer['C_COMMENT'] == 'q') | (customer['C_PHONE'] != '27-') & (customer['C_NATIONKEY'] > 21) | (customer['C_ACCTBAL'] <= 7750.87938401905) | (customer['C_CUSTKEY'] > 28)][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] > 634) | (orders['TOTALPRICE'] <= 323762.7553800413)][['ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('n')) & (customer['C_ADDRESS'].str.startswith('D')) & (customer['C_ADDRESS'] != 'g') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] != 11) & (customer['C_ACCTBAL'] < 3199.4264689206493) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] > 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') | (orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] < 220964.9352062985) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 62169) & (orders['CLERK'] != 'C')].merge(customer[(customer['C_COMMENT'] != 'w') | (customer['C_COMMENT'].str.startswith('o')) & (customer['C_CUSTKEY'] == 72) & (customer['C_NATIONKEY'] <= 8)][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] < 335) | (orders['TOTALPRICE'] != 255711.1297583314)][['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_NATIONKEY'] <= 14)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW', '2-HIGH', '1-URGENT'])) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] >= 38877) | (orders['O_CUSTKEY'] > 23183)][['CLERK', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] >= 16) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 56202) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_CUSTKEY'] <= 80092) | (orders['ORDERSTATUS'] != 'P')][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '5-LOW', '4-NOT SPECIFIED'])) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] < 104233)][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['O_COMMENT'] != 'g') & (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] >= 9) & (customer['C_ADDRESS'] == 'e') & (customer['C_NATIONKEY'] >= 11) & (customer['C_PHONE'] != '18-') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_CUSTKEY'] == 67)][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'x')].merge(customer[(customer['C_ADDRESS'] == 'P') | (customer['C_ACCTBAL'] != 6622.960882037062) | (customer['C_PHONE'].str.startswith('2')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_COMMENT'] == 'w')][['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'k') | (orders['O_CUSTKEY'] < 148546) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM'])) & (orders['TOTALPRICE'] > 18834.553309435905)][['ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] == '4') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] == 16) & (customer['C_PHONE'] != '13-') | (customer['C_CUSTKEY'] <= 83) | (customer['C_ACCTBAL'] < 327.0288405133431) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] != '6')][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 't')][['ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 275001.4567352329) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '5-LOW'])) & (orders['O_CUSTKEY'] <= 22169) | (orders['TOTALPRICE'] <= 199679.46525919525)][['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] < 16) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 22) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_NAME'] == 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 53057.39752897447) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))].merge(customer[(customer['C_CUSTKEY'] <= 28) & (customer['C_CUSTKEY'] < 56) | (customer['C_COMMENT'].str.startswith('w')) | (customer['C_ACCTBAL'] >= 3094.753367854705)][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] == 't') | (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 4) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'] == 'h') & (customer['C_CUSTKEY'] != 26) & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_CUSTKEY'] == 45)][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] == 9976.71755921332) | (customer['C_ADDRESS'] != '8') | (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_PHONE'].str.startswith('18-'))].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 144) & (supplier['S_SUPPKEY'] <= 43)][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 25) & (partsupp['P_COMMENT'].str.startswith('d'))].merge(supplier[(supplier['S_ACCTBAL'] != -818.5497994253531) & (supplier['S_NATIONKEY'] == 16) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ADDRESS'] == 'E') & (supplier['S_COMMENT'] == 'f')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'P')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 46) | (partsupp['AVAILQTY'] > 5156) | (partsupp['PS_PARTKEY'] == 32)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 3247.7483300688255) & (supplier['S_PHONE'] == '32-') | (supplier['S_COMMENT'] == 'a') & (supplier['S_COMMENT'] == 'n') | (supplier['S_NAME'] != 'S')].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 906.3859947721078)].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] == 4) & (nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] != 'r')].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 832.2433691438268) & (partsupp['PS_PARTKEY'] >= 35) & (partsupp['AVAILQTY'] <= 3536) | (partsupp['AVAILQTY'] >= 666)].merge(supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ADDRESS'].str.startswith('u'))][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] != 'h')].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 956.9798983487867) | (partsupp['SUPPLYCOST'] <= 668.6800661404724) & (partsupp['AVAILQTY'] != 4289) | (partsupp['PS_SUPPKEY'] > 4145)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 8)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] == 6589.811509303172) | (supplier['S_NATIONKEY'] < 19) & (supplier['S_COMMENT'] == 't') | (supplier['S_COMMENT'] == 'r') & (supplier['S_COMMENT'] != 'f') | (supplier['S_ACCTBAL'] < 3416.0218633165014)].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] != 4)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 1789.247947663681) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 144) & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'd') & (supplier['S_ADDRESS'] != 'G') & (supplier['S_SUPPKEY'] != 99)][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_NATIONKEY'] > 1) | (supplier['S_PHONE'] != '3') & (supplier['S_ADDRESS'] == 'b') & (supplier['S_COMMENT'] != 'y') | (supplier['S_NATIONKEY'] == 17)][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 2) & (nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] != 'B')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 15) & (supplier['S_NATIONKEY'] >= 7) | (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] != 's') & (supplier['S_SUPPKEY'] != 91)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 5) | (nation['N_NATIONKEY'] <= 20) | (nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] >= 22)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != ',') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_CUSTKEY'] <= 61) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_CUSTKEY'] != 64)][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] == 19)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('d')) & (customer['C_COMMENT'].str.startswith('.')) | (customer['C_COMMENT'] != 'r') & (customer['C_ADDRESS'] != 's') & (customer['C_NATIONKEY'] >= 9) | (customer['C_ADDRESS'] != 'J') & (customer['C_ACCTBAL'] < 8257.658151243928)][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] < 8)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] != 2) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] >= 95) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != ',') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING']))][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 6422) | (partsupp['AVAILQTY'] >= 8762) & (partsupp['SUPPLYCOST'] != 965.6072299588202) & (partsupp['P_COMMENT'] == 'v')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '2') | (supplier['S_COMMENT'] != 'b')].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 7366) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['P_COMMENT'] == 'j') & (partsupp['AVAILQTY'] > 3376) | (partsupp['PS_SUPPKEY'] != 7032)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == -502.3626590372229) | (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_ADDRESS'] != 'i') | (supplier['S_SUPPKEY'] != 92) & (supplier['S_PHONE'] == '28-')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['L_COMMENT'] == 'g') & (lineitem['L_SUPPKEY'] == 782) | (lineitem['L_PARTKEY'] >= 64214)].merge(orders[['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] != 4) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_SUPPKEY'] > 6766)][['LINESTATUS', 'DISCOUNT', 'L_COMMENT', 'SHIPMODE', 'L_SUPPKEY', 'RETURNFLAG', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] != 35) | (partsupp['AVAILQTY'] != 7957) | (partsupp['SUPPLYCOST'] > 327.7955656819563) & (partsupp['P_COMMENT'] == 'l') | (partsupp['PS_PARTKEY'] >= 32)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F'])) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['QUANTITY'] > 7) & (lineitem['L_ORDERKEY'] <= 123) | (lineitem['L_ORDERKEY'] <= 35)][['SHIPMODE', 'L_SUPPKEY', 'L_COMMENT', 'QUANTITY', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS']].merge(orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] == 215350.05268301922) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_ORDERKEY'] == 34)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['DISCOUNT'] < 0.09283325709913434) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['LINENUMBER'] <= 2) | (lineitem['COMMITDATE'] < '1992-05-15')][['QUANTITY', 'LINENUMBER', 'L_COMMENT', 'L_ORDERKEY', 'L_SUPPKEY', 'DISCOUNT', 'COMMITDATE', 'SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 6972) & (partsupp['PS_SUPPKEY'] != 3695) | (partsupp['AVAILQTY'] < 1908)].merge(part[(part['BRAND'].isin(['Brand#54', 'Brand#22'])) & (part['BRAND'] != 'Brand#53') | (part['TYPE'] == 'P') & (part['P_PARTKEY'] == 21) & (part['RETAILPRICE'] >= 1070.086643061457) | (part['P_PARTKEY'] > 192) | (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('g'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] < 110) & (lineitem['COMMITDATE'] == '1992-05-15')].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] <= 70841) | (orders['TOTALPRICE'] <= 28293.630733107784) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'].str.startswith('d')) & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] == 49895) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_ADDRESS'] != 's') & (customer['C_NATIONKEY'] < 18) | (customer['C_COMMENT'] != ' ')].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] > 57) & (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['SHIPINSTRUCT'] != 'NONE')].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'Y') & (supplier['S_COMMENT'] == 'al ') | (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 19) | (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] == 301) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'].isin(['TRUCK', 'RAIL', 'FOB', 'AIR'])) & (lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'SHIP', 'RAIL', 'MAIL']))][['L_PARTKEY', 'TAX', 'SHIPDATE', 'L_SUPPKEY', 'RECEIPTDATE', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2580) | (partsupp['PS_SUPPKEY'] >= 6136) & (partsupp['PS_PARTKEY'] <= 8)].merge(part[(part['P_NAME'] != 't') & (part['P_NAME'] == 'n') & (part['P_PARTKEY'] == 11) | (part['PT_COMMENT'].str.startswith('n')) & (part['RETAILPRICE'] < 978.6747187805001) | (part['P_NAME'] != 'w')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['DISCOUNT'] >= 0.030017707866525467) | (lineitem['LINENUMBER'] >= 6) | (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['RECEIPTDATE'] != '1992-05-02')].merge(orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('2')) | (customer['C_ACCTBAL'] < 9149.477328504749) & (customer['C_CUSTKEY'] == 98) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'] == 'f')].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A')].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 896) | (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['SUPPLYCOST'] != 976.8464399013985) | (partsupp['P_COMMENT'] != '.') | (partsupp['SUPPLYCOST'] >= 348.7754785624816)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['TAX'] == 0.06776789779228815) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'NONE', 'TAKE BACK RETURN']))][['L_PARTKEY', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE', 'RETURNFLAG', 'QUANTITY', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 664.8631051853887)].merge(part[(part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'] != 'f')][['MFGR', 'TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] < 0.011607776603757199) | (lineitem['L_ORDERKEY'] >= 7) & (lineitem['L_PARTKEY'] != 71094) & (lineitem['EXTENDEDPRICE'] != 76648.7355265797) & (lineitem['LINESTATUS'] != 'F') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE']))][['COMMITDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] < 4022) & (partsupp['PS_SUPPKEY'] < 5590) | (partsupp['AVAILQTY'] < 8490) | (partsupp['SUPPLYCOST'] == 960.2390163409142) | (partsupp['PS_PARTKEY'] != 44)].merge(part[['MFGR', 'TYPE', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] > 0.0342505989958309) & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_SUPPKEY'] <= 2910)].merge(partsupp[(partsupp['AVAILQTY'] != 2922) & (partsupp['AVAILQTY'] <= 9668) & (partsupp['AVAILQTY'] != 5819) & (partsupp['SUPPLYCOST'] <= 653.9252441564779)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] >= 9) & (supplier['S_NATIONKEY'] < 13) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'Y') & (supplier['S_ADDRESS'] == '7')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_PARTKEY'] == 26) | (partsupp['PS_SUPPKEY'] < 4615) & (partsupp['PS_SUPPKEY'] == 6091)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 9) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'U')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'COMMITDATE', 'L_SUPPKEY', 'TAX', 'SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG']].merge(orders[(orders['O_ORDERKEY'] > 518) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH']))].merge(customer[(customer['C_NATIONKEY'] <= 7)].merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_COMMENT'] == 'v') & (nation['N_NAME'] != 'I')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'L_PARTKEY', 'RECEIPTDATE', 'QUANTITY', 'TAX', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] <= 182)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('count')

lineitem[['RECEIPTDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'SHIPMODE', 'TAX']].merge(orders[(orders['O_COMMENT'] != 'w') | (orders['CLERK'] != 'C')].merge(customer.merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'QUANTITY', 'L_ORDERKEY']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] < 2778) | (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 6998.148885679067) & (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] == 6008.118095856204) & (customer['C_CUSTKEY'] != 6) & (customer['C_ACCTBAL'] < -728.0184710328225) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE', 'HOUSEHOLD']))][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] <= 14) | (nation['N_COMMENT'] == 'l') & (nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'] != 'k') & (customer['C_ACCTBAL'] < 4446.720667306608) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE'])) & (customer['C_PHONE'] == '22-') | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] <= 33)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] != 10) & (nation['N_NATIONKEY'] == 7)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 205617.95135734038) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] >= 733) & (orders['O_CUSTKEY'] < 146410) & (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_ORDERKEY'] <= 639)].merge(customer[(customer['C_COMMENT'] == ',')][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] == 'e') & (orders['O_COMMENT'].str.startswith('g')) & (orders['O_CUSTKEY'] >= 78687) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] <= 361) | (orders['O_COMMENT'] == 'd')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 8172.645665687096) | (customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] != 6823.193395709335)].merge(nation[(nation['N_NAME'] == 'C') & (nation['N_NATIONKEY'] <= 16)].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] == 'the') | (orders['O_CUSTKEY'] != 117826) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] < 686) | (orders['O_COMMENT'].str.startswith('d'))][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'n') | (nation['N_NAME'] == 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 's')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] == 'R') & (nation['N_COMMENT'] != 'o') & (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 103272) & (orders['O_COMMENT'] != '-') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))].merge(customer[(customer['C_CUSTKEY'] > 24) & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_CUSTKEY'] <= 94) & (customer['C_COMMENT'] != 'f') | (customer['C_PHONE'] != '1') & (customer['C_PHONE'] != '1')][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] != 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 165)][['ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] <= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] != 'ly ') & (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('h')) | (orders['O_ORDERKEY'] >= 29) | (orders['ORDERSTATUS'] == 'P')][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '18-') & (customer['C_COMMENT'] == 'd') | (customer['C_COMMENT'] == 'p')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 342651.14021056844) | (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] < 112325.91548327392) & (orders['O_CUSTKEY'] >= 14295) & (orders['O_COMMENT'] != 'i')].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] == 10) | (nation['N_NATIONKEY'] <= 16)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 268870.26846568956) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['O_CUSTKEY'] < 64340) & (orders['TOTALPRICE'] != 66560.12562325396) | (orders['O_ORDERKEY'] >= 219) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_COMMENT'] != 'q') & (customer['C_ACCTBAL'] >= -172.1350190103458) & (customer['C_COMMENT'] != 'n') & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_COMMENT'].str.startswith(','))].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 256373.5851881055) | (orders['TOTALPRICE'] > 316406.4002074709) | (orders['O_ORDERKEY'] != 457) & (orders['TOTALPRICE'] >= 21102.972418316225) & (orders['O_ORDERKEY'] <= 164) & (orders['O_COMMENT'] == 'z') | (orders['TOTALPRICE'] >= 48576.44947622023) | (orders['O_ORDERKEY'] <= 405) | (orders['O_ORDERKEY'] == 515)][['ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_ACCTBAL'] != 579.5329177795338) | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_NATIONKEY'] >= 7) & (customer['C_COMMENT'].str.startswith(' '))].merge(nation[(nation['N_COMMENT'] == 'y')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] == 21) & (customer['C_NATIONKEY'] == 17) | (customer['C_ADDRESS'] != ',') & (customer['C_PHONE'] == '2') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'] == 'L') | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] > 22) | (customer['C_ACCTBAL'] == 6782.44325403301) | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'].str.startswith('E'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 2407) | (partsupp['PS_SUPPKEY'] == 4516) & (partsupp['PS_SUPPKEY'] >= 1331) & (partsupp['PS_SUPPKEY'] != 4829) | (partsupp['PS_SUPPKEY'] <= 3708)].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] > 6)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 2216) & (partsupp['SUPPLYCOST'] > 795.7154330162339) & (partsupp['P_COMMENT'] != 't') | (partsupp['PS_PARTKEY'] > 13)].merge(supplier[(supplier['S_ACCTBAL'] == 7492.3148093149475)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 29) | (partsupp['PS_SUPPKEY'] <= 902) | (partsupp['PS_PARTKEY'] >= 29)].merge(supplier[(supplier['S_COMMENT'] == 'r') & (supplier['S_ACCTBAL'] < 9027.992206807381)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'h')].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 48) & (partsupp['PS_PARTKEY'] == 7) | (partsupp['PS_SUPPKEY'] == 2641) | (partsupp['SUPPLYCOST'] > 244.33689364261798)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] > 1002.6313639622017) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5'])) | (part['RETAILPRICE'] <= 984.1646550515914) & (part['MFGR'] == 'Manufacturer#1') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) & (part['P_PARTKEY'] < 87)][['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'SIZE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4646) & (partsupp['PS_SUPPKEY'] > 5030) | (partsupp['AVAILQTY'] != 8610) & (partsupp['PS_SUPPKEY'] >= 5603) | (partsupp['AVAILQTY'] <= 294)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('d')) | (supplier['S_ACCTBAL'] != 2821.695736510461) & (supplier['S_COMMENT'] == 'v') | (supplier['S_ACCTBAL'] != 1483.564285108169) & (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] == 11) | (nation['N_REGIONKEY'] == 1)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 10) & (supplier['S_NATIONKEY'] == 9) & (supplier['S_NATIONKEY'] <= 16) & (supplier['S_SUPPKEY'] <= 91) | (supplier['S_COMMENT'] == 'w') | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_ACCTBAL'] == 7594.101634479469)][['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] == ' ')].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem.merge(orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NAME'] != 'J')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 6106) | (partsupp['SUPPLYCOST'] > 213.57633566028133) | (partsupp['SUPPLYCOST'] < 445.1699170221518) & (partsupp['PS_PARTKEY'] == 41)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 89) | (supplier['S_NATIONKEY'] <= 14) & (supplier['S_NATIONKEY'] < 6) | (supplier['S_NATIONKEY'] != 3) & (supplier['S_COMMENT'].str.startswith('g'))].merge(nation[(nation['N_COMMENT'] != 'l')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 4) | (nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.015068251338163653) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_ORDERKEY'] > 19) & (lineitem['LINESTATUS'] != 'F') & (lineitem['EXTENDEDPRICE'] >= 20981.833679990006) & (lineitem['TAX'] != 0.06836119343191743) & (lineitem['SHIPMODE'] != 'RAIL')].merge(partsupp[(partsupp['SUPPLYCOST'] != 40.58126919213386) & (partsupp['SUPPLYCOST'] == 451.28763041086006) | (partsupp['P_COMMENT'] == 'f')][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['SIZE'] == 15) | (part['SIZE'] != 37) | (part['BRAND'] != 'Brand#13') | (part['RETAILPRICE'] < 1001.4636390095113) & (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] < 122) | (part['CONTAINER'] != 'LG') | (part['P_NAME'] != 'cor')][['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 7753.957751506234) | (lineitem['QUANTITY'] == 3) & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['QUANTITY'] == 35) | (lineitem['TAX'] != 0.01912786560780871) & (lineitem['EXTENDEDPRICE'] < 27497.984335572757) & (lineitem['LINESTATUS'] == 'F')][['L_ORDERKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'COMMITDATE']].merge(orders.merge(customer[(customer['C_ACCTBAL'] < 9462.053964019517) | (customer['C_ADDRESS'].str.startswith('J')) | (customer['C_NATIONKEY'] < 6) | (customer['C_CUSTKEY'] > 51) | (customer['C_COMMENT'] == 's') & (customer['C_CUSTKEY'] >= 54) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 6) | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['LINESTATUS'] == 'O') | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['EXTENDEDPRICE'] <= 66653.13305039714) & (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['L_PARTKEY'] == 106035)][['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['EXTENDEDPRICE'] == 87891.94274834465) & (lineitem['L_SUPPKEY'] > 5406) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['EXTENDEDPRICE'] <= 2034.1187966514692) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['RETURNFLAG'].isin(['R', 'A'])) | (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'AIR', 'TRUCK', 'REG AIR', 'MAIL', 'RAIL']))][['L_PARTKEY', 'QUANTITY', 'COMMITDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPDATE', 'SHIPMODE']].merge(partsupp.merge(part[['MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'ly ') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['L_PARTKEY'] <= 112307) | (lineitem['L_PARTKEY'] > 139352) & (lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['L_PARTKEY'] != 106950) | (lineitem['L_SUPPKEY'] <= 6049) | (lineitem['SHIPMODE'].isin(['REG AIR', 'TRUCK', 'FOB', 'SHIP', 'MAIL'])) & (lineitem['L_PARTKEY'] <= 139126)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 26) | (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['SUPPLYCOST'] > 399.0435919165739) | (partsupp['P_COMMENT'] != 'c') | (partsupp['P_COMMENT'].str.startswith('j'))][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] >= 42) & (lineitem['QUANTITY'] > 21) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['EXTENDEDPRICE'] == 48482.64838090062) & (lineitem['EXTENDEDPRICE'] != 28167.388494163504) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['LINESTATUS'] != 'O') & (lineitem['L_SUPPKEY'] >= 1920)][['COMMITDATE', 'LINENUMBER', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['QUANTITY'] != 8) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['QUANTITY'] <= 45) & (lineitem['EXTENDEDPRICE'] > 85331.98894181832) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['L_COMMENT'] == 'q') | (lineitem['RECEIPTDATE'] >= '1998-11-06')][['LINESTATUS', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPMODE', 'DISCOUNT', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 338.419265397684)].merge(part[(part['BRAND'] != 'Brand#54') | (part['TYPE'] == 'M') | (part['TYPE'].str.startswith('S'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['TAX'] == 0.024158444975743498)][['SHIPDATE', 'RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'LINESTATUS', 'EXTENDEDPRICE']].merge(orders[(orders['TOTALPRICE'] != 289695.80886133533) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] < 421) & (orders['O_CUSTKEY'] >= 12197) & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 125386.84036695864)].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 55) & (customer['C_ADDRESS'].str.startswith('m')) & (customer['C_CUSTKEY'] <= 25) & (customer['C_ACCTBAL'] > 5831.548897978934) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_ORDERKEY'] < 133) | (lineitem['LINENUMBER'] > 3) & (lineitem['L_ORDERKEY'] < 12) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['EXTENDEDPRICE'] != 59730.74959672844) | (lineitem['L_SUPPKEY'] > 9613)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 3330) | (partsupp['PS_PARTKEY'] != 42)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(orders[(orders['O_COMMENT'] == 'i') | (orders['O_CUSTKEY'] > 21715) | (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('c')) | (orders['O_ORDERKEY'] <= 373) | (orders['O_COMMENT'] != 'uri') & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['DISCOUNT'] <= 0.041944962196519435) | (lineitem['L_PARTKEY'] > 165215) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['COMMITDATE'] >= '1992-05-15')][['DISCOUNT', 'L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE', 'L_PARTKEY', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 369.3729641880412) | (partsupp['P_COMMENT'] != 'u') & (partsupp['P_COMMENT'] == 'v') & (partsupp['SUPPLYCOST'] > 291.3170624936591)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['RETAILPRICE', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['LINESTATUS'].isin(['F']))][['SHIPDATE', 'L_SUPPKEY', 'COMMITDATE', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 185) & (partsupp['PS_SUPPKEY'] > 4505) | (partsupp['PS_PARTKEY'] <= 46) & (partsupp['P_COMMENT'] != 'bli') & (partsupp['PS_SUPPKEY'] <= 6094)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 158) & (supplier['S_ACCTBAL'] <= 278.46333889355856) & (supplier['S_NATIONKEY'] >= 6) | (supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] == 8572.100060732762) & (supplier['S_ADDRESS'].str.startswith('C'))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'QUANTITY', 'LINENUMBER', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] >= 99604) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0)][['ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[['DISCOUNT', 'SHIPDATE', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 41) | (partsupp['PS_PARTKEY'] != 27)].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_NATIONKEY'] == 23) | (nation['N_NATIONKEY'] < 15) & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'L_SUPPKEY', 'QUANTITY', 'RETURNFLAG', 'L_COMMENT', 'LINESTATUS']].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NAME'] == 'S')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY']].merge(orders[(orders['O_COMMENT'] != 'z') | (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] < 196847.91863635494) | (orders['O_COMMENT'] == 'h') & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['O_CUSTKEY'] > 68058) & (orders['TOTALPRICE'] >= 266315.69688114425) | (orders['O_ORDERKEY'] != 304)].merge(customer[(customer['C_ACCTBAL'] == 550.2196185935043) | (customer['C_CUSTKEY'] >= 6) | (customer['C_ACCTBAL'] > 1340.4505857952722) & (customer['C_COMMENT'] != 'k') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_COMMENT'].str.startswith('.')) & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NAME'] != 'I')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['O_COMMENT'] != ' ') & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] != 82063) | (orders['O_COMMENT'] != 'r') | (orders['O_CUSTKEY'] > 9915)].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] >= 223036.08683706267) | (orders['ORDERDATE'] == '1998-07-21') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] >= 672) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] < '1998-07-21')][['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 'i') & (orders['O_COMMENT'] == 'd') | (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] <= 782) & (orders['O_ORDERKEY'] <= 353) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] == 270)].merge(customer[(customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_CUSTKEY'] != 85) | (customer['C_ACCTBAL'] > 9330.146991804733) & (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] >= 10)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 68443) & (orders['TOTALPRICE'] == 150700.94644354805) & (orders['TOTALPRICE'] < 232316.8425780814) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] != 107305) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_ADDRESS'].str.startswith('r')) & (customer['C_ADDRESS'] == '9') & (customer['C_NATIONKEY'] < 5) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] != 1207.8565319084632) & (customer['C_ACCTBAL'] != 6832.964920337952) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_COMMENT'] == 's')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 137112) | (orders['O_ORDERKEY'] > 293) | (orders['TOTALPRICE'] >= 350571.6221567805) & (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] == 559) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_ACCTBAL'] < 2577.1651350442535) & (customer['C_ACCTBAL'] != 4789.970738477822) | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] >= 15)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ACCTBAL'] >= 3009.3106579946025) & (customer['C_NATIONKEY'] != 0) | (customer['C_ACCTBAL'] == 5600.010437474501) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] == 22)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_PHONE'] == '2') & (customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'] == 'd') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 18) & (customer['C_PHONE'] == '2')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_PHONE'] != '32-')][['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] <= 9)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 5947)].merge(supplier[(supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'].str.startswith('5')) & (supplier['S_NATIONKEY'] > 19) & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_SUPPKEY'] <= 69) & (supplier['S_ADDRESS'] != ' ') & (supplier['S_SUPPKEY'] > 195)][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'] == 'S')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 2869) | (partsupp['PS_SUPPKEY'] != 7361) & (partsupp['AVAILQTY'] >= 731) | (partsupp['PS_SUPPKEY'] >= 3621)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('o')) | (part['P_PARTKEY'] != 103) & (part['SIZE'] <= 23) & (part['RETAILPRICE'] <= 940.5441449259251) | (part['CONTAINER'].str.startswith('LG')) | (part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] == 'Brand#53')][['CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 5875) & (partsupp['SUPPLYCOST'] >= 403.18576357379766) & (partsupp['AVAILQTY'] <= 3980) | (partsupp['P_COMMENT'] == 'd')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 13) | (partsupp['SUPPLYCOST'] == 546.5272184192524)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 104) | (supplier['S_ADDRESS'] != 'E')].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] > 4420.473716621406) & (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 4) | (supplier['S_ADDRESS'].str.startswith('x'))][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] == 0) | (nation['N_COMMENT'] != 'l')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 167) & (supplier['S_PHONE'] != '28-')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] < 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_ADDRESS'] != 'F') & (customer['C_CUSTKEY'] == 60) & (customer['C_CUSTKEY'] != 24) | (customer['C_ACCTBAL'] == 3063.1951756847343) | (customer['C_ADDRESS'] == 'j') | (customer['C_NATIONKEY'] < 21) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'n')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 16) | (nation['N_NATIONKEY'] != 10) | (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] < 23)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 2) | (partsupp['AVAILQTY'] >= 3060) | (partsupp['PS_SUPPKEY'] >= 1034) & (partsupp['SUPPLYCOST'] < 158.4206287021766)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] != 'a') | (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] <= 16) & (supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 8) | (partsupp['AVAILQTY'] == 2789) | (partsupp['P_COMMENT'] == 'ly ')].merge(supplier[(supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_ADDRESS'] == 'z') & (supplier['S_ADDRESS'] != ' ') & (supplier['S_ADDRESS'] == '1') & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != 6161.287553335236)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] <= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] < 15) | (lineitem['EXTENDEDPRICE'] <= 11422.070167167116) & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['L_SUPPKEY'] > 8636) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'COLLECT COD']))].merge(partsupp[(partsupp['AVAILQTY'] < 429) | (partsupp['SUPPLYCOST'] >= 854.2651141036546) | (partsupp['SUPPLYCOST'] <= 919.0956502619906)].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'].isin(['Brand#13', 'Brand#51', 'Brand#14', 'Brand#32', 'Brand#22', 'Brand#21', 'Brand#34', 'Brand#41', 'Brand#11', 'Brand#45', 'Brand#42', 'Brand#44', 'Brand#12', 'Brand#55', 'Brand#24', 'Brand#35', 'Brand#25', 'Brand#54', 'Brand#53', 'Brand#15'])) | (part['SIZE'] > 34) & (part['SIZE'] > 45) & (part['PT_COMMENT'].str.startswith('b')) & (part['PT_COMMENT'] != 's')][['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.0662038819181654) | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINENUMBER'] <= 5) | (lineitem['RETURNFLAG'] == 'R')][['L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'LINESTATUS']].merge(orders.merge(customer[['C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 's') | (lineitem['L_COMMENT'] == 'n') | (lineitem['RETURNFLAG'] == 'R') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['L_PARTKEY'] >= 98755) | (lineitem['DISCOUNT'] <= 0.07628067070447923) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['L_COMMENT', 'TAX', 'L_ORDERKEY', 'LINESTATUS', 'RETURNFLAG', 'QUANTITY', 'RECEIPTDATE']].merge(orders.merge(customer[(customer['C_NATIONKEY'] >= 15) | (customer['C_COMMENT'] == 'f') | (customer['C_ACCTBAL'] <= 4298.852390868675) & (customer['C_CUSTKEY'] <= 93) | (customer['C_COMMENT'] == 'l')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('f')) & (lineitem['L_SUPPKEY'] <= 1435) & (lineitem['TAX'] >= 0.04772479918346444) | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_PARTKEY'] <= 80871) | (lineitem['EXTENDEDPRICE'] <= 64571.70573946369) | (lineitem['DISCOUNT'] <= 0.03336441684212963)].merge(orders.merge(customer[(customer['C_CUSTKEY'] > 27) | (customer['C_NATIONKEY'] <= 6) & (customer['C_CUSTKEY'] != 70) | (customer['C_COMMENT'] == 's')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 125) | (lineitem['L_COMMENT'] == 'lit')][['L_SUPPKEY', 'SHIPMODE', 'QUANTITY', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 6377)].merge(part[['CONTAINER', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'TYPE']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] < 5693) | (lineitem['LINENUMBER'] != 2) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_PARTKEY'] == 14551) & (lineitem['RECEIPTDATE'] < '1992-05-02')].merge(orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['TOTALPRICE'] < 202008.89323591988) & (orders['CLERK'] != 'C')][['O_CUSTKEY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 37) & (lineitem['LINENUMBER'] != 5) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['LINESTATUS'] != 'F') | (lineitem['LINENUMBER'] != 6) | (lineitem['DISCOUNT'] <= 0.07776514160145785)][['EXTENDEDPRICE', 'RECEIPTDATE', 'L_PARTKEY', 'L_COMMENT', 'RETURNFLAG', 'LINENUMBER']].merge(partsupp.merge(part[(part['PT_COMMENT'] != 'p') & (part['SIZE'] != 5) | (part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] == 'l') & (part['SIZE'] != 33) & (part['PT_COMMENT'] != 'm') | (part['P_PARTKEY'] <= 184) & (part['MFGR'] == 'Manufacturer#4')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) | (lineitem['L_COMMENT'] == 'd') | (lineitem['LINENUMBER'] != 6) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] <= 0.0830218516608054) & (lineitem['TAX'] < 0.04363173016358984) & (lineitem['L_PARTKEY'] < 174040) & (lineitem['L_SUPPKEY'] > 4266) & (lineitem['LINENUMBER'] <= 5) & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A']))].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 5450.393536872068) | (supplier['S_NATIONKEY'] == 11) | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_SUPPKEY'] >= 5) | (supplier['S_NATIONKEY'] >= 22) | (supplier['S_ACCTBAL'] <= 6206.663135426418)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'REG AIR', 'MAIL', 'FOB', 'RAIL', 'AIR', 'TRUCK'])) & (lineitem['L_PARTKEY'] != 156934) | (lineitem['SHIPMODE'] == 'FOB') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['L_PARTKEY'] > 52321) & (lineitem['LINENUMBER'] <= 5) | (lineitem['L_SUPPKEY'] != 6924) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_SUPPKEY'] != 1992)].merge(partsupp[(partsupp['PS_PARTKEY'] < 13)].merge(supplier[(supplier['S_SUPPKEY'] == 86)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('K')) & (nation['N_NAME'] == 'M')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] >= 0.016203668516812427) & (lineitem['TAX'] >= 0.0660698297997044)][['SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'RECEIPTDATE']].merge(orders.merge(customer[(customer['C_NATIONKEY'] == 10) & (customer['C_CUSTKEY'] > 15) | (customer['C_PHONE'] != '18-') & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_NATIONKEY'] > 14) | (customer['C_ACCTBAL'] == 9256.215363202364)][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'LINESTATUS', 'TAX']].merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'TAX', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'QUANTITY', 'DISCOUNT']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('b')) & (part['BRAND'] != 'Brand#33') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5'])) & (part['PT_COMMENT'] == 'i') | (part['TYPE'].str.startswith('S')) & (part['SIZE'] >= 43) | (part['P_PARTKEY'] <= 57) | (part['TYPE'] != 'STA') & (part['BRAND'] != 'Brand#31')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] >= 86541)][['TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] != '2') & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != 'n') & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_NATIONKEY'] == 1)].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'].str.startswith('c'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] < 131452.40224794127) & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'] != 'd') | (orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '3') & (customer['C_ACCTBAL'] <= 6001.683121780195) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) | (customer['C_CUSTKEY'] <= 3) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] <= 3507.0403756339647)][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']).agg('count')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] != 40207) | (orders['TOTALPRICE'] == 322027.5487297788) & (orders['ORDERPRIORITY'].isin(['5-LOW'])) | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '1-URGENT', '5-LOW'])) | (orders['O_ORDERKEY'] <= 702) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'h')].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 11) | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 'x') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] >= 89495.8067034338) | (orders['TOTALPRICE'] < 243356.07025356032) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'] == 's') & (orders['O_COMMENT'].str.startswith('-')) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED']))].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 27674.07658225794) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_CUSTKEY'] == 135886) & (orders['O_COMMENT'].str.startswith('d')) & (orders['ORDERSTATUS'] == 'O') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW']))].merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] >= 7589.794810996746) | (customer['C_COMMENT'] == 'g') | (customer['C_ACCTBAL'] < 8656.713786344384) & (customer['C_COMMENT'] != 'l') & (customer['C_CUSTKEY'] < 54) & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] < 2)].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] < 22) | (customer['C_CUSTKEY'] == 54) | (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] < 21) | (customer['C_ADDRESS'] != '9')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] < 8) & (nation['N_NATIONKEY'] <= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ACCTBAL'] == 8781.262091176184) & (customer['C_ACCTBAL'] == 4855.559777535638) & (customer['C_COMMENT'] == 'k')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('v')) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '1') | (supplier['S_NATIONKEY'] < 5) & (supplier['S_SUPPKEY'] <= 24)][['S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_NAME'] != 'G')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 5) & (supplier['S_SUPPKEY'] >= 199) | (supplier['S_ACCTBAL'] == -338.30609244644995) | (supplier['S_ACCTBAL'] == 1983.459510750626) | (supplier['S_COMMENT'] == 'r') | (supplier['S_PHONE'] == '17-') | (supplier['S_COMMENT'] != 'al ')][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 7325.161176659507) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] >= 66) & (customer['C_CUSTKEY'] <= 34) & (customer['C_CUSTKEY'] <= 99)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] != 34) & (customer['C_PHONE'] != '27-') | (customer['C_CUSTKEY'] > 81) | (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 9437.258485215085) | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] < 17)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1998-10-16')][['EXTENDEDPRICE', 'COMMITDATE', 'RETURNFLAG', 'L_SUPPKEY', 'L_COMMENT', 'LINENUMBER', 'DISCOUNT', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] <= 9206) | (partsupp['SUPPLYCOST'] == 843.0701089947879) & (partsupp['PS_SUPPKEY'] < 1891)].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] > 0.046911968106301785) | (lineitem['LINENUMBER'] < 4) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['DISCOUNT'] <= 0.005607680498163958) | (lineitem['TAX'] < 0.03261100264585224) | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) | (lineitem['L_SUPPKEY'] > 4086)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 6777.711893311961) & (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 45)][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'a') & (lineitem['LINESTATUS'] != 'F') | (lineitem['LINENUMBER'] <= 6) | (lineitem['L_ORDERKEY'] != 26)][['COMMITDATE', 'RETURNFLAG', 'TAX', 'L_SUPPKEY', 'L_COMMENT', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_SUPPKEY'] < 138) | (supplier['S_ACCTBAL'] <= 5945.8581862344245) | (supplier['S_SUPPKEY'] >= 100) & (supplier['S_PHONE'] != '1') & (supplier['S_SUPPKEY'] > 156)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['DISCOUNT'] < 0.06874242906587526) | (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'SHIP', 'MAIL'])) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['QUANTITY'] == 46) | (lineitem['DISCOUNT'] == 0.023875645730681672)].merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '1-URGENT', '5-LOW'])) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_CUSTKEY'] != 84292) & (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['TOTALPRICE'] <= 245359.9475134407) | (orders['O_ORDERKEY'] <= 744) | (orders['O_ORDERKEY'] >= 435) & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] < 125856.47426186175)][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] >= 7) | (customer['C_NATIONKEY'] >= 13) | (customer['C_PHONE'] != '27-') & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_NAME', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] > 33) | (lineitem['TAX'] == 0.01175410398971386)][['SHIPDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 835.7427553358779) & (partsupp['AVAILQTY'] <= 1104) & (partsupp['AVAILQTY'] <= 8544) & (partsupp['PS_PARTKEY'] >= 9) & (partsupp['AVAILQTY'] < 7151)].merge(part[(part['SIZE'] > 34) & (part['PT_COMMENT'] == 'd')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 41035) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['LINENUMBER'] == 5) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'].str.startswith('e'))].merge(orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] != 'r') & (customer['C_ACCTBAL'] <= 872.6282912411841) & (customer['C_ACCTBAL'] != 8065.60148949255)].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] <= 117567) | (lineitem['L_PARTKEY'] < 161385) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['TAX'] == 0.009856941662352785)][['LINESTATUS', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_COMMENT', 'QUANTITY', 'DISCOUNT', 'TAX']].merge(orders[(orders['O_CUSTKEY'] >= 120207) | (orders['O_ORDERKEY'] >= 647) | (orders['O_COMMENT'] != 'j') | (orders['O_ORDERKEY'] <= 423) | (orders['O_COMMENT'] == 'c') | (orders['O_CUSTKEY'] == 129373) | (orders['O_CUSTKEY'] != 10466)].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] != 7591) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RETURNFLAG'] == 'A')][['L_PARTKEY', 'QUANTITY', 'RETURNFLAG', 'COMMITDATE', 'SHIPDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1560) & (partsupp['PS_PARTKEY'] > 19) | (partsupp['SUPPLYCOST'] <= 98.71518319888084) & (partsupp['PS_SUPPKEY'] >= 7163) & (partsupp['PS_PARTKEY'] > 49)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 18) & (supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_ACCTBAL'] > 2282.315353022678) & (supplier['S_COMMENT'] != 'c')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 41) & (lineitem['TAX'] >= 0.07779677949090508) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['TAX'] <= 0.06297189126514723) & (lineitem['L_SUPPKEY'] <= 5044)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 38) & (lineitem['L_SUPPKEY'] == 211) | (lineitem['EXTENDEDPRICE'] <= 13974.77804270318) & (lineitem['EXTENDEDPRICE'] >= 8245.106759875462) | (lineitem['LINESTATUS'] != 'O') & (lineitem['QUANTITY'] == 32)].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['TAX'] < 0.044513974164132525) | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'FOB', 'RAIL', 'MAIL', 'TRUCK', 'SHIP'])) | (lineitem['TAX'] >= 0.0454932624329902) & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['EXTENDEDPRICE'] <= 85618.91752206978)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['PS_SUPPKEY'] == 3091) | (partsupp['AVAILQTY'] > 3176) | (partsupp['AVAILQTY'] == 4656)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.05839547508491527) & (lineitem['L_ORDERKEY'] <= 161) | (lineitem['DISCOUNT'] >= 0.034329294620052575) & (lineitem['L_PARTKEY'] != 2127) & (lineitem['L_SUPPKEY'] != 9223) | (lineitem['L_ORDERKEY'] <= 188) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['LINESTATUS'] == 'O')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 21.93412410386901) | (partsupp['P_COMMENT'] == 'p') | (partsupp['SUPPLYCOST'] != 469.13263225836573)].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

lineitem[['L_ORDERKEY', 'L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] == 5642) & (partsupp['SUPPLYCOST'] == 776.0337810031893) & (partsupp['PS_PARTKEY'] >= 49) & (partsupp['PS_PARTKEY'] == 36)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] != 188) & (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] == 'LG') | (part['CONTAINER'].str.startswith('MED')) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) & (part['RETAILPRICE'] >= 987.7095188730589)][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['QUANTITY', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'SHIPMODE', 'DISCOUNT', 'TAX', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'] == 'h')].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] > 664) & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1998-07-21') & (orders['TOTALPRICE'] != 262024.37437443755) | (orders['O_CUSTKEY'] >= 61494) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_ACCTBAL'] <= 2255.1083622567885)].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 34) | (customer['C_NATIONKEY'] != 18) & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] > 5347.8959732238945) | (customer['C_ACCTBAL'] <= 3853.8879832278863) & (customer['C_COMMENT'] == 'd') | (customer['C_CUSTKEY'] > 63)][['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_NAME'].str.startswith('V')) & (nation['N_NATIONKEY'] <= 21) & (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] >= 81) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY'])) & (customer['C_NATIONKEY'] == 13) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] <= 4) | (customer['C_NATIONKEY'] != 13) | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] < 92077.20745631767) | (orders['O_ORDERKEY'] != 406) | (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_ORDERKEY'] >= 140) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['O_CUSTKEY'] < 147924)].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_CUSTKEY'] >= 44) | (customer['C_COMMENT'].str.startswith('u')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_NATIONKEY'] < 1) & (nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] < 8) & (nation['N_NAME'] == 'F')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21')][['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_NATIONKEY'] <= 17) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 17) & (customer['C_NATIONKEY'] < 7) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('c')) | (orders['O_ORDERKEY'] != 24) | (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] == 9)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] == 2) | (nation['N_NATIONKEY'] != 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('o'))][['CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_ADDRESS'] != 'L') & (customer['C_ACCTBAL'] != 3829.4297357670484) | (customer['C_NATIONKEY'] >= 4) & (customer['C_ACCTBAL'] > 3877.744020747309) | (customer['C_NATIONKEY'] != 14)][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 114924) | (orders['ORDERSTATUS'] == 'O') | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'u') & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] >= 58917) & (orders['O_CUSTKEY'] > 33199)].merge(customer[(customer['C_ADDRESS'].str.startswith('q')) & (customer['C_COMMENT'] != 'g') | (customer['C_ADDRESS'].str.startswith(',')) | (customer['C_NATIONKEY'] <= 7) & (customer['C_NATIONKEY'] > 18)][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 488) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'].str.startswith('j')) & (orders['TOTALPRICE'] > 340492.71910962614) & (orders['TOTALPRICE'] > 190659.62422277033) | (orders['O_ORDERKEY'] <= 556) & (orders['O_CUSTKEY'] <= 58389) & (orders['O_CUSTKEY'] > 50439)][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 131684.2304729726) | (orders['TOTALPRICE'] > 270425.19493912027) | (orders['ORDERSTATUS'] == 'O')][['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '3') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '27-')].merge(nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_NATIONKEY'] > 21) & (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] != 23)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith('s'))][['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] > 14) | (customer['C_CUSTKEY'] >= 58) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] > 2617.4328294900947) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] != 'J') & (customer['C_ACCTBAL'] == 5501.183336680676) & (customer['C_NATIONKEY'] <= 11)][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 28) & (partsupp['AVAILQTY'] <= 9315) & (partsupp['AVAILQTY'] != 603)].merge(supplier[(supplier['S_ADDRESS'] == 'n') | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_SUPPKEY'] <= 163) & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == ' ') | (supplier['S_ACCTBAL'] < 856.7486742411518) | (supplier['S_NATIONKEY'] <= 13)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] <= 12)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 450.7304991068682) | (partsupp['P_COMMENT'] != 'bli') & (partsupp['P_COMMENT'] == 'the') | (partsupp['P_COMMENT'] != 'q') | (partsupp['PS_PARTKEY'] < 38)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ACCTBAL'] > 4185.1946927684785) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != 'K') & (supplier['S_COMMENT'].str.startswith('d')) | (supplier['S_ADDRESS'] == 'c')].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 420.5972041627149)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'].str.startswith('s')) & (supplier['S_COMMENT'].str.startswith('x'))].merge(nation[(nation['N_NATIONKEY'] >= 23) | (nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 578.2337720576579) & (partsupp['P_COMMENT'].str.startswith('t'))][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 3497.5499367829143)][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] == 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'] == 'w') & (supplier['S_COMMENT'] != 't') | (supplier['S_NATIONKEY'] != 7)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'U') & (supplier['S_SUPPKEY'] < 25) | (supplier['S_SUPPKEY'] < 147) & (supplier['S_ACCTBAL'] == 2569.9248378340762) & (supplier['S_ADDRESS'] != 'X')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] == 16) | (nation['N_NAME'].str.startswith('R'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] < 983.8993804744434) & (customer['C_NATIONKEY'] != 6) & (customer['C_ADDRESS'] == 'e') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY']))][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] >= 12) | (nation['N_NAME'].str.startswith('U'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem.merge(orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != '9') & (customer['C_NATIONKEY'] >= 9) & (customer['C_PHONE'] != '25-') | (customer['C_ADDRESS'].str.startswith('v')) & (customer['C_ACCTBAL'] != 7969.1965658472855) | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 52672.194849965475) & (lineitem['L_COMMENT'] != 'ly ') | (lineitem['EXTENDEDPRICE'] >= 18990.39611296125) & (lineitem['L_PARTKEY'] != 79138) | (lineitem['EXTENDEDPRICE'] < 80196.1356188797) | (lineitem['L_SUPPKEY'] != 5530) & (lineitem['TAX'] <= 0.05766889056348811) | (lineitem['L_PARTKEY'] >= 121142) | (lineitem['COMMITDATE'] <= '1992-05-15')].merge(orders[(orders['O_CUSTKEY'] <= 93926) & (orders['TOTALPRICE'] <= 182741.3550453946) | (orders['O_CUSTKEY'] == 87122) | (orders['CLERK'] != 'C')].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY']))][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 6) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RETURNFLAG'] != 'R') & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_SUPPKEY'] != 2326) | (lineitem['LINESTATUS'] == 'F') | (lineitem['EXTENDEDPRICE'] < 74997.0041172521) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_PARTKEY'] >= 194637)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('f'))][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] < 1019.7881984715466) & (part['BRAND'] == 'Brand#13') | (part['P_PARTKEY'] != 84) | (part['P_NAME'] != 'd') & (part['SIZE'] < 7) & (part['SIZE'] < 16) & (part['PT_COMMENT'] != 'y')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == '-') | (lineitem['TAX'] <= 0.020113368513611975)][['QUANTITY', 'RECEIPTDATE', 'L_PARTKEY', 'COMMITDATE', 'L_SUPPKEY', 'LINENUMBER']].merge(partsupp[(partsupp['AVAILQTY'] >= 8677) | (partsupp['P_COMMENT'].str.startswith('the'))].merge(supplier.merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] < 3) & (nation['N_NATIONKEY'] < 13)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] == 991) & (lineitem['LINESTATUS'] != 'O') | (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] > 1) | (lineitem['EXTENDEDPRICE'] != 87577.29142730751) | (lineitem['L_PARTKEY'] >= 181388) | (lineitem['LINENUMBER'] == 5)].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3020) & (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['AVAILQTY'] > 2237)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27')][['RECEIPTDATE', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 's')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['LINESTATUS'] != 'O') & (lineitem['RETURNFLAG'].isin(['A', 'N'])) & (lineitem['L_ORDERKEY'] != 92)].merge(orders[(orders['O_ORDERKEY'] != 703) & (orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'].str.startswith('g')) & (orders['TOTALPRICE'] == 330147.498997743) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] == 318677.6126379799) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[(customer['C_COMMENT'] != 'p') & (customer['C_NATIONKEY'] != 20) & (customer['C_ACCTBAL'] < 6715.291785121979) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) | (customer['C_PHONE'] != '2')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_PARTKEY'] >= 57521) | (lineitem['L_SUPPKEY'] > 8990) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_SUPPKEY'] > 5875) | (lineitem['RETURNFLAG'].isin(['A', 'N']))][['L_PARTKEY', 'RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'L_ORDERKEY', 'LINESTATUS', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 2578.5830451221136) & (supplier['S_ACCTBAL'] >= 2349.909978105572) | (supplier['S_ACCTBAL'] > 7072.695954903508) & (supplier['S_SUPPKEY'] > 153) & (supplier['S_COMMENT'].str.startswith('al '))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] < 0.05530762203724573) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['L_ORDERKEY'] >= 88)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5432) & (partsupp['PS_PARTKEY'] == 26) & (partsupp['P_COMMENT'] != ' ') & (partsupp['P_COMMENT'] == ',') | (partsupp['P_COMMENT'].str.startswith('bli'))][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_ACCTBAL'] <= -165.15928951529395) | (supplier['S_NATIONKEY'] <= 2) | (supplier['S_SUPPKEY'] > 105) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('0'))][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'TAX', 'COMMITDATE', 'QUANTITY']].merge(orders.merge(customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'SHIPMODE', 'COMMITDATE', 'DISCOUNT', 'QUANTITY', 'EXTENDEDPRICE', 'LINENUMBER']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 149) | (supplier['S_NATIONKEY'] != 9) & (supplier['S_NATIONKEY'] != 12)][['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'G') | (nation['N_NAME'].str.startswith('V'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'SHIPDATE', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] != 5) | (partsupp['P_COMMENT'] == 'are') & (partsupp['P_COMMENT'] != 'j') | (partsupp['SUPPLYCOST'] < 552.8303433918715) | (partsupp['P_COMMENT'] != 'q')][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1076.4234590068115) & (part['TYPE'].str.startswith('STA')) | (part['P_PARTKEY'] >= 48) | (part['BRAND'] == 'Brand#55') & (part['BRAND'] != 'Brand#51')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

lineitem[['SHIPMODE', 'L_SUPPKEY', 'SHIPDATE', 'LINENUMBER', 'RETURNFLAG', 'QUANTITY', 'DISCOUNT']].merge(partsupp[(partsupp['AVAILQTY'] < 1617)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] > 961.3441155742729) & (part['TYPE'] != 'M') | (part['P_PARTKEY'] != 148)][['CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE', 'BRAND', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] != 8) | (customer['C_CUSTKEY'] >= 52) & (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != '4')][['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] > 1) & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] == 97791.05482299502) & (orders['O_COMMENT'] == 'e') | (orders['O_COMMENT'].str.startswith('i')) & (orders['O_COMMENT'].str.startswith('g')) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED']))][['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] > 177)][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] != 'i') & (customer['C_ADDRESS'] == 'U') & (customer['C_ACCTBAL'] != 7085.676493174499)][['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_CUSTKEY'] <= 132466) & (orders['TOTALPRICE'] != 233294.996724658) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['1-URGENT']))][['ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] == 426) | (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 102653) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['5-LOW'])) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED']))][['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] > 21) | (customer['C_ADDRESS'] == 'b') | (customer['C_PHONE'] != '3') & (customer['C_ADDRESS'] == 'Y') & (customer['C_COMMENT'] == 'p') & (customer['C_COMMENT'] != 'y')].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '3-MEDIUM'])) | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_ORDERKEY'] < 761) & (orders['O_COMMENT'] == ' ') | (orders['O_COMMENT'] != ',')][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_PHONE'] != '27-')].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NAME'] != 'C') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] >= 116509) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] == '1998-07-21')][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] > 23) | (customer['C_ACCTBAL'] == 3959.55261254606)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] < 770) & (orders['O_COMMENT'] != 'ly ') | (orders['ORDERSTATUS'] != 'F')][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_CUSTKEY'] <= 1) & (customer['C_PHONE'] == '13-') & (customer['C_CUSTKEY'] < 37) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_ACCTBAL'] > 6502.8324825175605) & (customer['C_NATIONKEY'] >= 7) & (customer['C_NATIONKEY'] > 16)].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'G')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_CUSTKEY'] <= 137251) & (orders['SHIPPRIORITY'] != 0)][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 5) | (nation['N_NATIONKEY'] == 18) | (nation['N_NATIONKEY'] > 1) & (nation['N_NAME'] != 'K')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 742) | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 339) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT'])) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('c')) & (orders['O_CUSTKEY'] < 147325)][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] != 3020.3575920047797)][['C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_COMMENT'] != 'f') & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 22) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'K') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'].str.startswith('3'))][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 289207.32200078183) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] == 32549) & (orders['O_CUSTKEY'] == 102361)][['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] >= 3980.9763137704285) & (customer['C_COMMENT'].str.startswith('e')) | (customer['C_PHONE'] == '27-')].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'R')].merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= 1074.9686277493577) & (customer['C_CUSTKEY'] != 30) & (customer['C_COMMENT'] != 'd') | (customer['C_ACCTBAL'] > -808.7592446134278) & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] != 1)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 2587) & (partsupp['P_COMMENT'].str.startswith('h')) | (partsupp['SUPPLYCOST'] > 282.99553720575966) | (partsupp['SUPPLYCOST'] != 855.5814902752222) & (partsupp['PS_SUPPKEY'] > 4547)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('9')) & (supplier['S_ADDRESS'] != 'f') & (supplier['S_COMMENT'] != 'g') & (supplier['S_NATIONKEY'] > 19) | (supplier['S_ADDRESS'] == 'R')].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] != 16) | (nation['N_NATIONKEY'] != 7) | (nation['N_NATIONKEY'] < 19)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 8807) | (partsupp['P_COMMENT'] == 'l') & (partsupp['P_COMMENT'] == 'i') | (partsupp['PS_PARTKEY'] < 35)].merge(supplier[(supplier['S_ACCTBAL'] == 567.0267719164885) | (supplier['S_COMMENT'] != 'v') & (supplier['S_ACCTBAL'] > 4138.708045933906) | (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_SUPPKEY'] > 42) & (supplier['S_ACCTBAL'] == 7861.572841025473)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 22) | (nation['N_COMMENT'] != 'o') & (nation['N_REGIONKEY'] > 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['QUANTITY'] != 16)][['RECEIPTDATE', 'L_COMMENT', 'TAX', 'COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPMODE', 'DISCOUNT']].merge(orders[(orders['O_ORDERKEY'] != 768) & (orders['O_CUSTKEY'] > 36189) | (orders['O_CUSTKEY'] != 96884) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] != 7584.472472718286)][['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] != 14) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) | (customer['C_ACCTBAL'] < 3981.929743697595) & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] != 45696) | (lineitem['L_ORDERKEY'] >= 85) | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_PARTKEY'] < 47976) & (lineitem['L_COMMENT'] != 'lit') & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'] == 'y') & (lineitem['L_PARTKEY'] != 153231) & (lineitem['EXTENDEDPRICE'] == 2808.6889709125758) | (lineitem['DISCOUNT'] != 0.003655224935607926)].merge(orders.merge(customer[(customer['C_NATIONKEY'] != 20) | (customer['C_CUSTKEY'] > 71) & (customer['C_ADDRESS'].str.startswith('o')) & (customer['C_CUSTKEY'] > 16) | (customer['C_ACCTBAL'] == 12.441306716098097) | (customer['C_ACCTBAL'] != 7098.232108912693) | (customer['C_CUSTKEY'] <= 50) | (customer['C_ACCTBAL'] < 8741.09018420571)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] == 22)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] > 190495) | (lineitem['L_SUPPKEY'] != 2311) & (lineitem['EXTENDEDPRICE'] != 17725.251456590566) | (lineitem['L_ORDERKEY'] == 93) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINENUMBER'] != 5) | (lineitem['TAX'] == 0.026173924299351434) | (lineitem['DISCOUNT'] == 0.051327123282608134) & (lineitem['L_PARTKEY'] > 13099)][['L_PARTKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'RECEIPTDATE', 'QUANTITY', 'TAX', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp.merge(part[(part['P_NAME'].str.startswith('lem')) | (part['P_NAME'] != 'bis') & (part['SIZE'] >= 34)][['CONTAINER', 'P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] >= 192446) | (lineitem['QUANTITY'] != 22) | (lineitem['L_PARTKEY'] > 145487) & (lineitem['L_ORDERKEY'] != 55)][['LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_COMMENT', 'L_SUPPKEY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 955) & (partsupp['P_COMMENT'] == 'f') | (partsupp['P_COMMENT'] != 'k') & (partsupp['SUPPLYCOST'] >= 706.6871222905479) | (partsupp['P_COMMENT'].str.startswith('.'))].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 13) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_PARTKEY'] <= 42268) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['TAX'] == 0.021400323487673935) & (lineitem['DISCOUNT'] == 0.024060772353561966)][['TAX', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'SHIPDATE', 'COMMITDATE', 'L_PARTKEY', 'L_COMMENT', 'SHIPMODE', 'DISCOUNT', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 266.2153082559759) | (partsupp['AVAILQTY'] == 8696) | (partsupp['P_COMMENT'] != 'h') & (partsupp['P_COMMENT'] != '.')].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_COMMENT'] == '.') & (lineitem['EXTENDEDPRICE'] >= 15515.868604257057) | (lineitem['RECEIPTDATE'] != '1992-05-02')][['DISCOUNT', 'L_ORDERKEY', 'COMMITDATE', 'QUANTITY', 'LINENUMBER', 'L_COMMENT', 'RECEIPTDATE']].merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] <= 0)].merge(customer[(customer['C_NATIONKEY'] < 5)][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'FOB')][['SHIPDATE', 'L_PARTKEY', 'SHIPMODE', 'QUANTITY', 'TAX', 'L_COMMENT', 'COMMITDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5871) & (partsupp['AVAILQTY'] == 6280) | (partsupp['PS_PARTKEY'] != 15) & (partsupp['PS_SUPPKEY'] <= 4903)].merge(supplier[(supplier['S_SUPPKEY'] <= 168)].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] != 8) | (nation['N_COMMENT'] != 'i') & (nation['N_NAME'] != 'G')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY', 'LINENUMBER', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

lineitem[['LINESTATUS', 'L_COMMENT', 'QUANTITY', 'TAX', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'RETURNFLAG']].merge(orders[(orders['ORDERSTATUS'] != 'F') & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] != 'egu') & (orders['O_CUSTKEY'] < 47862) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 350907.63346791675)][['O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] >= 21) | (customer['C_ADDRESS'] == 'U') & (customer['C_NATIONKEY'] < 11) | (customer['C_NATIONKEY'] != 11) & (customer['C_NATIONKEY'] > 3) | (customer['MKTSEGMENT'] != 'BUILDING')][['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'TAX', 'COMMITDATE']].merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 8020.660067774366) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] <= 21) | (customer['C_ADDRESS'] != 'j')][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] > 7) & (nation['N_NATIONKEY'] >= 10)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPDATE', 'TAX', 'RECEIPTDATE', 'DISCOUNT', 'LINESTATUS', 'COMMITDATE', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5204)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '28-')][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('v'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_SUPPKEY'] >= 156)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 17) | (nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME']).agg('count')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] < 142572) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] <= 138157.49862733475) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '3-MEDIUM', '5-LOW']))][['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] == 6892.721953753325) | (customer['C_CUSTKEY'] == 53) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] < 6442.316494478803) | (customer['C_ADDRESS'] == '0')][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['SHIPPRIORITY'] <= 0)][['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] > 367) | (orders['O_COMMENT'] != 'x') | (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] == 173668.19961459862) | (orders['ORDERDATE'] == '1992-01-13')].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 148278) | (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH', '5-LOW', '1-URGENT'])) & (orders['ORDERSTATUS'] == 'O')][['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] > 1123.5522475256014) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NATIONKEY'] <= 4) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] <= 3857.082927691049)][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('i')) & (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 648)].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] > 860.6308310068555) | (customer['C_ADDRESS'].str.startswith('v')) | (customer['C_NATIONKEY'] >= 10) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 71) & (customer['C_NATIONKEY'] == 20) & (customer['C_NATIONKEY'] > 22)].merge(nation[(nation['N_NAME'] == 'S')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 314296.0395485233) & (orders['TOTALPRICE'] != 108523.27871229904) & (orders['O_CUSTKEY'] <= 72614) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) & (orders['TOTALPRICE'] > 322864.8748565441) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_CUSTKEY'] != 48405) | (orders['SHIPPRIORITY'] < 0)][['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] > 54) & (customer['C_NATIONKEY'] != 14) & (customer['C_COMMENT'] == 'g') | (customer['C_CUSTKEY'] != 1) & (customer['C_ACCTBAL'] > 4497.533130978553) & (customer['C_PHONE'] != '2')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_COMMENT'] == 'q') & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) & (customer['C_ADDRESS'] == 'n') | (customer['C_PHONE'] == '22-')][['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'] == ' ')].merge(region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 23) & (nation['N_NATIONKEY'] >= 18) & (nation['N_NAME'] == 'V')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] != 4781.784219500384) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] >= 16) & (customer['C_PHONE'] != '3')][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'] == 'J') | (nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 2764) | (partsupp['AVAILQTY'] != 8183) | (partsupp['P_COMMENT'] != 'j')][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'AME') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 2964) & (partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['P_COMMENT'] == 'u') | (partsupp['P_COMMENT'] != 'the')].merge(supplier[(supplier['S_COMMENT'] == 'w') & (supplier['S_NATIONKEY'] < 23) & (supplier['S_COMMENT'] == 'f') | (supplier['S_SUPPKEY'] != 193) & (supplier['S_ACCTBAL'] < -363.0561154913962) & (supplier['S_NATIONKEY'] != 14) | (supplier['S_COMMENT'] != 'al ')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 9096.960980787993) & (supplier['S_COMMENT'] != 'al ') & (supplier['S_NATIONKEY'] != 7) & (supplier['S_SUPPKEY'] != 110) | (supplier['S_SUPPKEY'] >= 73) & (supplier['S_PHONE'] != '28-') | (supplier['S_ACCTBAL'] == 2150.517768641974)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] > 16) | (supplier['S_SUPPKEY'] <= 187) | (supplier['S_SUPPKEY'] <= 138) & (supplier['S_SUPPKEY'] == 91) | (supplier['S_COMMENT'] != '!') | (supplier['S_COMMENT'] != 'q') & (supplier['S_PHONE'].str.startswith('1'))][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'V')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 3329) | (partsupp['P_COMMENT'] != 'h')][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.026244210857414685) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['LINENUMBER'] == 4) | (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['L_PARTKEY'] != 72910) | (lineitem['L_COMMENT'] != 'o') | (lineitem['L_ORDERKEY'] > 100)].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 6522.679278639) & (supplier['S_COMMENT'] != 'x') & (supplier['S_ADDRESS'] == 'B') | (supplier['S_NATIONKEY'] <= 12) | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_COMMENT'].str.startswith('a'))].merge(nation[(nation['N_NATIONKEY'] < 23) & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 1)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['QUANTITY'] > 11) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_SUPPKEY'] > 6867) & (lineitem['L_SUPPKEY'] > 2617)][['COMMITDATE', 'SHIPDATE', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] < 9) & (partsupp['AVAILQTY'] <= 9620) | (partsupp['P_COMMENT'] == 'x') & (partsupp['AVAILQTY'] <= 5009) | (partsupp['SUPPLYCOST'] <= 385.85108152838006)].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['L_SUPPKEY'] != 2738) & (lineitem['TAX'] != 0.01759916449907287) & (lineitem['L_ORDERKEY'] == 128) | (lineitem['DISCOUNT'] == 0.011823862889565785) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['EXTENDEDPRICE'] <= 72775.44325353681)][['L_PARTKEY', 'L_SUPPKEY', 'COMMITDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY', 'LINENUMBER']].merge(partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['PS_PARTKEY'] != 3) & (partsupp['PS_PARTKEY'] < 17) & (partsupp['P_COMMENT'] == 'y')].merge(part[(part['PT_COMMENT'].str.startswith('q')) & (part['SIZE'] == 29) & (part['P_NAME'] != 'g') | (part['P_NAME'] == 'd')][['P_PARTKEY', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['TAX'] <= 0.07707588726000462)][['QUANTITY', 'DISCOUNT', 'L_SUPPKEY', 'SHIPDATE', 'L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 27) & (partsupp['P_COMMENT'] != 'p') & (partsupp['PS_PARTKEY'] == 4)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['COMMITDATE'] >= '1992-05-15')][['SHIPDATE', 'L_SUPPKEY', 'COMMITDATE', 'TAX', 'SHIPMODE', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 6055) & (partsupp['AVAILQTY'] <= 2661)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['RETURNFLAG'] == 'R') & (lineitem['RETURNFLAG'].isin(['A', 'N'])) & (lineitem['LINENUMBER'] > 4)][['L_SUPPKEY', 'COMMITDATE', 'DISCOUNT', 'L_ORDERKEY']].merge(orders[(orders['O_CUSTKEY'] <= 7299) | (orders['TOTALPRICE'] > 16968.312718941415) & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_COMMENT'].str.startswith('uri')) | (orders['TOTALPRICE'] <= 95115.41677416982) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'TAX', 'L_SUPPKEY', 'LINENUMBER']].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem[['QUANTITY', 'COMMITDATE', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] < 939.8334770161031) | (partsupp['PS_SUPPKEY'] >= 6714) & (partsupp['PS_PARTKEY'] >= 31)].merge(part[(part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] == 'g') | (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] <= 62) | (part['BRAND'] == 'Brand#34') | (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'].isin(['Brand#51', 'Brand#54', 'Brand#35', 'Brand#34', 'Brand#44', 'Brand#23', 'Brand#24', 'Brand#42', 'Brand#31', 'Brand#25', 'Brand#43', 'Brand#14', 'Brand#33', 'Brand#21', 'Brand#45', 'Brand#15', 'Brand#53'])) & (part['TYPE'].str.startswith('STA')) & (part['TYPE'].str.startswith('SMA'))][['P_PARTKEY', 'BRAND', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'BRAND', 'P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[['TAX', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'QUANTITY', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['PS_PARTKEY'] <= 32)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 'g') | (supplier['S_PHONE'] == '14-') | (supplier['S_COMMENT'] != 'w') & (supplier['S_ADDRESS'] != 'p') & (supplier['S_COMMENT'] == 'l') & (supplier['S_ACCTBAL'] != 9434.499927774667) & (supplier['S_ADDRESS'] != 'Q')][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[(customer['C_PHONE'] == '22-') & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 3) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'c') & (customer['C_ACCTBAL'] < 4974.216950288574)][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] <= 74769) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] < 761) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '5-LOW']))][['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] < 0)][['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] < 9) & (nation['N_NATIONKEY'] > 21)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['O_ORDERKEY'] >= 47) & (orders['O_CUSTKEY'] <= 60837) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 46855.0690767901) | (orders['SHIPPRIORITY'] == 0)][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW'])) & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] < 730) | (orders['TOTALPRICE'] != 307138.42886991974) | (orders['O_CUSTKEY'] < 88356) & (orders['O_CUSTKEY'] <= 10022) | (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] != 'C')][['TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] > 79) & (customer['C_NATIONKEY'] != 19) & (customer['C_ADDRESS'] == 'w') | (customer['C_NATIONKEY'] > 0) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('25-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 712) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_CUSTKEY'] >= 90518) | (orders['TOTALPRICE'] == 314306.23094470194)][['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 4229) & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 213831.41161805976) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))][['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_ACCTBAL'] != 7460.033409795837) & (customer['C_COMMENT'].str.startswith('k')) & (customer['C_CUSTKEY'] > 2) & (customer['C_ADDRESS'] == 'E') & (customer['C_NATIONKEY'] == 8)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 198391.41161441142) & (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] < 234434.5507615072) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '5-LOW', '1-URGENT']))][['SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] >= 56) & (customer['C_CUSTKEY'] < 51) | (customer['C_ACCTBAL'] == 2721.0035920441715) & (customer['C_ACCTBAL'] > 2544.912845074689) & (customer['C_ACCTBAL'] != 3414.0366561002256) & (customer['C_ACCTBAL'] != 5118.375583028358)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] > 25847.837030599658) & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] != 102383) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] < 76) | (orders['TOTALPRICE'] < 173215.75055239093)].merge(customer[(customer['C_COMMENT'] != '.') & (customer['C_CUSTKEY'] >= 33) | (customer['C_PHONE'] != '27-')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] != 't') | (nation['N_COMMENT'] != 'l')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] >= 5877.418210819843) & (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_ADDRESS'].str.startswith('L')) | (customer['C_NATIONKEY'] <= 1) | (customer['C_PHONE'] != '27-')][['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] >= 11)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] != 'r') | (customer['C_ACCTBAL'] >= 2810.3697160379215) & (customer['C_CUSTKEY'] > 95) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE']))][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'S') & (nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] > 14)].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_CUSTKEY'] == 31) & (customer['C_CUSTKEY'] < 96)][['C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] >= 3) | (nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('s'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 49) & (partsupp['SUPPLYCOST'] <= 282.71849495286205) | (partsupp['SUPPLYCOST'] != 964.6182406700533) | (partsupp['SUPPLYCOST'] > 354.1327951427061) | (partsupp['P_COMMENT'] == ' ')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] <= 4) & (supplier['S_SUPPKEY'] == 192) & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'] == 'l')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] == 6054.57220128859) & (customer['C_NATIONKEY'] > 12) | (customer['C_CUSTKEY'] <= 97) | (customer['C_ACCTBAL'] > 7829.974278521453) | (customer['C_NATIONKEY'] == 11) | (customer['C_NATIONKEY'] < 6)][['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] >= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON'])) & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_ORDERKEY'] <= 50) | (lineitem['QUANTITY'] < 28) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON']))][['RECEIPTDATE', 'L_SUPPKEY', 'LINESTATUS', 'L_PARTKEY', 'QUANTITY', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] == 'M') | (customer['C_NATIONKEY'] == 16) & (customer['C_ACCTBAL'] >= 2171.1259791191324)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['RECEIPTDATE'] > '1998-11-06')][['RECEIPTDATE', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'L_SUPPKEY', 'DISCOUNT']].merge(orders[(orders['TOTALPRICE'] == 33514.589786978766) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'].str.startswith('ly ')) & (orders['TOTALPRICE'] <= 165350.14384722998)].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['L_ORDERKEY'] <= 110) | (lineitem['DISCOUNT'] <= 0.003289787060021321) & (lineitem['L_PARTKEY'] > 93662) | (lineitem['QUANTITY'] >= 42) & (lineitem['L_SUPPKEY'] <= 5743) & (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['TAX'] >= 0.04348139242115433) & (lineitem['L_COMMENT'] != 'p') & (lineitem['DISCOUNT'] >= 0.08038062536423081)].merge(orders[(orders['O_CUSTKEY'] == 10592) & (orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] != 118298.86825328895) | (orders['TOTALPRICE'] < 139498.967997854) & (orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['LINENUMBER'] == 5) & (lineitem['LINENUMBER'] >= 4) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['TAX'] >= 0.0034756561148320307) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['L_COMMENT'].str.startswith('s'))][['L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'LINESTATUS', 'DISCOUNT', 'SHIPMODE']].merge(orders[(orders['O_COMMENT'].str.startswith('the')) | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'] == 'y') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 140651) & (orders['O_ORDERKEY'] != 527) | (orders['O_ORDERKEY'] == 518)][['O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) & (lineitem['L_SUPPKEY'] == 3328) & (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] <= 71379.48612429295) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPDATE'] <= '1992-04-27')][['L_PARTKEY', 'DISCOUNT', 'TAX', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 7187.441108713949) | (supplier['S_SUPPKEY'] > 21) | (supplier['S_PHONE'] == '17-') | (supplier['S_ACCTBAL'] > 1406.8587502603852) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_COMMENT'] != 'e')].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] != 2) | (nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 62370) & (orders['O_COMMENT'].str.startswith(' ')) & (orders['O_CUSTKEY'] <= 70157) | (orders['ORDERSTATUS'].isin(['P']))][['O_COMMENT', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'].str.startswith('.')) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_COMMENT'] == 'n')][['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']].merge(customer[(customer['C_ACCTBAL'] <= 8640.324633452077) & (customer['C_COMMENT'] != 'n') & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 4) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 6566.81521408705) & (customer['C_CUSTKEY'] != 55) | (customer['C_CUSTKEY'] < 24)].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_ORDERKEY'] < 411) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] > 39368.158305590376) | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 347) & (orders['O_CUSTKEY'] > 64122) & (orders['O_COMMENT'] != 'n')][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] >= 4) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '27-') & (customer['C_COMMENT'] == ' ') | (customer['C_ACCTBAL'] < 6660.2089591352715) & (customer['C_CUSTKEY'] == 62) | (customer['C_CUSTKEY'] <= 87) & (customer['C_ACCTBAL'] >= 354.67850040018584)].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NAME'] == 'G') | (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 107085) & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] < 127835) & (orders['TOTALPRICE'] > 28365.842288582855) & (orders['O_CUSTKEY'] < 124978) | (orders['ORDERSTATUS'] == 'F')][['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] == 'g') & (customer['C_CUSTKEY'] > 81) | (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith('w')) & (customer['C_PHONE'] == '1')][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 221) & (orders['TOTALPRICE'] <= 136783.29991226937) & (orders['O_CUSTKEY'] > 62847) | (orders['O_CUSTKEY'] != 61365) | (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] >= 175598.1258536217) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_PHONE'] != '25-')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 537) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))][['O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 10)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_COMMENT'] != 's') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] == 173649.94882109558) & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERDATE'] == '1998-07-21')][['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_NATIONKEY'] <= 16) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] != 21) | (customer['C_ADDRESS'] == 'w') | (customer['C_COMMENT'] == ',') & (customer['C_COMMENT'] == 'i')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 860) & (partsupp['PS_SUPPKEY'] >= 3966)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] >= 6) | (supplier['S_SUPPKEY'] > 180) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4428) & (partsupp['SUPPLYCOST'] >= 682.9566652147311)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] <= 15) & (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 'o')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['TAX'] <= 0.07074043087596389) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_PARTKEY'] == 142200) | (lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['SUPPLYCOST'] > 845.3626229705792) | (partsupp['SUPPLYCOST'] == 978.3734281725866) & (partsupp['AVAILQTY'] != 8912) & (partsupp['AVAILQTY'] <= 7868)].merge(part[(part['RETAILPRICE'] > 906.2930271796248) | (part['P_PARTKEY'] < 35) & (part['RETAILPRICE'] > 993.784474139686) & (part['P_PARTKEY'] < 50) & (part['RETAILPRICE'] >= 915.2714574948833) & (part['RETAILPRICE'] > 972.8093894762758) | (part['TYPE'].str.startswith('P'))][['RETAILPRICE', 'BRAND', 'MFGR', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_SUPPKEY'] <= 5085) & (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['L_PARTKEY'] > 93438)].merge(orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] == 138786.29285996227) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] != 426) & (orders['O_ORDERKEY'] == 545) & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_ACCTBAL'] > 4986.817409492787) | (customer['C_PHONE'] == '27-') & (customer['C_COMMENT'] == 'f') & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == ',') & (customer['C_PHONE'] == '3')][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['QUANTITY'] >= 49) & (lineitem['DISCOUNT'] > 0.0007733087995789979) | (lineitem['SHIPDATE'] >= '1998-10-30')][['QUANTITY', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 10) & (partsupp['PS_SUPPKEY'] >= 2581)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] >= 6)][['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] == '-') | (orders['O_ORDERKEY'] < 218) | (orders['TOTALPRICE'] < 54308.37099617582) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] < 548) & (orders['ORDERDATE'] == '1998-07-21') & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] > 0)][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '25-') | (customer['C_COMMENT'] != 'g')].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] == 'l')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 49) | (partsupp['AVAILQTY'] < 7649) & (partsupp['PS_PARTKEY'] >= 46) | (partsupp['SUPPLYCOST'] <= 161.95832164254944)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '14-') | (supplier['S_PHONE'].str.startswith('1'))][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != ' ca') | (lineitem['EXTENDEDPRICE'] >= 73141.8821851378) & (lineitem['DISCOUNT'] < 0.07858028961794503) & (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['TAX'] < 0.02845868438457984) | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINESTATUS'] != 'O')][['L_PARTKEY', 'LINESTATUS', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['P_COMMENT'] != 'are') | (partsupp['AVAILQTY'] > 6911) | (partsupp['PS_SUPPKEY'] < 330) | (partsupp['P_COMMENT'].str.startswith('b'))].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] < 5674.425712939402) | (supplier['S_NATIONKEY'] >= 13) | (supplier['S_NATIONKEY'] <= 4) | (supplier['S_ADDRESS'] != 'I')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 11) & (lineitem['L_COMMENT'] != 'r') & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_PARTKEY'] <= 178303) | (lineitem['L_SUPPKEY'] >= 3974) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_SUPPKEY'] != 6358) & (lineitem['L_ORDERKEY'] != 138) & (lineitem['LINESTATUS'].isin(['F']))].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 7227.518208296878) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 109) & (supplier['S_ACCTBAL'] > 7054.381436944375) | (supplier['S_PHONE'] == '17-') & (supplier['S_NATIONKEY'] == 20) & (supplier['S_PHONE'] != '32-')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'] == 'ly ') & (lineitem['LINESTATUS'] != 'O') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['DISCOUNT'] >= 0.022276034303241755) & (lineitem['LINESTATUS'] != 'F') | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_COMMENT'] == 'f')].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERDATE'] == '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] < 86)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] <= 18) & (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem[(lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['LINESTATUS'] == 'O') & (lineitem['TAX'] == 0.07896937695338141) | (lineitem['EXTENDEDPRICE'] > 39151.45225671805) | (lineitem['EXTENDEDPRICE'] != 75093.47643345337) & (lineitem['TAX'] >= 0.013652756818681349)].merge(partsupp[(partsupp['AVAILQTY'] == 2231) | (partsupp['PS_PARTKEY'] > 10) | (partsupp['SUPPLYCOST'] == 511.74869113474745) | (partsupp['PS_SUPPKEY'] >= 4835)].merge(supplier[(supplier['S_ACCTBAL'] > 1007.0633842194145) & (supplier['S_ADDRESS'] == 'e')].merge(nation[(nation['N_NATIONKEY'] == 0) & (nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.004533956029391657) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['RETURNFLAG'] == 'N') & (lineitem['RETURNFLAG'].isin(['R', 'N'])) | (lineitem['EXTENDEDPRICE'] >= 44192.669966595866) & (lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['DISCOUNT'] > 0.029642776086700198)].merge(orders[(orders['O_COMMENT'] != 'b') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '5-LOW', '2-HIGH'])) | (orders['O_ORDERKEY'] <= 354) & (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_CUSTKEY'] != 20)][['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_NAME'] != 'A')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['TOTALPRICE'] > 327765.7612489221) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_COMMENT'].str.startswith('y'))][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] < 37883.62286004297)][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] == 18) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] == 'n') & (customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] == 'K') & (customer['C_CUSTKEY'] >= 1)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 7989) | (lineitem['LINENUMBER'] != 4) & (lineitem['DISCOUNT'] > 0.019180559188067783) | (lineitem['DISCOUNT'] == 0.033672487076352876) | (lineitem['L_ORDERKEY'] != 91) & (lineitem['L_SUPPKEY'] > 4795) & (lineitem['L_SUPPKEY'] > 7037)][['QUANTITY', 'DISCOUNT', 'RETURNFLAG', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'LINENUMBER', 'LINESTATUS', 'L_SUPPKEY']].merge(orders[['ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.04914412986517523) | (lineitem['LINENUMBER'] != 6) | (lineitem['L_ORDERKEY'] == 78) | (lineitem['L_ORDERKEY'] <= 64) & (lineitem['L_ORDERKEY'] > 90) | (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['TAX'] >= 0.07358344169705792) & (lineitem['TAX'] > 0.021365529538942118)][['SHIPINSTRUCT', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 27) | (partsupp['SUPPLYCOST'] == 956.087555774379) & (partsupp['AVAILQTY'] == 2997) & (partsupp['SUPPLYCOST'] < 398.6102100048642)].merge(supplier[(supplier['S_COMMENT'] == 'x') | (supplier['S_ADDRESS'].str.startswith('g')) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('r'))].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] >= 0.01069625469494027) | (lineitem['L_ORDERKEY'] < 191) & (lineitem['LINENUMBER'] < 3) & (lineitem['TAX'] > 0.04127716135036289) | (lineitem['L_COMMENT'] == 'a') | (lineitem['EXTENDEDPRICE'] > 30475.307796620284) | (lineitem['L_PARTKEY'] >= 155664) | (lineitem['TAX'] <= 0.011569199521499342) & (lineitem['L_COMMENT'].str.startswith('v')) | (lineitem['SHIPDATE'] == '1998-10-30')][['TAX', 'LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'DISCOUNT']].merge(orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '2-HIGH'])) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_ORDERKEY'] >= 739) | (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C')].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_COMMENT'] == 'e') & (customer['C_CUSTKEY'] >= 17) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C')][['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'RETURNFLAG', 'L_SUPPKEY', 'TAX', 'L_ORDERKEY', 'LINESTATUS', 'QUANTITY', 'EXTENDEDPRICE', 'LINENUMBER']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 34) | (partsupp['SUPPLYCOST'] >= 37.919899817425375) | (partsupp['SUPPLYCOST'] == 868.4741181978179) & (partsupp['P_COMMENT'] != 'j') & (partsupp['PS_SUPPKEY'] < 3343)].merge(supplier[(supplier['S_SUPPKEY'] < 192) | (supplier['S_ACCTBAL'] > -472.6609938082369)][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('count')

lineitem[['SHIPMODE', 'L_COMMENT', 'LINESTATUS', 'QUANTITY', 'TAX', 'DISCOUNT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'RETURNFLAG']].merge(orders[(orders['O_CUSTKEY'] >= 10895) | (orders['O_CUSTKEY'] >= 31506) & (orders['O_CUSTKEY'] > 135359) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_ORDERKEY'] != 165) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] > 9)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == 'o') & (orders['O_CUSTKEY'] <= 85494) & (orders['TOTALPRICE'] == 31270.892419159434) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 's') | (customer['C_NATIONKEY'] > 3) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'].str.startswith('.'))].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != 'h')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_COMMENT'] == 'j') & (orders['O_COMMENT'] != 'q') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED'])) | (orders['O_CUSTKEY'] == 62488)][['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 96) & (customer['C_CUSTKEY'] < 38) & (customer['C_PHONE'] != '27-') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] > 3472.646010864414) | (customer['C_NATIONKEY'] < 13) & (customer['C_ADDRESS'] != 'o')].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 0) & (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] > 110626.5866293703) | (orders['O_COMMENT'].str.startswith('uri')) & (orders['O_COMMENT'] != 'x') & (orders['O_COMMENT'] != 'y') | (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] > 129356.20119951587)].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_CUSTKEY'] != 45) | (customer['C_ACCTBAL'] != 4394.182310772954) | (customer['C_PHONE'] == '2') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('u'))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] != 13) & (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 99316) | (orders['TOTALPRICE'] != 184665.7481725531) | (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] < 773) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] > '1998-07-21')][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'a') | (customer['C_ACCTBAL'] != 4636.754310466772) & (customer['C_NATIONKEY'] < 17) | (customer['C_PHONE'] == '2')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 118) | (orders['O_ORDERKEY'] <= 152) | (orders['O_ORDERKEY'] <= 507) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('7')) & (customer['C_CUSTKEY'] != 45)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 4) & (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['L_ORDERKEY'] == 16)].merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_COMMENT'] != 'u') | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] < 435.64867822691986) | (customer['C_ADDRESS'].str.startswith('3')) | (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE']))][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['LINENUMBER'] > 4) & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['L_COMMENT'] == '-') & (lineitem['L_SUPPKEY'] == 4885) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['TAX'] <= 0.07709249554675822) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_COMMENT'] != 'k') & (lineitem['SHIPMODE'] != 'REG AIR')][['RECEIPTDATE', 'L_COMMENT', 'COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'L_SUPPKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 5)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_SUPPKEY'] <= 72) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'SHIP', 'AIR', 'TRUCK', 'MAIL'])) & (lineitem['LINESTATUS'] == 'F') & (lineitem['LINESTATUS'] == 'O') & (lineitem['LINENUMBER'] != 6) & (lineitem['EXTENDEDPRICE'] > 2776.567246813329) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RECEIPTDATE'] > '1998-11-06')][['DISCOUNT', 'RETURNFLAG', 'SHIPDATE', 'SHIPMODE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER']].merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '2-HIGH', '3-MEDIUM', '1-URGENT'])) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '2-HIGH', '4-NOT SPECIFIED'])) & (orders['TOTALPRICE'] >= 148798.5961029198) & (orders['TOTALPRICE'] > 78650.286978462) | (orders['O_COMMENT'].str.startswith('.'))].merge(customer[(customer['C_ADDRESS'] == 'j') & (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_NATIONKEY'] < 15) & (customer['C_NAME'].str.startswith('C'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['DISCOUNT'] == 0.07052018898589087) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_PARTKEY'] > 163987) & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['LINENUMBER'] != 2) & (lineitem['L_SUPPKEY'] <= 7134) | (lineitem['EXTENDEDPRICE'] < 7557.155741827799) & (lineitem['SHIPDATE'] != '1992-04-27')][['COMMITDATE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'DISCOUNT', 'TAX', 'LINENUMBER', 'SHIPMODE', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 6674.8183164643515) | (supplier['S_PHONE'] != '3') & (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 15)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] < 275) | (orders['ORDERSTATUS'].isin(['O']))][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 2) | (nation['N_NATIONKEY'] > 18)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 4) | (lineitem['L_SUPPKEY'] > 2204) | (lineitem['EXTENDEDPRICE'] < 24532.4412162261) | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_SUPPKEY'] > 7609) & (lineitem['QUANTITY'] == 42) & (lineitem['DISCOUNT'] == 0.019397340666204313) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_COMMENT'] == 'y')][['L_COMMENT', 'DISCOUNT', 'RECEIPTDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] != 948.0907515991235) | (partsupp['PS_SUPPKEY'] != 3555) & (partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] == 'k')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] < 2) & (lineitem['L_ORDERKEY'] > 177) & (lineitem['RETURNFLAG'].isin(['A', 'N']))][['DISCOUNT', 'RETURNFLAG', 'SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'LINESTATUS']].merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] != 'I') | (nation['N_COMMENT'] == 't')].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'DISCOUNT', 'L_COMMENT', 'LINENUMBER', 'SHIPMODE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['P_COMMENT'] == ';') | (partsupp['PS_SUPPKEY'] > 4763) & (partsupp['PS_SUPPKEY'] > 5491) & (partsupp['PS_SUPPKEY'] >= 6349) & (partsupp['P_COMMENT'] != 'f')][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('I')) | (supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] > -459.93518046356763) | (supplier['S_COMMENT'] == 'x') & (supplier['S_NATIONKEY'] < 6)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.05037461032022294) & (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['L_SUPPKEY'] > 8198) | (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp[(partsupp['PS_SUPPKEY'] < 3983)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 13) & (supplier['S_ADDRESS'].str.startswith('E')) & (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] < 2309.6207307303775) & (supplier['S_COMMENT'] == 'q') | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 0)].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['LINENUMBER'] != 1) & (lineitem['QUANTITY'] > 38) | (lineitem['DISCOUNT'] <= 0.02193514274959594) & (lineitem['L_ORDERKEY'] <= 41) & (lineitem['L_ORDERKEY'] >= 64) | (lineitem['L_SUPPKEY'] < 7465) | (lineitem['LINENUMBER'] > 4) & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['COMMITDATE'] == '1998-10-16')].merge(orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_COMMENT'] != 'a') | (orders['O_ORDERKEY'] >= 315) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) & (orders['O_COMMENT'].str.startswith('a')) & (orders['TOTALPRICE'] == 198946.38810904112) | (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_ADDRESS'] == 'P') | (customer['C_NATIONKEY'] == 11) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith(' ')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_ADDRESS'] == 'v') | (customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NATIONKEY'] == 19) & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('G'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] != 165) | (lineitem['DISCOUNT'] != 0.06138654173695614) | (lineitem['EXTENDEDPRICE'] < 34758.36423543852) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_ORDERKEY'] > 47) | (lineitem['SHIPMODE'] == 'REG AIR')].merge(orders[(orders['TOTALPRICE'] < 224361.69931338853) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) & (orders['ORDERSTATUS'] != 'F') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] != 139772) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['TOTALPRICE'] == 307701.86259276595)].merge(customer[(customer['C_COMMENT'] != 'w') | (customer['C_NATIONKEY'] >= 3) | (customer['C_NATIONKEY'] != 13) | (customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] == 79) & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 11) | (customer['C_COMMENT'].str.startswith('w'))].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] != 7) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_PARTKEY'] != 33123) | (lineitem['DISCOUNT'] == 0.05180355629764393) & (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['DISCOUNT'] > 0.023858571202085954) & (lineitem['RETURNFLAG'] != 'R')][['SHIPDATE', 'SHIPMODE', 'QUANTITY', 'TAX', 'LINENUMBER', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'RETURNFLAG']].merge(orders[(orders['O_COMMENT'].str.startswith('egu')) & (orders['O_ORDERKEY'] > 434) & (orders['O_COMMENT'] == 'z') & (orders['O_COMMENT'].str.startswith('i')) & (orders['O_CUSTKEY'] <= 138806) | (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] != 326798.02074497135)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.033490662887250146) & (lineitem['L_SUPPKEY'] == 8927)][['L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'COMMITDATE']].merge(orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'].str.startswith('j')) & (orders['O_COMMENT'].str.startswith('i')) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_ADDRESS'] == 'U') | (customer['C_ACCTBAL'] < 8504.992880206008) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 423.7979418050634)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 14008) & (orders['O_ORDERKEY'] <= 798) | (orders['TOTALPRICE'] < 267639.57652431994) & (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERDATE'] == '1992-01-13')][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ACCTBAL'] == 9052.300258117146) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 4) & (customer['C_ACCTBAL'] > 2921.088200205052) & (customer['C_CUSTKEY'] >= 26) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '1')][['C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4809)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_SUPPKEY'] > 121) & (supplier['S_SUPPKEY'] > 6) | (supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_COMMENT'] != 'r')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 12) & (nation['N_NATIONKEY'] > 7) | (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['LINENUMBER'] <= 6) & (lineitem['SHIPDATE'] == '1998-10-30')][['L_ORDERKEY', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['SUPPLYCOST'] >= 774.1629227264714) | (partsupp['AVAILQTY'] > 5754) & (partsupp['AVAILQTY'] != 2411)].merge(part[(part['P_PARTKEY'] >= 108) & (part['P_NAME'].str.startswith('h')) & (part['TYPE'] == 'S') | (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'].isin(['Brand#12', 'Brand#33', 'Brand#22', 'Brand#31', 'Brand#11', 'Brand#23', 'Brand#53', 'Brand#35', 'Brand#32', 'Brand#52', 'Brand#42', 'Brand#24', 'Brand#13', 'Brand#55', 'Brand#34', 'Brand#44', 'Brand#51', 'Brand#41'])) & (part['BRAND'].isin(['Brand#22', 'Brand#51', 'Brand#14', 'Brand#54', 'Brand#15'])) | (part['RETAILPRICE'] < 1084.5853439162406) & (part['TYPE'] != 'S') | (part['CONTAINER'].str.startswith('WRAP'))][['CONTAINER', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

lineitem[(lineitem['L_COMMENT'] == 'd') & (lineitem['L_PARTKEY'] > 162346) & (lineitem['L_ORDERKEY'] != 8) | (lineitem['DISCOUNT'] != 0.07873998055793728) | (lineitem['LINESTATUS'] != 'O') & (lineitem['RETURNFLAG'].isin(['R', 'N'])) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_ORDERKEY'] != 19) | (lineitem['RETURNFLAG'].isin(['A', 'R', 'N']))][['L_ORDERKEY', 'RECEIPTDATE']].merge(orders[(orders['O_ORDERKEY'] >= 471) | (orders['O_CUSTKEY'] > 16845) | (orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] >= 17845.55160325813) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'] == 't') & (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] >= 145)][['O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_ORDERKEY'] > 86) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['LINENUMBER'] != 6) | (lineitem['LINENUMBER'] >= 6) | (lineitem['EXTENDEDPRICE'] > 78644.3152534147) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')][['L_COMMENT', 'QUANTITY', 'TAX', 'LINESTATUS', 'SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[['DISCOUNT', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPMODE', 'QUANTITY']].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] >= 7045.9141496962275) | (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ACCTBAL'] < 37.98792918693107) & (customer['C_NATIONKEY'] >= 0) & (customer['C_ACCTBAL'] > 7106.511446296053) & (customer['C_NATIONKEY'] >= 18) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_PHONE'].str.startswith('3'))][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_CUSTKEY'] == 146148) & (orders['O_ORDERKEY'] <= 571) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] > 168597.7425678565) | (orders['O_COMMENT'] == 'uri') & (orders['O_COMMENT'] == 'e') & (orders['ORDERDATE'] >= '1998-07-21')][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 8) & (customer['C_COMMENT'].str.startswith('.')) & (customer['C_COMMENT'].str.startswith('.')) & (customer['C_ACCTBAL'] == -112.96353288893602) | (customer['C_ACCTBAL'] > 8294.666112901314) | (customer['C_CUSTKEY'] <= 3)][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 23) & (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] < 759) | (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'] == 'the') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_ORDERKEY'] == 231) & (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] == 'C')][['CLERK', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 2) & (customer['C_ADDRESS'] == '6') | (customer['C_CUSTKEY'] == 73) & (customer['C_CUSTKEY'] >= 55) & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_COMMENT'] == 't')].merge(nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] == 9) & (customer['C_ACCTBAL'] >= 5626.578856164658) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'w') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] <= 6829.706219214938)][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] == 2) | (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] == 7) | (nation['N_NAME'] == 'U')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['QUANTITY'] < 38) & (lineitem['QUANTITY'] < 14) | (lineitem['TAX'] < 0.02247298319351173) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['DISCOUNT'] != 0.046707416970286166) & (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['QUANTITY'] != 31) & (lineitem['L_PARTKEY'] < 60828)][['L_COMMENT', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'COMMITDATE', 'DISCOUNT', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] == 616.268411555732) & (partsupp['PS_PARTKEY'] < 30) | (partsupp['AVAILQTY'] > 3157)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('U'))][['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'].str.startswith('v'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['RETURNFLAG'] == 'A') & (lineitem['EXTENDEDPRICE'] >= 72920.24971776766) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['L_COMMENT'] != 'h') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['LINENUMBER'] > 5)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5996) & (partsupp['P_COMMENT'] == 'i') & (partsupp['PS_SUPPKEY'] > 4389) & (partsupp['P_COMMENT'] == 'p') & (partsupp['SUPPLYCOST'] > 991.9696719902241)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] >= 188) | (supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_SUPPKEY'] <= 126)][['S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_NAME'] != 'E')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 3) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['O_CUSTKEY'] <= 135023) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] != 119072) & (orders['TOTALPRICE'] != 203739.48746882306) & (orders['O_CUSTKEY'] == 147584) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] == 'e') & (customer['C_NATIONKEY'] > 21) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NATIONKEY'] <= 3) | (customer['C_CUSTKEY'] <= 66)][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['TAX'] > 0.03520921939629399) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD'])) & (lineitem['L_PARTKEY'] != 140231) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['TAX'] > 0.06788387243642678) & (lineitem['COMMITDATE'] <= '1998-10-16')][['SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG', 'EXTENDEDPRICE']].merge(orders[(orders['O_ORDERKEY'] > 259) & (orders['O_CUSTKEY'] > 99184) & (orders['ORDERSTATUS'] != 'O') & (orders['O_CUSTKEY'] == 37959) | (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_ADDRESS'] != 'M') | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] == 22) | (customer['C_ACCTBAL'] != 1086.601394860245) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_NATIONKEY'] <= 8)][['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'L_COMMENT', 'LINESTATUS', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 763.7742202317705) | (partsupp['P_COMMENT'] != 'c') & (partsupp['SUPPLYCOST'] == 564.8072589409559) & (partsupp['PS_PARTKEY'] == 23)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('c')) & (supplier['S_SUPPKEY'] == 107) | (supplier['S_COMMENT'] != 'j') | (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_COMMENT'] != 'u') | (supplier['S_NATIONKEY'] > 22)].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('s'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] > 60363) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] > 179) | (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] != 15) & (nation['N_NATIONKEY'] < 17)].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['TOTALPRICE'] < 76885.88753343887) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] == 'z') & (orders['O_ORDERKEY'] <= 115) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['CLERK'] == 'C')][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] < 67) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('d')) & (customer['C_CUSTKEY'] == 57) & (customer['C_ADDRESS'].str.startswith('6'))][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] >= 8) | (customer['C_PHONE'] == '13-') & (customer['C_ACCTBAL'] <= 8021.480721346619) | (customer['C_COMMENT'] == 's') | (customer['C_COMMENT'] != 'k') | (customer['C_CUSTKEY'] < 40) & (customer['C_CUSTKEY'] > 17) & (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 22) | (nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] != 't')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 70181) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] <= 190882.29919823157) & (orders['TOTALPRICE'] <= 290023.3437557586) | (orders['O_COMMENT'] != 'l')][['ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] != 48) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_ACCTBAL'] > 3434.691628513401) | (customer['C_COMMENT'] != ' ') | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] < 376.1671837635979)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 7) & (nation['N_COMMENT'].str.startswith('e'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] <= 3783) & (orders['O_COMMENT'] != 'the') | (orders['O_CUSTKEY'] != 2935) & (orders['O_COMMENT'] == 'x')][['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] > 2355.4824097129704) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY'])) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < 3043.082471517107) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'g')].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 166) | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_SUPPKEY'] <= 1587) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['DISCOUNT'] != 0.09886710513728941) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['SHIPMODE'] == 'AIR') | (lineitem['RECEIPTDATE'] < '1992-05-02')].merge(partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['PS_SUPPKEY'] <= 1102) & (partsupp['PS_PARTKEY'] < 10) & (partsupp['PS_PARTKEY'] != 13)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 155) | (supplier['S_COMMENT'] == 'u') | (supplier['S_ADDRESS'] != 'G')][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'N'])) & (lineitem['DISCOUNT'] != 0.08855395075598138) | (lineitem['EXTENDEDPRICE'] > 40181.57435791436) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'TRUCK', 'REG AIR', 'RAIL', 'MAIL', 'AIR'])) | (lineitem['LINENUMBER'] <= 4)][['EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'RECEIPTDATE', 'L_SUPPKEY', 'RETURNFLAG', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4557)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ACCTBAL'] != 6316.271324504733) & (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.05829402530398051) & (lineitem['L_COMMENT'] == '-') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['LINESTATUS'].isin(['O']))][['RECEIPTDATE', 'L_ORDERKEY', 'L_COMMENT', 'DISCOUNT', 'SHIPDATE', 'QUANTITY', 'COMMITDATE']].merge(orders[(orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 603) | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['O_CUSTKEY'] <= 87976) | (orders['TOTALPRICE'] == 248172.04372166315) & (orders['ORDERSTATUS'] == 'F')][['ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] != 17)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['EXTENDEDPRICE'] != 62272.79433146138) & (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['LINENUMBER'] >= 1) | (lineitem['L_SUPPKEY'] <= 6511) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] == '1998-10-30')][['L_COMMENT', 'L_PARTKEY', 'RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'QUANTITY', 'EXTENDEDPRICE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'g') & (supplier['S_ACCTBAL'] != 1449.691592155072) & (supplier['S_ADDRESS'] != '7') & (supplier['S_SUPPKEY'] > 145) & (supplier['S_SUPPKEY'] != 51) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['TAX'] < 0.01980160790304357) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_PARTKEY'] <= 103274) | (lineitem['L_ORDERKEY'] == 27) & (lineitem['QUANTITY'] != 42) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['QUANTITY', 'L_COMMENT', 'SHIPMODE', 'SHIPDATE', 'L_PARTKEY', 'RETURNFLAG', 'TAX', 'L_SUPPKEY', 'LINENUMBER']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 43) | (supplier['S_SUPPKEY'] > 50) & (supplier['S_NATIONKEY'] >= 8) & (supplier['S_SUPPKEY'] < 41)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] <= 22) | (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['QUANTITY'] >= 13) & (lineitem['DISCOUNT'] <= 0.0031703726206883777) & (lineitem['LINENUMBER'] <= 1) & (lineitem['QUANTITY'] > 28) | (lineitem['LINENUMBER'] == 5) | (lineitem['DISCOUNT'] >= 0.015501701681428072) | (lineitem['QUANTITY'] >= 16) & (lineitem['L_SUPPKEY'] <= 5998) | (lineitem['SHIPMODE'] == 'REG AIR')][['L_ORDERKEY', 'COMMITDATE', 'LINESTATUS']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 646) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'].str.startswith('s')) | (orders['O_CUSTKEY'] <= 88651) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_COMMENT'].str.startswith('f')) | (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']].merge(customer[(customer['C_ADDRESS'] == 'X') | (customer['C_ADDRESS'].str.startswith('K')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] != 2816.1477059804142) | (customer['C_ACCTBAL'] != 672.1354894430046) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)