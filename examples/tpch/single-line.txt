customer

lineitem

lineitem

lineitem

nation

nation

nation

orders

orders

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

part

partsupp

partsupp

partsupp

partsupp

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

region

supplier

customer[['C_ACCTBAL']]

customer[['C_ADDRESS']]

lineitem[['DISCOUNT']]

lineitem[['LINENUMBER']]

lineitem[['L_COMMENT']]

nation[['N_COMMENT']]

nation[['N_COMMENT']]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NAME']]

nation[['N_NAME']]

nation[['N_REGIONKEY']]

orders[['O_ORDERKEY']]

orders[['SHIPPRIORITY']]

part[(part['BRAND'].isin(['Brand#45', 'Brand#42', 'Brand#41', 'Brand#34', 'Brand#32', 'Brand#51', 'Brand#31', 'Brand#11', 'Brand#15', 'Brand#13', 'Brand#35', 'Brand#22', 'Brand#21', 'Brand#55', 'Brand#43', 'Brand#54', 'Brand#23', 'Brand#44', 'Brand#53']))]

part[(part['SIZE'] < 30)]

part[['P_NAME']]

part[['P_NAME']]

part[['RETAILPRICE']]

partsupp[['P_COMMENT']]

partsupp[['P_COMMENT']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] != 3)]

region[(region['R_REGIONKEY'] < 2)]

region[(region['R_REGIONKEY'] <= 0)]

region[(region['R_REGIONKEY'] >= 2)]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[['S_PHONE']]

supplier[['S_PHONE']]

customer.groupby(by=['C_ACCTBAL']).agg('count')

customer.groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

customer.groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_COMMENT']]

customer[['C_PHONE', 'C_ADDRESS']]

customer[['MKTSEGMENT', 'C_ADDRESS']]

lineitem.groupby(by=['L_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('n')) | (lineitem['DISCOUNT'] >= 0.014915806086654626)]

lineitem[['COMMITDATE', 'SHIPDATE']]

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE']]

lineitem[['LINENUMBER', 'RECEIPTDATE']]

nation.groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] < 19)]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_COMMENT']]

orders[['CLERK', 'O_COMMENT']]

orders[['CLERK', 'O_CUSTKEY']]

part.groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['SIZE']).agg('count')

part.groupby(by=['SIZE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE']).agg('min', numeric_only=True)

part.groupby(by=['TYPE']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#42') & (part['P_NAME'] != 'blu')]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['BRAND'].isin(['Brand#21', 'Brand#45', 'Brand#34', 'Brand#44', 'Brand#53', 'Brand#33', 'Brand#43', 'Brand#54', 'Brand#41', 'Brand#12', 'Brand#15', 'Brand#22', 'Brand#32', 'Brand#51', 'Brand#25']))]

part[['PT_COMMENT', 'BRAND']]

part[['SIZE', 'BRAND']]

part[['SIZE', 'PT_COMMENT']]

partsupp.groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST']]

region.groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] != 2)]

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 2)]

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] <= 1)]

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] == 0)]

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] == 0)]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'AME')]

region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'h')]

region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'A')]

region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] > 1)]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_SUPPKEY']]

customer.groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_CUSTKEY']]

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE']]

customer[['C_PHONE', 'C_NAME', 'C_ADDRESS']]

lineitem[['LINESTATUS', 'DISCOUNT', 'EXTENDEDPRICE']]

lineitem[['LINESTATUS', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[['SHIPDATE', 'LINENUMBER', 'RETURNFLAG']]

lineitem[['TAX', 'RETURNFLAG', 'SHIPINSTRUCT']]

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']]

orders.groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'O_ORDERKEY']]

orders[['CLERK', 'O_ORDERKEY', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'CLERK', 'O_COMMENT']]

orders[['SHIPPRIORITY', 'CLERK', 'O_COMMENT']]

orders[['SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE']]

orders[['SHIPPRIORITY', 'TOTALPRICE', 'CLERK']]

part.groupby(by=['BRAND', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('count')

part.groupby(by=['SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('s')) | (part['RETAILPRICE'] < 1071.5946871431668)]

part[(part['P_PARTKEY'] < 171) | (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] != 'Brand#33')]

part[(part['TYPE'] != 'SMA') & (part['SIZE'] > 48) | (part['P_PARTKEY'] > 153)]

part[['BRAND', 'TYPE', 'MFGR']]

part[['P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR', 'RETAILPRICE']]

part[['RETAILPRICE', 'TYPE', 'MFGR']]

part[['TYPE', 'P_NAME', 'MFGR']]

partsupp.groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 1)]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('A'))]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('A'))]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] <= 3)]

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'h')]

region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 1)]

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] > 0)]

region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] <= 3)]

region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'A')]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']]

customer[['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE']]

lineitem[['LINESTATUS', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT']]

lineitem[['L_COMMENT', 'DISCOUNT', 'RECEIPTDATE', 'TAX']]

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']]

orders.groupby(by=['CLERK', 'ORDERSTATUS', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] > 122027) | (orders['SHIPPRIORITY'] > 0)]

orders[(orders['TOTALPRICE'] <= 132432.32800316563) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] < 0)]

orders[['CLERK', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']]

part.groupby(by=['MFGR', 'BRAND', 'CONTAINER']).agg('count')

part.groupby(by=['MFGR', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT']).agg('count')

part.groupby(by=['RETAILPRICE', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#2') | (part['RETAILPRICE'] != 1073.9914801766092) & (part['RETAILPRICE'] != 936.5390530015738) | (part['TYPE'] == 'E')]

part[(part['P_NAME'] == 'g') | (part['P_PARTKEY'] <= 17) | (part['RETAILPRICE'] >= 1015.1385024707466) & (part['P_NAME'] == 'b')]

part[['MFGR', 'RETAILPRICE', 'CONTAINER', 'SIZE']]

part[['TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE']]

partsupp[(partsupp['PS_SUPPKEY'] >= 4263)][['AVAILQTY']]

region[(region['R_COMMENT'] != 'u')][['R_COMMENT']]

region[(region['R_NAME'].str.startswith('ASI'))][['R_COMMENT']]

region[(region['R_REGIONKEY'] >= 3)][['R_NAME']]

supplier[(supplier['S_SUPPKEY'] == 181) | (supplier['S_SUPPKEY'] == 69) | (supplier['S_NATIONKEY'] >= 10) & (supplier['S_PHONE'] == '28-')]

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME']]

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'M')][['C_COMMENT', 'C_ACCTBAL']]

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'].str.startswith('C'))][['C_NAME']]

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'D') | (customer['C_CUSTKEY'] <= 10)]

customer[['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']]

lineitem[(lineitem['LINENUMBER'] != 5) & (lineitem['L_ORDERKEY'] >= 68) | (lineitem['TAX'] >= 0.04049985651280985) & (lineitem['DISCOUNT'] < 0.039499199002975965) & (lineitem['QUANTITY'] > 37)]

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'RECEIPTDATE', 'LINENUMBER', 'SHIPMODE']]

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'DISCOUNT', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[['SHIPMODE', 'RECEIPTDATE', 'QUANTITY', 'L_COMMENT', 'TAX']]

nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C'))][['ORDERDATE', 'ORDERPRIORITY']]

part.groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#23', 'Brand#15', 'Brand#52', 'Brand#34', 'Brand#33', 'Brand#31', 'Brand#12', 'Brand#44', 'Brand#22']))].groupby(by=['PT_COMMENT']).agg('count')

part[(part['P_NAME'].str.startswith('v'))].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['BRAND', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']]

part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE']]

part[['TYPE', 'MFGR', 'RETAILPRICE', 'BRAND', 'PT_COMMENT']]

part[['TYPE', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'SIZE']]

partsupp[(partsupp['SUPPLYCOST'] < 565.8767384694775)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']]

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'ASI')].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1)].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] == 'A')][['R_COMMENT']]

supplier.groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 799.1658016244887) | (supplier['S_PHONE'] == '3')][['S_PHONE']]

supplier[(supplier['S_COMMENT'] == 'j') & (supplier['S_ACCTBAL'] > 8850.258411080935) | (supplier['S_NATIONKEY'] == 20) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'a')]

supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']]

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('X')) | (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']]

lineitem.groupby(by=['LINESTATUS', 'RETURNFLAG', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['SHIPDATE', 'L_COMMENT', 'L_PARTKEY', 'EXTENDEDPRICE', 'SHIPMODE']).agg('count')

lineitem[['QUANTITY', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'DISCOUNT', 'COMMITDATE']]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] < 6)][['N_NAME']]

nation[(nation['N_NATIONKEY'] == 10) & (nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] != 'U')][['N_REGIONKEY']]

nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'] == 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] != 'R') & (nation['N_COMMENT'] != 'v')][['N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[['CLERK', 'TOTALPRICE']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT']]

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']]

part.groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#24') & (part['P_PARTKEY'] == 186) | (part['TYPE'].str.startswith('STA')) & (part['P_NAME'] == 'c') | (part['SIZE'] > 23) | (part['RETAILPRICE'] > 1091.9151924997057)]

part[(part['MFGR'] == 'Manufacturer#1') & (part['PT_COMMENT'] == 'i') & (part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('n')) | (part['PT_COMMENT'] == 'e') & (part['P_NAME'].str.startswith('bis'))]

part[(part['P_NAME'] != 'h')][['TYPE', 'P_PARTKEY', 'P_NAME']]

part[(part['P_NAME'] == 'i') & (part['PT_COMMENT'] == 'w') & (part['CONTAINER'] == 'SM') & (part['BRAND'].isin(['Brand#21', 'Brand#31', 'Brand#15', 'Brand#44', 'Brand#14', 'Brand#33', 'Brand#25', 'Brand#32', 'Brand#55', 'Brand#45', 'Brand#41', 'Brand#42'])) & (part['MFGR'] == 'Manufacturer#4') | (part['RETAILPRICE'] != 949.0119417668467)]

part[(part['RETAILPRICE'] != 1091.7166864826356)].groupby(by=['P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 7)].groupby(by=['CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['SIZE'] < 6)][['TYPE', 'BRAND', 'PT_COMMENT']]

part[['CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'BRAND', 'SIZE', 'MFGR']]

part[['P_NAME', 'SIZE']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 45)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[['AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 1) | (region['R_NAME'].str.startswith('A'))][['R_COMMENT']]

region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] != 'u')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 3534.220825727428) & (supplier['S_SUPPKEY'] < 3)][['S_SUPPKEY', 'S_PHONE']]

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] >= 4089.898180376269) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['MKTSEGMENT']]

customer[['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']]

customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT']]

lineitem[(lineitem['L_SUPPKEY'] != 6276) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_ORDERKEY'] > 22)][['SHIPINSTRUCT', 'COMMITDATE']]

lineitem[['QUANTITY', 'LINESTATUS', 'COMMITDATE']].groupby(by=['COMMITDATE']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] != 2) & (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] > 3)][['N_NAME']]

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'].str.startswith('s'))][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'] != 'h') & (nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 12) | (nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] > 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'].str.startswith('U')) | (nation['N_NATIONKEY'] != 6)][['N_NAME', 'N_COMMENT']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] < 94625) | (orders['ORDERSTATUS'] == 'F')][['TOTALPRICE']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'] != 'F') | (orders['O_COMMENT'].str.startswith('a'))][['ORDERSTATUS', 'TOTALPRICE']]

orders[(orders['O_COMMENT'] != 'k') & (orders['O_ORDERKEY'] >= 674)][['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']]

orders[['CLERK', 'ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT']]

orders[['CLERK', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']]

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

part[(part['BRAND'] != 'Brand#14')][['CONTAINER', 'TYPE', 'SIZE', 'RETAILPRICE']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) | (part['PT_COMMENT'].str.startswith('the')) & (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] >= 147) | (part['TYPE'] != 'L') & (part['P_NAME'] != 's') | (part['PT_COMMENT'].str.startswith('d'))]

part[(part['MFGR'].isin(['Manufacturer#5'])) & (part['RETAILPRICE'] <= 1091.8506483235424) | (part['TYPE'] != 'E') | (part['SIZE'] == 37) | (part['RETAILPRICE'] != 972.7763645936476) & (part['BRAND'] == 'Brand#21') & (part['CONTAINER'] == 'SM')]

part[(part['P_PARTKEY'] > 176) | (part['BRAND'] != 'Brand#52') & (part['RETAILPRICE'] < 1012.3854420756716) & (part['P_NAME'] != 't') & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] >= 43) & (part['PT_COMMENT'].str.startswith('ss '))]

part[(part['RETAILPRICE'] > 1009.9294153191263) | (part['SIZE'] < 43) & (part['TYPE'] == 'P') & (part['SIZE'] >= 27) | (part['PT_COMMENT'].str.startswith('b')) | (part['P_NAME'] == 'bis') & (part['SIZE'] < 7)]

part[(part['SIZE'] == 29) | (part['SIZE'] < 4) & (part['MFGR'] == 'Manufacturer#3')].groupby(by=['BRAND']).agg('count')

part[['TYPE', 'MFGR', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']]

part[['TYPE', 'P_NAME', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'SIZE']]

partsupp[(partsupp['PS_PARTKEY'] >= 23) & (partsupp['AVAILQTY'] <= 6197)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] > 6722) | (partsupp['PS_PARTKEY'] >= 7) | (partsupp['PS_SUPPKEY'] <= 7178)][['P_COMMENT', 'PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] == 904.2789812648858) | (partsupp['SUPPLYCOST'] >= 841.1158497392619)].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 24)][['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ADDRESS']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'C_NATIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] < 17)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 4) & (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_ACCTBAL']]

lineitem.merge(orders[['SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] < 59195) | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_SUPPKEY'] < 9229) & (lineitem['L_ORDERKEY'] > 187) | (lineitem['DISCOUNT'] == 0.020883084614036818) & (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL'])) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['TAX'] > 0.009479592334649248)]

lineitem[(lineitem['SHIPMODE'] != 'SHIP') | (lineitem['LINESTATUS'] != 'F') | (lineitem['EXTENDEDPRICE'] == 66831.47360026532) & (lineitem['LINENUMBER'] <= 1)][['SHIPMODE', 'SHIPDATE']]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] < 23) & (nation['N_NAME'] != 'K') | (nation['N_COMMENT'].str.startswith('v'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_NATIONKEY'] == 4) & (nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] <= 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] == 6) | (nation['N_COMMENT'] == 'a') | (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] < 1)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'S') | (nation['N_COMMENT'] == 'n')][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] == 0)].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] < 3661) & (orders['O_COMMENT'] == 'a') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_COMMENT'] != ' ')][['ORDERDATE']]

orders[(orders['O_CUSTKEY'] != 101413) | (orders['TOTALPRICE'] == 339036.3814325971) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['ORDERDATE'] != '1992-01-13')][['TOTALPRICE']]

orders[(orders['O_ORDERKEY'] > 550)].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']).agg('count')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']]

orders[['SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('count')

orders[['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#21')].groupby(by=['CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'l') & (part['SIZE'] >= 23) & (part['P_NAME'].str.startswith('bis'))].groupby(by=['MFGR', 'BRAND']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] < 13) | (part['BRAND'] != 'Brand#52') | (part['SIZE'] < 36) & (part['PT_COMMENT'].str.startswith('b')) | (part['PT_COMMENT'] == 'p') | (part['RETAILPRICE'] != 908.1894289567193) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['CONTAINER'] != 'SM')]

part[(part['SIZE'] > 4) | (part['SIZE'] == 14) & (part['TYPE'].str.startswith('M'))][['BRAND', 'SIZE', 'P_NAME']]

part[['BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'SIZE', 'MFGR', 'BRAND', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT']]

part[['MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']]

part[['RETAILPRICE', 'BRAND', 'SIZE']].groupby(by=['BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'BRAND', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'P_NAME']]

part[['TYPE', 'SIZE', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'MFGR']]

partsupp[(partsupp['PS_SUPPKEY'] != 4516) & (partsupp['AVAILQTY'] <= 9425) & (partsupp['AVAILQTY'] != 5813) | (partsupp['P_COMMENT'].str.startswith('c'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'AME') | (region['R_NAME'] != 'M')].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] == 1) | (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 20) | (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'c') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_ADDRESS'] != 'v')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('28-'))][['S_ACCTBAL', 'S_COMMENT', 'S_NAME']]

customer.merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NATIONKEY'] >= 5)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('a')) | (customer['C_CUSTKEY'] <= 62)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 17)].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['DISCOUNT'] >= 0.08717173227777576) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['L_SUPPKEY'] > 4361)][['DISCOUNT', 'L_COMMENT']]

lineitem[(lineitem['LINENUMBER'] != 3) | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_SUPPKEY'] < 7471) | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'DELIVER IN PERSON'])) & (lineitem['RECEIPTDATE'] >= '1998-11-06')][['LINESTATUS']]

lineitem[(lineitem['LINENUMBER'] >= 2)][['DISCOUNT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 55) | (lineitem['SHIPMODE'].isin(['RAIL'])) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['TAX'] != 0.005171666287011094)].groupby(by=['L_PARTKEY', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'] == 'REG AIR')].groupby(by=['L_PARTKEY', 'L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['DISCOUNT'] < 0.04784150022518632) | (lineitem['L_PARTKEY'] > 12193) & (lineitem['LINESTATUS'] != 'O')][['EXTENDEDPRICE', 'LINENUMBER']]

lineitem[(lineitem['SHIPDATE'] > '1992-04-27')][['SHIPINSTRUCT', 'L_COMMENT']].groupby(by=['SHIPINSTRUCT']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'R_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'S') & (nation['N_NAME'] != 'V') | (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] != 20)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 20) | (nation['N_NATIONKEY'] < 23)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']]

part[(part['BRAND'] == 'Brand#41') | (part['SIZE'] >= 25) | (part['SIZE'] != 24) | (part['CONTAINER'] == 'WRAP') & (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'].str.startswith('v')) | (part['BRAND'].isin(['Brand#55', 'Brand#12', 'Brand#33', 'Brand#45', 'Brand#52', 'Brand#23', 'Brand#22', 'Brand#15', 'Brand#54', 'Brand#34', 'Brand#43', 'Brand#53', 'Brand#32', 'Brand#31', 'Brand#13', 'Brand#41', 'Brand#42'])) | (part['SIZE'] < 31) & (part['P_PARTKEY'] >= 36)]

part[(part['CONTAINER'] != 'JUMBO') & (part['TYPE'] != 'P') | (part['PT_COMMENT'] != 'k') | (part['BRAND'].isin(['Brand#22', 'Brand#15', 'Brand#24', 'Brand#21', 'Brand#33', 'Brand#53', 'Brand#52', 'Brand#35', 'Brand#25', 'Brand#32', 'Brand#23', 'Brand#43'])) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) | (part['P_PARTKEY'] <= 40)][['RETAILPRICE']]

part[(part['CONTAINER'] != 'LG') & (part['TYPE'].str.startswith('M')) | (part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'] != 'cor')].groupby(by=['P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['TYPE'].str.startswith('STA')) & (part['BRAND'] != 'Brand#43') & (part['TYPE'].str.startswith('M')) & (part['BRAND'].isin(['Brand#55', 'Brand#13', 'Brand#45', 'Brand#41', 'Brand#44', 'Brand#32', 'Brand#33', 'Brand#21', 'Brand#11', 'Brand#31', 'Brand#34'])) & (part['BRAND'] != 'Brand#32') & (part['BRAND'].isin(['Brand#32', 'Brand#52', 'Brand#21', 'Brand#11', 'Brand#34', 'Brand#25', 'Brand#51', 'Brand#12', 'Brand#22', 'Brand#55', 'Brand#42', 'Brand#31', 'Brand#41', 'Brand#15', 'Brand#54', 'Brand#35', 'Brand#23', 'Brand#53', 'Brand#33', 'Brand#24', 'Brand#14', 'Brand#44'])) | (part['RETAILPRICE'] >= 993.8576030449549) & (part['MFGR'] == 'Manufacturer#4')]

part[(part['P_NAME'] != 'b') & (part['SIZE'] <= 3) | (part['MFGR'] == 'Manufacturer#1') & (part['TYPE'].str.startswith('P')) & (part['P_PARTKEY'] != 116) | (part['MFGR'] == 'Manufacturer#5') | (part['P_NAME'].str.startswith('a')) | (part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'k')]

part[(part['P_NAME'] == 'blu') | (part['SIZE'] >= 13) & (part['TYPE'] == 'S') | (part['BRAND'].isin(['Brand#14', 'Brand#22', 'Brand#51', 'Brand#25', 'Brand#15', 'Brand#24']))][['TYPE', 'P_NAME', 'RETAILPRICE']]

part[(part['P_NAME'].str.startswith('k')) & (part['P_PARTKEY'] > 75) | (part['BRAND'] != 'Brand#15') | (part['RETAILPRICE'] >= 953.5482764997216)].groupby(by=['P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) | (part['PT_COMMENT'] != 'i') | (part['PT_COMMENT'].str.startswith('p')) & (part['SIZE'] == 31)][['P_NAME', 'BRAND', 'PT_COMMENT']]

part[['P_NAME', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'SIZE', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY']]

part[['RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'P_NAME']]

part[['SIZE', 'BRAND', 'CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']]

partsupp[(partsupp['PS_PARTKEY'] >= 32) | (partsupp['PS_SUPPKEY'] != 7069) | (partsupp['P_COMMENT'] != 'j') | (partsupp['SUPPLYCOST'] <= 464.1510156928166) | (partsupp['AVAILQTY'] > 5941)][['P_COMMENT', 'PS_SUPPKEY']]

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] <= 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] >= 19) | (nation['N_NAME'] == 'U')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('6'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 22) | (supplier['S_PHONE'] != '28-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '32-')][['S_COMMENT', 'S_ADDRESS', 'S_PHONE']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'N_COMMENT', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_NAME'] != 'M') | (nation['N_NAME'] == 'A') | (nation['N_NAME'].str.startswith('J'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('Q'))][['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] < 7367.037279300668)][['C_ADDRESS', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[(customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] <= 8392.307711701684) | (customer['C_NATIONKEY'] > 8) | (customer['C_PHONE'] != '2')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']]

lineitem.merge(orders[(orders['O_CUSTKEY'] > 798) & (orders['O_CUSTKEY'] != 77486) & (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] > 0.06074188291751049)][['TAX', 'LINENUMBER', 'DISCOUNT']].groupby(by=['DISCOUNT']).agg('max', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] >= 4390) | (partsupp['SUPPLYCOST'] == 844.128543774956) & (partsupp['PS_PARTKEY'] < 25)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] == 8)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

part[(part['BRAND'] != 'Brand#45') & (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5'])) | (part['RETAILPRICE'] >= 1020.6187740867907) | (part['SIZE'] != 29) & (part['P_PARTKEY'] <= 168)].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM'))][['RETAILPRICE', 'P_PARTKEY', 'SIZE']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] == 'Brand#31') & (part['SIZE'] != 23)][['TYPE', 'CONTAINER', 'RETAILPRICE', 'BRAND', 'SIZE']]

part[(part['PT_COMMENT'] == 'x') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2'])) & (part['SIZE'] < 8) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['TYPE'].str.startswith('L')) | (part['SIZE'] < 43)][['BRAND', 'P_NAME']]

part[(part['RETAILPRICE'] > 993.4356324603207) & (part['TYPE'] != 'M') | (part['P_PARTKEY'] <= 154) & (part['PT_COMMENT'] != 'f') | (part['P_PARTKEY'] != 144) | (part['BRAND'].isin(['Brand#34', 'Brand#14', 'Brand#44', 'Brand#32', 'Brand#41', 'Brand#24'])) & (part['PT_COMMENT'] != 'a')][['P_NAME']]

part[(part['RETAILPRICE'] >= 977.0257199490717) | (part['P_NAME'] == 'y')][['P_NAME', 'PT_COMMENT', 'CONTAINER', 'TYPE', 'BRAND', 'P_PARTKEY']]

part[(part['SIZE'] < 44) & (part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] == 194) & (part['TYPE'] == 'STA') | (part['P_NAME'].str.startswith('s')) | (part['BRAND'] == 'Brand#23')].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[['MFGR', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'BRAND']].groupby(by=['MFGR', 'SIZE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'TYPE']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 8092) | (partsupp['P_COMMENT'] == '.')][['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 6408) | (partsupp['PS_PARTKEY'] > 10) | (partsupp['AVAILQTY'] <= 7893) & (partsupp['PS_SUPPKEY'] == 5439)].merge(part[(part['SIZE'] > 11)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 37) | (partsupp['SUPPLYCOST'] != 243.07043793735895) | (partsupp['P_COMMENT'] == 'n') | (partsupp['PS_PARTKEY'] >= 6)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] > 17)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'] != 'K')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 22) | (nation['N_NATIONKEY'] < 4) & (nation['N_COMMENT'] != 'i')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'y')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] >= 16) & (nation['N_NAME'] != 'J')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 7465.895297122473) | (supplier['S_ACCTBAL'] > 8251.013250966596)].groupby(by=['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 1791.8444623359658) | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NATIONKEY'] >= 12) | (supplier['S_ADDRESS'].str.startswith('F'))][['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['TAX'] <= 0.07750773821768156) | (lineitem['SHIPMODE'] != 'AIR') | (lineitem['EXTENDEDPRICE'] == 30934.106392347403) & (lineitem['L_COMMENT'] != 'y') & (lineitem['RECEIPTDATE'] != '1998-11-06')][['SHIPINSTRUCT', 'RETURNFLAG', 'RECEIPTDATE', 'LINENUMBER']]

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] < 11) | (nation['N_COMMENT'].str.startswith('u'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('v'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] < 1) | (nation['N_NAME'] == 'S')][['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['O_ORDERKEY'] > 567) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] == 123123.39500007463) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] != 'z') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] == 'P')][['ORDERDATE']]

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['TOTALPRICE'] <= 104363.13069265673) & (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] > 57184) | (orders['TOTALPRICE'] != 328061.13254809706) & (orders['O_CUSTKEY'] < 129853) & (orders['ORDERPRIORITY'] != '2-HIGH')][['O_COMMENT']]

orders[['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['CLERK', 'O_COMMENT']).agg('count')

orders[['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']).agg('count')

part[(part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'] != 'WRAP') & (part['CONTAINER'].str.startswith('SM'))].groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') & (part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] != 3) | (part['MFGR'] == 'Manufacturer#2') | (part['RETAILPRICE'] <= 926.4103176486869)][['P_NAME', 'CONTAINER', 'P_PARTKEY']]

part[(part['P_NAME'].str.startswith('n')) | (part['MFGR'] == 'Manufacturer#3') & (part['CONTAINER'] == 'SM') | (part['P_PARTKEY'] != 131) & (part['P_PARTKEY'] > 63) | (part['SIZE'] < 12) & (part['RETAILPRICE'] <= 1059.7265816292656)].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] <= 44) & (part['PT_COMMENT'].str.startswith('q')) | (part['P_NAME'] != 'r') & (part['TYPE'] != 'E') & (part['SIZE'] != 22) & (part['RETAILPRICE'] == 1093.584424430558)][['P_PARTKEY', 'PT_COMMENT', 'CONTAINER']]

part[(part['TYPE'] != 'S') | (part['RETAILPRICE'] < 1015.6432812388314)][['P_PARTKEY', 'P_NAME', 'BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[['BRAND', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['MFGR', 'BRAND']).agg('count')

part[['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'BRAND']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != 'n') & (part['RETAILPRICE'] <= 1005.5622421799823) | (part['BRAND'] != 'Brand#45') & (part['BRAND'] == 'Brand#35') | (part['RETAILPRICE'] != 1015.672730906851)][['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 5021) | (partsupp['PS_PARTKEY'] != 10) | (partsupp['PS_PARTKEY'] != 20) | (partsupp['PS_PARTKEY'] == 48)].merge(part[(part['CONTAINER'] != 'MED') | (part['SIZE'] > 43)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 5360) | (partsupp['SUPPLYCOST'] >= 870.3689735911319) & (partsupp['AVAILQTY'] <= 5005)][['AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'N_REGIONKEY']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 5329.2789465398855) & (supplier['S_NATIONKEY'] > 15) | (supplier['S_ACCTBAL'] < 9333.230443453453) | (supplier['S_SUPPKEY'] == 75) | (supplier['S_ACCTBAL'] == 2033.3528327537967)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_ADDRESS'] == 'D') | (supplier['S_ACCTBAL'] >= 8206.74612832534) | (supplier['S_ADDRESS'] == 'X') | (supplier['S_COMMENT'] == 'al ') & (supplier['S_ACCTBAL'] >= 8171.026841607453) | (supplier['S_NATIONKEY'] > 9) & (supplier['S_PHONE'] == '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 1) | (supplier['S_ADDRESS'].str.startswith('c')) | (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] != 174) & (supplier['S_SUPPKEY'] >= 161) & (supplier['S_PHONE'] == '28-') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 7) & (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_REGIONKEY'] != 1)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != 'p') & (customer['C_CUSTKEY'] == 25) | (customer['C_ACCTBAL'] >= 5618.145739030725) | (customer['C_ACCTBAL'] == 5186.659129342752) & (customer['C_NATIONKEY'] < 13)][['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']]

customer[(customer['C_NATIONKEY'] != 13) | (customer['C_ACCTBAL'] > 6557.454851492699) & (customer['C_ADDRESS'] == '0') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 't') | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME']]

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_CUSTKEY'] >= 59) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 14) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] < 19) & (customer['C_CUSTKEY'] >= 60) & (customer['C_ADDRESS'].str.startswith('b'))][['C_PHONE', 'C_CUSTKEY']]

customer[['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']).agg('count')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['EXTENDEDPRICE'] <= 7140.501642732508) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['DISCOUNT'] >= 0.08594335640436389) | (lineitem['EXTENDEDPRICE'] != 13503.541475080474) | (lineitem['TAX'] != 0.07517374223804342) | (lineitem['L_COMMENT'] == 'q') | (lineitem['L_ORDERKEY'] < 193)][['SHIPDATE', 'QUANTITY']]

lineitem[['RECEIPTDATE', 'L_COMMENT', 'SHIPMODE', 'LINENUMBER', 'SHIPDATE', 'TAX', 'EXTENDEDPRICE', 'LINESTATUS']].groupby(by=['SHIPDATE']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] < 3) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'R_COMMENT']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'J') | (nation['N_NAME'] == 'V')].merge(region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'R') & (nation['N_COMMENT'] == 'r') | (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'] != 'C')].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'F') | (nation['N_NAME'].str.startswith('J'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'] != 'AME') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_COMMENT'].str.startswith('y')) & (orders['TOTALPRICE'] <= 354059.8080389902) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] >= 287) | (orders['O_ORDERKEY'] == 149)][['ORDERPRIORITY', 'O_COMMENT']]

part[(part['CONTAINER'] == 'MED') & (part['PT_COMMENT'].str.startswith('i')) | (part['RETAILPRICE'] >= 964.0581869795086) | (part['BRAND'] != 'Brand#32') & (part['TYPE'] != 'E') & (part['P_PARTKEY'] >= 95) & (part['BRAND'] != 'Brand#33') | (part['PT_COMMENT'] == ' ')].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['P_NAME'] != 'a') | (part['TYPE'].str.startswith('STA')) & (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] == 19) & (part['BRAND'].isin(['Brand#42', 'Brand#54', 'Brand#35', 'Brand#45', 'Brand#34', 'Brand#24'])) | (part['P_PARTKEY'] > 118)][['SIZE', 'PT_COMMENT', 'TYPE']]

part[(part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'].str.startswith('f')) | (part['PT_COMMENT'].str.startswith('kag')) & (part['P_NAME'] != 'm')][['P_NAME', 'TYPE', 'P_PARTKEY', 'MFGR', 'BRAND', 'PT_COMMENT']]

part[(part['MFGR'] != 'Manufacturer#4') & (part['RETAILPRICE'] >= 1004.3020680379418) | (part['TYPE'].str.startswith('E')) & (part['SIZE'] >= 38) & (part['P_PARTKEY'] <= 1) | (part['PT_COMMENT'] != 'y') & (part['P_NAME'] != 'c')][['TYPE', 'SIZE', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('bis')) | (part['CONTAINER'] != 'JUMBO') | (part['TYPE'].str.startswith('SMA'))][['MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND', 'SIZE']]

part[(part['RETAILPRICE'] <= 1068.6202826680826) & (part['PT_COMMENT'] != 'g') | (part['TYPE'] == 'S') & (part['MFGR'] == 'Manufacturer#2') | (part['RETAILPRICE'] <= 914.7891796088389) | (part['BRAND'] == 'Brand#21') & (part['P_PARTKEY'] == 160) | (part['TYPE'] != 'P')][['P_NAME', 'PT_COMMENT']]

part[(part['SIZE'] < 23) | (part['BRAND'] != 'Brand#44') & (part['RETAILPRICE'] >= 1094.5572422972111) & (part['P_NAME'].str.startswith('h'))].groupby(by=['CONTAINER', 'TYPE', 'MFGR', 'PT_COMMENT', 'BRAND']).agg('count')

part[(part['SIZE'] == 24) & (part['TYPE'] != 'L') | (part['BRAND'] == 'Brand#31') & (part['P_NAME'].str.startswith('k')) & (part['BRAND'] == 'Brand#44')][['CONTAINER', 'MFGR', 'BRAND', 'P_NAME', 'RETAILPRICE']]

part[['RETAILPRICE', 'PT_COMMENT', 'BRAND', 'P_NAME', 'MFGR', 'TYPE', 'CONTAINER']].groupby(by=['P_NAME', 'BRAND']).agg('max', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'the') & (partsupp['PS_SUPPKEY'] <= 2466) & (partsupp['AVAILQTY'] > 9018)].merge(part[['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('.')) | (partsupp['PS_SUPPKEY'] != 1486)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NAME'] != 'B')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 3793.4046168099594) | (supplier['S_ADDRESS'] != 'p')].merge(nation[(nation['N_COMMENT'] != ' ')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 11) & (supplier['S_NATIONKEY'] != 9) | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_ACCTBAL'] > 3842.0469582322967) & (supplier['S_SUPPKEY'] < 192) & (supplier['S_SUPPKEY'] < 57) & (supplier['S_COMMENT'] != ',') & (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_NATIONKEY'] != 18)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']]

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'R_NAME', 'N_COMMENT', 'R_COMMENT', 'MKTSEGMENT']).agg('count')

customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'j') & (customer['C_PHONE'] == '13-') | (customer['C_PHONE'] != '25-')].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'] != 'p')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 62) | (customer['C_ADDRESS'] == 'o') | (customer['C_PHONE'].str.startswith('2')) | (customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 87757.79393750273) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['EXTENDEDPRICE'] >= 84537.87949673364) & (lineitem['L_COMMENT'] != 'g') | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['QUANTITY'] <= 1) & (lineitem['L_PARTKEY'] < 5679) & (lineitem['LINENUMBER'] <= 4)][['RECEIPTDATE', 'L_COMMENT', 'QUANTITY']]

lineitem[(lineitem['L_COMMENT'] == 'v') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_SUPPKEY'] < 5472)][['QUANTITY', 'LINENUMBER']].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.0661999683129425) & (lineitem['DISCOUNT'] <= 0.08612659472632081) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['TAX'] <= 0.028724969855607095)][['DISCOUNT', 'COMMITDATE']].groupby(by=['COMMITDATE']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'R_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'R_COMMENT', 'R_REGIONKEY', 'N_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'] == 'G') | (nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] != 'y')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'R')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] == 'I')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 0) | (nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_COMMENT'].str.startswith('d')) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] > 326962.264340314) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERPRIORITY'] == '5-LOW')][['ORDERPRIORITY', 'TOTALPRICE']]

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'SHIPPRIORITY']).agg('count')

part[(part['RETAILPRICE'] >= 966.7266657981496) & (part['CONTAINER'] == 'SM') & (part['TYPE'] == 'M') | (part['BRAND'].isin(['Brand#44', 'Brand#51', 'Brand#11', 'Brand#32', 'Brand#31', 'Brand#24', 'Brand#53', 'Brand#33'])) | (part['P_PARTKEY'] >= 125) | (part['RETAILPRICE'] != 1056.6004380253828)][['P_NAME', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']]

part[(part['SIZE'] < 39) & (part['RETAILPRICE'] > 1041.1106745132436) | (part['P_PARTKEY'] != 163) & (part['BRAND'].isin(['Brand#42', 'Brand#44', 'Brand#13', 'Brand#23', 'Brand#15', 'Brand#33', 'Brand#21', 'Brand#35', 'Brand#53', 'Brand#34', 'Brand#32', 'Brand#31', 'Brand#55', 'Brand#14', 'Brand#52', 'Brand#51', 'Brand#41', 'Brand#54', 'Brand#43', 'Brand#22', 'Brand#25', 'Brand#12', 'Brand#11', 'Brand#24'])) | (part['P_PARTKEY'] == 188) | (part['BRAND'] == 'Brand#24') | (part['P_NAME'] == 'h')][['TYPE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY']]

part[(part['TYPE'] != 'S') | (part['P_NAME'].str.startswith('n')) & (part['P_PARTKEY'] > 27) | (part['RETAILPRICE'] != 930.2700261683111) | (part['BRAND'] != 'Brand#55') & (part['CONTAINER'] == 'SM') & (part['TYPE'] != 'E')].groupby(by=['CONTAINER', 'SIZE', 'TYPE']).agg('count')

part[(part['TYPE'] == 'E') & (part['P_NAME'] != 'd') | (part['PT_COMMENT'] != 'k') & (part['TYPE'] != 'STA') | (part['BRAND'] != 'Brand#34') & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'].isin(['Brand#34', 'Brand#45', 'Brand#23', 'Brand#54', 'Brand#52', 'Brand#33', 'Brand#55', 'Brand#21', 'Brand#43', 'Brand#14', 'Brand#31', 'Brand#41', 'Brand#42', 'Brand#35', 'Brand#44', 'Brand#13', 'Brand#53', 'Brand#22'])) & (part['CONTAINER'] == 'SM')].groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'BRAND']].groupby(by=['PT_COMMENT', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_NAME']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[['TYPE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['P_NAME', 'SIZE', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PT_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'CONTAINER']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'h')][['PS_PARTKEY']].merge(part[['P_PARTKEY', 'CONTAINER', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('r')) & (supplier['S_COMMENT'] == 'd') | (supplier['S_ACCTBAL'] == 4736.562754316727) | (supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_COMMENT'].str.startswith('x'))].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] != 'I')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 7) & (supplier['S_ACCTBAL'] > 3939.595244394017) & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_COMMENT'].str.startswith('es '))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_NATIONKEY'] != 8)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'S_ADDRESS', 'N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NATIONKEY'] <= 2) & (supplier['S_ACCTBAL'] >= 7797.7518960034295) | (supplier['S_SUPPKEY'] == 81) | (supplier['S_NATIONKEY'] <= 15)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'N_NAME', 'C_ADDRESS']).agg('count')

customer[(customer['C_CUSTKEY'] <= 88) & (customer['C_CUSTKEY'] > 38)].merge(nation.merge(region[(region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'e') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 42)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 6) | (customer['C_COMMENT'] == 'y') & (customer['C_CUSTKEY'] > 1) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] != 9) | (customer['C_NATIONKEY'] > 7)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_ADDRESS'] != 'x') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE']))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 33) | (lineitem['L_ORDERKEY'] >= 18) & (lineitem['LINENUMBER'] != 5) & (lineitem['L_SUPPKEY'] != 8700) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['LINESTATUS'].isin(['F', 'O']))].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'AIR') & (lineitem['LINESTATUS'] == 'O')][['SHIPINSTRUCT', 'RECEIPTDATE', 'L_COMMENT', 'RETURNFLAG', 'SHIPMODE', 'LINENUMBER', 'SHIPDATE', 'TAX', 'DISCOUNT', 'EXTENDEDPRICE']]

lineitem[['LINENUMBER', 'RETURNFLAG', 'TAX', 'L_PARTKEY', 'SHIPMODE', 'RECEIPTDATE', 'LINESTATUS', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT']].groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V')].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 7) & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['O_COMMENT'] == 'j') | (orders['O_COMMENT'].str.startswith('uri')) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] == 631) & (orders['O_ORDERKEY'] > 752) | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] != 0)][['CLERK', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']]

part[(part['BRAND'] == 'Brand#44') | (part['P_NAME'] == 'g') | (part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] < 58) | (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] != 'h') & (part['P_PARTKEY'] <= 17)].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') | (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'].str.startswith('lin')) & (part['RETAILPRICE'] < 1078.7446530796992) & (part['CONTAINER'] == 'LG') & (part['BRAND'] != 'Brand#41') | (part['PT_COMMENT'] != 'k') | (part['P_NAME'].str.startswith('bis')) & (part['TYPE'].str.startswith('SMA'))].groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('b')) | (part['P_NAME'] != 'cor') | (part['TYPE'].str.startswith('SMA'))][['BRAND', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['TYPE']).agg('count')

part[(part['RETAILPRICE'] == 902.15794504005) | (part['TYPE'] == 'SMA') | (part['SIZE'] != 19) | (part['P_NAME'] == 't') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] == 'i') | (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] != 'Manufacturer#3')][['MFGR', 'BRAND', 'P_PARTKEY']]

part[(part['SIZE'] != 17) & (part['SIZE'] < 28) | (part['P_NAME'] != 'h') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5'])) & (part['RETAILPRICE'] < 959.0999290335791) & (part['BRAND'] == 'Brand#33')][['MFGR', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']]

part[['MFGR', 'RETAILPRICE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']].groupby(by=['TYPE', 'MFGR']).agg('mean', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'BRAND', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE']).agg('count')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] >= 5) | (supplier['S_ACCTBAL'] < 8993.388256508524) & (supplier['S_ACCTBAL'] != 3771.1623207597277)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_ADDRESS'] != '9') & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('g')) | (supplier['S_SUPPKEY'] == 190) | (supplier['S_ACCTBAL'] > 4101.934806721374)].merge(nation[(nation['N_NATIONKEY'] < 11) | (nation['N_COMMENT'] != 'c') & (nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 12) | (supplier['S_NATIONKEY'] != 0) & (supplier['S_COMMENT'] != 'q') | (supplier['S_ACCTBAL'] != 5223.582754132202) & (supplier['S_PHONE'] == '28-')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'] != 'd') | (supplier['S_ACCTBAL'] != 126.34355834530766) | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 135) | (supplier['S_NATIONKEY'] > 5) & (supplier['S_SUPPKEY'] != 165)][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']]

supplier[['S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'R_NAME', 'C_CUSTKEY']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'N_NATIONKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 11) & (customer['C_CUSTKEY'] != 13) | (customer['C_NATIONKEY'] == 13) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 5) & (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] == 11)].merge(nation.merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] > 3) & (customer['C_COMMENT'] == 'u') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 76)].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['EXTENDEDPRICE'] < 47611.62267658746) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_PARTKEY'] < 111886) & (lineitem['LINENUMBER'] != 4) & (lineitem['L_SUPPKEY'] <= 7357) | (lineitem['L_COMMENT'].str.startswith(' re')) | (lineitem['TAX'] > 0.035408102522017613)][['TAX', 'EXTENDEDPRICE', 'SHIPDATE', 'LINESTATUS']]

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[(partsupp['AVAILQTY'] != 5905) & (partsupp['PS_SUPPKEY'] <= 3747) & (partsupp['P_COMMENT'] == 'c') | (partsupp['SUPPLYCOST'] != 477.41872992832043)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['QUANTITY', 'RECEIPTDATE', 'RETURNFLAG', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'LINESTATUS', 'L_ORDERKEY']].groupby(by=['RETURNFLAG', 'RECEIPTDATE', 'LINESTATUS', 'TAX']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] == 'AME') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'K')].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'R_COMMENT', 'N_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] < 76372) & (orders['ORDERDATE'] < '1992-01-13')][['ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['ORDERPRIORITY', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 135237) & (orders['O_ORDERKEY'] <= 354) & (orders['O_ORDERKEY'] != 198) & (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] == 198) | (orders['O_ORDERKEY'] != 795) & (orders['SHIPPRIORITY'] == 0)][['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']]

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY']].groupby(by=['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']).agg('count')

part[(part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] > 172) | (part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] < 5) | (part['P_NAME'] != 'l') | (part['PT_COMMENT'] == 't') | (part['MFGR'] != 'Manufacturer#3') | (part['BRAND'] == 'Brand#54')].groupby(by=['BRAND', 'TYPE', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) | (part['CONTAINER'] != 'WRAP') & (part['P_PARTKEY'] >= 133) & (part['SIZE'] < 4) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] < 135) | (part['CONTAINER'] == 'LG')].groupby(by=['P_NAME', 'MFGR', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('count')

part[(part['PT_COMMENT'] != '!') & (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'] == 's') & (part['P_PARTKEY'] <= 9) & (part['BRAND'] != 'Brand#55') & (part['SIZE'] == 47) & (part['TYPE'].str.startswith('S'))][['RETAILPRICE', 'TYPE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] <= 165) & (part['P_PARTKEY'] > 92) & (part['P_NAME'].str.startswith('lin')) & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'].str.startswith('i')) | (part['RETAILPRICE'] != 983.5944557288894) & (part['PT_COMMENT'] != 'ss ') & (part['SIZE'] >= 48)].groupby(by=['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'TYPE']).agg('count')

part[(part['RETAILPRICE'] <= 957.2173248748861) | (part['BRAND'] != 'Brand#33') & (part['TYPE'].str.startswith('E')) & (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'] == 'p') | (part['P_NAME'].str.startswith('y')) & (part['BRAND'].isin(['Brand#22', 'Brand#55', 'Brand#15', 'Brand#11', 'Brand#42', 'Brand#24', 'Brand#43', 'Brand#12', 'Brand#32'])) | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] == 148)].groupby(by=['SIZE', 'CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['MFGR', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'TYPE', 'PT_COMMENT']].groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'CONTAINER']].groupby(by=['MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('count')

part[['TYPE', 'BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'MFGR']].groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

partsupp.merge(part[['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NAME'] != 'J') | (nation['N_NAME'].str.startswith('B')) & (nation['N_NATIONKEY'] >= 18) | (nation['N_NATIONKEY'] == 8)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_NAME', 'N_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 5253.578544556239) & (supplier['S_NATIONKEY'] >= 9) & (supplier['S_NATIONKEY'] != 19) | (supplier['S_NATIONKEY'] <= 21)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'j') & (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] < 9) | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'n') & (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_NATIONKEY', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') & (customer['C_COMMENT'] == 'l') | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == 4619.848294012275) | (customer['C_COMMENT'] == 't')][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] < 2) & (customer['C_ADDRESS'].str.startswith('M')) | (customer['C_NAME'] != 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'N_COMMENT']).agg('count')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 0) | (nation['N_REGIONKEY'] <= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_ORDERKEY'] <= 5) & (lineitem['RETURNFLAG'] != 'A')][['EXTENDEDPRICE', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'TAX']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 17) | (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['L_ORDERKEY'] != 143) | (lineitem['EXTENDEDPRICE'] > 32772.97774349156) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_COMMENT'] == 'q') & (lineitem['QUANTITY'] >= 29) | (lineitem['L_ORDERKEY'] < 35) & (lineitem['LINENUMBER'] != 1) & (lineitem['SHIPMODE'].isin(['MAIL', 'AIR']))][['L_PARTKEY', 'RECEIPTDATE', 'L_ORDERKEY', 'DISCOUNT']]

lineitem[(lineitem['QUANTITY'] < 5) & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_SUPPKEY'] < 138) | (lineitem['SHIPMODE'].isin(['AIR'])) | (lineitem['DISCOUNT'] == 0.02509394572789969) & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['TAX'] < 0.05573673465670323)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'AIR', 'RAIL', 'TRUCK'])) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['QUANTITY'] < 14) | (lineitem['DISCOUNT'] < 0.04545202866337037) | (lineitem['DISCOUNT'] >= 0.050544702348026195) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['TAX'] <= 0.048050031033573866)][['RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'QUANTITY', 'L_ORDERKEY', 'COMMITDATE']]

lineitem[(lineitem['TAX'] < 0.03555609233279408) & (lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_COMMENT'] != 'p')][['EXTENDEDPRICE', 'L_COMMENT', 'COMMITDATE', 'TAX', 'DISCOUNT']].groupby(by=['COMMITDATE', 'DISCOUNT', 'EXTENDEDPRICE']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] < 17) | (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] == 6)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 13) | (nation['N_NAME'] != 'K') | (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'SIZE', 'TYPE', 'MFGR', 'P_NAME']].groupby(by=['TYPE', 'BRAND', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'MFGR']].groupby(by=['PT_COMMENT', 'MFGR', 'SIZE', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(part[['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'e') | (nation['N_NAME'] != 'G')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 3) | (supplier['S_NATIONKEY'] != 20)][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] > 26) | (part['TYPE'] != 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1908) & (partsupp['AVAILQTY'] > 8063) | (partsupp['PS_SUPPKEY'] <= 4359) & (partsupp['PS_PARTKEY'] <= 3) & (partsupp['AVAILQTY'] < 5565)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 6742) & (partsupp['PS_PARTKEY'] <= 34) | (partsupp['AVAILQTY'] <= 9829)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 139) | (supplier['S_COMMENT'] != 't')].merge(nation[(nation['N_NAME'].str.startswith('C'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] < 4963.544542783795) & (supplier['S_ADDRESS'] != 'Q') | (supplier['S_SUPPKEY'] > 21)][['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= -106.33110606375055) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= 2080.081995229224)].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_COMMENT'] != 'n') | (supplier['S_COMMENT'] == ' sl') & (supplier['S_SUPPKEY'] >= 96)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] == 4) | (nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] <= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_NATIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 3) | (supplier['S_PHONE'] != '28-')][['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_SUPPKEY'] > 47) & (supplier['S_ACCTBAL'] >= 7115.223819917796) | (supplier['S_COMMENT'] == 'j') & (supplier['S_NATIONKEY'] >= 19)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'S_ACCTBAL', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'V') & (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'N_NATIONKEY', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 16) | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] < 926.8151195959397) | (customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] <= 43) | (customer['C_ACCTBAL'] <= 4010.061207935416) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != '0')].merge(nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'] == ' ') | (nation['N_COMMENT'] != 'u') & (nation['N_COMMENT'] != 'e')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 1) | (customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] < 1108.702488699324) & (customer['C_CUSTKEY'] > 32) | (customer['C_COMMENT'] != 'o')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 19) | (customer['C_NAME'] == 'C')][['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] >= 1) | (customer['C_ADDRESS'] == 'v')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] > 962.2603660530021) & (customer['C_ADDRESS'] != 'B')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) & (customer['C_COMMENT'] != 'w') & (customer['C_ADDRESS'] != 's') & (customer['C_CUSTKEY'] < 89) & (customer['C_CUSTKEY'] <= 28) | (customer['C_PHONE'] != '13-') | (customer['C_CUSTKEY'] > 85)].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['QUANTITY'] >= 47) | (lineitem['L_COMMENT'] != 's. ') & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['RETURNFLAG'] == 'N') | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP', 'AIR'])) & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['LINENUMBER'] > 4) | (lineitem['L_COMMENT'] == 't')][['SHIPDATE', 'L_COMMENT', 'COMMITDATE', 'RETURNFLAG', 'SHIPMODE']]

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['TAX'] >= 0.02643474209452977) & (lineitem['DISCOUNT'] < 0.03959296584838995) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['DISCOUNT'] < 0.06846668758406671)][['L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE', 'EXTENDEDPRICE']].groupby(by=['L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPDATE', 'SHIPMODE', 'COMMITDATE', 'QUANTITY', 'RETURNFLAG', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'SHIPMODE', 'O_ORDERKEY']).agg('count')

nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] <= 15) | (nation['N_REGIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_COMMENT', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] == 12) & (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 147760) & (orders['TOTALPRICE'] == 159241.92303136713) | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '5-LOW']))][['ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT']].groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#54') & (part['P_PARTKEY'] == 35) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2'])) & (part['TYPE'].str.startswith('P')) | (part['RETAILPRICE'] <= 1007.9321547313283) & (part['PT_COMMENT'] == 'k') & (part['BRAND'] == 'Brand#55')][['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']]

part[(part['PT_COMMENT'] != 'y')][['BRAND', 'TYPE', 'SIZE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'P_PARTKEY']].groupby(by=['SIZE', 'MFGR', 'P_NAME', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 'm')][['SIZE', 'TYPE', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('count')

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] == ' ')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']).agg('count')

supplier[(supplier['S_NATIONKEY'] >= 20) | (supplier['S_COMMENT'] == 'k') | (supplier['S_SUPPKEY'] < 168)][['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-'))].merge(nation[(nation['N_NATIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 2)].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'] != 's')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06')][['SHIPDATE', 'L_ORDERKEY', 'COMMITDATE', 'SHIPINSTRUCT']].merge(orders[['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'QUANTITY', 'L_COMMENT', 'L_ORDERKEY', 'RETURNFLAG', 'RECEIPTDATE', 'LINENUMBER', 'TAX']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_COMMENT', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'R_COMMENT', 'N_NATIONKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] <= 7241.562460447752)].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] != 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 'lem')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 5331) & (partsupp['SUPPLYCOST'] >= 282.37678185128294) & (partsupp['SUPPLYCOST'] != 878.4342364586732) & (partsupp['P_COMMENT'] != 'a')].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1094)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] == 'Brand#31')][['MFGR', 'PT_COMMENT', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 3279) | (partsupp['SUPPLYCOST'] > 385.3372594598548) | (partsupp['PS_SUPPKEY'] >= 4587)][['PS_PARTKEY']].merge(part[['P_NAME', 'SIZE', 'PT_COMMENT', 'MFGR', 'BRAND', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_ACCTBAL'] != 8723.707218736403) | (supplier['S_COMMENT'] == 'es ') & (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 150) | (supplier['S_NATIONKEY'] > 8)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 198) | (supplier['S_NATIONKEY'] < 23) | (supplier['S_NATIONKEY'] <= 3) & (supplier['S_SUPPKEY'] != 189) & (supplier['S_SUPPKEY'] == 180) & (supplier['S_ACCTBAL'] <= 1747.0048175048216)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'R_NAME']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'R_COMMENT', 'N_NAME', 'R_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_NAME']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'y') & (customer['C_COMMENT'] != ' ') & (customer['C_CUSTKEY'] < 5)].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_NAME'] != 'U') | (nation['N_NAME'].str.startswith('P'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'C_PHONE', 'N_REGIONKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY']].merge(orders[(orders['O_COMMENT'] == 't') & (orders['O_CUSTKEY'] > 55620) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'].str.startswith('r')) | (orders['TOTALPRICE'] > 252956.19586176556) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'] != 'O')][['SHIPPRIORITY', 'CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'SHIPINSTRUCT', 'LINENUMBER', 'SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'EXTENDEDPRICE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'SHIPMODE', 'PS_PARTKEY', 'L_SUPPKEY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] <= 17) & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'U')].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_COMMENT', 'N_NATIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 194) | (orders['O_ORDERKEY'] != 666) & (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] < '1992-01-13')][['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS']).agg('sum', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'].str.startswith('E')) | (part['BRAND'].isin(['Brand#11', 'Brand#25', 'Brand#13', 'Brand#54', 'Brand#23', 'Brand#34', 'Brand#22', 'Brand#31', 'Brand#14', 'Brand#42', 'Brand#55', 'Brand#52', 'Brand#15', 'Brand#51', 'Brand#24', 'Brand#21', 'Brand#33', 'Brand#53'])) | (part['BRAND'] != 'Brand#11') | (part['P_PARTKEY'] > 176)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'PS_SUPPKEY', 'S_ADDRESS', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 6485)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 3761) | (partsupp['AVAILQTY'] < 3767) | (partsupp['P_COMMENT'] == ',') | (partsupp['SUPPLYCOST'] > 256.20044743880135)][['PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'JUMBO') & (part['PT_COMMENT'] == '!') | (part['PT_COMMENT'] != 'q') & (part['BRAND'] != 'Brand#35') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1'])) & (part['P_NAME'].str.startswith('blu')) & (part['P_PARTKEY'] != 63)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'j') | (partsupp['P_COMMENT'] == 't') & (partsupp['PS_SUPPKEY'] >= 5730) & (partsupp['PS_SUPPKEY'] > 7089)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('l')) | (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['PS_PARTKEY'] < 41) | (partsupp['PS_PARTKEY'] > 17) | (partsupp['SUPPLYCOST'] == 441.21940617463116)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] <= 10)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 9) & (nation['N_NATIONKEY'] >= 13) & (nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_ACCTBAL'] != 9061.595783320852) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('m')) | (supplier['S_NATIONKEY'] >= 2)].merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_COMMENT'] != 'p')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 78) | (supplier['S_SUPPKEY'] < 53) | (supplier['S_NATIONKEY'] < 14) | (supplier['S_SUPPKEY'] >= 44) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('i'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL']).agg('count')

customer.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NAME'] != 'K') | (nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'C_NATIONKEY', 'R_COMMENT', 'N_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] != 97) | (customer['C_NATIONKEY'] >= 21)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_NATIONKEY', 'N_NATIONKEY', 'N_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 16) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] > 22) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'D') & (customer['C_ADDRESS'] != 'S') | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] == 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] != 3) | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 30) | (partsupp['PS_SUPPKEY'] <= 3318) | (partsupp['AVAILQTY'] <= 3786) | (partsupp['P_COMMENT'].str.startswith('k'))][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'SUPPLYCOST', 'PT_COMMENT']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'N_NATIONKEY', 'S_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 9160.704880162886) | (supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_ACCTBAL'] >= -214.56997921343475) | (supplier['S_COMMENT'] == 't') | (supplier['S_SUPPKEY'] != 44) | (supplier['S_NATIONKEY'] != 4) | (supplier['S_PHONE'].str.startswith('1'))][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'P')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 15) & (supplier['S_ADDRESS'] == 'w') | (supplier['S_ACCTBAL'] > 8045.120187756832)].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_SUPPKEY'] < 51) | (supplier['S_PHONE'] != '3') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'u') | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'n')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 48)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] < 18)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'B') & (customer['C_PHONE'] != '25-') & (customer['C_PHONE'] != '1') | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] <= 1)][['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_NAME', 'R_NAME', 'C_ACCTBAL', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-') & (customer['C_PHONE'] == '2') & (customer['C_PHONE'] != '1')][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'k') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] == 30) & (customer['C_CUSTKEY'] > 47)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] != 19) | (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 8) & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'].str.startswith('R'))][['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 224629.08983054268) | (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] == 224) | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'CLERK']].groupby(by=['CLERK', 'ORDERSTATUS']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['PT_COMMENT'].str.startswith('w')) | (part['P_NAME'].str.startswith('c')) & (part['BRAND'] != 'Brand#45') | (part['PT_COMMENT'].str.startswith('a')) | (part['BRAND'].isin(['Brand#23', 'Brand#34', 'Brand#45', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#14', 'Brand#33', 'Brand#52', 'Brand#51', 'Brand#53', 'Brand#15', 'Brand#31', 'Brand#41', 'Brand#12', 'Brand#35', 'Brand#55', 'Brand#42', 'Brand#24', 'Brand#13', 'Brand#11', 'Brand#22', 'Brand#21', 'Brand#44', 'Brand#32'])) & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] != 40) | (part['P_NAME'] == 'c')][['SIZE', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY']].groupby(by=['RETAILPRICE', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'u') | (part['SIZE'] <= 8) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) & (part['RETAILPRICE'] < 912.2622063793727) & (part['SIZE'] != 36) & (part['P_PARTKEY'] < 18) | (part['RETAILPRICE'] <= 951.9501114043427) & (part['MFGR'] != 'Manufacturer#1') | (part['TYPE'] == 'M')][['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['SIZE', 'P_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'K') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] > 3) | (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] != 15) | (nation['N_NAME'] != 'I')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_NAME', 'S_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_NATIONKEY'] >= 11) | (supplier['S_ADDRESS'] == '8') & (supplier['S_NATIONKEY'] > 6) | (supplier['S_SUPPKEY'] == 8) | (supplier['S_NATIONKEY'] < 17) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_NATIONKEY'] <= 9)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_REGIONKEY', 'R_REGIONKEY', 'C_ADDRESS', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'r') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 13) | (customer['C_ADDRESS'].str.startswith('0'))].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 26) & (customer['C_ACCTBAL'] > 527.216928874848) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_COMMENT'].str.startswith(' '))].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part[['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPMODE'] != 'FOB') | (lineitem['EXTENDEDPRICE'] > 80994.74631787995) & (lineitem['QUANTITY'] >= 30) & (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'AIR', 'REG AIR', 'SHIP', 'RAIL'])) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['QUANTITY'] >= 16) & (lineitem['COMMITDATE'] == '1998-10-16')][['L_SUPPKEY', 'DISCOUNT', 'L_COMMENT', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG']].groupby(by=['L_COMMENT', 'SHIPMODE', 'L_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'RECEIPTDATE', 'RETURNFLAG', 'L_ORDERKEY', 'L_PARTKEY', 'TAX', 'SHIPDATE', 'SHIPMODE', 'COMMITDATE', 'DISCOUNT']].merge(orders[['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'LINENUMBER', 'DISCOUNT', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 187) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 14)][['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] == 'n') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_COMMENT'] != 'i') | (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_SUPPKEY'] < 160) & (supplier['S_COMMENT'].str.startswith('x'))].merge(nation[(nation['N_NATIONKEY'] == 10) | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'] == 'A') | (nation['N_COMMENT'].str.startswith('v'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[['MFGR', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] < 15)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[['P_NAME', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['CONTAINER', 'PS_PARTKEY', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 3041) | (partsupp['AVAILQTY'] != 9033) | (partsupp['AVAILQTY'] != 8232) | (partsupp['PS_SUPPKEY'] != 6659)].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'S_PHONE', 'P_COMMENT', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 352.59882614433315) & (partsupp['P_COMMENT'] != '.') | (partsupp['AVAILQTY'] <= 931)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1060.8937129002375) | (part['SIZE'] > 17) | (part['P_NAME'] != 'i') & (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'].str.startswith('a')) & (part['RETAILPRICE'] != 1005.0089778997453) & (part['BRAND'] == 'Brand#34')][['SIZE', 'P_NAME', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_SUPPKEY'] != 150) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '2') | (supplier['S_PHONE'].str.startswith('17-'))][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ADDRESS'] != 'T') | (supplier['S_ACCTBAL'] > 3697.265302754845) & (supplier['S_SUPPKEY'] != 101) | (supplier['S_ADDRESS'] != 'd') | (supplier['S_ACCTBAL'] != 5505.716582354983) | (supplier['S_SUPPKEY'] == 183)].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'd') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= -131.59402807095364) | (supplier['S_ADDRESS'].str.startswith('I')) | (supplier['S_NATIONKEY'] != 10) & (supplier['S_ACCTBAL'] == 4582.1573300476575) | (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']].groupby(by=['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 9) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '26-')].merge(nation.merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_ADDRESS'] == '1') | (supplier['S_NATIONKEY'] <= 2) | (supplier['S_COMMENT'] != 'f') | (supplier['S_SUPPKEY'] != 112) | (supplier['S_PHONE'] == '1')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']).agg('count')

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_SUPPKEY'] == 146) | (supplier['S_ADDRESS'] != 'M') & (supplier['S_ADDRESS'].str.startswith('a'))][['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] > 5)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'd') & (customer['C_ACCTBAL'] != 5296.084991521176) | (customer['C_ACCTBAL'] < 1976.8512565976898) & (customer['C_PHONE'] == '13-') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 21) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] > 20) & (customer['C_ADDRESS'].str.startswith('q'))][['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 74) | (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '2') & (customer['C_PHONE'] != '13-') & (customer['C_ADDRESS'] != 'n')].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] <= 15) | (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') & (customer['C_PHONE'].str.startswith('25-')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] != 4)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'C_CUSTKEY', 'C_PHONE', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] == 16) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'e')].merge(part[(part['BRAND'] != 'Brand#15') | (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'].str.startswith('E')) | (part['TYPE'].str.startswith('S')) & (part['BRAND'].isin(['Brand#13', 'Brand#11', 'Brand#33', 'Brand#15', 'Brand#22', 'Brand#14', 'Brand#44', 'Brand#53', 'Brand#23', 'Brand#24', 'Brand#52', 'Brand#32', 'Brand#12']))][['P_NAME', 'BRAND', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

part[(part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] == 'c') | (part['BRAND'] != 'Brand#11') & (part['RETAILPRICE'] == 1040.448577859486) & (part['P_NAME'].str.startswith('k')) & (part['PT_COMMENT'] == 'e') | (part['TYPE'] != 'M') & (part['SIZE'] < 42) | (part['CONTAINER'] == 'MED')][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'MFGR', 'BRAND']].groupby(by=['CONTAINER', 'MFGR']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 13) | (supplier['S_ACCTBAL'] < 2693.5863360876674) | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_COMMENT'] == 'o') & (supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_PHONE'] != '17-') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 42)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_NATIONKEY'] == 23)].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 405) & (partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['P_COMMENT'] != '.')].merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_PHONE'] == '2') & (supplier['S_ADDRESS'] == 'm') | (supplier['S_SUPPKEY'] > 129) | (supplier['S_SUPPKEY'] <= 122)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) & (part['TYPE'].str.startswith('L')) | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'x') | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ADDRESS'] != '5') & (supplier['S_ADDRESS'] != 'i') & (supplier['S_PHONE'].str.startswith('17-'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'R_COMMENT', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_ACCTBAL'] <= 9659.49585631666) & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'bli')].merge(nation[(nation['N_NATIONKEY'] > 4) & (nation['N_NATIONKEY'] < 10) | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('g')) | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 160)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'S_PHONE', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'S_ADDRESS', 'R_NAME', 'R_COMMENT', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_NAME', 'R_REGIONKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'N_NATIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] >= 1)][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'R_REGIONKEY', 'N_REGIONKEY', 'C_PHONE', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'] != 'h')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['TAX'] <= 0.019591238252106864) & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['L_PARTKEY'] <= 182291) | (lineitem['EXTENDEDPRICE'] > 19011.548169713282) & (lineitem['DISCOUNT'] < 0.026757745300118096) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['DISCOUNT'] <= 0.003710599610023258)][['RETURNFLAG', 'QUANTITY', 'COMMITDATE', 'EXTENDEDPRICE', 'TAX', 'DISCOUNT']].groupby(by=['RETURNFLAG', 'QUANTITY', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'v') & (lineitem['QUANTITY'] <= 4) | (lineitem['L_SUPPKEY'] != 1625) & (lineitem['RECEIPTDATE'] <= '1992-05-02')][['SHIPDATE', 'COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT', 'LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'LINENUMBER']].groupby(by=['COMMITDATE', 'DISCOUNT', 'LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'QUANTITY', 'L_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 4) | (nation['N_COMMENT'] != 'h')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'] != 'Manufacturer#3') | (part['MFGR'].isin(['Manufacturer#1'])) & (part['P_NAME'] != 'h') & (part['P_NAME'].str.startswith('f')) | (part['BRAND'] == 'Brand#32')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 15) | (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_COMMENT'] == 'g') | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NATIONKEY'] <= 3)].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 6464) & (partsupp['PS_SUPPKEY'] < 4342)].merge(part[(part['RETAILPRICE'] < 976.8961330614247) & (part['TYPE'] == 'M') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1'])) & (part['P_NAME'].str.startswith('w')) | (part['BRAND'] == 'Brand#51') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'].str.startswith('o')) | (part['P_PARTKEY'] >= 25) & (part['P_NAME'] == 'r')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 7445) | (partsupp['PS_SUPPKEY'] > 5115) | (partsupp['SUPPLYCOST'] <= 862.6823573776312) & (partsupp['SUPPLYCOST'] < 540.1989734703891) & (partsupp['AVAILQTY'] <= 5257)][['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'm') & (part['TYPE'] != 'L') & (part['RETAILPRICE'] >= 941.8214900924572) | (part['P_NAME'] != 'y')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 775.4731738112716)].merge(supplier[(supplier['S_NATIONKEY'] != 5) & (supplier['S_ADDRESS'] != 'f')][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 941.570103023692)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['TYPE', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(part[['BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'PS_PARTKEY', 'MFGR', 'SUPPLYCOST']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] >= 8) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'R_REGIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 112) | (supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 1) | (supplier['S_ACCTBAL'] >= 6270.471539753532) & (supplier['S_SUPPKEY'] <= 77)].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] == 14)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 19) | (nation['N_NATIONKEY'] < 3) & (nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'S_PHONE', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'].str.startswith(',')) & (customer['C_ACCTBAL'] > -59.904624482650775) | (customer['C_NATIONKEY'] == 15)][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] >= 49) & (customer['C_CUSTKEY'] >= 41) | (customer['C_ACCTBAL'] <= 5878.8555751651165) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] == 5) & (customer['C_ADDRESS'] != 'M') & (customer['C_ACCTBAL'] == 360.30370074367715)].merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'C_COMMENT']).agg('min', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 0) | (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'C_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 3123) | (partsupp['SUPPLYCOST'] >= 280.7714309843933) | (partsupp['PS_PARTKEY'] != 44)].merge(supplier[(supplier['S_NATIONKEY'] < 23) | (supplier['S_ACCTBAL'] >= 7564.322348814568) | (supplier['S_ADDRESS'] != 'p') | (supplier['S_SUPPKEY'] > 7)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] != 'q')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'P_NAME', 'S_ACCTBAL']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'LINENUMBER', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE']].merge(orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERSTATUS'].isin(['P', 'O']))][['ORDERDATE', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['EXTENDEDPRICE', 'L_COMMENT', 'L_ORDERKEY', 'COMMITDATE']).agg('count')

nation[(nation['N_NATIONKEY'] <= 0) | (nation['N_NATIONKEY'] > 14)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'R_REGIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

part[(part['P_PARTKEY'] >= 100) | (part['PT_COMMENT'].str.startswith('i')) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) & (part['BRAND'] == 'Brand#31') | (part['TYPE'] == 'M') & (part['PT_COMMENT'].str.startswith('!')) & (part['BRAND'] == 'Brand#41') | (part['RETAILPRICE'] != 1035.0285808597735)][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[['TYPE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 49)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 2140) | (partsupp['PS_SUPPKEY'] <= 1946) & (partsupp['PS_SUPPKEY'] <= 1062) | (partsupp['PS_PARTKEY'] >= 2)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 6998)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ACCTBAL'] < 5443.523978116031) | (supplier['S_COMMENT'] == 'r') | (supplier['S_PHONE'] != '1') & (supplier['S_PHONE'] == '32-') | (supplier['S_NATIONKEY'] != 23)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 't') & (partsupp['AVAILQTY'] != 4199)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'P_PARTKEY', 'BRAND']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] >= 712.2428611523815) | (partsupp['SUPPLYCOST'] != 536.0809705533071) | (partsupp['P_COMMENT'] == 'bli')][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] <= 1060.3677731775845) & (part['P_PARTKEY'] <= 124)][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_ACCTBAL'] <= 3070.136685122793) | (supplier['S_NATIONKEY'] <= 12) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '32-')].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '32-') & (supplier['S_SUPPKEY'] > 86) | (supplier['S_ACCTBAL'] > 7888.507880974202) | (supplier['S_ACCTBAL'] >= 4396.935038446773)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 15) & (nation['N_COMMENT'] != 'r')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_ADDRESS'] != 'f') & (supplier['S_COMMENT'] != 'bli')][['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 1055.9185630024867) & (customer['C_ACCTBAL'] > -697.1085681642592) & (customer['C_COMMENT'] == 'p') & (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] < 31)][['C_NATIONKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 53) & (customer['C_CUSTKEY'] == 28) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 80) | (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] != 'b') | (customer['C_NATIONKEY'] >= 19) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_COMMENT'] != 'p') & (customer['C_NATIONKEY'] > 9) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] > 2) | (nation['N_COMMENT'] != 'a') & (nation['N_NAME'] != 'E')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_ADDRESS'] == 'e') | (customer['C_COMMENT'] != 'c')].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_COMMENT'] != 'l')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] == 15) & (nation['N_COMMENT'] != 't') | (nation['N_COMMENT'] == 't')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'C_NAME', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'].isin(['Brand#53', 'Brand#11', 'Brand#41', 'Brand#31', 'Brand#54', 'Brand#45', 'Brand#12', 'Brand#22', 'Brand#43', 'Brand#55', 'Brand#44', 'Brand#13', 'Brand#21', 'Brand#15', 'Brand#23', 'Brand#14', 'Brand#24', 'Brand#35'])) & (part['BRAND'] != 'Brand#25') | (part['PT_COMMENT'] == 'l') & (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] <= 125) & (part['P_NAME'].str.startswith('f')) | (part['SIZE'] == 8)][['BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['TAX', 'RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY']].merge(orders[(orders['TOTALPRICE'] < 36085.144568268064) & (orders['O_ORDERKEY'] < 28) & (orders['TOTALPRICE'] >= 172698.3701951174) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] < 437)][['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['AVAILQTY'] >= 2309) & (partsupp['AVAILQTY'] > 4389)].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['SIZE'] >= 42) & (part['P_NAME'].str.startswith('bis')) | (part['BRAND'] == 'Brand#32') | (part['BRAND'] != 'Brand#22') | (part['PT_COMMENT'] == ' ') | (part['CONTAINER'] == 'LG') & (part['BRAND'].isin(['Brand#42', 'Brand#55', 'Brand#41', 'Brand#32', 'Brand#23', 'Brand#45', 'Brand#12', 'Brand#52', 'Brand#21', 'Brand#35', 'Brand#31', 'Brand#43', 'Brand#44']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 16) | (partsupp['PS_SUPPKEY'] < 48) | (partsupp['SUPPLYCOST'] == 677.2931391236574)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 412.34927205410713) | (supplier['S_NATIONKEY'] >= 14) & (supplier['S_SUPPKEY'] < 104) | (supplier['S_COMMENT'] == 'b') & (supplier['S_PHONE'] == '1') | (supplier['S_COMMENT'].str.startswith('d'))][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 673.8305277503944)].merge(part[(part['SIZE'] < 16) | (part['BRAND'].isin(['Brand#25'])) | (part['P_PARTKEY'] != 29) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] >= 2) & (part['MFGR'] == 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 265.79809898176984) | (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['AVAILQTY'] != 9206) | (partsupp['PS_SUPPKEY'] >= 6094)].merge(part[(part['RETAILPRICE'] > 919.8447515280685) & (part['SIZE'] >= 41) & (part['RETAILPRICE'] != 981.1358019681617) | (part['PT_COMMENT'] == 'p') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['RETAILPRICE']).agg('count')

customer[(customer['C_ACCTBAL'] <= 7860.240843885222) | (customer['C_ACCTBAL'] > 2845.7375378077672) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 7) | (customer['C_COMMENT'] == ' ') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith('e'))][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'a') | (customer['C_COMMENT'] != ' ')][['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'] != 'c') & (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('S')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) | (customer['C_COMMENT'].str.startswith('r')) & (customer['C_PHONE'] == '2') & (customer['C_ADDRESS'].str.startswith('Y')) & (customer['C_ADDRESS'].str.startswith('e'))].merge(nation[(nation['N_NATIONKEY'] < 20) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_REGIONKEY', 'C_COMMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] > 3292.241853751856) & (customer['C_PHONE'] != '18-') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY'])) | (customer['C_NATIONKEY'] > 21) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD']))][['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'N_NAME', 'C_NATIONKEY']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['TYPE', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] < 148116) & (orders['O_ORDERKEY'] != 593) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_CUSTKEY'] == 75461) | (orders['O_COMMENT'].str.startswith('k'))][['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(part[(part['SIZE'] != 3) & (part['PT_COMMENT'] != 'r')], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 19) & (supplier['S_ADDRESS'] != 't') | (supplier['S_SUPPKEY'] <= 55) & (supplier['S_ADDRESS'] != 'D')][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'B') | (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 1) | (supplier['S_NATIONKEY'] == 11)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] == 'L') & (part['BRAND'].isin(['Brand#21', 'Brand#52', 'Brand#44', 'Brand#11', 'Brand#22', 'Brand#13'])) & (part['SIZE'] != 21) | (part['SIZE'] > 27) & (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] != 'Brand#32') & (part['BRAND'] != 'Brand#51') | (part['PT_COMMENT'] == 'a') & (part['P_PARTKEY'] == 136)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 40) & (partsupp['PS_PARTKEY'] == 37) | (partsupp['SUPPLYCOST'] > 449.371881983014) & (partsupp['AVAILQTY'] == 772) & (partsupp['AVAILQTY'] > 6012)].merge(supplier[(supplier['S_NATIONKEY'] != 21) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_SUPPKEY'] <= 18) | (supplier['S_ACCTBAL'] < 9230.653440095597) | (supplier['S_COMMENT'] == 's') | (supplier['S_SUPPKEY'] > 55)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_ACCTBAL', 'P_NAME', 'S_ADDRESS', 'SIZE']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 12) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'U') & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'].str.startswith('b')) & (supplier['S_SUPPKEY'] == 99) | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'R_NAME', 'S_PHONE', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 18) | (supplier['S_SUPPKEY'] == 56) | (supplier['S_ADDRESS'].str.startswith('f')) & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ACCTBAL'] != 287.0278644898615) | (supplier['S_ADDRESS'] != '3') & (supplier['S_ADDRESS'] == 'z')].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_COMMENT'] == 'i') | (supplier['S_ACCTBAL'] == 9389.687479796292)][['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_COMMENT'] != 'n') & (supplier['S_ACCTBAL'] >= 2577.5248964912225)][['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_ADDRESS'] != 'Q') | (supplier['S_NATIONKEY'] <= 0) & (supplier['S_NATIONKEY'] == 11)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 5) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_NAME'] != 'S')].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_REGIONKEY', 'C_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_PARTKEY'] >= 144154) | (lineitem['L_ORDERKEY'] != 110) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['EXTENDEDPRICE'] <= 35972.060151247686) & (lineitem['L_PARTKEY'] > 23902)].merge(orders[['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['QUANTITY'] < 18) | (lineitem['TAX'] <= 0.020473831535604187) & (lineitem['L_COMMENT'] != 'n') & (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL'])) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) | (lineitem['SHIPDATE'] != '1998-10-30')][['LINESTATUS', 'SHIPMODE', 'SHIPINSTRUCT', 'SHIPDATE', 'EXTENDEDPRICE', 'L_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['EXTENDEDPRICE']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_COMMENT'] == 'l') | (supplier['S_SUPPKEY'] != 135) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 10) | (supplier['S_NATIONKEY'] >= 16)][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_NATIONKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 2) & (supplier['S_NATIONKEY'] < 21) | (supplier['S_NATIONKEY'] != 16) & (supplier['S_ADDRESS'] == '5') | (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'] != '0')][['S_PHONE', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] != 22)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'L_SUPPKEY', 'SHIPMODE', 'SHIPDATE', 'L_COMMENT', 'RECEIPTDATE', 'DISCOUNT', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 8774) & (partsupp['PS_SUPPKEY'] == 4597) | (partsupp['PS_SUPPKEY'] != 5436) & (partsupp['AVAILQTY'] <= 9754) | (partsupp['P_COMMENT'] == 'e')].merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 1405) & (partsupp['PS_PARTKEY'] <= 40) | (partsupp['PS_SUPPKEY'] != 2403) | (partsupp['SUPPLYCOST'] < 859.5130482086455)].merge(part[(part['RETAILPRICE'] != 1024.498340667922) & (part['TYPE'] != 'STA') & (part['SIZE'] <= 11) | (part['P_NAME'].str.startswith('y')) & (part['P_NAME'] == 's') & (part['RETAILPRICE'] == 1090.8503946713035) & (part['P_PARTKEY'] != 38) & (part['P_NAME'] != 'f')][['MFGR', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 19) | (partsupp['SUPPLYCOST'] > 570.351910060028)].merge(supplier[(supplier['S_SUPPKEY'] > 109) | (supplier['S_ACCTBAL'] <= 5342.224091487256) | (supplier['S_NATIONKEY'] <= 8) | (supplier['S_SUPPKEY'] == 33) & (supplier['S_ACCTBAL'] == 8331.052881483625) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_NATIONKEY'] == 1) | (nation['N_NATIONKEY'] < 12)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['SIZE', 'MFGR', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_SUPPKEY'] > 3) | (partsupp['SUPPLYCOST'] <= 974.8077262766597) | (partsupp['AVAILQTY'] > 6975)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'U') | (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_ADDRESS'] != 'I')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'S_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['P_COMMENT'] != 'x') & (partsupp['AVAILQTY'] != 1122)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 801.9917190210604) & (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] < 12) | (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 924.221333950369) | (partsupp['PS_PARTKEY'] > 6)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_SUPPKEY'] <= 46) & (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'].str.startswith('32-'))][['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'SUPPLYCOST', 'PS_SUPPKEY', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != 870.3918833085797) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 147) | (supplier['S_SUPPKEY'] >= 87) | (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] >= 2105.434360486038)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 6) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] <= 19) & (customer['C_ADDRESS'].str.startswith('z')) & (customer['C_ADDRESS'].str.startswith('c')) | (customer['C_NATIONKEY'] >= 13) | (customer['C_NATIONKEY'] > 3)].merge(nation[(nation['N_REGIONKEY'] != 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['DISCOUNT'] < 0.03905943096718804) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] != 6) | (lineitem['L_SUPPKEY'] >= 8776) | (lineitem['L_ORDERKEY'] == 67) & (lineitem['DISCOUNT'] <= 0.056235252446761974) & (lineitem['QUANTITY'] < 49)][['QUANTITY', 'SHIPMODE', 'TAX', 'COMMITDATE', 'RETURNFLAG', 'LINENUMBER', 'LINESTATUS', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['O_ORDERKEY'] < 359) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == ',') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] != 'F')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'TAX', 'DISCOUNT', 'RECEIPTDATE', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'COMMITDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['PS_SUPPKEY'] < 2633)].merge(part[(part['SIZE'] > 5) & (part['SIZE'] >= 43)][['RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 3401) & (partsupp['AVAILQTY'] == 1575) | (partsupp['PS_SUPPKEY'] <= 7008) | (partsupp['PS_PARTKEY'] < 4) & (partsupp['AVAILQTY'] != 2153)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] > 954.9917360563252) | (part['BRAND'] == 'Brand#44') | (part['CONTAINER'] != 'JUMBO') | (part['P_PARTKEY'] != 42) & (part['MFGR'] != 'Manufacturer#5')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1221) & (partsupp['PS_PARTKEY'] >= 30) | (partsupp['P_COMMENT'] == 't') & (partsupp['PS_SUPPKEY'] <= 5096)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 'h') | (part['P_PARTKEY'] == 193) | (part['CONTAINER'] == 'SM') | (part['P_NAME'] == 't') & (part['RETAILPRICE'] > 967.5625171456211) & (part['BRAND'].isin(['Brand#53', 'Brand#25', 'Brand#33', 'Brand#45', 'Brand#41', 'Brand#32', 'Brand#15', 'Brand#24', 'Brand#34', 'Brand#13', 'Brand#55', 'Brand#14', 'Brand#44', 'Brand#43', 'Brand#21', 'Brand#35', 'Brand#31', 'Brand#54', 'Brand#22'])) | (part['TYPE'] == 'M')][['P_PARTKEY', 'TYPE', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'CONTAINER', 'N_REGIONKEY', 'MFGR', 'TYPE']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 7724.265854064391) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != 1727.8889309797476)][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'].str.startswith('N'))][['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'R_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 93) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_SUPPKEY'] > 87) | (supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'] != 'l') | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'R_REGIONKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '1') & (customer['C_ADDRESS'].str.startswith('f')) | (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('u'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY', 'N_NATIONKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 28) | (partsupp['AVAILQTY'] > 1594) | (partsupp['SUPPLYCOST'] > 247.08533251768722) | (partsupp['AVAILQTY'] != 1502) & (partsupp['PS_SUPPKEY'] < 4606)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] > 5551) | (lineitem['TAX'] != 0.05972550354271307) & (lineitem['QUANTITY'] >= 25) & (lineitem['DISCOUNT'] <= 0.01685209279442833) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['RETURNFLAG'].isin(['R', 'A'])) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['SHIPDATE'] <= '1992-04-27')][['DISCOUNT', 'L_SUPPKEY', 'LINESTATUS', 'SHIPMODE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] == 6199) | (partsupp['SUPPLYCOST'] != 311.9379455314022) | (partsupp['P_COMMENT'].str.startswith('h'))], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[['TAX', 'L_ORDERKEY', 'L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG', 'DISCOUNT']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_CUSTKEY'] <= 134501) & (orders['O_COMMENT'] == '-') | (orders['O_ORDERKEY'] >= 110) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) | (orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] > 92369.41774747825)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['AVAILQTY'] >= 1462)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'q') & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] >= 0) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 89)][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 787.4671696090159) & (partsupp['PS_PARTKEY'] != 8) & (partsupp['AVAILQTY'] >= 8011)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['BRAND'] != 'Brand#22') | (part['CONTAINER'] != 'SM') | (part['MFGR'].isin(['Manufacturer#5'])) & (part['P_PARTKEY'] < 24) & (part['P_PARTKEY'] >= 141) | (part['P_PARTKEY'] > 104) & (part['P_NAME'] != 'o')][['TYPE', 'BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'JUMBO') | (part['P_PARTKEY'] > 174) | (part['MFGR'] == 'Manufacturer#4') & (part['CONTAINER'] == 'JUMBO') | (part['BRAND'] != 'Brand#55') | (part['PT_COMMENT'].str.startswith('k')) & (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] >= 3)], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_NAME', 'TYPE', 'P_PARTKEY']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('6')) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] > 7438.151825984403) | (customer['C_PHONE'] != '3') | (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('g'))][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'a')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 4) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] < 4301.143395963137)][['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['MKTSEGMENT', 'N_COMMENT', 'C_ACCTBAL', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 354) & (lineitem['L_PARTKEY'] < 1809) | (lineitem['L_PARTKEY'] <= 119445) & (lineitem['SHIPMODE'].isin(['TRUCK']))][['DISCOUNT', 'SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'QUANTITY', 'LINENUMBER', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['DISCOUNT', 'SHIPDATE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 699.8627860949896) | (partsupp['PS_SUPPKEY'] <= 1755) & (partsupp['AVAILQTY'] < 6310) | (partsupp['P_COMMENT'] != 'a') | (partsupp['PS_PARTKEY'] <= 2)].merge(supplier[(supplier['S_SUPPKEY'] > 162)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'] != 'Brand#22') & (part['PT_COMMENT'] != 'w') | (part['BRAND'] != 'Brand#34') | (part['SIZE'] == 23) | (part['P_NAME'].str.startswith('blu')) & (part['P_NAME'] == 'w')][['MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 14)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'C_CUSTKEY', 'R_COMMENT', 'C_PHONE', 'C_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] > 940.4414030720526) | (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] == 1012.5804049096776) | (part['SIZE'] == 30) & (part['MFGR'] != 'Manufacturer#4')][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] == 71) | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == '.') & (supplier['S_SUPPKEY'] > 167) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '1')].merge(nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_NATIONKEY'] == 5)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 9)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '32-') | (supplier['S_ADDRESS'] != 'M') & (supplier['S_PHONE'] == '17-') & (supplier['S_ADDRESS'] == '7') & (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['BRAND', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] == 57) | (supplier['S_COMMENT'] != 'n') & (supplier['S_NATIONKEY'] >= 8) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '17-')][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_PARTKEY', 'P_NAME', 'P_COMMENT', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 190) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 10) | (supplier['S_ADDRESS'] == 'S') | (supplier['S_ADDRESS'] != 'B')][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 5) | (nation['N_NATIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 19) & (nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'N_COMMENT', 'R_COMMENT']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON'])) & (lineitem['DISCOUNT'] == 0.01944756025457626) | (lineitem['TAX'] >= 0.0317609977192424) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_ORDERKEY'] >= 75) | (lineitem['L_PARTKEY'] == 124392) & (lineitem['QUANTITY'] < 24) | (lineitem['L_SUPPKEY'] != 1795)].merge(orders[['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp.merge(part[(part['CONTAINER'] != 'SM') & (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] != 'Brand#33')][['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SIZE']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 765) | (partsupp['AVAILQTY'] > 8163)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] != 'a') & (supplier['S_ACCTBAL'] <= 9635.859914497418)][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

customer[(customer['C_COMMENT'] != 'l') | (customer['C_CUSTKEY'] <= 98) & (customer['C_ADDRESS'].str.startswith('8')) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'N_NAME', 'R_REGIONKEY', 'R_COMMENT', 'C_ACCTBAL']).agg('count')

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['TAX'] < 0.07342381664100138) & (lineitem['DISCOUNT'] == 0.06999240412768602) | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['TAX'] >= 0.03482456571030263) & (lineitem['L_PARTKEY'] > 67842) | (lineitem['TAX'] >= 0.04706030798827715)].merge(partsupp[(partsupp['P_COMMENT'] == 'bli') & (partsupp['P_COMMENT'] == 'b') | (partsupp['AVAILQTY'] >= 6386)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['AVAILQTY'] <= 5578)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 12) | (nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'S_NATIONKEY', 'R_REGIONKEY', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 7978)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] == 0) | (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6559) & (partsupp['PS_SUPPKEY'] == 4868) & (partsupp['SUPPLYCOST'] != 857.9703228003742) & (partsupp['AVAILQTY'] == 3152) | (partsupp['AVAILQTY'] < 2414)].merge(supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_SUPPKEY'] != 65) & (supplier['S_ADDRESS'].str.startswith('n')) & (supplier['S_ADDRESS'].str.startswith('F')) | (supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_NATIONKEY'] < 1)][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['SIZE'] <= 31) | (part['SIZE'] < 38) & (part['CONTAINER'].str.startswith('MED')) | (part['TYPE'].str.startswith('M')) & (part['P_NAME'] == 'cor') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1']))][['TYPE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'] != 'J') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '1') | (supplier['S_ACCTBAL'] < 3207.3963649498664)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NATIONKEY', 'MFGR', 'S_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 25) | (customer['C_ACCTBAL'] < 2283.8757025086175) | (customer['C_NATIONKEY'] < 9) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_ADDRESS'].str.startswith('h')) & (customer['C_COMMENT'] == 'k')][['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] < 2) | (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'].str.startswith('t'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'N_NAME', 'C_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '2') & (customer['C_NATIONKEY'] == 3) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] > 20)][['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] <= 20)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.012625939777091389) & (lineitem['QUANTITY'] != 12) & (lineitem['DISCOUNT'] == 0.041720276085150027) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['DISCOUNT'] <= 0.048859595981372066)][['LINESTATUS', 'TAX', 'EXTENDEDPRICE', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPMODE', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 554.358878665256) & (partsupp['AVAILQTY'] != 311)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 31) | (partsupp['PS_PARTKEY'] != 18) & (partsupp['SUPPLYCOST'] > 59.9671260359295)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_PARTKEY', 'P_COMMENT', 'PS_PARTKEY', 'S_PHONE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 4534) & (partsupp['PS_PARTKEY'] != 34) & (partsupp['AVAILQTY'] <= 2346) | (partsupp['SUPPLYCOST'] != 369.05084440823816)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['TYPE'] != 'M') & (part['P_PARTKEY'] == 157) | (part['P_NAME'] != 'w') | (part['P_NAME'] != 'i') | (part['SIZE'] != 13)][['BRAND', 'SIZE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 2996) | (partsupp['SUPPLYCOST'] > 507.26605446738415) | (partsupp['AVAILQTY'] == 5404) & (partsupp['AVAILQTY'] < 9713) & (partsupp['PS_SUPPKEY'] < 5870)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_ADDRESS'].str.startswith('i')) | (supplier['S_ACCTBAL'] <= 3256.9380026676617) | (supplier['S_ADDRESS'] != 'l')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['MFGR', 'PS_PARTKEY', 'CONTAINER', 'P_NAME', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 726.8386600481459) & (partsupp['AVAILQTY'] >= 7444) & (partsupp['SUPPLYCOST'] > 188.34999557244197)].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'] != 'c') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) | (part['SIZE'] >= 17) | (part['CONTAINER'] == 'SM') | (part['P_PARTKEY'] > 24) & (part['P_PARTKEY'] > 70) | (part['TYPE'].str.startswith('P')) | (part['TYPE'] != 'L')][['MFGR', 'P_PARTKEY', 'BRAND', 'SIZE', 'CONTAINER', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'K') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '13-') | (customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'] != 'y') | (customer['MKTSEGMENT'] == 'BUILDING')][['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_PHONE']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'N_REGIONKEY', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 173) | (supplier['S_PHONE'] != '26-') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'w') & (supplier['S_ADDRESS'].str.startswith('a'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 8838.14575019821) | (supplier['S_NATIONKEY'] > 16) | (supplier['S_PHONE'] != '2') & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ADDRESS'] != 'p') | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 22)].merge(nation[(nation['N_NATIONKEY'] == 15) | (nation['N_NAME'] == 'V') | (nation['N_NATIONKEY'] != 13) | (nation['N_NAME'].str.startswith('R'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['DISCOUNT'] >= 0.04996465176583134) & (lineitem['SHIPMODE'] != 'SHIP')].merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 20) | (supplier['S_ADDRESS'] == 'O')][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 5) | (nation['N_NATIONKEY'] <= 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] == 189) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('y')) & (part['BRAND'].isin(['Brand#51', 'Brand#35', 'Brand#34', 'Brand#21', 'Brand#12', 'Brand#23', 'Brand#13', 'Brand#32'])) | (part['P_PARTKEY'] > 79) | (part['P_PARTKEY'] > 169) | (part['P_PARTKEY'] != 85)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 567.6669780285584) & (partsupp['PS_PARTKEY'] >= 3)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] > 947.8116640481844) | (part['SIZE'] == 42) | (part['TYPE'] == 'SMA') & (part['MFGR'].isin(['Manufacturer#2'])) | (part['CONTAINER'] == 'JUMBO') | (part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] == 948.4657977805476) & (part['SIZE'] == 16) | (part['P_PARTKEY'] > 163)][['P_NAME', 'TYPE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'AVAILQTY', 'BRAND', 'SUPPLYCOST']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] < 21) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] != 5)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE', 'SHIPDATE', 'L_COMMENT', 'COMMITDATE', 'L_SUPPKEY', 'RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 6417) | (partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['PS_PARTKEY'] < 35) & (partsupp['SUPPLYCOST'] != 722.2593214212897) | (partsupp['AVAILQTY'] > 2569)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['PS_PARTKEY'] != 46) | (partsupp['PS_PARTKEY'] == 33) & (partsupp['AVAILQTY'] >= 7048)].merge(supplier[(supplier['S_SUPPKEY'] < 85) | (supplier['S_SUPPKEY'] >= 180) | (supplier['S_NATIONKEY'] < 4) & (supplier['S_COMMENT'].str.startswith(' '))][['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['PT_COMMENT'].str.startswith('n')) & (part['BRAND'].isin(['Brand#52', 'Brand#15'])) | (part['SIZE'] >= 11) & (part['MFGR'].isin(['Manufacturer#1'])) & (part['P_PARTKEY'] > 25) | (part['P_PARTKEY'] != 43)][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1518) | (partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['SUPPLYCOST'] > 331.41882806223254) | (partsupp['PS_PARTKEY'] >= 10) | (partsupp['P_COMMENT'].str.startswith('y'))].merge(part[['P_PARTKEY', 'BRAND', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('u'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'P_PARTKEY', 'S_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 196) | (partsupp['SUPPLYCOST'] <= 851.6575789157754) | (partsupp['PS_SUPPKEY'] < 434)].merge(supplier[(supplier['S_NATIONKEY'] > 17) & (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] >= 11) | (supplier['S_ADDRESS'] != 'o') & (supplier['S_SUPPKEY'] != 114)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] != 'MED') & (part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] != 'm') & (part['SIZE'] >= 6) | (part['PT_COMMENT'] == 'i') | (part['RETAILPRICE'] != 937.3499326275526) & (part['P_PARTKEY'] == 140)][['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('p')) | (partsupp['SUPPLYCOST'] > 917.0521401079371) & (partsupp['PS_SUPPKEY'] <= 2019)].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'] != 'p')][['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_COMMENT', 'PS_PARTKEY', 'S_ADDRESS', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem[['TAX', 'L_COMMENT', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG', 'L_SUPPKEY', 'SHIPDATE', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 1852) | (partsupp['PS_PARTKEY'] <= 3)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['SIZE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] != 'bli') | (supplier['S_COMMENT'] != 'es ') & (supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_NATIONKEY'] >= 9) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'] != 'G') & (supplier['S_ADDRESS'].str.startswith('s'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 83) | (lineitem['EXTENDEDPRICE'] == 5648.687171004436) & (lineitem['EXTENDEDPRICE'] != 81647.8951879585) | (lineitem['DISCOUNT'] != 0.010643486560140204)][['COMMITDATE', 'QUANTITY', 'L_COMMENT', 'RETURNFLAG', 'SHIPMODE', 'L_SUPPKEY', 'TAX', 'DISCOUNT', 'EXTENDEDPRICE']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['MFGR', 'RETAILPRICE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'TAX']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 21) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_COMMENT'].str.startswith('q')) | (lineitem['EXTENDEDPRICE'] > 36978.29643252474) & (lineitem['TAX'] < 0.024210724127590427)].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] != 125) & (part['P_PARTKEY'] <= 150) & (part['RETAILPRICE'] > 988.7002179073655)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'n') | (partsupp['AVAILQTY'] < 2441) & (partsupp['PS_PARTKEY'] == 43) | (partsupp['PS_SUPPKEY'] < 7168)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'] == 's')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'S_ADDRESS', 'R_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'QUANTITY', 'TAX', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPMODE', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != 'x') & (partsupp['AVAILQTY'] < 5420) | (partsupp['AVAILQTY'] > 3823) | (partsupp['SUPPLYCOST'] == 588.0196598208448)].merge(supplier[(supplier['S_SUPPKEY'] >= 77) & (supplier['S_ADDRESS'] == 'E') & (supplier['S_PHONE'] == '3') & (supplier['S_ACCTBAL'] >= 5988.320975362341) | (supplier['S_ACCTBAL'] >= 5702.286505812693) | (supplier['S_NATIONKEY'] != 17)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NATIONKEY'] != 19)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['BRAND'].isin(['Brand#24', 'Brand#41'])) & (part['PT_COMMENT'].str.startswith('s')) & (part['TYPE'] == 'E') & (part['P_PARTKEY'] < 169) & (part['P_PARTKEY'] < 143) & (part['P_PARTKEY'] != 35) | (part['MFGR'] == 'Manufacturer#5') & (part['P_PARTKEY'] != 74)][['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['S_ADDRESS', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 829.2019164131909) & (partsupp['SUPPLYCOST'] > 241.06427177576003)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'SUPPLYCOST', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] >= 4980.0461524559005) | (supplier['S_NATIONKEY'] > 19)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_NAME'] != 'r') | (part['P_NAME'] != 'a') | (part['RETAILPRICE'] == 941.0121773181608) & (part['RETAILPRICE'] < 952.529296725502) & (part['SIZE'] <= 40) & (part['P_NAME'] == 'cor')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY', 'MFGR', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F']))][['QUANTITY', 'L_SUPPKEY', 'SHIPDATE', 'EXTENDEDPRICE', 'L_COMMENT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_PARTKEY'] != 24)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'P') | (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] == 'JUMBO') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) | (part['P_NAME'].str.startswith('h'))][['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_COMMENT'] != 'c') & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_COMMENT'].str.startswith('y')) & (lineitem['L_ORDERKEY'] >= 48) & (lineitem['EXTENDEDPRICE'] <= 32286.16701232458)].merge(orders[(orders['O_COMMENT'] == 'q') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 119724) & (orders['ORDERDATE'] <= '1998-07-21')][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 790.7497705415537) | (partsupp['SUPPLYCOST'] != 190.64324097122892) | (partsupp['PS_PARTKEY'] > 14) & (partsupp['P_COMMENT'] == ' ')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['COMMITDATE', 'RECEIPTDATE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] == 932.0299847404249) & (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] > 50) & (part['PT_COMMENT'].str.startswith('g')) | (part['SIZE'] > 32) | (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'].str.startswith('M')) & (part['P_NAME'] == 'cor') | (part['P_NAME'] != 'n')][['BRAND', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'MFGR', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 6)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_PARTKEY', 'S_COMMENT', 'N_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['PS_PARTKEY'] == 47) | (partsupp['PS_PARTKEY'] >= 17) & (partsupp['P_COMMENT'].str.startswith('n'))].merge(part[(part['PT_COMMENT'] != 'g') & (part['SIZE'] != 40) | (part['CONTAINER'] != 'JUMBO') & (part['PT_COMMENT'].str.startswith('!')) & (part['TYPE'] != 'STA') | (part['SIZE'] <= 38) & (part['PT_COMMENT'] != 's') & (part['P_PARTKEY'] > 9)][['TYPE', 'CONTAINER', 'SIZE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] < 7)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SIZE', 'PS_SUPPKEY', 'N_COMMENT', 'BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_COMMENT'].str.startswith('b')) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['DISCOUNT'] < 0.08355729707405685) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['LINENUMBER'] > 5) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['LINENUMBER'] <= 1) & (lineitem['L_ORDERKEY'] <= 157)][['L_SUPPKEY', 'LINESTATUS', 'SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'L_ORDERKEY']].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] >= 32) | (partsupp['AVAILQTY'] != 7208)].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'j') | (supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_NATIONKEY'] == 10) | (supplier['S_COMMENT'] == 'y') | (supplier['S_PHONE'] != '14-')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] != 991.3514113459829) | (part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] == 915.9297779992509) | (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] >= 47) & (part['P_NAME'] == 'v') & (part['P_NAME'] == 'r') | (part['BRAND'].isin(['Brand#14', 'Brand#45', 'Brand#53', 'Brand#23', 'Brand#41', 'Brand#25', 'Brand#35', 'Brand#44', 'Brand#55', 'Brand#15', 'Brand#52']))][['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'O_CUSTKEY']).agg('sum', numeric_only=True)