customer

lineitem

nation

orders

part

region

customer[['C_CUSTKEY']]

lineitem[(lineitem['SHIPDATE'] == '1992-04-27')]

lineitem[['DISCOUNT']]

nation[['N_COMMENT']]

nation[['N_NAME']]

part[(part['CONTAINER'].str.startswith('JUMBO'))]

region[(region['R_COMMENT'] == 'g')]

region[(region['R_NAME'] != 'AME')]

region[(region['R_NAME'].str.startswith('A'))]

region[(region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] >= 1)]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[['S_ACCTBAL']]

supplier[['S_ADDRESS']]

customer[['C_ADDRESS', 'C_COMMENT']]

lineitem.groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NAME'] != 'M')]

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'y')]

nation[['N_COMMENT', 'N_NAME']]

nation[['N_REGIONKEY', 'N_COMMENT']]

orders[['ORDERDATE', 'TOTALPRICE']]

part.groupby(by=['BRAND']).agg('count')

part.groupby(by=['MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('b')) | (part['RETAILPRICE'] <= 1072.7849616543426)]

part[(part['P_PARTKEY'] > 132) & (part['RETAILPRICE'] >= 942.1571986769916)]

part[['PT_COMMENT', 'P_PARTKEY']]

part[['SIZE', 'RETAILPRICE']]

part[['SIZE', 'TYPE']]

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 555) & (partsupp['PS_SUPPKEY'] <= 4626)]

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']]

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('count')

region.groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] > 0)]

region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('E'))]

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('M'))]

region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'u')]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

supplier.groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME']]

customer[['C_ADDRESS', 'C_COMMENT', 'C_NAME']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK']]

part.groupby(by=['BRAND', 'SIZE']).agg('count')

part.groupby(by=['MFGR', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] == 'f') & (part['PT_COMMENT'] == 'h')]

part[(part['P_NAME'] == 'c') | (part['BRAND'] != 'Brand#55') & (part['P_NAME'] == 't')]

part[['PT_COMMENT', 'BRAND', 'P_NAME']]

partsupp.groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('E'))]

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] > 0)]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'g')]

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] != 'g')]

region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] > 0)]

region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] != 'h')]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']]

customer[(customer['C_NATIONKEY'] <= 18) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == 'z') & (customer['MKTSEGMENT'] != 'FURNITURE')]

customer[['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']]

customer[['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']]

lineitem.groupby(by=['L_SUPPKEY', 'DISCOUNT', 'TAX']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 1)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'L_COMMENT', 'RETURNFLAG', 'TAX']]

nation.groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] <= 0) | (nation['N_REGIONKEY'] >= 0)]

orders.groupby(by=['CLERK', 'ORDERDATE', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21')][['ORDERDATE']]

part.groupby(by=['MFGR', 'P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) & (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] != 1093.1242380406743) & (part['P_NAME'] == 'g')]

part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE']]

part[['RETAILPRICE', 'SIZE', 'BRAND', 'TYPE']]

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER']]

partsupp[(partsupp['PS_SUPPKEY'] >= 1080)][['SUPPLYCOST']]

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY']]

supplier[(supplier['S_SUPPKEY'] > 10) | (supplier['S_PHONE'] != '26-') & (supplier['S_NATIONKEY'] != 20) | (supplier['S_COMMENT'] != 'al ')]

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') | (lineitem['RECEIPTDATE'] > '1992-05-02')][['LINENUMBER']]

lineitem[['DISCOUNT']].groupby(by=['DISCOUNT']).agg('count')

lineitem[['L_COMMENT']].groupby(by=['L_COMMENT']).agg('max', numeric_only=True)

lineitem[['SHIPDATE']].groupby(by=['SHIPDATE']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] != 1)][['N_NAME']]

nation[(nation['N_NATIONKEY'] == 16)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('M'))][['N_COMMENT']]

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 575)][['ORDERPRIORITY', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']]

part.groupby(by=['BRAND', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'TYPE']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'SMA') & (part['SIZE'] < 47) & (part['CONTAINER'] != 'JUMBO') & (part['BRAND'] != 'Brand#44') & (part['BRAND'].isin(['Brand#54', 'Brand#11', 'Brand#42', 'Brand#22', 'Brand#55', 'Brand#44', 'Brand#43', 'Brand#21', 'Brand#12', 'Brand#41', 'Brand#33', 'Brand#14', 'Brand#32', 'Brand#45', 'Brand#24', 'Brand#25', 'Brand#15', 'Brand#13', 'Brand#34', 'Brand#51', 'Brand#35']))]

part[(part['TYPE'] == 'STA') & (part['TYPE'] == 'M') & (part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'] != 'm') | (part['SIZE'] == 27)]

part[['BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND']]

part[['TYPE']].groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp.groupby(by=['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 5654)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 737.6515748875157)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT']]

region[(region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']]

supplier[['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']]

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME']]

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']]

lineitem[(lineitem['COMMITDATE'] == '1992-05-15')].groupby(by=['DISCOUNT', 'L_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'r')][['QUANTITY', 'RETURNFLAG', 'COMMITDATE']]

lineitem[['DISCOUNT', 'EXTENDEDPRICE']].groupby(by=['DISCOUNT']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG', 'SHIPDATE']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 22) & (nation['N_NAME'] == 'K') & (nation['N_NAME'] == 'I')][['N_NATIONKEY']]

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P')][['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']]

orders[(orders['O_COMMENT'] != 'd') | (orders['TOTALPRICE'] != 17252.99110688875) & (orders['CLERK'] != 'C')][['SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] >= 42345) & (orders['TOTALPRICE'] == 285774.10039183235)][['ORDERSTATUS', 'TOTALPRICE']]

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY']).agg('count')

part.groupby(by=['TYPE', 'BRAND', 'CONTAINER', 'SIZE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'blu') & (part['SIZE'] <= 37) & (part['CONTAINER'] != 'SM') & (part['BRAND'] == 'Brand#41') & (part['P_NAME'] == 'l') & (part['P_NAME'] == 'lin')]

partsupp.groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']).agg('count')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 3634) | (partsupp['P_COMMENT'] != 'b')][['AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'] == 'k') | (partsupp['AVAILQTY'] <= 1836)][['SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] < 108.75086155960254) & (partsupp['P_COMMENT'].str.startswith('k'))][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] > 592.2581769569888) | (partsupp['AVAILQTY'] >= 4525) & (partsupp['AVAILQTY'] < 8692)][['P_COMMENT']]

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') | (region['R_NAME'] != 'AFR')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] != 1)][['R_NAME', 'R_COMMENT']]

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

supplier.groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 86) & (supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] > 49)][['S_NAME']]

supplier[['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']]

customer[['C_NAME', 'C_COMMENT']].groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'K')].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 4) | (nation['N_NAME'] == 'F') & (nation['N_COMMENT'] != 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] != 66872)][['SHIPPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] > 108598) | (orders['O_COMMENT'].str.startswith('d'))].groupby(by=['ORDERDATE', 'CLERK']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] != 33309) | (orders['O_CUSTKEY'] == 136259) | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['ORDERSTATUS']]

orders[['ORDERDATE', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO')][['TYPE', 'PT_COMMENT', 'MFGR', 'BRAND']]

part[(part['PT_COMMENT'] != 'ly ') | (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] > 918.8830255705207) | (part['TYPE'] == 'SMA') & (part['SIZE'] > 15) | (part['BRAND'].isin(['Brand#44', 'Brand#14', 'Brand#13', 'Brand#11', 'Brand#31', 'Brand#25', 'Brand#32', 'Brand#22', 'Brand#23', 'Brand#42'])) | (part['SIZE'] < 10)]

part[(part['PT_COMMENT'] == 'n') & (part['SIZE'] > 47) | (part['RETAILPRICE'] <= 1051.2023259331143) | (part['SIZE'] == 45) & (part['TYPE'] == 'E') | (part['BRAND'].isin(['Brand#14', 'Brand#53', 'Brand#12', 'Brand#25', 'Brand#21', 'Brand#11', 'Brand#54', 'Brand#45', 'Brand#55', 'Brand#51', 'Brand#23'])) & (part['P_PARTKEY'] > 31)]

part[(part['SIZE'] == 17) & (part['P_NAME'] != 'w') | (part['PT_COMMENT'].str.startswith('y')) & (part['MFGR'] == 'Manufacturer#2') & (part['BRAND'].isin(['Brand#45', 'Brand#44', 'Brand#11', 'Brand#54', 'Brand#51', 'Brand#55', 'Brand#34', 'Brand#31', 'Brand#43', 'Brand#22', 'Brand#13', 'Brand#33', 'Brand#42', 'Brand#52', 'Brand#15', 'Brand#24', 'Brand#35', 'Brand#41'])) & (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'n')]

part[['BRAND', 'PT_COMMENT', 'MFGR', 'TYPE', 'SIZE', 'P_NAME', 'P_PARTKEY']]

part[['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'CONTAINER', 'BRAND', 'PT_COMMENT']]

part[['P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE', 'CONTAINER']]

part[['RETAILPRICE', 'BRAND', 'SIZE']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'TYPE']].groupby(by=['TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('sum', numeric_only=True)

partsupp.merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'E')].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'AME') | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'ASI')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 3)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('J'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'] == ' sl')].groupby(by=['S_COMMENT', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_PHONE']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']].groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] <= 5693.886533108736)].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('max', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS']).agg('count')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F']))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] != 0.06352288729844498) & (lineitem['L_PARTKEY'] != 188734) & (lineitem['QUANTITY'] != 34)].groupby(by=['SHIPINSTRUCT', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'LINENUMBER', 'TAX']].groupby(by=['LINENUMBER', 'L_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == ' ')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_NATIONKEY'] < 6) & (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] != 21)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] > 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 45748) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '4-NOT SPECIFIED'])) | (orders['O_COMMENT'] == '-') | (orders['CLERK'].str.startswith('C'))]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'ORDERDATE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#55') & (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('a')) | (part['BRAND'].isin(['Brand#54', 'Brand#32', 'Brand#13', 'Brand#45', 'Brand#15', 'Brand#34'])) & (part['RETAILPRICE'] == 933.7179693566974) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) | (part['RETAILPRICE'] == 1080.9746371569247) & (part['CONTAINER'] != 'SM')]

part[(part['CONTAINER'] == 'WRAP') & (part['SIZE'] >= 29)][['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) & (part['PT_COMMENT'] != 'x') | (part['P_PARTKEY'] != 27) & (part['PT_COMMENT'].str.startswith('q')) | (part['MFGR'] == 'Manufacturer#3') | (part['RETAILPRICE'] <= 1022.1356700519048) & (part['PT_COMMENT'].str.startswith(' fi')) & (part['CONTAINER'].str.startswith('LG'))]

part[(part['TYPE'].str.startswith('P')) | (part['PT_COMMENT'].str.startswith('ss ')) | (part['RETAILPRICE'] <= 1036.7363284110827) & (part['CONTAINER'] != 'LG') | (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'k') & (part['BRAND'] != 'Brand#21') | (part['P_NAME'] == 'bis')]

part[['BRAND', 'PT_COMMENT', 'MFGR']].groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']]

part[['PT_COMMENT', 'MFGR', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'P_NAME', 'P_PARTKEY']]

part[['P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'TYPE', 'CONTAINER', 'BRAND']]

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] <= 1017.7648207918286)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'E')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 3)].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'M')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] <= 0)].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'h')].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'g')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 21)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != -649.8191684900546) & (supplier['S_COMMENT'] == 'j') & (supplier['S_ACCTBAL'] == 1660.9936536196994)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_COMMENT']].groupby(by=['S_NAME', 'S_ACCTBAL']).agg('count')

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] >= 10) & (nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_ADDRESS'] != 'd')][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].groupby(by=['C_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'C_COMMENT', 'C_PHONE']].groupby(by=['C_COMMENT', 'C_NATIONKEY', 'C_PHONE']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NAME', 'C_PHONE']].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 46241) & (lineitem['LINESTATUS'] != 'F') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) & (lineitem['QUANTITY'] >= 2) & (lineitem['TAX'] > 0.07995057435690962)][['DISCOUNT']]

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_PARTKEY'] != 180513) | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_SUPPKEY'] <= 7515) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPMODE'].isin(['AIR', 'SHIP', 'MAIL', 'FOB', 'RAIL'])) | (lineitem['EXTENDEDPRICE'] == 79489.28057587867) | (lineitem['L_ORDERKEY'] > 93) | (lineitem['LINESTATUS'] != 'O')]

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] != 'r')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'e') & (nation['N_NAME'] != 'S') & (nation['N_NAME'] != 'C')].groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] < 14) & (nation['N_COMMENT'] == 'u')].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '2-HIGH')][['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS', 'TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 182255.3406388907) & (orders['SHIPPRIORITY'] > 0)][['CLERK', 'O_ORDERKEY']]

orders[(orders['TOTALPRICE'] >= 248656.67761347204) & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] == 144904.24644878533) & (orders['TOTALPRICE'] != 128594.5188849477) & (orders['CLERK'].str.startswith('C'))].groupby(by=['O_CUSTKEY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERDATE']].groupby(by=['O_COMMENT', 'CLERK']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'e') | (part['P_NAME'] != 'k') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) | (part['SIZE'] != 33) & (part['CONTAINER'].str.startswith('LG')) & (part['TYPE'] != 'SMA') & (part['P_NAME'] == 'f') & (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] >= 135)]

part[(part['RETAILPRICE'] > 964.6566413673471) | (part['RETAILPRICE'] < 1027.9528483520185) | (part['TYPE'] == 'P')].groupby(by=['PT_COMMENT', 'BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'E') | (part['BRAND'] != 'Brand#13')][['RETAILPRICE', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND']]

part[(part['TYPE'].str.startswith('SMA')) | (part['SIZE'] == 44) & (part['SIZE'] != 46) & (part['P_PARTKEY'] == 39) | (part['MFGR'] != 'Manufacturer#1') & (part['RETAILPRICE'] > 1067.75422727832) | (part['P_PARTKEY'] <= 183) & (part['TYPE'] != 'M') | (part['CONTAINER'].str.startswith('SM'))]

part[['PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY', 'SIZE', 'BRAND']]

part[['P_PARTKEY', 'BRAND', 'TYPE', 'SIZE', 'P_NAME', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE']]

part[['P_PARTKEY', 'BRAND', 'TYPE']].groupby(by=['TYPE', 'BRAND', 'P_PARTKEY']).agg('count')

part[['SIZE', 'TYPE', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'TYPE', 'SIZE']).agg('count')

part[['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND']]

partsupp.merge(part[['MFGR', 'BRAND', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] == 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('AME'))][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_ACCTBAL'] == -275.25716497078565) & (supplier['S_NATIONKEY'] > 4) & (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_NAME'] != 'S')].groupby(by=['S_NATIONKEY']).agg('count')

supplier[(supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']]

supplier[(supplier['S_NATIONKEY'] < 22) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != ',')][['S_COMMENT', 'S_NATIONKEY', 'S_NAME']]

supplier[(supplier['S_SUPPKEY'] < 153) | (supplier['S_ACCTBAL'] != 8324.497013895803) & (supplier['S_ACCTBAL'] <= 9888.042756547626) & (supplier['S_ADDRESS'] == '2') & (supplier['S_COMMENT'] != 'al ')][['S_PHONE', 'S_ACCTBAL']]

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('count')

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_PARTKEY'] > 63884) & (lineitem['L_ORDERKEY'] > 106) & (lineitem['LINESTATUS'] != 'O') | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['LINESTATUS'] != 'O') & (lineitem['TAX'] == 0.048928925644392635)][['LINENUMBER']]

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['DISCOUNT'] == 0.08000100520440757)][['SHIPDATE']].groupby(by=['SHIPDATE']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'] != 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] == 'i')][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 102117) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] <= 3) | (orders['O_CUSTKEY'] == 128224) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'].str.startswith('.'))][['O_COMMENT']]

orders[(orders['O_ORDERKEY'] == 293) & (orders['ORDERDATE'] > '1992-01-13')][['CLERK', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY']]

orders[['SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] == 'y')].groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('kag')) | (part['SIZE'] == 10)][['RETAILPRICE', 'TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']]

part[(part['P_NAME'] == 'l') | (part['BRAND'] == 'Brand#41')][['TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT']]

part[['MFGR', 'BRAND', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['P_NAME', 'PT_COMMENT', 'BRAND', 'CONTAINER', 'MFGR']].groupby(by=['PT_COMMENT', 'MFGR']).agg('count')

part[['SIZE', 'CONTAINER', 'TYPE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'SIZE', 'TYPE']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ' th') & (partsupp['SUPPLYCOST'] < 920.3078163455234) & (partsupp['PS_PARTKEY'] != 48)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'f') | (partsupp['PS_SUPPKEY'] <= 317) | (partsupp['PS_SUPPKEY'] == 192)].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'o')].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 9)][['S_COMMENT', 'S_NAME']].groupby(by=['S_COMMENT', 'S_NAME']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'l')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] != 'U')][['N_NAME', 'N_COMMENT']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] > 2) | (nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NAME'] != 'A')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'R')].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] < 119297) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY']]

orders[(orders['ORDERPRIORITY'] == '5-LOW') | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 68392) | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] != 68956) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['TOTALPRICE'] >= 132678.24067561602) | (orders['SHIPPRIORITY'] < 0)][['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] <= 98576.54582503138) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 13535)][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['CONTAINER'] == 'MED') & (part['P_NAME'] != 'blu') | (part['BRAND'] != 'Brand#22')][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] == 993.6232207137923) | (part['P_PARTKEY'] <= 192) & (part['MFGR'] == 'Manufacturer#4')].groupby(by=['MFGR', 'PT_COMMENT', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('y')) | (part['TYPE'].str.startswith('S')) | (part['PT_COMMENT'].str.startswith('e')) & (part['P_NAME'].str.startswith('a')) | (part['P_PARTKEY'] <= 70) & (part['P_NAME'] == 'k')].groupby(by=['TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] != 1044.2499352066015) & (part['RETAILPRICE'] > 917.9224643337973) & (part['RETAILPRICE'] < 1073.773540999823)].groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME', 'TYPE', 'CONTAINER']).agg('sum', numeric_only=True)

part[['SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']].groupby(by=['TYPE', 'MFGR', 'P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[['BRAND', 'MFGR', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[['MFGR', 'P_PARTKEY', 'BRAND', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_NAME', 'SIZE', 'TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 1938)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 7460)].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] == 24) | (supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != '.')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'y')].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 962.4906433899198) & (partsupp['PS_SUPPKEY'] >= 6593) | (partsupp['SUPPLYCOST'] >= 728.1657222912253)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 814.0923669649728) | (partsupp['AVAILQTY'] > 9383) | (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['P_COMMENT'].str.startswith('d')) & (partsupp['P_COMMENT'] == ' ')].groupby(by=['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] == 1) | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] != 1)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != -50.844584904374074) | (supplier['S_ADDRESS'].str.startswith('3')) & (supplier['S_NATIONKEY'] != 14)].groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 5666.405870861363) | (supplier['S_ADDRESS'].str.startswith('U')) & (supplier['S_ACCTBAL'] != 428.2480876059303) & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_ADDRESS'] == 'B')][['S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'] == 'q') | (customer['C_COMMENT'] != 'n') & (customer['C_NATIONKEY'] > 11) | (customer['C_CUSTKEY'] < 24) | (customer['C_COMMENT'] == 'y') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_PHONE'] == '25-') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] < 2461.459347914633) | (customer['C_ACCTBAL'] >= 3497.0691475843305) & (customer['C_CUSTKEY'] == 91) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] != '18-')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['L_COMMENT'] == 't') | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_ORDERKEY'] < 109) & (lineitem['L_PARTKEY'] >= 16317) | (lineitem['L_PARTKEY'] == 159797) | (lineitem['TAX'] < 0.07942309058805706) & (lineitem['SHIPMODE'] != 'RAIL')].groupby(by=['RECEIPTDATE', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['QUANTITY'] > 36) | (lineitem['SHIPDATE'] >= '1998-10-30')][['RECEIPTDATE', 'COMMITDATE']].groupby(by=['RECEIPTDATE', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'SHIP') | (lineitem['L_PARTKEY'] > 189239) | (lineitem['LINENUMBER'] > 1) & (lineitem['L_COMMENT'] != 'k') & (lineitem['DISCOUNT'] != 0.08544258388802004) & (lineitem['DISCOUNT'] <= 0.012424858458496592) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['COMMITDATE'] > '1998-10-16')][['EXTENDEDPRICE']]

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] == 4) & (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERDATE'] == '1992-01-13')][['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[(orders['TOTALPRICE'] == 18742.992675229347) & (orders['ORDERSTATUS'] == 'O') | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] == 38392)][['CLERK', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']]

orders[(orders['TOTALPRICE'] >= 224353.490859045) | (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'] == 'C')][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY']).agg('count')

part[(part['CONTAINER'].str.startswith('SM')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) & (part['SIZE'] >= 41) & (part['PT_COMMENT'] == 'c') & (part['RETAILPRICE'] > 955.111598595423) | (part['SIZE'] < 5) | (part['P_NAME'] == 'l') | (part['TYPE'] == 'L')][['MFGR', 'P_PARTKEY']]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] > 31) | (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'] == 'S') & (part['P_PARTKEY'] != 69) & (part['SIZE'] <= 43) | (part['SIZE'] == 8) | (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'].str.startswith('l'))][['P_NAME']]

part[['P_NAME', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'P_PARTKEY']].groupby(by=['CONTAINER', 'P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['TYPE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('count')

partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 3) & (partsupp['PS_PARTKEY'] <= 32) | (partsupp['SUPPLYCOST'] > 178.49534261760155) | (partsupp['P_COMMENT'] == 'x') & (partsupp['AVAILQTY'] <= 1510)].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ',') | (partsupp['PS_SUPPKEY'] >= 2873) | (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['P_COMMENT'] == ';') | (partsupp['PS_SUPPKEY'] >= 3938)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 't')].merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 150) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_ACCTBAL'] != 5429.679951721999) | (supplier['S_ACCTBAL'] == 3682.555783235154)][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith('y'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 1734.4062616938531) | (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NATIONKEY'] >= 9) & (customer['C_ADDRESS'] != 'd')].merge(nation[(nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 7739.849341694984) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] != 6) | (nation['N_NATIONKEY'] >= 3) | (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] == 17)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('7'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 42) | (customer['C_COMMENT'].str.startswith('k'))].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] <= 23)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] != 146547) & (orders['O_COMMENT'] != 'h')].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] != 0.06781263351703948) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['RETURNFLAG'].isin(['R', 'A'])) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['TAX'] > 0.04650022261870602) | (lineitem['EXTENDEDPRICE'] >= 59884.825698644825) & (lineitem['L_COMMENT'].str.startswith('lit')) & (lineitem['SHIPMODE'] != 'TRUCK')][['RETURNFLAG', 'SHIPDATE', 'RECEIPTDATE']]

lineitem[(lineitem['DISCOUNT'] >= 0.057868555755847706)][['EXTENDEDPRICE', 'SHIPINSTRUCT', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE', 'QUANTITY']].groupby(by=['SHIPDATE']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] >= 79621.2896027129) | (lineitem['L_COMMENT'].str.startswith('h')) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['LINESTATUS'] == 'O')][['SHIPDATE', 'L_ORDERKEY']].groupby(by=['SHIPDATE', 'L_ORDERKEY']).agg('count')

lineitem[(lineitem['L_PARTKEY'] < 144764) & (lineitem['QUANTITY'] != 33) | (lineitem['TAX'] != 0.027268952449395173)].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] <= 103863) & (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPMODE'] != 'FOB') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['QUANTITY'] < 29) & (lineitem['L_SUPPKEY'] != 2159) | (lineitem['L_PARTKEY'] != 107226) | (lineitem['LINENUMBER'] < 4) & (lineitem['SHIPDATE'] == '1992-04-27')][['RETURNFLAG', 'RECEIPTDATE']]

nation[(nation['N_COMMENT'] == 'y')].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] != 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] >= 18) & (nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] < 19) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'WRAP') | (part['BRAND'] != 'Brand#31')][['P_PARTKEY', 'PT_COMMENT', 'TYPE']].groupby(by=['TYPE', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('r')) | (part['P_PARTKEY'] >= 4)][['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE']]

part[(part['SIZE'] < 33) & (part['BRAND'] != 'Brand#51') & (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] == 'n') | (part['P_NAME'].str.startswith('i')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] == 'Manufacturer#2') | (part['P_PARTKEY'] <= 95)][['P_NAME', 'TYPE']]

part[['RETAILPRICE', 'P_NAME', 'MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND']].groupby(by=['RETAILPRICE', 'P_NAME', 'MFGR']).agg('min', numeric_only=True)

part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'f') & (supplier['S_ADDRESS'] != 'r') | (supplier['S_PHONE'] != '32-') | (supplier['S_COMMENT'] != 'l')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 2276) & (partsupp['AVAILQTY'] < 1816) | (partsupp['SUPPLYCOST'] >= 980.8904054911591) & (partsupp['PS_PARTKEY'] != 45) | (partsupp['P_COMMENT'] == ' th')][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['PS_SUPPKEY'] <= 7067) & (partsupp['PS_PARTKEY'] > 17)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('count')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'K') | (nation['N_COMMENT'].str.startswith('s'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] < 19) & (nation['N_NATIONKEY'] != 17)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'o') | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 20)][['S_NAME', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_SUPPKEY'] <= 108) | (supplier['S_SUPPKEY'] != 1) | (supplier['S_PHONE'] != '2') & (supplier['S_SUPPKEY'] >= 150)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 1526.274626916363) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_CUSTKEY'] <= 94)].merge(nation.merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'x') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] != 82)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']).agg('count')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] <= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] != 114) | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['LINESTATUS'] != 'F') & (lineitem['LINENUMBER'] < 3) & (lineitem['DISCOUNT'] > 0.09120235521036317) & (lineitem['LINENUMBER'] > 5) | (lineitem['L_ORDERKEY'] != 1) | (lineitem['L_SUPPKEY'] <= 1884) | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_COMMENT'] == 'n')][['SHIPMODE', 'COMMITDATE']]

lineitem[['RECEIPTDATE', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'TAX', 'L_COMMENT', 'EXTENDEDPRICE']].groupby(by=['TAX', 'EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'P') | (nation['N_NAME'] == 'K')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] <= 23)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['O_ORDERKEY'] < 457) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_ORDERKEY'] < 112) | (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_COMMENT'] == 'd')][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 187838.6230000502) | (orders['O_COMMENT'] != 'uri') | (orders['TOTALPRICE'] >= 272560.726360179)][['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']].groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] == 'MED') | (part['CONTAINER'] == 'SM') & (part['SIZE'] < 8) & (part['RETAILPRICE'] == 919.5351743489714) & (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'] == 'u')].groupby(by=['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('k')) & (part['BRAND'].isin(['Brand#22', 'Brand#34', 'Brand#21', 'Brand#55', 'Brand#25', 'Brand#24', 'Brand#45', 'Brand#42', 'Brand#12', 'Brand#43']))][['SIZE', 'MFGR', 'BRAND', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 1047.8935443161672)][['RETAILPRICE', 'TYPE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'CONTAINER', 'BRAND', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 6) | (supplier['S_NATIONKEY'] > 5) | (supplier['S_PHONE'] != '2')][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[(region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 793.6971525331694) | (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 14) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '14-') & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 0)][['S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 4) | (supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] != 'k') | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] >= 2038.5686634910596)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] >= 22) & (nation['N_NATIONKEY'] > 23)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'd') | (customer['C_NAME'] == 'C')][['C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 2953.6780385034913) & (customer['C_COMMENT'] != 'o') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] > 9886.90280954842) & (customer['C_ACCTBAL'] >= 5098.464385586028)][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT']]

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 4345) | (partsupp['SUPPLYCOST'] > 516.3655187483073) & (partsupp['SUPPLYCOST'] <= 398.98593527753144) & (partsupp['P_COMMENT'].str.startswith(';'))].merge(part[(part['SIZE'] == 42) | (part['TYPE'] == 'L') & (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'].isin(['Brand#23', 'Brand#51', 'Brand#25', 'Brand#33', 'Brand#31', 'Brand#42', 'Brand#12', 'Brand#15', 'Brand#53', 'Brand#14', 'Brand#43', 'Brand#34', 'Brand#45', 'Brand#21', 'Brand#52']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_ORDERKEY'] >= 178) | (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_PARTKEY'] >= 151876) | (lineitem['TAX'] < 0.03834854785926579) | (lineitem['DISCOUNT'] <= 0.09373226888322064) & (lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp[(partsupp['P_COMMENT'] == 'u') | (partsupp['PS_SUPPKEY'] != 2726)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] == ' ca') | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['QUANTITY'] > 6) | (lineitem['QUANTITY'] >= 45)].merge(orders[(orders['O_COMMENT'] == 'd') | (orders['TOTALPRICE'] >= 147897.81772108815) & (orders['O_ORDERKEY'] != 20)][['O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] != 'v') & (nation['N_NATIONKEY'] <= 13) | (nation['N_NAME'] == 'K')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'B') | (nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != 't')][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 'l')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] != 203) & (orders['TOTALPRICE'] < 317349.781491537)][['TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT']].groupby(by=['O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 44406) & (orders['TOTALPRICE'] != 300020.70476424333)].merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_ACCTBAL'] >= 7978.8899673707165) | (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 136509.8037419363) | (orders['O_COMMENT'].str.startswith('f')) | (orders['O_CUSTKEY'] != 75042) | (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['TOTALPRICE'] > 275733.6356603134) | (orders['ORDERPRIORITY'] != '5-LOW')][['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']]

part[(part['BRAND'] != 'Brand#44') & (part['PT_COMMENT'] != 's')][['CONTAINER', 'RETAILPRICE', 'MFGR', 'SIZE']].groupby(by=['RETAILPRICE', 'CONTAINER', 'SIZE', 'MFGR']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('e')) | (part['RETAILPRICE'] < 1005.1000907464042) & (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] == 145)][['MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']]

part[['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'SIZE', 'BRAND']].groupby(by=['TYPE', 'CONTAINER', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] >= 57) | (part['PT_COMMENT'].str.startswith('q'))][['TYPE', 'BRAND', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 6) | (supplier['S_SUPPKEY'] != 102)].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 13) & (partsupp['P_COMMENT'] != 'n') & (partsupp['PS_SUPPKEY'] > 5375)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 's') & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'J')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] == 'u')].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] > 3) & (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 183) & (supplier['S_SUPPKEY'] < 109) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] < 15)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 34) | (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_COMMENT'] == 'a') & (supplier['S_NATIONKEY'] >= 23)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_COMMENT'] == 'c')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'z') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 11) | (customer['C_NATIONKEY'] < 21) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] != 7705.012193006141) & (customer['C_CUSTKEY'] == 25)].merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'y') & (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 'e')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] < 18) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 19) | (customer['C_NATIONKEY'] > 12) | (customer['C_CUSTKEY'] > 28) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] == 9545.862618298945)][['C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] > 149) & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] >= 40) & (orders['ORDERDATE'] > '1998-07-21')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] != 'q') | (orders['TOTALPRICE'] != 80746.34378608024) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED'])) & (orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] < 106182) | (orders['O_CUSTKEY'] > 142187) & (orders['O_CUSTKEY'] != 5693) & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'].str.startswith('w'))][['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['PS_SUPPKEY'] >= 7344) & (partsupp['PS_SUPPKEY'] == 5825) & (partsupp['SUPPLYCOST'] == 991.548407488201) | (partsupp['PS_PARTKEY'] != 44)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 1) | (lineitem['L_SUPPKEY'] >= 4407) | (lineitem['TAX'] == 0.0032344228928347543) | (lineitem['COMMITDATE'] < '1992-05-15')][['L_ORDERKEY', 'QUANTITY', 'EXTENDEDPRICE', 'SHIPDATE', 'DISCOUNT', 'LINESTATUS']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPDATE', 'EXTENDEDPRICE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] == 't') | (nation['N_NATIONKEY'] > 19)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E') & (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] == 'M')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] > 6) | (nation['N_NATIONKEY'] >= 11)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] == 'f') | (customer['C_COMMENT'].str.startswith(' ')) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] > 6) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_ORDERKEY'] != 704) & (orders['O_ORDERKEY'] != 118) | (orders['O_ORDERKEY'] >= 429) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] == 161786.06830985515) & (orders['O_ORDERKEY'] >= 492)].merge(customer[(customer['C_CUSTKEY'] != 90)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 797)].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 20) & (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'].isin(['Brand#14', 'Brand#42', 'Brand#24', 'Brand#21', 'Brand#11'])) & (part['P_NAME'] == 'b') & (part['P_NAME'] != 'w') & (part['BRAND'] == 'Brand#44') | (part['PT_COMMENT'] != ' ')][['PT_COMMENT', 'MFGR', 'TYPE', 'P_NAME', 'P_PARTKEY']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'].isin(['Brand#15', 'Brand#22', 'Brand#41', 'Brand#45', 'Brand#32', 'Brand#44', 'Brand#24', 'Brand#52', 'Brand#23', 'Brand#43', 'Brand#53', 'Brand#51', 'Brand#55', 'Brand#11', 'Brand#35', 'Brand#42', 'Brand#13', 'Brand#54', 'Brand#12', 'Brand#14', 'Brand#25'])) | (part['TYPE'].str.startswith('STA')) | (part['PT_COMMENT'].str.startswith('l')) & (part['P_NAME'] == 'bis') & (part['P_PARTKEY'] >= 147) | (part['RETAILPRICE'] == 931.3751978556809) & (part['P_PARTKEY'] < 21)].groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4'])) & (part['SIZE'] == 22) & (part['BRAND'].isin(['Brand#31', 'Brand#55', 'Brand#53', 'Brand#22', 'Brand#35', 'Brand#21', 'Brand#41', 'Brand#14', 'Brand#45', 'Brand#43', 'Brand#34', 'Brand#15', 'Brand#54', 'Brand#13', 'Brand#11', 'Brand#51', 'Brand#33', 'Brand#42', 'Brand#23'])) | (part['BRAND'] == 'Brand#15') & (part['BRAND'] != 'Brand#21') & (part['CONTAINER'] == 'WRAP') | (part['BRAND'].isin(['Brand#42', 'Brand#51', 'Brand#41', 'Brand#15', 'Brand#13', 'Brand#53', 'Brand#34', 'Brand#21', 'Brand#22', 'Brand#52', 'Brand#54', 'Brand#11', 'Brand#25', 'Brand#31', 'Brand#55', 'Brand#32', 'Brand#12', 'Brand#14', 'Brand#43', 'Brand#45'])) | (part['P_NAME'].str.startswith('r'))].groupby(by=['TYPE', 'RETAILPRICE', 'SIZE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'c') | (part['P_PARTKEY'] == 25) | (part['PT_COMMENT'] == ' ') & (part['BRAND'].isin(['Brand#12', 'Brand#55', 'Brand#15', 'Brand#44', 'Brand#53', 'Brand#42'])) & (part['RETAILPRICE'] < 1068.5523097276482) & (part['SIZE'] <= 47) | (part['P_NAME'] != 'm') | (part['BRAND'].isin(['Brand#31', 'Brand#44', 'Brand#54', 'Brand#51'])) & (part['BRAND'] == 'Brand#13')].groupby(by=['TYPE', 'MFGR', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'lin') | (part['RETAILPRICE'] < 921.254773232843) | (part['RETAILPRICE'] < 931.0011670424062) | (part['P_NAME'] != 'lin') | (part['P_PARTKEY'] > 179) & (part['P_PARTKEY'] >= 153) & (part['SIZE'] >= 34) & (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] < 963.769636979986)][['MFGR', 'P_PARTKEY', 'SIZE', 'BRAND', 'PT_COMMENT']]

part[(part['P_PARTKEY'] > 47) & (part['CONTAINER'] == 'WRAP') | (part['CONTAINER'] != 'MED') | (part['SIZE'] == 9) | (part['PT_COMMENT'] != 'c') & (part['P_PARTKEY'] == 149) & (part['CONTAINER'] == 'SM')][['SIZE', 'RETAILPRICE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'MFGR']]

partsupp.merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 20) & (partsupp['PS_SUPPKEY'] == 6492) | (partsupp['SUPPLYCOST'] < 723.779200723706) & (partsupp['PS_PARTKEY'] > 12) & (partsupp['SUPPLYCOST'] > 159.17562622433275)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 6044) | (partsupp['PS_SUPPKEY'] <= 762)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('.')) | (partsupp['PS_SUPPKEY'] == 7130) & (partsupp['PS_SUPPKEY'] <= 6200) | (partsupp['PS_PARTKEY'] <= 6)].merge(part[['MFGR', 'CONTAINER', 'TYPE', 'P_NAME', 'BRAND', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 0) & (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 3781.260135231594) | (supplier['S_SUPPKEY'] > 194) & (supplier['S_ACCTBAL'] < 3365.081361679996) & (supplier['S_ADDRESS'] == 'i') & (supplier['S_ADDRESS'] == '5') & (supplier['S_PHONE'] != '1') | (supplier['S_PHONE'] != '26-')].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'M') & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 177) | (supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] != 5485.7034032716165)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_NATIONKEY'] <= 6) | (supplier['S_ADDRESS'] != 'o') | (supplier['S_NATIONKEY'] != 18) & (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'j') | (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_PHONE'] == '28-') | (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_ADDRESS'].str.startswith('d')) & (supplier['S_SUPPKEY'] >= 102) | (supplier['S_NATIONKEY'] < 2)][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 18) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'V') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'y') & (supplier['S_NATIONKEY'] < 14)].merge(nation[(nation['N_NAME'].str.startswith('K'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] != 'e')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_ACCTBAL'] >= 1133.8660253300502) & (supplier['S_NATIONKEY'] == 16)].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] <= 9) | (nation['N_COMMENT'].str.startswith('n'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 145) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'w') | (supplier['S_NAME'] != 'S')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 77) & (supplier['S_ADDRESS'] != 'x') | (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'] != '28-') & (supplier['S_PHONE'] == '26-')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'l')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 10)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] != 23)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] < 5675.066476741226) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] > 7) | (customer['C_PHONE'] != '18-') | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] < 7041.054829706502)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 3642.654219637361) | (customer['C_CUSTKEY'] == 91) & (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] == 96) & (customer['C_ADDRESS'].str.startswith('O')) & (customer['C_NATIONKEY'] <= 0)][['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_PHONE', 'C_NAME']).agg('count')

customer[(customer['C_CUSTKEY'] != 70) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == ',') & (customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('9')) & (customer['C_NAME'] != 'C')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'RAIL') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) | (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_ORDERKEY'] != 136) | (lineitem['L_ORDERKEY'] != 131) & (lineitem['TAX'] > 0.05396770840531291) | (lineitem['COMMITDATE'] < '1998-10-16')][['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2520) | (partsupp['PS_PARTKEY'] < 37) & (partsupp['SUPPLYCOST'] < 81.7417126784106) | (partsupp['PS_PARTKEY'] != 7)][['AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'LINENUMBER', 'COMMITDATE', 'SHIPDATE', 'L_PARTKEY', 'LINESTATUS', 'RETURNFLAG']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] > 11) | (nation['N_NATIONKEY'] != 17) & (nation['N_NAME'] != 'M')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'] != 'AME') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 2) & (customer['C_NATIONKEY'] < 1) & (customer['C_COMMENT'].str.startswith('r')) & (customer['C_ACCTBAL'] != 6358.518532209485) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_ACCTBAL'] > 2821.4207889104746) & (customer['C_ADDRESS'] != 'I')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] >= 41936)][['O_ORDERKEY', 'CLERK', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 256733.4163110718) | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] < 128425) | (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] <= 144832.6578596097) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] <= 38888)][['ORDERSTATUS', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#44') | (part['SIZE'] >= 43) & (part['PT_COMMENT'].str.startswith('s')) | (part['P_NAME'] == 'lem') | (part['BRAND'] != 'Brand#25') & (part['BRAND'] != 'Brand#53') & (part['PT_COMMENT'] == 'p') & (part['PT_COMMENT'].str.startswith('b')) & (part['RETAILPRICE'] == 1010.613191821959)].groupby(by=['CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#21', 'Brand#41', 'Brand#45', 'Brand#55', 'Brand#42', 'Brand#33', 'Brand#54', 'Brand#34', 'Brand#14', 'Brand#35', 'Brand#43', 'Brand#31'])) & (part['CONTAINER'].str.startswith('LG')) & (part['CONTAINER'].str.startswith('SM')) & (part['PT_COMMENT'].str.startswith('f')) | (part['MFGR'] == 'Manufacturer#1')][['MFGR', 'CONTAINER', 'P_NAME', 'SIZE', 'P_PARTKEY']].groupby(by=['MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 's') & (part['P_NAME'].str.startswith('f')) & (part['P_PARTKEY'] == 79) & (part['RETAILPRICE'] >= 1082.5145764421645) & (part['SIZE'] != 28) & (part['PT_COMMENT'] != 'd') & (part['CONTAINER'] != 'MED') | (part['P_NAME'].str.startswith('r'))][['RETAILPRICE', 'MFGR']].groupby(by=['RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] > 1077.9425165360176) & (part['TYPE'].str.startswith('P')) & (part['BRAND'] == 'Brand#15') & (part['SIZE'] < 28) | (part['PT_COMMENT'] != 'e') & (part['BRAND'].isin(['Brand#55', 'Brand#41', 'Brand#43', 'Brand#51', 'Brand#52', 'Brand#45', 'Brand#54', 'Brand#42', 'Brand#35', 'Brand#25', 'Brand#12', 'Brand#32', 'Brand#11', 'Brand#24', 'Brand#31', 'Brand#21', 'Brand#33', 'Brand#44', 'Brand#22', 'Brand#23', 'Brand#34', 'Brand#53'])) & (part['BRAND'].isin(['Brand#13', 'Brand#44', 'Brand#11', 'Brand#52', 'Brand#35', 'Brand#54', 'Brand#31', 'Brand#15', 'Brand#14', 'Brand#34', 'Brand#42', 'Brand#33'])) | (part['SIZE'] < 34)][['P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'PT_COMMENT']]

part[(part['RETAILPRICE'] >= 1033.7948942187488) & (part['TYPE'].str.startswith('P')) & (part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] < 920.9629672354034) | (part['RETAILPRICE'] <= 1079.8953742006695) & (part['PT_COMMENT'].str.startswith('t')) | (part['RETAILPRICE'] != 904.8525793632944) | (part['PT_COMMENT'].str.startswith('o')) | (part['PT_COMMENT'] == 'the')][['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'MFGR']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'N') | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 4) & (supplier['S_COMMENT'] != 'u') | (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_COMMENT'].str.startswith('u')) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'P')][['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 'u') & (nation['N_COMMENT'].str.startswith('p'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 23) | (nation['N_NATIONKEY'] > 4) & (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] != 'h')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 46) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_CUSTKEY'] > 74) | (customer['C_CUSTKEY'] <= 83) | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] <= 21) | (customer['C_ACCTBAL'] >= 1340.7014711184443)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 6) & (customer['C_NATIONKEY'] >= 12)].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'] == '13-') | (customer['C_ADDRESS'] != 'm')].merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'O')][['O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 6703) & (partsupp['AVAILQTY'] > 3759) & (partsupp['AVAILQTY'] != 4996) | (partsupp['SUPPLYCOST'] > 388.03221701163596)].merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3']))][['PT_COMMENT', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1115) & (partsupp['PS_SUPPKEY'] != 7231) | (partsupp['PS_PARTKEY'] > 21)].merge(part[['RETAILPRICE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 114) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] != 634) & (orders['O_CUSTKEY'] > 87534) & (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 180190.84925505402)][['CLERK', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] < 0.02900911547768432) & (lineitem['EXTENDEDPRICE'] > 68154.72547793164) & (lineitem['L_ORDERKEY'] != 113) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['TAX'] > 0.03365690567672974)][['SHIPINSTRUCT', 'QUANTITY', 'SHIPMODE', 'SHIPDATE', 'L_COMMENT', 'RETURNFLAG', 'LINESTATUS']].groupby(by=['LINESTATUS']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] == 'u') | (nation['N_NAME'] == 'F')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 6) | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] >= 13) & (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1)][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] <= 7) & (nation['N_REGIONKEY'] != 2)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'o')].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('a')) & (customer['C_ACCTBAL'] < 3067.7906997739274) | (customer['C_COMMENT'] != ',')][['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] != 76671) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] > 398) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] == 327059.0358422759) & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] > 0)].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'f') & (part['P_NAME'].str.startswith('cor'))][['SIZE', 'TYPE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'RETAILPRICE', 'CONTAINER']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 28) | (part['BRAND'] == 'Brand#31') & (part['CONTAINER'] != 'JUMBO')][['PT_COMMENT', 'SIZE', 'MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'TYPE', 'P_NAME', 'P_PARTKEY']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ACCTBAL'] >= 2140.1410084979416) | (supplier['S_NATIONKEY'] == 7) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'd') | (supplier['S_ADDRESS'] != 'F')].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 2095)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 980.6700824130089)].merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['P_NAME'].str.startswith('bis'))][['CONTAINER', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] == 9)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 9292.353336082926) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'e')][['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '17-') | (supplier['S_ACCTBAL'] != 6469.681350302052) | (supplier['S_ACCTBAL'] >= -339.5827151019339) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != '6') | (supplier['S_ACCTBAL'] > 8465.09562314364)][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 149)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 13)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'y')].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'o') & (customer['C_NATIONKEY'] > 0) & (customer['C_COMMENT'].str.startswith('c')) & (customer['C_PHONE'] != '1')].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] < 5) & (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] < 1)].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'S') & (customer['C_CUSTKEY'] >= 37) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_PHONE'] == '18-') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] > 20) & (customer['C_COMMENT'].str.startswith('e'))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('b')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_ACCTBAL'] != 9092.641145988791) & (customer['C_COMMENT'] == 'd') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] == 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 66)].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'] != 'e') & (nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 59) & (customer['C_NATIONKEY'] < 18) | (customer['C_ACCTBAL'] == 1181.489697655044)].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] == 'p') | (nation['N_NAME'] == 'A')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_PHONE'] == '18-')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['QUANTITY'] >= 41) & (lineitem['L_ORDERKEY'] != 96) & (lineitem['RECEIPTDATE'] > '1992-05-02')].merge(partsupp.merge(part[(part['P_NAME'] == 't') & (part['BRAND'] != 'Brand#33') | (part['BRAND'] == 'Brand#44') & (part['PT_COMMENT'] == 'r') & (part['PT_COMMENT'] == 'the') & (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] == 911.3222555570285)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_NATIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 20) | (nation['N_NATIONKEY'] <= 18)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'BUILDING', 'FURNITURE'])) & (customer['C_PHONE'] != '1')][['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 9114.238894838423) | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('n'))][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['PT_COMMENT'] == 'i') & (part['SIZE'] != 15)][['RETAILPRICE', 'BRAND', 'TYPE', 'P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'P_NAME']).agg('count')

part[(part['P_PARTKEY'] == 104) & (part['SIZE'] != 42) & (part['TYPE'] != 'P') & (part['CONTAINER'] != 'SM') | (part['CONTAINER'] != 'SM')][['RETAILPRICE', 'PT_COMMENT', 'BRAND', 'P_NAME', 'SIZE', 'MFGR', 'CONTAINER']].groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 948.2100363683753) | (part['TYPE'].str.startswith('STA')) | (part['MFGR'].isin(['Manufacturer#5'])) & (part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'p') | (part['P_NAME'].str.startswith('r'))][['RETAILPRICE', 'TYPE', 'BRAND', 'SIZE', 'CONTAINER']].groupby(by=['SIZE', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 6112) & (partsupp['PS_SUPPKEY'] < 5792) | (partsupp['P_COMMENT'].str.startswith('n')) & (partsupp['SUPPLYCOST'] > 533.8576246198434) & (partsupp['AVAILQTY'] <= 5654)].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] >= 16)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'P_NAME', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 1801) & (partsupp['AVAILQTY'] < 5262) | (partsupp['PS_PARTKEY'] > 49) | (partsupp['P_COMMENT'] != 'o') | (partsupp['SUPPLYCOST'] == 746.7211556774249)].merge(part[(part['P_PARTKEY'] == 129)][['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[(nation['N_NAME'] == 'V')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('z'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('u')) | (supplier['S_NATIONKEY'] >= 14) & (supplier['S_PHONE'] != '2')][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 18)][['S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 17)].merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_COMMENT'] != 'e') | (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] <= 18) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'c') | (customer['C_ADDRESS'] == 'c') | (customer['C_NATIONKEY'] <= 15) | (customer['C_ACCTBAL'] >= 3836.86079941916)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'p')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM', '5-LOW'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] > 369) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NATIONKEY'] > 20) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'BUILDING'])) & (customer['C_PHONE'] == '18-') & (customer['C_COMMENT'] == 'o') & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 137) & (lineitem['TAX'] > 0.07744832544362526) | (lineitem['L_PARTKEY'] < 134904) & (lineitem['EXTENDEDPRICE'] > 29164.838384625)][['EXTENDEDPRICE', 'COMMITDATE', 'SHIPDATE', 'SHIPMODE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG']].groupby(by=['SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'RETURNFLAG']).agg('count')

nation[(nation['N_NATIONKEY'] < 15) & (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] > 13) & (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM']))].merge(customer[(customer['C_ADDRESS'].str.startswith('c')) & (customer['C_COMMENT'] != 'o') | (customer['C_NATIONKEY'] == 9) | (customer['C_NATIONKEY'] > 9) & (customer['C_PHONE'] != '27-') & (customer['C_CUSTKEY'] == 56) | (customer['C_ACCTBAL'] <= 1765.4782382599624) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'MACHINERY', 'FURNITURE']))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] >= '1998-07-21')][['TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 4408) | (orders['TOTALPRICE'] != 281443.9524775742) & (orders['TOTALPRICE'] <= 235826.9403807758) | (orders['O_COMMENT'] != 'c') & (orders['TOTALPRICE'] != 163286.3842274013)].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'].str.startswith('c')) | (customer['C_CUSTKEY'] == 16) | (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 191294.70493886093) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'F') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] != 'F')][['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#31') | (part['P_NAME'] != 's') & (part['P_PARTKEY'] < 113) | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) & (part['P_PARTKEY'] == 52)][['SIZE', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['BRAND', 'MFGR', 'P_NAME', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#32', 'Brand#24', 'Brand#41', 'Brand#53', 'Brand#23', 'Brand#25', 'Brand#13', 'Brand#14', 'Brand#31', 'Brand#15', 'Brand#45', 'Brand#43', 'Brand#52', 'Brand#33', 'Brand#51', 'Brand#22', 'Brand#21'])) & (part['TYPE'] != 'M') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4'])) & (part['TYPE'].str.startswith('E')) & (part['TYPE'] == 'S')][['RETAILPRICE', 'TYPE', 'P_NAME', 'MFGR', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER', 'RETAILPRICE', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] == 'Brand#14') & (part['RETAILPRICE'] < 1056.9980326294474) | (part['P_PARTKEY'] == 124) & (part['SIZE'] >= 46) & (part['P_NAME'].str.startswith('g')) | (part['BRAND'] != 'Brand#22') & (part['BRAND'].isin(['Brand#44', 'Brand#24', 'Brand#22']))][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'BRAND']].groupby(by=['BRAND', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] >= 1054.2611984150685) | (part['SIZE'] > 19) | (part['P_PARTKEY'] == 69) & (part['P_PARTKEY'] == 147) & (part['SIZE'] > 45) | (part['P_NAME'] == 'h') | (part['P_NAME'] == 'bis')][['P_NAME', 'CONTAINER', 'TYPE', 'BRAND']].groupby(by=['TYPE', 'CONTAINER', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['SIZE'] <= 3) | (part['RETAILPRICE'] < 1061.769505640359) | (part['PT_COMMENT'].str.startswith('g')) | (part['TYPE'] == 'STA')][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 109)][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['AVAILQTY'] < 7595) | (partsupp['PS_PARTKEY'] != 42) | (partsupp['PS_PARTKEY'] >= 17) | (partsupp['AVAILQTY'] >= 3963)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'o')][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('count')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] < 6)][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] == 6)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 8221.703041280132) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('r'))].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] > 4) | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] < 6) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('26-'))][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_NATIONKEY'] == 17) & (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] != 'F')].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 11) | (supplier['S_SUPPKEY'] <= 64)].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] <= 7) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'] == 'e')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 1579.8782409293963) | (customer['C_ACCTBAL'] > 906.7303851612787) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 7) & (customer['C_CUSTKEY'] < 45) & (customer['C_PHONE'] != '18-')][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'].str.startswith('x')) | (customer['C_CUSTKEY'] > 76) | (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'P') | (orders['CLERK'] != 'C')].merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['EXTENDEDPRICE'] == 25593.315122885815)][['QUANTITY', 'SHIPMODE', 'L_ORDERKEY', 'L_PARTKEY']].merge(orders[['O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'O_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'SHIP'])) & (lineitem['LINENUMBER'] == 2) | (lineitem['QUANTITY'] >= 46) & (lineitem['QUANTITY'] == 49) & (lineitem['L_COMMENT'] == 'f') | (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['L_SUPPKEY', 'SHIPDATE', 'QUANTITY', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE', 'COMMITDATE', 'LINENUMBER', 'L_COMMENT']]

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] != 'J')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] >= 5032.146313447439) & (customer['C_NATIONKEY'] == 5) & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 4468.756036399903) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('P')) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] != 'd')].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] > 9032.78171333838) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 93)].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] != 13)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'K')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] == 'e')].merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == '!') & (part['P_PARTKEY'] > 26) | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] != 973.7445299345881)][['MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 6554.94314551116) & (supplier['S_NATIONKEY'] >= 3)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 18) & (partsupp['PS_PARTKEY'] == 24)].merge(part[(part['SIZE'] < 35) & (part['TYPE'] == 'S') | (part['P_NAME'] == 'w') & (part['TYPE'] != 'M') & (part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] != 'WRAP') | (part['BRAND'].isin(['Brand#54', 'Brand#21'])) & (part['P_PARTKEY'] <= 59) & (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 798) & (partsupp['AVAILQTY'] >= 7002) & (partsupp['SUPPLYCOST'] != 769.236837327579) | (partsupp['AVAILQTY'] > 7893) & (partsupp['AVAILQTY'] >= 3303)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('a'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'x')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] != 11)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NAME'] == 'M')].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 927.6096288724111)][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 14) & (nation['N_NATIONKEY'] >= 0) & (nation['N_NAME'] == 'G')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_COMMENT'].str.startswith('b')) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_ORDERKEY'] <= 115) | (lineitem['LINENUMBER'] > 3) | (lineitem['EXTENDEDPRICE'] > 50962.58518325039) | (lineitem['TAX'] == 0.07002318416136974)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 4) & (partsupp['AVAILQTY'] == 602) | (partsupp['AVAILQTY'] >= 4319)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NATIONKEY'] >= 6)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] != 's') & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'x') | (customer['C_PHONE'].str.startswith('3')) | (customer['C_PHONE'].str.startswith('13-'))].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 46) & (partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['PS_PARTKEY'] == 35) | (partsupp['P_COMMENT'] != ';')].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('q')) | (supplier['S_NATIONKEY'] != 5) & (supplier['S_NATIONKEY'] >= 21) | (supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] > 10)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 2868) | (partsupp['PS_PARTKEY'] == 40) | (partsupp['PS_SUPPKEY'] >= 4928) & (partsupp['PS_PARTKEY'] <= 26)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] == 160) & (part['SIZE'] > 19) & (part['SIZE'] > 27) & (part['P_PARTKEY'] != 149) | (part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 't') & (partsupp['P_COMMENT'].str.startswith('k')) | (partsupp['PS_PARTKEY'] >= 24) | (partsupp['SUPPLYCOST'] != 685.3618505208944) & (partsupp['AVAILQTY'] > 4053)].merge(supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_ADDRESS'] == '4') | (supplier['S_NATIONKEY'] == 15) & (supplier['S_ACCTBAL'] != 7951.719859579954) | (supplier['S_ADDRESS'] == 'J') & (supplier['S_PHONE'] != '17-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 11)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'T') & (supplier['S_ACCTBAL'] > 9390.471456385352) & (supplier['S_NATIONKEY'] < 17) & (supplier['S_COMMENT'] != 'v')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] <= -744.6379911339347) | (supplier['S_ACCTBAL'] > 5130.427581523395) & (supplier['S_ACCTBAL'] > 5493.57248342121) & (supplier['S_ACCTBAL'] > 6441.535053912852) | (supplier['S_NATIONKEY'] == 0)][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'] != 'u')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 4) | (customer['C_ACCTBAL'] > 2338.8587781710235)][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] <= 5001.02728200428)][['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 0) & (nation['N_NATIONKEY'] < 17) & (nation['N_NATIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 183)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 't') & (lineitem['LINENUMBER'] <= 6) & (lineitem['DISCOUNT'] <= 0.06334979921410415) & (lineitem['L_ORDERKEY'] >= 51) | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPMODE'] == 'MAIL')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 25)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['TYPE'] != 'M') & (part['BRAND'] != 'Brand#22') & (part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] >= 19) | (lineitem['EXTENDEDPRICE'] < 40016.790336541126) & (lineitem['L_ORDERKEY'] >= 183)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 14)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 76) & (supplier['S_COMMENT'] == 'a')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 13) & (supplier['S_NATIONKEY'] != 1)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 5952) | (partsupp['P_COMMENT'] == '.')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('t'))][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('L')) | (part['P_NAME'] == 's') | (part['PT_COMMENT'] != 'i') | (part['P_PARTKEY'] < 194) & (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] < 24) | (part['SIZE'] < 23) | (part['BRAND'].isin(['Brand#43', 'Brand#14', 'Brand#13', 'Brand#12', 'Brand#31', 'Brand#42', 'Brand#34', 'Brand#15', 'Brand#51', 'Brand#32', 'Brand#11', 'Brand#52'])) & (part['SIZE'] < 22)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] > 11) & (nation['N_NATIONKEY'] <= 14)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 1192.3558832140413) | (supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] != 8) & (supplier['S_SUPPKEY'] == 61)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 65)].merge(nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 3807.973158810685) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] <= 22) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_COMMENT'].str.startswith('k')) & (customer['C_CUSTKEY'] >= 25)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 44) | (customer['C_NATIONKEY'] == 22) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 45) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 64) & (customer['C_CUSTKEY'] < 88) & (customer['C_NATIONKEY'] >= 18) & (customer['C_NATIONKEY'] > 0) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD']))].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 3998.008990531641) & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_ADDRESS'] != 'l')].merge(nation[(nation['N_NATIONKEY'] > 4) | (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 18) & (customer['C_ACCTBAL'] <= 2796.013697119976)][['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] < 10)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'M')].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'].str.startswith('k'))].merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 1867) | (lineitem['L_COMMENT'].str.startswith('t')) & (lineitem['SHIPDATE'] == '1992-04-27')].merge(orders[['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] <= 7) | (customer['C_CUSTKEY'] == 56) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] > 10)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] < 3) & (nation['N_COMMENT'] == 'e') | (nation['N_NAME'].str.startswith('E'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'z') | (orders['O_ORDERKEY'] <= 769) & (orders['O_ORDERKEY'] != 476) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] != '1998-07-21')].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('-')) & (orders['O_CUSTKEY'] == 143487) & (orders['TOTALPRICE'] == 221561.22881250424) | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] != 73188) & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_ORDERKEY'] <= 680)].merge(customer[(customer['C_CUSTKEY'] == 14)][['C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 652.3766566329168) | (partsupp['PS_PARTKEY'] < 15) & (partsupp['SUPPLYCOST'] <= 605.6392845116894) | (partsupp['SUPPLYCOST'] > 448.0470946883283)].merge(part[['RETAILPRICE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 220.58017695555625) & (partsupp['PS_PARTKEY'] > 40)].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ADDRESS'] == 'y') & (supplier['S_PHONE'] != '2') | (supplier['S_ACCTBAL'] >= 8317.298637630536) & (supplier['S_NATIONKEY'] <= 7) | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_PHONE'] != '2')].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 5)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NATIONKEY'] <= 4)].merge(nation[(nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 3304.0084112630766) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'p') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] >= 6674.707186774784) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD']))].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] >= 0)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'a')][['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 6) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 4232.920991732245) | (customer['C_CUSTKEY'] <= 2) & (customer['C_CUSTKEY'] >= 29) & (customer['C_NATIONKEY'] <= 16)][['C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != 'y') | (nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 64) | (customer['C_CUSTKEY'] == 69) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_PHONE'] == '1') & (customer['MKTSEGMENT'] != 'FURNITURE')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['TAX'] != 0.0524702521708526) | (lineitem['L_PARTKEY'] > 188143) | (lineitem['EXTENDEDPRICE'] == 72729.05751790556) & (lineitem['L_PARTKEY'] >= 89563) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['L_PARTKEY'] >= 156550)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 230.00823324671478) & (partsupp['SUPPLYCOST'] >= 533.3594330799893)].merge(part[['P_NAME', 'SIZE', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.07253614142399571) & (lineitem['QUANTITY'] >= 2) & (lineitem['SHIPDATE'] >= '1998-10-30')].merge(orders[(orders['O_ORDERKEY'] <= 139) | (orders['O_CUSTKEY'] > 25996) & (orders['O_COMMENT'].str.startswith('w')) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_COMMENT'] != 'uri') | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_COMMENT'] == 'j')].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] <= 27) | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['EXTENDEDPRICE'] == 82636.41454088072) | (lineitem['QUANTITY'] > 45) & (lineitem['L_PARTKEY'] >= 117463) | (lineitem['RECEIPTDATE'] != '1998-11-06')][['TAX', 'SHIPMODE', 'RETURNFLAG', 'COMMITDATE', 'L_SUPPKEY', 'DISCOUNT', 'QUANTITY', 'RECEIPTDATE', 'L_ORDERKEY', 'LINESTATUS']].merge(orders[['O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] < 80) & (customer['C_PHONE'] != '25-') & (customer['C_CUSTKEY'] > 98) | (customer['C_ADDRESS'].str.startswith('M'))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'r')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[['C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_PHONE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5613)].merge(part[(part['CONTAINER'] == 'JUMBO') & (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'h') | (part['TYPE'] != 'M') | (part['RETAILPRICE'] == 1010.5251362964013) & (part['MFGR'] == 'Manufacturer#5')][['PT_COMMENT', 'SIZE', 'CONTAINER', 'MFGR', 'BRAND', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 11) | (nation['N_NAME'] != 'A')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'X') & (supplier['S_SUPPKEY'] > 179) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_NATIONKEY'] == 12) & (nation['N_COMMENT'].str.startswith('h'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'y') & (supplier['S_COMMENT'] == 'es ')][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 't') | (supplier['S_ADDRESS'] == ' ') | (supplier['S_NATIONKEY'] <= 7)][['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] < 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 2237.350673245872) | (supplier['S_ADDRESS'].str.startswith('c')) & (supplier['S_ADDRESS'].str.startswith('v')) & (supplier['S_NATIONKEY'] >= 2)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_ACCTBAL'] <= 6727.615155288774) | (supplier['S_ACCTBAL'] > 583.0271311984193)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 64.36571357916037) & (partsupp['PS_SUPPKEY'] != 1099) | (partsupp['SUPPLYCOST'] < 246.6699915350327) | (partsupp['SUPPLYCOST'] > 758.9868258712318) & (partsupp['AVAILQTY'] == 9593)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 31) | (supplier['S_NATIONKEY'] <= 23) & (supplier['S_ACCTBAL'] <= 4661.490269893849) | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_ACCTBAL'] != 4227.74934761799) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 62)][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] != 'Brand#32') | (part['PT_COMMENT'] == 'g') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1'])) & (part['RETAILPRICE'] != 1051.0826066628158) & (part['BRAND'] != 'Brand#12') & (part['SIZE'] != 44)][['PT_COMMENT', 'BRAND', 'RETAILPRICE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['L_SUPPKEY'] != 6078) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['DISCOUNT'] != 0.023782675828995528)][['SHIPDATE', 'L_ORDERKEY']].merge(orders[(orders['TOTALPRICE'] < 179777.11661516211) | (orders['ORDERDATE'] != '1992-01-13')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 192) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['EXTENDEDPRICE'] != 28473.220524213946) & (lineitem['TAX'] == 0.018731978761372243)][['LINESTATUS', 'L_ORDERKEY', 'SHIPMODE']].merge(orders[(orders['O_CUSTKEY'] > 142746) | (orders['TOTALPRICE'] <= 9867.115738820983) | (orders['ORDERDATE'] <= '1992-01-13')][['ORDERSTATUS', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 7759) | (lineitem['L_ORDERKEY'] >= 175) | (lineitem['LINESTATUS'] != 'F')].merge(orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_CUSTKEY'] > 25887) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 70771) & (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] > 221193.6944006681) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_NATIONKEY'] < 11) | (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_PHONE'] != '13-')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] == 39) & (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['LINESTATUS'] != 'F') | (lineitem['LINESTATUS'].isin(['F']))][['DISCOUNT', 'EXTENDEDPRICE', 'SHIPMODE', 'L_ORDERKEY', 'TAX']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_ADDRESS'].str.startswith('K'))][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] != 241) & (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0)][['ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 29) | (partsupp['P_COMMENT'] == ' ') | (partsupp['AVAILQTY'] != 6944)].merge(supplier[(supplier['S_SUPPKEY'] < 148)][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 45) | (partsupp['PS_PARTKEY'] <= 31)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] <= 11) & (supplier['S_SUPPKEY'] > 34) | (supplier['S_NATIONKEY'] == 9) | (supplier['S_NATIONKEY'] != 1) & (supplier['S_NATIONKEY'] >= 23) & (supplier['S_ACCTBAL'] >= 4138.445695725241)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['PS_SUPPKEY'] >= 4527) | (partsupp['AVAILQTY'] >= 430)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_SUPPKEY'] <= 4133) & (partsupp['P_COMMENT'] == 'bli')].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 543.6567162634611) | (partsupp['P_COMMENT'] == 'v') & (partsupp['SUPPLYCOST'] >= 657.4810999893228) | (partsupp['PS_PARTKEY'] < 28) & (partsupp['AVAILQTY'] < 4088)].merge(supplier[(supplier['S_COMMENT'] == 't') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 9) | (supplier['S_NATIONKEY'] != 15) | (supplier['S_SUPPKEY'] >= 4)].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_NAME'] != 'J') & (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-'))][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 123) | (supplier['S_COMMENT'] != 'l') & (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'] != 'k') | (supplier['S_ADDRESS'] != '5')][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] <= 0) & (customer['C_ACCTBAL'] >= 94.07193914340758) | (customer['C_COMMENT'].str.startswith('e'))].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#2') & (part['RETAILPRICE'] == 1077.0939616458204) & (part['P_PARTKEY'] >= 193) & (part['PT_COMMENT'].str.startswith('r')) & (part['P_NAME'] == 'r') & (part['P_NAME'] == 'y')][['MFGR', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 4) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['L_ORDERKEY'] < 117) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['QUANTITY'] < 44) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_PARTKEY'] < 93262) | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM', '1-URGENT'])) | (orders['CLERK'] != 'C')][['O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['SHIPMODE'].isin(['AIR'])) | (lineitem['DISCOUNT'] < 0.06403495889142496) & (lineitem['EXTENDEDPRICE'] < 60784.26612711044) | (lineitem['L_SUPPKEY'] <= 3255) | (lineitem['LINENUMBER'] < 5) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['TAX'] == 0.027583372451787352) | (lineitem['LINESTATUS'].isin(['F', 'O']))][['RECEIPTDATE', 'LINESTATUS', 'QUANTITY', 'L_COMMENT', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN']))].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'] != 'Brand#44') & (part['P_PARTKEY'] <= 71) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4'])) | (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'] == 'x')][['MFGR', 'SIZE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('8')) & (customer['C_COMMENT'] == 'd')].merge(nation[(nation['N_NATIONKEY'] > 6) & (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] != 'C') & (nation['N_NAME'] != 'K')].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] >= 60) | (customer['C_COMMENT'].str.startswith('l')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'] != 'l') | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_COMMENT'] != 'h') & (customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] > 7)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 58059.689083765195) | (orders['O_ORDERKEY'] > 414) | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_COMMENT'].str.startswith('e'))].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] == 10) | (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] != 681) & (orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['C_ADDRESS'] == 'J')][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] >= 2034)].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 7293) | (partsupp['SUPPLYCOST'] <= 589.4682630978041) | (partsupp['SUPPLYCOST'] <= 754.2153532535286) & (partsupp['AVAILQTY'] != 6311)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 9) & (nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'F')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 1249.6499217135336) | (supplier['S_SUPPKEY'] >= 55)][['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != ',') | (supplier['S_ADDRESS'] == 'h') & (supplier['S_SUPPKEY'] < 152) | (supplier['S_COMMENT'] == 'al ')][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 22) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != '!')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 0) | (supplier['S_COMMENT'] == 'e') & (supplier['S_COMMENT'] != 'k') & (supplier['S_COMMENT'] != 'c') | (supplier['S_SUPPKEY'] <= 36) & (supplier['S_ACCTBAL'] <= 1270.5308319538897) | (supplier['S_ACCTBAL'] == 403.6098059838678)].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 384.50042701075245) & (customer['C_CUSTKEY'] > 39) & (customer['C_ADDRESS'] != 'w') | (customer['C_PHONE'].str.startswith('3')) & (customer['C_NATIONKEY'] >= 13) | (customer['C_ACCTBAL'] >= 2796.9864341554094)][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('i'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'l') & (customer['C_PHONE'] == '2') | (customer['C_CUSTKEY'] <= 30) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'] != 'S') | (nation['N_NAME'].str.startswith('E'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['QUANTITY'] >= 5) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['TAX'] <= 0.03132095772849656) & (lineitem['L_SUPPKEY'] != 3875)].merge(orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] != 2) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['TAX'] != 0.028930083892648922) & (lineitem['DISCOUNT'] != 0.0911042347632453) & (lineitem['L_PARTKEY'] != 124510)][['L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 5981) & (partsupp['AVAILQTY'] == 1570) & (partsupp['PS_PARTKEY'] != 7)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] < 176681) & (lineitem['L_PARTKEY'] >= 193062) & (lineitem['LINENUMBER'] <= 1) & (lineitem['SHIPMODE'].isin(['MAIL', 'SHIP', 'TRUCK', 'AIR', 'RAIL'])) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['EXTENDEDPRICE'] > 79358.91853318876)].merge(partsupp[(partsupp['SUPPLYCOST'] < 654.0227816748666) & (partsupp['PS_PARTKEY'] > 13) & (partsupp['P_COMMENT'].str.startswith('y')) | (partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['SUPPLYCOST'] == 48.26474668123355)].merge(part[(part['SIZE'] < 25) | (part['CONTAINER'] != 'SM') | (part['PT_COMMENT'].str.startswith('x')) | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] == 119270) & (lineitem['LINENUMBER'] <= 5) | (lineitem['L_SUPPKEY'] != 4652) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['EXTENDEDPRICE'] > 1668.7106409826622) | (lineitem['TAX'] != 0.019972538437477195) | (lineitem['TAX'] < 0.061536903430622014)].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] > 68490.53310937269) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'O') | (orders['SHIPPRIORITY'] < 0)][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['DISCOUNT'] <= 0.09252143305165572)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 7092) & (partsupp['P_COMMENT'] != 'p') | (partsupp['P_COMMENT'] == 't') | (partsupp['P_COMMENT'] != 'are')][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 5585.379791359705)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_ACCTBAL']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR'])) & (lineitem['QUANTITY'] < 27) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_ORDERKEY'] != 44) & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'AIR', 'FOB']))][['L_SUPPKEY', 'L_ORDERKEY', 'L_PARTKEY', 'RETURNFLAG', 'SHIPMODE', 'TAX', 'LINESTATUS', 'EXTENDEDPRICE']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] >= 84394.92844019341)].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH'])) & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 795) | (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] < 26224.585866502806) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] < 128440) & (orders['O_CUSTKEY'] < 128773)].merge(customer[(customer['C_NATIONKEY'] > 3) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 14) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_COMMENT'] != 't') | (customer['C_ADDRESS'] == '8')][['C_PHONE', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 336440.39681925357) & (orders['TOTALPRICE'] >= 40104.48755241344) | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] != 'j') | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] == 639)][['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('n'))][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] >= 46) | (supplier['S_ACCTBAL'] > 3479.5610475577305) & (supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_SUPPKEY'] != 76) & (supplier['S_COMMENT'] != 'x') & (supplier['S_PHONE'] == '32-')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'y') & (part['MFGR'] != 'Manufacturer#1') & (part['BRAND'].isin(['Brand#52', 'Brand#45', 'Brand#14', 'Brand#32', 'Brand#53', 'Brand#12', 'Brand#21', 'Brand#22', 'Brand#51', 'Brand#23', 'Brand#31', 'Brand#11', 'Brand#41', 'Brand#24'])) | (part['P_PARTKEY'] < 19) & (part['BRAND'] != 'Brand#31') & (part['P_PARTKEY'] != 136) & (part['P_NAME'] == 'cor') & (part['RETAILPRICE'] <= 911.2001399210378)][['CONTAINER', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 21) & (supplier['S_NATIONKEY'] >= 5)].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 1) | (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'I') & (customer['C_CUSTKEY'] >= 76) | (customer['C_ACCTBAL'] <= 4725.773590353186) & (customer['C_COMMENT'] == 'c')][['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'z')][['C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'q') | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_ADDRESS'] == 'g') | (customer['C_ADDRESS'] != 'h') | (customer['C_COMMENT'] != 't') & (customer['C_ACCTBAL'] >= 1004.639277766441)][['C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_NATIONKEY'] > 22)].merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 1082) & (partsupp['PS_PARTKEY'] < 28) & (partsupp['PS_SUPPKEY'] < 6935) & (partsupp['P_COMMENT'].str.startswith('the'))][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'AIR', 'REG AIR', 'TRUCK', 'RAIL', 'MAIL'])) | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['EXTENDEDPRICE'] >= 86071.58394003562)].merge(partsupp[(partsupp['AVAILQTY'] == 7585) | (partsupp['PS_SUPPKEY'] < 5220) & (partsupp['P_COMMENT'] != 's') & (partsupp['PS_SUPPKEY'] > 6675) & (partsupp['AVAILQTY'] < 2710)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'SIZE', 'CONTAINER']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 10019) | (orders['O_CUSTKEY'] >= 130952) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'].isin(['P'])) & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] < 150)].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] == ',') & (customer['C_CUSTKEY'] == 10) | (customer['C_ADDRESS'] != '9') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] != 6341.31531734864)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 302.174263441764) & (partsupp['PS_PARTKEY'] <= 29) | (partsupp['P_COMMENT'] != 'u')][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] != 'm') & (part['SIZE'] >= 42) & (part['RETAILPRICE'] != 989.5460950301078) | (part['CONTAINER'] == 'JUMBO') & (part['P_PARTKEY'] != 88) & (part['P_NAME'] == 'lem') | (part['TYPE'] != 'S') & (part['BRAND'] != 'Brand#53') & (part['CONTAINER'].str.startswith('WRAP'))][['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 617.3168673281086) | (partsupp['AVAILQTY'] <= 771) | (partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_SUPPKEY'] == 2398)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'C') & (supplier['S_SUPPKEY'] <= 150) & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 16) | (nation['N_COMMENT'] != 'r') | (nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] >= 21)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] > 6970.293033516568) & (supplier['S_ACCTBAL'] == 3874.7081484445) | (supplier['S_ADDRESS'] != '8') | (supplier['S_SUPPKEY'] <= 134) & (supplier['S_NATIONKEY'] != 4) | (supplier['S_SUPPKEY'] != 65) & (supplier['S_ACCTBAL'] != 3488.746628375591)].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NAME'].str.startswith('F')) & (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'u') & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('q'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] > 5)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 192) & (supplier['S_ADDRESS'] != ',') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_SUPPKEY'] != 42) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] != 18) & (nation['N_NATIONKEY'] <= 0)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] != 5146.428163618315) & (customer['C_ADDRESS'] != 'X') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 7) | (customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C')][['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) | (part['CONTAINER'] != 'JUMBO') & (part['SIZE'] >= 39) | (part['PT_COMMENT'] == 'n') & (part['TYPE'].str.startswith('M')) & (part['BRAND'] == 'Brand#21') | (part['TYPE'].str.startswith('P')) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['CONTAINER'].str.startswith('JUMBO'))][['P_NAME', 'SIZE', 'TYPE', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'BRAND', 'RETAILPRICE']).agg('count')

orders[(orders['O_ORDERKEY'] < 489)].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] <= 74) & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'G') | (supplier['S_ACCTBAL'] != 6258.450099921323) & (supplier['S_PHONE'].str.startswith('3'))][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 0) | (supplier['S_ADDRESS'] != 'u') & (supplier['S_NATIONKEY'] == 18) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '1') & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 11) & (supplier['S_ACCTBAL'] >= 3797.8542014911955) | (supplier['S_ACCTBAL'] <= 3323.867235814683) & (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 5616.308658519872) | (customer['C_NATIONKEY'] != 10) & (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] != 21) & (customer['C_ADDRESS'] == 'g') & (customer['C_PHONE'] == '18-')][['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'] != 'u')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 257.65715237218825) | (partsupp['PS_SUPPKEY'] == 78) & (partsupp['SUPPLYCOST'] != 885.3930160498519) & (partsupp['AVAILQTY'] != 5864) & (partsupp['PS_SUPPKEY'] > 5050)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 140798)][['CLERK', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 513) & (orders['O_CUSTKEY'] < 119932) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_CUSTKEY'] == 15567) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 145304)].merge(customer[(customer['C_ADDRESS'] != 'z') | (customer['C_NATIONKEY'] > 14) | (customer['C_PHONE'] != '1') | (customer['C_CUSTKEY'] == 44) & (customer['C_COMMENT'] == 'a') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'BUILDING'])) | (customer['C_ACCTBAL'] < 9893.292358995968) & (customer['C_ACCTBAL'] <= -270.2784243099635)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 935.6009943760964) & (partsupp['SUPPLYCOST'] < 851.3808024145504) & (partsupp['SUPPLYCOST'] < 232.03023339204753)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1019.6716238631781) & (part['SIZE'] == 32) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] == 'kag') | (part['SIZE'] >= 4) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2']))][['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != ' ') & (customer['C_ACCTBAL'] > 8630.129236188095) & (customer['C_ACCTBAL'] < 8276.070322461883) & (customer['C_CUSTKEY'] <= 34) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_COMMENT'] == 'a')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 4) | (nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] != 0)].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'].str.startswith('13-')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] == 'h')][['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 1)].merge(region[(region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 25) & (partsupp['PS_PARTKEY'] != 29) & (partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['PS_SUPPKEY'] == 7525)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 15) | (nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'] == 'P')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['EXTENDEDPRICE'] < 58470.17001219087)].merge(orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['O_ORDERKEY'] > 658) & (orders['TOTALPRICE'] <= 153388.5218594579) & (orders['O_CUSTKEY'] >= 80852) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM']))].merge(customer[(customer['C_ACCTBAL'] > 2489.0292151011317)][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'TRUCK', 'MAIL', 'FOB', 'SHIP', 'AIR'])) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'].isin(['SHIP'])) & (lineitem['L_COMMENT'] != 'ly ')].merge(partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] == 7121.068607478918) & (customer['C_CUSTKEY'] != 82) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'a')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] < 3084.7389856732316) & (customer['C_ACCTBAL'] < 3190.9027441310946) | (customer['C_ACCTBAL'] == 4787.9270875707125)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] == 2935.2545520169524) & (customer['C_COMMENT'] != 'u') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] == '9')].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NAME'] != 'G') & (nation['N_COMMENT'] == 'l')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] == '2') | (customer['C_PHONE'] == '1') | (customer['C_NATIONKEY'] <= 20) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'w') & (customer['C_CUSTKEY'] < 93) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] > 6)].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] >= 689) | (partsupp['PS_PARTKEY'] == 35)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['SIZE'] != 16) | (part['P_PARTKEY'] <= 110)][['PT_COMMENT', 'BRAND', 'TYPE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'BRAND', 'TYPE']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'o') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] >= 56) | (supplier['S_NATIONKEY'] < 17)][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] == 1) | (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 44) & (customer['C_COMMENT'].str.startswith('w')) | (customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 22)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('p')) | (partsupp['AVAILQTY'] >= 3082) & (partsupp['SUPPLYCOST'] >= 98.22193415169218)].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] > 3)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['SHIPDATE'] > '1998-10-30')][['DISCOUNT', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'cor') & (part['SIZE'] > 10) & (part['PT_COMMENT'] != 'kag') | (part['BRAND'] == 'Brand#23') | (part['TYPE'].str.startswith('L')) & (part['SIZE'] >= 25) | (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'kag')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['LINESTATUS'] != 'F') & (lineitem['TAX'] < 0.01325393369738176) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['QUANTITY'] <= 27)].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['COMMITDATE'] < '1998-10-16')].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('n'))].merge(nation[(nation['N_NATIONKEY'] < 7) & (nation['N_NAME'] == 'B')].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] == 2) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[['TAX', 'QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPDATE', 'RETURNFLAG']].merge(orders[(orders['O_CUSTKEY'] >= 112017) & (orders['O_COMMENT'] == ' ')].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['O_COMMENT'].str.startswith('y')) & (orders['O_CUSTKEY'] > 110193) | (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C')][['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] != 65830.9090752184) & (orders['O_ORDERKEY'] != 114) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'] != 'g') | (orders['O_CUSTKEY'] < 103153)].merge(customer[(customer['C_PHONE'] == '27-') & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] <= 12)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 7) | (nation['N_NATIONKEY'] > 18) & (nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'l') & (partsupp['PS_SUPPKEY'] >= 461) | (partsupp['AVAILQTY'] != 7279) | (partsupp['PS_PARTKEY'] < 14)].merge(part[(part['BRAND'] == 'Brand#22') & (part['P_NAME'].str.startswith('r')) | (part['P_NAME'] == 'f') | (part['PT_COMMENT'] != 'f') & (part['RETAILPRICE'] == 1068.6407718136988) & (part['PT_COMMENT'] == 'ly ') | (part['P_PARTKEY'] <= 152) & (part['BRAND'].isin(['Brand#24', 'Brand#41', 'Brand#42', 'Brand#34', 'Brand#45', 'Brand#21', 'Brand#55', 'Brand#11'])) & (part['PT_COMMENT'].str.startswith('i'))][['TYPE', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('count')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] > 8273.738154048971) | (supplier['S_NATIONKEY'] == 22) & (supplier['S_COMMENT'] != '.') & (supplier['S_NATIONKEY'] <= 1) & (supplier['S_NATIONKEY'] < 23) & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_NAME'] != 'J')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] == 1963.8775559785515) & (supplier['S_NATIONKEY'] != 4) | (supplier['S_NATIONKEY'] < 11) & (supplier['S_PHONE'] == '3') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'the')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= 8897.764190175367) & (supplier['S_SUPPKEY'] != 15) | (supplier['S_ACCTBAL'] < 3187.520311442283) & (supplier['S_PHONE'] == '28-')][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.02210082315929407) & (lineitem['LINENUMBER'] <= 4) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_COMMENT'] == 'e') | (lineitem['TAX'] >= 0.060394268837957135) & (lineitem['TAX'] != 0.0708662160815648) | (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['TAX'] < 0.010976281375446026) & (lineitem['L_SUPPKEY'] > 3636)][['L_ORDERKEY', 'QUANTITY', 'RETURNFLAG', 'COMMITDATE', 'SHIPINSTRUCT', 'DISCOUNT', 'SHIPMODE', 'L_SUPPKEY', 'TAX']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'egu') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '5-LOW'])) | (orders['O_ORDERKEY'] != 193) | (orders['O_ORDERKEY'] < 68)][['O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] != 6) & (customer['C_ADDRESS'] == 'L') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] != 6229.096209935811) | (customer['C_ADDRESS'] == ',') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] >= -692.8290139370033)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 75135) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW'])) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'] == 's') & (orders['TOTALPRICE'] == 192270.77612386824) | (orders['TOTALPRICE'] >= 353632.7909454607)].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 15) | (nation['N_NATIONKEY'] < 14) | (nation['N_NATIONKEY'] != 15)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_CUSTKEY'] <= 18) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] < 4)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 14) & (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['SHIPMODE'].isin(['RAIL', 'AIR', 'REG AIR', 'FOB', 'TRUCK', 'MAIL', 'SHIP'])) & (lineitem['DISCOUNT'] <= 0.08197902390468136) & (lineitem['L_COMMENT'] != '-') & (lineitem['TAX'] >= 0.05076540855583282) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 5)][['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] == 'x') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'P') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'l')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

customer[(customer['C_ADDRESS'] != '6') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] > 5) | (customer['C_CUSTKEY'] >= 86) & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_CUSTKEY'] > 41) | (customer['C_ACCTBAL'] == 9137.763212638367) & (customer['C_COMMENT'] != '.')][['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 26) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_ORDERKEY'] <= 166) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['LINENUMBER'] != 3) | (lineitem['QUANTITY'] > 35)].merge(orders.merge(customer[(customer['C_CUSTKEY'] > 9) & (customer['C_CUSTKEY'] < 75) & (customer['C_PHONE'] != '25-') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] != 20)].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] <= 54018) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_ORDERKEY'] <= 129) & (orders['ORDERDATE'] <= '1992-01-13')][['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] >= 22) & (customer['C_CUSTKEY'] >= 35) & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] != 12) & (nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] <= 5870) | (partsupp['PS_SUPPKEY'] > 2562) & (partsupp['PS_SUPPKEY'] == 3589)].merge(supplier[(supplier['S_ACCTBAL'] >= 7622.088913219247) & (supplier['S_SUPPKEY'] != 163) | (supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 4192) & (partsupp['PS_PARTKEY'] < 28) | (partsupp['SUPPLYCOST'] > 603.1904155439711) | (partsupp['PS_PARTKEY'] != 48) | (partsupp['PS_SUPPKEY'] >= 2616)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 'r')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 23) & (partsupp['PS_PARTKEY'] == 41)].merge(supplier[(supplier['S_ADDRESS'] != 'y') | (supplier['S_COMMENT'] != 'w') & (supplier['S_NATIONKEY'] == 23) & (supplier['S_NATIONKEY'] > 3) | (supplier['S_ACCTBAL'] >= 5608.093680301353)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'M')].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 14) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'e') & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 18) | (supplier['S_SUPPKEY'] > 146) & (supplier['S_NATIONKEY'] != 4) | (supplier['S_PHONE'] != '32-')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 2168.347352852746) & (customer['C_ADDRESS'] == 'U') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 10)][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] > 1) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 33) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) & (customer['C_ACCTBAL'] >= 4580.248718462507) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_CUSTKEY'] <= 61) | (customer['C_COMMENT'] != 't') & (customer['C_COMMENT'] != 'q')][['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6017) | (partsupp['AVAILQTY'] == 3394) & (partsupp['AVAILQTY'] != 4126) | (partsupp['P_COMMENT'] == 'd') & (partsupp['PS_PARTKEY'] != 24)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 2344.0382316365103) | (supplier['S_ADDRESS'].str.startswith('X')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 11) | (supplier['S_ADDRESS'] != 'a') & (supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] == 191.034807452804)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 8384) | (lineitem['L_ORDERKEY'] <= 173) & (lineitem['DISCOUNT'] > 0.028568866941536365) | (lineitem['EXTENDEDPRICE'] > 30660.65155224453) & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['L_COMMENT'] != 'j') & (lineitem['DISCOUNT'] == 0.006787660804663498) | (lineitem['COMMITDATE'] <= '1992-05-15')][['LINENUMBER', 'SHIPDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINESTATUS', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(orders[['ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'RECEIPTDATE', 'LINENUMBER', 'L_ORDERKEY', 'L_COMMENT', 'SHIPMODE', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 15) | (nation['N_NATIONKEY'] < 20)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != 'l') | (supplier['S_ADDRESS'] == ',') | (supplier['S_SUPPKEY'] == 119)][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 403.36146140127994) & (customer['C_ACCTBAL'] > 886.8084265320485) & (customer['C_COMMENT'] == 'e') | (customer['C_COMMENT'] != 's') | (customer['MKTSEGMENT'] != 'BUILDING')][['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] < 277565.8166384571) | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] == 'f') & (orders['O_COMMENT'].str.startswith('k'))][['CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINENUMBER'] != 2) | (lineitem['DISCOUNT'] == 0.01894170863287116) & (lineitem['L_SUPPKEY'] >= 3775) | (lineitem['TAX'] >= 0.07011477726881202) & (lineitem['DISCOUNT'] >= 0.007110380227250069)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5089)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('uri')) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'] != 's') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] == 72) & (customer['C_ACCTBAL'] >= 441.6822599046134)].merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERDATE'] != '1998-07-21') | (orders['TOTALPRICE'] != 140621.0941109116) | (orders['O_COMMENT'] == '-') & (orders['O_CUSTKEY'] < 142265) & (orders['O_COMMENT'].str.startswith(' '))].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NAME'] == 'I') | (nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_CUSTKEY'] != 75) | (customer['C_COMMENT'].str.startswith('y')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ADDRESS'] != 'r') | (customer['C_ACCTBAL'] <= 591.1911452681459)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_ORDERKEY'] <= 36) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['LINENUMBER'] != 3) & (lineitem['L_ORDERKEY'] == 69) | (lineitem['L_PARTKEY'] >= 131032) | (lineitem['SHIPMODE'] != 'RAIL')].merge(partsupp[(partsupp['AVAILQTY'] > 9213)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'o') & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['LINESTATUS'] != 'F') | (lineitem['L_SUPPKEY'] == 3026)].merge(partsupp[(partsupp['P_COMMENT'] == 'the') | (partsupp['PS_SUPPKEY'] < 2563)].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 22) & (partsupp['SUPPLYCOST'] == 211.81391749891625) & (partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['AVAILQTY'] > 1266)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 4692) | (partsupp['AVAILQTY'] <= 2143) | (partsupp['SUPPLYCOST'] > 371.09315573641766) | (partsupp['SUPPLYCOST'] > 678.1360243031918) | (partsupp['AVAILQTY'] >= 9814)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'].str.startswith('!')) | (part['RETAILPRICE'] <= 965.2738410191955) | (part['P_NAME'].str.startswith('l')) & (part['BRAND'] == 'Brand#44') & (part['P_PARTKEY'] == 52) | (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] != 941.7978059754927)][['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'TYPE', 'SIZE', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'TYPE', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_COMMENT'] == 'f')].merge(orders[(orders['O_COMMENT'] == 'l') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) & (orders['ORDERSTATUS'] != 'P')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'a') | (customer['C_ADDRESS'] != 'K') & (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 20) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '3')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 23) | (nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] != 8) | (nation['N_NAME'] != 'P')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders[(orders['O_COMMENT'] != 'g') & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'].str.startswith('n')) & (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'].str.startswith('C'))][['ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'SHIP') & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['TAX'] >= 0.013727730221300591) & (lineitem['EXTENDEDPRICE'] >= 80159.66563298773) | (lineitem['L_SUPPKEY'] < 5482) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_COMMENT'].str.startswith('lit'))].merge(orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'L_ORDERKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'COMMITDATE', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('y')) | (partsupp['PS_PARTKEY'] >= 2) & (partsupp['PS_SUPPKEY'] < 2031)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] < 22) | (supplier['S_NATIONKEY'] > 18) | (supplier['S_NATIONKEY'] > 7) | (supplier['S_COMMENT'] == 'b') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'o') & (supplier['S_PHONE'].str.startswith('3'))][['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] != 73896)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] != 3422.348901920749) | (customer['C_NATIONKEY'] == 12) | (customer['C_CUSTKEY'] < 71) | (customer['C_CUSTKEY'] >= 34)][['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] < 4134) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['QUANTITY'] < 49)][['LINENUMBER', 'L_ORDERKEY', 'RECEIPTDATE', 'COMMITDATE', 'SHIPINSTRUCT', 'DISCOUNT', 'L_COMMENT', 'SHIPDATE', 'TAX', 'LINESTATUS']].merge(orders[(orders['TOTALPRICE'] == 100512.29299283026) & (orders['TOTALPRICE'] != 72095.22762116273) | (orders['O_CUSTKEY'] > 137430) | (orders['ORDERDATE'] != '1998-07-21') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] == 259) | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_COMMENT'] != 'n')].merge(nation[(nation['N_COMMENT'].str.startswith('u'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['O_CUSTKEY'] <= 30409) & (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] != 317046.7015038114) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] != 273) & (orders['TOTALPRICE'] == 4287.5193376011375) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '3-MEDIUM']))].merge(customer[(customer['C_CUSTKEY'] < 81) | (customer['C_ACCTBAL'] <= 5148.184074320035) & (customer['C_NATIONKEY'] >= 9) | (customer['C_ACCTBAL'] <= 8146.160570059041) & (customer['C_CUSTKEY'] == 90) | (customer['C_ACCTBAL'] == -749.38546480123)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['TAX'] >= 0.048462784793645575) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['L_PARTKEY'] >= 3694) & (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('u'))].merge(supplier[(supplier['S_ADDRESS'].str.startswith('O')) & (supplier['S_SUPPKEY'] >= 66) | (supplier['S_NATIONKEY'] == 19) | (supplier['S_ACCTBAL'] <= 3538.503995164727) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 111) | (supplier['S_ACCTBAL'] <= 2051.424828281316)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] != 'i')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['TOTALPRICE'] < 227464.71826246305) | (orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['O_COMMENT'].str.startswith('o'))][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'] != 'f') & (customer['C_ADDRESS'] == 'K') & (customer['C_NATIONKEY'] > 15) & (customer['C_COMMENT'].str.startswith('y'))][['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 19) | (nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] > 8)].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 21) | (partsupp['PS_SUPPKEY'] >= 188) & (partsupp['AVAILQTY'] > 5956) & (partsupp['PS_PARTKEY'] > 39)].merge(supplier[(supplier['S_ADDRESS'] == 'S') & (supplier['S_COMMENT'] == 'j') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_ACCTBAL'] <= 8211.814510270156) | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_ADDRESS'] == 'j')][['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] == 'y') | (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'MAIL'])) & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_ORDERKEY'] >= 88)].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] < 8) & (nation['N_NATIONKEY'] > 16) | (nation['N_NATIONKEY'] == 0)].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] < 1635) | (partsupp['P_COMMENT'] == 'f') & (partsupp['PS_PARTKEY'] != 21) | (partsupp['PS_PARTKEY'] == 43)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] >= 1308.2685756037379) & (supplier['S_SUPPKEY'] == 178) | (supplier['S_COMMENT'] == 's') | (supplier['S_PHONE'] != '17-')][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] >= 13) & (nation['N_NATIONKEY'] > 11) & (nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ',') | (partsupp['AVAILQTY'] == 7250) | (partsupp['PS_PARTKEY'] == 40) | (partsupp['SUPPLYCOST'] >= 305.05776153251384)][['PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_ADDRESS'] == 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 119902) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_SUPPKEY'] == 5202) | (lineitem['COMMITDATE'] != '1998-10-16')][['DISCOUNT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'TAX', 'COMMITDATE', 'L_COMMENT', 'LINESTATUS', 'QUANTITY']].merge(orders[(orders['O_ORDERKEY'] == 610) & (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] < 70) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_ADDRESS'].str.startswith('d')) & (customer['C_NATIONKEY'] > 16)][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'].str.startswith('v'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['QUANTITY'] > 12)][['LINENUMBER', 'L_PARTKEY', 'RECEIPTDATE', 'LINESTATUS']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_NATIONKEY'] >= 19) & (nation['N_NATIONKEY'] != 6)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['AVAILQTY'] <= 9264) & (partsupp['PS_PARTKEY'] != 21) | (partsupp['PS_SUPPKEY'] == 2156) & (partsupp['P_COMMENT'].str.startswith('k'))][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['TAX'] >= 0.007491935348489012) & (lineitem['L_PARTKEY'] >= 144064) & (lineitem['RETURNFLAG'].isin(['N', 'R']))][['QUANTITY', 'L_ORDERKEY', 'LINESTATUS']].merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW'])) & (orders['O_COMMENT'] == 'ly ') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_ORDERKEY'] <= 9) & (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_PHONE'] != '2') & (customer['C_NATIONKEY'] != 18) & (customer['C_COMMENT'] != 'd') | (customer['C_ACCTBAL'] > 4673.664145358483)].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_PARTKEY'] > 99905) | (lineitem['EXTENDEDPRICE'] > 43562.557118655)][['L_ORDERKEY', 'QUANTITY', 'RETURNFLAG', 'COMMITDATE', 'DISCOUNT', 'L_PARTKEY', 'SHIPMODE', 'L_SUPPKEY', 'SHIPDATE', 'LINESTATUS']].merge(orders[(orders['O_COMMENT'] != '-') | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] > 136664.14736358213) & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_COMMENT'] != ' ') & (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] == 73177.25552587441)][['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'].str.startswith(' ')) | (customer['C_PHONE'] == '1') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 4704.194301944395) | (customer['C_CUSTKEY'] >= 75) & (customer['C_ACCTBAL'] < 9486.692277603826) & (customer['C_NATIONKEY'] < 4) | (customer['C_ADDRESS'] == 'g')][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 76)][['L_ORDERKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'LINESTATUS', 'EXTENDEDPRICE', 'L_COMMENT', 'TAX', 'RECEIPTDATE']].merge(orders[(orders['O_COMMENT'] == 'r') | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] != 253177.76943298907) & (orders['TOTALPRICE'] < 271681.80072154227) & (orders['O_COMMENT'] != 'egu') & (orders['O_COMMENT'].str.startswith('o')) | (orders['TOTALPRICE'] != 267709.68802809657)][['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] >= 12) | (customer['C_ACCTBAL'] < 5704.164216125876) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] < 63) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] < 97)].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'P')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)