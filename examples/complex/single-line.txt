customer

lineitem

nation

orders

part

partsupp

region

supplier

customer[(customer['C_CUSTKEY'] >= 40)]

customer[(customer['MKTSEGMENT'] != 'MACHINERY')]

customer[['C_ACCTBAL']]

customer[['C_ADDRESS']]

customer[['C_COMMENT']]

customer[['C_CUSTKEY']]

customer[['C_NAME']]

customer[['C_NATIONKEY']]

customer[['C_PHONE']]

customer[['MKTSEGMENT']]

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06')]

lineitem[(lineitem['RETURNFLAG'] != 'N')]

lineitem[['DISCOUNT']]

lineitem[['EXTENDEDPRICE']]

lineitem[['LINESTATUS']]

lineitem[['RETURNFLAG']]

lineitem[['SHIPDATE']]

lineitem[['SHIPINSTRUCT']]

lineitem[['TAX']]

nation[(nation['N_COMMENT'] == 'u')]

nation[(nation['N_REGIONKEY'] <= 3)]

nation[(nation['N_REGIONKEY'] == 3)]

nation[(nation['N_REGIONKEY'] > 2)]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

nation[['N_REGIONKEY']]

orders[(orders['ORDERPRIORITY'] == '2-HIGH')]

orders[(orders['O_COMMENT'] != 'z')]

orders[(orders['O_COMMENT'] == ' ')]

orders[(orders['O_CUSTKEY'] < 116481)]

orders[(orders['O_CUSTKEY'] == 33436)]

orders[(orders['O_ORDERKEY'] <= 458)]

orders[(orders['SHIPPRIORITY'] == 0)]

orders[(orders['SHIPPRIORITY'] >= 0)]

orders[(orders['TOTALPRICE'] > 31875.474483142018)]

orders[['CLERK']]

orders[['ORDERDATE']]

orders[['ORDERSTATUS']]

orders[['O_ORDERKEY']]

orders[['TOTALPRICE']]

part[(part['BRAND'] != 'Brand#13')]

part[(part['BRAND'] == 'Brand#42')]

part[(part['BRAND'].isin(['Brand#33']))]

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2']))]

part[(part['PT_COMMENT'] != 'g')]

part[(part['P_NAME'] != 'n')]

part[(part['P_NAME'] == 'blu')]

part[(part['P_PARTKEY'] >= 196)]

part[(part['RETAILPRICE'] != 978.7534264030688)]

part[(part['RETAILPRICE'] == 1088.1026712361481)]

part[(part['SIZE'] == 36)]

part[(part['TYPE'].str.startswith('M'))]

part[(part['TYPE'].str.startswith('SMA'))]

part[['BRAND']]

part[['CONTAINER']]

part[['MFGR']]

part[['PT_COMMENT']]

part[['P_NAME']]

part[['P_PARTKEY']]

part[['RETAILPRICE']]

part[['SIZE']]

part[['TYPE']]

partsupp[(partsupp['AVAILQTY'] < 7257)]

partsupp[(partsupp['PS_PARTKEY'] < 46)]

partsupp[(partsupp['P_COMMENT'].str.startswith('c'))]

partsupp[['AVAILQTY']]

partsupp[['PS_PARTKEY']]

partsupp[['PS_SUPPKEY']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'] == 'l')]

region[(region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('u'))]

region[(region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] != 'M')]

region[(region['R_NAME'] == 'AFR')]

region[(region['R_NAME'] == 'AME')]

region[(region['R_NAME'] == 'ASI')]

region[(region['R_NAME'].str.startswith('A'))]

region[(region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'].str.startswith('AME'))]

region[(region['R_NAME'].str.startswith('E'))]

region[(region['R_NAME'].str.startswith('M'))]

region[(region['R_REGIONKEY'] != 0)]

region[(region['R_REGIONKEY'] != 1)]

region[(region['R_REGIONKEY'] != 2)]

region[(region['R_REGIONKEY'] < 0)]

region[(region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] <= 0)]

region[(region['R_REGIONKEY'] <= 3)]

region[(region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] > 2)]

region[(region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] >= 3)]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[(supplier['S_ADDRESS'] == 'X')]

supplier[(supplier['S_NAME'] == 'S')]

supplier[(supplier['S_NAME'].str.startswith('S'))]

supplier[['S_ACCTBAL']]

supplier[['S_ADDRESS']]

supplier[['S_COMMENT']]

supplier[['S_NAME']]

supplier[['S_NATIONKEY']]

supplier[['S_PHONE']]

supplier[['S_SUPPKEY']]

customer.groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer.groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer.groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer.groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer.groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer.groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 6217.034377825037) | (customer['C_CUSTKEY'] != 24)]

customer[(customer['C_ADDRESS'].str.startswith('f')) | (customer['C_NAME'].str.startswith('C'))]

customer[(customer['C_COMMENT'] != 'a') & (customer['C_ADDRESS'].str.startswith('u'))]

customer[['C_ADDRESS', 'C_NAME']]

customer[['C_ADDRESS', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_NAME', 'C_COMMENT']]

customer[['C_NATIONKEY', 'C_CUSTKEY']]

customer[['C_PHONE', 'C_CUSTKEY']]

customer[['MKTSEGMENT', 'C_ADDRESS']]

customer[['MKTSEGMENT', 'C_PHONE']]

lineitem.groupby(by=['COMMITDATE']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINENUMBER']).agg('max', numeric_only=True)

lineitem.groupby(by=['L_PARTKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['SHIPMODE']).agg('mean', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['SHIPMODE'] == 'TRUCK')]

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['LINENUMBER'] > 4)]

lineitem[['COMMITDATE', 'L_SUPPKEY']]

lineitem[['COMMITDATE', 'QUANTITY']]

lineitem[['COMMITDATE', 'TAX']]

lineitem[['DISCOUNT', 'COMMITDATE']]

lineitem[['DISCOUNT', 'QUANTITY']]

lineitem[['DISCOUNT', 'SHIPDATE']]

lineitem[['DISCOUNT', 'TAX']]

lineitem[['EXTENDEDPRICE', 'LINESTATUS']]

lineitem[['LINENUMBER', 'SHIPMODE']]

lineitem[['L_COMMENT', 'COMMITDATE']]

lineitem[['L_COMMENT', 'SHIPDATE']]

lineitem[['RECEIPTDATE', 'QUANTITY']]

lineitem[['RECEIPTDATE', 'SHIPDATE']]

lineitem[['RETURNFLAG', 'SHIPDATE']]

lineitem[['SHIPDATE', 'EXTENDEDPRICE']]

nation.groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation.groupby(by=['N_NAME']).agg('count')

nation.groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation.groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation.groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'v') | (nation['N_NAME'] == 'G')]

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_NATIONKEY'] <= 19)]

nation[(nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'] == 'F')]

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] == 'a')]

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'E')]

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('J'))]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY']]

nation[['N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_NAME']]

nation[['N_REGIONKEY', 'N_NAME']]

nation[['N_REGIONKEY', 'N_NATIONKEY']]

orders.groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders.groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders.groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERDATE'] >= '1998-07-21')]

orders[(orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] < 46109)]

orders[(orders['TOTALPRICE'] < 235948.1587093516) & (orders['CLERK'].str.startswith('C'))]

orders[['ORDERDATE', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'O_ORDERKEY']]

orders[['ORDERPRIORITY', 'CLERK']]

orders[['ORDERSTATUS', 'CLERK']]

orders[['ORDERSTATUS', 'O_COMMENT']]

orders[['ORDERSTATUS', 'O_ORDERKEY']]

orders[['ORDERSTATUS', 'SHIPPRIORITY']]

orders[['O_ORDERKEY', 'ORDERDATE']]

orders[['O_ORDERKEY', 'ORDERSTATUS']]

orders[['O_ORDERKEY', 'SHIPPRIORITY']]

orders[['SHIPPRIORITY', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'CLERK']]

orders[['TOTALPRICE', 'SHIPPRIORITY']]

part.groupby(by=['BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR']).agg('count')

part.groupby(by=['MFGR']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME']).agg('count')

part.groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE']).agg('count')

part.groupby(by=['SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE']).agg('min', numeric_only=True)

part.groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#33', 'Brand#45', 'Brand#52', 'Brand#53', 'Brand#22', 'Brand#32', 'Brand#31', 'Brand#51', 'Brand#54', 'Brand#41', 'Brand#24', 'Brand#11'])) | (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['BRAND'].isin(['Brand#44', 'Brand#42', 'Brand#21', 'Brand#22', 'Brand#31', 'Brand#45', 'Brand#51', 'Brand#25', 'Brand#15', 'Brand#32', 'Brand#52', 'Brand#13', 'Brand#34', 'Brand#55'])) & (part['MFGR'] == 'Manufacturer#4')]

part[(part['CONTAINER'] == 'MED') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))]

part[(part['CONTAINER'] == 'SM') | (part['P_NAME'] == 'lin')]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) | (part['PT_COMMENT'].str.startswith('the'))]

part[(part['P_NAME'] != 's') | (part['P_PARTKEY'] <= 155)]

part[(part['P_NAME'] == 'i') & (part['RETAILPRICE'] <= 1009.9284230796163)]

part[(part['P_NAME'].str.startswith('n')) | (part['CONTAINER'] == 'LG')]

part[(part['P_PARTKEY'] <= 10) | (part['PT_COMMENT'] == 'y')]

part[(part['SIZE'] < 14) | (part['RETAILPRICE'] != 1030.283130492372)]

part[(part['SIZE'] < 33) | (part['P_PARTKEY'] >= 138)]

part[(part['SIZE'] >= 22) | (part['CONTAINER'].str.startswith('LG'))]

part[(part['TYPE'] != 'L') | (part['CONTAINER'] == 'JUMBO')]

part[(part['TYPE'] != 'L') | (part['SIZE'] > 6)]

part[(part['TYPE'] != 'SMA') & (part['MFGR'] != 'Manufacturer#3')]

part[['BRAND', 'PT_COMMENT']]

part[['BRAND', 'P_NAME']]

part[['BRAND', 'RETAILPRICE']]

part[['BRAND', 'SIZE']]

part[['CONTAINER', 'P_PARTKEY']]

part[['CONTAINER', 'TYPE']]

part[['MFGR', 'PT_COMMENT']]

part[['PT_COMMENT', 'BRAND']]

part[['PT_COMMENT', 'SIZE']]

part[['PT_COMMENT', 'TYPE']]

part[['P_NAME', 'MFGR']]

part[['P_NAME', 'PT_COMMENT']]

part[['P_NAME', 'P_PARTKEY']]

part[['P_PARTKEY', 'BRAND']]

part[['P_PARTKEY', 'RETAILPRICE']]

part[['RETAILPRICE', 'SIZE']]

part[['SIZE', 'CONTAINER']]

part[['SIZE', 'MFGR']]

part[['TYPE', 'BRAND']]

partsupp.groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.groupby(by=['P_COMMENT']).agg('count')

partsupp.groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp.groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST']).agg('count')

partsupp.groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 33) | (partsupp['PS_SUPPKEY'] != 5009)]

partsupp[(partsupp['P_COMMENT'] != 'o') | (partsupp['P_COMMENT'].str.startswith('f'))]

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['AVAILQTY'] <= 1329)]

partsupp[['AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'P_COMMENT']]

partsupp[['P_COMMENT', 'AVAILQTY']]

partsupp[['P_COMMENT', 'SUPPLYCOST']]

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']]

region.groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME']).agg('count')

region.groupby(by=['R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('count')

region.groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 0)]

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('AME'))]

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'ASI')]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] >= 2)]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'l')]

region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'AME')]

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'AFR')]

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'M')]

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'M')]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] > 2)]

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('E'))]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 2)]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 0)]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] > 2)]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'l')]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'u')]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 1)]

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'A')]

region[(region['R_NAME'] != 'AME') & (region['R_NAME'] == 'AME')]

region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] >= 3)]

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'g')]

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] != 1)]

region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] <= 2)]

region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] != 0)]

region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 2)]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] != 1)]

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] == 'h')]

region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'h')]

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'M')]

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] != 0)]

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] < 1)]

region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'u')]

region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 2)]

region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] > 3)]

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 0)]

region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] == 'u')]

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'u')]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']]

supplier.groupby(by=['S_NATIONKEY']).agg('count')

supplier.groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

supplier.groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 9642.024247270556) & (supplier['S_ADDRESS'] != 'r')]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S'))]

supplier[(supplier['S_NATIONKEY'] < 4) | (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_NATIONKEY'] == 14) & (supplier['S_COMMENT'] == 'j')]

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_SUPPKEY'] > 168)]

supplier[(supplier['S_SUPPKEY'] < 108) & (supplier['S_ADDRESS'] != 'E')]

supplier[(supplier['S_SUPPKEY'] <= 54) | (supplier['S_NATIONKEY'] <= 22)]

supplier[['S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_COMMENT']]

supplier[['S_ADDRESS', 'S_ACCTBAL']]

supplier[['S_COMMENT', 'S_PHONE']]

supplier[['S_NAME', 'S_ADDRESS']]

supplier[['S_NAME', 'S_COMMENT']]

supplier[['S_NAME', 'S_PHONE']]

supplier[['S_SUPPKEY', 'S_ACCTBAL']]

customer.groupby(by=['C_ADDRESS', 'C_NAME']).agg('max', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'MKTSEGMENT']).agg('count')

customer.groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer.groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] >= 4118.886846986229) | (customer['C_ACCTBAL'] == 1383.848600308574) | (customer['C_PHONE'].str.startswith('18-'))]

customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ACCTBAL'] == 9810.40522597221)]

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_ADDRESS'] != 'H') | (customer['C_NAME'] == 'C')]

customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']]

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']]

customer[['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']]

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_NAME', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_PHONE', 'C_NAME']]

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[['C_NAME', 'C_ADDRESS', 'C_ACCTBAL']]

customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']]

customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']]

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']]

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']]

lineitem.groupby(by=['COMMITDATE', 'DISCOUNT']).agg('max', numeric_only=True)

lineitem.groupby(by=['DISCOUNT', 'EXTENDEDPRICE']).agg('count')

lineitem.groupby(by=['DISCOUNT', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['LINENUMBER', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'L_SUPPKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'TAX']).agg('count')

lineitem.groupby(by=['L_ORDERKEY', 'SHIPMODE']).agg('count')

lineitem.groupby(by=['L_PARTKEY', 'L_ORDERKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['L_SUPPKEY', 'SHIPMODE']).agg('count')

lineitem.groupby(by=['QUANTITY', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem.groupby(by=['RECEIPTDATE', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 5) | (lineitem['LINENUMBER'] <= 5) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')]

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['LINENUMBER'] <= 5)]

lineitem[(lineitem['L_ORDERKEY'] != 3) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_COMMENT'] == 's. ')]

lineitem[(lineitem['L_ORDERKEY'] == 90) | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R']))]

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['TAX'] > 0.07359193832548731) | (lineitem['DISCOUNT'] > 0.08648057850295934)]

lineitem[['LINESTATUS', 'L_COMMENT', 'RECEIPTDATE']]

lineitem[['LINESTATUS', 'SHIPINSTRUCT', 'DISCOUNT']]

lineitem[['L_SUPPKEY', 'L_COMMENT', 'TAX']]

lineitem[['L_SUPPKEY', 'QUANTITY', 'SHIPDATE']]

lineitem[['QUANTITY', 'RECEIPTDATE', 'SHIPDATE']]

lineitem[['QUANTITY', 'SHIPDATE', 'LINESTATUS']]

lineitem[['RETURNFLAG', 'RECEIPTDATE', 'SHIPINSTRUCT']]

lineitem[['RETURNFLAG', 'SHIPMODE', 'QUANTITY']]

lineitem[['SHIPDATE', 'L_PARTKEY', 'COMMITDATE']]

lineitem[['TAX', 'RETURNFLAG', 'L_ORDERKEY']]

nation.groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_REGIONKEY']).agg('count')

nation.groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] != 'R')]

nation[(nation['N_NATIONKEY'] > 17) & (nation['N_NAME'] == 'V') | (nation['N_NAME'] == 'P')]

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 3) | (nation['N_REGIONKEY'] == 3)]

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] < 0)]

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] != ' ')]

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']]

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']]

orders.groupby(by=['ORDERDATE', 'O_COMMENT']).agg('sum', numeric_only=True)

orders.groupby(by=['ORDERSTATUS', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders.groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders.groupby(by=['O_COMMENT', 'TOTALPRICE']).agg('max', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'SHIPPRIORITY']).agg('count')

orders.groupby(by=['O_CUSTKEY', 'TOTALPRICE']).agg('min', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'egu') & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['CLERK'].str.startswith('C'))]

orders[(orders['O_COMMENT'] == 'q') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] == '1992-01-13')]

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 31509) | (orders['CLERK'].str.startswith('C'))]

orders[['CLERK', 'SHIPPRIORITY', 'O_COMMENT']]

orders[['ORDERDATE', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERPRIORITY', 'TOTALPRICE', 'CLERK']]

orders[['ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE']]

orders[['ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']]

orders[['ORDERSTATUS', 'CLERK', 'O_COMMENT']]

orders[['ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT']]

orders[['O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY']]

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY']]

orders[['SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']]

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE']]

part.groupby(by=['BRAND', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['BRAND', 'PT_COMMENT']).agg('count')

part.groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['BRAND', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

part.groupby(by=['MFGR', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_PARTKEY', 'BRAND']).agg('count')

part.groupby(by=['P_PARTKEY', 'P_NAME']).agg('count')

part.groupby(by=['RETAILPRICE', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR']).agg('count')

part.groupby(by=['SIZE', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'MFGR']).agg('count')

part.groupby(by=['TYPE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'SIZE']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#45', 'Brand#24', 'Brand#51', 'Brand#43', 'Brand#15', 'Brand#55', 'Brand#21', 'Brand#35', 'Brand#34', 'Brand#14', 'Brand#25', 'Brand#52', 'Brand#31', 'Brand#54', 'Brand#12'])) & (part['P_NAME'] == 'lem') | (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#5') | (part['CONTAINER'].str.startswith('WRAP'))]

part[(part['MFGR'] == 'Manufacturer#4') & (part['BRAND'] != 'Brand#25') & (part['CONTAINER'] == 'WRAP')]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3'])) | (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] > 956.2541594586387)]

part[(part['P_NAME'] == 'c') | (part['P_NAME'] == 'n') | (part['RETAILPRICE'] >= 1079.3295402764534)]

part[(part['P_PARTKEY'] != 30) & (part['CONTAINER'] == 'SM') & (part['TYPE'] != 'M')]

part[(part['P_PARTKEY'] < 136) & (part['TYPE'] == 'STA') | (part['BRAND'].isin(['Brand#25', 'Brand#34', 'Brand#14', 'Brand#42', 'Brand#23', 'Brand#15']))]

part[(part['P_PARTKEY'] <= 87) | (part['RETAILPRICE'] != 1044.7488453515623) | (part['BRAND'].isin(['Brand#32', 'Brand#11', 'Brand#15', 'Brand#43', 'Brand#14', 'Brand#35', 'Brand#44', 'Brand#33', 'Brand#24', 'Brand#45', 'Brand#42', 'Brand#34', 'Brand#52', 'Brand#53', 'Brand#31', 'Brand#22', 'Brand#54', 'Brand#12']))]

part[(part['P_PARTKEY'] == 152) & (part['TYPE'] == 'SMA') | (part['RETAILPRICE'] > 999.5588887945307)]

part[(part['SIZE'] > 12) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] == 63)]

part[(part['TYPE'] != 'P') | (part['TYPE'].str.startswith('L')) | (part['PT_COMMENT'].str.startswith('t'))]

part[['BRAND', 'MFGR', 'RETAILPRICE']]

part[['BRAND', 'TYPE', 'SIZE']]

part[['CONTAINER', 'MFGR', 'P_PARTKEY']]

part[['CONTAINER', 'PT_COMMENT', 'MFGR']]

part[['CONTAINER', 'P_NAME', 'PT_COMMENT']]

part[['PT_COMMENT', 'P_PARTKEY', 'TYPE']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE']]

part[['P_NAME', 'RETAILPRICE', 'CONTAINER']]

part[['P_PARTKEY', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'P_NAME', 'CONTAINER']]

part[['P_PARTKEY', 'P_NAME', 'SIZE']]

part[['RETAILPRICE', 'BRAND', 'PT_COMMENT']]

part[['RETAILPRICE', 'CONTAINER', 'PT_COMMENT']]

part[['TYPE', 'CONTAINER', 'SIZE']]

part[['TYPE', 'P_NAME', 'MFGR']]

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('count')

partsupp.groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp.groupby(by=['P_COMMENT', 'AVAILQTY']).agg('count')

partsupp.groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 8382) | (partsupp['PS_SUPPKEY'] != 2906) & (partsupp['PS_PARTKEY'] == 2)]

partsupp[(partsupp['AVAILQTY'] > 4854) | (partsupp['SUPPLYCOST'] > 569.8892049352193) | (partsupp['PS_SUPPKEY'] > 4329)]

partsupp[(partsupp['PS_PARTKEY'] < 19) & (partsupp['P_COMMENT'] == 'x') & (partsupp['AVAILQTY'] <= 8374)]

partsupp[(partsupp['PS_SUPPKEY'] < 4751) & (partsupp['P_COMMENT'] != 'h') | (partsupp['AVAILQTY'] <= 8781)]

partsupp[(partsupp['SUPPLYCOST'] >= 173.50871495211283) | (partsupp['AVAILQTY'] >= 6543) | (partsupp['P_COMMENT'] == 'the')]

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']]

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']]

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] < 3)]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'A')]

region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 1)]

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'h')]

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] <= 1)]

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] != 0)]

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 2)]

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'ASI')]

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AME')]

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 0)]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] > 2)]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 2) & (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] <= 3)]

region[(region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('AME'))]

region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'A') | (region['R_NAME'] != 'E')]

region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 0)]

region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] == 2)]

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'AFR')]

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'l')]

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'AME') & (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] < 3)]

region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('M'))]

region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'AFR')]

region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'A')]

region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'E') | (region['R_NAME'] == 'ASI')]

region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_REGIONKEY'] < 3) & (region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'AFR')]

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'g')]

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] != 'AME')]

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] == 'u')]

region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 0)]

region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'E') | (region['R_NAME'] != 'M')]

region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'] == 'AME') & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'ASI')]

region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 0) | (region['R_NAME'] != 'E')]

region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('AME'))]

region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] > 1) & (region['R_COMMENT'] != 'l')]

region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 1)]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier.groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

supplier.groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('count')

supplier[(supplier['S_COMMENT'] == 'x') | (supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'] == 'al ')]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 18) & (supplier['S_SUPPKEY'] <= 132)]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '14-')]

supplier[(supplier['S_NATIONKEY'] == 12) | (supplier['S_COMMENT'] == 'the') & (supplier['S_PHONE'] == '26-')]

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE']]

supplier[['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']]

supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']]

supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_NAME', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']]

customer.groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer.groupby(by=['C_NAME', 'C_PHONE', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer.groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'l')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('C'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != '.') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_PHONE'] == '25-') | (customer['C_PHONE'].str.startswith('18-'))]

customer[(customer['C_COMMENT'].str.startswith('w'))][['C_NATIONKEY']]

customer[(customer['C_NAME'] == 'C')][['C_PHONE']]

customer[(customer['C_NATIONKEY'] <= 4)][['C_PHONE']]

customer[(customer['C_PHONE'] != '13-')][['MKTSEGMENT']]

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NAME']]

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']]

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_NAME']]

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']]

customer[['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']]

lineitem.groupby(by=['QUANTITY', 'L_COMMENT', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG', 'L_SUPPKEY', 'TAX']).agg('min', numeric_only=True)

lineitem.groupby(by=['SHIPDATE', 'L_PARTKEY', 'SHIPMODE']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4151)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] == 0.058842162823245406)][['RETURNFLAG']]

lineitem[(lineitem['L_SUPPKEY'] > 8249) & (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'AIR', 'RAIL', 'SHIP', 'MAIL'])) | (lineitem['EXTENDEDPRICE'] >= 53190.08116948078) | (lineitem['QUANTITY'] >= 11)]

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_ORDERKEY'] > 129) & (lineitem['L_PARTKEY'] != 5391) | (lineitem['L_PARTKEY'] >= 21058)]

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL'])) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['L_ORDERKEY'] >= 42) | (lineitem['LINESTATUS'].isin(['O']))]

lineitem[['DISCOUNT', 'QUANTITY', 'SHIPDATE', 'LINENUMBER']]

lineitem[['DISCOUNT', 'QUANTITY', 'TAX', 'EXTENDEDPRICE']]

lineitem[['DISCOUNT', 'QUANTITY', 'TAX', 'LINENUMBER']]

lineitem[['DISCOUNT', 'SHIPMODE', 'QUANTITY', 'SHIPDATE']]

lineitem[['LINESTATUS', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE']]

lineitem[['LINESTATUS', 'L_COMMENT', 'EXTENDEDPRICE', 'RETURNFLAG']]

lineitem[['LINESTATUS', 'RETURNFLAG', 'L_COMMENT', 'DISCOUNT']]

lineitem[['L_COMMENT', 'DISCOUNT', 'QUANTITY', 'TAX']]

lineitem[['L_COMMENT', 'LINESTATUS', 'EXTENDEDPRICE', 'SHIPMODE']]

lineitem[['QUANTITY', 'SHIPDATE', 'SHIPINSTRUCT', 'EXTENDEDPRICE']]

lineitem[['RECEIPTDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'LINENUMBER']]

nation.groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] != 'R') & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] <= 3)]

nation[(nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY']]

nation[(nation['N_NAME'] != 'I')][['N_COMMENT']]

nation[(nation['N_NAME'] == 'C')][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] <= 20)][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] == 22) | (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'E')]

nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] < 22) & (nation['N_NATIONKEY'] <= 17)]

nation[(nation['N_NATIONKEY'] > 23) & (nation['N_NAME'] != 'I') | (nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] >= 3)]

nation[(nation['N_NATIONKEY'] > 8)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 9) & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] >= 0)]

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] >= 17)]

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] > 11)]

nation[(nation['N_REGIONKEY'] != 2)][['N_NAME']]

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] < 7) & (nation['N_NATIONKEY'] > 3) | (nation['N_COMMENT'] == 'e')]

nation[(nation['N_REGIONKEY'] < 3)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 2)][['N_COMMENT']]

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']]

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']]

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

orders.groupby(by=['CLERK', 'O_COMMENT', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']).agg('count')

orders.groupby(by=['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13')][['ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] >= 68129) | (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C')]

orders[(orders['O_COMMENT'] != 'j') | (orders['O_CUSTKEY'] > 29190) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['O_CUSTKEY'] <= 103872)]

orders[(orders['TOTALPRICE'] != 128560.32572264469) | (orders['O_CUSTKEY'] < 112379) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_CUSTKEY'] < 130575)]

orders[(orders['TOTALPRICE'] != 174102.00348973667) | (orders['O_COMMENT'].str.startswith('.')) & (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] != 0)]

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE']]

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE']]

orders[['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY']]

orders[['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']]

orders[['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']]

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK']]

orders[['O_ORDERKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY']]

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']]

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK']]

part.groupby(by=['BRAND', 'MFGR', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'SIZE', 'BRAND']).agg('count')

part.groupby(by=['MFGR', 'BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'TYPE', 'RETAILPRICE']).agg('count')

part.groupby(by=['PT_COMMENT', 'BRAND', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'SIZE', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'PT_COMMENT', 'P_NAME']).agg('count')

part.groupby(by=['SIZE', 'RETAILPRICE', 'TYPE']).agg('count')

part.groupby(by=['TYPE', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'MFGR', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] == 141) | (part['P_NAME'] == 'w') & (part['SIZE'] < 22)]

part[(part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'].str.startswith('o')) & (part['P_PARTKEY'] <= 184) & (part['TYPE'] == 'STA')]

part[(part['MFGR'] != 'Manufacturer#5') | (part['TYPE'] == 'STA') | (part['P_NAME'] == 'lem') & (part['TYPE'].str.startswith('STA'))]

part[(part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] > 1093.3031760648178) | (part['PT_COMMENT'] != ' ') | (part['P_PARTKEY'] == 150)]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) | (part['P_NAME'] != 'lem') | (part['BRAND'] != 'Brand#44') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2']))]

part[(part['PT_COMMENT'] != 'o') & (part['P_NAME'].str.startswith('h')) & (part['TYPE'] != 'M') & (part['BRAND'] != 'Brand#55')]

part[(part['PT_COMMENT'] == 'o') | (part['P_PARTKEY'] == 86) & (part['SIZE'] < 10) & (part['P_PARTKEY'] <= 139)]

part[(part['P_NAME'] != 'a') & (part['BRAND'].isin(['Brand#12', 'Brand#33', 'Brand#52', 'Brand#43'])) | (part['PT_COMMENT'].str.startswith('u')) | (part['P_NAME'] != 'g')]

part[(part['P_NAME'] == 'lin') | (part['PT_COMMENT'] == 'w') & (part['BRAND'] != 'Brand#55') & (part['SIZE'] != 3)]

part[(part['P_PARTKEY'] != 126) & (part['SIZE'] <= 17) | (part['TYPE'] != 'E') | (part['CONTAINER'] == 'SM')]

part[(part['P_PARTKEY'] != 81)][['PT_COMMENT']]

part[(part['P_PARTKEY'] < 123) & (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] != 'WRAP') | (part['MFGR'] != 'Manufacturer#4')]

part[(part['SIZE'] <= 38) | (part['SIZE'] <= 30) | (part['RETAILPRICE'] != 1060.7935025673007) | (part['TYPE'] == 'P')]

part[(part['SIZE'] >= 3) | (part['TYPE'] != 'STA') & (part['RETAILPRICE'] != 1096.4308781612608) & (part['BRAND'] != 'Brand#33')]

part[(part['TYPE'] != 'L') | (part['SIZE'] >= 7) | (part['RETAILPRICE'] > 984.7934081856253) & (part['SIZE'] > 22)]

part[(part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#33', 'Brand#12', 'Brand#15', 'Brand#42', 'Brand#45', 'Brand#55', 'Brand#41', 'Brand#54', 'Brand#51', 'Brand#44', 'Brand#25', 'Brand#34', 'Brand#21', 'Brand#43', 'Brand#22', 'Brand#35'])) & (part['CONTAINER'].str.startswith('LG')) & (part['MFGR'] == 'Manufacturer#4')]

part[(part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] >= 945.4663460404563) | (part['SIZE'] >= 32) | (part['RETAILPRICE'] != 965.3254588231166)]

part[['BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE']]

part[['BRAND', 'P_PARTKEY', 'TYPE', 'SIZE']]

part[['BRAND', 'RETAILPRICE', 'CONTAINER', 'SIZE']]

part[['BRAND', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[['BRAND', 'RETAILPRICE', 'MFGR', 'TYPE']]

part[['CONTAINER', 'RETAILPRICE', 'BRAND', 'PT_COMMENT']]

part[['MFGR', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']]

part[['PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE']]

part[['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']]

part[['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY']]

part[['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['P_NAME', 'MFGR', 'PT_COMMENT', 'BRAND']]

part[['P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[['P_NAME', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'TYPE']]

part[['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'TYPE']]

part[['SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME']]

part[['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']]

part[['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME']]

partsupp.groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5015) & (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_PARTKEY'] <= 46) | (partsupp['AVAILQTY'] == 1813)]

partsupp[(partsupp['PS_PARTKEY'] != 10)][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] < 39)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] > 10)][['SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] >= 25) | (partsupp['P_COMMENT'] != 'c') & (partsupp['AVAILQTY'] >= 3413) & (partsupp['PS_SUPPKEY'] >= 3330)]

partsupp[(partsupp['PS_SUPPKEY'] != 1267) & (partsupp['SUPPLYCOST'] == 394.1924635718382) & (partsupp['PS_SUPPKEY'] >= 7090) & (partsupp['PS_PARTKEY'] != 28)]

partsupp[(partsupp['PS_SUPPKEY'] > 4090)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] >= 7233) & (partsupp['SUPPLYCOST'] <= 342.0897784054828) | (partsupp['PS_SUPPKEY'] > 7424) & (partsupp['AVAILQTY'] >= 7751)]

partsupp[(partsupp['P_COMMENT'] == 'are')][['AVAILQTY']]

partsupp[(partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['P_COMMENT'] != 'are') | (partsupp['PS_SUPPKEY'] != 7113) | (partsupp['SUPPLYCOST'] > 324.5247249155117)]

partsupp[(partsupp['SUPPLYCOST'] >= 505.5900911077392)][['PS_PARTKEY']]

partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_COMMENT']]

region[(region['R_COMMENT'] != 'u')][['R_NAME']]

region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME']]

region[(region['R_NAME'] != 'AFR')][['R_COMMENT']]

region[(region['R_NAME'] != 'AME')][['R_REGIONKEY']]

region[(region['R_NAME'] != 'E')][['R_REGIONKEY']]

region[(region['R_NAME'] != 'M')][['R_COMMENT']]

region[(region['R_NAME'] == 'E')][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AME'))][['R_NAME']]

region[(region['R_NAME'].str.startswith('M'))][['R_NAME']]

region[(region['R_REGIONKEY'] != 0)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 3)][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 2)][['R_NAME']]

region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY']]

supplier.groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']).agg('count')

supplier.groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('I'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 6799.174375178215) | (supplier['S_NATIONKEY'] == 14) | (supplier['S_ACCTBAL'] == 6243.804535030589) & (supplier['S_NAME'] != 'S')]

supplier[(supplier['S_ACCTBAL'] > 6309.348743533035)][['S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] != 'c')][['S_NATIONKEY']]

supplier[(supplier['S_COMMENT'] == 'i')][['S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] != 17)][['S_NAME']]

supplier[(supplier['S_PHONE'] != '32-')][['S_ACCTBAL']]

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_COMMENT'] == 'al ') | (supplier['S_SUPPKEY'] <= 185) & (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_SUPPKEY'] != 145) & (supplier['S_ACCTBAL'] < 3304.363737473911) | (supplier['S_NATIONKEY'] != 4) | (supplier['S_PHONE'] != '2')]

supplier[(supplier['S_SUPPKEY'] != 68) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'l')]

supplier[(supplier['S_SUPPKEY'] > 173)][['S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME']]

supplier[['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']]

supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT']]

customer.groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_COMMENT']).agg('count')

customer.groupby(by=['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']).agg('count')

customer.groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_NAME'] == 'M')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_COMMENT'] == 'u')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NAME'].str.startswith('S'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] < 8)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 9) & (nation['N_NAME'].str.startswith('U'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != '8')][['C_PHONE', 'C_ADDRESS']]

customer[(customer['C_ADDRESS'] == 'R') | (customer['C_ACCTBAL'] > 1956.8527992395575) & (customer['C_ACCTBAL'] == 2427.7863020485306) | (customer['C_ACCTBAL'] == -847.7554266002709) | (customer['C_COMMENT'].str.startswith('w'))]

customer[(customer['C_COMMENT'] != 'c') | (customer['C_ACCTBAL'] != 4651.649462909718) & (customer['C_CUSTKEY'] != 34) & (customer['C_CUSTKEY'] <= 63) | (customer['C_NATIONKEY'] < 19)]

customer[(customer['C_COMMENT'].str.startswith('c')) & (customer['C_COMMENT'] != 'r')][['MKTSEGMENT']]

customer[(customer['C_COMMENT'].str.startswith('y'))][['C_NAME', 'C_ADDRESS']]

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('b'))][['C_CUSTKEY']]

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_ADDRESS']]

customer[(customer['C_PHONE'].str.startswith('3'))].groupby(by=['C_CUSTKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'BUILDING')].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']]

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('count')

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL']]

customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']]

customer[['C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']]

customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']]

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

lineitem.groupby(by=['DISCOUNT', 'SHIPMODE', 'L_COMMENT', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINENUMBER', 'L_PARTKEY', 'TAX', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_COMMENT', 'DISCOUNT', 'SHIPDATE', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'COMMITDATE']).agg('count')

lineitem.groupby(by=['QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_SUPPKEY']).agg('count')

lineitem.groupby(by=['RECEIPTDATE', 'RETURNFLAG', 'TAX', 'L_SUPPKEY']).agg('sum', numeric_only=True)

lineitem.groupby(by=['SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY', 'COMMITDATE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['LINENUMBER'] > 6) | (lineitem['L_ORDERKEY'] != 132) | (lineitem['L_PARTKEY'] > 197793)]

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_ORDERKEY'] <= 40) & (lineitem['EXTENDEDPRICE'] > 5389.8855905897) | (lineitem['TAX'] > 0.07211639788282058) & (lineitem['L_SUPPKEY'] >= 9607)]

lineitem[(lineitem['SHIPDATE'] < '1992-04-27')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE']].groupby(by=['COMMITDATE']).agg('max', numeric_only=True)

lineitem[['DISCOUNT']].groupby(by=['DISCOUNT']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[['LINENUMBER']].groupby(by=['LINENUMBER']).agg('max', numeric_only=True)

lineitem[['LINENUMBER']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'LINENUMBER', 'SHIPDATE', 'L_SUPPKEY', 'L_PARTKEY']]

lineitem[['LINESTATUS']].groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY']].groupby(by=['L_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'SHIPMODE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER']]

lineitem[['QUANTITY']].groupby(by=['QUANTITY']).agg('min', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY', 'TAX']]

lineitem[['RECEIPTDATE', 'SHIPMODE', 'TAX', 'DISCOUNT', 'SHIPDATE']]

lineitem[['RETURNFLAG', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'DISCOUNT', 'LINENUMBER']]

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('min', numeric_only=True)

lineitem[['SHIPMODE']].groupby(by=['SHIPMODE']).agg('max', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

nation.groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'l')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'i')].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n')].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'].str.startswith('h'))][['N_NAME']]

nation[(nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('A'))][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY']]

nation[(nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('K'))][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] != 'c')][['N_NAME']]

nation[(nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] == 3)][['N_COMMENT']]

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['CLERK', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE']).agg('min', numeric_only=True)

orders.groupby(by=['CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']).agg('count')

orders.groupby(by=['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'y') | (customer['C_COMMENT'] != 'a')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'] == ' re') | (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'].str.startswith('a'))]

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['O_CUSTKEY'] <= 38690) & (orders['O_ORDERKEY'] <= 368) | (orders['O_ORDERKEY'] <= 305) & (orders['CLERK'].str.startswith('C'))]

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] <= 24499) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['SHIPPRIORITY'] >= 0)]

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED'])) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'].str.startswith('uri')) & (orders['ORDERPRIORITY'] != '5-LOW')]

orders[(orders['O_COMMENT'] != 'x') & (orders['TOTALPRICE'] == 221419.4970520743) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['O_COMMENT'] == ' ') | (orders['SHIPPRIORITY'] <= 0)]

orders[(orders['O_CUSTKEY'] < 83247) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] < 46563) | (orders['O_CUSTKEY'] != 87439)]

orders[(orders['O_CUSTKEY'] == 137507) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 114870) & (orders['SHIPPRIORITY'] > 0)]

orders[(orders['O_CUSTKEY'] >= 114259)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 139553.94115042532)][['ORDERSTATUS', 'O_ORDERKEY']]

orders[(orders['TOTALPRICE'] == 15969.982206351513)][['CLERK', 'O_COMMENT']]

orders[['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT']]

orders[['CLERK']].groupby(by=['CLERK']).agg('count')

orders[['CLERK']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[['CLERK']].groupby(by=['CLERK']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']]

orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('sum', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('count')

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'CLERK']]

orders[['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('count')

part.groupby(by=['BRAND', 'PT_COMMENT', 'SIZE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'PT_COMMENT', 'TYPE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['BRAND', 'P_NAME', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'RETAILPRICE', 'TYPE', 'P_NAME']).agg('count')

part.groupby(by=['BRAND', 'SIZE', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'P_NAME', 'SIZE']).agg('count')

part.groupby(by=['CONTAINER', 'MFGR', 'SIZE', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'SIZE', 'MFGR', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'SIZE', 'P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'TYPE', 'PT_COMMENT', 'SIZE']).agg('count')

part.groupby(by=['MFGR', 'TYPE', 'P_NAME', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_NAME', 'CONTAINER', 'TYPE']).agg('count')

part.groupby(by=['PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE', 'BRAND', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'SIZE', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'MFGR', 'TYPE', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'PT_COMMENT', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'P_PARTKEY', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'MFGR', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'TYPE', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'BRAND']).agg('count')

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'MFGR', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'BRAND', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']).agg('count')

part.groupby(by=['TYPE', 'P_PARTKEY', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') & (part['P_PARTKEY'] < 120) | (part['RETAILPRICE'] <= 1067.661333417305) | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] <= 31)]

part[(part['BRAND'].isin(['Brand#34', 'Brand#22', 'Brand#43', 'Brand#41', 'Brand#52', 'Brand#32', 'Brand#31', 'Brand#55', 'Brand#51', 'Brand#42'])) & (part['CONTAINER'] == 'JUMBO') & (part['P_PARTKEY'] > 191) & (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'] == 'Brand#31')]

part[(part['CONTAINER'] != 'MED') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3']))][['P_NAME']]

part[(part['CONTAINER'] != 'WRAP') | (part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] < 962.1432280612171) & (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'] != 'MED')]

part[(part['CONTAINER'] != 'WRAP')].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) & (part['CONTAINER'] != 'JUMBO') & (part['TYPE'] != 'SMA') | (part['BRAND'] != 'Brand#51')]

part[(part['MFGR'] != 'Manufacturer#5') | (part['CONTAINER'] != 'JUMBO') & (part['PT_COMMENT'] == 'f') & (part['SIZE'] == 45) & (part['P_PARTKEY'] != 142)]

part[(part['MFGR'] == 'Manufacturer#3')].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4']))].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1'])) & (part['PT_COMMENT'] != 'ss ') & (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] > 5) | (part['BRAND'].isin(['Brand#54', 'Brand#32', 'Brand#44', 'Brand#55', 'Brand#25', 'Brand#33', 'Brand#24', 'Brand#53', 'Brand#15', 'Brand#35', 'Brand#14', 'Brand#45', 'Brand#51', 'Brand#11', 'Brand#23', 'Brand#31', 'Brand#34', 'Brand#22', 'Brand#12', 'Brand#43', 'Brand#21', 'Brand#52', 'Brand#13']))]

part[(part['PT_COMMENT'] != 'l') | (part['P_PARTKEY'] == 154) & (part['CONTAINER'] == 'WRAP') & (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'].isin(['Manufacturer#5']))]

part[(part['PT_COMMENT'].str.startswith('f'))].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('u')) | (part['P_NAME'] != 'blu') & (part['TYPE'] != 'L') | (part['TYPE'] != 'SMA') & (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['P_NAME'] != 'f') & (part['BRAND'] != 'Brand#12') | (part['CONTAINER'] != 'JUMBO') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5'])) & (part['RETAILPRICE'] == 1080.0553941853855)]

part[(part['P_NAME'] != 'lin')][['P_PARTKEY', 'MFGR']]

part[(part['P_NAME'] != 'y')].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'm') & (part['P_PARTKEY'] < 26) & (part['RETAILPRICE'] == 1026.2796940023811) & (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'].str.startswith('LG'))]

part[(part['P_PARTKEY'] < 11)][['PT_COMMENT', 'MFGR']]

part[(part['RETAILPRICE'] < 1029.9631540934897) & (part['SIZE'] > 43) & (part['SIZE'] > 18) | (part['P_NAME'] == 'lin') & (part['P_NAME'].str.startswith('w'))]

part[(part['RETAILPRICE'] >= 901.7858472356611)].groupby(by=['BRAND']).agg('count')

part[(part['RETAILPRICE'] >= 931.0876483354758) & (part['CONTAINER'].str.startswith('JUMBO'))][['P_NAME']]

part[(part['SIZE'] <= 2) | (part['TYPE'] != 'M') & (part['P_PARTKEY'] != 135) | (part['PT_COMMENT'] != 's') & (part['CONTAINER'] != 'LG')]

part[(part['SIZE'] <= 22) & (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] >= 168) & (part['P_PARTKEY'] < 5) & (part['CONTAINER'] == 'MED')]

part[(part['TYPE'] != 'M')][['CONTAINER', 'PT_COMMENT']]

part[(part['TYPE'].str.startswith('S'))][['CONTAINER', 'PT_COMMENT']]

part[['BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'TYPE']]

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('count')

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']]

part[['MFGR']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['MFGR']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'P_NAME', 'BRAND', 'MFGR']]

part[['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'P_NAME']]

part[['PT_COMMENT', 'SIZE', 'P_NAME', 'RETAILPRICE', 'MFGR']]

part[['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'BRAND']]

part[['PT_COMMENT', 'TYPE', 'MFGR', 'P_PARTKEY', 'P_NAME']]

part[['PT_COMMENT', 'TYPE', 'SIZE', 'MFGR', 'CONTAINER']]

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[['P_NAME', 'SIZE', 'TYPE', 'P_PARTKEY', 'BRAND']]

part[['P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'P_NAME', 'RETAILPRICE', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR', 'TYPE', 'BRAND', 'CONTAINER']]

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'BRAND']]

part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'TYPE', 'BRAND']]

part[['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'P_NAME', 'MFGR', 'PT_COMMENT']]

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['SIZE', 'BRAND', 'P_PARTKEY', 'MFGR', 'CONTAINER']]

part[['SIZE', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'TYPE']]

part[['SIZE', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']]

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'MFGR']]

part[['SIZE', 'RETAILPRICE', 'TYPE', 'BRAND', 'PT_COMMENT']]

part[['SIZE']].groupby(by=['SIZE']).agg('count')

part[['TYPE']].groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']).agg('count')

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('count')

partsupp.groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'SM') & (part['BRAND'] != 'Brand#15')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] != 'g') & (part['RETAILPRICE'] <= 1018.1949146329578)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 48) | (part['RETAILPRICE'] <= 975.0499620596163)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 34) & (supplier['S_SUPPKEY'] > 62)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 7340) | (partsupp['PS_SUPPKEY'] == 6690) | (partsupp['PS_SUPPKEY'] < 3199) & (partsupp['SUPPLYCOST'] < 84.13636290453216) & (partsupp['AVAILQTY'] != 4963)]

partsupp[(partsupp['AVAILQTY'] <= 7257)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 30) & (partsupp['PS_SUPPKEY'] == 2587)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] >= 34) & (partsupp['PS_SUPPKEY'] == 632) | (partsupp['PS_SUPPKEY'] > 2118) | (partsupp['PS_SUPPKEY'] == 2044) | (partsupp['P_COMMENT'].str.startswith('bli'))]

partsupp[(partsupp['PS_SUPPKEY'] != 4212) | (partsupp['PS_PARTKEY'] < 12) & (partsupp['PS_PARTKEY'] != 26) | (partsupp['SUPPLYCOST'] <= 27.61465036245003) | (partsupp['SUPPLYCOST'] == 363.1573276501274)]

partsupp[(partsupp['PS_SUPPKEY'] == 3265)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 1356) | (partsupp['SUPPLYCOST'] == 244.73437519603794)][['P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] == ',')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 172.54777383248174)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 329.6995860164309)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 429.9703054103858) & (partsupp['PS_SUPPKEY'] != 2973)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] != 746.0795242763436)][['AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] < 375.0084465775366) | (partsupp['SUPPLYCOST'] <= 737.3632617381868) & (partsupp['AVAILQTY'] != 5973) | (partsupp['P_COMMENT'] == 'c') & (partsupp['AVAILQTY'] == 671)]

partsupp[(partsupp['SUPPLYCOST'] < 539.6488740157814) | (partsupp['AVAILQTY'] != 1172) | (partsupp['SUPPLYCOST'] >= 771.2644309306781) & (partsupp['AVAILQTY'] >= 8226) | (partsupp['SUPPLYCOST'] == 253.95325703614037)]

partsupp[(partsupp['SUPPLYCOST'] < 99.15884635842276) & (partsupp['AVAILQTY'] >= 3755) & (partsupp['PS_SUPPKEY'] != 3751) | (partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['PS_PARTKEY'] > 42)]

partsupp[(partsupp['SUPPLYCOST'] <= 761.7795854757559) & (partsupp['PS_SUPPKEY'] != 2940) & (partsupp['AVAILQTY'] != 177) | (partsupp['PS_PARTKEY'] >= 4) & (partsupp['SUPPLYCOST'] <= 604.1077390798896)]

partsupp[(partsupp['SUPPLYCOST'] <= 831.436313022506)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 958.6868629658815) & (partsupp['PS_SUPPKEY'] > 213)][['SUPPLYCOST']]

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] < 0)][['R_COMMENT']]

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY']]

region[(region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'AFR')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 3)][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'AFR')][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'h')][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 3)][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] != 3)][['R_NAME']]

region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g')][['R_NAME']]

region[(region['R_NAME'] != 'AFR')].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'ASI')][['R_COMMENT']]

region[(region['R_NAME'] != 'AME')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY']]

region[(region['R_NAME'] != 'E')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'M')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'M')].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'u')][['R_REGIONKEY']]

region[(region['R_NAME'] == 'AME') | (region['R_NAME'] == 'E')][['R_NAME']]

region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'ASI')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('E'))][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 3)].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'ASI')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 2)][['R_NAME']]

region[(region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 2)].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] > 0)].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 2)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] == 2)][['R_NAME']]

region[(region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 2)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']).agg('count')

supplier.groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] != 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 7347.731222500151) & (supplier['S_NATIONKEY'] < 17)][['S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'] != 'O')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'T')].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_ACCTBAL'] != 2900.675269453799) & (supplier['S_NATIONKEY'] >= 21) | (supplier['S_SUPPKEY'] <= 112) | (supplier['S_NATIONKEY'] > 1)]

supplier[(supplier['S_COMMENT'].str.startswith('u'))][['S_NAME', 'S_COMMENT']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 157)][['S_ACCTBAL']]

supplier[(supplier['S_NATIONKEY'] != 1) & (supplier['S_PHONE'].str.startswith('28-'))][['S_PHONE']]

supplier[(supplier['S_NATIONKEY'] != 13) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'Z') & (supplier['S_ACCTBAL'] == 3770.2313307761933)]

supplier[(supplier['S_NATIONKEY'] <= 17) & (supplier['S_COMMENT'] != 'q')][['S_NAME']]

supplier[(supplier['S_PHONE'] != '17-')][['S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'].str.startswith('t'))][['S_NAME']]

supplier[(supplier['S_PHONE'] == '2') & (supplier['S_NATIONKEY'] == 1) & (supplier['S_SUPPKEY'] == 119) | (supplier['S_COMMENT'] == 'b') | (supplier['S_ACCTBAL'] > -290.4434301516718)]

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NATIONKEY'] < 9)][['S_COMMENT']]

supplier[(supplier['S_PHONE'].str.startswith('32-'))][['S_COMMENT', 'S_PHONE']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']]

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']]

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']]

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']]

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']).agg('min', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']).agg('min', numeric_only=True)

customer.groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] > 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 578.0361970002787) & (customer['C_CUSTKEY'] != 5)].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'v')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY']]

customer[(customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] != 'D') & (customer['C_ACCTBAL'] < 5107.58048556856) | (customer['C_ACCTBAL'] <= 3949.660154337328) | (customer['C_ACCTBAL'] == 9945.243020333226) | (customer['MKTSEGMENT'] != 'BUILDING')]

customer[(customer['C_COMMENT'].str.startswith('c')) | (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'].str.startswith('g')) | (customer['C_NATIONKEY'] >= 0) | (customer['C_ADDRESS'] != 'O') | (customer['C_PHONE'] == '25-')]

customer[(customer['C_COMMENT'].str.startswith('r')) | (customer['C_CUSTKEY'] >= 15)][['C_CUSTKEY', 'C_ACCTBAL']]

customer[(customer['C_CUSTKEY'] <= 27) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] <= 20) & (customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] <= 1515.6476946561788)]

customer[(customer['C_CUSTKEY'] >= 20) & (customer['C_ACCTBAL'] != 6811.007702088553)][['C_PHONE', 'MKTSEGMENT']]

customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] != 98)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > -163.8362004768643)][['C_NAME', 'C_COMMENT']]

customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']]

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']]

customer[['C_ADDRESS', 'C_COMMENT']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']]

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']]

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']]

customer[['C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_COMMENT']).agg('count')

customer[['C_NAME', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('count')

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']]

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']]

customer[['C_PHONE', 'C_CUSTKEY']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

lineitem.groupby(by=['DISCOUNT', 'EXTENDEDPRICE', 'TAX', 'SHIPMODE', 'L_PARTKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'L_ORDERKEY', 'RETURNFLAG', 'TAX', 'L_COMMENT']).agg('min', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'L_PARTKEY', 'RECEIPTDATE', 'RETURNFLAG', 'TAX']).agg('count')

lineitem.groupby(by=['L_COMMENT', 'COMMITDATE', 'SHIPDATE', 'L_PARTKEY', 'L_SUPPKEY']).agg('count')

lineitem.groupby(by=['L_ORDERKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'QUANTITY', 'TAX']).agg('sum', numeric_only=True)

lineitem.groupby(by=['L_PARTKEY', 'LINENUMBER', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY']).agg('sum', numeric_only=True)

lineitem.groupby(by=['QUANTITY', 'DISCOUNT', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['PS_SUPPKEY'] != 6269) | (partsupp['AVAILQTY'] != 4156)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_PARTKEY'] == 80959)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] != 21706.04188785012) & (lineitem['L_PARTKEY'] < 55037)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == '.') | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['RETURNFLAG']]

lineitem[(lineitem['L_ORDERKEY'] <= 11) & (lineitem['L_PARTKEY'] >= 59267) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['EXTENDEDPRICE'] > 73469.06398249853) & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['RECEIPTDATE'] > '1992-05-02')]

lineitem[(lineitem['L_PARTKEY'] != 134451) | (lineitem['COMMITDATE'] > '1992-05-15')][['COMMITDATE', 'DISCOUNT']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_PARTKEY'] < 178452) & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['QUANTITY'] != 26) | (lineitem['QUANTITY'] >= 24)]

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'SHIP', 'MAIL', 'FOB', 'TRUCK', 'AIR'])) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['RECEIPTDATE'] != '1992-05-02')][['LINESTATUS']]

lineitem[(lineitem['TAX'] <= 0.05562389524916944) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_COMMENT'].str.startswith(' re')) | (lineitem['L_PARTKEY'] != 63897) | (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'MAIL', 'REG AIR'])) | (lineitem['RETURNFLAG'].isin(['A']))]

lineitem[(lineitem['TAX'] <= 0.05955738992699286) & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RETURNFLAG'].isin(['A', 'N', 'R']))][['LINENUMBER']]

lineitem[['COMMITDATE', 'RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'LINENUMBER', 'SHIPINSTRUCT', 'RETURNFLAG', 'COMMITDATE', 'SHIPDATE']]

lineitem[['L_COMMENT', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'LINESTATUS', 'LINENUMBER']]

lineitem[['L_ORDERKEY', 'L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'COMMITDATE', 'LINENUMBER']]

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'LINESTATUS', 'L_COMMENT']]

lineitem[['SHIPMODE', 'L_PARTKEY', 'LINENUMBER', 'RETURNFLAG', 'COMMITDATE', 'QUANTITY']]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] < 1) & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] != 'i')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u') & (nation['N_NAME'] != 'I')][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] < 20)][['N_NAME']]

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'v')][['N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_NATIONKEY'] >= 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_NAME']]

nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'] != 'r') & (nation['N_COMMENT'].str.startswith('n'))][['N_NAME']]

nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'] != 'P')].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] == 5)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] > 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E') & (nation['N_COMMENT'] == 'c')].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] < 1)].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'G')].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NAME'] == 'M') | (nation['N_NAME'] != 'C')][['N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('l'))][['N_NAME']]

nation[(nation['N_NATIONKEY'] != 12) & (nation['N_COMMENT'] != 'v')][['N_COMMENT', 'N_NAME']]

nation[(nation['N_NATIONKEY'] != 20) & (nation['N_NATIONKEY'] <= 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 0) & (nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] <= 3)][['N_NAME']]

nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_NAME'] == 'C')][['N_REGIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_NAME'] == 'U')].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 19)].groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] >= 15) | (nation['N_COMMENT'].str.startswith('p'))][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] >= 3) & (nation['N_NAME'] != 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] != 23) | (nation['N_NAME'] == 'K')][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'p') & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] <= 1)].groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders.groupby(by=['CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders.groupby(by=['CLERK', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders.groupby(by=['CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders.groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE']).agg('count')

orders.groupby(by=['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders.groupby(by=['O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders.groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders.groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] <= 23637) & (orders['TOTALPRICE'] != 151133.0807260192)][['O_ORDERKEY']]

orders[(orders['ORDERDATE'] == '1992-01-13')][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_COMMENT'].str.startswith('c')) & (orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] != 145065.2240678997) & (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] < '1992-01-13')]

orders[(orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] < 772) | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] >= 269) & (orders['TOTALPRICE'] <= 245188.64628658656) | (orders['O_COMMENT'] == 'ly ')]

orders[(orders['ORDERSTATUS'].isin(['O']))][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT']]

orders[(orders['O_CUSTKEY'] == 128297) & (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] != 0)][['O_ORDERKEY']]

orders[(orders['O_ORDERKEY'] == 2)][['ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']]

orders[(orders['O_ORDERKEY'] == 444) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] != 42) & (orders['O_CUSTKEY'] == 134864) & (orders['O_COMMENT'] != 'j')]

orders[(orders['TOTALPRICE'] < 15357.311753971531) | (orders['CLERK'] != 'C')].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 119323.21620834614)].groupby(by=['O_ORDERKEY', 'CLERK']).agg('max', numeric_only=True)

orders[['CLERK', 'ORDERDATE']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[['CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY']]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'O_ORDERKEY']].groupby(by=['ORDERSTATUS']).agg('count')

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK']]

orders[['O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'ORDERSTATUS']]

orders[['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK']].groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

part.groupby(by=['BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('count')

part.groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME', 'TYPE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'SIZE', 'MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'BRAND', 'SIZE', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'SIZE', 'BRAND', 'TYPE']).agg('count')

part.groupby(by=['CONTAINER', 'P_NAME', 'TYPE', 'PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER', 'TYPE', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'BRAND', 'SIZE', 'RETAILPRICE', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'TYPE']).agg('count')

part.groupby(by=['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'SIZE', 'P_NAME', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'BRAND', 'CONTAINER', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND', 'TYPE', 'P_PARTKEY']).agg('count')

part.groupby(by=['PT_COMMENT', 'MFGR', 'SIZE', 'BRAND', 'P_PARTKEY']).agg('count')

part.groupby(by=['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE', 'BRAND', 'P_PARTKEY', 'TYPE']).agg('count')

part.groupby(by=['PT_COMMENT', 'SIZE', 'P_NAME', 'TYPE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE', 'BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'BRAND', 'MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('count')

part.groupby(by=['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER']).agg('count')

part.groupby(by=['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME', 'SIZE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'MFGR', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'CONTAINER']).agg('count')

part.groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'TYPE', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE', 'P_NAME', 'P_PARTKEY', 'CONTAINER']).agg('count')

part.groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'BRAND']).agg('count')

part.groupby(by=['TYPE', 'SIZE', 'BRAND', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#11', 'Brand#33', 'Brand#43', 'Brand#31', 'Brand#32', 'Brand#53', 'Brand#12', 'Brand#55', 'Brand#24', 'Brand#52', 'Brand#13', 'Brand#41', 'Brand#44', 'Brand#22']))].groupby(by=['BRAND', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#42', 'Brand#55', 'Brand#31', 'Brand#34', 'Brand#43', 'Brand#45', 'Brand#14', 'Brand#44', 'Brand#15', 'Brand#51', 'Brand#53', 'Brand#23', 'Brand#33', 'Brand#13', 'Brand#35', 'Brand#24', 'Brand#11']))].groupby(by=['BRAND', 'MFGR']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['MFGR'] != 'Manufacturer#2')].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['SIZE'] >= 8)].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['P_NAME'].str.startswith('t')) | (part['RETAILPRICE'] >= 1001.5383774220144) & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'd') & (part['CONTAINER'].str.startswith('MED'))]

part[(part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] >= 1004.7895946857108) & (part['SIZE'] <= 29) & (part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] <= 33)]

part[(part['MFGR'] != 'Manufacturer#1') | (part['P_NAME'].str.startswith('h')) | (part['MFGR'] != 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] != 191) | (part['RETAILPRICE'] == 1005.0797142577337)]

part[(part['MFGR'] != 'Manufacturer#3') | (part['SIZE'] >= 47) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) | (part['PT_COMMENT'].str.startswith('e')) & (part['MFGR'] == 'Manufacturer#1') | (part['TYPE'].str.startswith('P'))]

part[(part['MFGR'] != 'Manufacturer#5') & (part['P_PARTKEY'] > 63)].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('m'))].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] >= 6) & (part['RETAILPRICE'] < 915.4049004373027) & (part['SIZE'] <= 32) & (part['P_PARTKEY'] < 161) | (part['CONTAINER'] == 'LG')]

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2'])) & (part['P_PARTKEY'] < 72) & (part['RETAILPRICE'] == 1083.6900199494316) | (part['PT_COMMENT'].str.startswith('x')) & (part['TYPE'] != 'E') | (part['CONTAINER'] == 'WRAP')]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) | (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] != 14) & (part['SIZE'] > 18) & (part['SIZE'] <= 3) & (part['BRAND'].isin(['Brand#25', 'Brand#24', 'Brand#31', 'Brand#41', 'Brand#12', 'Brand#44', 'Brand#23', 'Brand#43', 'Brand#54', 'Brand#15', 'Brand#14', 'Brand#42', 'Brand#34', 'Brand#32', 'Brand#21', 'Brand#33', 'Brand#55', 'Brand#22']))]

part[(part['PT_COMMENT'] == '!') & (part['RETAILPRICE'] < 931.4004194343484) & (part['P_PARTKEY'] == 177) | (part['RETAILPRICE'] <= 937.7698688689254) & (part['CONTAINER'] == 'LG') & (part['PT_COMMENT'] != 'g')]

part[(part['PT_COMMENT'] == 'n') | (part['RETAILPRICE'] == 987.7466480963878)][['P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'].str.startswith('d')) & (part['P_NAME'].str.startswith('lem')) & (part['BRAND'] == 'Brand#42') & (part['PT_COMMENT'] == 'g') | (part['TYPE'] != 'SMA') & (part['RETAILPRICE'] > 906.1194928714161)]

part[(part['PT_COMMENT'].str.startswith('p')) & (part['MFGR'] == 'Manufacturer#2') & (part['BRAND'] != 'Brand#43') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) & (part['P_NAME'] == 'lem') & (part['SIZE'] <= 4)]

part[(part['P_NAME'] == 'l') & (part['RETAILPRICE'] > 1078.668533415474) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) & (part['RETAILPRICE'] != 964.1880170932118) | (part['PT_COMMENT'].str.startswith('y')) & (part['SIZE'] < 10)]

part[(part['P_NAME'] == 'o') | (part['P_PARTKEY'] > 22) & (part['PT_COMMENT'] != 'q') | (part['RETAILPRICE'] <= 950.3324425326743) | (part['TYPE'] == 'E') | (part['CONTAINER'] != 'WRAP')]

part[(part['P_NAME'] == 'p') | (part['P_PARTKEY'] == 170)][['P_NAME', 'P_PARTKEY']]

part[(part['P_NAME'].str.startswith('f')) & (part['SIZE'] >= 35) | (part['TYPE'] == 'STA') | (part['P_NAME'] != 'f') & (part['SIZE'] > 4) | (part['CONTAINER'] == 'JUMBO')]

part[(part['P_PARTKEY'] >= 33) & (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] != 'e') | (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] == 'bis') | (part['P_PARTKEY'] >= 86)]

part[(part['RETAILPRICE'] == 1065.859949065099) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'].str.startswith('S')) & (part['PT_COMMENT'] != 'l') | (part['P_NAME'] == 'c') & (part['MFGR'] == 'Manufacturer#5')]

part[(part['RETAILPRICE'] > 1011.5079648265904) | (part['PT_COMMENT'].str.startswith('i'))].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 1009.7386180540954)][['PT_COMMENT', 'P_PARTKEY', 'MFGR']]

part[(part['RETAILPRICE'] >= 921.880037065756) | (part['P_NAME'] == 'm') | (part['PT_COMMENT'].str.startswith('d')) & (part['RETAILPRICE'] <= 1098.5957683350928) & (part['PT_COMMENT'] == 'q') | (part['BRAND'].isin(['Brand#34', 'Brand#43', 'Brand#11', 'Brand#54', 'Brand#13', 'Brand#21', 'Brand#42', 'Brand#24', 'Brand#53', 'Brand#41', 'Brand#31', 'Brand#51', 'Brand#32', 'Brand#33', 'Brand#25', 'Brand#14', 'Brand#23', 'Brand#44', 'Brand#12', 'Brand#52', 'Brand#15', 'Brand#22', 'Brand#55', 'Brand#45', 'Brand#35']))]

part[(part['SIZE'] <= 23) & (part['PT_COMMENT'].str.startswith('c')) | (part['SIZE'] != 36) | (part['TYPE'] == 'S') | (part['BRAND'].isin(['Brand#54', 'Brand#34', 'Brand#52'])) & (part['P_PARTKEY'] >= 27)]

part[(part['SIZE'] > 28) & (part['RETAILPRICE'] == 925.3279023958148) & (part['CONTAINER'].str.startswith('MED')) | (part['BRAND'].isin(['Brand#22', 'Brand#25', 'Brand#42', 'Brand#44', 'Brand#15', 'Brand#54', 'Brand#51', 'Brand#52', 'Brand#43', 'Brand#21', 'Brand#31', 'Brand#55', 'Brand#53', 'Brand#35'])) | (part['SIZE'] >= 26) | (part['P_NAME'] == 'a')]

part[(part['SIZE'] > 39) | (part['CONTAINER'] == 'SM')][['RETAILPRICE', 'P_NAME']]

part[(part['TYPE'] != 'P') | (part['RETAILPRICE'] <= 1049.4468425462014) | (part['P_PARTKEY'] > 90) | (part['BRAND'] != 'Brand#25') & (part['SIZE'] < 38) & (part['P_PARTKEY'] <= 122)]

part[(part['TYPE'].str.startswith('P')) & (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] > 33) | (part['P_PARTKEY'] < 186) | (part['MFGR'] != 'Manufacturer#3') & (part['TYPE'] != 'M')]

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']]

part[['BRAND', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['BRAND', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[['BRAND', 'TYPE']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[['CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'BRAND', 'TYPE']]

part[['PT_COMMENT', 'BRAND', 'TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[['PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'BRAND']]

part[['PT_COMMENT', 'P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[['PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[['P_NAME', 'BRAND']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['P_NAME', 'CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['P_NAME', 'MFGR']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER']]

part[['P_NAME', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_NAME', 'SIZE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE']]

part[['P_PARTKEY', 'MFGR', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']]

part[['P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[['SIZE', 'MFGR']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']]

part[['TYPE', 'RETAILPRICE']].groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['SIZE'] < 11) | (part['MFGR'] == 'Manufacturer#1') | (part['TYPE'] != 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 16) & (supplier['S_COMMENT'] != 'x') & (supplier['S_NATIONKEY'] == 20)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 4531) | (partsupp['AVAILQTY'] <= 2147)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 5510)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['AVAILQTY'] == 9064)].groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 5833) & (partsupp['SUPPLYCOST'] != 764.2130610356963) & (partsupp['SUPPLYCOST'] >= 790.8162658805247)][['SUPPLYCOST']]

partsupp[(partsupp['AVAILQTY'] > 7344) | (partsupp['AVAILQTY'] < 1926)].groupby(by=['PS_PARTKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 33) | (partsupp['PS_SUPPKEY'] <= 7300) | (partsupp['PS_SUPPKEY'] == 4294)][['PS_PARTKEY']]

partsupp[(partsupp['PS_SUPPKEY'] < 3702) | (partsupp['PS_SUPPKEY'] != 6933)][['P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] < 5731) | (partsupp['SUPPLYCOST'] == 731.7637376463889) | (partsupp['AVAILQTY'] != 7217)][['P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] > 2846) | (partsupp['SUPPLYCOST'] >= 966.4776019049066) | (partsupp['SUPPLYCOST'] > 409.2278357220801)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] > 6681) | (partsupp['PS_PARTKEY'] == 10)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'bli') & (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['AVAILQTY'] < 185)][['P_COMMENT']]

partsupp[(partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['AVAILQTY'] > 470)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 772.496286761793) & (partsupp['PS_SUPPKEY'] > 7302)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 692.2544107389086) | (partsupp['PS_SUPPKEY'] == 7142)][['PS_PARTKEY', 'SUPPLYCOST']]

partsupp[['AVAILQTY', 'P_COMMENT']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY']).agg('count')

partsupp[['P_COMMENT', 'AVAILQTY']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY']]

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 0)].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] != 1)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'g')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'A')].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'AFR')].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] < 1)][['R_COMMENT']]

region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 1)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'E')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'h')][['R_COMMENT']]

region[(region['R_NAME'] == 'AFR')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] == 0)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] == 0)].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] > 2)][['R_COMMENT']]

region[(region['R_NAME'] == 'M')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'E')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI')].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] != 'l')].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'l')][['R_COMMENT']]

region[(region['R_NAME'].str.startswith('AME'))].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] == 1) & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'M')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] != 3)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'h')][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] < 0) | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 1)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] < 1)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 0)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 1)].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 1) & (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'AME')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 0)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'AFR')][['R_NAME']]

region[(region['R_REGIONKEY'] >= 1)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

supplier.groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('count')

supplier.groupby(by=['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] != ' ')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 5) | (nation['N_NATIONKEY'] >= 23) | (nation['N_NATIONKEY'] >= 18)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 1724.6643320276573) & (supplier['S_PHONE'] != '32-')][['S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] > 7635.691948267208) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 168) & (supplier['S_ADDRESS'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 7375.975248793081) | (supplier['S_PHONE'].str.startswith('28-'))]

supplier[(supplier['S_ADDRESS'] == 'R')].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'X') | (supplier['S_SUPPKEY'] >= 3) & (supplier['S_ADDRESS'] != 'h') & (supplier['S_PHONE'] == '2') & (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'].str.startswith('26-'))]

supplier[(supplier['S_NATIONKEY'] > 12) & (supplier['S_COMMENT'] == 'r') | (supplier['S_NAME'] == 'S')][['S_NAME']]

supplier[(supplier['S_PHONE'] != '2')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] < 129) & (supplier['S_ADDRESS'].str.startswith('N'))][['S_NAME']]

supplier[(supplier['S_PHONE'].str.startswith('1'))][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] != 129) | (supplier['S_COMMENT'] == 'l') | (supplier['S_PHONE'].str.startswith('17-'))][['S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] > 62) & (supplier['S_ADDRESS'] == '7')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 141) | (supplier['S_ADDRESS'] == '0') & (supplier['S_SUPPKEY'] < 16)][['S_PHONE']]

supplier[(supplier['S_SUPPKEY'] >= 167) & (supplier['S_COMMENT'] != 'r') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('C')) | (supplier['S_ADDRESS'].str.startswith(' ')) | (supplier['S_COMMENT'] == 'w')]

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']]

supplier[['S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ADDRESS']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_NAME', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_NAME'] == 'I') | (nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] > 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'w')].groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('0')) | (customer['C_NATIONKEY'] <= 1) & (customer['C_NATIONKEY'] > 16) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] >= 29) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NAME'] != 'C')]

customer[(customer['C_COMMENT'] != 'q') & (customer['C_ADDRESS'] != '6') | (customer['C_NATIONKEY'] > 5)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'y') & (customer['C_ADDRESS'] != '9') & (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']]

customer[(customer['C_NATIONKEY'] < 20) | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_NAME', 'C_ACCTBAL', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] == 11) & (customer['C_COMMENT'] == 'a') | (customer['C_CUSTKEY'] <= 25) & (customer['C_ACCTBAL'] < 8747.037800575219) & (customer['C_ADDRESS'] != '9') | (customer['C_NATIONKEY'] < 0) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY']))]

customer[(customer['C_NATIONKEY'] >= 4) & (customer['C_NATIONKEY'] == 12) | (customer['C_NATIONKEY'] == 12) & (customer['C_CUSTKEY'] > 66) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_CUSTKEY'] <= 1) | (customer['C_PHONE'] != '22-')]

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']]

customer[['C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ACCTBAL']).agg('count')

customer[['C_ADDRESS', 'C_ACCTBAL']].groupby(by=['C_ADDRESS', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME']].groupby(by=['C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'MKTSEGMENT']].groupby(by=['C_NATIONKEY', 'MKTSEGMENT']).agg('count')

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL']]

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_NAME']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['P_PARTKEY'] >= 167)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 9497)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.03278577671276916)].groupby(by=['SHIPDATE', 'SHIPINSTRUCT', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.0035897172684591807)][['TAX', 'SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE']]

lineitem[(lineitem['L_ORDERKEY'] != 136) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['EXTENDEDPRICE'] != 78629.22987084945) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_ORDERKEY'] != 56) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPDATE'] < '1998-10-30')]

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'REG AIR', 'FOB'])) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPDATE'] > '1992-04-27')][['SHIPINSTRUCT']]

lineitem[(lineitem['TAX'] == 0.07295748887229879) & (lineitem['EXTENDEDPRICE'] > 13756.189795910239) & (lineitem['L_COMMENT'] != 'h') | (lineitem['L_COMMENT'] != 'b') | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['LINESTATUS'] == 'F') & (lineitem['L_SUPPKEY'] < 8947)]

lineitem[['DISCOUNT', 'RETURNFLAG']].groupby(by=['DISCOUNT', 'RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'LINENUMBER']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_SUPPKEY', 'L_PARTKEY', 'EXTENDEDPRICE', 'RECEIPTDATE']]

lineitem[['LINESTATUS', 'SHIPMODE', 'SHIPDATE', 'COMMITDATE', 'L_COMMENT', 'RETURNFLAG', 'LINENUMBER']]

lineitem[['L_COMMENT', 'SHIPDATE', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'TAX', 'LINESTATUS']]

lineitem[['L_COMMENT', 'TAX', 'LINENUMBER']].groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

lineitem[['QUANTITY', 'L_PARTKEY']].groupby(by=['L_PARTKEY', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[['RETURNFLAG', 'RECEIPTDATE', 'DISCOUNT']].groupby(by=['DISCOUNT']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'SHIPDATE', 'SHIPINSTRUCT']].groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'LINENUMBER']].groupby(by=['LINENUMBER', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_COMMENT']].groupby(by=['SHIPINSTRUCT', 'L_COMMENT']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'SHIPINSTRUCT']).agg('count')

lineitem[['SHIPMODE', 'SHIPDATE']].groupby(by=['SHIPDATE', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[['SHIPMODE', 'TAX']].groupby(by=['SHIPMODE', 'TAX']).agg('count')

lineitem[['TAX', 'SHIPDATE', 'COMMITDATE']].groupby(by=['TAX']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'p') & (nation['N_NATIONKEY'] <= 12) | (nation['N_NATIONKEY'] == 2)][['N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 14)][['N_COMMENT']]

nation[(nation['N_COMMENT'] != 'u')].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] > 6) & (nation['N_NATIONKEY'] < 9) & (nation['N_NAME'] != 'F')][['N_NATIONKEY']]

nation[(nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] == ' ')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'F')].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'] != 'J')].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'J') | (nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] > 21) | (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] < 6) & (nation['N_NAME'] == 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 2)][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NAME'] == 'M')].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] != 'i') | (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY']]

nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('r'))][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] == 23)].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] != 4) | (nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'] != 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 20) | (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 6) & (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] < 11)][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] == 6) | (nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 11) & (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] < 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_NAME'] == 'I') & (nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] >= 12) & (nation['N_NATIONKEY'] > 21)][['N_NAME']]

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] > 19) | (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 1)].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0)].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'] != 'u')][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2)].groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('y')) & (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] <= 13)][['N_COMMENT', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] < 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'B')][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'a')][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('c'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] != 26140) & (orders['TOTALPRICE'] == 130899.4603011022) & (orders['TOTALPRICE'] < 138717.1385405958) | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] > 328418.46024684067)]

orders[(orders['ORDERSTATUS'].isin(['P'])) & (orders['O_COMMENT'] != 'z') & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 60787) | (orders['O_ORDERKEY'] < 700) & (orders['O_COMMENT'] != 'e') | (orders['TOTALPRICE'] != 275436.5991692479)][['ORDERPRIORITY']]

orders[(orders['O_CUSTKEY'] >= 49522) | (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'].str.startswith('g')) | (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 454) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_CUSTKEY'] == 49574)]

orders[(orders['O_ORDERKEY'] <= 15) | (orders['O_CUSTKEY'] != 113912)].groupby(by=['TOTALPRICE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 672) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY']]

orders[['CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']]

orders[['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT']]

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']]

orders[['ORDERDATE', 'TOTALPRICE']].groupby(by=['ORDERDATE', 'TOTALPRICE']).agg('count')

orders[['ORDERSTATUS', 'CLERK', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[['ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS', 'CLERK']).agg('count')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'CLERK']]

orders[['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[['O_COMMENT', 'ORDERDATE']].groupby(by=['O_COMMENT', 'ORDERDATE']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK']]

orders[['O_COMMENT', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'O_COMMENT']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['O_ORDERKEY', 'CLERK']].groupby(by=['O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']]

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[['SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['SHIPPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

part[(part['BRAND'] != 'Brand#12')].groupby(by=['RETAILPRICE', 'SIZE', 'BRAND']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#22') & (part['RETAILPRICE'] < 1027.2423263623837) | (part['P_NAME'] != 'm') & (part['BRAND'].isin(['Brand#33', 'Brand#34', 'Brand#11', 'Brand#21', 'Brand#43', 'Brand#15', 'Brand#53', 'Brand#42', 'Brand#23', 'Brand#13', 'Brand#55', 'Brand#24', 'Brand#22', 'Brand#44', 'Brand#51', 'Brand#14', 'Brand#12', 'Brand#41', 'Brand#35', 'Brand#54', 'Brand#52', 'Brand#45', 'Brand#25'])) & (part['PT_COMMENT'].str.startswith('m')) | (part['P_NAME'] == 'g') | (part['TYPE'] != 'SMA')]

part[(part['BRAND'] != 'Brand#54') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2'])) | (part['P_PARTKEY'] < 107)].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#31') & (part['CONTAINER'] == 'WRAP') & (part['BRAND'].isin(['Brand#11', 'Brand#34', 'Brand#52', 'Brand#35', 'Brand#12', 'Brand#53'])) | (part['BRAND'].isin(['Brand#23', 'Brand#54', 'Brand#51', 'Brand#11', 'Brand#33', 'Brand#25', 'Brand#22', 'Brand#13', 'Brand#34', 'Brand#24', 'Brand#35', 'Brand#44', 'Brand#41', 'Brand#45', 'Brand#43', 'Brand#55', 'Brand#21', 'Brand#52', 'Brand#42']))][['BRAND']]

part[(part['BRAND'] == 'Brand#51') & (part['RETAILPRICE'] == 1066.9291817902047) | (part['SIZE'] > 8) | (part['P_PARTKEY'] < 29) & (part['TYPE'].str.startswith('P')) & (part['SIZE'] == 44) | (part['TYPE'] == 'P')]

part[(part['BRAND'].isin(['Brand#33'])) | (part['TYPE'].str.startswith('S')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] < 41) & (part['TYPE'] == 'E') & (part['SIZE'] == 10)]

part[(part['BRAND'].isin(['Brand#42', 'Brand#55', 'Brand#51', 'Brand#35', 'Brand#44'])) & (part['PT_COMMENT'] != 'q') | (part['P_NAME'] != 'f') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4'])) | (part['P_NAME'] == 'w') | (part['BRAND'].isin(['Brand#21', 'Brand#35', 'Brand#22', 'Brand#52', 'Brand#55', 'Brand#54', 'Brand#12', 'Brand#14', 'Brand#31', 'Brand#45', 'Brand#42', 'Brand#43', 'Brand#15', 'Brand#51', 'Brand#13', 'Brand#53', 'Brand#24', 'Brand#25', 'Brand#11', 'Brand#44', 'Brand#41', 'Brand#23', 'Brand#34']))]

part[(part['BRAND'].isin(['Brand#55', 'Brand#23', 'Brand#32', 'Brand#52', 'Brand#54', 'Brand#31', 'Brand#42', 'Brand#24', 'Brand#21', 'Brand#51', 'Brand#34', 'Brand#11', 'Brand#22'])) & (part['P_NAME'].str.startswith('k')) | (part['SIZE'] <= 42) & (part['RETAILPRICE'] > 987.6704885586144) | (part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#54', 'Brand#25', 'Brand#52', 'Brand#44', 'Brand#24', 'Brand#21', 'Brand#32', 'Brand#15', 'Brand#45', 'Brand#53', 'Brand#43', 'Brand#35', 'Brand#23', 'Brand#55', 'Brand#41', 'Brand#51', 'Brand#14', 'Brand#11', 'Brand#12'])) | (part['MFGR'] == 'Manufacturer#3')]

part[(part['CONTAINER'] == 'JUMBO') | (part['TYPE'] != 'P') & (part['PT_COMMENT'].str.startswith('c')) | (part['P_PARTKEY'] <= 135) & (part['TYPE'] != 'P') | (part['P_NAME'] != 'i') | (part['P_PARTKEY'] == 132)]

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'].isin(['Brand#12']))].groupby(by=['SIZE', 'MFGR']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] == 'b') | (part['P_NAME'].str.startswith('h')) | (part['BRAND'] != 'Brand#14') | (part['TYPE'] != 'STA') | (part['SIZE'] != 35) | (part['P_NAME'] != 'v')]

part[(part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] == 21) | (part['BRAND'] != 'Brand#42') | (part['P_PARTKEY'] > 196) | (part['RETAILPRICE'] <= 1012.8661772681851) | (part['P_PARTKEY'] > 103) & (part['CONTAINER'] == 'LG')]

part[(part['MFGR'] != 'Manufacturer#3')].groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') & (part['TYPE'] != 'E') | (part['RETAILPRICE'] == 994.2970951407419)][['MFGR', 'P_NAME']]

part[(part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] == 'lin') & (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] == 36)][['P_PARTKEY']]

part[(part['PT_COMMENT'] == 'kag') & (part['P_NAME'].str.startswith('lem')) | (part['PT_COMMENT'].str.startswith('kag'))][['PT_COMMENT', 'BRAND']]

part[(part['PT_COMMENT'] == 'w') & (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] == 948.8195206916167) | (part['P_NAME'] == 'r')][['TYPE']]

part[(part['P_NAME'] != 'bis') | (part['P_PARTKEY'] < 175) | (part['BRAND'] != 'Brand#25') | (part['P_NAME'] == 'lem') | (part['PT_COMMENT'].str.startswith('g')) | (part['TYPE'] != 'SMA') & (part['BRAND'] != 'Brand#43')]

part[(part['P_NAME'] == 'o') | (part['CONTAINER'] != 'MED')].groupby(by=['TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('w')) | (part['RETAILPRICE'] <= 933.9320667038937) | (part['P_PARTKEY'] <= 89) | (part['RETAILPRICE'] > 965.3675625403478) | (part['P_NAME'].str.startswith('c')) | (part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] <= 37)]

part[(part['P_PARTKEY'] > 16) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2'])) & (part['PT_COMMENT'] == 'l') | (part['P_NAME'] == 'c') & (part['P_NAME'] == 't') | (part['P_PARTKEY'] <= 107) | (part['P_NAME'] != 'bis')]

part[(part['P_PARTKEY'] >= 161) & (part['TYPE'].str.startswith('STA')) & (part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] != 'Brand#43') & (part['MFGR'] != 'Manufacturer#1') & (part['SIZE'] > 14) | (part['RETAILPRICE'] == 1041.0168419659624)]

part[(part['RETAILPRICE'] != 1041.5101925837293)].groupby(by=['SIZE', 'RETAILPRICE', 'MFGR']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 1084.537914794244)].groupby(by=['CONTAINER', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] > 913.4943105610538)].groupby(by=['RETAILPRICE', 'BRAND', 'P_NAME']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] > 939.3405628954072) & (part['RETAILPRICE'] <= 1042.6501647213709) | (part['SIZE'] > 19) | (part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] == 'JUMBO') & (part['MFGR'] != 'Manufacturer#4')]

part[(part['SIZE'] != 30) & (part['SIZE'] < 8) | (part['BRAND'].isin(['Brand#13', 'Brand#12', 'Brand#42', 'Brand#55', 'Brand#44', 'Brand#33', 'Brand#24', 'Brand#53', 'Brand#21', 'Brand#31', 'Brand#54', 'Brand#11', 'Brand#22'])) & (part['PT_COMMENT'].str.startswith('q')) & (part['PT_COMMENT'] != 'm') | (part['SIZE'] >= 2) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1']))]

part[(part['SIZE'] > 8) | (part['P_PARTKEY'] != 98)].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['SIZE'] >= 10) | (part['BRAND'] == 'Brand#51') | (part['BRAND'] == 'Brand#24') | (part['CONTAINER'] != 'MED') & (part['BRAND'] != 'Brand#21') | (part['TYPE'] == 'P') | (part['MFGR'] != 'Manufacturer#1')]

part[(part['TYPE'] != 'E') | (part['P_PARTKEY'] == 129) & (part['SIZE'] <= 38) | (part['RETAILPRICE'] >= 1030.5735397405747) | (part['PT_COMMENT'] != ' ') | (part['SIZE'] == 27) & (part['RETAILPRICE'] != 1048.7807255640255)]

part[(part['TYPE'] == 'P') & (part['TYPE'].str.startswith('M')) | (part['P_NAME'].str.startswith('s')) | (part['RETAILPRICE'] <= 1040.7867390891854) | (part['P_NAME'] != 'c') | (part['RETAILPRICE'] != 1024.44462526466) & (part['TYPE'].str.startswith('SMA'))]

part[(part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'].str.startswith('!')) & (part['P_PARTKEY'] != 111) & (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] == 'JUMBO') & (part['PT_COMMENT'] == 'g') & (part['P_PARTKEY'] < 82)]

part[['BRAND', 'PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'P_NAME']]

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[['BRAND', 'P_PARTKEY', 'MFGR']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['CONTAINER', 'PT_COMMENT', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[['CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[['MFGR', 'BRAND']].groupby(by=['BRAND', 'MFGR']).agg('count')

part[['MFGR', 'CONTAINER']].groupby(by=['MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'MFGR']]

part[['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'MFGR']]

part[['P_NAME', 'CONTAINER']].groupby(by=['P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part[['P_NAME', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['P_NAME', 'P_PARTKEY']].groupby(by=['P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[['P_PARTKEY', 'MFGR', 'TYPE', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR']].groupby(by=['MFGR', 'P_PARTKEY']).agg('count')

part[['P_PARTKEY', 'P_NAME', 'BRAND']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']]

part[['P_PARTKEY', 'RETAILPRICE', 'P_NAME']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'PT_COMMENT']].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']]

part[['SIZE', 'BRAND', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE']]

part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'TYPE']]

part[['SIZE', 'CONTAINER']].groupby(by=['SIZE', 'CONTAINER']).agg('count')

part[['SIZE', 'P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']]

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND']]

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND']]

part[['SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']]

part[['TYPE', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']]

part[['TYPE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['SIZE'] == 41) | (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] <= 914.2515221633653) & (part['RETAILPRICE'] <= 1021.0939178903387)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 3836) | (partsupp['SUPPLYCOST'] == 445.28043613001785) | (partsupp['PS_PARTKEY'] != 27)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 5585) & (partsupp['AVAILQTY'] != 7976) | (partsupp['PS_SUPPKEY'] == 5419) | (partsupp['AVAILQTY'] != 1554)][['AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] == 4642) & (partsupp['SUPPLYCOST'] <= 868.568048436038) | (partsupp['P_COMMENT'] == 'i') | (partsupp['SUPPLYCOST'] < 394.3224363719256)][['AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] > 3707) | (partsupp['P_COMMENT'] != 'u') & (partsupp['PS_SUPPKEY'] == 5467) | (partsupp['PS_SUPPKEY'] < 4777)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] > 32) | (partsupp['AVAILQTY'] <= 1610)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] > 45) | (partsupp['PS_SUPPKEY'] < 6810) & (partsupp['AVAILQTY'] < 399) | (partsupp['P_COMMENT'] != 'are')][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] >= 49) | (partsupp['PS_PARTKEY'] == 32) & (partsupp['PS_PARTKEY'] != 2) & (partsupp['AVAILQTY'] < 7905)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] == 69) | (partsupp['P_COMMENT'] == 'p') | (partsupp['PS_SUPPKEY'] != 7462) | (partsupp['SUPPLYCOST'] >= 274.69793771682527)][['SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'] == 'e') | (partsupp['PS_SUPPKEY'] < 2424) | (partsupp['P_COMMENT'] == 'p') | (partsupp['PS_SUPPKEY'] <= 3202)][['PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['SUPPLYCOST'] <= 885.0544653496448) | (partsupp['AVAILQTY'] == 5963)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 339.7595509951621) | (partsupp['PS_PARTKEY'] != 48) & (partsupp['AVAILQTY'] >= 1406)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 825.3611918786654) & (partsupp['SUPPLYCOST'] > 18.18908757141733) & (partsupp['PS_SUPPKEY'] > 1698) & (partsupp['PS_SUPPKEY'] != 5387)][['PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] >= 953.3806270361573) | (partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['PS_PARTKEY'] > 22)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY']].groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'A')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'ASI')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'g')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AME')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'AFR')].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'h')].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 2)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'u')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'E') & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'ASI')].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'A')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'AFR')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] > 1)].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] == 'AME') & (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'E') & (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'h')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E')].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'M')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] < 2)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] > 0)].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AFR')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] >= 3)].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'h')].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'E')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] != 2)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] > 1)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'AFR')].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 2) & (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 0)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] != 'E')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 2)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] == 0)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'A')].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 2)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'A')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] < 3)].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] != 0)].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 3)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'ASI')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'v')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('p'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] <= 6)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'M') & (nation['N_REGIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'C')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < -40.87346212980799) | (supplier['S_NATIONKEY'] == 3) | (supplier['S_COMMENT'] == 'd') | (supplier['S_ADDRESS'] != 'w') & (supplier['S_ADDRESS'] == 'Y') | (supplier['S_ACCTBAL'] == -85.10869277170332) & (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_ACCTBAL'] >= -833.5332453673135) | (supplier['S_NATIONKEY'] == 20) | (supplier['S_SUPPKEY'] < 126)][['S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'] != 'a') & (supplier['S_NATIONKEY'] < 17) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 6832.140298448213)][['S_ACCTBAL']]

supplier[(supplier['S_COMMENT'] != 'al ') & (supplier['S_ACCTBAL'] >= -866.5294284604944)][['S_PHONE', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_COMMENT'] == 'u')][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[(supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_NATIONKEY'] <= 17)][['S_ACCTBAL', 'S_NAME', 'S_PHONE']]

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_ACCTBAL'] != 698.1266666505167) | (supplier['S_PHONE'] != '28-')][['S_ADDRESS', 'S_ACCTBAL']]

supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_COMMENT'] != 'd')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 75) | (supplier['S_NATIONKEY'] > 9) & (supplier['S_ADDRESS'] == 'D') | (supplier['S_SUPPKEY'] != 70) | (supplier['S_NATIONKEY'] == 20)]

supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < 3116.6107029303257) & (supplier['S_NATIONKEY'] > 14) & (supplier['S_ACCTBAL'] <= 3312.2246450345638)][['S_SUPPKEY']]

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] != 3) | (supplier['S_ACCTBAL'] > 9422.528661494482)][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] < 23) | (supplier['S_COMMENT'] != 'o')][['S_NAME', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] >= 14) | (supplier['S_ACCTBAL'] == -513.1758178388197) & (supplier['S_SUPPKEY'] == 160)][['S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'] == 'y') | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT']]

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_ACCTBAL'] <= 6695.942222584464)][['S_NAME', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_PHONE'] == '1') | (supplier['S_NATIONKEY'] < 19) & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_COMMENT']]

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] < 8596.225736660894) & (supplier['S_NATIONKEY'] < 21)][['S_PHONE']]

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_NATIONKEY'] == 9)].groupby(by=['S_COMMENT', 'S_NATIONKEY']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] != 112) | (supplier['S_NATIONKEY'] < 17)][['S_PHONE', 'S_COMMENT']]

supplier[(supplier['S_SUPPKEY'] < 44) | (supplier['S_ACCTBAL'] != 7973.937670118158) | (supplier['S_COMMENT'] == 'j') & (supplier['S_NAME'] != 'S')][['S_COMMENT']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']]

supplier[['S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']]

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']]

supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_NAME', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 14) | (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('r'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 8884.50267083344) | (customer['C_CUSTKEY'] <= 80)][['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] < 1095.587150504415)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 3551.951291106194) & (customer['C_COMMENT'] != 'u') & (customer['C_ACCTBAL'] < 2565.0370165102795) & (customer['C_PHONE'] != '22-') & (customer['C_ACCTBAL'] <= 5595.526621077396)][['C_NAME']]

customer[(customer['C_ACCTBAL'] <= 6655.554480403776)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 9962.992703369267)][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7210.017340086026) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 21) & (customer['C_PHONE'] == '18-')][['C_ACCTBAL', 'C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] > 2288.6591118365072) & (customer['C_CUSTKEY'] <= 81) & (customer['C_CUSTKEY'] != 12) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_PHONE'] == '25-')][['C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] > 4869.448306137381) & (customer['MKTSEGMENT'] == 'FURNITURE')].groupby(by=['C_NAME', 'MKTSEGMENT', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 968.1712993533686) | (customer['C_COMMENT'] != 'a') | (customer['C_ACCTBAL'] > 2476.3987611435396) & (customer['C_CUSTKEY'] != 61) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_ADDRESS'] != 'o') | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_NAME'].str.startswith('C'))]

customer[(customer['C_ACCTBAL'] >= 5288.551435985508) & (customer['C_NATIONKEY'] <= 7) | (customer['C_ACCTBAL'] == 7168.151631154565) & (customer['C_COMMENT'] != 'p') & (customer['C_NAME'] == 'C')][['C_PHONE']]

customer[(customer['C_ADDRESS'] != '8') & (customer['C_PHONE'] != '22-') & (customer['C_COMMENT'] != 't')].groupby(by=['C_NATIONKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'p')][['C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('e')) | (customer['C_CUSTKEY'] > 10) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING'])) | (customer['C_COMMENT'] != 'w') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 68) & (customer['C_NATIONKEY'] > 17) | (customer['C_CUSTKEY'] == 73)]

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['C_ADDRESS'] != 'b') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 's') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'f') | (customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] == 'AUTOMOBILE')]

customer[(customer['C_CUSTKEY'] == 50) & (customer['C_CUSTKEY'] >= 90) | (customer['C_COMMENT'] != 'u') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'FURNITURE')][['MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] == 64) & (customer['C_ACCTBAL'] != 3569.659504172223) | (customer['C_ADDRESS'] == 'Q') & (customer['C_COMMENT'] == ' ') | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE']))][['C_PHONE']]

customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('0')) & (customer['C_ACCTBAL'] == 6539.09330349757) | (customer['C_ADDRESS'] == 'n') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] != 'a') | (customer['C_CUSTKEY'] < 14)]

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 18) & (customer['C_ACCTBAL'] <= 7245.721956568045)][['C_NAME', 'C_ADDRESS', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_CUSTKEY'] >= 42)].groupby(by=['C_COMMENT', 'C_PHONE', 'C_NATIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'].str.startswith('6'))][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']]

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_NATIONKEY'] > 9) | (customer['C_COMMENT'] != 'n') & (customer['C_ACCTBAL'] >= 2367.3023524838172) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_NAME'] != 'C')]

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_CUSTKEY'] <= 11) | (customer['C_ADDRESS'] != 'D') & (customer['C_COMMENT'] != 'p')][['MKTSEGMENT']]

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING']))][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('count')

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']]

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['C_ACCTBAL', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']]

customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_NAME', 'C_PHONE']].groupby(by=['C_NAME', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']]

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 5565.03702752648) & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] != 63)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_CUSTKEY'] > 32) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('count')

lineitem.merge(partsupp.merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(part[['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 263) | (partsupp['SUPPLYCOST'] < 717.2138735340311) | (partsupp['SUPPLYCOST'] > 685.9026946318195) | (partsupp['PS_SUPPKEY'] > 6300) | (partsupp['SUPPLYCOST'] > 234.07367325367125)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4526) | (partsupp['PS_SUPPKEY'] != 6236)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'd') | (partsupp['PS_SUPPKEY'] != 236) & (partsupp['AVAILQTY'] != 712) & (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['AVAILQTY'] >= 1328)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['LINESTATUS'].isin(['O', 'F']))][['QUANTITY', 'SHIPMODE', 'EXTENDEDPRICE', 'SHIPINSTRUCT']]

lineitem[(lineitem['LINENUMBER'] > 4) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['TAX'] < 0.004802986687516215)].groupby(by=['RETURNFLAG', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('p')) & (lineitem['RETURNFLAG'].isin(['R'])) & (lineitem['L_COMMENT'] == 'h')].groupby(by=['L_ORDERKEY', 'SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('q')) & (lineitem['L_PARTKEY'] == 182281) & (lineitem['L_PARTKEY'] == 136989) | (lineitem['L_SUPPKEY'] <= 6247)][['RETURNFLAG', 'TAX']]

lineitem[(lineitem['L_PARTKEY'] >= 22425) | (lineitem['LINENUMBER'] <= 3) | (lineitem['QUANTITY'] == 42) & (lineitem['L_ORDERKEY'] <= 54)][['L_SUPPKEY', 'L_ORDERKEY']]

lineitem[(lineitem['L_SUPPKEY'] <= 1347) | (lineitem['L_COMMENT'] != ',')][['L_COMMENT', 'EXTENDEDPRICE', 'DISCOUNT', 'LINENUMBER']]

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['EXTENDEDPRICE'] < 5177.732668831011) & (lineitem['L_SUPPKEY'] > 2251)][['EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPMODE']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['TAX'] <= 0.024248962445133387)][['L_COMMENT', 'TAX', 'DISCOUNT', 'QUANTITY']]

lineitem[(lineitem['SHIPMODE'].isin(['AIR', 'TRUCK', 'FOB', 'REG AIR', 'MAIL']))][['SHIPDATE']].groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.016504851543455823) | (lineitem['L_PARTKEY'] <= 114718) | (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] >= 52356.310296423464) | (lineitem['LINESTATUS'] == 'F')][['RECEIPTDATE']]

lineitem[(lineitem['TAX'] <= 0.028816679590101053) | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_COMMENT'].str.startswith('g')) | (lineitem['LINENUMBER'] < 5)][['RECEIPTDATE']]

lineitem[['COMMITDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'RECEIPTDATE']].groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'TAX']].groupby(by=['TAX', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPMODE', 'RETURNFLAG']].groupby(by=['LINENUMBER', 'SHIPMODE']).agg('count')

lineitem[['LINESTATUS', 'LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE', 'QUANTITY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE']]

lineitem[['L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE']]

lineitem[['L_COMMENT', 'L_SUPPKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT', 'L_SUPPKEY', 'EXTENDEDPRICE']].groupby(by=['L_SUPPKEY']).agg('max', numeric_only=True)

lineitem[['L_SUPPKEY', 'DISCOUNT', 'LINESTATUS']].groupby(by=['DISCOUNT', 'L_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['QUANTITY', 'TAX', 'COMMITDATE', 'RECEIPTDATE', 'SHIPMODE', 'L_COMMENT', 'DISCOUNT', 'RETURNFLAG']]

lineitem[['SHIPDATE', 'SHIPINSTRUCT', 'L_SUPPKEY']].groupby(by=['SHIPINSTRUCT', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem[['TAX', 'L_SUPPKEY', 'QUANTITY']].groupby(by=['L_SUPPKEY', 'QUANTITY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] == 'o') & (nation['N_NAME'] != 'V')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] == 'o') | (nation['N_NAME'] != 'K') | (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'] == 'c') & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 's') | (nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] < 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'] != 'P')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] > 4) | (nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('o'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('n'))].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'E')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'I') & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == 'h')].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'I')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] == 7) | (nation['N_NATIONKEY'] == 5) & (nation['N_NATIONKEY'] != 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'M')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'].str.startswith('r'))][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NAME'] == 'P')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'] == 'S')].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'U')][['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] >= 22) & (nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] <= 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G'))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] > 14)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] < 22) & (nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] == 'o')][['N_NAME', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] < 20)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 0) & (nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('G'))].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 16)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 12)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 15)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 16) | (nation['N_NATIONKEY'] < 16) & (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] > 15)][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 20)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 23) & (nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] <= 17) | (nation['N_REGIONKEY'] > 0)].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 1) & (nation['N_NAME'] != 'S') | (nation['N_NAME'] != 'B') & (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 1) | (nation['N_COMMENT'] == 'r') & (nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] < 16)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] > 11) & (nation['N_COMMENT'] == 'y')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_NAME'] != 'K') & (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] < 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] == 11) | (nation['N_NATIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] <= 17)].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] >= 5) | (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('I')) | (nation['N_NAME'] != 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'] != 'u')].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 10) | (nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3)].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 20)][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F']))][['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['O_COMMENT'] != 'q') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 37106) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['O_CUSTKEY'] != 124063)].groupby(by=['CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 94255)][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] < 48635) & (orders['O_COMMENT'].str.startswith('a')) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] > 75944) & (orders['TOTALPRICE'] <= 142054.55083199844) | (orders['CLERK'] != 'C')][['O_ORDERKEY', 'CLERK', 'ORDERDATE']]

orders[(orders['O_ORDERKEY'] == 250) | (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'].str.startswith('w'))][['ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] > 538) & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] >= 111692) & (orders['O_ORDERKEY'] <= 92) | (orders['ORDERSTATUS'] != 'O')]

orders[(orders['O_ORDERKEY'] >= 672) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH']))].groupby(by=['O_ORDERKEY', 'CLERK', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] < 21737.156885960932) & (orders['O_CUSTKEY'] > 79952) | (orders['TOTALPRICE'] == 167290.25878437344) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 295) & (orders['ORDERDATE'] > '1992-01-13')]

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] == 'u') & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'TOTALPRICE']]

orders[(orders['SHIPPRIORITY'] < 0)].merge(customer[['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] == ',') & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] < 0)].groupby(by=['O_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] <= 168845.83790469685) | (orders['TOTALPRICE'] >= 28251.273447035746) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] > 146) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] <= 642) | (orders['TOTALPRICE'] > 82456.4518851208)]

orders[(orders['TOTALPRICE'] <= 300231.19979679736)][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

orders[['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY']).agg('count')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']]

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['ORDERPRIORITY']).agg('count')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERDATE', 'SHIPPRIORITY']).agg('count')

orders[['SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']]

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') | (part['CONTAINER'] != 'JUMBO') & (part['BRAND'].isin(['Brand#44', 'Brand#41', 'Brand#31', 'Brand#22', 'Brand#51', 'Brand#23', 'Brand#21', 'Brand#52', 'Brand#14', 'Brand#35', 'Brand#11', 'Brand#32']))].groupby(by=['CONTAINER', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#41')].groupby(by=['CONTAINER', 'PT_COMMENT', 'BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#45') | (part['CONTAINER'] != 'SM') | (part['BRAND'] != 'Brand#44') & (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] == 'n') | (part['P_NAME'] != 'd') | (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'] == 'LG')]

part[(part['BRAND'].isin(['Brand#45', 'Brand#11', 'Brand#53', 'Brand#22', 'Brand#51', 'Brand#43', 'Brand#55', 'Brand#41', 'Brand#33', 'Brand#15', 'Brand#31', 'Brand#54', 'Brand#42', 'Brand#34', 'Brand#24', 'Brand#25', 'Brand#32', 'Brand#23', 'Brand#44', 'Brand#35', 'Brand#52', 'Brand#13', 'Brand#14'])) | (part['TYPE'] != 'S') & (part['PT_COMMENT'].str.startswith('b')) | (part['TYPE'] == 'P') & (part['BRAND'] != 'Brand#22') & (part['BRAND'] == 'Brand#35') | (part['PT_COMMENT'] == 'r') & (part['SIZE'] > 43)]

part[(part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] < 198)].groupby(by=['SIZE', 'BRAND', 'P_NAME']).agg('count')

part[(part['CONTAINER'] == 'JUMBO') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2'])) | (part['SIZE'] < 5) | (part['PT_COMMENT'] != 'x') & (part['SIZE'] < 36)][['SIZE']]

part[(part['CONTAINER'] == 'MED')].groupby(by=['CONTAINER', 'P_NAME', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'].str.startswith('MED'))].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] != 1064.3985897553189) & (part['TYPE'] == 'STA') | (part['P_NAME'] == 'f') | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] < 4) & (part['PT_COMMENT'].str.startswith('ss ')) & (part['SIZE'] != 44)]

part[(part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] != 38) | (part['P_PARTKEY'] >= 123) | (part['BRAND'].isin(['Brand#25', 'Brand#24', 'Brand#45', 'Brand#33', 'Brand#42', 'Brand#32', 'Brand#11', 'Brand#44', 'Brand#31', 'Brand#35', 'Brand#14', 'Brand#34', 'Brand#13', 'Brand#51', 'Brand#52', 'Brand#12', 'Brand#41'])) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#5') & (part['TYPE'].str.startswith('P'))]

part[(part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] != 'r') | (part['BRAND'] != 'Brand#35') | (part['P_PARTKEY'] > 20) & (part['RETAILPRICE'] < 1048.7857996845419) & (part['PT_COMMENT'] != 's') & (part['RETAILPRICE'] > 1056.309995883896) | (part['P_NAME'] == 'b')]

part[(part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] != 'Brand#35') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2'])) & (part['PT_COMMENT'].str.startswith('g')) | (part['SIZE'] >= 15) & (part['RETAILPRICE'] == 1022.7815648361083) | (part['P_NAME'] != 'p') & (part['TYPE'] == 'E')]

part[(part['MFGR'] != 'Manufacturer#5')][['PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE']]

part[(part['MFGR'] == 'Manufacturer#1')].groupby(by=['MFGR', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3'])) & (part['PT_COMMENT'] != 's') & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'].isin(['Brand#42', 'Brand#32', 'Brand#43', 'Brand#34', 'Brand#35', 'Brand#31', 'Brand#55', 'Brand#25'])) | (part['SIZE'] == 27) & (part['BRAND'].isin(['Brand#25', 'Brand#22', 'Brand#11', 'Brand#53', 'Brand#55', 'Brand#23', 'Brand#13', 'Brand#44'])) & (part['P_PARTKEY'] == 131) | (part['MFGR'] == 'Manufacturer#4')]

part[(part['MFGR'].isin(['Manufacturer#2'])) & (part['TYPE'].str.startswith('E')) | (part['BRAND'].isin(['Brand#33'])) | (part['P_PARTKEY'] > 6) | (part['MFGR'] == 'Manufacturer#3') & (part['SIZE'] >= 11) & (part['PT_COMMENT'].str.startswith('d')) | (part['P_NAME'] != 'o')]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2']))][['P_NAME', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'BRAND']]

part[(part['PT_COMMENT'] != 'h') & (part['RETAILPRICE'] <= 925.1961433075743) | (part['CONTAINER'] == 'LG') | (part['P_NAME'] != 'w') | (part['MFGR'] != 'Manufacturer#3') & (part['RETAILPRICE'] <= 980.0915339277221) | (part['SIZE'] < 39) & (part['MFGR'] == 'Manufacturer#3')]

part[(part['PT_COMMENT'] == ' fi') & (part['PT_COMMENT'].str.startswith('kag')) | (part['TYPE'] != 'STA') | (part['MFGR'] != 'Manufacturer#5')].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'h') & (part['MFGR'].isin(['Manufacturer#3'])) | (part['TYPE'].str.startswith('M')) & (part['RETAILPRICE'] != 1065.0972608884758) & (part['BRAND'] == 'Brand#41') & (part['P_NAME'] == 'w') & (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'] != 'l')]

part[(part['PT_COMMENT'].str.startswith('b')) | (part['SIZE'] < 21) & (part['TYPE'] != 'L') | (part['PT_COMMENT'] == 'f') & (part['BRAND'] != 'Brand#24') & (part['RETAILPRICE'] < 1084.8246342010198) & (part['SIZE'] == 5) | (part['P_NAME'] != 'a')]

part[(part['PT_COMMENT'].str.startswith('g')) & (part['BRAND'].isin(['Brand#31', 'Brand#34', 'Brand#25', 'Brand#15', 'Brand#42', 'Brand#24']))].groupby(by=['P_PARTKEY', 'CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('x'))].groupby(by=['SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'cor')].groupby(by=['P_NAME', 'PT_COMMENT', 'SIZE', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'i')][['PT_COMMENT', 'P_NAME', 'BRAND', 'TYPE', 'RETAILPRICE']]

part[(part['P_NAME'] != 'v') | (part['RETAILPRICE'] >= 916.4134886294505) & (part['RETAILPRICE'] >= 1009.3047370113982) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1'])) | (part['TYPE'].str.startswith('L')) | (part['PT_COMMENT'] != 'kag') & (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'].isin(['Brand#31']))]

part[(part['P_NAME'] == 'b') | (part['CONTAINER'] == 'LG') & (part['TYPE'] == 'SMA') & (part['PT_COMMENT'] != 'the') | (part['CONTAINER'] == 'LG') | (part['TYPE'].str.startswith('L')) & (part['SIZE'] >= 11) | (part['TYPE'] != 'S')]

part[(part['P_NAME'] == 'b')][['BRAND', 'TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[(part['P_NAME'] == 'bis') | (part['P_NAME'] == 'bis') | (part['RETAILPRICE'] >= 957.8910164075361)].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'bis') | (part['SIZE'] != 12)][['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['P_NAME'] == 'r') & (part['P_NAME'].str.startswith('lem')) & (part['P_NAME'] != 'cor')].groupby(by=['BRAND', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('h')) | (part['TYPE'] == 'STA') & (part['CONTAINER'] != 'MED') | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('k')) | (part['RETAILPRICE'] != 1045.7731254684572) | (part['CONTAINER'] != 'JUMBO')]

part[(part['P_NAME'].str.startswith('k')) & (part['MFGR'] == 'Manufacturer#2') & (part['TYPE'] != 'STA') | (part['BRAND'] == 'Brand#45') | (part['BRAND'] != 'Brand#22') | (part['BRAND'] != 'Brand#22') & (part['PT_COMMENT'].str.startswith('c')) | (part['P_NAME'].str.startswith('s'))]

part[(part['P_NAME'].str.startswith('t')) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1']))][['TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('w'))].groupby(by=['TYPE', 'MFGR', 'P_NAME', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 120)][['P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER']]

part[(part['P_PARTKEY'] < 4) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) | (part['RETAILPRICE'] != 1002.045741128577) | (part['BRAND'] == 'Brand#53') | (part['SIZE'] >= 25)][['BRAND']]

part[(part['P_PARTKEY'] > 45)].groupby(by=['RETAILPRICE', 'TYPE', 'CONTAINER', 'SIZE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] >= 32) | (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] == 906.7304966500902) | (part['RETAILPRICE'] == 959.2668972500111) & (part['SIZE'] <= 23) | (part['SIZE'] < 10) & (part['SIZE'] != 36) | (part['P_NAME'] == 'f')]

part[(part['RETAILPRICE'] <= 1070.2717892585615)][['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[(part['RETAILPRICE'] <= 1087.6207379168306) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) | (part['SIZE'] > 17) & (part['P_NAME'] != 'p') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1'])) | (part['BRAND'] == 'Brand#42') | (part['RETAILPRICE'] > 979.4272928487013) & (part['PT_COMMENT'].str.startswith('x'))]

part[(part['RETAILPRICE'] == 919.1580915186042) | (part['CONTAINER'] != 'WRAP') | (part['MFGR'] != 'Manufacturer#3')].groupby(by=['P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 963.8507881359245) & (part['P_NAME'].str.startswith('a')) & (part['BRAND'] != 'Brand#33')][['TYPE', 'MFGR', 'PT_COMMENT']]

part[(part['SIZE'] <= 26)][['CONTAINER']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[(part['SIZE'] <= 34) & (part['TYPE'] != 'M') | (part['PT_COMMENT'] != 'y') | (part['SIZE'] >= 30) & (part['BRAND'] != 'Brand#54') & (part['TYPE'] == 'SMA') & (part['SIZE'] == 34) | (part['P_NAME'].str.startswith('h'))]

part[(part['SIZE'] > 40) & (part['TYPE'] != 'E')].groupby(by=['CONTAINER', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['SIZE'] > 47) | (part['MFGR'] == 'Manufacturer#3') | (part['SIZE'] != 4) | (part['BRAND'] == 'Brand#45')].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'E') | (part['RETAILPRICE'] != 930.5263094228752) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) & (part['MFGR'] == 'Manufacturer#5')][['P_PARTKEY', 'CONTAINER']]

part[(part['TYPE'] != 'L') & (part['SIZE'] < 38) | (part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'].str.startswith('t')) & (part['TYPE'].str.startswith('M')) | (part['P_NAME'] != 'cor') | (part['TYPE'] != 'L') & (part['PT_COMMENT'].str.startswith('w'))]

part[(part['TYPE'] != 'L')][['BRAND']].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'M') & (part['PT_COMMENT'] != 'g') | (part['P_NAME'].str.startswith('k')) | (part['PT_COMMENT'] != ' fi') & (part['RETAILPRICE'] != 948.9608719768469) | (part['CONTAINER'] != 'LG') & (part['MFGR'] == 'Manufacturer#2') | (part['TYPE'] == 'E')]

part[(part['TYPE'] != 'STA') | (part['P_PARTKEY'] <= 166) & (part['PT_COMMENT'] == 'g') | (part['BRAND'].isin(['Brand#23', 'Brand#44', 'Brand#11', 'Brand#31', 'Brand#43', 'Brand#42', 'Brand#14', 'Brand#55', 'Brand#21', 'Brand#35', 'Brand#12', 'Brand#54', 'Brand#25', 'Brand#41']))].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['TYPE'] == 'M') & (part['P_PARTKEY'] <= 6) & (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] <= 185) & (part['MFGR'].isin(['Manufacturer#5'])) & (part['P_NAME'].str.startswith('blu')) & (part['BRAND'] == 'Brand#45') & (part['TYPE'] != 'E')]

part[(part['TYPE'].str.startswith('P'))][['SIZE', 'P_NAME', 'CONTAINER', 'TYPE', 'PT_COMMENT']]

part[['CONTAINER', 'BRAND', 'SIZE']].groupby(by=['CONTAINER', 'BRAND']).agg('sum', numeric_only=True)

part[['CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']]

part[['MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[['MFGR', 'TYPE', 'PT_COMMENT', 'P_NAME']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE']]

part[['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'TYPE', 'SIZE', 'P_PARTKEY']]

part[['P_NAME', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE', 'SIZE', 'MFGR', 'BRAND', 'PT_COMMENT']]

part[['SIZE', 'BRAND', 'PT_COMMENT']].groupby(by=['SIZE', 'BRAND']).agg('min', numeric_only=True)

part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'TYPE', 'RETAILPRICE']]

part[['TYPE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME', 'BRAND', 'RETAILPRICE', 'SIZE']]

part[['TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']]

part[['TYPE', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['TYPE', 'SIZE', 'P_NAME', 'BRAND']].groupby(by=['P_NAME']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'BRAND']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE']).agg('count')

partsupp.merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['RETAILPRICE'] <= 1054.4839473479612) & (part['P_NAME'].str.startswith('bis')) | (part['RETAILPRICE'] >= 1003.2215513542285) | (part['P_NAME'] != 'a')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] == 'l') | (part['BRAND'].isin(['Brand#35', 'Brand#45', 'Brand#44', 'Brand#51', 'Brand#41', 'Brand#43', 'Brand#34', 'Brand#23', 'Brand#22', 'Brand#15', 'Brand#53', 'Brand#13', 'Brand#14', 'Brand#21', 'Brand#33', 'Brand#24', 'Brand#12', 'Brand#42', 'Brand#32', 'Brand#52', 'Brand#55', 'Brand#25', 'Brand#11', 'Brand#54', 'Brand#31'])) & (part['SIZE'] >= 11) | (part['P_NAME'] != 'd') | (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] <= 80) & (part['CONTAINER'].str.startswith('LG')) & (part['CONTAINER'] == 'LG') & (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] == 1022.9711902728991)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] > 9) | (supplier['S_ADDRESS'] != 'M') | (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 5306) | (partsupp['AVAILQTY'] > 2368) | (partsupp['AVAILQTY'] >= 3884) | (partsupp['SUPPLYCOST'] <= 468.66218427922973)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 9161) & (partsupp['PS_PARTKEY'] != 39) | (partsupp['PS_SUPPKEY'] > 6617) | (partsupp['PS_SUPPKEY'] > 142)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 7280)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[(partsupp['AVAILQTY'] <= 9147) & (partsupp['SUPPLYCOST'] < 449.7472054214141) & (partsupp['SUPPLYCOST'] >= 772.8202000119479) & (partsupp['PS_PARTKEY'] != 12)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 7955) & (partsupp['PS_SUPPKEY'] > 2385)].groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 1937)].groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 2156)].merge(supplier[(supplier['S_PHONE'] == '2') & (supplier['S_NAME'] == 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 34) & (partsupp['PS_SUPPKEY'] >= 2612)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] != 6) & (partsupp['SUPPLYCOST'] < 962.9522973108944) & (partsupp['SUPPLYCOST'] <= 697.8669085621505)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] >= 34) & (partsupp['PS_PARTKEY'] == 31) | (partsupp['SUPPLYCOST'] != 294.07155973737304) & (partsupp['SUPPLYCOST'] == 462.68932230269724) | (partsupp['AVAILQTY'] <= 3759)][['P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] >= 45) | (partsupp['SUPPLYCOST'] < 395.1446582829389) | (partsupp['PS_PARTKEY'] > 16) | (partsupp['PS_SUPPKEY'] == 1408)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] != 1922) | (partsupp['PS_SUPPKEY'] == 1389) & (partsupp['PS_PARTKEY'] != 46) | (partsupp['PS_PARTKEY'] >= 49) & (partsupp['P_COMMENT'] == 'c')][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] >= 3792)].merge(supplier[(supplier['S_COMMENT'] == 'al ') | (supplier['S_NATIONKEY'] == 0)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'b')][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'] != 'l') & (partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['AVAILQTY'] == 7370)][['AVAILQTY', 'P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != 'o') & (partsupp['PS_PARTKEY'] >= 49) | (partsupp['SUPPLYCOST'] >= 705.0976877018968) | (partsupp['PS_PARTKEY'] < 49)][['PS_PARTKEY', 'SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'] == 'i') & (partsupp['PS_SUPPKEY'] == 7291) | (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['SUPPLYCOST'] >= 561.8281468039489)][['P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['P_COMMENT'] == 'r') | (partsupp['P_COMMENT'] != 'ly ') & (partsupp['AVAILQTY'] == 1392) | (partsupp['PS_SUPPKEY'] < 473)][['PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'] == 'v') | (partsupp['PS_SUPPKEY'] <= 4730) & (partsupp['PS_SUPPKEY'] == 6874)].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['SUPPLYCOST'] < 465.47859152068906) | (partsupp['P_COMMENT'] == 'ly ') & (partsupp['SUPPLYCOST'] == 264.95305250114455)].groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 485.84248867737523) & (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_PARTKEY'] != 25) | (partsupp['SUPPLYCOST'] > 848.8867018007504) & (partsupp['P_COMMENT'] != 'the')][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] > 739.39070686236) | (partsupp['PS_SUPPKEY'] == 5881) | (partsupp['SUPPLYCOST'] != 481.5303584606487)].groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('count')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] != 17)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'h')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] < 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'AFR')].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'ASI')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] != 3) & (region['R_NAME'] != 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'A')][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] == 'ASI')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] > 2)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] != 'h')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'l')].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'g')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 3)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) & (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] < 2)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'AFR')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'AME')].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'l')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] == 'A') & (region['R_NAME'] != 'ASI')].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'E') & (region['R_NAME'] != 'AFR')].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'a')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'y')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('I'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_COMMENT'] != 'p')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] != 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 13)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 17) | (nation['N_NAME'] != 'B')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] == 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 3003.8863886826093)].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 5527.475249297195) & (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'] != 'F') | (supplier['S_SUPPKEY'] > 169)][['S_SUPPKEY', 'S_COMMENT']]

supplier[(supplier['S_ADDRESS'] != '3')].groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'k') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '2') | (supplier['S_ACCTBAL'] != 6868.802360976889) | (supplier['S_NATIONKEY'] != 18)][['S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'] == 'y') & (supplier['S_SUPPKEY'] <= 82) | (supplier['S_COMMENT'] != 'k')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'].str.startswith('z')) & (supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] == 'l') & (supplier['S_SUPPKEY'] <= 189) | (supplier['S_PHONE'] != '14-')][['S_NAME']]

supplier[(supplier['S_COMMENT'] != 'c')][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_COMMENT'] == 's')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 184) | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_PHONE'] == '32-')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_ACCTBAL'] == 9893.117726401584) | (supplier['S_SUPPKEY'] == 140) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != -354.3769027827966)][['S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] < 10)].groupby(by=['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 1)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 4)][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_PHONE'] == '14-')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-')][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'] != '32-') | (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_COMMENT'] != 'q') & (supplier['S_ACCTBAL'] <= 3347.5045249381583)][['S_PHONE']]

supplier[(supplier['S_SUPPKEY'] < 144)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[(supplier['S_SUPPKEY'] <= 58) | (supplier['S_NATIONKEY'] <= 23) & (supplier['S_ADDRESS'] != 'N') & (supplier['S_COMMENT'] == 'es ') | (supplier['S_ADDRESS'] != '4')][['S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_PHONE']].groupby(by=['S_NAME', 'S_PHONE']).agg('count')

supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'ASI') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'AME') & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] <= 5) & (nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] >= 12) | (nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] > 8) & (nation['N_NATIONKEY'] < 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] == 's') & (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 10) & (nation['N_COMMENT'] != ' ')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 1104.2101507583945) & (customer['C_ADDRESS'].str.startswith('f')) | (customer['C_ADDRESS'] == 'q') | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_ADDRESS'] == 'Y') & (customer['C_ACCTBAL'] >= 6702.647353937618)][['C_ADDRESS']]

customer[(customer['C_ACCTBAL'] >= 8612.680467114134)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == '3')].groupby(by=['C_COMMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('9')) & (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] == 3506.2211498948045) & (customer['C_NAME'].str.startswith('C'))].groupby(by=['C_ACCTBAL', 'C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] != '.')][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'g') & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] == 'q') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] < 55) | (customer['C_ADDRESS'] == 'o')][['MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'c')][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']]

customer[(customer['C_COMMENT'].str.startswith('a')) & (customer['C_NAME'] == 'C')].groupby(by=['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 11) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 5055.545982525372) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_NATIONKEY'] <= 7)][['C_COMMENT']]

customer[(customer['C_NATIONKEY'] > 2)][['C_ACCTBAL', 'C_NAME']].groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'BUILDING'])) & (customer['C_CUSTKEY'] <= 17) & (customer['C_ADDRESS'] == 'R')][['C_COMMENT', 'C_NAME', 'C_PHONE', 'MKTSEGMENT']]

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) | (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] <= 4394.141555523532) | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ADDRESS'] != 'P') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['MKTSEGMENT']]

customer[['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_PHONE']).agg('count')

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_ADDRESS']).agg('min', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'P')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'CLERK']).agg('count')

lineitem.merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['TYPE'].str.startswith('M')) | (part['P_NAME'] != 'i') | (part['RETAILPRICE'] > 998.6409442795887)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 5346) & (partsupp['AVAILQTY'] >= 4336) & (partsupp['P_COMMENT'] == 'h')].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 15) | (partsupp['P_COMMENT'] != 'j') & (partsupp['PS_PARTKEY'] > 41)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 3001) & (partsupp['PS_PARTKEY'] >= 48)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'j')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('count')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['EXTENDEDPRICE'] != 22925.90014450933) | (lineitem['SHIPINSTRUCT'] == 'NONE')].groupby(by=['LINESTATUS', 'RECEIPTDATE', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 1) & (lineitem['L_COMMENT'].str.startswith('l'))][['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['DISCOUNT'] != 0.016277531853480187) | (lineitem['L_COMMENT'] == '-') | (lineitem['SHIPMODE'].isin(['SHIP', 'TRUCK'])) & (lineitem['TAX'] == 0.0013919317515944307) | (lineitem['L_ORDERKEY'] > 143)][['SHIPMODE']]

lineitem[(lineitem['L_ORDERKEY'] <= 189) | (lineitem['EXTENDEDPRICE'] >= 85361.72943384484) & (lineitem['SHIPMODE'] != 'MAIL')].groupby(by=['DISCOUNT', 'SHIPINSTRUCT', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 86893) | (lineitem['L_PARTKEY'] <= 58083)].groupby(by=['SHIPDATE', 'L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] >= 8714) | (lineitem['DISCOUNT'] > 0.0035703705946629975) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['TAX'] <= 0.0649853996778395) & (lineitem['L_COMMENT'] != 'lit') & (lineitem['SHIPMODE'].isin(['FOB', 'REG AIR', 'SHIP', 'MAIL', 'AIR', 'RAIL']))][['LINESTATUS']]

lineitem[(lineitem['QUANTITY'] < 33) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['LINESTATUS'] != 'F') | (lineitem['DISCOUNT'] != 0.05111912837798996) & (lineitem['L_PARTKEY'] > 8874)][['COMMITDATE', 'RECEIPTDATE']]

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['EXTENDEDPRICE'] <= 16443.311131843584) & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['QUANTITY'] < 36) & (lineitem['LINENUMBER'] != 6) | (lineitem['TAX'] < 0.023740543295419327)][['COMMITDATE']]

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'N']))][['RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'TAX', 'DISCOUNT']]

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'FOB'])) | (lineitem['TAX'] < 0.051573175537538846)][['L_COMMENT']].groupby(by=['L_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] < 0.07038412093504365) & (lineitem['TAX'] == 0.06015643577010769) | (lineitem['TAX'] == 0.032581071790942905) | (lineitem['LINESTATUS'] != 'O') | (lineitem['L_PARTKEY'] > 76397) & (lineitem['L_COMMENT'] == 'g') & (lineitem['TAX'] > 0.03865002868106181) & (lineitem['L_PARTKEY'] > 110374) | (lineitem['DISCOUNT'] >= 0.05156737375721644)]

lineitem[(lineitem['TAX'] <= 0.03457654750096471) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].groupby(by=['SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'DISCOUNT']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']].groupby(by=['COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'COMMITDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'COMMITDATE', 'L_COMMENT', 'RETURNFLAG', 'TAX']].groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'SHIPMODE', 'LINENUMBER', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'COMMITDATE']]

lineitem[['QUANTITY', 'SHIPDATE', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER']].groupby(by=['L_COMMENT']).agg('count')

lineitem[['RETURNFLAG', 'SHIPMODE', 'L_SUPPKEY', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[['SHIPDATE', 'L_ORDERKEY', 'LINENUMBER']].groupby(by=['L_ORDERKEY', 'SHIPDATE', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'DISCOUNT', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG']]

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'E') | (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'l')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'] != 'l') & (nation['N_NAME'] == 'K')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c') & (nation['N_NAME'].str.startswith('G'))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] == 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] <= 20)].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 23)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] > 2)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] == 'u')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] == 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] != 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_NAME'] == 'J')].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith(' '))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] >= 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('K'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] >= 11) & (nation['N_NAME'] == 'J')].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 3) | (nation['N_NATIONKEY'] != 13)].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 13)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 21) | (nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 4) & (nation['N_COMMENT'].str.startswith('v'))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 15) | (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_COMMENT'] == ' ')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'].str.startswith('i'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'].str.startswith('V'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] <= 20) & (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'S') & (nation['N_NATIONKEY'] > 14)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] != 3)].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] == 'h') | (nation['N_NAME'] == 'S') & (nation['N_NATIONKEY'] <= 8)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] >= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'S')].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']).agg('count')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] <= 8)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] == 3871.1782836726097)].merge(nation[(nation['N_NATIONKEY'] != 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('u')) | (customer['C_CUSTKEY'] > 75) | (customer['C_PHONE'] == '22-') | (customer['C_NATIONKEY'] > 0) | (customer['C_CUSTKEY'] != 88) & (customer['C_PHONE'].str.startswith('3'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'e') & (customer['C_ACCTBAL'] >= -484.2425847002008) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] != 8295.366169361141) | (customer['C_PHONE'] == '2') & (customer['MKTSEGMENT'] != 'BUILDING')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'n') & (customer['C_COMMENT'] != '.') | (customer['C_ADDRESS'].str.startswith('q'))][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'q') | (customer['C_ACCTBAL'] >= 8850.464985858642)][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY'])) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'w') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('q')) | (customer['C_CUSTKEY'] != 9)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'f') & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] != 97120) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] <= 59337)][['ORDERPRIORITY']]

orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] < 244416.67078014874) | (orders['SHIPPRIORITY'] == 0)][['TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] == 28880) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('egu')) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] == 47446)]

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['TOTALPRICE'] != 9092.001370111706) & (orders['ORDERSTATUS'] != 'P')][['CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_CUSTKEY'] > 24837)][['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] == 97721.64386828871)]

orders[(orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))].merge(customer[(customer['C_COMMENT'] == 'u')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '5-LOW', '1-URGENT'])) | (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] == 71430.2277641526) & (orders['O_ORDERKEY'] > 539) & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 103464)][['O_ORDERKEY']]

orders[(orders['ORDERSTATUS'] != 'F') | (orders['TOTALPRICE'] > 237785.34086953857)][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O')][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['O']))][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'k') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] != 0)][['CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[(orders['O_COMMENT'].str.startswith('c')) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_ORDERKEY'] <= 458) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] != 75930) & (orders['ORDERPRIORITY'] != '5-LOW')]

orders[(orders['O_COMMENT'].str.startswith('k')) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] == 'j') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] != 130437)][['O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] != 54651) | (orders['O_ORDERKEY'] != 167) | (orders['O_CUSTKEY'] != 117391) & (orders['O_ORDERKEY'] != 327) | (orders['ORDERDATE'] == '1992-01-13')][['ORDERDATE', 'SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] == 32998) & (orders['O_CUSTKEY'] == 96490) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'CLERK']]

orders[(orders['O_CUSTKEY'] >= 120935) | (orders['O_ORDERKEY'] <= 89) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] != 'uri') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != ' ') & (orders['SHIPPRIORITY'] <= 0)]

orders[(orders['O_ORDERKEY'] <= 563) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH'])) & (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] >= 662)][['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] > 128) | (orders['O_CUSTKEY'] > 61932) & (orders['O_COMMENT'] == 's') | (orders['O_CUSTKEY'] <= 65970) | (orders['SHIPPRIORITY'] >= 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 796)][['ORDERPRIORITY', 'O_COMMENT']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] >= 0)][['SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != 't') | (orders['ORDERSTATUS'] != 'O') & (orders['O_CUSTKEY'] > 109102) & (orders['O_CUSTKEY'] == 135934) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 'uri') | (orders['ORDERDATE'] <= '1998-07-21')]

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] <= 62737.51772742263) & (orders['O_COMMENT'] != 'x') | (orders['TOTALPRICE'] != 112740.08565415583)][['ORDERDATE']]

orders[(orders['TOTALPRICE'] > 239318.6563090668)][['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']]

orders[['CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['CLERK', 'O_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'ORDERSTATUS']].groupby(by=['CLERK', 'ORDERSTATUS', 'ORDERDATE']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']]

orders[['O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY']].groupby(by=['O_COMMENT']).agg('count')

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['O_CUSTKEY', 'TOTALPRICE']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']]

orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#13') | (part['PT_COMMENT'] == 'the')][['MFGR', 'BRAND', 'TYPE', 'SIZE', 'CONTAINER']]

part[(part['BRAND'] != 'Brand#23') & (part['SIZE'] != 4) & (part['SIZE'] <= 39)].groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#54') | (part['P_NAME'] == 'a') & (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'] != 'r')].groupby(by=['P_NAME', 'BRAND']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') | (part['RETAILPRICE'] > 988.2828318160267) | (part['CONTAINER'] != 'SM') | (part['SIZE'] != 3) & (part['CONTAINER'] != 'JUMBO') & (part['P_NAME'] != 'b') & (part['P_NAME'] == 'n') & (part['TYPE'] != 'SMA') | (part['MFGR'] != 'Manufacturer#3')]

part[(part['BRAND'] == 'Brand#34') & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'].isin(['Brand#42', 'Brand#23', 'Brand#52', 'Brand#24', 'Brand#51', 'Brand#45', 'Brand#33', 'Brand#25', 'Brand#32', 'Brand#31', 'Brand#41', 'Brand#14', 'Brand#11', 'Brand#55', 'Brand#53'])) & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'S') & (part['MFGR'] != 'Manufacturer#1')]

part[(part['BRAND'] == 'Brand#43') & (part['TYPE'] == 'STA') | (part['BRAND'] == 'Brand#24')].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#32', 'Brand#45', 'Brand#52', 'Brand#54', 'Brand#13', 'Brand#35', 'Brand#44', 'Brand#51', 'Brand#12', 'Brand#25', 'Brand#24', 'Brand#23', 'Brand#43', 'Brand#55', 'Brand#41', 'Brand#15', 'Brand#22', 'Brand#21', 'Brand#34', 'Brand#11', 'Brand#14', 'Brand#42', 'Brand#31'])) | (part['P_PARTKEY'] < 99) & (part['PT_COMMENT'] != 'kag') | (part['RETAILPRICE'] == 985.5302586575584) & (part['P_NAME'].str.startswith('l')) & (part['P_PARTKEY'] >= 142) | (part['BRAND'].isin(['Brand#51', 'Brand#35', 'Brand#13', 'Brand#34', 'Brand#31', 'Brand#42', 'Brand#22', 'Brand#52', 'Brand#44'])) | (part['BRAND'] != 'Brand#23') & (part['BRAND'] != 'Brand#21')]

part[(part['CONTAINER'] != 'LG')].groupby(by=['MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME']).agg('count')

part[(part['CONTAINER'] != 'WRAP') | (part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'] != ' ')].groupby(by=['P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'LG') & (part['TYPE'] == 'M') | (part['P_PARTKEY'] != 186) & (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] <= 932.176768064123) & (part['TYPE'] == 'S') & (part['PT_COMMENT'].str.startswith('t')) | (part['P_PARTKEY'] <= 73)]

part[(part['CONTAINER'] == 'SM')][['P_NAME', 'CONTAINER']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] > 5) | (part['TYPE'].str.startswith('P')) & (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'] != 'SM')].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'STA') & (part['P_PARTKEY'] > 127) | (part['P_NAME'] == 'blu') & (part['P_PARTKEY'] <= 177) & (part['P_NAME'] == 's') | (part['PT_COMMENT'] == ' fi') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) | (part['BRAND'] != 'Brand#34')]

part[(part['MFGR'] != 'Manufacturer#3') & (part['RETAILPRICE'] >= 911.3494179286023) & (part['SIZE'] < 12) & (part['CONTAINER'].str.startswith('SM')) & (part['TYPE'] == 'E') & (part['P_PARTKEY'] == 24) & (part['P_PARTKEY'] <= 40) | (part['CONTAINER'] == 'LG') & (part['CONTAINER'] == 'MED')]

part[(part['MFGR'] != 'Manufacturer#3') | (part['P_PARTKEY'] > 107) | (part['TYPE'] != 'E') & (part['BRAND'] != 'Brand#42') | (part['BRAND'] != 'Brand#51') & (part['SIZE'] != 12) & (part['CONTAINER'] == 'WRAP') | (part['BRAND'] != 'Brand#54') & (part['P_NAME'] != 'i')]

part[(part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'] == 'x') | (part['SIZE'] != 46) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4']))][['RETAILPRICE', 'MFGR', 'P_PARTKEY']]

part[(part['MFGR'] != 'Manufacturer#5') & (part['P_NAME'] == 'l')][['SIZE']].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] == 923.5538467139194)][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] <= 1052.312915735597) | (part['TYPE'] == 'M') & (part['BRAND'] != 'Brand#14') | (part['P_NAME'] != 'blu')][['MFGR', 'TYPE']]

part[(part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'h') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5']))].groupby(by=['PT_COMMENT', 'BRAND', 'TYPE']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#3') | (part['BRAND'] == 'Brand#22')][['P_NAME', 'MFGR', 'CONTAINER', 'TYPE', 'PT_COMMENT']]

part[(part['MFGR'] == 'Manufacturer#5')].groupby(by=['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'i') & (part['RETAILPRICE'] <= 973.1601416260181) | (part['TYPE'] != 'S') | (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] == 1009.8244538706924) | (part['BRAND'] != 'Brand#42') | (part['SIZE'] > 30) & (part['CONTAINER'] != 'JUMBO') & (part['P_NAME'].str.startswith('d'))]

part[(part['PT_COMMENT'] == 'ss ') | (part['P_NAME'].str.startswith('r')) & (part['SIZE'] != 21) | (part['MFGR'] == 'Manufacturer#4') | (part['RETAILPRICE'] >= 927.1109417691924) | (part['TYPE'] == 'L') | (part['BRAND'] != 'Brand#44') | (part['P_PARTKEY'] > 81) | (part['RETAILPRICE'] < 917.0982494632665)]

part[(part['PT_COMMENT'].str.startswith('h')) & (part['P_PARTKEY'] > 184) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4'])) & (part['RETAILPRICE'] <= 1034.0495580719892) | (part['TYPE'] != 'S')].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('x')) & (part['SIZE'] >= 45)].groupby(by=['MFGR', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']).agg('count')

part[(part['P_NAME'] != 'l') | (part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#45') & (part['CONTAINER'] == 'WRAP') & (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('r')) & (part['SIZE'] != 3) | (part['PT_COMMENT'] != 'f') & (part['P_PARTKEY'] == 185)]

part[(part['P_NAME'] != 'r') & (part['BRAND'].isin(['Brand#23', 'Brand#32', 'Brand#33', 'Brand#44', 'Brand#22', 'Brand#45', 'Brand#34', 'Brand#24', 'Brand#42', 'Brand#12', 'Brand#51', 'Brand#53', 'Brand#31', 'Brand#14', 'Brand#11', 'Brand#52', 'Brand#21', 'Brand#54', 'Brand#43', 'Brand#55', 'Brand#15', 'Brand#35', 'Brand#13'])) | (part['BRAND'] != 'Brand#41')].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'n') & (part['TYPE'] == 'P') & (part['PT_COMMENT'] != 'y') & (part['BRAND'] == 'Brand#41') | (part['P_PARTKEY'] != 22)].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_NAME'].str.startswith('g')) | (part['MFGR'] != 'Manufacturer#5') & (part['P_PARTKEY'] > 34) | (part['P_NAME'].str.startswith('i')) & (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] == 6) & (part['SIZE'] == 18) | (part['RETAILPRICE'] < 1053.217072776443) & (part['SIZE'] == 32)]

part[(part['P_PARTKEY'] == 140) | (part['PT_COMMENT'] != 'f')][['BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] > 198) | (part['P_NAME'] != 'f') & (part['P_NAME'].str.startswith('r')) | (part['CONTAINER'] == 'LG') | (part['P_NAME'] == 'a') & (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] < 970.0736832011933) | (part['TYPE'] == 'M') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2']))]

part[(part['P_PARTKEY'] >= 3) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3'])) | (part['TYPE'] != 'M') | (part['SIZE'] <= 17) | (part['SIZE'] <= 46) | (part['RETAILPRICE'] < 1054.3723495944614) & (part['P_PARTKEY'] >= 1) | (part['RETAILPRICE'] != 948.9496219144571) & (part['MFGR'] == 'Manufacturer#4')]

part[(part['RETAILPRICE'] < 1082.7201618050892) | (part['RETAILPRICE'] == 924.3680220704777) | (part['SIZE'] < 15) & (part['SIZE'] != 7) & (part['BRAND'].isin(['Brand#44'])) | (part['P_NAME'].str.startswith('i')) | (part['BRAND'] != 'Brand#54') | (part['MFGR'] == 'Manufacturer#4') & (part['BRAND'] != 'Brand#53')]

part[(part['RETAILPRICE'] <= 1052.8282482794352) & (part['TYPE'].str.startswith('STA')) | (part['TYPE'].str.startswith('M')) & (part['BRAND'] != 'Brand#45') & (part['BRAND'].isin(['Brand#23', 'Brand#32', 'Brand#21', 'Brand#43', 'Brand#54', 'Brand#55', 'Brand#12', 'Brand#13', 'Brand#45', 'Brand#24', 'Brand#11', 'Brand#34', 'Brand#25', 'Brand#14', 'Brand#42', 'Brand#35'])) & (part['CONTAINER'] != 'JUMBO') | (part['P_NAME'] == 'm') | (part['RETAILPRICE'] > 1058.5381945716351) & (part['RETAILPRICE'] >= 1052.200777513071)]

part[(part['RETAILPRICE'] <= 922.1793459177767) & (part['PT_COMMENT'].str.startswith('g')) | (part['RETAILPRICE'] <= 1052.139973225883) | (part['P_PARTKEY'] == 97)][['SIZE', 'P_NAME', 'P_PARTKEY']]

part[(part['RETAILPRICE'] <= 927.9539436298444) | (part['SIZE'] < 44)][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] == 1011.3486493523594) | (part['CONTAINER'] != 'LG') & (part['PT_COMMENT'].str.startswith(' fi')) & (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] == 907.4296024917893) & (part['CONTAINER'] == 'SM') & (part['MFGR'] != 'Manufacturer#4') | (part['P_PARTKEY'] == 83) & (part['P_NAME'] != 'i')]

part[(part['RETAILPRICE'] > 1009.6194476513022) & (part['RETAILPRICE'] < 1031.513103004912) | (part['P_PARTKEY'] != 139)].groupby(by=['BRAND', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 12) | (part['TYPE'] != 'M') | (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] < 1035.213222421633) | (part['P_PARTKEY'] > 163) | (part['P_NAME'].str.startswith('o')) & (part['P_NAME'] == 'a') | (part['P_PARTKEY'] < 140) | (part['P_NAME'] == 'f')]

part[(part['SIZE'] <= 14) | (part['SIZE'] > 17) & (part['RETAILPRICE'] == 915.5830418619377) | (part['BRAND'] != 'Brand#21') & (part['CONTAINER'] != 'WRAP') & (part['CONTAINER'] != 'LG') | (part['BRAND'].isin(['Brand#52', 'Brand#24', 'Brand#31', 'Brand#35', 'Brand#11', 'Brand#55'])) & (part['P_NAME'] == 'h') & (part['RETAILPRICE'] >= 901.7165536683132)]

part[(part['TYPE'] != 'S') & (part['P_NAME'] == 'f') | (part['BRAND'].isin(['Brand#41', 'Brand#45', 'Brand#21', 'Brand#43', 'Brand#35', 'Brand#23', 'Brand#51', 'Brand#32', 'Brand#11', 'Brand#14', 'Brand#12', 'Brand#22', 'Brand#34', 'Brand#24', 'Brand#52', 'Brand#33', 'Brand#25', 'Brand#53', 'Brand#13', 'Brand#54', 'Brand#44', 'Brand#15'])) | (part['TYPE'] != 'L')][['BRAND', 'SIZE', 'P_PARTKEY']]

part[(part['TYPE'] != 'S') | (part['P_PARTKEY'] >= 116) | (part['P_NAME'].str.startswith('a')) | (part['SIZE'] <= 34) & (part['BRAND'].isin(['Brand#11', 'Brand#35', 'Brand#15', 'Brand#13', 'Brand#53', 'Brand#25', 'Brand#34', 'Brand#33', 'Brand#55', 'Brand#44', 'Brand#22', 'Brand#23', 'Brand#32', 'Brand#12', 'Brand#14', 'Brand#21', 'Brand#54', 'Brand#42', 'Brand#24', 'Brand#45', 'Brand#43'])) & (part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'] == 'SM') & (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] < 135)]

part[(part['TYPE'] != 'SMA')].groupby(by=['PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('P')) | (part['RETAILPRICE'] >= 965.1325074675) | (part['BRAND'] != 'Brand#21') | (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'].str.startswith('blu')) & (part['PT_COMMENT'].str.startswith(' ')) & (part['P_NAME'] == 'lem') | (part['BRAND'] == 'Brand#34') | (part['P_NAME'] == 'n')]

part[(part['TYPE'].str.startswith('S')) & (part['CONTAINER'] != 'WRAP') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) | (part['P_NAME'].str.startswith('c')) | (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[['BRAND', 'CONTAINER', 'P_NAME']].groupby(by=['CONTAINER', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part[['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'P_NAME']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']]

part[['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[['MFGR', 'CONTAINER', 'TYPE']].groupby(by=['MFGR', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[['MFGR', 'P_NAME', 'P_PARTKEY', 'TYPE']].groupby(by=['P_NAME', 'MFGR']).agg('sum', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'TYPE']].groupby(by=['MFGR', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['PT_COMMENT', 'TYPE', 'CONTAINER']).agg('count')

part[['PT_COMMENT', 'MFGR', 'TYPE', 'P_NAME', 'CONTAINER']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']]

part[['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'MFGR', 'TYPE']]

part[['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE']]

part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']].groupby(by=['BRAND', 'P_NAME']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[['RETAILPRICE', 'CONTAINER', 'P_NAME']].groupby(by=['CONTAINER', 'P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'P_NAME', 'MFGR', 'CONTAINER']].groupby(by=['P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'P_PARTKEY', 'TYPE']].groupby(by=['PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[['SIZE', 'P_NAME', 'CONTAINER', 'MFGR', 'BRAND']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']]

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']]

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']]

part[['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']]

part[['SIZE', 'RETAILPRICE', 'MFGR']].groupby(by=['MFGR', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']]

part[['TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME', 'BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != 'kag')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] != 'd') | (part['P_NAME'] != 'b') | (part['RETAILPRICE'] <= 997.2716256673764) & (part['P_PARTKEY'] >= 195) & (part['PT_COMMENT'] == 'i') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'].str.startswith('k')) | (part['PT_COMMENT'] != 'h') | (part['SIZE'] > 20) & (part['TYPE'] == 'E') & (part['TYPE'] == 'P') & (part['P_PARTKEY'] <= 80)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] > 131) & (part['MFGR'] == 'Manufacturer#2')][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'M') & (part['RETAILPRICE'] > 937.4597783152103) & (part['BRAND'] != 'Brand#42') & (part['CONTAINER'] == 'MED') | (part['PT_COMMENT'].str.startswith('i')) | (part['BRAND'].isin(['Brand#31', 'Brand#55', 'Brand#35', 'Brand#52', 'Brand#13', 'Brand#24', 'Brand#22', 'Brand#11', 'Brand#25', 'Brand#42', 'Brand#23', 'Brand#34', 'Brand#54']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('L')) | (part['BRAND'] != 'Brand#33') | (part['P_PARTKEY'] <= 75) & (part['PT_COMMENT'].str.startswith('a')) | (part['BRAND'] == 'Brand#22') | (part['PT_COMMENT'].str.startswith('r'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 7295.081011193474) & (supplier['S_SUPPKEY'] >= 113) | (supplier['S_ACCTBAL'] == 7911.071580210354) | (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_PHONE'] != '28-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 20) & (supplier['S_PHONE'].str.startswith('28-'))][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 7320) | (partsupp['P_COMMENT'] == 's')][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[(partsupp['AVAILQTY'] != 8394)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 8740) | (partsupp['PS_PARTKEY'] >= 16)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 8894) & (partsupp['SUPPLYCOST'] >= 472.88884023218264) | (partsupp['AVAILQTY'] >= 1824) | (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_PARTKEY'] >= 25)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 5556)][['PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 7) | (partsupp['P_COMMENT'] == ';')][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 3) & (partsupp['PS_PARTKEY'] > 11) | (partsupp['SUPPLYCOST'] > 989.550249150525) & (partsupp['AVAILQTY'] != 206) & (partsupp['P_COMMENT'] == 'y')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 18) | (partsupp['SUPPLYCOST'] >= 480.4402403610655)].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 25) | (partsupp['SUPPLYCOST'] <= 555.2914131076194)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 40)].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 13) | (partsupp['AVAILQTY'] >= 5169)].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5475)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5988) & (partsupp['AVAILQTY'] <= 5176) & (partsupp['SUPPLYCOST'] > 245.78045400143077) & (partsupp['PS_SUPPKEY'] < 2705) & (partsupp['SUPPLYCOST'] < 893.3045752791427)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 7138) | (partsupp['AVAILQTY'] == 5801)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 3462) | (partsupp['SUPPLYCOST'] <= 665.4680423917691)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 4828) & (partsupp['AVAILQTY'] > 8318) | (partsupp['PS_PARTKEY'] == 13)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[(partsupp['PS_SUPPKEY'] == 5254)].merge(part[['SIZE', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6108)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 3521)].groupby(by=['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 6822) | (partsupp['AVAILQTY'] > 4752) & (partsupp['AVAILQTY'] > 8316) | (partsupp['AVAILQTY'] >= 5497)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'] != 'f') | (partsupp['AVAILQTY'] > 9568) & (partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] <= 3595)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != 'g') | (partsupp['PS_SUPPKEY'] != 1492) & (partsupp['PS_SUPPKEY'] >= 7258) | (partsupp['SUPPLYCOST'] != 224.43907366928252)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['P_COMMENT'] != 'k')][['PS_PARTKEY', 'P_COMMENT']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'c') & (partsupp['P_COMMENT'] != '.') | (partsupp['PS_PARTKEY'] < 33) | (partsupp['PS_SUPPKEY'] > 3622) & (partsupp['AVAILQTY'] >= 6593)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'u') | (partsupp['PS_PARTKEY'] > 42) & (partsupp['PS_SUPPKEY'] >= 1433) & (partsupp['PS_SUPPKEY'] != 1767) | (partsupp['AVAILQTY'] != 5149)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['P_COMMENT'] == 'n') | (partsupp['SUPPLYCOST'] >= 160.232381748196) | (partsupp['SUPPLYCOST'] >= 497.4003398225714) & (partsupp['PS_PARTKEY'] >= 19)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('v')) | (partsupp['SUPPLYCOST'] <= 721.174520802314)].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['AVAILQTY'] >= 596) & (partsupp['SUPPLYCOST'] < 445.5193595295582) & (partsupp['P_COMMENT'] == 'l') & (partsupp['PS_PARTKEY'] > 34)].groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 732.5783491157507) | (partsupp['PS_SUPPKEY'] >= 3123)][['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 542.9196998749454) | (partsupp['AVAILQTY'] > 906) & (partsupp['PS_SUPPKEY'] > 2389) | (partsupp['P_COMMENT'] != ';') | (partsupp['AVAILQTY'] > 421)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 812.3486225702827) | (partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'].str.startswith('k')) | (partsupp['PS_PARTKEY'] == 23) & (partsupp['AVAILQTY'] < 1854)][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] <= 446.7745795875233) | (partsupp['AVAILQTY'] < 3849)].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 662.4795964684293) & (partsupp['SUPPLYCOST'] >= 788.9687790793333) | (partsupp['SUPPLYCOST'] < 783.4109539689382) | (partsupp['SUPPLYCOST'] != 137.91889229244498) & (partsupp['AVAILQTY'] > 4554)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['SUPPLYCOST'] > 358.5994257775845) & (partsupp['PS_SUPPKEY'] == 2336) & (partsupp['PS_SUPPKEY'] != 1256)].merge(supplier[(supplier['S_COMMENT'].str.startswith('l'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 75.29074682790994)][['SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 235.6603781423967) & (partsupp['AVAILQTY'] >= 8741)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('count')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('STA')) & (part['SIZE'] >= 46)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'u')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] >= 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'h')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 1)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] == 3)][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'g')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 1)].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] <= 3) | (region['R_NAME'] == 'AFR')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] != 'ASI')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'ASI')][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') & (region['R_NAME'] != 'AME')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'E')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'A')].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('E'))][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] == 'h')][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] < 3)][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'E')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'A')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] == 'h')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] != 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] >= 1)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] != 'A')][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] >= 0)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'ASI')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'M')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] >= 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] < 1) & (nation['N_NAME'] != 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 12)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 7966.249928046283) & (supplier['S_PHONE'] == '26-')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 2591.4868450486365) | (supplier['S_ACCTBAL'] != 2588.312874273078) | (supplier['S_NATIONKEY'] <= 10) | (supplier['S_SUPPKEY'] >= 25) & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] > 8679.395337350938) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 6338.075329588312)][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] != '7') & (supplier['S_COMMENT'] == 'l') & (supplier['S_ACCTBAL'] == -163.0435012083201) | (supplier['S_PHONE'] == '32-')][['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] == 'T')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'Y') | (supplier['S_NAME'] != 'S')][['S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'c') | (supplier['S_ACCTBAL'] >= 4328.576657227121) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('J'))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'] == 'c')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_PHONE'] != '14-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('F')) | (supplier['S_PHONE'] == '32-')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_COMMENT'] != 'o') & (supplier['S_ADDRESS'] != 'j') & (supplier['S_PHONE'] != '2')].groupby(by=['S_ADDRESS', 'S_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'g') & (supplier['S_SUPPKEY'] < 152) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == '8')][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_COMMENT'] != 'g') & (supplier['S_SUPPKEY'] <= 154) | (supplier['S_ACCTBAL'] <= 3828.72715200348) | (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_PHONE'] == '32-')][['S_COMMENT']]

supplier[(supplier['S_COMMENT'] == 'h') & (supplier['S_ACCTBAL'] == -207.71048155177857)][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_ADDRESS'] == 'e')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 6) | (supplier['S_ADDRESS'].str.startswith('t')) | (supplier['S_ADDRESS'].str.startswith('l')) & (supplier['S_PHONE'].str.startswith('32-'))][['S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 174) | (supplier['S_PHONE'] != '14-') | (supplier['S_SUPPKEY'] < 185)][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] >= 18) & (supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_ACCTBAL'] != 5173.271391965575) & (supplier['S_PHONE'] != '1')].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] == 1343.5186626849684)][['S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] <= 4) | (supplier['S_NATIONKEY'] > 18) | (supplier['S_PHONE'] != '28-')].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 16) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 0) | (supplier['S_NATIONKEY'] <= 9) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_NAME']]

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 3)].groupby(by=['S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] <= 49) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NATIONKEY'] >= 23) & (supplier['S_ACCTBAL'] <= 4767.756889431107) & (supplier['S_SUPPKEY'] >= 103)][['S_ADDRESS']]

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] > 68)][['S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_PHONE', 'S_COMMENT', 'S_ADDRESS']).agg('count')

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 't') & (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'I') | (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] != 'C') | (nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] == 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] < 18)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] != 4) | (nation['N_NATIONKEY'] <= 3)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 21) & (nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] == 14)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 's')].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('t'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 6346.259339755094) | (customer['C_NATIONKEY'] != 2) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] < 0)].groupby(by=['C_COMMENT', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'I') | (customer['C_PHONE'] != '13-') & (customer['C_NAME'] != 'C')][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']]

customer[(customer['C_ADDRESS'] == 'a') | (customer['C_NAME'].str.startswith('C'))].groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('w')) | (customer['C_CUSTKEY'] != 8) | (customer['C_NATIONKEY'] > 10) | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_COMMENT'] != 'u') | (customer['C_ACCTBAL'] < 2271.2787759632374) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] > 6995.045812155101) | (customer['C_PHONE'] != '27-') & (customer['C_ACCTBAL'] == 9081.257110543744)][['C_PHONE']]

customer[(customer['C_CUSTKEY'] == 40) & (customer['C_ACCTBAL'] >= -401.96127121754785) & (customer['C_ADDRESS'].str.startswith('d')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_NATIONKEY'] < 21)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 60) & (customer['C_PHONE'] != '13-') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] <= 86) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] != 8784.426069947785)][['C_ACCTBAL']]

customer[(customer['C_CUSTKEY'] >= 88) | (customer['C_NATIONKEY'] >= 8) | (customer['C_NATIONKEY'] == 16)][['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']]

customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] <= 4312.717833553933) & (customer['C_COMMENT'] == 'q')].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] < 19) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 7) | (nation['N_NATIONKEY'] == 12)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 4) | (customer['C_COMMENT'] == 'd') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE']))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '3') & (customer['C_PHONE'] == '3') | (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '3') | (customer['C_NAME'] == 'C')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] != 94) | (customer['C_CUSTKEY'] > 33) | (customer['C_NATIONKEY'] >= 0) & (customer['C_COMMENT'] == 'i') | (customer['C_CUSTKEY'] < 77) & (customer['C_ADDRESS'] == 'i')][['C_PHONE']]

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_PHONE'] == '13-')][['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] >= 2361.160161140582)][['C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ACCTBAL']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'BUILDING'])) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_CUSTKEY'] != 55) | (customer['C_PHONE'].str.startswith('2')) | (customer['C_CUSTKEY'] > 11)].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE', 'BUILDING'])) & (customer['C_ACCTBAL'] <= 4250.660553210778) & (customer['C_COMMENT'].str.startswith('a'))][['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']]

customer[['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']].groupby(by=['C_NATIONKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']].groupby(by=['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']].groupby(by=['C_PHONE', 'C_COMMENT', 'C_ADDRESS']).agg('count')

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']].groupby(by=['C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('count')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'b')][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16')].merge(partsupp.merge(part[(part['P_PARTKEY'] < 14)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['LINENUMBER'] < 4) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPMODE'] != 'RAIL')].groupby(by=['L_ORDERKEY', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.012666544201868902) | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['EXTENDEDPRICE'] == 57438.55035932533) & (lineitem['L_ORDERKEY'] < 38) & (lineitem['L_ORDERKEY'] >= 133) & (lineitem['EXTENDEDPRICE'] == 61478.934482276134) | (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] >= 3) | (lineitem['LINENUMBER'] < 6) | (lineitem['L_SUPPKEY'] == 1980)]

lineitem[(lineitem['DISCOUNT'] > 0.023482963560931602)][['L_COMMENT', 'SHIPMODE', 'LINENUMBER', 'RETURNFLAG', 'DISCOUNT', 'RECEIPTDATE', 'QUANTITY']]

lineitem[(lineitem['LINENUMBER'] == 3) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['LINENUMBER'] > 1) & (lineitem['SHIPMODE'].isin(['FOB'])) & (lineitem['LINENUMBER'] >= 2) & (lineitem['DISCOUNT'] != 0.0709582065654074)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] > 4) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['LINENUMBER'] > 3) & (lineitem['SHIPDATE'] != '1992-04-27')].groupby(by=['SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('e')) & (lineitem['QUANTITY'] > 45)][['LINESTATUS', 'SHIPINSTRUCT', 'COMMITDATE', 'SHIPMODE', 'L_ORDERKEY', 'SHIPDATE']]

lineitem[(lineitem['L_ORDERKEY'] != 1) | (lineitem['LINESTATUS'] != 'F') | (lineitem['RETURNFLAG'] != 'R') & (lineitem['LINENUMBER'] <= 3) & (lineitem['L_PARTKEY'] < 32203) | (lineitem['L_PARTKEY'] < 126067) & (lineitem['RECEIPTDATE'] >= '1992-05-02')][['TAX']]

lineitem[(lineitem['L_PARTKEY'] >= 194065) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['L_COMMENT'] != 't') | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['RECEIPTDATE'] > '1992-05-02')][['DISCOUNT', 'SHIPINSTRUCT']]

lineitem[(lineitem['L_SUPPKEY'] <= 2593)][['L_COMMENT', 'SHIPINSTRUCT', 'DISCOUNT']].groupby(by=['DISCOUNT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 7076) & (lineitem['L_ORDERKEY'] < 67)].merge(partsupp[(partsupp['AVAILQTY'] <= 3264) & (partsupp['PS_SUPPKEY'] >= 2097) & (partsupp['SUPPLYCOST'] >= 454.3350179711504)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] > 20) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINENUMBER'] >= 5) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['TAX'] < 0.025870683969969017)][['DISCOUNT', 'SHIPDATE']]

lineitem[(lineitem['RETURNFLAG'] != 'A') | (lineitem['L_PARTKEY'] != 8860) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['L_SUPPKEY'] >= 8838)].groupby(by=['RETURNFLAG', 'SHIPMODE', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'QUANTITY', 'SHIPDATE', 'COMMITDATE', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE', 'DISCOUNT', 'RETURNFLAG']]

lineitem[['LINENUMBER', 'L_COMMENT', 'L_PARTKEY', 'QUANTITY', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE', 'TAX']]

lineitem[['LINESTATUS', 'QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'L_COMMENT', 'TAX', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[['LINESTATUS', 'TAX', 'RECEIPTDATE', 'SHIPINSTRUCT']].groupby(by=['TAX', 'SHIPINSTRUCT', 'LINESTATUS']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'QUANTITY', 'EXTENDEDPRICE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER', 'RECEIPTDATE']].groupby(by=['LINESTATUS', 'LINENUMBER']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'AME') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 2) | (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == ' ') | (nation['N_COMMENT'] == 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'] == 'v') | (nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] != 1)].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] != 19) | (nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] == ' ') | (nation['N_COMMENT'].str.startswith('y'))][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'G')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'K')][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] < 4)][['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_COMMENT'] == 'h') & (nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'] != 'U')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'G')][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] != 6)].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] <= 0)].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] != 6) | (nation['N_COMMENT'] != 't') & (nation['N_NATIONKEY'] != 4)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 23)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_COMMENT'] == 'c') & (nation['N_NAME'] == 'G')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 3)][['N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 3) & (nation['N_NATIONKEY'] >= 14) | (nation['N_NAME'] == 'C')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 5) | (nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 6) | (nation['N_COMMENT'] == 'o') & (nation['N_NAME'] != 'B')].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 17) & (nation['N_NATIONKEY'] == 9)][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 2) | (nation['N_NAME'] != 'E')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 3) & (nation['N_NATIONKEY'] < 5)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] >= 14)][['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'I')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'] != 'u')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 17) | (nation['N_NATIONKEY'] != 2)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'P')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('count')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] < 33) & (orders['ORDERSTATUS'] == 'F') & (orders['O_CUSTKEY'] < 129401)][['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] != 234269.61303292232)][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21')][['O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_ORDERKEY'] == 706) | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] > '1998-07-21') & (orders['O_ORDERKEY'] > 70) | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] == 22790.93196650529)][['SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_ORDERKEY'] > 500)][['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']]

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW'])) & (orders['O_COMMENT'].str.startswith('y')) | (orders['TOTALPRICE'] != 320506.54865444533)].groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'] == 'u')][['ORDERPRIORITY']]

orders[(orders['O_COMMENT'].str.startswith('a')) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] > 126572) & (orders['O_COMMENT'].str.startswith('l')) | (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] > 33167) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] <= '1992-01-13')][['O_ORDERKEY', 'O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[(orders['O_CUSTKEY'] > 50854) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH'])) | (orders['O_COMMENT'] != 'f') & (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith(',')) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] == 306254.0838992329)][['ORDERPRIORITY']]

orders[(orders['O_ORDERKEY'] <= 686) & (orders['O_ORDERKEY'] == 645) & (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] >= 77185) | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'].isin(['P']))].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 131) & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] != 'C')][['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] < 286992.3861923186) & (orders['O_ORDERKEY'] == 676) & (orders['TOTALPRICE'] == 7483.923373297998) | (orders['O_ORDERKEY'] <= 443) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))].groupby(by=['O_COMMENT', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 158144.30532441335) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1992-01-13')][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 43144.38244924836) | (orders['O_ORDERKEY'] != 182) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] < 136359.59959518004) & (orders['CLERK'].str.startswith('C'))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 275416.8192745427) & (orders['O_COMMENT'] != 't') & (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] < 77517) | (orders['O_COMMENT'].str.startswith('s')) | (orders['TOTALPRICE'] > 1203.5992310567128)][['SHIPPRIORITY']]

orders[['ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'CLERK']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']].groupby(by=['TOTALPRICE']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY']].groupby(by=['O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#31')][['RETAILPRICE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'MFGR']]

part[(part['BRAND'] != 'Brand#53') | (part['BRAND'] == 'Brand#13') | (part['SIZE'] >= 23) | (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] != 29)].groupby(by=['RETAILPRICE', 'MFGR']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#24') | (part['RETAILPRICE'] != 965.3936558746101)].groupby(by=['P_PARTKEY', 'TYPE', 'P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#34') & (part['P_PARTKEY'] >= 196) | (part['P_PARTKEY'] > 85) & (part['RETAILPRICE'] < 996.2413123277576) | (part['BRAND'] == 'Brand#44') | (part['TYPE'] == 'L')][['TYPE', 'BRAND']]

part[(part['BRAND'].isin(['Brand#15'])) & (part['RETAILPRICE'] > 1090.6768418054191) & (part['P_PARTKEY'] > 52) & (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'] != 'y') & (part['P_PARTKEY'] >= 191)].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] != 127) & (part['BRAND'] != 'Brand#23') | (part['P_NAME'] != 'blu') | (part['PT_COMMENT'].str.startswith('h'))].groupby(by=['CONTAINER', 'MFGR']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['MFGR'] == 'Manufacturer#3') | (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] > 96) & (part['PT_COMMENT'].str.startswith('k')) & (part['P_NAME'] != 'c')][['P_PARTKEY', 'TYPE']]

part[(part['MFGR'] != 'Manufacturer#3') | (part['BRAND'] != 'Brand#35') & (part['RETAILPRICE'] == 1071.614861669981) | (part['P_PARTKEY'] != 79) & (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4'])) & (part['PT_COMMENT'] == 'u') & (part['SIZE'] >= 24) & (part['SIZE'] <= 43)].groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3'])) & (part['RETAILPRICE'] > 969.0784026477763) | (part['RETAILPRICE'] < 1000.473084370106) | (part['MFGR'] != 'Manufacturer#5')].groupby(by=['BRAND', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] != 'f') & (part['P_PARTKEY'] <= 151)][['RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'f') | (part['CONTAINER'].str.startswith('LG')) & (part['PT_COMMENT'].str.startswith('d')) | (part['RETAILPRICE'] <= 1046.6497279779342) | (part['P_NAME'].str.startswith('blu')) | (part['TYPE'].str.startswith('SMA'))].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] != 'i') | (part['CONTAINER'].str.startswith('WRAP')) & (part['P_PARTKEY'] <= 150) & (part['SIZE'] != 11) | (part['PT_COMMENT'] != 'b')].groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == ' ') | (part['CONTAINER'] != 'WRAP') | (part['P_NAME'].str.startswith('b')) & (part['BRAND'] == 'Brand#51')][['SIZE', 'RETAILPRICE', 'TYPE', 'CONTAINER']]

part[(part['PT_COMMENT'] == 'q') & (part['MFGR'] != 'Manufacturer#3')][['RETAILPRICE', 'SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'MFGR']]

part[(part['PT_COMMENT'] == 's') & (part['P_NAME'] != 'h') | (part['CONTAINER'] != 'JUMBO') | (part['SIZE'] < 27) & (part['P_NAME'] == 'a') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4']))].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'ss ') & (part['MFGR'] != 'Manufacturer#4') | (part['P_PARTKEY'] >= 109) & (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'].str.startswith('ss '))].groupby(by=['SIZE', 'RETAILPRICE']).agg('count')

part[(part['PT_COMMENT'].str.startswith('c')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'].str.startswith('MED'))].groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('e')) | (part['P_PARTKEY'] > 125)][['SIZE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'MFGR', 'BRAND']]

part[(part['PT_COMMENT'].str.startswith('w'))][['SIZE', 'P_PARTKEY']].groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'l')][['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'TYPE', 'RETAILPRICE', 'CONTAINER']]

part[(part['P_NAME'] != 'v')][['SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'TYPE']]

part[(part['P_NAME'] == 'b')][['P_PARTKEY', 'SIZE']].groupby(by=['SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 168) & (part['TYPE'] != 'E')][['P_NAME', 'P_PARTKEY']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] <= 190) | (part['TYPE'] == 'E') & (part['CONTAINER'] == 'WRAP') & (part['SIZE'] <= 29) | (part['TYPE'] != 'STA') & (part['P_PARTKEY'] <= 86)].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] <= 46) | (part['SIZE'] > 18) & (part['P_PARTKEY'] <= 167)].groupby(by=['BRAND', 'P_NAME', 'MFGR', 'TYPE']).agg('count')

part[(part['P_PARTKEY'] == 10) | (part['P_NAME'] == 'v')][['BRAND', 'MFGR']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 92)][['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'MFGR', 'BRAND', 'TYPE']]

part[(part['RETAILPRICE'] != 1066.4402313090661) & (part['P_PARTKEY'] > 86) | (part['BRAND'] == 'Brand#14') | (part['P_NAME'].str.startswith('v')) | (part['BRAND'].isin(['Brand#25', 'Brand#53', 'Brand#24', 'Brand#34', 'Brand#44', 'Brand#54', 'Brand#15', 'Brand#12', 'Brand#11', 'Brand#13', 'Brand#51', 'Brand#55', 'Brand#42', 'Brand#43', 'Brand#31']))].groupby(by=['RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] != 967.5422207397305) | (part['P_PARTKEY'] == 25) & (part['RETAILPRICE'] == 932.2537580734453)][['SIZE']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 1000.8382471056188) | (part['SIZE'] < 18) | (part['P_PARTKEY'] <= 41)][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'TYPE']]

part[(part['RETAILPRICE'] >= 961.3436627448141) & (part['RETAILPRICE'] == 954.8981221910676)].groupby(by=['P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'E')][['TYPE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'L') & (part['TYPE'] != 'L') | (part['P_NAME'] != 'k') & (part['CONTAINER'].str.startswith('MED')) | (part['SIZE'] <= 24) & (part['SIZE'] != 47)][['P_NAME', 'RETAILPRICE']]

part[(part['TYPE'] != 'L') | (part['P_NAME'] != 'y')][['MFGR', 'P_PARTKEY']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[(part['TYPE'] == 'L') | (part['P_PARTKEY'] <= 147) & (part['P_NAME'] == 'l')][['MFGR']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'P') | (part['CONTAINER'] == 'JUMBO') & (part['RETAILPRICE'] == 1065.042098964891) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] == 'Brand#25') & (part['RETAILPRICE'] > 1044.5410096597275)][['SIZE']]

part[['CONTAINER', 'MFGR', 'P_NAME', 'PT_COMMENT']].groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER']).agg('count')

part[['CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'TYPE']).agg('count')

part[['MFGR', 'P_NAME', 'TYPE', 'SIZE', 'CONTAINER']].groupby(by=['SIZE', 'MFGR']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'BRAND']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'BRAND']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'SIZE']].groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'BRAND', 'TYPE']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'MFGR']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[['SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']].groupby(by=['RETAILPRICE', 'BRAND', 'SIZE']).agg('min', numeric_only=True)

part[['TYPE', 'P_NAME', 'CONTAINER', 'MFGR']].groupby(by=['CONTAINER', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'P_NAME', 'CONTAINER', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'P_NAME']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'MFGR', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4'])) & (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != ' fi') | (part['PT_COMMENT'] == 'u')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND']).agg('count')

partsupp.merge(part[(part['SIZE'] == 42) | (part['PT_COMMENT'].str.startswith('c'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('min', numeric_only=True)

partsupp.merge(part[['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(part[['SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'u') | (supplier['S_PHONE'].str.startswith('17-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_SUPPKEY'] != 166) & (supplier['S_ADDRESS'].str.startswith('x')) | (supplier['S_ADDRESS'] != 'O') & (supplier['S_NATIONKEY'] <= 13) & (supplier['S_NATIONKEY'] > 11) | (supplier['S_NATIONKEY'] >= 12)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 13) & (supplier['S_ADDRESS'] == 'k') | (supplier['S_ACCTBAL'] <= 9140.142316334499) & (supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_SUPPKEY'] <= 27) & (supplier['S_NATIONKEY'] < 7)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 194) & (partsupp['SUPPLYCOST'] != 420.6209358117147) & (partsupp['PS_PARTKEY'] != 5) | (partsupp['AVAILQTY'] <= 1328) | (partsupp['SUPPLYCOST'] >= 787.89583131734)].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 8427) & (partsupp['PS_PARTKEY'] < 31)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 8681) & (partsupp['AVAILQTY'] != 7774)][['P_COMMENT', 'AVAILQTY']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 3142) | (partsupp['AVAILQTY'] >= 9137)].groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 7251) | (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['AVAILQTY'] < 6894) | (partsupp['PS_PARTKEY'] == 4)].groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 24) | (partsupp['SUPPLYCOST'] > 388.32397419693655) & (partsupp['PS_SUPPKEY'] == 6598)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] != 25) | (partsupp['PS_PARTKEY'] <= 17) | (partsupp['PS_PARTKEY'] == 38)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 46)].merge(supplier[(supplier['S_ACCTBAL'] > 6159.551858100204)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 12) & (partsupp['AVAILQTY'] == 6555)].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 35) | (partsupp['SUPPLYCOST'] > 325.5833563447873) | (partsupp['P_COMMENT'] == 'q') | (partsupp['PS_PARTKEY'] < 5)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] <= 3402) & (partsupp['PS_SUPPKEY'] == 5126) | (partsupp['PS_PARTKEY'] >= 44)][['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 530) & (partsupp['P_COMMENT'] == 'v') | (partsupp['PS_SUPPKEY'] == 5705)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6568) | (partsupp['AVAILQTY'] < 9704) | (partsupp['P_COMMENT'] != 'c')].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 778)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['PS_PARTKEY'] <= 37) & (partsupp['PS_PARTKEY'] != 35)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['PS_SUPPKEY'] <= 3395)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'u') & (partsupp['P_COMMENT'] != 'are') | (partsupp['SUPPLYCOST'] < 58.341390965528056) | (partsupp['P_COMMENT'].str.startswith('k'))].groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'l')].merge(supplier[(supplier['S_SUPPKEY'] < 165)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['PS_SUPPKEY'] == 5979) & (partsupp['AVAILQTY'] != 7811)].merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_PARTKEY'] == 2) | (partsupp['PS_PARTKEY'] != 11)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['AVAILQTY'] <= 9367) | (partsupp['P_COMMENT'] == 'are') & (partsupp['SUPPLYCOST'] == 903.1554394939786) | (partsupp['AVAILQTY'] < 6754)].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 145.83434474797656)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] >= 165.48265717609002) | (partsupp['SUPPLYCOST'] > 509.52036172828906) & (partsupp['PS_PARTKEY'] <= 1)].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 599.8061346728564) | (partsupp['AVAILQTY'] < 4736)].merge(part[['MFGR', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 926.4138948651625) | (part['PT_COMMENT'].str.startswith('w'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AME')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] > 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] >= 2)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] > 2)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'M') & (region['R_NAME'] != 'AME') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] > 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'AFR')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 2)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] > 0) & (region['R_NAME'].str.startswith('AME'))][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'ASI')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] != 0)][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] <= 4) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] < 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_COMMENT'] == 'h') & (nation['N_NATIONKEY'] != 7) | (nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] <= 11)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('S'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] < 6) | (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'P')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 3823.56965856007) | (supplier['S_ADDRESS'] != 'I') & (supplier['S_NATIONKEY'] >= 1) & (supplier['S_NATIONKEY'] > 14) & (supplier['S_ADDRESS'] == 'n') & (supplier['S_ADDRESS'] == 'x')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 6999.132293651364) & (supplier['S_PHONE'] == '14-') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('!'))][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_ACCTBAL'] == 6605.501055631958) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 5154.907226713259) & (supplier['S_SUPPKEY'] != 144)][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_ACCTBAL'] > 1170.5468800744277) & (supplier['S_PHONE'] == '14-')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_ACCTBAL'] > 7415.759241724317) & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] != 63)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 8679.335150940233) | (supplier['S_ADDRESS'].str.startswith('4')) & (supplier['S_NAME'] == 'S')][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 94.5670644202662) & (supplier['S_ACCTBAL'] > 1088.7555952268224) & (supplier['S_NATIONKEY'] > 6) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] != 'O') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NATIONKEY'] >= 20)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'k') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 6795.785045644575) & (supplier['S_ACCTBAL'] != 937.4758229333199) | (supplier['S_NATIONKEY'] == 18) | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_PHONE'] != '1')][['S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'].str.startswith('W'))][['S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] <= 4)][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'g') | (supplier['S_SUPPKEY'] > 4)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 'h')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'j') | (supplier['S_ADDRESS'] == '2') & (supplier['S_PHONE'].str.startswith('28-'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('x'))][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < -845.3968596196705) | (supplier['S_PHONE'] != '26-') & (supplier['S_SUPPKEY'] < 20) & (supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_ADDRESS'].str.startswith('j'))][['S_COMMENT', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'] != 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ACCTBAL'] <= 9614.230218517165) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 's')].groupby(by=['S_NAME', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 15) | (supplier['S_ACCTBAL'] <= 3882.5754044168516) | (supplier['S_ACCTBAL'] != 3522.486641498922) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'm')].groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'w')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] != 5) & (supplier['S_COMMENT'] != 'the') | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] == 8767.98920223432) | (supplier['S_ACCTBAL'] > 849.0690217183103)][['S_NAME', 'S_COMMENT']]

supplier[(supplier['S_NATIONKEY'] == 13)][['S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2')][['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_PHONE'] != '3') & (supplier['S_SUPPKEY'] != 150)].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 175) & (supplier['S_ADDRESS'] != 'u') & (supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_COMMENT'] == 'es ')][['S_ADDRESS', 'S_NAME', 'S_COMMENT']]

supplier[(supplier['S_SUPPKEY'] <= 179) | (supplier['S_ACCTBAL'] > 3613.9402529947947) & (supplier['S_COMMENT'] != '!') & (supplier['S_COMMENT'] != '!') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_NAME']]

supplier[(supplier['S_SUPPKEY'] <= 18)].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 195) | (supplier['S_ADDRESS'] != 'H') | (supplier['S_COMMENT'] != 'f') | (supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']]

supplier[['S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('count')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] == 'i')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'] != 'G')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'E')].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'E')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_COMMENT'].str.startswith('e'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'P') | (nation['N_COMMENT'] != 'n')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 10) | (nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 17)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] > 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 22) & (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'S')].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 2974.0722669983343) & (customer['C_ACCTBAL'] < 6522.65370785072) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] == 9389.178846231742) & (customer['C_ADDRESS'].str.startswith('q'))][['C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_COMMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['C_ADDRESS'] != 'U') | (customer['C_NATIONKEY'] == 17) & (customer['C_ACCTBAL'] >= 1219.7790922303607) | (customer['C_ACCTBAL'] < 4271.3530041332615)][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'r')][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'P')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('9'))].merge(nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_NATIONKEY'] >= 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'h') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] != '25-') & (customer['C_CUSTKEY'] <= 25)][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']]

customer[(customer['C_COMMENT'] != 'p') & (customer['C_NATIONKEY'] > 4) | (customer['C_COMMENT'] != 'a') | (customer['C_PHONE'] != '25-')][['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 't')][['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'k') | (customer['C_NATIONKEY'] == 22) & (customer['C_NATIONKEY'] < 22) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE']))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('k')) & (customer['C_ACCTBAL'] >= 5779.128421274584) | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('l')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] <= 9708.41115461984) | (customer['C_NATIONKEY'] == 19) | (customer['C_ACCTBAL'] == 4163.582317046488) | (customer['C_COMMENT'] != 'p')].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'] == 'E')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 427.12219487089055) | (customer['C_CUSTKEY'] >= 68) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] > 9686.37679728758)][['MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] != 15)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 3) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']]

customer[(customer['C_PHONE'] == '18-') | (customer['C_ADDRESS'] != ',')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('u'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_NATIONKEY'] <= 4) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 96)][['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']]

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] != 2567.4098786346613) | (customer['C_PHONE'] == '25-') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('U')) | (customer['C_ADDRESS'] != 'K')][['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ACCTBAL'] != 6847.050174187993) | (customer['C_ADDRESS'] == 'v') | (customer['C_NATIONKEY'] == 20) | (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY']]

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_ADDRESS'] != 'j') & (customer['C_ACCTBAL'] <= 5646.141541841948) & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == -738.0390590293723) & (customer['C_NATIONKEY'] > 19)][['C_NAME', 'C_PHONE', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_NATIONKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']].groupby(by=['C_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].groupby(by=['C_NATIONKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_CUSTKEY'] < 81)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('count')

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 21) & (supplier['S_ADDRESS'] == 'L') & (supplier['S_SUPPKEY'] <= 159) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 6169)][['AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 47) & (partsupp['PS_PARTKEY'] == 25) | (partsupp['P_COMMENT'] == ' th') | (partsupp['PS_SUPPKEY'] == 229) & (partsupp['P_COMMENT'] != 'q')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 30) & (partsupp['PS_PARTKEY'] >= 8) & (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['SUPPLYCOST'] < 255.12495834432357) & (partsupp['PS_SUPPKEY'] == 214)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 344.3354734268403) & (partsupp['SUPPLYCOST'] > 779.7027627798718)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 74403.98130088623) & (lineitem['TAX'] >= 0.07416168361615923) & (lineitem['RETURNFLAG'].isin(['R', 'N'])) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_ORDERKEY'] != 105)][['SHIPMODE', 'COMMITDATE', 'DISCOUNT', 'L_COMMENT']]

lineitem[(lineitem['LINENUMBER'] < 3) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'AIR'])) | (lineitem['COMMITDATE'] == '1992-05-15')][['L_COMMENT', 'COMMITDATE', 'RECEIPTDATE', 'LINENUMBER']]

lineitem[(lineitem['L_COMMENT'] != 'v')][['COMMITDATE', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['L_COMMENT', 'RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 22343) | (lineitem['DISCOUNT'] != 0.04005963289339575)][['RETURNFLAG', 'SHIPMODE', 'LINENUMBER', 'TAX', 'L_COMMENT', 'RECEIPTDATE', 'DISCOUNT']]

lineitem[(lineitem['L_PARTKEY'] > 136552)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] > 67813) & (lineitem['TAX'] == 0.01168053932995944) | (lineitem['LINENUMBER'] > 3) | (lineitem['QUANTITY'] > 22) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['TAX'] <= 0.06402783908896534) & (lineitem['L_COMMENT'] != 'j')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] > 93540) | (lineitem['TAX'] == 0.07564402781401067)][['DISCOUNT', 'COMMITDATE', 'LINESTATUS', 'EXTENDEDPRICE', 'TAX', 'L_COMMENT', 'LINENUMBER']]

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['DISCOUNT'] >= 0.001789360677667029) & (lineitem['TAX'] < 0.04667827455078806) | (lineitem['L_COMMENT'] == 'f') | (lineitem['DISCOUNT'] <= 0.0010228443923117614) & (lineitem['SHIPDATE'] < '1998-10-30')][['SHIPINSTRUCT']]

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_SUPPKEY'] == 8534) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['COMMITDATE'] <= '1992-05-15')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 5914) | (partsupp['AVAILQTY'] != 6239)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_COMMENT'] == 'i')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('count')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RETURNFLAG'].isin(['A']))].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['EXTENDEDPRICE'] <= 34999.85537041173) | (lineitem['L_PARTKEY'] != 91419) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_COMMENT'].str.startswith('a'))][['EXTENDEDPRICE', 'L_COMMENT', 'RETURNFLAG']]

lineitem[(lineitem['SHIPMODE'] != 'RAIL') & (lineitem['QUANTITY'] != 3)].merge(partsupp.merge(part[(part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'QUANTITY', 'SHIPMODE']].groupby(by=['COMMITDATE', 'QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'QUANTITY', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE', 'SHIPINSTRUCT', 'LINENUMBER', 'QUANTITY']).agg('count')

lineitem[['LINESTATUS', 'EXTENDEDPRICE', 'COMMITDATE', 'QUANTITY']].groupby(by=['LINESTATUS', 'QUANTITY', 'EXTENDEDPRICE', 'COMMITDATE']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'DISCOUNT', 'QUANTITY', 'LINESTATUS', 'SHIPDATE']].groupby(by=['SHIPMODE', 'LINESTATUS', 'QUANTITY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 's')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y') | (nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] <= 22) & (nation['N_NATIONKEY'] >= 15) & (nation['N_REGIONKEY'] != 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'C') | (nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] != 'p')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] <= 22) & (nation['N_REGIONKEY'] < 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] < 0) & (nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'M') | (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] != 2)].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('R'))][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] != 21)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] == 'E')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'C') | (nation['N_NATIONKEY'] < 6) & (nation['N_NATIONKEY'] <= 17) | (nation['N_NATIONKEY'] >= 16)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] < 2) & (nation['N_REGIONKEY'] >= 0)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] == 16) & (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] == 'J')].groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] > 1) | (nation['N_NATIONKEY'] >= 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] == 'o')][['N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] > 9) | (nation['N_NAME'] == 'E')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] == 11)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] == 21) & (nation['N_REGIONKEY'] != 2)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] != 12) | (nation['N_NATIONKEY'] >= 18) & (nation['N_COMMENT'] == 'h')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NATIONKEY'] < 14) & (nation['N_NAME'] != 'F')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 18) | (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] > 21)][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 2) & (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 21) | (nation['N_NATIONKEY'] == 18)].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 6) & (nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 6)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 21) | (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] < 23) & (nation['N_COMMENT'] != 'o')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 8)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 0) & (nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 13) | (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 10)].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] > 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] != 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] > 7)].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] >= 10) & (nation['N_NAME'] != 'J')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] > 1)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] >= 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1)].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] != 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] != 'F')].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] != 12) & (nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] < 1)].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 10) | (nation['N_NATIONKEY'] == 9)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'V')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'S') & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == ' ')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] >= 19)].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] >= 0) | (nation['N_NAME'] == 'F')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] == 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 7551.444944539666) | (customer['C_ADDRESS'] != 'z') & (customer['C_CUSTKEY'] <= 57)][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_ACCTBAL'] <= 3958.607938898903) & (customer['C_ACCTBAL'] > 926.8707153464172) & (customer['C_PHONE'] != '25-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] != 20) & (customer['C_ACCTBAL'] == 8924.662289440286)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != '4') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('13-')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] <= 5) | (customer['C_NATIONKEY'] < 19) & (customer['C_PHONE'] == '25-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'f') & (customer['C_CUSTKEY'] < 69) & (customer['C_ADDRESS'] != 'L') | (customer['C_CUSTKEY'] >= 74) & (customer['C_CUSTKEY'] < 76) | (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_CUSTKEY'] == 28)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] != 21)][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] > 4)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] > 8) & (customer['C_CUSTKEY'] >= 76) | (customer['C_PHONE'].str.startswith('1'))][['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'Q') | (customer['C_ADDRESS'].str.startswith('b')) | (customer['C_PHONE'] != '27-') | (customer['C_NATIONKEY'] != 17) & (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_PHONE'] == '1')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) & (customer['C_ACCTBAL'] != 7307.708516503626) & (customer['C_CUSTKEY'] != 21) | (customer['C_ADDRESS'].str.startswith('T')) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ADDRESS'] == 'e') | (customer['C_ACCTBAL'] == 1089.1830192241243) & (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('count')

orders.merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] > 21482.170446886164)][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] <= 740) | (orders['O_ORDERKEY'] != 661) | (orders['O_COMMENT'] != 'c')][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT']]

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH'])) & (orders['O_ORDERKEY'] > 170) | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 147394) | (orders['CLERK'].str.startswith('C'))].groupby(by=['O_COMMENT', 'TOTALPRICE', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['TOTALPRICE'] >= 324855.34341700154) & (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'].str.startswith('C'))][['CLERK']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) | (orders['TOTALPRICE'] != 172526.37611301747) | (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_ACCTBAL'] >= 9743.008148315033) & (customer['C_ACCTBAL'] != 1962.8648576879978) & (customer['C_NATIONKEY'] < 21)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] <= 487) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] > 203917.83122367738)][['O_ORDERKEY', 'O_COMMENT']]

orders[(orders['ORDERSTATUS'] != 'O') & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] >= 215224.2286761162) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] == 73094) | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERSTATUS', 'O_ORDERKEY']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == ',') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] >= 320) & (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'] == 'O') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] > 534)][['O_ORDERKEY']]

orders[(orders['ORDERSTATUS'].isin(['F']))].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_COMMENT'].str.startswith('egu')) | (orders['O_COMMENT'] != 'x') | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] == 25304.845025304574) & (orders['SHIPPRIORITY'] < 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O']))].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'z') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith('egu')) & (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] != 0)][['TOTALPRICE', 'O_ORDERKEY', 'CLERK']]

orders[(orders['O_COMMENT'] == 'o') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] > 86409)].merge(customer[['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('l')) & (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] > 140140) | (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] != 24585) | (orders['TOTALPRICE'] == 298527.0840754578)][['ORDERSTATUS', 'ORDERPRIORITY']]

orders[(orders['O_CUSTKEY'] != 92115) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] <= 92664) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['TOTALPRICE'] < 347426.49180204165) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 220)].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 6706) | (orders['O_ORDERKEY'] == 292) | (orders['ORDERDATE'] != '1998-07-21') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['CLERK'] != 'C')][['TOTALPRICE', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] >= 70914) | (orders['ORDERDATE'] != '1992-01-13')][['SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 122)][['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] != 677)].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'CLERK']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT']).agg('count')

orders[['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY']).agg('count')

part[(part['BRAND'] != 'Brand#24') | (part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] > 195) & (part['SIZE'] <= 48) | (part['P_NAME'] == 'd') | (part['BRAND'].isin(['Brand#22'])) | (part['P_NAME'] == 'c')][['CONTAINER', 'SIZE']]

part[(part['BRAND'] == 'Brand#24') & (part['P_PARTKEY'] == 180) & (part['P_NAME'].str.startswith('b'))].groupby(by=['P_PARTKEY', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#32', 'Brand#35', 'Brand#21', 'Brand#45', 'Brand#22', 'Brand#53', 'Brand#54', 'Brand#33', 'Brand#43', 'Brand#34', 'Brand#42', 'Brand#23', 'Brand#25', 'Brand#12', 'Brand#55', 'Brand#44'])) | (part['P_PARTKEY'] == 161) & (part['BRAND'] == 'Brand#22') & (part['BRAND'] == 'Brand#54') & (part['MFGR'] == 'Manufacturer#2')][['BRAND', 'TYPE', 'MFGR', 'PT_COMMENT']]

part[(part['CONTAINER'] != 'SM') | (part['SIZE'] != 4) & (part['P_PARTKEY'] > 195) | (part['TYPE'] == 'L')].groupby(by=['MFGR', 'PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] > 88) & (part['SIZE'] < 41)].groupby(by=['TYPE', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'PT_COMMENT']).agg('count')

part[(part['CONTAINER'] == 'LG') & (part['P_NAME'] != 's') & (part['RETAILPRICE'] >= 1059.2928347264897)].groupby(by=['PT_COMMENT', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] < 1043.2112490082932) & (part['SIZE'] >= 27)].groupby(by=['SIZE', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'MED') & (part['P_NAME'] == 'w')][['SIZE', 'CONTAINER']].groupby(by=['SIZE', 'CONTAINER']).agg('count')

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['P_NAME'] != 'a') & (part['P_PARTKEY'] <= 20) & (part['SIZE'] < 9) | (part['RETAILPRICE'] != 980.6723913958608) | (part['RETAILPRICE'] >= 1016.0597802168704)].groupby(by=['SIZE', 'MFGR']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2')][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'CONTAINER', 'MFGR']]

part[(part['MFGR'] == 'Manufacturer#2') & (part['BRAND'] != 'Brand#55') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) | (part['P_NAME'].str.startswith('g')) | (part['PT_COMMENT'] == 'c') & (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] < 1081.2517232809973)].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5'])) & (part['BRAND'] != 'Brand#15') | (part['PT_COMMENT'].str.startswith('ly ')) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2'])) & (part['PT_COMMENT'] == 's') & (part['RETAILPRICE'] >= 1037.5108218797375)][['P_PARTKEY', 'P_NAME', 'MFGR']]

part[(part['PT_COMMENT'] != 'n') | (part['MFGR'] != 'Manufacturer#1') & (part['PT_COMMENT'].str.startswith('d'))][['P_PARTKEY', 'SIZE', 'BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE']]

part[(part['PT_COMMENT'].str.startswith('s')) | (part['BRAND'] != 'Brand#54') | (part['TYPE'].str.startswith('E'))][['PT_COMMENT', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'BRAND', 'MFGR']]

part[(part['P_NAME'] != 'c') & (part['SIZE'] < 25) | (part['PT_COMMENT'].str.startswith('u')) & (part['P_NAME'].str.startswith('f')) & (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] != 'Brand#15') & (part['TYPE'] == 'P')].groupby(by=['CONTAINER']).agg('count')

part[(part['P_NAME'] != 'k') & (part['P_NAME'] != 't') & (part['BRAND'] != 'Brand#23') | (part['P_PARTKEY'] != 144) & (part['TYPE'] != 'L')].groupby(by=['SIZE', 'TYPE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'c') & (part['RETAILPRICE'] != 989.945629650897) | (part['P_PARTKEY'] != 11) | (part['P_PARTKEY'] >= 82) & (part['TYPE'] == 'M') & (part['SIZE'] < 39)][['P_PARTKEY', 'P_NAME', 'MFGR']]

part[(part['P_NAME'] == 'cor') & (part['RETAILPRICE'] == 942.1133723590347) & (part['TYPE'].str.startswith('STA'))].groupby(by=['RETAILPRICE', 'BRAND', 'P_NAME', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'] == 'm') & (part['RETAILPRICE'] > 904.7193719981396) | (part['P_PARTKEY'] >= 98)][['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND']]

part[(part['P_NAME'].str.startswith('k')) & (part['CONTAINER'] == 'WRAP') | (part['SIZE'] >= 41) & (part['P_PARTKEY'] == 64) & (part['SIZE'] == 46) | (part['PT_COMMENT'] == 'q') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2'])) | (part['TYPE'] != 'P')][['BRAND']]

part[(part['P_PARTKEY'] < 134) & (part['SIZE'] > 23) & (part['SIZE'] < 26)][['TYPE', 'P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['P_PARTKEY'] < 65) & (part['CONTAINER'].str.startswith('SM')) | (part['P_PARTKEY'] <= 103) | (part['RETAILPRICE'] > 946.3781711310016) | (part['BRAND'] == 'Brand#31')].groupby(by=['TYPE', 'CONTAINER', 'SIZE']).agg('count')

part[(part['P_PARTKEY'] == 112) & (part['RETAILPRICE'] == 1086.3967403974043) | (part['P_NAME'].str.startswith('p')) & (part['CONTAINER'] == 'WRAP') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] != 28) | (part['P_NAME'].str.startswith('i')) & (part['PT_COMMENT'] == '!')][['P_PARTKEY']]

part[(part['P_PARTKEY'] > 151) & (part['TYPE'].str.startswith('E')) | (part['BRAND'] != 'Brand#31') & (part['CONTAINER'] != 'LG') | (part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'] != 'WRAP') & (part['MFGR'] == 'Manufacturer#5')].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] > 22) | (part['CONTAINER'] == 'SM') & (part['SIZE'] < 13) & (part['P_NAME'].str.startswith('f'))][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 90) & (part['RETAILPRICE'] >= 1072.2342110668283) | (part['MFGR'].isin(['Manufacturer#5'])) & (part['BRAND'] == 'Brand#11') | (part['P_PARTKEY'] <= 186)][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']]

part[(part['RETAILPRICE'] == 902.600738500081) | (part['P_NAME'] == 'i') & (part['P_NAME'].str.startswith('lem')) & (part['MFGR'] != 'Manufacturer#4') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) | (part['RETAILPRICE'] < 1003.8437159867706) | (part['BRAND'] == 'Brand#33')].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] != 10)][['SIZE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']]

part[(part['SIZE'] < 16) | (part['PT_COMMENT'].str.startswith('!')) | (part['PT_COMMENT'].str.startswith('q')) & (part['PT_COMMENT'] != 'm') & (part['SIZE'] != 28)][['BRAND', 'P_NAME', 'PT_COMMENT', 'MFGR']]

part[(part['SIZE'] < 30) & (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'SMA') | (part['RETAILPRICE'] < 1037.7582956524095) | (part['P_NAME'].str.startswith('y')) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3']))].groupby(by=['RETAILPRICE', 'MFGR']).agg('count')

part[(part['SIZE'] < 4) | (part['P_PARTKEY'] >= 180)][['P_NAME', 'RETAILPRICE']].groupby(by=['P_NAME', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['SIZE'] < 40) | (part['SIZE'] != 34) | (part['RETAILPRICE'] <= 941.5772731849395) | (part['RETAILPRICE'] == 910.0246625032057) | (part['RETAILPRICE'] >= 962.8850366763475) & (part['TYPE'].str.startswith('SMA'))].groupby(by=['PT_COMMENT', 'TYPE']).agg('count')

part[(part['SIZE'] == 5) | (part['SIZE'] > 44) & (part['BRAND'] == 'Brand#12')].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'P_NAME', 'BRAND']).agg('count')

part[(part['SIZE'] > 25) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['CONTAINER'] != 'WRAP')].groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['SIZE'] >= 31) & (part['TYPE'] != 'STA') & (part['TYPE'] != 'M') | (part['BRAND'] == 'Brand#15') & (part['RETAILPRICE'] > 963.4347079575238) & (part['TYPE'] == 'M')].groupby(by=['SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['SIZE'] >= 32) & (part['PT_COMMENT'].str.startswith('!')) & (part['P_NAME'] == 'd') & (part['RETAILPRICE'] < 944.2376171490957) | (part['MFGR'] != 'Manufacturer#2') | (part['CONTAINER'] == 'MED')].groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['SIZE'] >= 37)][['P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'BRAND', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['SIZE'] >= 40) & (part['PT_COMMENT'] != 't') & (part['SIZE'] < 19) | (part['SIZE'] != 28) | (part['RETAILPRICE'] == 902.7298224084589) & (part['CONTAINER'] == 'LG')][['CONTAINER', 'P_PARTKEY', 'MFGR']]

part[(part['TYPE'] != 'E') & (part['BRAND'] == 'Brand#31')][['P_NAME', 'BRAND']].groupby(by=['BRAND', 'P_NAME']).agg('count')

part[(part['TYPE'] == 'E') | (part['PT_COMMENT'] == 's') & (part['RETAILPRICE'] > 1033.4322072564905) & (part['RETAILPRICE'] != 954.5369495781378) & (part['SIZE'] != 43) & (part['TYPE'].str.startswith('L'))].groupby(by=['TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[['BRAND', 'CONTAINER', 'SIZE', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'SIZE', 'BRAND', 'CONTAINER']).agg('mean', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'MFGR']].groupby(by=['MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR']].groupby(by=['PT_COMMENT']).agg('count')

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'SIZE']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME']].groupby(by=['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'BRAND']].groupby(by=['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'TYPE', 'SIZE', 'MFGR']].groupby(by=['RETAILPRICE']).agg('count')

part[['P_NAME', 'CONTAINER', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'P_NAME', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'SIZE']].groupby(by=['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['SIZE', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']].groupby(by=['RETAILPRICE', 'MFGR', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'TYPE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'MFGR']].groupby(by=['P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[['TYPE', 'PT_COMMENT', 'P_NAME', 'SIZE']].groupby(by=['SIZE', 'PT_COMMENT', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#4') | (part['P_PARTKEY'] > 140) & (part['PT_COMMENT'] == 'b') | (part['P_NAME'].str.startswith('lem')) & (part['SIZE'] <= 46) & (part['BRAND'] == 'Brand#25') & (part['PT_COMMENT'] == 'r')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('a'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] != 'c')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] == 'b')][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['SIZE'] <= 39) & (part['TYPE'] == 'M') & (part['PT_COMMENT'] != 'w') & (part['SIZE'] <= 32) | (part['BRAND'].isin(['Brand#41'])) | (part['TYPE'] != 'STA') | (part['P_NAME'].str.startswith('c')) | (part['BRAND'] == 'Brand#14')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'L') | (part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] <= 9) & (part['BRAND'] == 'Brand#21') & (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'] == 'WRAP') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('E')) | (part['TYPE'] != 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] == 'M')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 3960)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 36) | (partsupp['AVAILQTY'] != 7829) | (partsupp['P_COMMENT'] != 'i') & (partsupp['PS_SUPPKEY'] < 2533)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] != 47) & (partsupp['PS_SUPPKEY'] <= 7093) & (partsupp['P_COMMENT'] != 'e')][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 48) | (partsupp['SUPPLYCOST'] == 728.9823643572153)].merge(part[(part['TYPE'].str.startswith('S')) | (part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'] != 'MED') | (part['CONTAINER'] == 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 33) | (partsupp['AVAILQTY'] >= 8612)].merge(part[(part['RETAILPRICE'] <= 1001.2978040013337) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) & (part['TYPE'].str.startswith('SMA')) & (part['TYPE'] == 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 35)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 24) | (partsupp['AVAILQTY'] != 7526)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 27) & (partsupp['SUPPLYCOST'] > 43.580444475614804)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 7) & (partsupp['PS_SUPPKEY'] > 1508)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5708) | (partsupp['PS_PARTKEY'] != 9)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ',')][['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'd') & (part['P_PARTKEY'] == 103)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['AVAILQTY'] >= 5464) | (partsupp['SUPPLYCOST'] > 49.725927270493564) | (partsupp['PS_PARTKEY'] < 3)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('p'))].merge(part[['RETAILPRICE', 'CONTAINER', 'MFGR', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 947.6561935684506) | (partsupp['SUPPLYCOST'] <= 439.60173468264287) | (partsupp['SUPPLYCOST'] >= 615.0842088542591)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 396.67886523600095)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 543.5270911332823) | (partsupp['PS_PARTKEY'] > 28)][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 669.1724004278875) & (partsupp['AVAILQTY'] > 4833) | (partsupp['P_COMMENT'] == 'y')][['AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 835.4059871153103)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'SMA') & (part['P_NAME'] != 'k') | (part['CONTAINER'] == 'MED') | (part['BRAND'] == 'Brand#42')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'p')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] < 11) & (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] != 5)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 3)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 4882.158749466931) | (supplier['S_SUPPKEY'] < 8)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 2926.4481261600376) | (supplier['S_COMMENT'] == 'q') | (supplier['S_ADDRESS'] != 'P') | (supplier['S_NATIONKEY'] <= 6) & (supplier['S_NATIONKEY'] == 7)][['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']]

supplier[(supplier['S_ACCTBAL'] <= 890.7689423241964) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 3712.420632970946) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] == 10)][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] <= 981.9311596728721) | (supplier['S_SUPPKEY'] < 137) | (supplier['S_COMMENT'] != 'l') | (supplier['S_ACCTBAL'] > 5195.942493966672)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 1238.3290346647807) & (supplier['S_SUPPKEY'] <= 66) | (supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] != 'es ') & (supplier['S_PHONE'] != '2')][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'] != 'S') | (supplier['S_NATIONKEY'] <= 2) | (supplier['S_ACCTBAL'] >= 6599.206917907067)].groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'X') & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('a'))].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'T') & (supplier['S_SUPPKEY'] != 21) | (supplier['S_ACCTBAL'] < 9487.959570627274)].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] > 10) | (nation['N_NAME'].str.startswith('J'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('7')) | (supplier['S_ADDRESS'] == 'z') & (supplier['S_ADDRESS'] != 'k') | (supplier['S_COMMENT'] == 'j')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_ADDRESS'].str.startswith('C')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'E') | (supplier['S_ACCTBAL'] > 271.58793740130045)].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'b') & (supplier['S_PHONE'] != '3') & (supplier['S_SUPPKEY'] < 32) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] < 114)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 's') | (supplier['S_ACCTBAL'] != 3844.362288322999) | (supplier['S_NATIONKEY'] == 22)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'J') | (supplier['S_COMMENT'] == 'd') | (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_PHONE'] == '28-')][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'q') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] > 1579.6375438882144)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] == 13) & (supplier['S_PHONE'].str.startswith('32-'))].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 13) & (supplier['S_COMMENT'] == 'u') | (supplier['S_ACCTBAL'] == 4787.033090054388)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] != 9) | (supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_PHONE'] == '17-') & (supplier['S_PHONE'] == '3') | (supplier['S_SUPPKEY'] >= 130) & (supplier['S_SUPPKEY'] != 27)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] == 15) & (supplier['S_ACCTBAL'] < 7813.7806554042445) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 23) & (supplier['S_SUPPKEY'] < 29) & (supplier['S_ACCTBAL'] < 3043.3846918799427)][['S_ADDRESS', 'S_NAME', 'S_PHONE']]

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_ACCTBAL'] == 6586.823838504574) & (supplier['S_COMMENT'] != 'w') | (supplier['S_ACCTBAL'] != 5388.383124389973) & (supplier['S_ACCTBAL'] >= 6892.412222492501) & (supplier['S_PHONE'] != '32-')][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] == 14) & (nation['N_COMMENT'] == 'o') | (nation['N_NAME'] != 'M') | (nation['N_NAME'] != 'U')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] != 110) & (supplier['S_ADDRESS'].str.startswith('D'))].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] < 4114.526701824074)][['S_NAME', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] == 8568.798357817119) & (supplier['S_NATIONKEY'] <= 19) | (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_ADDRESS'] != ',') | (supplier['S_ADDRESS'] == 'O')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != '9')].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 3)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']]

supplier[(supplier['S_SUPPKEY'] < 79)].merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 84) | (supplier['S_ADDRESS'] == 'z') & (supplier['S_SUPPKEY'] != 161) & (supplier['S_ADDRESS'].str.startswith('p')) | (supplier['S_NATIONKEY'] == 15)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_SUPPKEY'] > 113) & (supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_ACCTBAL'] >= 619.4381955320496) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_NATIONKEY'] == 0)].groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']).agg('count')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] < 8)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] == 'p')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] < 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'V') | (nation['N_NATIONKEY'] <= 23)].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] < 6) & (nation['N_NAME'] != 'A')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 6107.92374590579)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 6117.175625394805) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 20) & (customer['C_CUSTKEY'] <= 63) & (customer['C_ADDRESS'] == 'n') & (customer['C_NATIONKEY'] != 10) & (customer['C_CUSTKEY'] >= 57)].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'U') | (customer['C_ACCTBAL'] > 322.7575198826012) & (customer['C_CUSTKEY'] <= 65) | (customer['C_CUSTKEY'] != 72)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('I'))][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 'h') & (customer['C_ADDRESS'] == 'z') & (customer['C_PHONE'].str.startswith('2')) | (customer['C_ADDRESS'] != 'f') | (customer['C_COMMENT'] != 'p')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_COMMENT'] != 'p') & (customer['C_ADDRESS'].str.startswith('h'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == ' ') | (customer['C_PHONE'] == '2') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'X') & (customer['C_NATIONKEY'] != 14) & (customer['C_COMMENT'] == 'i') | (customer['C_COMMENT'] != 'r')][['C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_COMMENT'] == 'a') | (customer['C_ADDRESS'] != '9') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('l')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'y') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'MACHINERY', 'FURNITURE'])) & (customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('c')) & (customer['C_PHONE'].str.startswith('2'))][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] < 26) | (customer['C_PHONE'] != '2') & (customer['C_ADDRESS'].str.startswith('X')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) & (customer['C_ADDRESS'] == 'r') & (customer['C_ACCTBAL'] < 6352.48393412396)].groupby(by=['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 80) & (customer['C_ADDRESS'] != '4') & (customer['C_ACCTBAL'] == 4923.356504626789) & (customer['C_CUSTKEY'] < 56) & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'] != 'f')][['C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY']]

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_ADDRESS'].str.startswith('F')) | (customer['C_ADDRESS'] != 'f') & (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']]

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 6352.338829747407) | (customer['C_PHONE'] == '2')].merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('u')) & (customer['C_NATIONKEY'] != 22) & (customer['C_ADDRESS'] != 'B') & (customer['C_ACCTBAL'] < 5314.774497492591)][['C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']]

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '2')][['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']]

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 65) & (customer['C_COMMENT'] == 'c') & (customer['C_ADDRESS'] == 'v') | (customer['C_PHONE'].str.startswith('25-'))].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] <= 0)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] >= 10) | (customer['C_NATIONKEY'] >= 21) | (customer['C_NATIONKEY'] == 3) & (customer['C_ADDRESS'] == 'h')][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE']]

customer[(customer['C_PHONE'] != '2') | (customer['C_ADDRESS'] != 'R') | (customer['C_ADDRESS'] == '8') & (customer['C_NATIONKEY'] != 17)][['C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '22-') | (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_COMMENT'] == 'h') & (customer['C_COMMENT'].str.startswith('h'))][['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']]

customer[(customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] > 16) & (customer['C_PHONE'] != '22-') | (customer['C_CUSTKEY'] == 80) | (customer['C_NATIONKEY'] >= 14)][['C_PHONE']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] != 9331.196669305466) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'BUILDING')][['C_COMMENT', 'C_PHONE']].groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '3') | (customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'].str.startswith('S'))].merge(nation[(nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_COMMENT'] == 'h') & (customer['C_ADDRESS'].str.startswith('o')) & (customer['C_COMMENT'] != 'c') & (customer['C_NATIONKEY'] > 19) & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] == ',')][['C_PHONE', 'C_NAME', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('3')) & (customer['C_ACCTBAL'] < 2507.658196778054) | (customer['C_NATIONKEY'] != 8) & (customer['C_CUSTKEY'] == 44)][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']]

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '25-') & (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] == 5354.548317760648) & (customer['C_PHONE'] != '1') & (customer['MKTSEGMENT'].isin(['BUILDING']))].groupby(by=['C_CUSTKEY', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 686.6178357981933) & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] == 46) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] == -31.810975193647437) | (customer['C_PHONE'].str.startswith('18-'))][['C_NAME', 'C_ADDRESS', 'C_ACCTBAL']]

customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_CUSTKEY'] <= 4) | (customer['C_ADDRESS'] != 'i') & (customer['C_COMMENT'] != 'i') & (customer['C_COMMENT'] == 't')][['C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].groupby(by=['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']).agg('count')

customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].groupby(by=['C_PHONE', 'C_NATIONKEY']).agg('count')

customer[['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']).agg('count')

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] > 5332.216796583089) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_COMMENT'].str.startswith('k')) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] < 355) & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] == 'q') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_ORDERKEY'] > 86)][['ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 8560)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 23) | (partsupp['PS_SUPPKEY'] >= 1119) & (partsupp['PS_PARTKEY'] > 21)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 22) | (partsupp['PS_SUPPKEY'] <= 6397) | (partsupp['PS_SUPPKEY'] != 401) & (partsupp['PS_PARTKEY'] >= 36) & (partsupp['PS_PARTKEY'] > 7)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 4523) | (partsupp['SUPPLYCOST'] < 929.0914381149388) | (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['PS_PARTKEY'] == 19)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'q')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 582.5206788151567)].merge(part[['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.06107625160470327)][['L_COMMENT', 'EXTENDEDPRICE', 'QUANTITY', 'RETURNFLAG', 'L_PARTKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE']]

lineitem[(lineitem['EXTENDEDPRICE'] != 77195.07069314497) & (lineitem['L_COMMENT'].str.startswith('c')) | (lineitem['LINENUMBER'] <= 4) | (lineitem['L_ORDERKEY'] < 35) | (lineitem['LINENUMBER'] > 1) | (lineitem['RECEIPTDATE'] == '1992-05-02')].groupby(by=['TAX', 'LINESTATUS', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 37777.37774991971) | (lineitem['L_COMMENT'] != 'p') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_PARTKEY'] == 168502)].merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_COMMENT'] != '-')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 85098.92556603573)].merge(orders.merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] == 6)][['LINENUMBER', 'L_COMMENT', 'TAX', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT', 'TAX']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'r') | (lineitem['QUANTITY'] < 29) & (lineitem['LINENUMBER'] > 3) & (lineitem['TAX'] != 0.04922492101887533) & (lineitem['LINENUMBER'] == 3) | (lineitem['TAX'] != 0.020193502301092937) & (lineitem['LINENUMBER'] <= 1) & (lineitem['TAX'] > 0.05325000173427286)][['DISCOUNT', 'SHIPDATE']]

lineitem[(lineitem['L_COMMENT'] == 'e') | (lineitem['L_SUPPKEY'] == 995) & (lineitem['LINENUMBER'] != 5) & (lineitem['DISCOUNT'] > 0.077090230116759) & (lineitem['L_ORDERKEY'] != 168) | (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_PARTKEY'] != 19196)][['SHIPDATE', 'COMMITDATE', 'L_SUPPKEY']]

lineitem[(lineitem['L_COMMENT'].str.startswith('lit')) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['EXTENDEDPRICE'] < 35706.31549518143) | (lineitem['SHIPDATE'] != '1998-10-30')][['COMMITDATE', 'QUANTITY']].groupby(by=['COMMITDATE']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] == 59) & (lineitem['L_ORDERKEY'] > 114) & (lineitem['EXTENDEDPRICE'] == 16206.907586749994)][['LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'TAX', 'RETURNFLAG']]

lineitem[(lineitem['L_ORDERKEY'] >= 141) | (lineitem['L_COMMENT'] == 'lit') & (lineitem['TAX'] < 0.07000670988095686) & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['EXTENDEDPRICE'] <= 78003.54360300081)][['TAX']].groupby(by=['TAX']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 165) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINENUMBER'] > 5) & (lineitem['DISCOUNT'] >= 0.03972263580682383) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINENUMBER'] > 3) | (lineitem['L_ORDERKEY'] >= 171) | (lineitem['L_COMMENT'] != 'l')][['RECEIPTDATE', 'TAX']]

lineitem[(lineitem['L_SUPPKEY'] < 2562) | (lineitem['DISCOUNT'] > 0.06883439525920607) & (lineitem['DISCOUNT'] == 0.07110353434745952)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 7080) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_ORDERKEY'] >= 25) & (lineitem['L_COMMENT'] == 'v') | (lineitem['L_ORDERKEY'] != 140)][['DISCOUNT', 'SHIPMODE', 'L_COMMENT', 'SHIPDATE', 'LINESTATUS']]

lineitem[(lineitem['L_SUPPKEY'] == 6201) & (lineitem['L_COMMENT'].str.startswith(',')) & (lineitem['DISCOUNT'] != 0.0856630093104383) & (lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['LINESTATUS'] == 'O')][['L_ORDERKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'RETURNFLAG']]

lineitem[(lineitem['QUANTITY'] < 15)][['SHIPDATE', 'L_ORDERKEY', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'TAX', 'RETURNFLAG']]

lineitem[(lineitem['QUANTITY'] >= 8) & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_SUPPKEY'] < 4183) | (lineitem['LINENUMBER'] <= 5) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_SUPPKEY'] >= 2938)].groupby(by=['RETURNFLAG', 'SHIPMODE', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['L_SUPPKEY'] == 8660) & (lineitem['EXTENDEDPRICE'] > 48002.74010441314)][['RETURNFLAG', 'LINENUMBER']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINENUMBER'] > 2) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['TAX'] > 0.04216842556221828) & (lineitem['LINESTATUS'] != 'O')].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02')][['COMMITDATE', 'TAX', 'DISCOUNT', 'RECEIPTDATE']].groupby(by=['DISCOUNT', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['EXTENDEDPRICE'] > 32542.39160693768) & (lineitem['L_COMMENT'] != 'v')].groupby(by=['SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'LINESTATUS', 'L_PARTKEY']).agg('count')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['DISCOUNT'] < 0.05980638688804174) | (lineitem['SHIPMODE'].isin(['FOB', 'MAIL'])) & (lineitem['TAX'] == 0.06537624405493618)].merge(partsupp[(partsupp['SUPPLYCOST'] != 440.849008739219) & (partsupp['SUPPLYCOST'] >= 689.5255805264322)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['QUANTITY'] != 43) & (lineitem['RETURNFLAG'] != 'A') | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['EXTENDEDPRICE'] < 62638.49778860428) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE'])) & (lineitem['L_SUPPKEY'] < 2202)][['RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD'])) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_PARTKEY'] == 57228) | (lineitem['L_ORDERKEY'] <= 184) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_PARTKEY'] == 148016) & (lineitem['LINENUMBER'] < 5) & (lineitem['L_COMMENT'] == ' re')][['COMMITDATE', 'SHIPMODE']]

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['LINENUMBER'] > 6) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['L_COMMENT'] == 't') | (lineitem['TAX'] <= 0.07167070824142115) | (lineitem['TAX'] != 0.019543425260340135) & (lineitem['TAX'] != 0.06364954757264986) & (lineitem['DISCOUNT'] >= 0.051730124485746924)][['RECEIPTDATE']]

lineitem[['L_COMMENT', 'L_ORDERKEY', 'QUANTITY', 'LINENUMBER', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY']].groupby(by=['L_ORDERKEY', 'L_PARTKEY']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY', 'RETURNFLAG', 'COMMITDATE', 'L_PARTKEY', 'LINESTATUS', 'SHIPDATE']].groupby(by=['L_SUPPKEY', 'SHIPDATE', 'RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'SHIPDATE', 'LINESTATUS']].groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'TAX', 'L_PARTKEY', 'SHIPMODE', 'DISCOUNT', 'EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPINSTRUCT', 'TAX', 'SHIPMODE', 'EXTENDEDPRICE', 'DISCOUNT', 'L_COMMENT']].groupby(by=['SHIPINSTRUCT', 'DISCOUNT', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'DISCOUNT', 'SHIPDATE', 'TAX', 'L_COMMENT']].groupby(by=['SHIPDATE', 'SHIPMODE', 'DISCOUNT', 'L_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 0) & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] == 'h')].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'i') | (nation['N_NAME'] != 'A') & (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 's')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] != 3) | (nation['N_NATIONKEY'] != 4)][['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] == 14) & (nation['N_NATIONKEY'] >= 13) & (nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'].str.startswith('R'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'J') & (nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] != 7) | (nation['N_NAME'] != 'F')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] == 'E') | (nation['N_COMMENT'] == 't')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] != ' ')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] == 0)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] == 'M')].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 1)][['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 12) | (nation['N_NATIONKEY'] <= 12) | (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] < 0)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 16)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 21) & (nation['N_COMMENT'] == 't') | (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 23) & (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] >= 12) & (nation['N_NATIONKEY'] >= 14) | (nation['N_REGIONKEY'] <= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 2) | (nation['N_NATIONKEY'] < 3) | (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 11)][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 20)].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] == 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 6) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] <= 11) | (nation['N_NATIONKEY'] <= 13)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 11)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] == 16)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('B'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'A')].merge(region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] <= 7) | (nation['N_COMMENT'] == 'h')][['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'e')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] == 14) & (nation['N_COMMENT'].str.startswith('s'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('A')) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NATIONKEY'] <= 5)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] != 11) & (nation['N_COMMENT'] != 'p')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] != 6023.4919159434285) & (customer['C_COMMENT'].str.startswith(',')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] != 36) | (customer['C_ACCTBAL'] > 9231.014998997376) | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'q') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'd') | (customer['C_ADDRESS'] != 'r') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'BUILDING']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] < 14) & (customer['C_NATIONKEY'] != 3) | (customer['C_PHONE'] == '22-') & (customer['C_ADDRESS'] == 'K') & (customer['C_ACCTBAL'] <= 4635.528054674514)][['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] < 20) | (customer['C_NATIONKEY'] <= 14) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 87)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY']).agg('count')

orders.merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NATIONKEY'] != 6)][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_COMMENT'] == 'y') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_ACCTBAL'] > 1326.056986155827) | (customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] != 61983)][['ORDERSTATUS', 'CLERK']].groupby(by=['CLERK', 'ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] >= 181858.8341567638) | (orders['O_COMMENT'] != 'r') & (orders['O_CUSTKEY'] == 13551) & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM'])) & (orders['O_CUSTKEY'] != 11456) & (orders['ORDERSTATUS'] == 'O')][['TOTALPRICE', 'ORDERPRIORITY']]

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'] != 'q') | (orders['SHIPPRIORITY'] >= 0)][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] > 200170.77266014175)][['TOTALPRICE', 'CLERK', 'O_CUSTKEY']].groupby(by=['CLERK']).agg('count')

orders[(orders['O_COMMENT'] != 'k') | (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] <= 297) & (orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] <= 303) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O')][['ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']]

orders[(orders['O_COMMENT'] == ' ') & (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C')].groupby(by=['CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 27883) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['CLERK'] == 'C')].groupby(by=['O_CUSTKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 39753) & (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 463)][['O_COMMENT', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 78602) & (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] < 146078.3891054099) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'P') & (orders['ORDERSTATUS'] != 'P')][['O_COMMENT', 'ORDERSTATUS', 'CLERK']]

orders[(orders['O_ORDERKEY'] < 768) & (orders['O_CUSTKEY'] < 90526) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_CUSTKEY'] <= 88170) & (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']]

orders[(orders['O_ORDERKEY'] == 675) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] < 87830) | (orders['O_CUSTKEY'] != 70953) | (orders['O_CUSTKEY'] >= 93896)].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_COMMENT'] == 'c') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '1-URGENT']))][['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE']]

orders[(orders['SHIPPRIORITY'] != 0)][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] == 'g') & (orders['ORDERDATE'] == '1992-01-13')][['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] < 180237.89343916313) & (orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] > 159744.19127491253) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] > '1992-01-13')][['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] == 207197.01649879865) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_COMMENT'] == 'c') & (orders['TOTALPRICE'] < 104665.82496199514) & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'] != 'P')][['O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['TOTALPRICE'] > 107025.09013937644) | (orders['TOTALPRICE'] <= 209634.80770011482) & (orders['O_CUSTKEY'] == 62004) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'] != 'F')].groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] > 297781.6878245761) & (orders['TOTALPRICE'] <= 129193.21498570066) | (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C')][['O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 268601.266233525) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) | (orders['TOTALPRICE'] <= 122249.06592591981) & (orders['O_CUSTKEY'] <= 107974) | (orders['O_CUSTKEY'] == 11872)][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY', 'O_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']).agg('count')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#35') & (part['SIZE'] > 38) | (part['SIZE'] <= 43) | (part['RETAILPRICE'] > 1039.7450740374256) | (part['MFGR'].isin(['Manufacturer#2'])) & (part['MFGR'] != 'Manufacturer#3')][['RETAILPRICE', 'CONTAINER', 'P_NAME', 'SIZE']]

part[(part['BRAND'] != 'Brand#43') | (part['TYPE'] != 'E') | (part['TYPE'] != 'SMA') | (part['SIZE'] != 1) & (part['RETAILPRICE'] == 956.5035506976753) | (part['CONTAINER'].str.startswith('LG')) & (part['TYPE'] == 'S')][['MFGR', 'SIZE', 'TYPE']]

part[(part['BRAND'] == 'Brand#15') | (part['TYPE'].str.startswith('M')) & (part['TYPE'] == 'L')][['TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']]

part[(part['BRAND'] == 'Brand#34') | (part['BRAND'] == 'Brand#32') | (part['P_NAME'].str.startswith('k')) | (part['TYPE'].str.startswith('E')) & (part['CONTAINER'] != 'WRAP') | (part['TYPE'].str.startswith('STA')) | (part['SIZE'] != 12) & (part['PT_COMMENT'] != 'e') & (part['RETAILPRICE'] == 1091.4598095004683)][['MFGR']]

part[(part['BRAND'] == 'Brand#45') | (part['P_PARTKEY'] != 181) & (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'].str.startswith('v')) & (part['P_PARTKEY'] == 140) | (part['SIZE'] >= 47)][['P_NAME', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']]

part[(part['CONTAINER'] != 'SM') | (part['MFGR'].isin(['Manufacturer#4'])) | (part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'].str.startswith('o')) | (part['MFGR'] == 'Manufacturer#3')].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['BRAND'].isin(['Brand#45', 'Brand#35', 'Brand#31', 'Brand#12', 'Brand#51', 'Brand#43', 'Brand#53'])) | (part['RETAILPRICE'] < 1074.8211119598407) | (part['CONTAINER'] != 'SM')][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'].isin(['Brand#43', 'Brand#31', 'Brand#45', 'Brand#15', 'Brand#25', 'Brand#42', 'Brand#55', 'Brand#12', 'Brand#22', 'Brand#41', 'Brand#35', 'Brand#33', 'Brand#23'])) & (part['P_PARTKEY'] != 160) | (part['P_NAME'] != 'l') | (part['MFGR'] != 'Manufacturer#4')].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'].str.startswith('d')) | (part['CONTAINER'] != 'WRAP') & (part['BRAND'] == 'Brand#45')][['MFGR', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE', 'BRAND']]

part[(part['CONTAINER'].str.startswith('LG'))][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']]

part[(part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] == 'S') | (part['P_PARTKEY'] >= 142) & (part['SIZE'] != 7) | (part['BRAND'] == 'Brand#14')][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'RETAILPRICE']]

part[(part['MFGR'] != 'Manufacturer#2') | (part['SIZE'] <= 47) & (part['MFGR'] != 'Manufacturer#3')][['TYPE', 'BRAND']].groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#2') | (part['TYPE'] == 'SMA') | (part['BRAND'] == 'Brand#31') | (part['P_NAME'] != 'lin')].groupby(by=['CONTAINER', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5'])) & (part['P_PARTKEY'] <= 86) & (part['SIZE'] >= 9) | (part['SIZE'] != 41) | (part['RETAILPRICE'] == 1077.4578790691796) & (part['P_PARTKEY'] != 189)].groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != ' ') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4'])) & (part['P_PARTKEY'] > 123) & (part['BRAND'].isin(['Brand#12', 'Brand#54', 'Brand#32', 'Brand#53', 'Brand#13', 'Brand#42'])) | (part['BRAND'] != 'Brand#51') | (part['PT_COMMENT'].str.startswith('g')) | (part['TYPE'] == 'E') & (part['CONTAINER'] == 'SM') | (part['TYPE'].str.startswith('P'))][['RETAILPRICE']]

part[(part['PT_COMMENT'] != ' fi') | (part['RETAILPRICE'] != 953.7637247933039) & (part['BRAND'] != 'Brand#24') & (part['TYPE'].str.startswith('STA')) | (part['CONTAINER'] != 'LG') & (part['SIZE'] != 31) | (part['P_PARTKEY'] >= 7) & (part['TYPE'].str.startswith('E'))].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('e')) | (part['BRAND'].isin(['Brand#41', 'Brand#15', 'Brand#21', 'Brand#14', 'Brand#33', 'Brand#35', 'Brand#45', 'Brand#44', 'Brand#22', 'Brand#12', 'Brand#53', 'Brand#31', 'Brand#43', 'Brand#42', 'Brand#34', 'Brand#55', 'Brand#25', 'Brand#13', 'Brand#54', 'Brand#11', 'Brand#32', 'Brand#24', 'Brand#23'])) | (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] == 'lin') | (part['P_PARTKEY'] < 126) | (part['BRAND'] == 'Brand#14') & (part['TYPE'] != 'STA') & (part['BRAND'] != 'Brand#21') | (part['TYPE'] != 'L')][['BRAND']]

part[(part['PT_COMMENT'].str.startswith('p')) & (part['PT_COMMENT'] == 'r') & (part['P_PARTKEY'] <= 166) & (part['BRAND'] == 'Brand#25') & (part['SIZE'] != 27)].groupby(by=['TYPE', 'MFGR', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('s')) & (part['P_NAME'].str.startswith('k')) | (part['BRAND'] == 'Brand#12') & (part['BRAND'].isin(['Brand#43', 'Brand#11', 'Brand#13', 'Brand#23', 'Brand#33', 'Brand#41', 'Brand#53', 'Brand#31', 'Brand#51', 'Brand#32', 'Brand#55', 'Brand#45', 'Brand#54', 'Brand#21', 'Brand#34', 'Brand#42', 'Brand#44'])) | (part['P_PARTKEY'] <= 102) & (part['PT_COMMENT'].str.startswith('s')) & (part['RETAILPRICE'] <= 1038.8538064594345)][['MFGR', 'CONTAINER', 'P_NAME']]

part[(part['P_NAME'] != 'c') & (part['BRAND'] == 'Brand#33') | (part['TYPE'] == 'STA') | (part['CONTAINER'] != 'WRAP') | (part['TYPE'] != 'S')][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'd') & (part['P_NAME'].str.startswith('k')) | (part['RETAILPRICE'] <= 912.2277974846335) & (part['PT_COMMENT'].str.startswith('s')) & (part['BRAND'] == 'Brand#25') & (part['P_NAME'] == 'v') & (part['P_NAME'].str.startswith('m')) & (part['RETAILPRICE'] >= 965.3879124499683)].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'h') & (part['SIZE'] < 16) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4'])) & (part['P_PARTKEY'] > 171) & (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'].str.startswith('b')) & (part['PT_COMMENT'] == 'p') | (part['PT_COMMENT'].str.startswith('ly '))].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'] == 'y') & (part['CONTAINER'] != 'SM') | (part['SIZE'] > 10) & (part['SIZE'] != 33) & (part['P_NAME'] != 'lin')].groupby(by=['P_NAME', 'MFGR', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['P_NAME'].str.startswith('o')) | (part['BRAND'] != 'Brand#42') & (part['SIZE'] >= 23) & (part['CONTAINER'].str.startswith('SM')) & (part['TYPE'] != 'STA') | (part['BRAND'] != 'Brand#33')].groupby(by=['P_NAME', 'SIZE', 'BRAND']).agg('count')

part[(part['P_PARTKEY'] != 94) & (part['TYPE'].str.startswith('SMA')) & (part['SIZE'] == 44)][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND']]

part[(part['P_PARTKEY'] == 36) & (part['P_PARTKEY'] > 95) | (part['MFGR'] != 'Manufacturer#3')][['BRAND', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[(part['P_PARTKEY'] == 9) & (part['SIZE'] < 26) | (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'] != 'Brand#34') & (part['BRAND'] != 'Brand#42')][['P_NAME', 'SIZE', 'BRAND', 'TYPE', 'CONTAINER']]

part[(part['P_PARTKEY'] >= 121) | (part['PT_COMMENT'] != 'h') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) | (part['P_PARTKEY'] >= 155) | (part['TYPE'].str.startswith('E'))][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] <= 935.7788349256015)][['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[(part['RETAILPRICE'] > 915.6856405971608) & (part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] == 67) & (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] <= 1050.8573482985962) | (part['P_PARTKEY'] > 103) & (part['TYPE'] != 'SMA')].groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 38)][['TYPE', 'MFGR', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'MFGR']).agg('min', numeric_only=True)

part[(part['SIZE'] != 40) | (part['TYPE'] == 'S') & (part['TYPE'] != 'STA') & (part['P_PARTKEY'] >= 141) & (part['P_PARTKEY'] > 135) | (part['RETAILPRICE'] != 1041.7183197690351)][['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']]

part[(part['SIZE'] < 44) | (part['RETAILPRICE'] <= 1019.3560442236486) | (part['P_NAME'] != 'f') | (part['TYPE'].str.startswith('E')) | (part['CONTAINER'] != 'SM')][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['SIZE'] <= 12) & (part['SIZE'] >= 27) | (part['PT_COMMENT'] != 't') | (part['PT_COMMENT'].str.startswith('kag')) & (part['P_PARTKEY'] < 110)][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['SIZE'] > 7) | (part['MFGR'] != 'Manufacturer#4') & (part['CONTAINER'] == 'MED') & (part['RETAILPRICE'] > 907.303597539528) | (part['MFGR'].isin(['Manufacturer#1'])) | (part['P_NAME'].str.startswith('f')) | (part['CONTAINER'] == 'MED')][['RETAILPRICE', 'MFGR', 'TYPE']]

part[(part['TYPE'] == 'S') | (part['PT_COMMENT'].str.startswith('ss ')) & (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] > 950.3444344716329) | (part['SIZE'] > 37)][['P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) & (part['P_NAME'] == 'lem')][['BRAND', 'SIZE', 'PT_COMMENT', 'MFGR']].groupby(by=['BRAND']).agg('count')

part[(part['TYPE'].str.startswith('SMA')) | (part['P_NAME'].str.startswith('i')) | (part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] <= 1062.805983203246) & (part['BRAND'].isin(['Brand#43', 'Brand#12', 'Brand#14', 'Brand#23', 'Brand#42', 'Brand#55', 'Brand#15', 'Brand#24', 'Brand#32', 'Brand#22', 'Brand#13', 'Brand#25', 'Brand#31', 'Brand#41', 'Brand#53'])) & (part['P_PARTKEY'] != 108)].groupby(by=['MFGR', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('SMA')) | (part['TYPE'].str.startswith('E')) & (part['P_NAME'] != 'n') | (part['BRAND'].isin(['Brand#25', 'Brand#23', 'Brand#45', 'Brand#44', 'Brand#35', 'Brand#53'])) | (part['P_PARTKEY'] >= 148) & (part['P_NAME'] != 's') & (part['CONTAINER'] == 'MED') & (part['MFGR'] != 'Manufacturer#2')].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['BRAND', 'MFGR', 'TYPE', 'P_NAME', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'BRAND']).agg('count')

part[['BRAND', 'PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[['BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME']].groupby(by=['RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part[['CONTAINER', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND', 'TYPE']].groupby(by=['TYPE', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']].groupby(by=['BRAND', 'CONTAINER']).agg('count')

part[['PT_COMMENT', 'P_PARTKEY', 'BRAND', 'TYPE', 'SIZE']].groupby(by=['P_PARTKEY', 'SIZE', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['MFGR', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'TYPE', 'MFGR', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_PARTKEY', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('count')

part[['P_NAME', 'MFGR', 'TYPE', 'SIZE', 'PT_COMMENT']].groupby(by=['SIZE', 'PT_COMMENT', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'TYPE']].groupby(by=['TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

part[['SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']].groupby(by=['BRAND', 'MFGR']).agg('sum', numeric_only=True)

part[['SIZE', 'CONTAINER', 'MFGR', 'TYPE', 'BRAND', 'PT_COMMENT']].groupby(by=['TYPE', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part[['SIZE', 'P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

part[['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'MFGR']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'BRAND', 'TYPE']].groupby(by=['CONTAINER', 'BRAND']).agg('sum', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('count')

partsupp.merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['CONTAINER'] == 'JUMBO') | (part['TYPE'] == 'S') & (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] < 131) & (part['PT_COMMENT'] != 'r') & (part['PT_COMMENT'].str.startswith('q')) & (part['PT_COMMENT'] == 's') | (part['RETAILPRICE'] >= 1032.1108419893344) & (part['BRAND'].isin(['Brand#51', 'Brand#41', 'Brand#42', 'Brand#44'])) | (part['BRAND'] == 'Brand#25') & (part['PT_COMMENT'] != 'k')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#3') | (part['BRAND'].isin(['Brand#44', 'Brand#14', 'Brand#13', 'Brand#41', 'Brand#21', 'Brand#35', 'Brand#12', 'Brand#11', 'Brand#31', 'Brand#55', 'Brand#15', 'Brand#43', 'Brand#33'])) | (part['P_NAME'].str.startswith('c'))][['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] == 'f') & (part['P_PARTKEY'] == 32) & (part['RETAILPRICE'] >= 993.4824782750949) | (part['SIZE'] >= 38) & (part['PT_COMMENT'] != 'q') | (part['P_NAME'] != 'blu') & (part['SIZE'] < 5) & (part['PT_COMMENT'].str.startswith('o')) & (part['RETAILPRICE'] <= 944.2839988808076)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] > 1041.4589230588858) & (part['CONTAINER'].str.startswith('WRAP'))][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_NATIONKEY'] != 10) | (nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 9708.452426640917) | (supplier['S_ACCTBAL'] >= 5971.432184544631)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'j')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_COMMENT'] != ' sl') | (supplier['S_ACCTBAL'] >= 7352.557591081496)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 56) & (supplier['S_ADDRESS'].str.startswith(' ')) | (supplier['S_COMMENT'].str.startswith('h'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_PHONE'] != '3')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 4152)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 5928) & (partsupp['AVAILQTY'] == 7788) | (partsupp['PS_SUPPKEY'] == 2179) & (partsupp['SUPPLYCOST'] <= 79.40518591831034) | (partsupp['AVAILQTY'] < 838)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 2203) | (partsupp['PS_SUPPKEY'] <= 7405)].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 273) & (partsupp['SUPPLYCOST'] <= 962.457948626352) | (partsupp['AVAILQTY'] != 2029)].merge(part[['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 8164) & (partsupp['AVAILQTY'] < 2093)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 7928)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 1302) & (partsupp['PS_SUPPKEY'] > 6373) & (partsupp['PS_SUPPKEY'] > 4788) & (partsupp['AVAILQTY'] > 5915)].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 8877) & (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['SUPPLYCOST'] <= 594.4768872071974)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 13) | (partsupp['PS_PARTKEY'] == 1) | (partsupp['PS_SUPPKEY'] < 2228)].merge(part[(part['PT_COMMENT'] == 'o') | (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] > 17) & (part['TYPE'].str.startswith('E'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 17) | (partsupp['AVAILQTY'] > 2118) | (partsupp['SUPPLYCOST'] < 388.4536716712469) | (partsupp['SUPPLYCOST'] != 799.2658852296273)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 17) | (partsupp['PS_SUPPKEY'] != 442) | (partsupp['SUPPLYCOST'] >= 959.8350131850981)][['PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 21) & (partsupp['AVAILQTY'] < 7094)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 44) & (partsupp['PS_PARTKEY'] > 7)].merge(part[(part['P_PARTKEY'] != 159) & (part['RETAILPRICE'] != 1000.019515125473) | (part['BRAND'] == 'Brand#24') | (part['TYPE'] != 'SMA') | (part['BRAND'] != 'Brand#54')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 11) | (partsupp['SUPPLYCOST'] == 471.9700681455828) | (partsupp['PS_SUPPKEY'] <= 5810) & (partsupp['P_COMMENT'].str.startswith('bli'))].merge(part[(part['P_PARTKEY'] < 154) | (part['SIZE'] < 2) & (part['SIZE'] < 7)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 17) | (partsupp['PS_PARTKEY'] >= 16) | (partsupp['P_COMMENT'] != ' th') | (partsupp['SUPPLYCOST'] == 754.3111769212123) | (partsupp['PS_SUPPKEY'] >= 4237)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 32) & (partsupp['PS_PARTKEY'] == 36) & (partsupp['SUPPLYCOST'] == 855.0812882924562)].merge(part[(part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] > 930.45673934684) | (part['SIZE'] >= 31) | (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 12)].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] <= 20)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1046) | (partsupp['PS_PARTKEY'] < 24) & (partsupp['PS_SUPPKEY'] != 1407) | (partsupp['PS_SUPPKEY'] != 2061) | (partsupp['SUPPLYCOST'] >= 812.1708146463852)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] > 5653) | (partsupp['P_COMMENT'] == 'v')][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['PS_PARTKEY'] < 11)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'CONTAINER', 'BRAND']).agg('count')

partsupp[(partsupp['P_COMMENT'] == ' ') & (partsupp['SUPPLYCOST'] <= 899.2198956479008) | (partsupp['PS_SUPPKEY'] >= 617)].merge(part[['P_PARTKEY', 'CONTAINER', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == ',') | (partsupp['PS_PARTKEY'] <= 3) & (partsupp['SUPPLYCOST'] > 741.9740853810353) | (partsupp['SUPPLYCOST'] == 117.14724410879275)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'd') & (partsupp['AVAILQTY'] >= 6811)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['P_COMMENT'] == 's') | (partsupp['SUPPLYCOST'] == 951.8547399968905) & (partsupp['SUPPLYCOST'] == 181.22537126603874) & (partsupp['PS_SUPPKEY'] >= 3083)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('p'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 348.09348944318054)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 313.34567924699104) & (partsupp['PS_PARTKEY'] != 46) | (partsupp['PS_SUPPKEY'] > 2735)].merge(part[(part['RETAILPRICE'] < 1053.2738273348443) & (part['SIZE'] != 16) & (part['P_PARTKEY'] <= 130) | (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 250.2885979231412) | (partsupp['P_COMMENT'] == 'c') & (partsupp['SUPPLYCOST'] > 246.209802499135)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] >= 900.9981797500913) | (partsupp['PS_PARTKEY'] <= 40) | (partsupp['PS_SUPPKEY'] >= 3958) & (partsupp['AVAILQTY'] <= 469)].merge(part[(part['TYPE'] == 'STA') | (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] > 926.2307454192803)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['P_NAME', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'E')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] >= 2) | (region['R_NAME'] != 'M')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'AME') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] != 'o') | (nation['N_NAME'] == 'R') | (nation['N_COMMENT'] == 'a')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] == 1) | (nation['N_NATIONKEY'] < 21)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_NATIONKEY'] != 18) | (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] >= 16)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 5)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 0) & (nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'U')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] > 4)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= -446.65337153699954) & (supplier['S_ACCTBAL'] >= 2763.4141830174067) & (supplier['S_ACCTBAL'] < 4728.3685918191) | (supplier['S_PHONE'].str.startswith('14-'))][['S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 9765.573482836842) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 141) | (supplier['S_SUPPKEY'] != 73) | (supplier['S_NATIONKEY'] != 15)][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_ACCTBAL'] == 8765.674299938593) & (supplier['S_NATIONKEY'] >= 17)][['S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 5236.410157951616) & (supplier['S_ACCTBAL'] == 6026.467901086725) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] <= 5985.580558279528)].groupby(by=['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'b') | (supplier['S_SUPPKEY'] <= 17) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '28-') | (supplier['S_ACCTBAL'] > -220.4049088379495)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_ADDRESS'] != 'H') & (supplier['S_NATIONKEY'] <= 16)][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'v') | (supplier['S_NATIONKEY'] > 2) & (supplier['S_COMMENT'] == 'x') | (supplier['S_PHONE'] != '3')].merge(nation[(nation['N_COMMENT'] != 'e')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_COMMENT'] != '!') & (supplier['S_NATIONKEY'] > 13) & (supplier['S_PHONE'] == '32-')].merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] != 2) | (nation['N_REGIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'e')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_ADDRESS'] != 'o') & (supplier['S_COMMENT'] != 'd') & (supplier['S_NATIONKEY'] <= 2) | (supplier['S_SUPPKEY'] > 167)].groupby(by=['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_ADDRESS'].str.startswith('E')) & (supplier['S_COMMENT'].str.startswith('v')) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'p') | (supplier['S_NATIONKEY'] < 3)].groupby(by=['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 't') | (supplier['S_ACCTBAL'] > 9336.209407806715) | (supplier['S_NATIONKEY'] > 9) & (supplier['S_ADDRESS'] != 'c')][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'w') | (supplier['S_NATIONKEY'] != 6) & (supplier['S_ADDRESS'] != 's')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 3353.371839007649) & (supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] != 5551.116396269023) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] < 21)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']].groupby(by=['S_COMMENT', 'S_NAME', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 20) | (supplier['S_ACCTBAL'] < 7001.103081922661) | (supplier['S_NATIONKEY'] != 12) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] == 23) | (supplier['S_SUPPKEY'] < 11) & (supplier['S_COMMENT'] == 'o')][['S_COMMENT', 'S_NAME', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] > 9249.04917679038) & (supplier['S_NATIONKEY'] < 3) | (supplier['S_SUPPKEY'] <= 77) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 1)][['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'] == 'h') & (supplier['S_ADDRESS'] != '9') & (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] == '28-')].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_COMMENT'] == 'the') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('2'))][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_ACCTBAL'] != 1643.981268992514) & (supplier['S_ACCTBAL'] > 1058.5270425624963) | (supplier['S_ACCTBAL'] > 737.5679239605065)].groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ADDRESS'].str.startswith('7')) | (supplier['S_ACCTBAL'] == 9273.409112713007) & (supplier['S_SUPPKEY'] != 26) & (supplier['S_SUPPKEY'] < 190)].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_PHONE'] != '32-')][['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_SUPPKEY'] < 177) & (supplier['S_ACCTBAL'] > 6684.334506917332)].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-'))].merge(nation[(nation['N_NATIONKEY'] >= 17)].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 127) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_PHONE'] == '32-')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] == 195) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] < 126)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 23) | (supplier['S_COMMENT'] == 'j') & (supplier['S_ADDRESS'] == 'N') & (supplier['S_NATIONKEY'] < 7) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'N')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] > 109) | (supplier['S_SUPPKEY'] == 49) & (supplier['S_NATIONKEY'] > 3) & (supplier['S_PHONE'] != '2')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 153) & (supplier['S_ADDRESS'].str.startswith('p')) | (supplier['S_ACCTBAL'] != -287.5702436379639) & (supplier['S_NATIONKEY'] > 16) | (supplier['S_NAME'] != 'S')].groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 25) | (supplier['S_COMMENT'] != 'e')][['S_NAME', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] > 21)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] == 0) | (nation['N_NATIONKEY'] == 21)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE', 'S_SUPPKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_COMMENT'] == 's') | (nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'].str.startswith('G'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'P')].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'A')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 8) | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'R')].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8101.626919698121) & (customer['C_ACCTBAL'] <= 4127.859307202909)][['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8493.459524454482) | (customer['C_PHONE'] != '3')][['C_NAME', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 5515.568631292511) & (customer['C_ADDRESS'] == 'D')][['C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_PHONE', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 3303.3540659844057) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '18-')][['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 6213.8327219787525) | (customer['C_CUSTKEY'] < 67) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'k') & (customer['C_ACCTBAL'] <= 7983.161688151544) & (customer['C_NATIONKEY'] > 0) & (customer['C_PHONE'] != '13-')].groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 3382.09518904532) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE'])) | (customer['C_PHONE'].str.startswith('3')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'l') & (customer['C_COMMENT'].str.startswith('l'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'h')].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] > 23) | (nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] != 'r')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'd') | (customer['C_NATIONKEY'] == 13) & (customer['C_CUSTKEY'] >= 26) | (customer['C_CUSTKEY'] != 92) & (customer['C_CUSTKEY'] != 76) | (customer['C_PHONE'] == '18-') & (customer['C_COMMENT'] == 't') & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'y') & (customer['C_CUSTKEY'] != 12) & (customer['C_COMMENT'] != 'l') | (customer['C_NATIONKEY'] == 11) & (customer['C_ACCTBAL'] >= 2130.6214549143947)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'a') & (customer['C_COMMENT'] == 'w') | (customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'] != 'i') | (customer['C_NATIONKEY'] == 11) & (customer['C_CUSTKEY'] == 66)].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] != 3) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] != '25-') & (customer['C_PHONE'] == '2') | (customer['C_COMMENT'] != 'n') & (customer['C_NATIONKEY'] == 19)][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] < 8) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 87) | (customer['C_ADDRESS'] == 'v') | (customer['C_NATIONKEY'] >= 3) & (customer['C_CUSTKEY'] == 82) | (customer['MKTSEGMENT'] != 'BUILDING')][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']]

customer[(customer['C_CUSTKEY'] <= 39) & (customer['C_ACCTBAL'] < 8610.03171536751) & (customer['C_NATIONKEY'] == 6)][['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 3) & (customer['C_CUSTKEY'] >= 53) | (customer['C_ADDRESS'] == 'e') & (customer['C_COMMENT'] != 'w') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'].str.startswith('Y'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= -423.16308613297014) | (customer['C_ACCTBAL'] != 9404.909891524221) & (customer['C_ADDRESS'].str.startswith('R')) & (customer['C_ADDRESS'].str.startswith('L')) | (customer['C_COMMENT'] == ',')].groupby(by=['C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 4)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_COMMENT'].str.startswith(' ')) & (customer['C_ADDRESS'] == 'g') | (customer['C_NATIONKEY'] >= 18)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '27-') | (customer['C_NATIONKEY'] >= 7) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('18-'))][['C_ADDRESS', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_NAME']).agg('count')

customer[(customer['C_PHONE'] != '3') & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] > 27) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_CUSTKEY'] != 91)][['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] < -768.0307788762259) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_ACCTBAL'] <= 8149.00272293136) | (customer['C_NATIONKEY'] <= 7) & (customer['C_ACCTBAL'] <= 1111.3748781957502)].groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] != 11) & (customer['C_NATIONKEY'] >= 22)][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']).agg('count')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_CUSTKEY'] != 129916) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] > 35108)][['ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] == ',')].merge(customer[(customer['C_PHONE'] == '2')][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] < 50208.632796140606) & (orders['SHIPPRIORITY'] > 0)][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'BRAND']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 40) | (partsupp['SUPPLYCOST'] < 860.1091185144182)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'k') | (partsupp['AVAILQTY'] >= 1151) | (partsupp['PS_SUPPKEY'] <= 7469) & (partsupp['P_COMMENT'] == 'n') | (partsupp['PS_PARTKEY'] >= 19)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'l') | (partsupp['PS_SUPPKEY'] == 7073) | (partsupp['P_COMMENT'] != 'p')][['SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['QUANTITY'] < 7) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['TAX'] == 0.028425163378231533) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['TAX'] < 0.04695649112438109) & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPMODE'].isin(['AIR'])) | (lineitem['TAX'] != 0.005709896906339705)][['DISCOUNT', 'EXTENDEDPRICE']]

lineitem[(lineitem['DISCOUNT'] != 0.05681205020182796)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 46) | (partsupp['SUPPLYCOST'] <= 514.0339660820556)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.040636705244135166) | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['L_PARTKEY'] != 12123) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N']))].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 65588.112096366) | (lineitem['TAX'] > 0.02625555215591091) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['RETURNFLAG'] != 'R') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_SUPPKEY'] > 64)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 45978.116865375094) | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['DISCOUNT'] != 0.05111924124075356) | (lineitem['L_PARTKEY'] >= 101839) & (lineitem['L_SUPPKEY'] > 8092) | (lineitem['L_PARTKEY'] <= 111048) & (lineitem['L_SUPPKEY'] > 8397) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['QUANTITY']]

lineitem[(lineitem['LINENUMBER'] < 1) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['EXTENDEDPRICE'] == 42723.361840315636) | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['LINENUMBER'] >= 4) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['DISCOUNT'] > 0.026662645764756812) | (lineitem['L_PARTKEY'] < 178653) | (lineitem['L_SUPPKEY'] == 9170) & (lineitem['L_COMMENT'].str.startswith('i'))][['RETURNFLAG']]

lineitem[(lineitem['L_COMMENT'].str.startswith('s. ')) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['SHIPINSTRUCT'] != 'NONE')][['RECEIPTDATE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY', 'L_PARTKEY']]

lineitem[(lineitem['QUANTITY'] != 31) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['EXTENDEDPRICE'] >= 64971.786306057766) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RECEIPTDATE'] == '1998-11-06')][['COMMITDATE', 'RECEIPTDATE', 'LINESTATUS', 'DISCOUNT', 'TAX', 'EXTENDEDPRICE']]

lineitem[(lineitem['QUANTITY'] < 12) & (lineitem['QUANTITY'] > 32) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['TAX'] != 0.05168383606787508) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['QUANTITY'] != 43) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_SUPPKEY'] >= 9126)].groupby(by=['SHIPMODE', 'LINESTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 48) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['LINENUMBER'] == 4) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['DISCOUNT'] < 0.040446213286862924) & (lineitem['TAX'] >= 0.07273834260179303) & (lineitem['L_ORDERKEY'] >= 57) & (lineitem['EXTENDEDPRICE'] <= 67996.7271771048)].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 6) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['L_ORDERKEY'] <= 150)][['SHIPDATE', 'RETURNFLAG', 'DISCOUNT', 'TAX']].groupby(by=['DISCOUNT']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['QUANTITY'] >= 39) & (lineitem['L_SUPPKEY'] <= 8056) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['EXTENDEDPRICE'] < 78176.16754668424) | (lineitem['L_COMMENT'] == '.')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_ORDERKEY'] >= 33) & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['L_COMMENT'] == ' re') | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['EXTENDEDPRICE'] == 69632.2332036349) & (lineitem['L_SUPPKEY'] != 7389)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['DISCOUNT'] >= 0.08170780067872396) & (lineitem['L_SUPPKEY'] < 2193)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG', 'DISCOUNT', 'RECEIPTDATE', 'QUANTITY']].groupby(by=['RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'TAX', 'SHIPDATE', 'COMMITDATE', 'RETURNFLAG', 'LINENUMBER']].groupby(by=['SHIPDATE', 'COMMITDATE', 'TAX', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'RETURNFLAG']].groupby(by=['SHIPINSTRUCT', 'RECEIPTDATE', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'SHIPMODE', 'L_PARTKEY', 'SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'o')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'u')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'i')].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] == 't')].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] != 'p') & (nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'] != 'n')][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('r'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] == 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] >= 6) & (nation['N_NAME'] == 'A')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] == 5) | (nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] != 13) & (nation['N_NATIONKEY'] < 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] < 18) | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 1) & (nation['N_NATIONKEY'] != 21) | (nation['N_COMMENT'] == 'v')].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 9)].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 7)].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 10) & (nation['N_NATIONKEY'] == 4) | (nation['N_NATIONKEY'] > 14) & (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 10) | (nation['N_NAME'] != 'K')].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 15) & (nation['N_NAME'] != 'F') & (nation['N_NATIONKEY'] != 0)].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 8) & (nation['N_NATIONKEY'] <= 10)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] >= 23)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'P') | (nation['N_NAME'] == 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] >= 1) | (nation['N_NATIONKEY'] < 14)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'] == 'p')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] > 20)].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] <= 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] != 't') & (nation['N_NAME'].str.startswith('P')) & (nation['N_NATIONKEY'] != 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'].str.startswith('t'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] >= 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 5474.708853513297) & (customer['C_ADDRESS'].str.startswith('m')) | (customer['C_PHONE'] == '18-') | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] == 16)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'D') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] >= 49) | (customer['C_COMMENT'] == 'u') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'].str.startswith('F'))][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] != 19)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

orders.merge(customer[(customer['C_PHONE'] != '2') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 9) | (customer['C_CUSTKEY'] == 29) | (customer['C_COMMENT'].str.startswith('t')) | (customer['C_ACCTBAL'] != 2084.264001968255)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] <= 4) & (customer['C_NATIONKEY'] > 5) & (customer['C_CUSTKEY'] >= 41) | (customer['C_ADDRESS'] != 'T') & (customer['C_COMMENT'].str.startswith('h'))][['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_ORDERKEY'] > 325) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C')].groupby(by=['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] <= 276535.3352416898)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] != 140874.52331888035) | (orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] == 'd')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']]

orders[(orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] != 60799)][['SHIPPRIORITY', 'CLERK']].groupby(by=['CLERK', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_ADDRESS'] == 'c')][['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'] != 'P')][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('count')

orders[(orders['O_COMMENT'] == ',') | (orders['TOTALPRICE'] < 169756.0253230376) & (orders['O_CUSTKEY'] <= 91453)].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 674) | (orders['O_COMMENT'].str.startswith('w')) & (orders['TOTALPRICE'] >= 329267.15930521965) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))][['O_ORDERKEY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 760) | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] == 116) | (orders['O_ORDERKEY'] <= 460) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERSTATUS'] == 'O') | (orders['O_CUSTKEY'] < 129058)][['TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] == 150) & (orders['O_COMMENT'] == 'l') & (orders['O_COMMENT'].str.startswith('z')) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] != 324305.76657604997) & (orders['O_ORDERKEY'] >= 125) | (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] == 75828.28604665771) & (orders['O_COMMENT'] != 'egu') | (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] != 'C')][['ORDERSTATUS', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH']))][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['TOTALPRICE'] != 81329.08497663397) | (orders['ORDERDATE'] != '1992-01-13') & (orders['TOTALPRICE'] == 48595.40660823374)].merge(customer[(customer['C_ADDRESS'].str.startswith('M'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 289890.33425317303) & (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW']))][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY']]

orders[(orders['TOTALPRICE'] == 28471.155218477914) & (orders['O_CUSTKEY'] < 79806) | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 211525.0749031205) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['CLERK', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']].groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].groupby(by=['SHIPPRIORITY', 'CLERK']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'CLERK', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY']].groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'CLERK', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].groupby(by=['SHIPPRIORITY', 'CLERK']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#13') | (part['TYPE'].str.startswith('STA')) & (part['P_NAME'] != 'w') & (part['P_NAME'] != 'g')][['MFGR', 'CONTAINER', 'SIZE']].groupby(by=['CONTAINER']).agg('count')

part[(part['BRAND'] != 'Brand#24') & (part['P_PARTKEY'] < 117) | (part['MFGR'].isin(['Manufacturer#2'])) & (part['TYPE'] != 'S') | (part['TYPE'] == 'L') | (part['SIZE'] < 26)].groupby(by=['P_PARTKEY', 'CONTAINER', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#53') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1'])) | (part['MFGR'] != 'Manufacturer#2') | (part['SIZE'] >= 11)][['MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#55') | (part['CONTAINER'] == 'SM') & (part['PT_COMMENT'] == 'x') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) & (part['P_PARTKEY'] < 196) | (part['PT_COMMENT'] != 'd')][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']]

part[(part['CONTAINER'] != 'WRAP') & (part['P_PARTKEY'] > 77) | (part['CONTAINER'] != 'SM') & (part['TYPE'] == 'L') & (part['P_PARTKEY'] < 121) & (part['PT_COMMENT'] == ' fi') & (part['TYPE'] == 'P') | (part['TYPE'] != 'P')].groupby(by=['CONTAINER', 'TYPE']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) | (part['RETAILPRICE'] != 986.6946019196424) | (part['PT_COMMENT'] == 'i') & (part['PT_COMMENT'] != 'n') | (part['P_PARTKEY'] == 111) & (part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] <= 926.6617286384459) | (part['PT_COMMENT'].str.startswith('ss '))].groupby(by=['SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] >= 913.4116133560653) | (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] < 958.2980321646348) & (part['PT_COMMENT'].str.startswith('o')) & (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] == 20)][['BRAND', 'TYPE', 'SIZE', 'CONTAINER']]

part[(part['MFGR'] == 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#4'])) & (part['TYPE'] == 'M')][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY']]

part[(part['MFGR'] == 'Manufacturer#5') | (part['CONTAINER'] == 'JUMBO') & (part['RETAILPRICE'] == 935.3789088807207) | (part['PT_COMMENT'] == ' fi')][['SIZE', 'P_PARTKEY', 'CONTAINER']].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('WRAP')) | (part['P_NAME'].str.startswith('h')) | (part['CONTAINER'].str.startswith('SM')) & (part['TYPE'] != 'SMA') | (part['RETAILPRICE'] != 1017.2555841519588) & (part['P_PARTKEY'] < 9)][['PT_COMMENT', 'SIZE', 'BRAND', 'CONTAINER']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) & (part['CONTAINER'] != 'SM') & (part['PT_COMMENT'] == 'kag') & (part['P_PARTKEY'] <= 26) | (part['PT_COMMENT'] == 's') | (part['PT_COMMENT'].str.startswith('i')) & (part['P_PARTKEY'] != 105)][['SIZE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['PT_COMMENT'] != 'y') | (part['RETAILPRICE'] == 923.3153155194551) & (part['P_NAME'].str.startswith('c')) & (part['P_PARTKEY'] <= 9) | (part['MFGR'] != 'Manufacturer#2')][['SIZE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['PT_COMMENT'].str.startswith('!')) & (part['SIZE'] < 15) | (part['SIZE'] <= 13) & (part['P_NAME'].str.startswith('s')) | (part['TYPE'] != 'SMA')].groupby(by=['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'CONTAINER']).agg('count')

part[(part['PT_COMMENT'].str.startswith('q')) | (part['TYPE'] == 'L') & (part['MFGR'] != 'Manufacturer#4') | (part['P_PARTKEY'] >= 1) | (part['RETAILPRICE'] != 939.514832796994) & (part['RETAILPRICE'] >= 1024.3144862991167) & (part['BRAND'] == 'Brand#15') & (part['P_PARTKEY'] <= 101)][['BRAND', 'P_NAME', 'P_PARTKEY']]

part[(part['P_NAME'] != 'g') | (part['P_NAME'] != 'o')][['P_NAME', 'MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_NAME', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'h') & (part['BRAND'] == 'Brand#52')][['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[(part['P_NAME'] == 'cor') & (part['RETAILPRICE'] >= 915.2650763232593) & (part['BRAND'] != 'Brand#53') | (part['RETAILPRICE'] < 1083.8337005856904) | (part['P_NAME'] != 'd')][['BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE', 'TYPE', 'MFGR']]

part[(part['P_NAME'] == 'f') & (part['TYPE'] == 'SMA') & (part['PT_COMMENT'] == 'x') & (part['P_PARTKEY'] < 102) & (part['P_PARTKEY'] >= 126) | (part['PT_COMMENT'].str.startswith('n'))].groupby(by=['MFGR', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'y') | (part['BRAND'].isin(['Brand#31', 'Brand#14', 'Brand#52', 'Brand#43', 'Brand#15', 'Brand#22', 'Brand#54', 'Brand#24', 'Brand#35', 'Brand#11', 'Brand#25', 'Brand#34', 'Brand#51'])) & (part['PT_COMMENT'].str.startswith('n')) | (part['BRAND'].isin(['Brand#35', 'Brand#34', 'Brand#55', 'Brand#23', 'Brand#21', 'Brand#32', 'Brand#13', 'Brand#31', 'Brand#52', 'Brand#14', 'Brand#33', 'Brand#54', 'Brand#51', 'Brand#53', 'Brand#15', 'Brand#24', 'Brand#12', 'Brand#45', 'Brand#44', 'Brand#11', 'Brand#25', 'Brand#43', 'Brand#22', 'Brand#42'])) & (part['P_PARTKEY'] != 154) & (part['PT_COMMENT'] == ' fi')].groupby(by=['TYPE', 'PT_COMMENT', 'CONTAINER', 'BRAND']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] > 178) & (part['BRAND'] == 'Brand#13') & (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] >= 978.9073199415674) | (part['BRAND'] != 'Brand#11') & (part['TYPE'].str.startswith('L')) | (part['BRAND'] != 'Brand#24') & (part['P_PARTKEY'] != 126)].groupby(by=['P_NAME', 'RETAILPRICE']).agg('count')

part[(part['P_PARTKEY'] >= 70) | (part['SIZE'] != 14) | (part['TYPE'] != 'SMA')][['MFGR', 'P_PARTKEY', 'CONTAINER', 'BRAND']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['P_PARTKEY'] >= 82) | (part['MFGR'] != 'Manufacturer#4') & (part['P_PARTKEY'] != 106) | (part['PT_COMMENT'] != 'k') & (part['PT_COMMENT'] != 'p') | (part['PT_COMMENT'] == 's')][['TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'MFGR']]

part[(part['RETAILPRICE'] != 941.9825498753219) | (part['P_NAME'] != 'm')][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']]

part[(part['RETAILPRICE'] != 954.7800450218939) & (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'] != 'b') & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] != 'Brand#23') | (part['P_NAME'].str.startswith('f')) | (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] == 'm') & (part['SIZE'] == 11)][['CONTAINER', 'RETAILPRICE']]

part[(part['RETAILPRICE'] < 946.8156193871256) | (part['P_NAME'] == 'w') | (part['RETAILPRICE'] >= 1061.0677831587384) & (part['PT_COMMENT'] == 'm') & (part['SIZE'] == 30) | (part['TYPE'] != 'L')].groupby(by=['CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] <= 31) & (part['P_PARTKEY'] >= 181) | (part['P_PARTKEY'] < 101) & (part['P_NAME'].str.startswith('y')) | (part['P_NAME'] == 'bis') | (part['SIZE'] < 18) | (part['TYPE'].str.startswith('E'))].groupby(by=['SIZE', 'RETAILPRICE', 'MFGR']).agg('count')

part[(part['SIZE'] == 29) & (part['MFGR'].isin(['Manufacturer#1'])) | (part['P_PARTKEY'] < 131) & (part['MFGR'] != 'Manufacturer#1') | (part['PT_COMMENT'] != 'l') | (part['P_NAME'].str.startswith('a'))].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'MFGR']).agg('count')

part[(part['TYPE'] != 'P') | (part['P_NAME'] == 'lin') | (part['TYPE'] == 'S')][['MFGR', 'P_NAME', 'P_PARTKEY']].groupby(by=['MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'S') & (part['P_PARTKEY'] <= 67) | (part['RETAILPRICE'] >= 928.0533084454779) | (part['TYPE'] != 'STA') | (part['TYPE'] == 'P') | (part['PT_COMMENT'] != 'ss ') & (part['RETAILPRICE'] > 1011.484034001038) | (part['P_PARTKEY'] > 12)][['RETAILPRICE', 'CONTAINER', 'BRAND']]

part[(part['TYPE'] == 'S') & (part['RETAILPRICE'] > 1057.5000374660144) | (part['P_NAME'].str.startswith('lem')) & (part['P_NAME'] != 'c') | (part['BRAND'] != 'Brand#52') & (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'] != 's')].groupby(by=['PT_COMMENT', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) & (part['P_PARTKEY'] < 96) | (part['SIZE'] > 4) & (part['P_PARTKEY'] != 147) & (part['P_NAME'] == 'h') | (part['RETAILPRICE'] < 909.3411075546475)][['MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('SMA')) | (part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#44', 'Brand#14', 'Brand#43', 'Brand#51', 'Brand#41', 'Brand#42', 'Brand#11', 'Brand#55', 'Brand#23', 'Brand#53', 'Brand#12', 'Brand#45', 'Brand#15', 'Brand#54', 'Brand#21', 'Brand#13', 'Brand#32', 'Brand#34', 'Brand#33']))][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[['BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'P_NAME', 'MFGR']].groupby(by=['P_PARTKEY', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR', 'BRAND', 'TYPE']].groupby(by=['BRAND', 'MFGR', 'SIZE']).agg('sum', numeric_only=True)

part[['CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER']].groupby(by=['BRAND', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[['P_NAME', 'BRAND', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE']].groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['TYPE']).agg('count')

part[['SIZE', 'P_NAME', 'CONTAINER', 'MFGR', 'PT_COMMENT']].groupby(by=['P_NAME', 'MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['BRAND']).agg('count')

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'BRAND', 'TYPE']].groupby(by=['SIZE', 'BRAND', 'P_NAME', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'BRAND', 'TYPE']].groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND']).agg('mean', numeric_only=True)

part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[['TYPE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[['TYPE', 'SIZE', 'BRAND', 'P_NAME', 'P_PARTKEY']].groupby(by=['TYPE', 'P_NAME', 'P_PARTKEY', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['BRAND'].isin(['Brand#52', 'Brand#55', 'Brand#32', 'Brand#34', 'Brand#15', 'Brand#43', 'Brand#12', 'Brand#21', 'Brand#53', 'Brand#35', 'Brand#41', 'Brand#31', 'Brand#54', 'Brand#11', 'Brand#13', 'Brand#45', 'Brand#25', 'Brand#44', 'Brand#33', 'Brand#51', 'Brand#24', 'Brand#23'])) | (part['PT_COMMENT'] != 'b') | (part['CONTAINER'] != 'MED')][['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('MED')) & (part['BRAND'] != 'Brand#44') | (part['SIZE'] > 23) | (part['RETAILPRICE'] <= 943.8315828866728) | (part['PT_COMMENT'].str.startswith('!')) & (part['P_NAME'] == 'bis')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 19) & (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 3019.520010987917) | (supplier['S_ADDRESS'] != 'f') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 5603.413126542705) & (supplier['S_COMMENT'].str.startswith('a')) | (supplier['S_ADDRESS'] != 'k') & (supplier['S_ADDRESS'] != 'B')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 's') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] == 87.78307374084307) | (supplier['S_ACCTBAL'] <= 7808.855521301596) & (supplier['S_COMMENT'] != 'a') | (supplier['S_PHONE'] == '32-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'v') | (supplier['S_PHONE'] == '14-') | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'W') & (supplier['S_ACCTBAL'] >= 7745.773369205376)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NATIONKEY'] < 15) & (supplier['S_COMMENT'].str.startswith('h'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 146) | (supplier['S_COMMENT'] == 'v') | (supplier['S_SUPPKEY'] < 119) & (supplier['S_PHONE'] != '17-') & (supplier['S_PHONE'] != '28-') & (supplier['S_ACCTBAL'] == 4276.023955176568) | (supplier['S_NATIONKEY'] >= 14)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 7832) | (partsupp['P_COMMENT'] == ',') | (partsupp['P_COMMENT'] == 'e') | (partsupp['P_COMMENT'] != 'a')].merge(supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] <= 23) | (supplier['S_ADDRESS'] != 'B') | (supplier['S_ACCTBAL'] >= 4055.0547953404775)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 9291) | (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['AVAILQTY'] != 7620) & (partsupp['SUPPLYCOST'] > 369.5091700103202)].merge(part[(part['PT_COMMENT'] == 's') & (part['BRAND'].isin(['Brand#15', 'Brand#22', 'Brand#12', 'Brand#34', 'Brand#35', 'Brand#24', 'Brand#54', 'Brand#52', 'Brand#32', 'Brand#11', 'Brand#45', 'Brand#55'])) | (part['PT_COMMENT'] == 'a') & (part['CONTAINER'] == 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 4637) & (partsupp['P_COMMENT'] == 'k') & (partsupp['SUPPLYCOST'] > 908.6839299689447)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 8) | (partsupp['PS_SUPPKEY'] == 5545)].merge(supplier[(supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_SUPPKEY'] >= 192)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] == 14)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 15) & (partsupp['PS_PARTKEY'] < 37) & (partsupp['SUPPLYCOST'] > 725.4779782264529) & (partsupp['PS_PARTKEY'] > 24)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6427) & (partsupp['SUPPLYCOST'] != 557.5209743746683)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 2892) | (partsupp['AVAILQTY'] != 7308) & (partsupp['PS_PARTKEY'] == 16)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 5548) & (partsupp['AVAILQTY'] != 9898) & (partsupp['AVAILQTY'] >= 5394)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4630) & (partsupp['P_COMMENT'] == 'l')].merge(part[(part['P_NAME'] != 'lin') | (part['P_PARTKEY'] < 165)][['TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != ';') | (partsupp['P_COMMENT'].str.startswith('a')) & (partsupp['AVAILQTY'] < 2230) & (partsupp['AVAILQTY'] >= 9836)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'y') | (partsupp['PS_SUPPKEY'] == 452)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'g')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 't') | (partsupp['PS_SUPPKEY'] == 917) & (partsupp['PS_PARTKEY'] == 10) | (partsupp['PS_SUPPKEY'] < 3203) & (partsupp['P_COMMENT'].str.startswith('ly '))].merge(part[['P_NAME', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['SUPPLYCOST'] < 286.3778413171593) | (partsupp['P_COMMENT'] == 'j')][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 346.9042766844876)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'P_NAME', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 106.5278188181742)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#34', 'Brand#55', 'Brand#53', 'Brand#31', 'Brand#15', 'Brand#24', 'Brand#52', 'Brand#42', 'Brand#11', 'Brand#43', 'Brand#33', 'Brand#14', 'Brand#54', 'Brand#25', 'Brand#13', 'Brand#21', 'Brand#44'])) | (part['PT_COMMENT'] != 'b') & (part['P_NAME'].str.startswith('i')) & (part['P_NAME'] == 's')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY']).agg('count')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 's') | (part['RETAILPRICE'] >= 972.4747532736908) & (part['TYPE'] != 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['BRAND', 'P_PARTKEY', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 1) & (nation['N_NATIONKEY'] < 17) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'].str.startswith('y'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 11) | (part['P_PARTKEY'] == 1) | (part['RETAILPRICE'] != 1026.0878311174827) & (part['P_PARTKEY'] >= 160) | (part['P_NAME'] == 'i') | (part['BRAND'].isin(['Brand#31', 'Brand#53', 'Brand#32', 'Brand#42', 'Brand#21']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'AME') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'M') & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] > 20)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] < 23)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'C')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] >= 13)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'].str.startswith('K'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] != 'y')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] != 'S')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 13) | (nation['N_NATIONKEY'] <= 18)].merge(region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 4) & (nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] == 'i')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] > 14) | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] <= 23)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] != 12) & (nation['N_NATIONKEY'] >= 22) & (nation['N_NAME'] != 'J')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6552.748174355061) | (supplier['S_ADDRESS'] != 't') & (supplier['S_NATIONKEY'] <= 21) & (supplier['S_PHONE'] == '3') & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '3')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 3717.3170384804807) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 3997.4814967855973)].merge(nation[(nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 4445.73967081032) | (supplier['S_PHONE'] != '1') & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_PHONE'] != '28-') & (supplier['S_ACCTBAL'] == -845.2385955916799) | (supplier['S_COMMENT'] == 'g') | (supplier['S_ADDRESS'].str.startswith('c'))][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[(supplier['S_ACCTBAL'] >= 6248.719450514848) | (supplier['S_PHONE'] != '2') | (supplier['S_ACCTBAL'] >= -712.8296829970197) | (supplier['S_ADDRESS'] != 'r') | (supplier['S_COMMENT'] != 'w') & (supplier['S_ACCTBAL'] > -797.4647265675923)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'L') & (supplier['S_ACCTBAL'] >= 6856.339753044087) & (supplier['S_ACCTBAL'] <= 9045.215380197274) | (supplier['S_PHONE'] == '17-') | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'].str.startswith('c'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'V') | (supplier['S_SUPPKEY'] == 82) & (supplier['S_SUPPKEY'] == 199) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] < 0)][['S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'h') & (supplier['S_ACCTBAL'] != 8781.163372559471) | (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'j') & (supplier['S_ACCTBAL'] >= 8686.775545788203) & (supplier['S_ADDRESS'].str.startswith('z')) & (supplier['S_NATIONKEY'] <= 17) & (supplier['S_SUPPKEY'] > 24) | (supplier['S_NATIONKEY'] == 0)][['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] != 4) & (supplier['S_PHONE'] == '2') & (supplier['S_PHONE'] != '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_COMMENT'] != ',')][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].groupby(by=['S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] > 6737.951228670699) | (supplier['S_ACCTBAL'] > 5914.142138477478) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= -254.21181908094434) & (supplier['S_SUPPKEY'] == 141)][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 5775.130521370365) & (supplier['S_PHONE'] == '2') & (supplier['S_ACCTBAL'] != 8772.68117874965) & (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_NATIONKEY'] >= 18)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 5569.97801097539) & (supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('1'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NATIONKEY'] <= 16) & (supplier['S_ADDRESS'] != 'n') & (supplier['S_PHONE'] != '28-')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_ACCTBAL'] >= 2507.6510402939884) & (supplier['S_PHONE'] == '2') | (supplier['S_ACCTBAL'] <= -563.4265983510697) | (supplier['S_SUPPKEY'] > 163) | (supplier['S_SUPPKEY'] > 151)].groupby(by=['S_COMMENT', 'S_PHONE', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 185) & (supplier['S_NATIONKEY'] != 14) | (supplier['S_COMMENT'] == 'j') | (supplier['S_COMMENT'] != 'd') | (supplier['S_SUPPKEY'] < 153)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'T') & (supplier['S_SUPPKEY'] <= 99) | (supplier['S_ACCTBAL'] <= -486.16094423083786)].merge(nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'y') & (supplier['S_NATIONKEY'] != 1) & (supplier['S_COMMENT'] != 'x')][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == '6')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'g') & (supplier['S_ACCTBAL'] == 7363.907776848032) & (supplier['S_ACCTBAL'] > 1970.9524777206186) & (supplier['S_ACCTBAL'] <= 9654.57107948866) | (supplier['S_ACCTBAL'] < 891.4615684775135)][['S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] == -797.5795477022228) & (supplier['S_PHONE'] == '2') & (supplier['S_ACCTBAL'] > 5330.759546434842)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] > 14)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 23) & (supplier['S_SUPPKEY'] >= 163) | (supplier['S_ACCTBAL'] == 8130.2554817000155) | (supplier['S_PHONE'] != '32-') & (supplier['S_ADDRESS'] != 'K')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] <= 13) & (supplier['S_ADDRESS'].str.startswith('H'))][['S_COMMENT', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 6) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] >= 113)].merge(nation[(nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 21) & (supplier['S_ACCTBAL'] <= 7163.006107682394) & (supplier['S_ADDRESS'] == 'w') & (supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 21) & (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_COMMENT'] != 'c') & (supplier['S_ACCTBAL'] > 7428.227128981417) | (supplier['S_SUPPKEY'] > 121) & (supplier['S_ADDRESS'] == 'N')][['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] < 81) & (supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 197)][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] != 6906.774367511646) & (supplier['S_ACCTBAL'] > 3253.426793963433) & (supplier['S_ADDRESS'].str.startswith('y'))][['S_SUPPKEY', 'S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_COMMENT'] == 'i') | (supplier['S_SUPPKEY'] != 71) | (supplier['S_PHONE'] == '1')][['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']]

supplier[(supplier['S_PHONE'].str.startswith('26-'))].merge(nation[(nation['N_NAME'].str.startswith('J'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 112) & (supplier['S_COMMENT'] != ' sl') & (supplier['S_NATIONKEY'] == 2) | (supplier['S_ADDRESS'] == 'u')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 38) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] < 7951.539976744077)].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] == 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 108)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 154) | (supplier['S_ACCTBAL'] < 5702.142830517008) | (supplier['S_ADDRESS'] != 'H') | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('2'))][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] != 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'i')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_NATIONKEY'] <= 0) & (nation['N_NATIONKEY'] <= 15) | (nation['N_NATIONKEY'] != 23)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] == 16) & (nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 16) | (nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] != 19) & (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 8) | (nation['N_NATIONKEY'] == 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'].str.startswith('K'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 5711.322273526045) | (customer['C_ADDRESS'].str.startswith('3')) & (customer['C_COMMENT'] == 'd') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 17)][['C_PHONE', 'C_NAME']].groupby(by=['C_NAME', 'C_PHONE']).agg('count')

customer[(customer['C_ACCTBAL'] <= 2978.212829452145) & (customer['C_ACCTBAL'] != 8975.184229630104) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 21) | (customer['C_CUSTKEY'] < 91) & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 4773.092468580412) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_NATIONKEY'] < 20) | (customer['C_CUSTKEY'] <= 71) & (customer['C_COMMENT'].str.startswith('f')) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 2)][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 8926.462009790817) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] > 40) & (customer['C_ADDRESS'] == 'm')][['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']]

customer[(customer['C_ADDRESS'] != 'I') | (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'L') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ADDRESS'].str.startswith('j')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] == 'd')][['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_ADDRESS'] != 'd') | (customer['C_CUSTKEY'] < 84) | (customer['C_ADDRESS'] == 'w') & (customer['C_ACCTBAL'] != 2669.6643665558795) & (customer['C_PHONE'] == '22-') | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_ADDRESS'].str.startswith('n'))][['C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_ADDRESS'] != 'g') | (customer['C_ACCTBAL'] != 3664.473291235875) & (customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'] == 'v') & (customer['C_ACCTBAL'] < 59.31850552712581) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_NAME', 'C_NATIONKEY']].groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'p') & (customer['C_PHONE'] == '18-')][['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'r') & (customer['C_COMMENT'] != 'q') | (customer['C_ACCTBAL'] != 8696.506288551851) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_COMMENT'] != 'h')][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'w') & (customer['C_ACCTBAL'] != 8437.612775321608) | (customer['C_NATIONKEY'] <= 5) & (customer['C_CUSTKEY'] != 75) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] == '2') | (customer['C_PHONE'] != '25-') | (customer['C_PHONE'] == '3')][['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']]

customer[(customer['C_ADDRESS'].str.startswith('j')) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_COMMENT'] == 'y')][['C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('o')) & (customer['C_NATIONKEY'] >= 15) | (customer['C_ACCTBAL'] != -87.56307508911891) & (customer['C_ADDRESS'] != 'z') & (customer['C_CUSTKEY'] >= 90)][['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] == 'r') & (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] == 'o')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('h')) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] < 21) & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_PHONE'] == '2') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_COMMENT'] != 't')].groupby(by=['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('p')) | (customer['C_NATIONKEY'] == 19) | (customer['C_NATIONKEY'] > 13) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('z')) | (customer['C_ADDRESS'] != 'p') & (customer['C_NAME'] == 'C')][['C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_CUSTKEY'] > 42) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_COMMENT'] != 'w') | (customer['C_PHONE'] != '2') | (customer['C_CUSTKEY'] >= 34) | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_NAME'].str.startswith('C'))].groupby(by=['C_NATIONKEY', 'C_ACCTBAL', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 44) & (customer['C_NATIONKEY'] < 11)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 78) & (customer['C_ADDRESS'].str.startswith('i'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_ACCTBAL'] == -462.9788169571611) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] >= 19) & (customer['C_CUSTKEY'] > 45)][['C_PHONE']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 8)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 18) & (customer['C_PHONE'] != '2') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 57)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 7) & (customer['C_NATIONKEY'] >= 5) | (customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] <= 19) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_CUSTKEY'] != 70)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '2') & (customer['C_ADDRESS'].str.startswith('Y')) & (customer['C_ADDRESS'].str.startswith('u')) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('25-'))][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_PHONE'] == '2') & (customer['MKTSEGMENT'] != 'BUILDING')][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'] == ',') | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_NATIONKEY'] != 3) | (customer['C_NATIONKEY'] <= 7) | (customer['C_ACCTBAL'] >= 4162.118206670988) | (customer['C_CUSTKEY'] != 72)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']]

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_NATIONKEY'] == 2) | (customer['C_ADDRESS'].str.startswith('q')) | (customer['C_PHONE'] == '27-') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] > 15) & (customer['C_ADDRESS'].str.startswith('u'))][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('count')

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NATIONKEY'] <= 1) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] < 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'] != 'k')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_COMMENT'] == ' ') | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) & (customer['C_CUSTKEY'] != 91) | (customer['C_ADDRESS'].str.startswith('b')) & (customer['C_NATIONKEY'] >= 8) & (customer['C_ADDRESS'] != 'e') | (customer['C_PHONE'] != '3')].merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] < 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] < 3) | (customer['C_CUSTKEY'] <= 86) | (customer['C_ADDRESS'].str.startswith('e')) | (customer['C_NATIONKEY'] > 20) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 15)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']]

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('s'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] < 17)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] > 302) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] != 'r') | (orders['O_CUSTKEY'] < 93374) & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] != 128556)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['P_NAME'].str.startswith('g')) & (part['SIZE'] == 5) | (part['BRAND'] != 'Brand#43')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'MFGR']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] >= 10) | (supplier['S_COMMENT'] != 'es ') | (supplier['S_NATIONKEY'] != 10)][['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 29)].merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 2301) & (partsupp['PS_SUPPKEY'] != 3875) | (partsupp['AVAILQTY'] <= 2235)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 172)].merge(part[(part['P_PARTKEY'] >= 191) | (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] < 41) | (part['P_PARTKEY'] <= 44) & (part['PT_COMMENT'] == 'g') & (part['TYPE'] != 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 1329)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 7075) | (partsupp['AVAILQTY'] == 5394) & (partsupp['AVAILQTY'] == 6495) & (partsupp['PS_SUPPKEY'] <= 5339) | (partsupp['PS_SUPPKEY'] > 7047)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'q')][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 775.7298662917482) & (partsupp['PS_PARTKEY'] < 27) & (partsupp['PS_PARTKEY'] <= 6)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['LINENUMBER'] != 3) | (lineitem['L_ORDERKEY'] > 109) | (lineitem['L_PARTKEY'] == 18366) & (lineitem['SHIPMODE'].isin(['TRUCK', 'RAIL', 'AIR', 'REG AIR', 'MAIL', 'SHIP']))][['RETURNFLAG', 'QUANTITY', 'SHIPMODE', 'LINENUMBER', 'TAX', 'SHIPINSTRUCT', 'RECEIPTDATE']]

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['QUANTITY'] <= 43) & (lineitem['TAX'] != 0.0730865696330892) & (lineitem['QUANTITY'] == 6)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 6815) | (partsupp['P_COMMENT'].str.startswith('u'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] > 0.02293913320638712) | (lineitem['DISCOUNT'] >= 0.05130064582196323) & (lineitem['EXTENDEDPRICE'] < 57934.284913794756) & (lineitem['RETURNFLAG'] != 'N')][['LINESTATUS', 'L_COMMENT', 'COMMITDATE']].groupby(by=['LINESTATUS', 'L_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] != 26842.228603598433) | (lineitem['QUANTITY'] < 45) & (lineitem['DISCOUNT'] == 0.06848924689495463) & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['DISCOUNT'] > 0.09772500584249028) & (lineitem['EXTENDEDPRICE'] <= 12290.057814308184) | (lineitem['L_ORDERKEY'] == 151)].groupby(by=['L_ORDERKEY', 'L_SUPPKEY', 'TAX', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] > 47039.891025179815) | (lineitem['L_ORDERKEY'] <= 62) | (lineitem['EXTENDEDPRICE'] != 41000.207183254985) | (lineitem['L_COMMENT'] != 's') | (lineitem['LINENUMBER'] <= 5) | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_ORDERKEY'] < 91) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['L_SUPPKEY'] > 9180)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['L_ORDERKEY'] != 54) & (lineitem['L_ORDERKEY'] < 162) | (lineitem['QUANTITY'] >= 15) & (lineitem['L_ORDERKEY'] > 117)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['L_SUPPKEY'] >= 3347) & (lineitem['L_PARTKEY'] >= 169762) & (lineitem['EXTENDEDPRICE'] != 22135.089869285297) & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['LINENUMBER'] < 1) | (lineitem['COMMITDATE'] > '1998-10-16')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 168) & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['QUANTITY'] == 36) | (lineitem['L_SUPPKEY'] > 7473) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_ORDERKEY'] < 14) | (lineitem['DISCOUNT'] < 0.03134034032574284) & (lineitem['L_SUPPKEY'] == 3691)][['COMMITDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'RECEIPTDATE']]

lineitem[(lineitem['L_PARTKEY'] > 123873) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINESTATUS'] != 'F') & (lineitem['COMMITDATE'] > '1992-05-15')][['LINENUMBER', 'TAX']].groupby(by=['TAX', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 7544) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['QUANTITY'] != 23) | (lineitem['DISCOUNT'] >= 0.0713378870282113)][['RECEIPTDATE', 'QUANTITY', 'DISCOUNT', 'L_SUPPKEY', 'SHIPDATE', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY']]

lineitem[(lineitem['L_SUPPKEY'] == 4238) | (lineitem['L_ORDERKEY'] >= 173) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['TAX'] >= 0.010248062400799719) & (lineitem['TAX'] != 0.059894626591327604) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['QUANTITY'] != 19) | (lineitem['LINENUMBER'] <= 6) | (lineitem['L_COMMENT'] == 'ly ')].groupby(by=['TAX', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['L_SUPPKEY'] > 167) & (lineitem['QUANTITY'] != 31) | (lineitem['QUANTITY'] > 37) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['EXTENDEDPRICE'] == 13726.448365648197) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['LINENUMBER'] >= 3) & (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['TAX'] != 0.03923674237510382)][['COMMITDATE', 'DISCOUNT']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_SUPPKEY'] > 7081) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_SUPPKEY'] < 375) & (lineitem['SHIPDATE'] != '1998-10-30')][['COMMITDATE', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'COMMITDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'FOB'])) & (lineitem['DISCOUNT'] < 0.048790097650664666) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['COMMITDATE'] >= '1992-05-15')].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] < 0.013345601864660673) | (lineitem['L_PARTKEY'] == 196916) & (lineitem['DISCOUNT'] <= 0.006559413609509102) | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['QUANTITY'] >= 2) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_COMMENT'].str.startswith('s'))][['LINENUMBER', 'RECEIPTDATE']]

lineitem[['DISCOUNT', 'L_COMMENT', 'COMMITDATE', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 619.6513916205943)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY', 'SHIPMODE', 'RETURNFLAG', 'DISCOUNT', 'RECEIPTDATE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'DISCOUNT', 'L_COMMENT', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'LINESTATUS']].groupby(by=['RECEIPTDATE', 'LINESTATUS', 'TAX', 'L_ORDERKEY']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 9303)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY', 'SHIPMODE', 'DISCOUNT', 'LINESTATUS']].groupby(by=['DISCOUNT', 'RECEIPTDATE', 'L_ORDERKEY', 'L_COMMENT', 'SHIPMODE']).agg('max', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPDATE', 'LINESTATUS']].groupby(by=['SHIPDATE', 'DISCOUNT', 'L_PARTKEY']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'] == 'v') | (partsupp['P_COMMENT'].str.startswith('e'))].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RETURNFLAG', 'COMMITDATE', 'SHIPDATE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']].groupby(by=['RETURNFLAG', 'LINESTATUS', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER']).agg('sum', numeric_only=True)

lineitem[['RETURNFLAG', 'LINESTATUS', 'SHIPDATE', 'COMMITDATE', 'DISCOUNT', 'RECEIPTDATE', 'LINENUMBER']].groupby(by=['RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'RECEIPTDATE']).agg('count')

lineitem[['SHIPDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_COMMENT', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'COMMITDATE', 'LINESTATUS']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'E') & (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'A') & (region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 'v') & (nation['N_NATIONKEY'] >= 14) | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('p'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'a') & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_COMMENT'] == 'o')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] == 'e')].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] > 0) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'l') | (nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] >= 18) | (nation['N_COMMENT'] != 'h')].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] != 1)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'] != 'B') | (nation['N_COMMENT'] == 'o')].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'I') | (nation['N_COMMENT'] != ' ') & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] != 6) | (nation['N_COMMENT'] == 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 13) & (nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 20) & (nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 20) & (nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != 's')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 15)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 9)].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 1) | (nation['N_NATIONKEY'] > 19)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 8)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 22) | (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 15)].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_NATIONKEY'] >= 12)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_NATIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] == 'y')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'].str.startswith('C')) & (nation['N_COMMENT'].str.startswith('l'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] < 23)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] < 21)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] != 'E')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NAME'] == 'E')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 9846.951868652552) & (customer['C_ADDRESS'] != 'z') | (customer['C_ACCTBAL'] == 7665.703392005584) & (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_ADDRESS'].str.startswith('r')) & (customer['C_COMMENT'] != 'n') | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_NATIONKEY'] < 3)][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 6142.898687893282) & (customer['C_ADDRESS'] != 'T') & (customer['C_PHONE'] == '2') | (customer['C_PHONE'].str.startswith('2')) & (customer['C_NATIONKEY'] != 7) & (customer['C_CUSTKEY'] <= 24) | (customer['C_CUSTKEY'] != 73)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= 6215.796400022812) | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_ACCTBAL'] > 6042.478470277741) | (customer['C_COMMENT'] != 'y')][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] > 5031.860026043355) & (customer['C_ADDRESS'] != 'R') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] >= 410.2325752265183) & (customer['C_ACCTBAL'] >= 5247.895608079572)][['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != '3')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] > 22) | (customer['C_PHONE'] == '18-') | (customer['C_COMMENT'] != 'q')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] != 4) & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_ACCTBAL'] == 4885.349184434286) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '13-') & (customer['C_ADDRESS'] == 'D')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '18-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY'])) | (customer['C_CUSTKEY'] <= 78)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'].isin(['O'])) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] >= 273068.7389502065) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '1-URGENT']))][['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] < 655) | (orders['O_ORDERKEY'] <= 184) | (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] <= 228104.71362966765) & (orders['O_ORDERKEY'] > 255) | (orders['O_COMMENT'] == 'o') & (orders['O_COMMENT'] == 'j') | (orders['ORDERPRIORITY'] == '5-LOW')][['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'] == 'P')][['TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'].str.startswith('egu'))][['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] != 280) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] <= 170121.44003465393) & (orders['O_COMMENT'].str.startswith('o'))].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] < 733) | (orders['O_ORDERKEY'] < 372) & (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] <= 345463.6297100926) | (orders['ORDERSTATUS'] == 'F')][['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] <= 149196.1930705318) | (orders['O_ORDERKEY'] == 193) | (orders['TOTALPRICE'] == 253232.4685604891) | (orders['O_CUSTKEY'] != 76966) & (orders['O_COMMENT'] != 'i')][['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] == 74) & (orders['O_ORDERKEY'] <= 601)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] != 'l') | (orders['O_ORDERKEY'] < 695) & (orders['O_ORDERKEY'] == 82) & (orders['O_ORDERKEY'] > 749)][['SHIPPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'SHIPPRIORITY']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O') & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] <= 72756.69315068406) | (orders['O_CUSTKEY'] <= 68642) | (orders['TOTALPRICE'] > 142957.6067421624) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'].str.startswith('x'))].groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] != 30) & (orders['O_COMMENT'] != 'e') | (orders['O_CUSTKEY'] >= 93091) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['TOTALPRICE'] <= 323674.0311047496)].groupby(by=['ORDERSTATUS', 'CLERK', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O')].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) & (orders['O_COMMENT'] == ' re') & (orders['O_COMMENT'].str.startswith('h')) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] != 183) & (orders['ORDERDATE'] < '1998-07-21')].groupby(by=['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERSTATUS'] != 'P') & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] <= 30014.646905158035)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] <= 35348) & (orders['O_ORDERKEY'] > 517) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['SHIPPRIORITY'] < 0)].groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] == 'l') | (orders['O_ORDERKEY'] > 764) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] >= 134987) & (orders['O_CUSTKEY'] != 31182) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('h')) | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] != 26224) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] < 93238.96361517835)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']]

orders[(orders['O_CUSTKEY'] != 100019) | (orders['O_CUSTKEY'] > 80282) | (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] < 287) & (orders['O_CUSTKEY'] <= 130366)][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']]

orders[(orders['O_CUSTKEY'] < 117922) & (orders['O_COMMENT'] != 'a') | (orders['O_ORDERKEY'] > 247) | (orders['CLERK'].str.startswith('C'))][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 27693)][['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 38249) & (orders['O_COMMENT'].str.startswith('y'))].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 701) & (orders['O_CUSTKEY'] == 132277) | (orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] >= 98520) & (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] == 129289.40642638133) & (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERSTATUS'].isin(['F']))][['TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT']]

orders[(orders['O_ORDERKEY'] == 725) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'y') & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] <= 332674.17681188555) & (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY']]

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] > 377) | (orders['O_COMMENT'].str.startswith('k')) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '5-LOW', '3-MEDIUM']))][['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']]

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] != 79418)][['O_COMMENT', 'CLERK', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] > 402) | (orders['O_CUSTKEY'] > 109754) | (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_COMMENT'] != ',') | (orders['CLERK'] == 'C')][['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] == 229425.7363083769) & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] != 'egu') & (orders['TOTALPRICE'] != 193256.81801762854) & (orders['O_COMMENT'].str.startswith('w')) & (orders['O_COMMENT'] != 'e')][['O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 274771.1178672288) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERSTATUS'] != 'F')][['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 299073.04509782273) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW'])) | (orders['O_CUSTKEY'] > 99213) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_CUSTKEY'] != 39269) & (orders['O_ORDERKEY'] == 13)].groupby(by=['TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 209122.72174136442) & (orders['TOTALPRICE'] > 186828.74080340596) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_COMMENT'] == 'ly ') & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] > 251635.12946316644) | (orders['SHIPPRIORITY'] <= 0)][['CLERK']].groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 254216.76454649167) | (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 140961) & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] == 300) & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS']).agg('count')

orders[['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

orders[['CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] != 'I') & (nation['N_NATIONKEY'] < 5) & (nation['N_REGIONKEY'] <= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']).agg('count')

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_ACCTBAL'] >= 6129.138249230019) & (customer['C_NATIONKEY'] == 3)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_COMMENT'] == 'c')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#23') & (part['SIZE'] >= 37) & (part['TYPE'] != 'L') | (part['SIZE'] == 15) | (part['PT_COMMENT'].str.startswith('d')) | (part['BRAND'] == 'Brand#53') & (part['CONTAINER'] == 'SM') | (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] <= 921.9508525847126)][['SIZE', 'TYPE', 'RETAILPRICE']]

part[(part['BRAND'] != 'Brand#32') | (part['TYPE'].str.startswith('S')) & (part['P_NAME'].str.startswith('w')) | (part['PT_COMMENT'].str.startswith('t')) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) | (part['BRAND'] == 'Brand#24')][['PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[(part['BRAND'] != 'Brand#35') & (part['PT_COMMENT'].str.startswith('ss ')) & (part['P_PARTKEY'] > 64) | (part['SIZE'] != 31) & (part['TYPE'] == 'P') | (part['MFGR'] == 'Manufacturer#5')].groupby(by=['SIZE', 'MFGR', 'CONTAINER', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#12') & (part['P_PARTKEY'] < 67) | (part['BRAND'].isin(['Brand#12', 'Brand#55', 'Brand#33', 'Brand#31', 'Brand#52', 'Brand#41', 'Brand#15', 'Brand#42']))][['BRAND', 'TYPE', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER', 'SIZE']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#31') & (part['P_NAME'].str.startswith('lem')) & (part['MFGR'] != 'Manufacturer#3') & (part['RETAILPRICE'] <= 1077.8596994532045) | (part['BRAND'].isin(['Brand#45', 'Brand#34', 'Brand#41', 'Brand#25', 'Brand#31', 'Brand#52', 'Brand#43', 'Brand#42', 'Brand#13'])) & (part['RETAILPRICE'] == 905.1803377402107) & (part['P_NAME'].str.startswith('a')) | (part['CONTAINER'] == 'LG') | (part['CONTAINER'] == 'JUMBO')].groupby(by=['MFGR', 'SIZE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#45') | (part['TYPE'] == 'M') | (part['BRAND'] != 'Brand#41') & (part['P_PARTKEY'] >= 138)][['PT_COMMENT', 'P_NAME', 'MFGR']].groupby(by=['PT_COMMENT', 'P_NAME']).agg('count')

part[(part['BRAND'].isin(['Brand#32', 'Brand#11', 'Brand#23', 'Brand#21', 'Brand#43', 'Brand#53', 'Brand#22', 'Brand#31', 'Brand#33', 'Brand#34'])) & (part['P_NAME'].str.startswith('r')) & (part['TYPE'] == 'STA') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5'])) | (part['RETAILPRICE'] >= 954.2431834727251) & (part['TYPE'] == 'E') | (part['MFGR'] == 'Manufacturer#5')].groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['BRAND'].isin(['Brand#53', 'Brand#35'])) & (part['P_NAME'] != 'v') & (part['P_NAME'] == 'd') | (part['PT_COMMENT'] != 'p') & (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] > 21) | (part['SIZE'] != 16) | (part['BRAND'] != 'Brand#31') | (part['SIZE'] < 19)][['PT_COMMENT', 'P_NAME', 'RETAILPRICE']]

part[(part['CONTAINER'] != 'JUMBO')][['PT_COMMENT', 'BRAND', 'SIZE', 'CONTAINER']].groupby(by=['PT_COMMENT', 'BRAND', 'SIZE', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'].str.startswith('SMA')) & (part['P_NAME'] != 'bis') & (part['P_PARTKEY'] > 13) | (part['CONTAINER'] == 'MED') & (part['BRAND'] == 'Brand#13') | (part['SIZE'] < 20) | (part['RETAILPRICE'] >= 1094.7544291402855)].groupby(by=['BRAND', 'P_PARTKEY']).agg('count')

part[(part['CONTAINER'] != 'MED') & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'].str.startswith('ss ')) | (part['P_PARTKEY'] == 29) & (part['BRAND'] != 'Brand#13') | (part['MFGR'].isin(['Manufacturer#4'])) | (part['BRAND'] == 'Brand#14')].groupby(by=['SIZE', 'MFGR', 'CONTAINER', 'P_PARTKEY']).agg('count')

part[(part['CONTAINER'] == 'JUMBO') & (part['P_NAME'] != 'v') | (part['PT_COMMENT'] != '!') & (part['SIZE'] != 15) & (part['SIZE'] <= 23)][['P_NAME', 'MFGR']].groupby(by=['MFGR', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'MED') & (part['TYPE'] != 'S') & (part['P_NAME'] != 'g') & (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] < 1037.6836292183277) & (part['RETAILPRICE'] >= 949.0043430299143) | (part['BRAND'].isin(['Brand#34']))][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) & (part['TYPE'] != 'SMA') & (part['P_NAME'].str.startswith('b')) & (part['RETAILPRICE'] != 959.0821824996619) & (part['P_NAME'] != 'm') | (part['BRAND'] == 'Brand#44') | (part['PT_COMMENT'].str.startswith('q')) | (part['BRAND'] == 'Brand#43')].groupby(by=['MFGR', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] >= 152) & (part['P_NAME'] != 'w')][['P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']]

part[(part['MFGR'] != 'Manufacturer#4')][['P_NAME', 'RETAILPRICE', 'MFGR', 'P_PARTKEY', 'BRAND']].groupby(by=['P_NAME', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#1'])) & (part['P_NAME'].str.startswith('s')) & (part['TYPE'] == 'SMA')][['P_PARTKEY', 'TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']]

part[(part['MFGR'] == 'Manufacturer#3') | (part['SIZE'] >= 47) | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] != 15) & (part['SIZE'] > 15)][['RETAILPRICE', 'CONTAINER', 'MFGR', 'TYPE', 'BRAND', 'PT_COMMENT']]

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) & (part['SIZE'] >= 32) & (part['P_PARTKEY'] < 167) | (part['CONTAINER'] == 'JUMBO')][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3'])) & (part['PT_COMMENT'] == 'ly ') | (part['BRAND'].isin(['Brand#22', 'Brand#23', 'Brand#44', 'Brand#21', 'Brand#53', 'Brand#35', 'Brand#54', 'Brand#15', 'Brand#13', 'Brand#33', 'Brand#41', 'Brand#45', 'Brand#24', 'Brand#14', 'Brand#32', 'Brand#42'])) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['CONTAINER'] != 'LG') | (part['P_NAME'] != 'cor')][['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'BRAND']]

part[(part['PT_COMMENT'] != 'c') & (part['SIZE'] != 8) & (part['BRAND'] != 'Brand#14') & (part['BRAND'] != 'Brand#55') | (part['SIZE'] > 32) & (part['P_NAME'] != 'f') | (part['BRAND'].isin(['Brand#11', 'Brand#41', 'Brand#21', 'Brand#43', 'Brand#54', 'Brand#15', 'Brand#45', 'Brand#55']))][['TYPE', 'BRAND', 'CONTAINER', 'MFGR', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 'g') | (part['CONTAINER'] != 'WRAP') | (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] > 8) & (part['P_PARTKEY'] >= 35) & (part['TYPE'].str.startswith('S'))].groupby(by=['TYPE', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_PARTKEY']).agg('count')

part[(part['PT_COMMENT'] == 's') & (part['SIZE'] == 45) & (part['SIZE'] <= 41) & (part['P_NAME'].str.startswith('r')) & (part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] < 63) & (part['MFGR'] == 'Manufacturer#5') | (part['P_NAME'] == 'i') | (part['P_NAME'].str.startswith('m'))].groupby(by=['PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'b') | (part['P_NAME'] != 'blu') | (part['CONTAINER'] != 'MED')][['P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['P_NAME'] == 'h') & (part['P_PARTKEY'] < 1) & (part['P_NAME'] == 'g') | (part['SIZE'] <= 24) | (part['P_NAME'] != 'c') & (part['BRAND'] == 'Brand#53') | (part['PT_COMMENT'].str.startswith('the'))][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[(part['P_NAME'].str.startswith('lem')) & (part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] != 1036.0885768448497) & (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] != 1056.991924596711)][['BRAND', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']]

part[(part['P_PARTKEY'] != 139) & (part['P_NAME'].str.startswith('y')) & (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] < 91) & (part['RETAILPRICE'] == 1043.9565313873193) & (part['P_PARTKEY'] <= 181) | (part['RETAILPRICE'] >= 1091.162799771008)].groupby(by=['PT_COMMENT', 'MFGR', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] <= 81) | (part['SIZE'] <= 47) | (part['SIZE'] >= 28) & (part['SIZE'] <= 36) | (part['P_NAME'] == 'blu')][['CONTAINER', 'TYPE']].groupby(by=['CONTAINER', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] == 155) & (part['SIZE'] == 33) | (part['SIZE'] == 35) | (part['SIZE'] < 17) | (part['SIZE'] <= 40) | (part['PT_COMMENT'] != 'c') & (part['P_NAME'] != 'h') & (part['RETAILPRICE'] > 1054.6796619021802)].groupby(by=['BRAND', 'CONTAINER', 'MFGR']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 98) | (part['P_PARTKEY'] == 121) & (part['CONTAINER'] == 'WRAP') | (part['SIZE'] > 16) | (part['BRAND'].isin(['Brand#13', 'Brand#22', 'Brand#53', 'Brand#25', 'Brand#42', 'Brand#21', 'Brand#23', 'Brand#12', 'Brand#15', 'Brand#14', 'Brand#45', 'Brand#11', 'Brand#33', 'Brand#34', 'Brand#55', 'Brand#54', 'Brand#41', 'Brand#44', 'Brand#43', 'Brand#51', 'Brand#35', 'Brand#32', 'Brand#52', 'Brand#31', 'Brand#24'])) | (part['RETAILPRICE'] == 942.5979846744873) & (part['TYPE'] == 'P') & (part['PT_COMMENT'] == 's')].groupby(by=['P_NAME', 'PT_COMMENT', 'TYPE']).agg('count')

part[(part['P_PARTKEY'] >= 102) & (part['TYPE'] == 'M') | (part['SIZE'] > 42)][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']]

part[(part['P_PARTKEY'] >= 144) | (part['RETAILPRICE'] >= 920.2047443799597) & (part['SIZE'] == 8)][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']]

part[(part['RETAILPRICE'] <= 1034.5954568685563) & (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'].isin(['Brand#31', 'Brand#33'])) | (part['P_PARTKEY'] <= 17)][['P_NAME', 'SIZE', 'P_PARTKEY', 'CONTAINER']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] > 1059.2416086402432) | (part['SIZE'] < 11)][['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND']].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] != 10) & (part['RETAILPRICE'] > 958.4694200723484) | (part['RETAILPRICE'] < 974.8598688388942) | (part['MFGR'] != 'Manufacturer#1') & (part['P_PARTKEY'] != 95) | (part['CONTAINER'] != 'MED') & (part['PT_COMMENT'].str.startswith('ly ')) | (part['RETAILPRICE'] != 1086.5558290661138) | (part['SIZE'] > 39)].groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('count')

part[(part['SIZE'] != 32) & (part['CONTAINER'] != 'MED') | (part['MFGR'] == 'Manufacturer#3') | (part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'].str.startswith('SM')) | (part['P_PARTKEY'] > 157)].groupby(by=['P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND']).agg('count')

part[(part['SIZE'] < 46) | (part['TYPE'] == 'S') & (part['BRAND'].isin(['Brand#21', 'Brand#41', 'Brand#31', 'Brand#43', 'Brand#45', 'Brand#51', 'Brand#52', 'Brand#25'])) | (part['RETAILPRICE'] == 1014.3294132208175) | (part['BRAND'] != 'Brand#42') | (part['PT_COMMENT'] == 's') & (part['BRAND'] == 'Brand#25') | (part['BRAND'] == 'Brand#55') | (part['P_PARTKEY'] < 186)].groupby(by=['P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['SIZE'] == 41) & (part['BRAND'] != 'Brand#44') | (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] == 25) | (part['PT_COMMENT'] == 'q') | (part['P_PARTKEY'] <= 128) | (part['PT_COMMENT'] != 'ly ') & (part['MFGR'] == 'Manufacturer#2')][['TYPE', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[(part['TYPE'] == 'SMA') | (part['CONTAINER'].str.startswith('LG')) & (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] != 9) | (part['RETAILPRICE'] == 1045.937492140989) & (part['SIZE'] < 14)][['P_NAME', 'BRAND']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['SIZE'] <= 1) | (part['TYPE'].str.startswith('STA')) | (part['TYPE'].str.startswith('SMA')) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4'])) | (part['P_PARTKEY'] > 143) | (part['TYPE'] == 'SMA') | (part['RETAILPRICE'] >= 969.4894298632829)].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

part[['CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

part[['MFGR', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']].groupby(by=['TYPE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'BRAND', 'TYPE', 'P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']].groupby(by=['TYPE', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'CONTAINER']).agg('mean', numeric_only=True)

part[['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'PT_COMMENT']].groupby(by=['MFGR', 'CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE', 'PT_COMMENT', 'BRAND']].groupby(by=['TYPE', 'P_PARTKEY', 'SIZE']).agg('count')

part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'SIZE', 'TYPE', 'BRAND']].groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'BRAND', 'SIZE']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME', 'CONTAINER', 'RETAILPRICE']].groupby(by=['CONTAINER', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR']].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME']).agg('max', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'MFGR']].groupby(by=['RETAILPRICE', 'BRAND', 'TYPE']).agg('count')

partsupp.merge(part[(part['BRAND'] != 'Brand#21') & (part['TYPE'] != 'E') | (part['TYPE'].str.startswith('L')) | (part['P_PARTKEY'] < 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'BRAND', 'PT_COMMENT']).agg('count')

partsupp.merge(part[(part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] < 67) | (part['P_PARTKEY'] < 14) & (part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] < 1010.8501236471407)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] > 80) & (part['RETAILPRICE'] < 954.571835163218)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] != 1050.336388471858) & (part['RETAILPRICE'] == 936.2420682777242) & (part['BRAND'].isin(['Brand#21', 'Brand#45', 'Brand#43', 'Brand#15', 'Brand#24', 'Brand#12']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'TYPE', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] == 'u')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < -84.51712292319405)][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'e')].merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 145) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'al ')][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 38) & (supplier['S_SUPPKEY'] >= 117) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_SUPPKEY'] > 97) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] > 179)][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 2138) & (partsupp['P_COMMENT'] == 'f') & (partsupp['AVAILQTY'] != 4059) | (partsupp['PS_SUPPKEY'] >= 1092) | (partsupp['PS_SUPPKEY'] != 705)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 1846)].merge(part[['PT_COMMENT', 'BRAND', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] < 8211) & (partsupp['PS_SUPPKEY'] < 5819)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 5751) & (partsupp['P_COMMENT'] != 'f')].merge(supplier[(supplier['S_SUPPKEY'] <= 156) & (supplier['S_SUPPKEY'] > 89)][['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 5983) | (partsupp['PS_SUPPKEY'] != 3580)].merge(part[['SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 808)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 11) | (nation['N_COMMENT'] != 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 503)].merge(part[(part['TYPE'].str.startswith('STA')) | (part['P_NAME'] == 'h') | (part['CONTAINER'].str.startswith('LG')) & (part['PT_COMMENT'].str.startswith('w')) | (part['BRAND'] != 'Brand#11') & (part['BRAND'] == 'Brand#45') | (part['P_NAME'] != 'c') | (part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 7340)].merge(supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_SUPPKEY'] <= 135) | (supplier['S_SUPPKEY'] > 137)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 8865)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 48) | (partsupp['SUPPLYCOST'] == 738.7213688567655) | (partsupp['PS_PARTKEY'] != 15) & (partsupp['SUPPLYCOST'] != 938.2666555368379)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] < 129)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 16) & (partsupp['SUPPLYCOST'] != 109.89332859053211) | (partsupp['PS_SUPPKEY'] > 3896) & (partsupp['SUPPLYCOST'] >= 230.50248556415207) & (partsupp['SUPPLYCOST'] >= 201.05141444206131)].merge(part[['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 27) | (partsupp['PS_PARTKEY'] <= 23) & (partsupp['PS_PARTKEY'] == 49) | (partsupp['SUPPLYCOST'] != 710.6814643703244) & (partsupp['SUPPLYCOST'] != 602.2043131253223)].merge(supplier[(supplier['S_ACCTBAL'] < 0.6702829993927253) | (supplier['S_COMMENT'] != 'r') & (supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] >= 5686.8625712528765)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 44) | (partsupp['SUPPLYCOST'] >= 268.1674303889898) & (partsupp['SUPPLYCOST'] > 74.7489682754006) | (partsupp['P_COMMENT'] == 'u') & (partsupp['PS_SUPPKEY'] < 1716)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 1) | (partsupp['PS_PARTKEY'] >= 38) | (partsupp['P_COMMENT'].str.startswith('s'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 2) | (partsupp['PS_PARTKEY'] >= 35)].merge(part[(part['TYPE'].str.startswith('E'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 2) | (partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_PARTKEY'] >= 49) | (partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_SUPPKEY'] >= 7333)][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 177) & (partsupp['PS_PARTKEY'] < 41) & (partsupp['AVAILQTY'] > 8686) & (partsupp['PS_PARTKEY'] <= 17)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 2886) & (partsupp['AVAILQTY'] == 7574)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 6847) & (partsupp['AVAILQTY'] <= 4831) & (partsupp['P_COMMENT'] == ',') | (partsupp['AVAILQTY'] <= 925)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 6054) | (partsupp['P_COMMENT'] != 'the') & (partsupp['PS_PARTKEY'] != 37) & (partsupp['P_COMMENT'] != ';')][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6076) & (partsupp['P_COMMENT'] != 'x')][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 4521) & (partsupp['P_COMMENT'] != 'b') | (partsupp['SUPPLYCOST'] >= 852.64059581148) & (partsupp['PS_SUPPKEY'] == 23)].merge(part[['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'b')].merge(part[['P_NAME', 'BRAND', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['PS_SUPPKEY'] == 6063) & (partsupp['PS_SUPPKEY'] == 6312)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['P_COMMENT'] == 'c') & (partsupp['SUPPLYCOST'] != 848.0471303158963) | (partsupp['AVAILQTY'] < 8361)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith(','))].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 674.0671086838561)].merge(part[['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 311.35583503689867) | (partsupp['SUPPLYCOST'] >= 73.46641858008918) | (partsupp['PS_PARTKEY'] >= 30)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'SMA') | (part['P_PARTKEY'] != 182)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 670.8045567386735) | (partsupp['PS_SUPPKEY'] >= 307) | (partsupp['AVAILQTY'] > 7372)].merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 767.8168671280896) | (partsupp['PS_SUPPKEY'] > 2826) & (partsupp['P_COMMENT'] != 'u') | (partsupp['P_COMMENT'] != 'i')].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 606.5803958045054) & (partsupp['SUPPLYCOST'] != 327.1686303635122)].merge(part[['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 778.8819645483303) | (partsupp['AVAILQTY'] == 4812) | (partsupp['PS_PARTKEY'] < 30)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 429.8205201488348) & (partsupp['SUPPLYCOST'] != 650.6370092560312)].merge(part[(part['P_PARTKEY'] > 84) | (part['PT_COMMENT'] == 'b') | (part['RETAILPRICE'] > 1071.6971867153406) & (part['SIZE'] != 37) | (part['P_PARTKEY'] > 148) | (part['BRAND'].isin(['Brand#35', 'Brand#13', 'Brand#51', 'Brand#54', 'Brand#24', 'Brand#33', 'Brand#53', 'Brand#34', 'Brand#11', 'Brand#44', 'Brand#14', 'Brand#23', 'Brand#41', 'Brand#21', 'Brand#32', 'Brand#45'])) & (part['P_NAME'] == 'lin')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'SIZE']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'PT_COMMENT', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'MFGR']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['SIZE'] < 28) | (part['P_PARTKEY'] > 145) | (part['RETAILPRICE'] != 971.8090934228467)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'BRAND', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 17) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 6393.772459466699)][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] == 'u') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] == 'I')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'K') | (nation['N_NAME'] == 'F')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] <= 15) & (nation['N_NAME'] != 'F')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] == 'n') | (nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] <= 15) & (nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 12) | (nation['N_NATIONKEY'] <= 6) & (nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] <= 10)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_NAME'] == 'P') & (nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] != 19)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] != 0) | (nation['N_NATIONKEY'] >= 20)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] != 5)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] <= 4) | (nation['N_NAME'] == 'V')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] < 22)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 4452.382247531985) & (supplier['S_SUPPKEY'] != 184)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 9912.36052151821)][['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 9514.74466653889) & (supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] > 22) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_SUPPKEY'] < 47) & (supplier['S_NATIONKEY'] <= 23)][['S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 9880.463728553557) | (supplier['S_COMMENT'].str.startswith('a')) & (supplier['S_ADDRESS'].str.startswith('x'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'X') | (supplier['S_NATIONKEY'] <= 5) & (supplier['S_ADDRESS'] == '0') | (supplier['S_NATIONKEY'] < 14) | (supplier['S_NATIONKEY'] >= 23) | (supplier['S_NATIONKEY'] != 20) | (supplier['S_ADDRESS'].str.startswith('v'))][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'Z') | (supplier['S_SUPPKEY'] <= 179) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 0) | (supplier['S_ACCTBAL'] != 2776.3537780805336) | (supplier['S_SUPPKEY'] != 188) & (supplier['S_PHONE'].str.startswith('26-'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'] != 'u') & (supplier['S_SUPPKEY'] > 39) & (supplier['S_ACCTBAL'] > 4945.893366344386) & (supplier['S_NATIONKEY'] < 6) & (supplier['S_SUPPKEY'] <= 6) | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_SUPPKEY'] <= 50)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('9')) & (supplier['S_ADDRESS'].str.startswith('p'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_COMMENT'] != 'q') & (supplier['S_ADDRESS'] == 'P') & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_NATIONKEY'] > 8) | (supplier['S_COMMENT'] == 'y') & (supplier['S_SUPPKEY'] != 79) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'] != 'b')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('V'))][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('Y')) & (supplier['S_NATIONKEY'] < 18) | (supplier['S_PHONE'] == '2')][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('Z')) & (supplier['S_SUPPKEY'] != 147) | (supplier['S_COMMENT'] != ' sl')].merge(nation[(nation['N_NATIONKEY'] > 0) & (nation['N_NATIONKEY'] != 20)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('a')) | (supplier['S_COMMENT'] != '.') | (supplier['S_NATIONKEY'] >= 18) & (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_ACCTBAL'] == 7200.895787106568)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'b') & (supplier['S_ADDRESS'] == '3')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'l') | (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_ACCTBAL'] > 6565.2259325860105) & (supplier['S_ACCTBAL'] >= 9362.048108227476) & (supplier['S_ACCTBAL'] < 132.41585781228173) | (supplier['S_ACCTBAL'] >= 2818.340707845766) & (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_COMMENT'] != 'y') & (supplier['S_ACCTBAL'] > 3915.463169511324) & (supplier['S_ADDRESS'] != 'M') & (supplier['S_SUPPKEY'] > 116) & (supplier['S_ACCTBAL'] == 7879.788790004565)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'] == 'a') | (supplier['S_NATIONKEY'] <= 17) & (supplier['S_COMMENT'] == 'g')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'al ') | (supplier['S_PHONE'] == '26-') & (supplier['S_ACCTBAL'] >= 5254.236788256118) & (supplier['S_ACCTBAL'] <= 5842.671718303141) & (supplier['S_ADDRESS'] == 'O') & (supplier['S_NAME'] == 'S')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'w') | (supplier['S_COMMENT'] != 'w') & (supplier['S_ADDRESS'] == '2')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_PHONE'] != '1') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 1)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ACCTBAL'] > 9264.4435203459) | (supplier['S_NATIONKEY'] < 3) & (supplier['S_ADDRESS'] != 'K')][['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('l')) & (supplier['S_NATIONKEY'] == 21) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'I') & (supplier['S_ACCTBAL'] > 9427.695951995298) | (supplier['S_ACCTBAL'] <= 5637.909708971091)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 12) & (supplier['S_ACCTBAL'] < 7617.186945730994)][['S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 16)].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 23) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 't') | (supplier['S_PHONE'] != '32-') & (supplier['S_PHONE'] == '26-') & (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] != 'the')][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 1) | (supplier['S_SUPPKEY'] != 99) & (supplier['S_COMMENT'] == 'the') & (supplier['S_NATIONKEY'] > 16) & (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 23)][['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 13) & (supplier['S_NATIONKEY'] >= 9) & (supplier['S_ADDRESS'] != 'Q') | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 196) & (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_COMMENT'] == '.')][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']]

supplier[(supplier['S_NATIONKEY'] == 22) | (supplier['S_NAME'] != 'S')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 21) & (supplier['S_NAME'] == 'S')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_PHONE'] != '3')].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_COMMENT'] != 'y')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] != 'i') | (supplier['S_SUPPKEY'] >= 84) | (supplier['S_ADDRESS'].str.startswith('B'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '3')][['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_COMMENT', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ADDRESS'].str.startswith('f')) | (supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_ACCTBAL'] > 7096.644758510454) & (supplier['S_ACCTBAL'] < 7616.737277340068) | (supplier['S_ACCTBAL'] >= 1072.066695372019)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_COMMENT'] == 'n') | (supplier['S_NATIONKEY'] >= 10) | (supplier['S_SUPPKEY'] > 5) & (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_ACCTBAL'] >= 9697.724418165999) | (supplier['S_NATIONKEY'] <= 2)].groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 40) & (supplier['S_SUPPKEY'] >= 37) | (supplier['S_ADDRESS'] != '8') & (supplier['S_NATIONKEY'] < 1) & (supplier['S_ADDRESS'] == 'n')][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] < 12) & (supplier['S_ADDRESS'] == 'M') & (supplier['S_SUPPKEY'] == 43) | (supplier['S_COMMENT'] != 'd') | (supplier['S_NATIONKEY'] >= 9) & (supplier['S_NATIONKEY'] > 8)].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] != 'E') & (nation['N_REGIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 42)][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 81) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] <= 187)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 27) | (supplier['S_NATIONKEY'] != 3) & (supplier['S_SUPPKEY'] <= 100)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NAME'] == 'V') | (nation['N_NAME'] != 'I')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'e')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'U')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 9) | (nation['N_COMMENT'] != 'i') & (nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 11)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 6959.095466667146) & (customer['C_NATIONKEY'] < 15) | (customer['MKTSEGMENT'].isin(['BUILDING']))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 3836.5119470517548) & (customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] != 20) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_ADDRESS'] == 'T') & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('n')) & (customer['C_ADDRESS'] == 'I') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'm')][['C_COMMENT', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('J')) | (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] == 56) & (customer['C_ADDRESS'] == '7')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('u')) & (customer['C_COMMENT'] == 'p')][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS']).agg('count')

customer[(customer['C_COMMENT'] == 'c') & (customer['C_NATIONKEY'] != 12) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] != 'u') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 9) | (customer['C_CUSTKEY'] <= 11)][['C_PHONE', 'MKTSEGMENT']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'i') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] == '6')].merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'q') & (customer['C_NATIONKEY'] < 3) & (customer['C_COMMENT'] == 's') | (customer['C_COMMENT'].str.startswith('a')) | (customer['C_ADDRESS'] != 'h') | (customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] == 6419.551544171927)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('o')) | (customer['C_COMMENT'].str.startswith(',')) | (customer['C_NATIONKEY'] < 19) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] >= 20) & (customer['C_CUSTKEY'] == 60) & (customer['C_NATIONKEY'] > 4) | (customer['C_CUSTKEY'] > 73)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('u')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 43) | (customer['C_NATIONKEY'] <= 18) | (customer['C_ACCTBAL'] >= 8037.08740837975) & (customer['C_ACCTBAL'] <= 9815.135950097749) | (customer['C_ADDRESS'].str.startswith('4')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'] != 'Y') | (customer['C_COMMENT'] == 'g')][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 48) & (customer['C_NATIONKEY'] == 10) & (customer['C_CUSTKEY'] == 53) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < 716.0243662865262)][['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']]

customer[(customer['C_CUSTKEY'] > 42) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] != 'e') | (customer['C_CUSTKEY'] > 55)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 76)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('count')

customer[(customer['C_CUSTKEY'] >= 8) & (customer['C_PHONE'] != '2')].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] == 9)].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('a')) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 9675.899034625552) | (customer['C_PHONE'] == '13-') | (customer['C_ACCTBAL'] > 9030.958844867113)].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == ' ')].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] <= 13) | (nation['N_NATIONKEY'] == 13)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('X')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 20) | (customer['C_ACCTBAL'] == 3844.774899732148) | (customer['C_COMMENT'] == 'c') & (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 3) & (customer['C_COMMENT'] == 'c') | (customer['C_COMMENT'].str.startswith('.')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_CUSTKEY'] > 61)].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('V')) | (nation['N_NATIONKEY'] != 16) | (nation['N_NATIONKEY'] == 15)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 11) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] == 'I') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_NATIONKEY'] < 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 20) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('a')) | (customer['C_CUSTKEY'] > 94) & (customer['C_ACCTBAL'] == 8522.059447623493) & (customer['C_CUSTKEY'] > 35) | (customer['C_NAME'] == 'C')][['C_NAME', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 4) & (customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] >= 1930.29052571786) | (customer['C_NATIONKEY'] > 12) & (customer['C_ADDRESS'] == '3') & (customer['C_ACCTBAL'] < 8751.389611218325) | (customer['MKTSEGMENT'] != 'BUILDING')][['C_NAME']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_ADDRESS'] == 'Y') & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD']))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] == 'c')].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] == 't') | (nation['N_NATIONKEY'] >= 17)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 19) | (customer['C_ADDRESS'] == 'i') & (customer['C_ACCTBAL'] < 9498.923152704825) | (customer['C_COMMENT'] != 'd') | (customer['C_COMMENT'] == 'e')][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] <= 6678.027188289211)].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] == 12) | (nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] > 4674.907576540901) & (customer['C_COMMENT'] == 'q') & (customer['C_CUSTKEY'] > 57) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'r') | (customer['C_NATIONKEY'] == 21)][['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] < 2) & (nation['N_NATIONKEY'] < 10)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) | (customer['C_ACCTBAL'] >= 135.98911570467726) & (customer['C_COMMENT'] == 'k') | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'v')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] > 10) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 9) & (customer['C_ACCTBAL'] > 4437.148057618086)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] < 141) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] == 'O')][['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] < 130700) & (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] >= 269357.0235845211) & (orders['ORDERPRIORITY'].isin(['1-URGENT']))][['ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] != 126059) & (orders['TOTALPRICE'] < 50653.87787000393) | (orders['TOTALPRICE'] > 131452.39683356977)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('count')

lineitem.merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('o')) & (part['P_PARTKEY'] == 119) & (part['P_PARTKEY'] <= 154) & (part['PT_COMMENT'].str.startswith('c')) & (part['PT_COMMENT'] != 'c') & (part['RETAILPRICE'] <= 920.0170347063284) & (part['MFGR'] != 'Manufacturer#2') | (part['MFGR'] != 'Manufacturer#3') & (part['P_NAME'].str.startswith('a'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 91) & (supplier['S_ADDRESS'] != 'l') & (supplier['S_ADDRESS'] == 'W') | (supplier['S_SUPPKEY'] <= 150) | (supplier['S_COMMENT'] != 'u')][['S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 326) & (partsupp['P_COMMENT'].str.startswith('n'))][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['L_COMMENT'] == ' re') & (lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['DISCOUNT'] <= 0.08166392631333713) | (lineitem['L_SUPPKEY'] <= 8634) & (lineitem['L_PARTKEY'] > 48418) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')].merge(partsupp[(partsupp['P_COMMENT'] != 'f') & (partsupp['AVAILQTY'] < 5496)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['DISCOUNT'] < 0.0752810260441886) | (lineitem['L_PARTKEY'] < 103219) & (lineitem['LINENUMBER'] < 5) | (lineitem['RETURNFLAG'] == 'R')].merge(orders[(orders['O_ORDERKEY'] == 218) | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'] == 't') | (orders['TOTALPRICE'] <= 86301.42812644219) | (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['DISCOUNT'] < 0.06249125864395277)].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['QUANTITY'] == 35)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'h') & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['L_ORDERKEY'] != 73) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['L_SUPPKEY'] <= 9577)].merge(partsupp[(partsupp['AVAILQTY'] > 9271) & (partsupp['SUPPLYCOST'] > 427.37862042782234) | (partsupp['PS_PARTKEY'] < 31)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith(' re')) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['L_COMMENT'] != 'p') & (lineitem['L_ORDERKEY'] < 37) & (lineitem['L_PARTKEY'] > 114299) & (lineitem['SHIPMODE'].isin(['SHIP', 'MAIL', 'TRUCK', 'FOB', 'REG AIR'])) & (lineitem['EXTENDEDPRICE'] <= 48184.271910528565) | (lineitem['QUANTITY'] < 40)][['TAX', 'LINESTATUS', 'SHIPINSTRUCT', 'RETURNFLAG', 'QUANTITY']]

lineitem[(lineitem['L_ORDERKEY'] == 99) | (lineitem['LINENUMBER'] >= 1) & (lineitem['L_SUPPKEY'] != 839) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['DISCOUNT'] < 0.07780903471895195) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_ORDERKEY'] == 112) & (lineitem['QUANTITY'] > 15)].groupby(by=['SHIPMODE', 'DISCOUNT', 'QUANTITY', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 4889) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['DISCOUNT'] > 0.07287424447185381) | (lineitem['L_PARTKEY'] != 35874) | (lineitem['EXTENDEDPRICE'] > 55269.20682811952) | (lineitem['TAX'] != 0.0015151376130720351) | (lineitem['RETURNFLAG'] == 'R')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['PS_PARTKEY'] >= 41) & (partsupp['PS_SUPPKEY'] == 1436)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 9060) & (lineitem['EXTENDEDPRICE'] < 74178.64932347681) & (lineitem['TAX'] <= 0.014924424793545655) | (lineitem['TAX'] > 0.06782459630902604) | (lineitem['L_ORDERKEY'] >= 111)].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] <= 10) & (lineitem['LINENUMBER'] > 2) | (lineitem['TAX'] < 0.0007976981410895779) | (lineitem['TAX'] <= 0.032047485364431305) & (lineitem['L_SUPPKEY'] == 3108)].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['SHIPINSTRUCT'] != 'NONE')].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['LINENUMBER'] != 3) | (lineitem['TAX'] <= 0.051274341519135444) & (lineitem['LINENUMBER'] <= 2)][['DISCOUNT', 'TAX', 'LINENUMBER']].groupby(by=['DISCOUNT', 'TAX', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['L_PARTKEY'] < 64839) & (lineitem['L_PARTKEY'] >= 146012) & (lineitem['L_COMMENT'] == 'd') | (lineitem['L_PARTKEY'] == 163337) | (lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['L_PARTKEY'] < 123832) & (lineitem['L_SUPPKEY'] >= 1138)].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['TAX'] <= 0.0074149260626119595)][['L_COMMENT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE']].groupby(by=['RECEIPTDATE', 'L_COMMENT', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_SUPPKEY'] >= 1665) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['QUANTITY'] <= 24) & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['QUANTITY'] > 41)][['LINENUMBER', 'L_COMMENT', 'TAX', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['LINESTATUS'] == 'O')].merge(orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))][['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] > 0.035144127524000944) | (lineitem['EXTENDEDPRICE'] > 39773.71966291453) & (lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'COLLECT COD'])) & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['RETURNFLAG'] == 'A')].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPDATE', 'L_ORDERKEY', 'RECEIPTDATE']].groupby(by=['EXTENDEDPRICE', 'LINESTATUS', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'QUANTITY', 'LINENUMBER', 'TAX', 'SHIPMODE', 'RETURNFLAG']].groupby(by=['SHIPMODE', 'TAX', 'L_SUPPKEY', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY']].merge(orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['QUANTITY', 'RECEIPTDATE', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'LINENUMBER']].merge(partsupp.merge(part[(part['CONTAINER'] == 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_PARTKEY', 'COMMITDATE']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'TAX', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE', 'EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS']].groupby(by=['LINESTATUS', 'SHIPMODE']).agg('count')

lineitem[['SHIPMODE', 'DISCOUNT', 'SHIPINSTRUCT', 'TAX', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPDATE']].groupby(by=['DISCOUNT', 'SHIPINSTRUCT', 'SHIPDATE', 'L_ORDERKEY', 'TAX']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS', 'SHIPDATE', 'EXTENDEDPRICE']].groupby(by=['L_PARTKEY', 'SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE', 'SHIPINSTRUCT']).agg('count')

nation.merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] == 5)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'c') | (nation['N_NAME'] == 'R')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] == 'u') | (nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] > 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') | (nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] < 19) | (nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'E')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 's') & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] != 23)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'A') & (region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] == 11)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'] != 'V')].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] == 'P')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] > 11) | (nation['N_NATIONKEY'] != 21) | (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'I') & (nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] < 12)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] <= 7) | (nation['N_NATIONKEY'] != 8)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'E') | (nation['N_COMMENT'] != 'e') | (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'R')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_NATIONKEY'] >= 17) & (nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] == 'a')].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 12) | (nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] == 19)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] != 17) | (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 20) | (nation['N_NAME'] != 'R') | (nation['N_NAME'] == 'G')].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 21) | (nation['N_NATIONKEY'] > 1) | (nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 10) & (nation['N_NATIONKEY'] > 17) | (nation['N_NAME'] == 'A')].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] > 10)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_NATIONKEY'] != 8)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 18) | (nation['N_NAME'].str.startswith('S')) & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'] == 'y')][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 19)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'V')].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'].str.startswith('G'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] == 'y')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] == 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] > 0) | (nation['N_REGIONKEY'] == 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] != 'p')].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] < 9)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] >= 93) | (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] == 98) | (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_COMMENT'].str.startswith('a')) | (customer['C_ACCTBAL'] <= 6011.2558222221505)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 3) & (customer['C_PHONE'] != '25-') | (customer['C_COMMENT'] == 'k') & (customer['C_NATIONKEY'] != 1) & (customer['C_NATIONKEY'] == 19)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] <= 7060.11900563947) | (customer['C_ACCTBAL'] < 7468.223567189487) | (customer['C_ADDRESS'] != 'd') & (customer['C_ADDRESS'].str.startswith('h')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']).agg('count')

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] == 671) & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 20) & (orders['TOTALPRICE'] > 47372.962571357675) | (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] <= 709)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK']]

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] <= 369) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH'])) | (orders['O_CUSTKEY'] <= 56800)].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] >= 262816.14039465867) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 78)][['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS']).agg('count')

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] != 'b')][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] >= 9251) & (orders['ORDERSTATUS'] != 'F') | (orders['O_COMMENT'] == 'r') & (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] == 0)].groupby(by=['O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK', 'O_CUSTKEY']).agg('count')

orders[(orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['O_CUSTKEY'] >= 112563)][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] > 381) | (orders['O_CUSTKEY'] >= 136037) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] <= 13933) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer[['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] == 189) | (orders['TOTALPRICE'] < 276432.85648255784) | (orders['O_CUSTKEY'] <= 56928) & (orders['O_CUSTKEY'] < 42551)][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY']]

orders[(orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] != 156285.24839839883) & (orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_COMMENT'] == 'a')][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('count')

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] <= 228387.30342952322) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['O_COMMENT'] != ',') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] == 270) | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] == 100275) | (orders['O_CUSTKEY'] >= 40262) & (orders['O_CUSTKEY'] < 60134) | (orders['TOTALPRICE'] == 322788.92461774225)][['ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[(orders['O_COMMENT'].str.startswith('h')) & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] < 332805.66918129125) | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'r') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith(',')) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] != 'u')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 32443) | (orders['O_ORDERKEY'] != 96) | (orders['TOTALPRICE'] != 73470.92002479434) & (orders['O_ORDERKEY'] < 156) | (orders['O_ORDERKEY'] == 433) | (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] != 231296.37126187343)][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE']]

orders[(orders['O_CUSTKEY'] <= 145772)][['O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 57402) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] == 'C')].merge(customer[(customer['C_COMMENT'] == 'q')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 127905) & (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] == 108909) | (orders['O_CUSTKEY'] < 79587) | (orders['TOTALPRICE'] > 274805.93999850913) & (orders['SHIPPRIORITY'] < 0)][['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK']]

orders[(orders['O_CUSTKEY'] >= 20702) | (orders['TOTALPRICE'] == 208893.93624972948) | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['TOTALPRICE'] < 318671.6209334384) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM']))][['ORDERDATE', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 84291) | (orders['O_CUSTKEY'] < 19273)].merge(customer[(customer['C_ADDRESS'] != 'p') | (customer['C_COMMENT'] != 's') | (customer['C_COMMENT'].str.startswith('s')) & (customer['C_COMMENT'].str.startswith('s')) & (customer['C_CUSTKEY'] != 15) & (customer['C_ACCTBAL'] >= 5995.064350419166) & (customer['C_COMMENT'] == 'l') & (customer['C_COMMENT'] != 'c')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 602) | (orders['TOTALPRICE'] >= 150941.54156965672)][['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 672) | (orders['TOTALPRICE'] <= 113033.91442370787) & (orders['TOTALPRICE'] >= 227054.24340512167) & (orders['O_CUSTKEY'] != 149386) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_ORDERKEY'] < 458)].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 581) & (orders['TOTALPRICE'] != 294176.501408636) | (orders['O_ORDERKEY'] > 664) & (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['O', 'F']))].groupby(by=['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY', 'O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 591) | (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 62027) | (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] < 234) | (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] != 'C')].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] <= 49710) | (orders['O_ORDERKEY'] == 376)][['ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] != 231825.7861504788)][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('count')

orders[(orders['TOTALPRICE'] != 320307.02832600754) | (orders['O_COMMENT'] != 'f') | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 7608.07322647113) & (orders['O_CUSTKEY'] == 126938) | (orders['O_ORDERKEY'] == 246)][['O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 196964.08242931098) | (orders['ORDERSTATUS'] == 'P')].merge(customer.merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] < 3) & (customer['C_ADDRESS'] == 'g')].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] != 'v')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#42') & (part['P_NAME'].str.startswith('a')) & (part['BRAND'].isin(['Brand#54', 'Brand#13', 'Brand#55', 'Brand#14', 'Brand#35', 'Brand#34', 'Brand#43', 'Brand#53', 'Brand#22', 'Brand#33', 'Brand#31', 'Brand#45', 'Brand#23', 'Brand#11', 'Brand#32', 'Brand#51', 'Brand#25', 'Brand#52', 'Brand#21', 'Brand#24', 'Brand#15', 'Brand#12', 'Brand#42', 'Brand#44'])) & (part['TYPE'] == 'M') | (part['MFGR'] == 'Manufacturer#5') & (part['PT_COMMENT'] != 'x') | (part['SIZE'] > 38)].groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') & (part['PT_COMMENT'] != 'c') | (part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'] != 'n') | (part['RETAILPRICE'] > 944.5491992956412) | (part['PT_COMMENT'] != 'b') & (part['SIZE'] <= 9)][['MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#32') & (part['P_PARTKEY'] == 104) & (part['SIZE'] < 26) | (part['SIZE'] < 25) | (part['MFGR'] != 'Manufacturer#1') & (part['RETAILPRICE'] <= 948.1358038291453) | (part['CONTAINER'].str.startswith('WRAP'))].groupby(by=['P_NAME', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'SIZE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#45') & (part['P_PARTKEY'] > 170) | (part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] != 'Manufacturer#2') & (part['PT_COMMENT'] != ' ') & (part['P_NAME'].str.startswith('y'))][['TYPE', 'MFGR']].groupby(by=['TYPE', 'MFGR']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#51', 'Brand#31', 'Brand#53', 'Brand#41', 'Brand#24', 'Brand#23', 'Brand#21', 'Brand#35', 'Brand#45'])) | (part['SIZE'] < 15)][['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'BRAND', 'PT_COMMENT']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['PT_COMMENT'] != ' ') | (part['RETAILPRICE'] < 1029.271409667239) & (part['SIZE'] <= 29) | (part['MFGR'] != 'Manufacturer#4')][['SIZE', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') | (part['PT_COMMENT'] == 'n') | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] != 'Manufacturer#4') | (part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] >= 1082.9235511980287)][['P_NAME', 'CONTAINER', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND']]

part[(part['CONTAINER'] == 'WRAP') | (part['BRAND'].isin(['Brand#13', 'Brand#41', 'Brand#44', 'Brand#23', 'Brand#42', 'Brand#54', 'Brand#43', 'Brand#25', 'Brand#33', 'Brand#35', 'Brand#31', 'Brand#45', 'Brand#12'])) | (part['TYPE'] != 'L') | (part['BRAND'].isin(['Brand#22', 'Brand#41', 'Brand#45', 'Brand#44', 'Brand#35', 'Brand#52', 'Brand#25', 'Brand#53', 'Brand#42', 'Brand#31', 'Brand#15', 'Brand#51'])) | (part['BRAND'] != 'Brand#15') & (part['BRAND'] != 'Brand#13') | (part['PT_COMMENT'].str.startswith('b')) | (part['P_NAME'] == 'o') | (part['P_PARTKEY'] >= 25)].groupby(by=['P_PARTKEY', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['TYPE'] == 'M') | (part['P_PARTKEY'] != 87) | (part['SIZE'] != 41) | (part['P_NAME'] != 'o') | (part['SIZE'] > 42) | (part['P_NAME'] == 's') | (part['BRAND'] == 'Brand#34')][['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE']]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'].str.startswith('WRAP')) & (part['BRAND'] != 'Brand#43') & (part['MFGR'] == 'Manufacturer#3') | (part['MFGR'] == 'Manufacturer#2') | (part['P_PARTKEY'] > 21) | (part['BRAND'] == 'Brand#31') & (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE']).agg('count')

part[(part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'] == 'o') | (part['RETAILPRICE'] != 1027.1013231430463) | (part['BRAND'] != 'Brand#15') & (part['BRAND'] == 'Brand#32') & (part['RETAILPRICE'] > 911.452627019202) | (part['P_NAME'] == 'cor') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1']))].groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] != 'r') & (part['SIZE'] >= 5) & (part['BRAND'] != 'Brand#52') | (part['CONTAINER'] == 'SM') | (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] == 29) | (part['CONTAINER'] != 'WRAP') & (part['P_NAME'] == 's')].groupby(by=['CONTAINER', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['CONTAINER'] != 'SM') | (part['P_NAME'].str.startswith('g')) & (part['PT_COMMENT'].str.startswith('e')) | (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'].isin(['Brand#53', 'Brand#51', 'Brand#43', 'Brand#23', 'Brand#41', 'Brand#25', 'Brand#35', 'Brand#32', 'Brand#13', 'Brand#12', 'Brand#31', 'Brand#44', 'Brand#11', 'Brand#15', 'Brand#55', 'Brand#22', 'Brand#42', 'Brand#14'])) & (part['P_PARTKEY'] < 197) & (part['RETAILPRICE'] <= 1046.7680262069898)][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4'])) & (part['RETAILPRICE'] > 918.2736817449168) | (part['P_NAME'].str.startswith('n')) & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] == 1021.2941122649272) & (part['RETAILPRICE'] >= 1062.5584524956498) | (part['RETAILPRICE'] < 1050.5704925163584) | (part['MFGR'] != 'Manufacturer#3')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'TYPE', 'BRAND']]

part[(part['PT_COMMENT'] != ' fi') | (part['PT_COMMENT'].str.startswith('k')) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'].str.startswith('p')) & (part['TYPE'] != 'E') & (part['P_NAME'].str.startswith('lem')) & (part['RETAILPRICE'] <= 1067.8453837680606) & (part['RETAILPRICE'] < 924.5324317557124)].groupby(by=['MFGR', 'P_PARTKEY', 'BRAND', 'SIZE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] != 'o') | (part['CONTAINER'].str.startswith('SM')) | (part['BRAND'] != 'Brand#53') & (part['P_PARTKEY'] >= 80) & (part['P_PARTKEY'] > 148) & (part['RETAILPRICE'] == 996.2810319590179) | (part['P_PARTKEY'] < 110) & (part['BRAND'] != 'Brand#41') & (part['RETAILPRICE'] >= 1085.7125151514608)].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] == 'o') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) & (part['TYPE'].str.startswith('STA')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] < 100) | (part['TYPE'] != 'STA')][['BRAND', 'MFGR']].groupby(by=['BRAND', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 'i')][['MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND']].groupby(by=['PT_COMMENT', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 'v')][['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['BRAND', 'P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('d')) | (part['BRAND'].isin(['Brand#13', 'Brand#21', 'Brand#31', 'Brand#35', 'Brand#55', 'Brand#44', 'Brand#53', 'Brand#22', 'Brand#54', 'Brand#41', 'Brand#42', 'Brand#12', 'Brand#24', 'Brand#51', 'Brand#32', 'Brand#14', 'Brand#45', 'Brand#15', 'Brand#52', 'Brand#23', 'Brand#34', 'Brand#33', 'Brand#11'])) & (part['RETAILPRICE'] >= 904.3240810668813) | (part['SIZE'] != 18) | (part['PT_COMMENT'] != 'b') | (part['TYPE'] != 'P')][['TYPE', 'CONTAINER', 'BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 50) & (part['BRAND'] != 'Brand#32') & (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'] != 'Brand#12') & (part['P_NAME'].str.startswith('d')) | (part['MFGR'] != 'Manufacturer#4')][['TYPE', 'CONTAINER', 'MFGR']].groupby(by=['CONTAINER']).agg('count')

part[(part['P_PARTKEY'] == 110) | (part['RETAILPRICE'] == 1020.1715808581137) | (part['RETAILPRICE'] < 1086.2089349124483) | (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] == 'M') & (part['RETAILPRICE'] <= 911.0165078134507) | (part['P_NAME'] != 's') | (part['PT_COMMENT'] == ' fi')].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] >= 91)][['TYPE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] != 1067.4051999545609) | (part['PT_COMMENT'] != 'o') & (part['RETAILPRICE'] <= 1009.4455666073196) & (part['MFGR'] == 'Manufacturer#1') & (part['RETAILPRICE'] > 1073.4124268273256) & (part['PT_COMMENT'] == 'w') | (part['RETAILPRICE'] >= 963.6027103244129) | (part['RETAILPRICE'] > 916.3164891410694)].groupby(by=['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] == 979.6747073735382) & (part['P_PARTKEY'] <= 62) & (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] <= 915.0673341710245)][['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR']].groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] >= 999.6511177044815)][['P_NAME', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['SIZE'] != 41)][['SIZE', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[(part['SIZE'] < 10) | (part['RETAILPRICE'] > 1053.752023065608) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) & (part['RETAILPRICE'] != 905.6431963180057) & (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] <= 1086.2624719554553) & (part['P_PARTKEY'] == 175) | (part['P_NAME'].str.startswith('d')) | (part['PT_COMMENT'] == 'q')].groupby(by=['BRAND', 'P_PARTKEY', 'SIZE']).agg('count')

part[(part['SIZE'] == 14) | (part['P_NAME'] == 'l') | (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] != 48) & (part['CONTAINER'] != 'SM') | (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] > 165)][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE']]

part[(part['TYPE'] != 'STA') & (part['P_PARTKEY'] <= 13) | (part['BRAND'] == 'Brand#23') & (part['TYPE'].str.startswith('E'))][['P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'BRAND']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'STA') | (part['TYPE'] == 'SMA') & (part['RETAILPRICE'] >= 916.988386043003) | (part['SIZE'] >= 5) & (part['PT_COMMENT'] == 'w') | (part['BRAND'] == 'Brand#31')][['P_PARTKEY', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'S') | (part['TYPE'].str.startswith('S')) & (part['P_PARTKEY'] <= 171) & (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] < 15) & (part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] > 12) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1']))].groupby(by=['TYPE', 'SIZE', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['P_NAME'] == 'f') | (part['P_PARTKEY'] >= 133) & (part['RETAILPRICE'] < 1073.4864042585768) & (part['P_PARTKEY'] == 64)][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE']]

part[['BRAND', 'MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['SIZE', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE']).agg('count')

part[['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'SIZE', 'MFGR', 'CONTAINER']].groupby(by=['PT_COMMENT', 'BRAND', 'SIZE', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part[['P_NAME', 'BRAND', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY']].groupby(by=['MFGR', 'TYPE', 'RETAILPRICE', 'CONTAINER']).agg('mean', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY']].groupby(by=['TYPE', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']].groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

part[['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'CONTAINER']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['BRAND', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'CONTAINER']).agg('min', numeric_only=True)

part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'P_NAME', 'SIZE']).agg('min', numeric_only=True)

part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'TYPE', 'RETAILPRICE']].groupby(by=['BRAND', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['BRAND', 'MFGR', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['TYPE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME']).agg('count')

partsupp.merge(part[(part['BRAND'] == 'Brand#52') & (part['P_NAME'].str.startswith('b')) & (part['PT_COMMENT'] == '!') & (part['PT_COMMENT'] == '!') & (part['BRAND'] == 'Brand#14') & (part['P_PARTKEY'] == 98) & (part['P_PARTKEY'] <= 186) | (part['MFGR'] == 'Manufacturer#5') | (part['P_NAME'] == 'lin')][['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'] == 'WRAP') & (part['PT_COMMENT'] != '!')][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) | (part['CONTAINER'] != 'MED') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == 'b') & (part['BRAND'].isin(['Brand#34', 'Brand#14', 'Brand#54', 'Brand#11', 'Brand#33', 'Brand#53', 'Brand#13', 'Brand#41', 'Brand#25', 'Brand#22', 'Brand#45', 'Brand#31', 'Brand#42', 'Brand#24', 'Brand#23', 'Brand#43', 'Brand#52', 'Brand#15', 'Brand#55', 'Brand#32', 'Brand#12', 'Brand#51'])) & (part['RETAILPRICE'] != 1055.5167236524574) | (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] == 13) | (part['BRAND'] == 'Brand#42')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('h')) | (part['BRAND'] == 'Brand#51') | (part['TYPE'] != 'M') | (part['TYPE'] == 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'TYPE', 'RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] > 136) & (part['BRAND'].isin(['Brand#23', 'Brand#13'])) | (part['P_NAME'] == 'v')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] >= 180) & (part['P_NAME'].str.startswith('l')) & (part['P_PARTKEY'] != 34) | (part['SIZE'] == 17) & (part['P_NAME'] != 'g') & (part['P_PARTKEY'] <= 62)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

partsupp.merge(part[['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('i'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_NATIONKEY'] == 16) & (nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] != 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 4665.314092085279)].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('w'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 's') | (supplier['S_ACCTBAL'] <= 1932.1775809864764) | (supplier['S_COMMENT'] == 'x') | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] == 9)].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] > 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 7974) & (partsupp['AVAILQTY'] <= 5519) | (partsupp['PS_SUPPKEY'] > 5562) & (partsupp['P_COMMENT'] != ';') & (partsupp['P_COMMENT'] != 'h')][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 6) & (partsupp['P_COMMENT'] != 'r')][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 40) & (partsupp['PS_SUPPKEY'] == 315) | (partsupp['AVAILQTY'] < 8162)][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] == 'f') | (part['TYPE'] != 'E') | (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 15) | (partsupp['PS_SUPPKEY'] > 5882)].merge(supplier.merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 49) | (partsupp['PS_SUPPKEY'] >= 5621) & (partsupp['SUPPLYCOST'] > 553.3315324419098) | (partsupp['SUPPLYCOST'] >= 458.97536492558913) | (partsupp['PS_PARTKEY'] > 11)].merge(part[(part['PT_COMMENT'] == 'n') | (part['BRAND'] != 'Brand#12') & (part['PT_COMMENT'].str.startswith('u')) & (part['RETAILPRICE'] != 1082.4740691953011) | (part['BRAND'] == 'Brand#54')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1144) & (partsupp['PS_PARTKEY'] <= 28)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 3612) | (partsupp['P_COMMENT'] != ' th') & (partsupp['PS_PARTKEY'] == 49)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 4081) & (partsupp['SUPPLYCOST'] == 85.23895800646515) | (partsupp['PS_SUPPKEY'] == 2548)].merge(part[(part['SIZE'] <= 6) | (part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] != 'c') | (part['PT_COMMENT'].str.startswith('!')) | (part['SIZE'] > 29) & (part['PT_COMMENT'] != 'y') | (part['SIZE'] == 43)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 89) & (partsupp['AVAILQTY'] == 9929) & (partsupp['PS_SUPPKEY'] >= 4898)].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6814) | (partsupp['SUPPLYCOST'] >= 327.55326867883366)].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 5939) & (partsupp['AVAILQTY'] < 9250) & (partsupp['P_COMMENT'] == 'r')].merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['PS_PARTKEY'] <= 18)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'l')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'q') | (partsupp['PS_SUPPKEY'] <= 6990) & (partsupp['AVAILQTY'] > 6108) & (partsupp['AVAILQTY'] < 8765)].merge(supplier[(supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_PHONE'] != '1') | (supplier['S_NATIONKEY'] > 0)][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['AVAILQTY'] <= 4644)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('b')) & (partsupp['AVAILQTY'] > 2819) & (partsupp['SUPPLYCOST'] <= 484.49119318794146) | (partsupp['PS_SUPPKEY'] == 1405) & (partsupp['PS_PARTKEY'] < 33)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 881.6308170329924) & (partsupp['P_COMMENT'].str.startswith('v'))].merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'i')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 876.4070607314096) & (partsupp['AVAILQTY'] == 5033) | (partsupp['PS_SUPPKEY'] == 1357) | (partsupp['P_COMMENT'] != 'i')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'MFGR', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 876.7017006295611) | (partsupp['SUPPLYCOST'] == 817.7519856274865) | (partsupp['SUPPLYCOST'] == 326.4346734641437)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 20) & (part['MFGR'].isin(['Manufacturer#5'])) & (part['P_NAME'].str.startswith('i'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 361.2967991649717) & (partsupp['PS_PARTKEY'] < 29) & (partsupp['PS_PARTKEY'] >= 7)].merge(part[(part['P_NAME'] != 'c') | (part['PT_COMMENT'].str.startswith('b'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 378.06663886037876) | (partsupp['PS_PARTKEY'] > 16)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 670.4294371660766)].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'SIZE', 'MFGR']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'WRAP') | (part['SIZE'] != 32) | (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_PARTKEY'] > 103)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] <= 15) | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'].isin(['Manufacturer#2'])) & (part['P_PARTKEY'] < 136) & (part['PT_COMMENT'] == 'ss ') & (part['PT_COMMENT'] != 'l') & (part['BRAND'].isin(['Brand#52', 'Brand#21', 'Brand#12', 'Brand#43', 'Brand#15', 'Brand#41', 'Brand#11', 'Brand#13', 'Brand#31', 'Brand#35', 'Brand#42', 'Brand#53', 'Brand#54', 'Brand#23', 'Brand#55', 'Brand#24'])) & (part['P_PARTKEY'] == 7)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'd') | (part['P_PARTKEY'] > 43) & (part['BRAND'].isin(['Brand#54', 'Brand#13', 'Brand#31', 'Brand#51', 'Brand#32'])) | (part['TYPE'] == 'L') & (part['RETAILPRICE'] >= 983.7447928236726) | (part['BRAND'].isin(['Brand#53', 'Brand#24', 'Brand#14', 'Brand#33', 'Brand#12', 'Brand#21', 'Brand#23', 'Brand#34', 'Brand#25', 'Brand#35', 'Brand#31', 'Brand#43'])) | (part['P_NAME'] != 'm') | (part['SIZE'] < 12) & (part['BRAND'] != 'Brand#54')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] > 14) & (part['BRAND'] != 'Brand#25') | (part['RETAILPRICE'] >= 995.3008222474103) | (part['RETAILPRICE'] > 922.7412127154867) | (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'i') & (supplier['S_NATIONKEY'] <= 15) | (supplier['S_COMMENT'] == 'q') & (supplier['S_NATIONKEY'] < 9)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('1'))][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'SIZE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 't') & (supplier['S_SUPPKEY'] < 162) | (supplier['S_ACCTBAL'] < 6890.30964977785) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 8274.343331136397) & (supplier['S_ACCTBAL'] > 4202.822293581028)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] != 'k') | (supplier['S_ADDRESS'] == 'P') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'u') | (supplier['S_SUPPKEY'] == 131) & (supplier['S_PHONE'].str.startswith('2'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != 'b')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['MFGR', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 't')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'] == 'v')].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] <= 21) | (nation['N_NAME'] == 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 8498.708481394628) | (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_COMMENT'] != 'e') | (supplier['S_ACCTBAL'] <= 6197.4390560502925)].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 'i') | (nation['N_NAME'] != 'F')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4585.224561587492) & (supplier['S_NATIONKEY'] > 2) & (supplier['S_ACCTBAL'] < 727.672801564509)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 3676.5047832620157) & (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] <= 150) | (supplier['S_ACCTBAL'] >= 7109.751644827946)][['S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_COMMENT']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'z') | (supplier['S_COMMENT'] != 'g') | (supplier['S_ADDRESS'] == 'Y') | (supplier['S_PHONE'] != '17-') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'y') & (supplier['S_COMMENT'] == 'o')][['S_NAME', 'S_COMMENT']].groupby(by=['S_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'd') | (supplier['S_COMMENT'].str.startswith('w'))][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('8')) | (supplier['S_ACCTBAL'] == 5980.894472306375) | (supplier['S_ADDRESS'] == 'q') | (supplier['S_ADDRESS'] == 'L') & (supplier['S_COMMENT'] == 'the') | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != '!') & (supplier['S_ACCTBAL'] > 8394.058358170541) | (supplier['S_ADDRESS'].str.startswith('U')) & (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'] != '17-') & (supplier['S_SUPPKEY'] > 10) | (supplier['S_ACCTBAL'] <= 8216.499926450528)][['S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'd') | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] < 199) | (supplier['S_NATIONKEY'] == 6) | (supplier['S_COMMENT'] != ' ') & (supplier['S_ADDRESS'] == 'r')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_COMMENT'] != 's')][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_SUPPKEY'] != 67) & (supplier['S_ACCTBAL'] == 5260.024709067911) & (supplier['S_NAME'] != 'S')][['S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_PHONE'].str.startswith('28-'))][['S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_ACCTBAL'] >= 2830.0707997191057) & (supplier['S_SUPPKEY'] < 40) & (supplier['S_COMMENT'] == 'x') | (supplier['S_NATIONKEY'] < 9) | (supplier['S_NATIONKEY'] < 12)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'f') & (supplier['S_ADDRESS'] != '0') | (supplier['S_ADDRESS'] == 'q')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] == 2) | (nation['N_NATIONKEY'] < 3) | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 4) & (supplier['S_PHONE'] != '14-')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'N') & (supplier['S_SUPPKEY'] == 57) | (supplier['S_PHONE'] != '17-') | (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 72) | (supplier['S_NATIONKEY'] > 18) | (supplier['S_SUPPKEY'] >= 147)][['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 11) & (supplier['S_ACCTBAL'] == 463.26766003967373) | (supplier['S_SUPPKEY'] != 156) | (supplier['S_COMMENT'] == 't') & (supplier['S_ADDRESS'] != 'g') & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']]

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 1397.4267262577248) | (supplier['S_NATIONKEY'] <= 23)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '3') & (supplier['S_SUPPKEY'] != 177) | (supplier['S_SUPPKEY'] > 183) | (supplier['S_ACCTBAL'] == 4655.150250870354)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] >= -941.9369112942423) | (supplier['S_COMMENT'].str.startswith('x'))].merge(nation[(nation['N_COMMENT'] == 'v')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] > 13) | (supplier['S_COMMENT'] != 'f') & (supplier['S_COMMENT'] != 'b') & (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] != 'p') | (supplier['S_ACCTBAL'] == 7183.501796972012)][['S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 88) | (supplier['S_NATIONKEY'] <= 10) & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE']].groupby(by=['S_PHONE', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] >= 7) | (supplier['S_ACCTBAL'] != 2426.016548941974) | (supplier['S_NATIONKEY'] == 1) & (supplier['S_ADDRESS'] != 'I') & (supplier['S_NATIONKEY'] > 11) & (supplier['S_ADDRESS'] == 'B')][['S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'].str.startswith('M')) | (supplier['S_ACCTBAL'] == 7983.556787303031) & (supplier['S_COMMENT'] != 'e') & (supplier['S_PHONE'] == '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_COMMENT'] != 'bli') | (supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] != 1326.5014642630265) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '2')][['S_SUPPKEY', 'S_PHONE']].groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_ACCTBAL'] >= -104.42925272850891) | (supplier['S_ACCTBAL'] == 5166.368985419547) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 155) | (supplier['S_NATIONKEY'] < 13)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 75)].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] < 3)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 93) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 66.28127965038448) & (supplier['S_ADDRESS'] == 'W')].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] == 'A')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 159) & (supplier['S_SUPPKEY'] != 149) | (supplier['S_COMMENT'] == 'al ') & (supplier['S_ADDRESS'].str.startswith('O'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 17) & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] != 5)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] != 5) | (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 17)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] != 'u')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'o')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'P')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] == 'y')].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] < 3) & (nation['N_NATIONKEY'] >= 22)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'].str.startswith('K'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 8) & (nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] != 7) | (nation['N_NATIONKEY'] != 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] <= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 2) | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] >= 12)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] != 3) & (nation['N_NATIONKEY'] != 4) & (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'o')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 3520.9493469151084) & (customer['C_NATIONKEY'] < 1) & (customer['C_ACCTBAL'] < 314.3386449696802) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE']))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 5982.171566566318) & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_PHONE'].str.startswith('25-'))][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 9850.292122739953) | (customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] == 7) & (customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_CUSTKEY'] >= 39) | (customer['C_NAME'] != 'C')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 7051.932195142384) & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'p') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'l') & (customer['C_PHONE'].str.startswith('18-'))].groupby(by=['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 873.23373680904) & (customer['C_CUSTKEY'] >= 99)].merge(nation[(nation['N_NATIONKEY'] == 16) & (nation['N_NATIONKEY'] >= 21) & (nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != 'v')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 2491.187067938777) & (customer['C_NATIONKEY'] < 7)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 3230.836197181293) | (customer['C_CUSTKEY'] != 27) & (customer['C_CUSTKEY'] == 35) & (customer['C_ACCTBAL'] < 2860.740666784001) & (customer['C_ACCTBAL'] < 6340.807465792632) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] <= 16) | (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 343.9268753731619) | (customer['C_ACCTBAL'] <= 4742.56893977) | (customer['C_ACCTBAL'] >= 4374.900887847564) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '27-')].merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] == 'u') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 3747.6899308127076) & (customer['C_PHONE'] == '13-') & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] == 6)].merge(nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'F') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith('g')) | (customer['C_COMMENT'].str.startswith('d')) & (customer['C_NATIONKEY'] <= 3) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_ADDRESS'] != 'z')][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']]

customer[(customer['C_ADDRESS'] == 'K') | (customer['C_CUSTKEY'] == 43) | (customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] >= 12) | (customer['C_NATIONKEY'] <= 17) | (customer['C_NATIONKEY'] <= 8)][['C_PHONE', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != ' ') & (customer['C_ADDRESS'].str.startswith('E')) & (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_ACCTBAL'] < 6365.734804262557) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 7403.56423050133) | (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_NAME', 'C_PHONE']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 't') | (customer['C_PHONE'] == '3') | (customer['C_ACCTBAL'] != 1610.7291009250512) | (customer['C_COMMENT'] != 'r') & (customer['C_PHONE'] == '13-')][['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 68) | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 4763.058977255828) & (customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] > 45) & (customer['C_PHONE'] != '22-')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('count')

customer[(customer['C_CUSTKEY'] == 72) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'] != 'R') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) & (customer['C_COMMENT'] != 'e') | (customer['C_ACCTBAL'] < 8744.210678469668) & (customer['C_NATIONKEY'] >= 4)][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 63) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ACCTBAL'] <= 2075.038678555784)][['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('count')

customer[(customer['C_CUSTKEY'] >= 66) | (customer['C_ACCTBAL'] <= 2779.9974708681943)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 71) & (customer['C_NATIONKEY'] > 13) & (customer['C_CUSTKEY'] != 78) | (customer['C_CUSTKEY'] == 78) | (customer['C_COMMENT'] == 'n') & (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '2')].groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == 5873.022477607902) | (customer['C_ACCTBAL'] != 8654.348979786195)].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] != 'v')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 20) | (customer['C_NATIONKEY'] < 10) | (customer['C_PHONE'] == '2') & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 3) & (customer['C_ACCTBAL'] > 7445.10163748917) & (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] == 18) | (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 18)].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'P')].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 1) & (customer['C_NATIONKEY'] >= 22) & (customer['C_ADDRESS'].str.startswith(',')) & (customer['C_COMMENT'] != 'y') | (customer['C_COMMENT'] == 'p') & (customer['C_PHONE'] != '2')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] > 13) | (customer['C_NATIONKEY'] > 3) | (customer['C_CUSTKEY'] < 81) & (customer['C_CUSTKEY'] < 59) & (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] > -576.4008731239387)][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_PHONE'] == '18-') & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 22) | (customer['MKTSEGMENT'] != 'BUILDING')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['C_ADDRESS'].str.startswith('H'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_PHONE'] == '13-') & (customer['C_ACCTBAL'] != 6027.537409215768) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] < 9715.983466550084) | (customer['C_COMMENT'] == 'n') | (customer['C_PHONE'].str.startswith('13-'))].merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) | (customer['C_ACCTBAL'] == 3396.7202819828526) | (customer['C_CUSTKEY'] > 25)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']]

customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] == 5) | (customer['C_ADDRESS'] == 'M') & (customer['C_NATIONKEY'] == 7) & (customer['C_COMMENT'] != 'o') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING'])) & (customer['C_PHONE'] != '2') | (customer['C_ADDRESS'].str.startswith('Y'))][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ACCTBAL'] != 6417.802318707246) & (customer['C_CUSTKEY'] != 81) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] >= 53) | (customer['C_CUSTKEY'] < 27) | (customer['C_COMMENT'] == 'c') & (customer['C_ACCTBAL'] >= 2986.431382680452)][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']]

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '2') & (customer['C_ADDRESS'].str.startswith('Y')) | (customer['C_COMMENT'].str.startswith('c'))].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('1')) & (customer['C_PHONE'] != '13-') | (customer['C_COMMENT'].str.startswith('u')) | (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] > 6) | (customer['C_ACCTBAL'] > -53.41934468029547)][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] > 33) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_ACCTBAL'] != 2171.2784323022556) | (customer['C_ACCTBAL'] != 6602.12126091049) | (customer['C_ADDRESS'].str.startswith('g')) | (customer['C_COMMENT'] == 'h')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation[(nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] > 9) & (nation['N_NAME'].str.startswith('P'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_CUSTKEY'] <= 60) & (customer['C_COMMENT'] == 't') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_PHONE'] != '22-')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] > 27) | (orders['TOTALPRICE'] == 120483.06658002247) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] == 'P')][['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['TOTALPRICE'] > 277024.6123435196) & (orders['O_CUSTKEY'] <= 106512) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] <= 321) | (orders['O_COMMENT'].str.startswith('r')) | (orders['TOTALPRICE'] >= 155025.84256625365) | (orders['O_ORDERKEY'] == 209)][['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 146) & (supplier['S_NATIONKEY'] != 0) & (supplier['S_SUPPKEY'] <= 21) | (supplier['S_SUPPKEY'] > 115) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] > 187)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 25) & (partsupp['PS_PARTKEY'] <= 38)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'RETAILPRICE']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 4607) & (partsupp['PS_PARTKEY'] == 27) | (partsupp['P_COMMENT'] != 'r') | (partsupp['PS_SUPPKEY'] == 729) | (partsupp['PS_SUPPKEY'] > 2753)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 3078) & (partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['P_COMMENT'] == 'i') & (partsupp['SUPPLYCOST'] <= 172.757117343311)][['PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'a') | (partsupp['SUPPLYCOST'] == 32.485057519186746)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'j') & (partsupp['SUPPLYCOST'] == 475.3815637154226) | (partsupp['PS_SUPPKEY'] >= 5520) & (partsupp['AVAILQTY'] >= 1204)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'BRAND', 'MFGR']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] > 908.927102866471) | (part['PT_COMMENT'] == ' fi') | (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] > 139) | (part['SIZE'] >= 12)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']).agg('count')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16')][['SHIPMODE', 'RETURNFLAG', 'DISCOUNT', 'QUANTITY', 'COMMITDATE', 'TAX', 'RECEIPTDATE']].groupby(by=['QUANTITY', 'SHIPMODE', 'RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['QUANTITY'] != 10) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_PARTKEY'] <= 106231) | (lineitem['LINESTATUS'] == 'O')].groupby(by=['L_COMMENT', 'L_PARTKEY', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.002650219194336101) | (lineitem['L_SUPPKEY'] >= 9451) & (lineitem['L_ORDERKEY'] != 6) | (lineitem['DISCOUNT'] == 0.06856506524616325)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.0032479243117997437) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'TRUCK', 'FOB', 'SHIP'])) | (lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] <= '1998-11-06')][['SHIPDATE', 'RECEIPTDATE', 'TAX', 'L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER', 'LINESTATUS']]

lineitem[(lineitem['DISCOUNT'] < 0.0845578333715764) & (lineitem['L_ORDERKEY'] <= 43) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL'])) & (lineitem['L_SUPPKEY'] != 4615) & (lineitem['L_ORDERKEY'] == 24) | (lineitem['L_PARTKEY'] == 175792) & (lineitem['L_SUPPKEY'] != 452) & (lineitem['COMMITDATE'] >= '1998-10-16')][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.0033081471609645143) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['DISCOUNT'] == 0.08314910225310662) & (lineitem['L_PARTKEY'] != 61995) & (lineitem['L_SUPPKEY'] > 2305) | (lineitem['L_PARTKEY'] < 63427)][['DISCOUNT', 'L_COMMENT']].groupby(by=['L_COMMENT', 'DISCOUNT']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 12099.264537217685) | (lineitem['SHIPMODE'].isin(['AIR'])) & (lineitem['EXTENDEDPRICE'] < 73285.68290206199)][['DISCOUNT', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'TAX']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 3) & (lineitem['TAX'] <= 0.0195790965107517) | (lineitem['EXTENDEDPRICE'] == 54672.923256378344) & (lineitem['TAX'] != 0.07452053363800866) | (lineitem['COMMITDATE'] <= '1992-05-15')][['DISCOUNT', 'L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG', 'L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'LINENUMBER', 'SHIPDATE']]

lineitem[(lineitem['LINENUMBER'] >= 2) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')].merge(partsupp[(partsupp['AVAILQTY'] <= 5110) | (partsupp['PS_PARTKEY'] == 22) | (partsupp['PS_SUPPKEY'] != 4680) | (partsupp['SUPPLYCOST'] > 979.1799690981654) & (partsupp['PS_PARTKEY'] > 36)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('h')) | (lineitem['QUANTITY'] != 1) & (lineitem['L_COMMENT'] != 'r') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['EXTENDEDPRICE'] >= 45658.6336632135)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('t')) | (lineitem['L_ORDERKEY'] == 62) & (lineitem['LINESTATUS'] != 'F') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_PARTKEY'] > 84999) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['COMMITDATE'] > '1998-10-16')][['COMMITDATE', 'L_COMMENT', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 24) & (lineitem['L_PARTKEY'] != 98817) | (lineitem['L_COMMENT'].str.startswith(' ca')) & (lineitem['TAX'] < 0.03621974763520388) & (lineitem['EXTENDEDPRICE'] < 52268.610308828975) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['TAX'] == 0.07238418405329744) | (lineitem['L_PARTKEY'] >= 49899) & (lineitem['COMMITDATE'] != '1992-05-15')][['L_COMMENT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'TAX', 'COMMITDATE']]

lineitem[(lineitem['L_SUPPKEY'] != 5293) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['LINENUMBER'] == 1) & (lineitem['L_ORDERKEY'] > 138) | (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_SUPPKEY'] <= 6172) | (lineitem['DISCOUNT'] < 0.01912234966139066) | (lineitem['EXTENDEDPRICE'] >= 39333.08329573106)][['DISCOUNT', 'L_COMMENT', 'COMMITDATE', 'SHIPMODE']]

lineitem[(lineitem['L_SUPPKEY'] < 3151) & (lineitem['SHIPMODE'] == 'AIR') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINESTATUS'] != 'F') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['DISCOUNT'] != 0.004976916267219512) & (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['DISCOUNT'] > 0.02355038024246601)].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] < 4883) & (lineitem['EXTENDEDPRICE'] <= 3225.2883176767336) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_COMMENT'] == ' ca') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['LINENUMBER'] == 3) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')].merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] < 8483) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['L_ORDERKEY'] != 26) | (lineitem['L_SUPPKEY'] == 2596) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['QUANTITY'] <= 12)].merge(partsupp[(partsupp['SUPPLYCOST'] == 598.8727072778343)][['PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 6106) & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_PARTKEY'] == 18095) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['L_PARTKEY'] == 115742) | (lineitem['L_COMMENT'] != 'v') & (lineitem['LINESTATUS'] != 'F') & (lineitem['L_COMMENT'] == 'v')][['COMMITDATE', 'DISCOUNT', 'TAX', 'SHIPDATE', 'L_COMMENT']]

lineitem[(lineitem['QUANTITY'] > 41) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['LINENUMBER'] < 2)][['L_COMMENT', 'SHIPDATE', 'TAX']].groupby(by=['SHIPDATE', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 4) & (lineitem['L_COMMENT'] != 'a') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RETURNFLAG'].isin(['A', 'R']))][['SHIPMODE', 'TAX', 'RETURNFLAG', 'QUANTITY', 'L_SUPPKEY', 'SHIPINSTRUCT']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['TAX'] >= 0.04384804262288043)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'MED') | (part['SIZE'] == 23)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['L_PARTKEY'] <= 124655) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['TAX'] < 0.009787898728264412) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['QUANTITY'] > 46) & (lineitem['QUANTITY'] < 2) & (lineitem['L_PARTKEY'] > 196979)][['COMMITDATE', 'RECEIPTDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'TAX', 'RETURNFLAG']]

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['SHIPMODE'] == 'AIR') | (lineitem['L_PARTKEY'] <= 179093) & (lineitem['DISCOUNT'] > 0.05141106188701248) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['DISCOUNT'] > 0.055295292993790615) | (lineitem['QUANTITY'] >= 14)].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['L_ORDERKEY'] < 65) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['L_SUPPKEY'] > 3605) | (lineitem['L_COMMENT'].str.startswith('-')) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5058)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] != 0.07120239478411662) | (lineitem['L_SUPPKEY'] <= 9766) | (lineitem['TAX'] != 0.07016823024389611) & (lineitem['TAX'] <= 0.0683187107391997) & (lineitem['QUANTITY'] == 10) | (lineitem['RETURNFLAG'] != 'R')][['DISCOUNT', 'TAX', 'RETURNFLAG', 'L_SUPPKEY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'RETURNFLAG', 'L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'x')].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE', 'SHIPMODE', 'L_ORDERKEY', 'SHIPDATE']].merge(orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'QUANTITY', 'SHIPINSTRUCT', 'L_COMMENT', 'TAX', 'SHIPDATE', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'DISCOUNT', 'QUANTITY', 'L_ORDERKEY', 'SHIPDATE']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPMODE', 'TAX', 'EXTENDEDPRICE', 'L_ORDERKEY', 'DISCOUNT', 'SHIPDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_CUSTKEY']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'L_COMMENT', 'L_PARTKEY', 'LINENUMBER']].merge(orders[(orders['TOTALPRICE'] <= 108084.70216099622) | (orders['O_ORDERKEY'] == 342) & (orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_COMMENT'] == 'f') & (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'QUANTITY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'TAX', 'COMMITDATE']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RETURNFLAG', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPDATE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 398.62922248897377)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY']].groupby(by=['LINESTATUS', 'SHIPINSTRUCT', 'DISCOUNT', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[['SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'RECEIPTDATE', 'SHIPDATE', 'TAX', 'LINESTATUS', 'SHIPINSTRUCT']].groupby(by=['L_SUPPKEY', 'SHIPMODE', 'SHIPDATE']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'ASI') & (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') & (nation['N_NATIONKEY'] >= 23) & (nation['N_NATIONKEY'] == 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] <= 16)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'c') | (nation['N_NAME'] == 'I') & (nation['N_COMMENT'] != 'e') | (nation['N_NAME'] != 'C')][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'] == 'o')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] != 14)].merge(region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] > 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'I') | (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'P')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] <= 14) & (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] == 'p')][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'P') & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'S') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('R'))][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] <= 20) | (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'r')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] != 'B') & (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] >= 3)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] != 14) & (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] >= 2) & (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] >= 18) | (nation['N_COMMENT'] != 'o')].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 10) | (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] >= 8) | (nation['N_NATIONKEY'] <= 15)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 13) | (nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('t'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 14) | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 1) | (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] <= 20) | (nation['N_COMMENT'] == 'o')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 2) & (nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] > 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 16)].merge(region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 5)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 21) | (nation['N_NATIONKEY'] > 5) | (nation['N_NATIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('R'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 20) | (nation['N_COMMENT'] != 'o') & (nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] >= 6)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 11)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] < 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1)][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'J')][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] > 18)].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'M')].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'R') & (nation['N_NAME'] == 'M')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'F')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] == 'E') | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 3270.513965760235)][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] == 'E') & (customer['C_ACCTBAL'] >= 7631.504881844941) | (customer['C_CUSTKEY'] >= 31) | (customer['C_ACCTBAL'] <= 7001.944992387331)].merge(nation[(nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != ' ') | (customer['C_CUSTKEY'] == 74) | (customer['C_COMMENT'] != ',') | (customer['C_COMMENT'] == 'o') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] < 86) & (customer['C_PHONE'] == '22-')][['C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] < 12) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] > 6384.211331478598) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] <= 17) & (customer['C_CUSTKEY'] == 93) | (customer['C_CUSTKEY'] <= 18) & (customer['C_NATIONKEY'] < 19) | (customer['C_ACCTBAL'] <= 8756.422099494162) & (customer['C_ACCTBAL'] == 5314.278062497464) & (customer['C_ACCTBAL'] != 7740.13333728918)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] != 47982) & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] > 112670) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] <= 531) & (orders['O_CUSTKEY'] > 137212) | (orders['SHIPPRIORITY'] != 0)][['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'].str.startswith(',')) & (orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] != 799)].merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13')].merge(customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'].str.startswith(' '))][['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] == 143796.5100309165) | (orders['ORDERSTATUS'].isin(['O', 'P']))].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] != 64356.69078672012) & (orders['O_ORDERKEY'] > 343) & (orders['SHIPPRIORITY'] > 0)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('a'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 19411) & (orders['O_CUSTKEY'] >= 9309) | (orders['O_ORDERKEY'] < 355)][['SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != ',')].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 'd') | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_ACCTBAL'] >= 2958.47468578542) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_CUSTKEY'] < 40)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'g') & (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 'b') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != '.') & (orders['ORDERDATE'] < '1998-07-21')][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']]

orders[(orders['O_CUSTKEY'] > 69629) & (orders['TOTALPRICE'] == 192524.70132187524) & (orders['O_ORDERKEY'] != 157) & (orders['TOTALPRICE'] == 303814.484584556) & (orders['O_COMMENT'] != 'i')][['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] != 364) | (orders['O_COMMENT'] != 'i') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] == 299) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] <= 0)][['O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[(orders['O_ORDERKEY'] != 716) & (orders['O_ORDERKEY'] < 623) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'x') | (orders['O_ORDERKEY'] >= 788) & (orders['O_COMMENT'] != 'uri') & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM']))][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']]

orders[(orders['O_ORDERKEY'] < 348) & (orders['O_CUSTKEY'] < 82695) & (orders['O_COMMENT'] != 'y') & (orders['TOTALPRICE'] > 121147.84323405262) & (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] != 'C')][['ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 466) & (orders['O_ORDERKEY'] < 782) & (orders['O_ORDERKEY'] >= 695) | (orders['TOTALPRICE'] != 183468.9828178783)].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 498) | (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['O_ORDERKEY'] == 125) & (orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer[(customer['C_ADDRESS'].str.startswith('P')) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] == 'n') | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 19) & (customer['C_NATIONKEY'] == 10)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 131) | (orders['TOTALPRICE'] < 157657.38565610128) & (orders['ORDERSTATUS'] != 'F') | (orders['O_ORDERKEY'] != 717)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['TOTALPRICE'] < 311010.41267186456) & (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] < 150554.37676580544) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH']))][['TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'] == 'g') & (customer['C_COMMENT'] != 'n')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_CUSTKEY'] >= 4665) & (orders['O_ORDERKEY'] > 81) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERSTATUS'].isin(['P']))].merge(customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] == '.') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'] == 'C')].merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 34989.71096694981) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'].str.startswith('g')) | (orders['TOTALPRICE'] != 342408.6217789413) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] < 7293) & (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] <= 253653.39476004313)][['CLERK', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] >= 168730.08660615783) | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'] == 'egu') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] == 14226) | (orders['O_ORDERKEY'] < 239) & (orders['TOTALPRICE'] > 145687.4899871218) & (orders['CLERK'].str.startswith('C'))][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] <= 6603.37628814787) | (customer['C_COMMENT'] == '.') & (customer['C_NATIONKEY'] < 12) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].groupby(by=['O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#44') | (part['TYPE'] != 'S') & (part['CONTAINER'] == 'WRAP') | (part['PT_COMMENT'].str.startswith('the')) & (part['CONTAINER'] != 'JUMBO')][['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[(part['BRAND'] != 'Brand#45') | (part['TYPE'] != 'S') | (part['PT_COMMENT'].str.startswith('m')) | (part['P_NAME'] != 'lin') | (part['P_PARTKEY'] < 132) & (part['PT_COMMENT'] == 'm') | (part['RETAILPRICE'] == 1001.6192555639047) & (part['TYPE'].str.startswith('STA')) & (part['CONTAINER'] != 'LG')].groupby(by=['RETAILPRICE', 'CONTAINER', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#22', 'Brand#33', 'Brand#42', 'Brand#35', 'Brand#14', 'Brand#13', 'Brand#24', 'Brand#11', 'Brand#23', 'Brand#12', 'Brand#34', 'Brand#45', 'Brand#21', 'Brand#54', 'Brand#44', 'Brand#52'])) | (part['SIZE'] == 37) | (part['MFGR'] == 'Manufacturer#3') | (part['MFGR'] != 'Manufacturer#5') & (part['RETAILPRICE'] == 978.2871566753694) | (part['BRAND'] == 'Brand#34')][['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE']]

part[(part['BRAND'].isin(['Brand#22', 'Brand#35', 'Brand#15', 'Brand#34', 'Brand#14', 'Brand#24', 'Brand#45', 'Brand#43', 'Brand#11', 'Brand#52', 'Brand#53', 'Brand#23', 'Brand#41', 'Brand#12', 'Brand#25', 'Brand#32', 'Brand#33', 'Brand#13', 'Brand#42', 'Brand#55', 'Brand#51', 'Brand#21', 'Brand#54'])) & (part['BRAND'] != 'Brand#33') | (part['SIZE'] >= 27) & (part['P_PARTKEY'] != 116) | (part['P_PARTKEY'] == 181) | (part['P_PARTKEY'] <= 9)][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'MFGR', 'TYPE']]

part[(part['BRAND'].isin(['Brand#44', 'Brand#51', 'Brand#52', 'Brand#23', 'Brand#12', 'Brand#45', 'Brand#41', 'Brand#22', 'Brand#25', 'Brand#35', 'Brand#32', 'Brand#42', 'Brand#34', 'Brand#13', 'Brand#43', 'Brand#53', 'Brand#31']))][['P_PARTKEY', 'PT_COMMENT', 'TYPE', 'MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND']].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#51', 'Brand#44', 'Brand#22', 'Brand#13', 'Brand#53', 'Brand#24', 'Brand#45', 'Brand#31', 'Brand#54', 'Brand#32', 'Brand#21', 'Brand#15', 'Brand#43', 'Brand#55', 'Brand#52', 'Brand#23', 'Brand#25', 'Brand#11', 'Brand#41', 'Brand#42'])) | (part['P_NAME'] != 'lem') & (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] >= 5) | (part['BRAND'].isin(['Brand#55', 'Brand#35', 'Brand#42', 'Brand#13', 'Brand#52', 'Brand#53', 'Brand#43', 'Brand#11', 'Brand#54', 'Brand#15', 'Brand#51', 'Brand#22', 'Brand#41', 'Brand#14', 'Brand#31', 'Brand#32', 'Brand#12', 'Brand#24', 'Brand#33', 'Brand#21', 'Brand#25', 'Brand#34', 'Brand#45'])) | (part['SIZE'] < 1) & (part['SIZE'] != 2) | (part['TYPE'] == 'L')].groupby(by=['CONTAINER', 'TYPE', 'MFGR', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') & (part['P_NAME'] != 'i') | (part['SIZE'] >= 10) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4'])) | (part['TYPE'] == 'L') & (part['P_PARTKEY'] < 68) & (part['SIZE'] <= 34) & (part['TYPE'] == 'L')].groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'SM') | (part['SIZE'] != 34) | (part['SIZE'] == 38)][['SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND']].groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) & (part['SIZE'] < 24) & (part['P_NAME'] != 'l') & (part['TYPE'] == 'E') | (part['MFGR'] != 'Manufacturer#1') | (part['PT_COMMENT'].str.startswith('the')) & (part['SIZE'] < 22) & (part['BRAND'].isin(['Brand#21', 'Brand#12', 'Brand#25', 'Brand#24', 'Brand#54', 'Brand#35']))].groupby(by=['TYPE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#3') | (part['P_NAME'] == 'lin') | (part['CONTAINER'] == 'SM') | (part['BRAND'].isin(['Brand#42', 'Brand#14', 'Brand#25', 'Brand#41', 'Brand#21', 'Brand#11', 'Brand#51', 'Brand#12', 'Brand#33', 'Brand#44', 'Brand#35', 'Brand#32', 'Brand#34', 'Brand#23', 'Brand#45', 'Brand#22', 'Brand#53', 'Brand#31', 'Brand#52', 'Brand#55', 'Brand#13', 'Brand#43', 'Brand#54'])) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) & (part['SIZE'] > 13) & (part['RETAILPRICE'] >= 1070.731460956964) & (part['SIZE'] <= 28)].groupby(by=['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'].str.startswith('t')) | (part['MFGR'] == 'Manufacturer#1')][['P_PARTKEY', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') & (part['P_NAME'] != 'f') | (part['BRAND'] == 'Brand#41') | (part['SIZE'] < 31) & (part['SIZE'] != 43) | (part['TYPE'].str.startswith('L')) & (part['TYPE'].str.startswith('M'))][['PT_COMMENT', 'BRAND']].groupby(by=['BRAND', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') | (part['P_PARTKEY'] != 44) & (part['RETAILPRICE'] <= 1073.7282535368151) | (part['P_NAME'] == 'l') | (part['BRAND'] == 'Brand#31') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) | (part['CONTAINER'] != 'MED') & (part['TYPE'] != 'SMA') | (part['CONTAINER'] != 'MED')][['TYPE']].groupby(by=['TYPE']).agg('count')

part[(part['MFGR'] == 'Manufacturer#3') & (part['TYPE'] == 'SMA') | (part['RETAILPRICE'] > 976.901762562384) | (part['RETAILPRICE'] <= 909.8645421275447) | (part['P_PARTKEY'] >= 57) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3'])) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4'])) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2']))].groupby(by=['CONTAINER', 'TYPE', 'RETAILPRICE', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('a')) | (part['RETAILPRICE'] >= 955.4979482702997)][['TYPE', 'PT_COMMENT', 'BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'l') | (part['TYPE'].str.startswith('E')) & (part['SIZE'] >= 43) & (part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] != 37) | (part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] < 18) | (part['BRAND'].isin(['Brand#51', 'Brand#12', 'Brand#32', 'Brand#35', 'Brand#34', 'Brand#41', 'Brand#15', 'Brand#33', 'Brand#24', 'Brand#54', 'Brand#22', 'Brand#45', 'Brand#11', 'Brand#42', 'Brand#23', 'Brand#21', 'Brand#52', 'Brand#13'])) | (part['PT_COMMENT'] != 'y')][['PT_COMMENT', 'MFGR', 'SIZE', 'TYPE', 'P_NAME']]

part[(part['P_NAME'] != 'r') & (part['RETAILPRICE'] >= 963.3484427466392) & (part['BRAND'].isin(['Brand#15', 'Brand#35', 'Brand#42', 'Brand#24', 'Brand#12', 'Brand#13', 'Brand#32', 'Brand#31', 'Brand#51', 'Brand#14', 'Brand#52', 'Brand#33'])) | (part['PT_COMMENT'].str.startswith('r')) & (part['SIZE'] != 10) & (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] <= 1016.4196617960789) | (part['P_PARTKEY'] <= 40) | (part['P_NAME'] == 'h')].groupby(by=['CONTAINER', 'BRAND', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('cor')) & (part['SIZE'] != 27) | (part['MFGR'] != 'Manufacturer#4') | (part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('c')) & (part['BRAND'].isin(['Brand#22', 'Brand#34', 'Brand#44', 'Brand#32', 'Brand#54', 'Brand#33'])) | (part['RETAILPRICE'] < 1004.993655361003)][['SIZE', 'RETAILPRICE', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('v')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['RETAILPRICE'] > 1097.5706780560427) | (part['BRAND'] == 'Brand#15') | (part['CONTAINER'].str.startswith('LG')) | (part['PT_COMMENT'].str.startswith('q')) & (part['BRAND'] != 'Brand#23')][['MFGR', 'CONTAINER']].groupby(by=['CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 104) | (part['RETAILPRICE'] < 954.9348033175121) & (part['SIZE'] <= 1) & (part['RETAILPRICE'] < 1029.2212463216872) | (part['RETAILPRICE'] != 1074.0476973345424) & (part['PT_COMMENT'] != 'n') | (part['P_PARTKEY'] >= 180) & (part['CONTAINER'] == 'LG')][['BRAND', 'TYPE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']]

part[(part['SIZE'] < 16) | (part['BRAND'].isin(['Brand#33', 'Brand#42', 'Brand#23', 'Brand#45', 'Brand#44', 'Brand#41', 'Brand#55', 'Brand#32'])) & (part['PT_COMMENT'] == 'a')][['P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'SIZE', 'MFGR', 'CONTAINER']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['SIZE'] <= 2) & (part['P_PARTKEY'] < 33) & (part['TYPE'] == 'S') & (part['TYPE'].str.startswith('E')) | (part['SIZE'] < 19) & (part['P_PARTKEY'] <= 172) & (part['TYPE'].str.startswith('M')) & (part['BRAND'].isin(['Brand#33', 'Brand#52', 'Brand#21', 'Brand#22', 'Brand#53', 'Brand#15', 'Brand#43', 'Brand#14', 'Brand#55', 'Brand#23', 'Brand#24', 'Brand#13', 'Brand#45', 'Brand#42', 'Brand#25', 'Brand#51', 'Brand#11', 'Brand#12', 'Brand#31', 'Brand#34', 'Brand#54', 'Brand#35', 'Brand#41', 'Brand#32', 'Brand#44'])) & (part['RETAILPRICE'] == 1094.9047577637382)].groupby(by=['P_NAME', 'RETAILPRICE', 'CONTAINER', 'BRAND']).agg('count')

part[(part['TYPE'] != 'E') | (part['PT_COMMENT'] != '!') & (part['PT_COMMENT'] == 'ly ') | (part['P_PARTKEY'] >= 124) | (part['RETAILPRICE'] < 1065.423014669753) & (part['P_NAME'].str.startswith('m')) & (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] != 185)][['CONTAINER', 'MFGR']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'L') & (part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] < 1083.633558429377) | (part['RETAILPRICE'] > 1017.263878691474) & (part['RETAILPRICE'] < 968.2320501950024)][['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']].groupby(by=['P_PARTKEY', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'S')][['SIZE', 'CONTAINER', 'MFGR', 'BRAND', 'TYPE']].groupby(by=['SIZE', 'MFGR', 'BRAND', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'E') & (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'].isin(['Brand#34', 'Brand#43', 'Brand#42', 'Brand#33', 'Brand#14', 'Brand#25', 'Brand#45', 'Brand#53', 'Brand#23', 'Brand#54', 'Brand#41', 'Brand#52', 'Brand#24', 'Brand#31', 'Brand#35', 'Brand#13', 'Brand#55', 'Brand#32'])) & (part['CONTAINER'] != 'JUMBO') | (part['P_NAME'].str.startswith('b')) & (part['P_PARTKEY'] >= 171) | (part['P_PARTKEY'] < 100) | (part['P_NAME'].str.startswith('i')) & (part['RETAILPRICE'] < 1042.6544556491012)].groupby(by=['CONTAINER', 'PT_COMMENT', 'SIZE', 'MFGR']).agg('count')

part[(part['TYPE'] == 'E') & (part['PT_COMMENT'].str.startswith('e')) | (part['MFGR'] == 'Manufacturer#3')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'SIZE']].groupby(by=['TYPE', 'CONTAINER', 'PT_COMMENT']).agg('count')

part[(part['TYPE'].str.startswith('E')) & (part['MFGR'] != 'Manufacturer#5') | (part['P_NAME'] != 'blu') | (part['RETAILPRICE'] >= 1060.9306603677617) | (part['P_PARTKEY'] == 85) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4'])) | (part['SIZE'] < 16) | (part['BRAND'].isin(['Brand#52', 'Brand#15', 'Brand#11', 'Brand#35', 'Brand#34', 'Brand#14', 'Brand#31', 'Brand#21', 'Brand#55', 'Brand#53', 'Brand#54', 'Brand#42'])) & (part['RETAILPRICE'] > 908.572368674022)][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['TYPE'].str.startswith('E')) | (part['RETAILPRICE'] < 978.497831275029) | (part['PT_COMMENT'].str.startswith('e')) | (part['RETAILPRICE'] <= 909.5830278131965) & (part['PT_COMMENT'].str.startswith('b')) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'].str.startswith('t'))].groupby(by=['MFGR', 'TYPE', 'P_PARTKEY', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('P')) | (part['CONTAINER'] == 'LG') & (part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] <= 1000.2193354133294) | (part['BRAND'] == 'Brand#14') | (part['PT_COMMENT'].str.startswith('h')) | (part['BRAND'] == 'Brand#55') & (part['RETAILPRICE'] == 981.9234439580744) & (part['CONTAINER'].str.startswith('MED'))].groupby(by=['PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE']].groupby(by=['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'BRAND', 'PT_COMMENT']].groupby(by=['BRAND', 'MFGR', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

part[['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] == 'MED') | (part['SIZE'] >= 6) | (part['P_PARTKEY'] < 54) & (part['P_NAME'] == 'lin') & (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] != 1044.3828343628886)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] != 1039.4952980321327) & (part['P_PARTKEY'] == 170) & (part['SIZE'] <= 20) & (part['BRAND'] == 'Brand#31')][['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] >= 1) | (part['SIZE'] != 38) | (part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] >= 1025.8738951141427) & (part['TYPE'].str.startswith('M')) & (part['BRAND'] == 'Brand#15') | (part['MFGR'] != 'Manufacturer#3') | (part['BRAND'] != 'Brand#42')][['BRAND', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] >= 19) | (part['P_PARTKEY'] >= 109) & (part['P_PARTKEY'] <= 107) | (part['TYPE'] == 'S')][['TYPE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[['CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'MFGR', 'CONTAINER', 'RETAILPRICE']).agg('count')

partsupp.merge(part[['P_NAME', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 52.17245690475863) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] <= -484.0694050853556) | (supplier['S_SUPPKEY'] != 140) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 177)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 8145.492360554629) | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_COMMENT'].str.startswith('v')) & (supplier['S_NATIONKEY'] < 22)][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 5112.1380309045535) & (supplier['S_PHONE'].str.startswith('26-'))][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] == '1') | (supplier['S_SUPPKEY'] == 157) | (supplier['S_NATIONKEY'] < 4) | (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'] == 'z') | (supplier['S_SUPPKEY'] >= 185)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 3657)].merge(supplier[(supplier['S_ACCTBAL'] != 5954.358913279061)][['S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5544) & (partsupp['AVAILQTY'] != 440) & (partsupp['PS_SUPPKEY'] > 3277) & (partsupp['PS_SUPPKEY'] >= 6724)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '14-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2928) & (partsupp['SUPPLYCOST'] < 891.8213998300228) & (partsupp['P_COMMENT'] == 'i') & (partsupp['SUPPLYCOST'] == 97.84797790783209)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '1') | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 6803) & (partsupp['SUPPLYCOST'] == 993.923863881171) & (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['SUPPLYCOST'] < 845.2809002293058) | (partsupp['SUPPLYCOST'] > 796.3472724932932)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'P_NAME', 'SIZE']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 6066) & (partsupp['PS_PARTKEY'] <= 2)].merge(part[['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 9662) | (partsupp['PS_SUPPKEY'] != 5824) & (partsupp['SUPPLYCOST'] > 990.7489435679076) & (partsupp['AVAILQTY'] <= 1505) | (partsupp['PS_PARTKEY'] > 28)].merge(part[(part['BRAND'] == 'Brand#51')][['BRAND', 'P_PARTKEY', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 9966) & (partsupp['PS_SUPPKEY'] > 837)].merge(part[(part['SIZE'] < 13) | (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'] == 'P') | (part['CONTAINER'] != 'SM') & (part['PT_COMMENT'] != 'o')][['TYPE', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 27) & (partsupp['SUPPLYCOST'] != 628.5349012442432)].merge(part[['MFGR', 'P_NAME', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 27) | (partsupp['PS_PARTKEY'] != 40) & (partsupp['SUPPLYCOST'] <= 630.4924876132666)].merge(supplier[(supplier['S_SUPPKEY'] == 44)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 5657) & (partsupp['PS_SUPPKEY'] != 7300) & (partsupp['PS_SUPPKEY'] != 6793) & (partsupp['PS_SUPPKEY'] <= 7305) | (partsupp['SUPPLYCOST'] >= 741.7530731201755)].merge(part[(part['CONTAINER'] != 'LG') | (part['P_PARTKEY'] > 49) | (part['BRAND'].isin(['Brand#14', 'Brand#21', 'Brand#32', 'Brand#34', 'Brand#53', 'Brand#22', 'Brand#41', 'Brand#15', 'Brand#11', 'Brand#31', 'Brand#43', 'Brand#13', 'Brand#45', 'Brand#55', 'Brand#25'])) | (part['PT_COMMENT'] == 'kag') | (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] != 'Brand#45')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3785) | (partsupp['SUPPLYCOST'] > 719.6575613253342) & (partsupp['AVAILQTY'] <= 4437) | (partsupp['PS_PARTKEY'] < 7)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 381) | (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['SUPPLYCOST'] > 32.53169518266992) & (partsupp['SUPPLYCOST'] > 624.6456014123062) & (partsupp['P_COMMENT'].str.startswith('f'))].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4335) | (partsupp['P_COMMENT'] == 'h') & (partsupp['PS_SUPPKEY'] <= 4849) | (partsupp['PS_SUPPKEY'] > 802) & (partsupp['PS_PARTKEY'] != 42)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] == 1) | (partsupp['PS_SUPPKEY'] >= 4402) & (partsupp['P_COMMENT'] != '.') & (partsupp['PS_PARTKEY'] >= 8)].merge(supplier[(supplier['S_SUPPKEY'] >= 117) & (supplier['S_ADDRESS'].str.startswith('G')) & (supplier['S_COMMENT'].str.startswith('f'))][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 504.06459554300005)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'W') | (supplier['S_COMMENT'].str.startswith('the'))][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 770.220459393481) | (partsupp['SUPPLYCOST'] >= 836.9775474886578)].merge(part[(part['CONTAINER'] == 'MED')][['P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 308.43049990554766)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 0)].merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 56.15295529076662) | (partsupp['PS_PARTKEY'] != 41) & (partsupp['PS_PARTKEY'] > 39) | (partsupp['PS_SUPPKEY'] >= 698)].merge(part[['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['SIZE', 'P_PARTKEY', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] == 13) | (part['SIZE'] != 36) | (part['SIZE'] > 46) & (part['TYPE'] != 'S') & (part['SIZE'] < 31) & (part['SIZE'] != 17) | (part['TYPE'] == 'SMA') | (part['BRAND'] == 'Brand#12')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] <= 30)][['P_PARTKEY', 'MFGR', 'SIZE', 'TYPE', 'P_NAME', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] <= 1027.1359918326343) & (part['P_NAME'].str.startswith('y')) & (part['P_NAME'].str.startswith('c')) | (part['BRAND'].isin(['Brand#41', 'Brand#32', 'Brand#54', 'Brand#22', 'Brand#35'])) & (part['P_NAME'] != 'p') & (part['P_NAME'].str.startswith('w')) & (part['PT_COMMENT'] == 'x') & (part['SIZE'] > 34) | (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#13', 'Brand#54', 'Brand#21', 'Brand#35'])) & (part['SIZE'] == 12) | (part['P_NAME'].str.startswith('m')) & (part['SIZE'] != 36) & (part['SIZE'] != 16) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) & (part['P_PARTKEY'] != 31)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[(part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] == 1041.9255933639465) & (part['BRAND'] != 'Brand#12') & (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] == 'Brand#55') | (part['PT_COMMENT'] != 'q') & (part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'].str.startswith(' '))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'].str.startswith('p')) & (part['P_NAME'] == 'a')][['BRAND', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_COMMENT'] != '.') | (supplier['S_COMMENT'].str.startswith('r')) & (supplier['S_PHONE'] != '26-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']).agg('count')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] > 76) & (part['RETAILPRICE'] < 1017.9512949215695) & (part['P_NAME'].str.startswith('v')) | (part['CONTAINER'] == 'SM') & (part['TYPE'].str.startswith('P'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 21) | (part['CONTAINER'] == 'WRAP') | (part['CONTAINER'] != 'MED')][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['SIZE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_NAME'] != 'U') | (nation['N_NATIONKEY'] <= 8) | (nation['N_NATIONKEY'] == 22)].merge(region[(region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] < 22)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] <= 20)].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] <= 20) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'u') & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'J') | (nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] != 14)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NAME'] != 'F') & (nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] != 'u')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 5538.614185789064) & (supplier['S_NATIONKEY'] == 21) | (supplier['S_ACCTBAL'] == 7783.614105743657) | (supplier['S_SUPPKEY'] < 191) | (supplier['S_COMMENT'].str.startswith('b'))][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 6011.793996224061) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_ADDRESS'].str.startswith('D')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 165)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 3867.3970589681912) & (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_ACCTBAL'] == 6795.781189117427) & (supplier['S_NATIONKEY'] == 10) | (supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'] != 'u') & (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_NATIONKEY'] >= 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > -420.3857431464153) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 136)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > -421.700842730098) & (supplier['S_ADDRESS'] != 'p') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'o') & (supplier['S_ADDRESS'] == 'M')].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] != 13) | (nation['N_COMMENT'] != 'n')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '1') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ACCTBAL'] > 9688.701676740491) | (supplier['S_NATIONKEY'] > 4) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'h')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != '.') | (supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] >= 193)].merge(nation[(nation['N_NATIONKEY'] <= 4)].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'y') | (supplier['S_ADDRESS'] == 'M') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'b') | (supplier['S_NATIONKEY'] != 3) & (supplier['S_ACCTBAL'] > 8738.612274496829) | (supplier['S_SUPPKEY'] < 151)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'k') & (supplier['S_ADDRESS'].str.startswith('0'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 86) & (supplier['S_NATIONKEY'] == 12) | (supplier['S_NATIONKEY'] == 17) & (supplier['S_COMMENT'].str.startswith('es '))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_ACCTBAL'] == 2457.9302348788624) & (supplier['S_SUPPKEY'] < 107) | (supplier['S_NATIONKEY'] != 4)].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] == 23) | (supplier['S_SUPPKEY'] >= 42) & (supplier['S_NATIONKEY'] == 23) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != -827.1489262433349) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 20)][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 1) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_SUPPKEY'] <= 194) | (supplier['S_NATIONKEY'] == 3) | (supplier['S_PHONE'] != '2') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'd')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 11) | (supplier['S_COMMENT'] == 'the') & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] < 162) | (supplier['S_ADDRESS'] != 'B') & (supplier['S_ADDRESS'].str.startswith(' ')) | (supplier['S_NATIONKEY'] >= 4) | (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_ADDRESS'].str.startswith('W'))].merge(nation[(nation['N_NATIONKEY'] <= 15) & (nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] < 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 121) & (supplier['S_ACCTBAL'] < 2633.1614670263116) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 7060.66661129082) | (supplier['S_NATIONKEY'] != 5) & (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_COMMENT'] != 'k')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 188)].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] != 'B')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 194) | (supplier['S_ADDRESS'] != 'x')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 119) & (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] <= 130) & (supplier['S_COMMENT'] != ' sl') | (supplier['S_SUPPKEY'] < 25) & (supplier['S_SUPPKEY'] == 132) & (supplier['S_NATIONKEY'] <= 1)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 184)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_NAME'] != 'K') & (nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'] != 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] > 19) & (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 23)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] == 'U') & (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'].str.startswith('e'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NATIONKEY'] >= 5) | (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] > 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 't')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] == 2) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'] != 't') | (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_COMMENT'].str.startswith('v'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NAME'] != 'K') & (nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] < 4)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'i')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 4014.821182236831)].merge(nation[(nation['N_NATIONKEY'] >= 7)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 7126.647293382594) & (customer['C_ACCTBAL'] > 1485.3724445147673) & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_NATIONKEY'] != 19)][['MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7251.993550457102) | (customer['C_NATIONKEY'] > 9) & (customer['C_ADDRESS'] == 'g')].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_NAME'] != 'C')].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 548.0823051985603) & (customer['C_ACCTBAL'] >= 9376.111327459199) | (customer['C_CUSTKEY'] >= 78) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] <= 69) & (customer['C_ADDRESS'] != 'Q') & (customer['C_ADDRESS'].str.startswith('0'))].merge(nation[(nation['N_NATIONKEY'] < 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 6722.576977463408) & (customer['C_COMMENT'] == 'l') | (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= -379.8613635551985) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_ACCTBAL'] >= -802.6961211252576) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == '0') & (customer['C_CUSTKEY'] == 46) | (customer['C_ACCTBAL'] < 1030.308676636397) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] < 2)][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']]

customer[(customer['C_ACCTBAL'] >= 3205.5877642632604) & (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_ADDRESS'].str.startswith('f')) & (customer['C_COMMENT'].str.startswith('p'))].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] >= 23) & (nation['N_NATIONKEY'] >= 9) | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 8665.732054887247) | (customer['C_ADDRESS'] != 'U') | (customer['C_ACCTBAL'] >= 6535.545611616754) | (customer['C_ACCTBAL'] >= 756.5716122464446) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'i')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'B')][['C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'] == 'g') & (customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] >= 4164.979960174413) & (customer['C_ADDRESS'] == '8')][['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_NAME', 'MKTSEGMENT', 'C_ADDRESS']).agg('count')

customer[(customer['C_ADDRESS'] == 'j') | (customer['C_NATIONKEY'] <= 8) | (customer['C_ACCTBAL'] <= 4389.942092141078) & (customer['C_COMMENT'] != 'w') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE']))][['C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != ',') | (customer['C_PHONE'] == '18-') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 89)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == ' ') & (customer['C_ACCTBAL'] >= 3384.3737981136155) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 6) & (customer['C_CUSTKEY'] > 4) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_COMMENT'] == 'a') | (customer['C_NATIONKEY'] > 7) | (customer['C_CUSTKEY'] == 14) & (customer['C_ADDRESS'] == 'M') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] != 65) | (customer['C_ADDRESS'] == 'o') | (customer['C_NATIONKEY'] <= 9)].merge(nation[(nation['N_NATIONKEY'] > 10)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'c') & (customer['C_ADDRESS'] == 'x') | (customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] != 2) | (customer['C_COMMENT'] == 'y') | (customer['C_COMMENT'].str.startswith('p')) & (customer['C_ADDRESS'].str.startswith('h')) & (customer['C_PHONE'] != '22-')][['C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_ACCTBAL']).agg('count')

customer[(customer['C_COMMENT'] == 'g') & (customer['C_ACCTBAL'] >= 1705.2607233063359)][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('n')) | (customer['C_CUSTKEY'] < 21) & (customer['C_NATIONKEY'] >= 10) & (customer['C_COMMENT'] == 'w') | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE'])) & (customer['C_COMMENT'] == 'e')][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['C_NATIONKEY'] != 11) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'] != 'r')][['C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 4) | (customer['C_ACCTBAL'] < 1790.7508140227333) & (customer['C_NATIONKEY'] == 12) | (customer['C_PHONE'] == '2') & (customer['C_COMMENT'].str.startswith('e')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 82)][['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 66)].merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 80) | (customer['C_COMMENT'] == 'r') | (customer['C_NATIONKEY'] > 8) & (customer['C_NATIONKEY'] != 22) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_COMMENT'] != 'q') | (customer['C_NATIONKEY'] != 18) | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']]

customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_ADDRESS'].str.startswith('j')) | (customer['C_ACCTBAL'] >= 3477.099218252354) & (customer['C_CUSTKEY'] < 74) & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_ADDRESS'] == 'P')][['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 20) & (customer['C_NATIONKEY'] < 21)].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-')].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'] == 't') & (nation['N_NAME'] == 'R')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] != 'e') | (customer['C_PHONE'].str.startswith('2')) | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_NATIONKEY'] == 1)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']].groupby(by=['C_NAME', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'E') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 21) | (customer['C_ACCTBAL'] == 642.8918277001653) | (customer['C_ACCTBAL'] != 1075.3754401829428)].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 98) | (customer['C_NATIONKEY'] > 12)].merge(nation[(nation['N_NATIONKEY'] == 15)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'] != 's')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] == 'y')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('A'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'G') & (nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 13)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] > 17628) | (orders['O_COMMENT'] == 'w') & (orders['O_ORDERKEY'] != 571) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] != 0)][['ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERDATE']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] != 109782) | (orders['O_COMMENT'].str.startswith('ly '))].merge(customer[(customer['C_COMMENT'] == 'i') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'] == 'b')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('count')

lineitem.merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('c')) | (part['P_PARTKEY'] != 139) | (part['CONTAINER'].str.startswith('MED')) & (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] < 81) | (part['P_PARTKEY'] < 74)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 49) | (partsupp['AVAILQTY'] > 3421)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 6051)][['PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'f') | (partsupp['SUPPLYCOST'] >= 310.452582427585) & (partsupp['AVAILQTY'] > 7981) & (partsupp['PS_PARTKEY'] != 36) | (partsupp['P_COMMENT'].str.startswith(' th'))].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'ly ') | (partsupp['P_COMMENT'].str.startswith('o'))].merge(part[['BRAND', 'TYPE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 530.1781225609611)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] < 1029.7166383623783) & (part['SIZE'] <= 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'BRAND', 'P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('i')) | (supplier['S_ACCTBAL'] <= 5333.067985412317)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.05226409199548693) | (lineitem['L_ORDERKEY'] == 47) & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) | (lineitem['LINENUMBER'] == 6) & (lineitem['LINENUMBER'] > 4) & (lineitem['SHIPMODE'].isin(['TRUCK', 'FOB', 'REG AIR', 'MAIL', 'SHIP', 'RAIL', 'AIR']))].merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['L_SUPPKEY'] != 2823) | (lineitem['SHIPMODE'].isin(['AIR', 'RAIL', 'TRUCK', 'FOB', 'MAIL', 'REG AIR'])) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_COMMENT'] == 'e') | (lineitem['L_SUPPKEY'] > 4054)][['RECEIPTDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'RECEIPTDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'k') | (lineitem['SHIPDATE'] < '1992-04-27')].merge(partsupp[(partsupp['P_COMMENT'] != 'n') & (partsupp['P_COMMENT'] == 'are') & (partsupp['P_COMMENT'] != 'h')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 68) & (lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['SHIPDATE'] > '1998-10-30')].merge(partsupp[(partsupp['AVAILQTY'] != 1125)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] > 52) & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RETURNFLAG'] != 'N')].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5652) | (partsupp['PS_SUPPKEY'] != 227) & (partsupp['PS_PARTKEY'] >= 16)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] > 1954) | (lineitem['LINENUMBER'] > 2) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['TAX'] == 0.0746975343509358) | (lineitem['L_COMMENT'] == '-') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['TAX'] != 0.007000378864287651) & (lineitem['EXTENDEDPRICE'] == 3873.981789789105)][['L_COMMENT']].groupby(by=['L_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 17) | (lineitem['EXTENDEDPRICE'] >= 63378.337899387014) & (lineitem['DISCOUNT'] == 0.011215330537507995) & (lineitem['L_ORDERKEY'] > 68)][['L_COMMENT', 'DISCOUNT', 'SHIPMODE', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'L_COMMENT', 'DISCOUNT', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 11) | (lineitem['TAX'] <= 0.07976418651825214)][['QUANTITY', 'RECEIPTDATE', 'TAX', 'SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE', 'L_COMMENT']].groupby(by=['QUANTITY', 'LINESTATUS', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 12)][['LINESTATUS', 'L_SUPPKEY', 'QUANTITY', 'COMMITDATE', 'L_PARTKEY', 'L_ORDERKEY', 'RETURNFLAG']].groupby(by=['L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG', 'L_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['L_SUPPKEY'] > 9746) | (lineitem['L_COMMENT'] != 't') & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'FOB', 'MAIL', 'TRUCK', 'SHIP', 'AIR'])) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_ORDERKEY'] != 92) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['EXTENDEDPRICE'] < 51855.15820865235)].groupby(by=['L_COMMENT', 'LINESTATUS', 'L_ORDERKEY', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['TAX'] > 0.006560057374380417) | (lineitem['LINENUMBER'] != 3) | (lineitem['LINENUMBER'] != 5)].merge(partsupp[(partsupp['PS_PARTKEY'] < 19) | (partsupp['PS_PARTKEY'] > 20) | (partsupp['PS_PARTKEY'] != 29) & (partsupp['PS_PARTKEY'] >= 13)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['QUANTITY'] > 15) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['DISCOUNT'] == 0.08336974972573144) | (lineitem['L_PARTKEY'] != 121463) & (lineitem['L_COMMENT'] == ' ca') | (lineitem['LINENUMBER'] == 4) & (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL', 'TRUCK']))].groupby(by=['RECEIPTDATE', 'LINESTATUS', 'COMMITDATE', 'L_ORDERKEY', 'L_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['EXTENDEDPRICE'] != 66929.99211703004) & (lineitem['L_SUPPKEY'] > 1436) | (lineitem['SHIPMODE'].isin(['SHIP', 'RAIL', 'MAIL', 'AIR'])) & (lineitem['QUANTITY'] > 42) | (lineitem['LINESTATUS'] == 'F') & (lineitem['LINESTATUS'] == 'F')][['SHIPINSTRUCT', 'TAX', 'L_PARTKEY']].groupby(by=['L_PARTKEY', 'SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'SHIP') | (lineitem['L_SUPPKEY'] > 6291) | (lineitem['EXTENDEDPRICE'] < 85577.14019640336) | (lineitem['QUANTITY'] != 10) | (lineitem['QUANTITY'] < 3) & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['RETURNFLAG'] == 'A')][['EXTENDEDPRICE', 'SHIPDATE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['LINENUMBER'] != 5) | (lineitem['SHIPMODE'].isin(['AIR', 'RAIL', 'REG AIR'])) | (lineitem['L_SUPPKEY'] <= 7770)].merge(partsupp.merge(part[['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] < 0.019520792829893364) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')][['L_SUPPKEY', 'RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'COMMITDATE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'L_COMMENT', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'DISCOUNT', 'COMMITDATE', 'LINESTATUS']].groupby(by=['LINENUMBER', 'RECEIPTDATE', 'EXTENDEDPRICE', 'COMMITDATE']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'L_ORDERKEY', 'COMMITDATE', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] < 5606) | (partsupp['PS_PARTKEY'] <= 42)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE']].groupby(by=['QUANTITY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[['RECEIPTDATE', 'SHIPMODE', 'L_SUPPKEY', 'L_ORDERKEY', 'QUANTITY', 'TAX', 'SHIPDATE', 'LINENUMBER', 'L_COMMENT']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'LINENUMBER', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'r')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'F')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'] != 'c') & (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] < 18) & (nation['N_NATIONKEY'] == 1)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'] != 't') & (nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] >= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 'y')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('E'))][['N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] != 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 14) | (nation['N_NAME'] == 'S')].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] > 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_NATIONKEY'] >= 23)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_NATIONKEY'] >= 16) & (nation['N_NATIONKEY'] >= 14)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] > 4) & (nation['N_NAME'] != 'R')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] > -404.0430679224295) | (customer['C_ACCTBAL'] <= 3254.667559657937) | (customer['C_ACCTBAL'] >= 7780.622091093459) & (customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] <= 0) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'].str.startswith('6'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'I') & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_ACCTBAL'] == 9119.24177588546) | (customer['C_ACCTBAL'] != 292.23302031940057)][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_NAME']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('i')) | (customer['C_CUSTKEY'] != 82) | (customer['C_COMMENT'] != 'n') & (customer['C_COMMENT'] != 'k') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_ADDRESS'] == 's') & (customer['C_ACCTBAL'] == 514.1230354496868) & (customer['C_COMMENT'].str.startswith('o'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != ',')].merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] != 'a') & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] == 173.33535358446898) & (customer['C_PHONE'] == '2') | (customer['C_ADDRESS'] == 'z') & (customer['C_ACCTBAL'] > 1625.6308154587682) & (customer['C_CUSTKEY'] <= 8) | (customer['C_ADDRESS'].str.startswith('l'))][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] == 8) | (customer['C_ACCTBAL'] >= 1065.2632536268525)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_NATIONKEY'] < 1) | (customer['C_COMMENT'] == 'n') | (customer['C_NAME'] != 'C')][['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C')][['ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['TOTALPRICE'] == 99934.43356936886) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] == 680) | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('j'))].merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] >= 20023) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))].merge(customer[(customer['C_ACCTBAL'] <= 4343.900423375901) | (customer['C_COMMENT'] == 'a') & (customer['C_CUSTKEY'] < 46) | (customer['C_ADDRESS'] == 'o') & (customer['C_ADDRESS'].str.startswith('w'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] < 469) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] != '1992-01-13')].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM'])) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '2-HIGH', '1-URGENT']))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] != 282) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_CUSTKEY'] != 64807) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] < 100274.16122974896)].groupby(by=['TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['O_COMMENT'] == ' re') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] <= 35770.28735245971)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != ' ') & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'] == 'ly ') | (orders['O_ORDERKEY'] >= 528)].merge(customer[(customer['C_ACCTBAL'] != 371.0290461633731) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] != 'BUILDING')][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ' ') | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] == 'F')][['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'CLERK']].groupby(by=['TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] == 'the') | (orders['SHIPPRIORITY'] != 0)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].groupby(by=['ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 106279) | (orders['O_ORDERKEY'] == 280)][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 69193) & (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] >= 94568.07291882)].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 393) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 273631.94755808543)].merge(customer[(customer['C_CUSTKEY'] >= 20) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('22-'))][['MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 557) & (orders['O_COMMENT'] != 'l') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_CUSTKEY'] < 44130) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '4-NOT SPECIFIED']))][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 105) | (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] < 12930) & (orders['TOTALPRICE'] >= 195223.994768099)].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 246) | (orders['O_ORDERKEY'] == 143) & (orders['O_COMMENT'] != 'k') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] != 'C')][['O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 658) & (orders['O_COMMENT'] == 'k') & (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_CUSTKEY'] > 61) | (customer['C_PHONE'] != '3') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ADDRESS'] != 'b') & (customer['C_ADDRESS'] != 'r')][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 43) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '4-NOT SPECIFIED', '2-HIGH'])) & (orders['O_CUSTKEY'] != 48462) & (orders['O_ORDERKEY'] > 330) | (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 263341.492023348) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 315159.983492333)].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] != 81785.12156208754) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_CUSTKEY'] > 109367) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '3-MEDIUM', '5-LOW'])) & (orders['O_ORDERKEY'] >= 470) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '3-MEDIUM']))].merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] > 2662.3602369045234) & (customer['C_ACCTBAL'] < 8215.391567951427) & (customer['C_CUSTKEY'] != 93) | (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 106188.2872161519) & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'] == 'h') & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 109444) & (orders['ORDERDATE'] == '1998-07-21')][['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['CLERK', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_CUSTKEY'] < 34) | (customer['C_NATIONKEY'] != 0) | (customer['C_ACCTBAL'] == 7394.872627140401)].merge(nation[(nation['N_NAME'] != 'G')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NAME'] != 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#14') | (part['P_PARTKEY'] >= 74) | (part['P_PARTKEY'] != 186) & (part['BRAND'].isin(['Brand#23', 'Brand#14', 'Brand#33', 'Brand#41', 'Brand#12', 'Brand#55', 'Brand#21', 'Brand#44', 'Brand#45', 'Brand#53', 'Brand#35', 'Brand#11', 'Brand#25', 'Brand#13', 'Brand#34', 'Brand#52', 'Brand#43', 'Brand#42', 'Brand#24'])) | (part['SIZE'] != 17) & (part['PT_COMMENT'].str.startswith('g')) & (part['BRAND'] == 'Brand#31') & (part['PT_COMMENT'].str.startswith('g'))][['SIZE', 'P_NAME', 'BRAND']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['BRAND'] == 'Brand#33') | (part['PT_COMMENT'].str.startswith('d')) & (part['CONTAINER'] != 'MED') & (part['P_NAME'] != 's') & (part['MFGR'] == 'Manufacturer#3') | (part['TYPE'] == 'S') | (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] > 171)].groupby(by=['PT_COMMENT', 'MFGR', 'TYPE', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#3'])) & (part['PT_COMMENT'] != 'h') & (part['P_NAME'] != 'g') | (part['PT_COMMENT'].str.startswith('n')) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['RETAILPRICE'] <= 928.6609404639462) & (part['TYPE'] != 'P') & (part['RETAILPRICE'] == 1000.9191481805963) | (part['TYPE'] == 'S')].groupby(by=['P_PARTKEY', 'SIZE', 'BRAND', 'P_NAME', 'TYPE']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5'])) | (part['TYPE'].str.startswith('SMA')) | (part['SIZE'] == 37) & (part['P_NAME'] != 'g') | (part['SIZE'] < 40) | (part['TYPE'] != 'L') & (part['SIZE'] > 19) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] > 179)][['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE', 'MFGR']]

part[(part['PT_COMMENT'] != 'u') & (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'].isin(['Brand#31', 'Brand#43', 'Brand#53', 'Brand#55', 'Brand#41', 'Brand#35', 'Brand#21', 'Brand#52', 'Brand#12', 'Brand#33', 'Brand#42', 'Brand#51', 'Brand#11', 'Brand#22', 'Brand#14', 'Brand#32', 'Brand#44', 'Brand#23', 'Brand#25', 'Brand#34', 'Brand#24', 'Brand#54', 'Brand#13', 'Brand#15', 'Brand#45'])) | (part['RETAILPRICE'] < 1014.5093467796894) & (part['CONTAINER'] != 'LG') | (part['PT_COMMENT'] == 'b') & (part['P_PARTKEY'] >= 67) | (part['CONTAINER'] != 'JUMBO') | (part['SIZE'] == 3)][['BRAND', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'MFGR']]

part[(part['PT_COMMENT'] != 'x') & (part['PT_COMMENT'].str.startswith('g'))][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('s')) | (part['P_PARTKEY'] == 129) | (part['TYPE'] == 'S') & (part['TYPE'] != 'STA') | (part['RETAILPRICE'] == 1053.3890925789035) | (part['P_PARTKEY'] == 18)][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'TYPE', 'RETAILPRICE']]

part[(part['P_NAME'] != 'a') | (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'].str.startswith('STA')) | (part['PT_COMMENT'] != 'f') | (part['P_NAME'] != 'm') & (part['P_NAME'] == 'c') | (part['TYPE'] != 'L') | (part['PT_COMMENT'] == 'c')][['BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[(part['P_NAME'] != 'h') | (part['PT_COMMENT'].str.startswith('a'))][['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'n') | (part['CONTAINER'] == 'SM')][['SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'CONTAINER']].groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_NAME'] == 'lem') | (part['P_PARTKEY'] != 99) | (part['BRAND'].isin(['Brand#45', 'Brand#13', 'Brand#22', 'Brand#35', 'Brand#21', 'Brand#15', 'Brand#41', 'Brand#55', 'Brand#25', 'Brand#34', 'Brand#51', 'Brand#54', 'Brand#11', 'Brand#14'])) & (part['TYPE'] == 'M') & (part['CONTAINER'] == 'MED') & (part['P_NAME'] != 'c') & (part['SIZE'] < 29) & (part['RETAILPRICE'] >= 961.7754981196) & (part['P_NAME'] != 'blu')].groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'lem')][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'SIZE']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] <= 142) | (part['P_NAME'] == 'lem') & (part['PT_COMMENT'].str.startswith('b')) | (part['BRAND'] != 'Brand#12')][['PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR']].groupby(by=['TYPE', 'P_NAME', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] == 188) | (part['PT_COMMENT'] != 'l') & (part['CONTAINER'] != 'SM') | (part['P_NAME'].str.startswith('b')) | (part['PT_COMMENT'].str.startswith('x')) | (part['SIZE'] < 19) | (part['P_PARTKEY'] <= 89) | (part['RETAILPRICE'] != 979.85249434007) & (part['TYPE'] != 'SMA')][['MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[(part['RETAILPRICE'] != 1008.7208211502805) | (part['P_PARTKEY'] != 10) | (part['SIZE'] != 42) | (part['CONTAINER'].str.startswith('SM'))][['SIZE', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'PT_COMMENT']].groupby(by=['MFGR', 'TYPE']).agg('sum', numeric_only=True)

part[(part['SIZE'] < 12) & (part['BRAND'].isin(['Brand#11', 'Brand#21', 'Brand#35', 'Brand#15', 'Brand#42', 'Brand#23'])) | (part['SIZE'] >= 9) | (part['SIZE'] <= 47) & (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] != 196) & (part['MFGR'] == 'Manufacturer#5') & (part['MFGR'] != 'Manufacturer#2') | (part['CONTAINER'] != 'MED')].groupby(by=['TYPE', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['SIZE'] < 37) | (part['P_PARTKEY'] <= 84) | (part['RETAILPRICE'] < 952.4678883032042) | (part['SIZE'] < 10) & (part['P_NAME'] != 'cor') | (part['RETAILPRICE'] <= 1095.298156799639) | (part['P_NAME'].str.startswith('l')) & (part['P_NAME'] != 'g') | (part['RETAILPRICE'] <= 976.7656627043149)].groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['SIZE'] == 26) | (part['BRAND'] != 'Brand#41') | (part['RETAILPRICE'] > 934.5445674126331) | (part['PT_COMMENT'] == 'a') | (part['PT_COMMENT'].str.startswith('m')) & (part['PT_COMMENT'] != 'e') & (part['SIZE'] >= 47) | (part['RETAILPRICE'] >= 951.8131147574256)][['BRAND', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']]

part[(part['SIZE'] >= 11) | (part['PT_COMMENT'].str.startswith('l')) & (part['BRAND'] != 'Brand#22') | (part['P_NAME'] == 'd') & (part['PT_COMMENT'] != 'x') | (part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'].str.startswith('blu')) | (part['PT_COMMENT'] == 'u')].groupby(by=['BRAND', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('count')

part[(part['TYPE'] == 'STA') & (part['P_NAME'].str.startswith('p')) & (part['PT_COMMENT'] != 'w') | (part['CONTAINER'] != 'JUMBO') & (part['TYPE'] != 'L') & (part['MFGR'] != 'Manufacturer#1')][['PT_COMMENT', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['TYPE'] == 'STA') | (part['P_NAME'] == 'v') & (part['TYPE'] != 'P') & (part['RETAILPRICE'] != 1062.5865933538873) & (part['P_PARTKEY'] == 50) | (part['SIZE'] < 6)][['SIZE', 'RETAILPRICE', 'MFGR', 'TYPE', 'PT_COMMENT']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('L')) | (part['TYPE'] == 'SMA') | (part['P_PARTKEY'] < 168) | (part['BRAND'] == 'Brand#45') & (part['P_NAME'].str.startswith('h')) & (part['P_NAME'] == 'f') | (part['TYPE'] != 'SMA') & (part['CONTAINER'] != 'LG') | (part['MFGR'].isin(['Manufacturer#1']))].groupby(by=['RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) & (part['SIZE'] < 40) & (part['P_PARTKEY'] > 69) | (part['P_NAME'] == 'c') & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'].str.startswith('cor'))][['PT_COMMENT', 'TYPE', 'SIZE', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1'])) & (part['PT_COMMENT'] == 'ss ') | (part['SIZE'] > 2)][['P_NAME', 'BRAND', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['P_PARTKEY', 'MFGR', 'P_NAME', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3'])) | (part['CONTAINER'] == 'MED') | (part['PT_COMMENT'] == 'o') | (part['BRAND'] != 'Brand#21') | (part['CONTAINER'] == 'JUMBO') & (part['SIZE'] <= 32) | (part['SIZE'] != 39) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4'])) & (part['SIZE'] != 14)][['TYPE', 'P_PARTKEY', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] <= 1030.4754843754536) & (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'].str.startswith('E')) | (part['SIZE'] < 37) | (part['CONTAINER'] == 'JUMBO')][['SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['SIZE', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'BRAND']).agg('count')

partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_NAME'].str.startswith('A')) & (nation['N_NAME'].str.startswith('C'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('c')) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_COMMENT'] != '!') | (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_ACCTBAL'] < 4507.475544652617) & (supplier['S_ADDRESS'] == 'L')][['S_NAME', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_SUPPKEY'] < 183) & (supplier['S_SUPPKEY'] >= 59) | (supplier['S_PHONE'] != '1') & (supplier['S_ADDRESS'] == 'L') & (supplier['S_COMMENT'].str.startswith('d'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 144) & (supplier['S_ADDRESS'] == 'n') | (supplier['S_SUPPKEY'] <= 65) & (supplier['S_NATIONKEY'] >= 20) & (supplier['S_SUPPKEY'] >= 45) | (supplier['S_NATIONKEY'] <= 10) | (supplier['S_PHONE'] != '3')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 4965) | (partsupp['P_COMMENT'] == 'bli') | (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['P_COMMENT'] == 'y') | (partsupp['P_COMMENT'] != ',')][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 6704)].merge(part[(part['TYPE'] != 'SMA') & (part['P_PARTKEY'] < 152) | (part['RETAILPRICE'] > 1036.461452496668) | (part['BRAND'] != 'Brand#41') | (part['RETAILPRICE'] <= 1100.0931444298064) | (part['P_PARTKEY'] >= 82)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 6811) | (partsupp['AVAILQTY'] > 9867) & (partsupp['AVAILQTY'] > 149) & (partsupp['AVAILQTY'] >= 3397) & (partsupp['P_COMMENT'] != 'k')].merge(part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 1303) | (partsupp['AVAILQTY'] == 9176) | (partsupp['AVAILQTY'] <= 4180) | (partsupp['PS_PARTKEY'] == 28) | (partsupp['SUPPLYCOST'] >= 36.88371076350835)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'P') | (part['PT_COMMENT'].str.startswith('n')) | (part['SIZE'] <= 38)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 10) | (partsupp['PS_SUPPKEY'] != 3980) | (partsupp['AVAILQTY'] <= 4635)].merge(part[(part['PT_COMMENT'] == 'p') & (part['PT_COMMENT'] == 'k')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 41) | (partsupp['P_COMMENT'] != 'o') | (partsupp['PS_SUPPKEY'] >= 7379)].merge(part[(part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] >= 947.2961712569021) | (part['P_NAME'] == 'l') & (part['TYPE'] == 'SMA') & (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] != 'Brand#54') | (part['P_PARTKEY'] > 61) & (part['PT_COMMENT'].str.startswith('l')) & (part['SIZE'] > 28)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 37)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] < 15) & (nation['N_NATIONKEY'] != 6)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 33)][['PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 5538)].merge(supplier[(supplier['S_PHONE'] != '3')][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4929) | (partsupp['SUPPLYCOST'] >= 208.96387360540214)].merge(supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'] == 'y')][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 1198)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['RETAILPRICE', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 4152)].merge(supplier[(supplier['S_SUPPKEY'] != 141) & (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_ADDRESS'] == '0') & (supplier['S_ADDRESS'] != 'x')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != ' th') & (partsupp['PS_SUPPKEY'] > 3569)].merge(supplier[(supplier['S_NATIONKEY'] >= 19) & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] != 'G') | (nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['P_COMMENT'] == 'c')].merge(part[['BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'o') & (partsupp['P_COMMENT'] != ' ') & (partsupp['SUPPLYCOST'] == 408.6155551942353) | (partsupp['PS_PARTKEY'] != 19)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'x') & (partsupp['PS_SUPPKEY'] != 107) | (partsupp['PS_SUPPKEY'] >= 1987) | (partsupp['SUPPLYCOST'] != 597.72520573269) | (partsupp['SUPPLYCOST'] <= 18.705274508872275)].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 't') & (partsupp['PS_PARTKEY'] < 37)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_SUPPKEY'] < 5420) & (partsupp['PS_SUPPKEY'] != 357) | (partsupp['AVAILQTY'] < 4332) & (partsupp['SUPPLYCOST'] <= 180.59682083385218)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 307.19601711473695) | (partsupp['SUPPLYCOST'] == 486.42285798682565) & (partsupp['AVAILQTY'] == 9868)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 417.75389796718747) & (partsupp['SUPPLYCOST'] >= 71.07512519717257)][['PS_PARTKEY']].merge(part[(part['SIZE'] >= 14) | (part['CONTAINER'] != 'JUMBO') & (part['SIZE'] > 34) & (part['PT_COMMENT'] == '!') & (part['MFGR'] == 'Manufacturer#3') & (part['CONTAINER'] == 'MED') & (part['CONTAINER'].str.startswith('WRAP'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 671.7823559163432)].merge(part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 355.2820117832573) & (partsupp['AVAILQTY'] > 5479) & (partsupp['P_COMMENT'] != 's')].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 401.55293680780125) & (partsupp['AVAILQTY'] > 2452) | (partsupp['AVAILQTY'] <= 7226)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'CONTAINER']).agg('count')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['CONTAINER', 'SIZE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('kag')) | (part['TYPE'] != 'S') & (part['P_PARTKEY'] == 11) & (part['P_NAME'].str.startswith('b')) | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'WRAP')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'] == 'y') & (supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] == 's') | (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1075.2289919493912) & (part['BRAND'] != 'Brand#35') & (part['PT_COMMENT'] != 'u') | (part['TYPE'] == 'S') & (part['P_NAME'] != 'lin') & (part['RETAILPRICE'] != 1001.7331244390041) & (part['PT_COMMENT'].str.startswith('o')) & (part['BRAND'].isin(['Brand#41', 'Brand#54', 'Brand#44', 'Brand#33', 'Brand#34', 'Brand#12', 'Brand#45', 'Brand#55', 'Brand#21', 'Brand#22', 'Brand#13', 'Brand#23', 'Brand#15', 'Brand#43'])) | (part['P_NAME'] != 'g')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] != 4) & (nation['N_COMMENT'] == 'v') & (nation['N_NAME'] != 'J')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] == 21)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] != 'i')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] != 'G')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] == 20)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] < 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('F')) & (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'I') & (supplier['S_ACCTBAL'] != 8538.600824709072) | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_NATIONKEY'] == 7)].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NAME'].str.startswith('B')) & (nation['N_NATIONKEY'] < 11)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'M') & (supplier['S_ADDRESS'] == 'o')].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'c') | (supplier['S_ACCTBAL'] != -961.0119929570296) | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_ADDRESS'] != '8')][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'T') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] != 3235.3380018060234) | (supplier['S_SUPPKEY'] < 118) & (supplier['S_PHONE'] == '32-') | (supplier['S_PHONE'] == '26-')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NATIONKEY'] >= 0)].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'b') & (supplier['S_SUPPKEY'] >= 194) & (supplier['S_ACCTBAL'] == -23.91044799100507) | (supplier['S_SUPPKEY'] <= 157) & (supplier['S_NAME'] != 'S')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'n') | (supplier['S_NATIONKEY'] > 4)][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'v') | (supplier['S_PHONE'] == '3') | (supplier['S_NATIONKEY'] == 6) | (supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_ADDRESS'] != '0') & (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_SUPPKEY'] <= 14) & (supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] != ' ') | (supplier['S_ADDRESS'] != 't') & (supplier['S_SUPPKEY'] >= 90)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('t')) & (supplier['S_SUPPKEY'] < 45) | (supplier['S_NATIONKEY'] >= 0) & (supplier['S_SUPPKEY'] > 117) | (supplier['S_SUPPKEY'] != 41) & (supplier['S_ADDRESS'] == 'G')].merge(nation[(nation['N_NATIONKEY'] == 7) | (nation['N_NAME'] != 'K') | (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_SUPPKEY'] > 176) | (supplier['S_ACCTBAL'] < 3949.698262413812)].merge(nation[(nation['N_NATIONKEY'] >= 20)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'a') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] != 17) | (supplier['S_ADDRESS'].str.startswith('q')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '26-')][['S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'n') & (supplier['S_SUPPKEY'] <= 119)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 47) & (supplier['S_NATIONKEY'] != 10) | (supplier['S_SUPPKEY'] <= 12) | (supplier['S_SUPPKEY'] <= 32) | (supplier['S_ACCTBAL'] > 5789.758261528251) | (supplier['S_SUPPKEY'] <= 69)][['S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'y')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('the'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] != 2038.864893028215) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 62) & (supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_ACCTBAL'] >= 899.9081777049932)].merge(nation[(nation['N_NATIONKEY'] > 11)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 17) & (supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] != 'the') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 13)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 3) & (supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_NATIONKEY'] == 11) & (nation['N_COMMENT'] == 'h') | (nation['N_NAME'] != 'A')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 5) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'V') | (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_COMMENT'] != 'h') & (supplier['S_ACCTBAL'] <= 8269.421605335301)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 8) & (supplier['S_COMMENT'] == ' ') | (supplier['S_ADDRESS'] == 'o') & (supplier['S_ACCTBAL'] > 8197.442844637013)][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 13) & (supplier['S_SUPPKEY'] == 71) | (supplier['S_NATIONKEY'] == 20) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 9) & (supplier['S_SUPPKEY'] == 185)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 21) | (supplier['S_ADDRESS'] != 'L') & (supplier['S_ADDRESS'].str.startswith('F')) & (supplier['S_COMMENT'].str.startswith('f'))][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('G'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_COMMENT'] == 'r') & (supplier['S_SUPPKEY'] != 68)].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] < 5)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-')][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_COMMENT'] != 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-'))][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 9901.991906834171)][['S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 169) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'F') | (supplier['S_PHONE'] != '28-')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 70) & (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] != ',')].merge(nation[(nation['N_NATIONKEY'] == 23) | (nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 21) | (supplier['S_SUPPKEY'] != 37) & (supplier['S_ADDRESS'].str.startswith('F')) & (supplier['S_COMMENT'] == 'al ') | (supplier['S_ACCTBAL'] < 2053.219372737225)].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] <= 0) | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 9)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'p')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_REGIONKEY'] <= 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('y'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_NATIONKEY'] == 11)].merge(region[(region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'K')].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] > 3)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 5357.433952763573) | (customer['C_NATIONKEY'] == 10) | (customer['C_ACCTBAL'] <= 7423.499101644984)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != '6') & (customer['C_NATIONKEY'] < 14) | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] == 's')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'i')].merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 11) | (nation['N_COMMENT'] == 'e')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'T') & (customer['C_CUSTKEY'] == 78) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'X')].merge(nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'm') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('2')) | (customer['C_NATIONKEY'] >= 22)][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'o') & (customer['C_CUSTKEY'] <= 31) | (customer['C_NATIONKEY'] == 20) & (customer['C_ACCTBAL'] == 8306.633472475183) & (customer['C_PHONE'] == '22-') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 53)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != ',') | (customer['C_CUSTKEY'] >= 36) & (customer['C_COMMENT'] != 'l') | (customer['C_NATIONKEY'] == 20) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 72) & (customer['C_ACCTBAL'] >= 8266.416992848472)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'd') & (customer['C_COMMENT'] != 'd') | (customer['C_COMMENT'] != 'd') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] != 19)][['C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] >= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('c')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ADDRESS'].str.startswith('p')) | (customer['C_NATIONKEY'] == 5) | (customer['C_PHONE'] == '2') & (customer['C_ACCTBAL'] < 6207.785101099721) & (customer['C_ADDRESS'] != 'a') & (customer['C_PHONE'] == '25-')][['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 25)].merge(nation[(nation['N_NATIONKEY'] < 10) | (nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] == 23) & (nation['N_NAME'] == 'V')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] == 97) | (customer['C_NATIONKEY'] != 1)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 95) | (customer['C_ADDRESS'].str.startswith('o'))].merge(nation.merge(region[(region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 53) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'] == '27-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 17)].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] == 9)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('E')) & (customer['C_COMMENT'] == '.') | (customer['C_COMMENT'] == 'u') & (customer['C_CUSTKEY'] == 46) | (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] < 6) & (customer['C_ACCTBAL'] >= 8082.6902634117705) | (customer['C_PHONE'] == '3') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 't') & (customer['C_ACCTBAL'] != 6362.12789678713)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 21) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] == 13)].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 's') & (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 10)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 22)].merge(nation[(nation['N_NATIONKEY'] < 12) | (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] >= 6) | (customer['C_ADDRESS'] == 'R') & (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_NAME'] == 'P') | (nation['N_NATIONKEY'] < 5) & (nation['N_COMMENT'] == 'u')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_ACCTBAL'] >= -882.3236678920014)][['C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '3') & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] == 11) | (customer['C_COMMENT'] == 'k')][['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '1') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_NATIONKEY'] == 17) & (customer['C_PHONE'] == '22-') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] < 3) & (customer['C_NATIONKEY'] == 5)].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] >= 14) | (nation['N_NAME'].str.startswith('F'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] <= 22) | (customer['C_NATIONKEY'] >= 17)].merge(nation.merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] == 1) & (customer['C_ADDRESS'] == 'u') & (customer['C_ACCTBAL'] <= 8319.018033241226) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] > -771.709964892747)][['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_ADDRESS'] != 'K')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 18)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_NATIONKEY'] != 19)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] == 'F')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'F')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH'])) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] >= 9654) & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] != 72367) | (orders['O_COMMENT'] == 's') | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH'])) & (orders['ORDERSTATUS'] != 'F')][['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] <= 287049.3744103988) & (orders['O_ORDERKEY'] == 24) | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] == 7289) | (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] != 53740.75170697151)].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT', 'S_ACCTBAL']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 33) | (partsupp['AVAILQTY'] >= 3035) | (partsupp['PS_SUPPKEY'] > 2312) | (partsupp['SUPPLYCOST'] == 778.2756709654554) & (partsupp['P_COMMENT'].str.startswith('f'))].merge(part[['P_PARTKEY', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 28) | (partsupp['SUPPLYCOST'] <= 543.699387080719) | (partsupp['SUPPLYCOST'] <= 972.3080263355289) & (partsupp['PS_SUPPKEY'] > 7295)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 7) & (partsupp['AVAILQTY'] == 7519) | (partsupp['PS_PARTKEY'] != 25) | (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['AVAILQTY'] == 3602)].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2259) & (partsupp['P_COMMENT'].str.startswith(',')) & (partsupp['AVAILQTY'] != 2651) | (partsupp['SUPPLYCOST'] != 209.1631668744402) & (partsupp['PS_PARTKEY'] < 21)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] == 942.9639725607801) & (part['RETAILPRICE'] > 1071.911645610332) & (part['P_PARTKEY'] < 157) | (part['PT_COMMENT'] != 'h') | (part['SIZE'] >= 18) & (part['BRAND'].isin(['Brand#53', 'Brand#52', 'Brand#32', 'Brand#43', 'Brand#23', 'Brand#24', 'Brand#11', 'Brand#34', 'Brand#33', 'Brand#12', 'Brand#35', 'Brand#14', 'Brand#54', 'Brand#21', 'Brand#25', 'Brand#42', 'Brand#13', 'Brand#22'])) & (part['TYPE'] != 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'MFGR', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 70214.01458279508) | (lineitem['L_SUPPKEY'] >= 6970) & (lineitem['DISCOUNT'] != 0.02200963363870938) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN']))].merge(partsupp.merge(part[['SIZE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 52992.20243503761) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['TAX'] <= 0.04362382853792411) | (lineitem['EXTENDEDPRICE'] <= 1928.2265916453266) & (lineitem['QUANTITY'] > 29) & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['TAX'] >= 0.05998423210892817) | (lineitem['SHIPINSTRUCT'] == 'NONE')].merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] == 3) | (lineitem['LINESTATUS'] == 'F') & (lineitem['TAX'] < 0.03753579650139123) | (lineitem['L_SUPPKEY'] != 6942) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] != 5348) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] <= 1)][['EXTENDEDPRICE', 'QUANTITY', 'SHIPDATE', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'DISCOUNT', 'L_ORDERKEY']]

lineitem[(lineitem['LINENUMBER'] > 2) | (lineitem['DISCOUNT'] >= 0.09000802915285143) | (lineitem['L_PARTKEY'] < 78414) & (lineitem['LINENUMBER'] != 4) & (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['L_ORDERKEY'] >= 124) | (lineitem['SHIPINSTRUCT'] != 'NONE')][['QUANTITY', 'L_SUPPKEY', 'SHIPDATE', 'EXTENDEDPRICE']].groupby(by=['SHIPDATE', 'L_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['LINENUMBER'] > 5) | (lineitem['QUANTITY'] >= 34) & (lineitem['L_PARTKEY'] >= 198343)].merge(orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 65956) & (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('v')) & (lineitem['SHIPINSTRUCT'].isin(['NONE'])) | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['LINENUMBER'] > 2) & (lineitem['L_COMMENT'] != 'f')].merge(partsupp[(partsupp['PS_SUPPKEY'] > 302) & (partsupp['SUPPLYCOST'] == 127.7232869479711)].merge(supplier[(supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] == 100) & (lineitem['L_COMMENT'].str.startswith('c'))][['L_PARTKEY', 'SHIPMODE', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp.merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] <= 146932) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_ORDERKEY'] != 14)][['EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE', 'TAX', 'DISCOUNT', 'SHIPDATE']].groupby(by=['QUANTITY', 'SHIPMODE', 'TAX', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 21928) | (lineitem['LINESTATUS'] == 'O') | (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'FOB'])) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['LINESTATUS'] == 'F') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPMODE'].isin(['AIR', 'TRUCK', 'SHIP', 'REG AIR', 'FOB', 'RAIL', 'MAIL'])) | (lineitem['QUANTITY'] < 14)][['TAX', 'L_COMMENT', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 2509)][['L_COMMENT', 'LINENUMBER', 'RETURNFLAG', 'DISCOUNT', 'TAX', 'EXTENDEDPRICE', 'LINESTATUS', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'TAX', 'DISCOUNT', 'LINESTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 3224) | (lineitem['L_COMMENT'].str.startswith('r')) | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['LINENUMBER'] != 4) | (lineitem['DISCOUNT'] >= 0.04602872241896286)][['SHIPDATE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_PARTKEY', 'LINESTATUS', 'SHIPMODE']].groupby(by=['SHIPDATE']).agg('count')

lineitem[(lineitem['QUANTITY'] == 13) & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['L_COMMENT'].str.startswith('i')) & (lineitem['L_PARTKEY'] == 11833) | (lineitem['L_PARTKEY'] < 94058) | (lineitem['QUANTITY'] == 41)][['L_SUPPKEY', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'TAX', 'SHIPMODE', 'RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE']]

lineitem[(lineitem['QUANTITY'] >= 45) & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['QUANTITY'] <= 10) | (lineitem['L_COMMENT'].str.startswith('lit')) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_SUPPKEY'] != 6384)][['RECEIPTDATE', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'TAX', 'RETURNFLAG']].groupby(by=['SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_PARTKEY'] == 133681)][['L_COMMENT', 'DISCOUNT', 'RECEIPTDATE', 'RETURNFLAG', 'LINENUMBER']].groupby(by=['L_COMMENT', 'DISCOUNT', 'LINENUMBER', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['SHIPINSTRUCT'] == 'NONE')].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'FOB')][['L_SUPPKEY', 'SHIPMODE', 'L_COMMENT', 'DISCOUNT', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] < 33) | (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['SUPPLYCOST'] > 743.4483561572282) & (partsupp['SUPPLYCOST'] >= 179.42122722790353)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] == 'SHIP') | (lineitem['L_PARTKEY'] != 149132) & (lineitem['TAX'] != 0.05473053088597611) & (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'SHIP'])) & (lineitem['L_ORDERKEY'] > 98) | (lineitem['DISCOUNT'] != 0.06375733049714911)][['LINESTATUS', 'L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'COMMITDATE', 'TAX', 'L_PARTKEY', 'SHIPINSTRUCT', 'DISCOUNT', 'L_ORDERKEY']]

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'TRUCK', 'FOB', 'SHIP', 'MAIL']))].merge(partsupp[(partsupp['AVAILQTY'] == 7553)].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] != 0.023273342062986098) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['QUANTITY'] <= 34) & (lineitem['L_SUPPKEY'] < 4219) | (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] != 44229.69020626179) | (lineitem['TAX'] > 0.05483030924465667) | (lineitem['LINESTATUS'].isin(['O', 'F']))][['SHIPMODE', 'L_SUPPKEY', 'RETURNFLAG']].groupby(by=['L_SUPPKEY', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.047454457208940364) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['TAX'] >= 0.014560544158866975) & (lineitem['LINESTATUS'] == 'F') & (lineitem['RETURNFLAG'].isin(['N', 'R'])) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_COMMENT'] == 's. ') & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['RECEIPTDATE'] != '1992-05-02')][['QUANTITY', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT', 'QUANTITY']).agg('count')

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('count')

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE', 'L_COMMENT', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 430.2185008273808)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] != 'n') | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n') | (nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] < 23)][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 's') | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 't') | (nation['N_NATIONKEY'] < 21) & (nation['N_COMMENT'] != 'p') | (nation['N_NAME'].str.startswith('R'))][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] < 0) & (nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] == 'V')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'V') | (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] <= 8) | (nation['N_NAME'] == 'P')].merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'B') | (nation['N_COMMENT'] == 'h') | (nation['N_NAME'].str.startswith('I'))][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] <= 6)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'R')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] != 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('v'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] != 'y') | (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] >= 5)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 15) | (nation['N_NATIONKEY'] >= 2) | (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 18) | (nation['N_COMMENT'] == 't') & (nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] == 'a')].merge(region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 9) | (nation['N_NATIONKEY'] < 4)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] < 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] > 5)].merge(region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 6) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 9) | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] != 23)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] != 'B') & (nation['N_NAME'] != 'C')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] != 8)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] != 'R')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'R')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] != 'V')].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'p')][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'V')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] < 19) | (nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] >= 10)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] <= 14) & (nation['N_NATIONKEY'] == 18) & (nation['N_NAME'] == 'F')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NATIONKEY'] != 18)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] == 295.9202955069595) & (customer['C_PHONE'] != '18-') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != '0') & (customer['C_NATIONKEY'] >= 10)].merge(nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_NAME'] == 'E') & (nation['N_NATIONKEY'] != 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('u')) & (customer['C_CUSTKEY'] >= 42) | (customer['C_COMMENT'] != 'q') & (customer['C_COMMENT'] != 'c') | (customer['C_NATIONKEY'] == 19) | (customer['C_ACCTBAL'] == 7609.874475911216)].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_CUSTKEY'] < 4) & (customer['C_ACCTBAL'] < 7532.950484015453) | (customer['C_ADDRESS'].str.startswith('9')) | (customer['C_NATIONKEY'] == 7)][['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 2) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_PHONE'] != '25-')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '1') & (customer['C_ACCTBAL'] == 2895.988475514395) & (customer['C_PHONE'].str.startswith('1')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) & (customer['C_PHONE'] != '2') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] >= 80)].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'] == ' ') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_CUSTKEY'] >= 54) & (customer['C_ADDRESS'] == 'm')][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 286918.7606659427) | (orders['O_CUSTKEY'] > 138572) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_COMMENT'] == 'c') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY']))][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] != 15506.49567964986) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'egu') & (orders['O_ORDERKEY'] != 26) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] == 73)][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] == 'w') & (orders['O_COMMENT'] == 'k') & (orders['O_COMMENT'] == 'f') & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] >= 0)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']]

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] < 261764.7576516348) | (orders['TOTALPRICE'] > 123026.25768831595)].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13')].merge(customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']).agg('count')

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_ORDERKEY'] < 284) | (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] >= 70657) & (orders['O_CUSTKEY'] < 20942)][['TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'CLERK']].groupby(by=['TOTALPRICE', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 117714)][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE']).agg('count')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] >= 475) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'] == 'y') | (orders['ORDERDATE'] > '1992-01-13')].merge(customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '3-MEDIUM', '5-LOW'])) | (orders['ORDERSTATUS'] == 'P') | (orders['O_CUSTKEY'] != 123016) | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] == 272749.6601766452)][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']]

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] != 214062.91937571732) & (orders['O_CUSTKEY'] <= 125406) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))][['ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'SHIPPRIORITY']].groupby(by=['O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT'])) | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['TOTALPRICE'] != 42502.05655644851) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('s')) & (orders['TOTALPRICE'] <= 112827.90467613147)][['ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY']].groupby(by=['ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] == 251) & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_CUSTKEY'] != 134649) & (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'h')][['CLERK', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['SHIPPRIORITY', 'CLERK', 'O_COMMENT']).agg('count')

orders[(orders['O_CUSTKEY'] <= 88708) & (orders['TOTALPRICE'] < 85675.04129511426) & (orders['TOTALPRICE'] < 195528.06095640422) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED'])) & (orders['O_CUSTKEY'] <= 139872) & (orders['TOTALPRICE'] == 254814.45515926895) & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] == 136623) & (orders['SHIPPRIORITY'] == 0)][['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['O_CUSTKEY'] > 35270) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] > 108244) & (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] <= 96897)][['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']].groupby(by=['O_COMMENT', 'ORDERSTATUS', 'CLERK']).agg('count')

orders[(orders['O_CUSTKEY'] >= 122558) & (orders['TOTALPRICE'] == 229069.3892477019) & (orders['O_ORDERKEY'] > 77) & (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] == 136) | (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_ADDRESS'] == 'f')][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 62801) | (orders['O_COMMENT'] != 'l') & (orders['TOTALPRICE'] > 76032.8132494848)].merge(customer[(customer['C_COMMENT'] == 'l') | (customer['C_CUSTKEY'] < 78)][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 146) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] > 117114) | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['SHIPPRIORITY'] != 0) | (orders['O_COMMENT'] != ' re')][['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 598) | (orders['O_ORDERKEY'] != 230) & (orders['O_COMMENT'] != 'o') & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('y')) | (orders['O_ORDERKEY'] == 552) & (orders['O_COMMENT'] == 'the')][['ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] < '1992-01-13') & (orders['TOTALPRICE'] >= 95979.10846167522) | (orders['O_CUSTKEY'] >= 26796) & (orders['TOTALPRICE'] > 50217.21840394363) | (orders['O_CUSTKEY'] < 137973) & (orders['ORDERDATE'] == '1992-01-13')][['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'CLERK']].groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] <= 8457) & (orders['O_ORDERKEY'] > 479) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('y')) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] == 'Y') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD']))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] != 85298) | (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 0) | (nation['N_NATIONKEY'] < 18)].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'g') | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] <= 478) & (orders['TOTALPRICE'] != 51378.71627145381) | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_CUSTKEY'] < 27594) & (orders['ORDERPRIORITY'] == '2-HIGH')][['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']]

orders[(orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] == 137869) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] < 97127) & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] > 155)].merge(customer[(customer['C_NATIONKEY'] == 10) | (customer['C_CUSTKEY'] != 15) & (customer['C_CUSTKEY'] >= 60) | (customer['C_COMMENT'] != 'a')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 235454.836370566) | (orders['O_CUSTKEY'] < 16752) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] <= 139055) & (orders['O_ORDERKEY'] > 469) & (orders['TOTALPRICE'] > 272292.35835595627) & (orders['SHIPPRIORITY'] == 0)].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('count')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_NATIONKEY'] == 0) & (nation['N_NATIONKEY'] == 21) & (nation['N_NATIONKEY'] != 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_ACCTBAL'] > 9343.297029324787)][['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#23')][['TYPE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['TYPE', 'PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#24') & (part['TYPE'] == 'L') & (part['P_PARTKEY'] == 92) & (part['RETAILPRICE'] > 921.8387523462387) & (part['TYPE'] == 'SMA') & (part['BRAND'] != 'Brand#51')][['BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE']].groupby(by=['CONTAINER', 'SIZE']).agg('count')

part[(part['BRAND'] != 'Brand#32') | (part['RETAILPRICE'] > 1017.3945824269565) | (part['PT_COMMENT'] != ' fi') & (part['BRAND'].isin(['Brand#41', 'Brand#11', 'Brand#35', 'Brand#33', 'Brand#31', 'Brand#44', 'Brand#55', 'Brand#22', 'Brand#24', 'Brand#23', 'Brand#14', 'Brand#43', 'Brand#42', 'Brand#53', 'Brand#45', 'Brand#13', 'Brand#52', 'Brand#25', 'Brand#34', 'Brand#12'])) & (part['P_NAME'].str.startswith('t')) | (part['CONTAINER'] != 'WRAP') & (part['BRAND'] != 'Brand#24')][['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY']).agg('count')

part[(part['BRAND'] == 'Brand#12') & (part['BRAND'].isin(['Brand#52', 'Brand#42', 'Brand#45'])) | (part['TYPE'] != 'STA') | (part['BRAND'] == 'Brand#31') & (part['P_PARTKEY'] < 194) & (part['TYPE'] != 'P') & (part['RETAILPRICE'] != 991.1479794192245)][['TYPE', 'PT_COMMENT', 'MFGR', 'BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[(part['CONTAINER'] != 'SM') & (part['BRAND'] != 'Brand#44') | (part['PT_COMMENT'] == 'x') | (part['TYPE'].str.startswith('SMA')) & (part['P_NAME'] == 'm') | (part['PT_COMMENT'].str.startswith('r')) & (part['TYPE'] == 'S')][['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']]

part[(part['CONTAINER'] == 'SM') & (part['TYPE'] == 'M') & (part['BRAND'] == 'Brand#51') | (part['P_PARTKEY'] != 107) & (part['P_PARTKEY'] < 183) | (part['PT_COMMENT'] == 'h')][['P_NAME', 'SIZE', 'MFGR', 'CONTAINER']].groupby(by=['P_NAME', 'SIZE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] > 142) & (part['PT_COMMENT'] == 'kag')][['CONTAINER', 'P_PARTKEY', 'P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) & (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] == 986.9185576383027) | (part['TYPE'].str.startswith('S')) | (part['BRAND'] == 'Brand#51') | (part['SIZE'] != 30)][['BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']].groupby(by=['RETAILPRICE']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1'])) | (part['BRAND'].isin(['Brand#44', 'Brand#54'])) & (part['TYPE'].str.startswith('S')) | (part['P_NAME'] == 'l') | (part['SIZE'] >= 28) | (part['P_PARTKEY'] >= 103) | (part['PT_COMMENT'] != 'w')][['P_NAME', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']].groupby(by=['MFGR']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3'])) & (part['CONTAINER'] == 'SM')][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND', 'CONTAINER', 'TYPE', 'MFGR']].groupby(by=['TYPE', 'MFGR', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('h')) & (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] != 'Brand#11')][['CONTAINER', 'RETAILPRICE', 'SIZE', 'BRAND', 'MFGR']].groupby(by=['MFGR', 'CONTAINER', 'RETAILPRICE', 'BRAND', 'SIZE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('k'))][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['BRAND', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('m')) | (part['TYPE'].str.startswith('M')) | (part['SIZE'] < 24) & (part['P_PARTKEY'] <= 47) & (part['P_PARTKEY'] == 62) & (part['P_NAME'] != 'y') & (part['TYPE'].str.startswith('E'))][['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['SIZE'] < 7) | (part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] != 'a')][['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'MFGR']].groupby(by=['MFGR', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER']).agg('count')

partsupp.merge(part[(part['PT_COMMENT'] != 'n') & (part['TYPE'].str.startswith('L')) & (part['CONTAINER'] != 'MED') & (part['CONTAINER'] == 'MED') & (part['P_PARTKEY'] != 178) & (part['P_NAME'] != 'n') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1'])) & (part['P_NAME'] != 'cor') & (part['TYPE'].str.startswith('S'))][['SIZE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'].str.startswith('lem')) & (part['SIZE'] > 48) & (part['PT_COMMENT'] != 'f') | (part['SIZE'] <= 32) | (part['MFGR'] != 'Manufacturer#4') & (part['P_PARTKEY'] > 148)][['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] > 45) | (part['P_NAME'] != 'cor') | (part['SIZE'] < 42) | (part['BRAND'].isin(['Brand#53', 'Brand#12', 'Brand#45', 'Brand#25', 'Brand#55', 'Brand#52', 'Brand#23', 'Brand#54', 'Brand#44', 'Brand#43', 'Brand#21'])) | (part['TYPE'].str.startswith('SMA')) & (part['RETAILPRICE'] > 903.3268099230313)][['P_PARTKEY', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('min', numeric_only=True)

partsupp.merge(part[(part['SIZE'] > 29) | (part['P_PARTKEY'] == 136) & (part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'] == 'MED')][['SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['TYPE'] != 'L') & (part['P_PARTKEY'] == 135) | (part['BRAND'].isin(['Brand#33', 'Brand#52', 'Brand#51', 'Brand#11', 'Brand#24', 'Brand#32', 'Brand#15', 'Brand#21', 'Brand#14', 'Brand#22', 'Brand#34', 'Brand#12', 'Brand#25', 'Brand#43', 'Brand#45'])) | (part['P_PARTKEY'] >= 27) & (part['PT_COMMENT'].str.startswith('g'))][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 152)][['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5134) | (partsupp['SUPPLYCOST'] <= 353.5947239800685) & (partsupp['PS_SUPPKEY'] >= 3676)].merge(supplier[(supplier['S_SUPPKEY'] <= 84)].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5566) & (partsupp['PS_SUPPKEY'] <= 4558) | (partsupp['PS_SUPPKEY'] != 6749) & (partsupp['PS_PARTKEY'] > 18)].merge(supplier[(supplier['S_ADDRESS'] == 'H') & (supplier['S_ACCTBAL'] < 4764.818472141758) & (supplier['S_ADDRESS'] == 'z') & (supplier['S_ACCTBAL'] == 6364.873536444703) | (supplier['S_NATIONKEY'] >= 10) & (supplier['S_ADDRESS'] != 'S')][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2597) | (partsupp['SUPPLYCOST'] == 428.5106346481116) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_PARTKEY'] >= 11)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 13)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 36) & (partsupp['P_COMMENT'] != 'p') & (partsupp['PS_PARTKEY'] > 42)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 23)].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 1307.1664649128918) & (supplier['S_COMMENT'].str.startswith('u'))][['S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] > 5) | (partsupp['PS_SUPPKEY'] > 4335) | (partsupp['SUPPLYCOST'] != 697.7555743498347) & (partsupp['SUPPLYCOST'] <= 607.6001209124543) & (partsupp['PS_PARTKEY'] == 6)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] == 921.6084267122749)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 39) | (partsupp['P_COMMENT'] != 'j') | (partsupp['AVAILQTY'] >= 4490)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 430) | (partsupp['P_COMMENT'] == 'are') | (partsupp['PS_PARTKEY'] <= 20)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 3525)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['SIZE', 'BRAND', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 5136) | (partsupp['PS_SUPPKEY'] < 4657)].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6291) & (partsupp['P_COMMENT'] == 'ly ') & (partsupp['AVAILQTY'] > 7432) & (partsupp['AVAILQTY'] != 4499)].merge(supplier[(supplier['S_SUPPKEY'] != 52)][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 4760) | (partsupp['PS_PARTKEY'] > 31)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ';') | (partsupp['AVAILQTY'] <= 454) | (partsupp['AVAILQTY'] > 533)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 170) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] > 174) | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] > 4468.9454226256075)][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 't') & (partsupp['PS_SUPPKEY'] != 1347) | (partsupp['PS_PARTKEY'] <= 12) & (partsupp['PS_SUPPKEY'] <= 6860)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == ' th') & (partsupp['PS_PARTKEY'] == 14) | (partsupp['PS_PARTKEY'] == 35) & (partsupp['AVAILQTY'] < 3425)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] < 4) & (supplier['S_COMMENT'] != ' sl')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'a')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'b') | (partsupp['PS_SUPPKEY'] != 2040)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['SUPPLYCOST'] == 636.7446745005722) | (partsupp['AVAILQTY'] <= 1783) | (partsupp['AVAILQTY'] > 2117)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['SUPPLYCOST'] >= 713.2432217453717) | (partsupp['PS_SUPPKEY'] < 2064) | (partsupp['PS_SUPPKEY'] > 7271)].merge(supplier[(supplier['S_ADDRESS'] != 'e') | (supplier['S_NATIONKEY'] >= 12) | (supplier['S_ADDRESS'] == 'f') & (supplier['S_SUPPKEY'] <= 164) | (supplier['S_NATIONKEY'] > 5) | (supplier['S_ADDRESS'] == ' ')][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 903.716454108126)][['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'y') | (part['P_NAME'].str.startswith('blu')) & (part['P_NAME'] != 'lem')][['CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 988.3483577042292) & (partsupp['P_COMMENT'] == 's')].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 124.05202814569) & (partsupp['SUPPLYCOST'] < 797.1128818009297)].merge(part[(part['P_PARTKEY'] <= 17) | (part['TYPE'].str.startswith('STA')) | (part['CONTAINER'] != 'WRAP')][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 287.6906423672634) & (partsupp['PS_PARTKEY'] >= 37) | (partsupp['PS_PARTKEY'] != 46) | (partsupp['P_COMMENT'] != 'b')][['PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] > 1002.623644211234)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] == '8') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] >= 6) & (supplier['S_SUPPKEY'] < 59) & (supplier['S_ADDRESS'] == 'D') & (supplier['S_ACCTBAL'] > 1665.5619319717314)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['MFGR', 'BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] <= 974.829384473885) | (part['PT_COMMENT'] == 'kag') | (part['P_PARTKEY'] == 79)][['PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'LG') & (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] != 988.7193757002763) | (part['RETAILPRICE'] == 959.1736471617005) & (part['RETAILPRICE'] >= 1034.2400339974015) & (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'].str.startswith('ss ')) | (part['P_PARTKEY'] < 50)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#44') & (part['RETAILPRICE'] == 997.9707218951619) | (part['SIZE'] >= 4) & (part['BRAND'].isin(['Brand#41', 'Brand#54', 'Brand#31', 'Brand#33'])) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] != 19) & (part['CONTAINER'] == 'LG') & (part['P_NAME'].str.startswith('i')) | (part['P_NAME'].str.startswith('r'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] == 'q') & (supplier['S_NATIONKEY'] <= 13)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] == 7) & (supplier['S_ACCTBAL'] == 2703.047533188833) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_ADDRESS'] != 'S') | (supplier['S_ACCTBAL'] == -954.995185462953)][['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'].str.startswith('q'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'MED') & (part['MFGR'] == 'Manufacturer#1') & (part['PT_COMMENT'].str.startswith('kag'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_NATIONKEY'] <= 8)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_NATIONKEY'] >= 23) | (nation['N_COMMENT'] == 'p') & (nation['N_NAME'].str.startswith('K'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 5) & (nation['N_NATIONKEY'] < 21)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] != 'E') & (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] <= 6) | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] != 'U') & (nation['N_NAME'] == 'R') | (nation['N_NAME'] == 'E')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'G')].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 8) & (nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] <= 5)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] != 'S')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 3465.21093608135) & (supplier['S_ADDRESS'] == 'd')].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 6677.461952049637) | (supplier['S_ACCTBAL'] > 9450.735642523701) & (supplier['S_ACCTBAL'] != 8712.152021598986) & (supplier['S_NATIONKEY'] < 21) | (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_ACCTBAL'] >= 8207.769412242731)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_ACCTBAL'] > 1495.2011984041635)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '6') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_COMMENT'] == 'j') | (supplier['S_ACCTBAL'] <= 805.7678474088818) & (supplier['S_SUPPKEY'] <= 174)].merge(nation.merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'U') | (supplier['S_ACCTBAL'] == 5805.975430572213)].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'h') & (supplier['S_NATIONKEY'] <= 12) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'R')].merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'h') | (supplier['S_SUPPKEY'] == 158) | (supplier['S_ACCTBAL'] > 7368.601383397033) & (supplier['S_ACCTBAL'] <= 294.5821618764901) | (supplier['S_COMMENT'] == 'b') & (supplier['S_COMMENT'] == 'the') & (supplier['S_ACCTBAL'] >= -929.6282735948394)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'k') | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 89) | (supplier['S_ACCTBAL'] > 3730.2196702442143) | (supplier['S_NATIONKEY'] != 3)].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('Z')) & (supplier['S_NATIONKEY'] > 7) | (supplier['S_NATIONKEY'] >= 19) & (supplier['S_ADDRESS'] == 'v')].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] == 2)].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'e') & (supplier['S_COMMENT'] != 'u') & (supplier['S_NATIONKEY'] >= 22)][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 3) & (supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_NATIONKEY'] >= 1) & (supplier['S_ADDRESS'] != 'B')].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] != 8) & (nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'] == 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 184) & (supplier['S_ADDRESS'] == 'Y') & (supplier['S_ACCTBAL'] != 7940.750065529223) | (supplier['S_ACCTBAL'] >= 2920.036532211998)].merge(nation[(nation['N_NATIONKEY'] < 14)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 0) | (supplier['S_NATIONKEY'] < 19) | (supplier['S_NATIONKEY'] <= 7) & (supplier['S_SUPPKEY'] >= 97)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 1) & (supplier['S_ACCTBAL'] < 5040.068146311895) & (supplier['S_ACCTBAL'] == 1080.5285882756461)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_NATIONKEY'] == 12) & (supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_ADDRESS'] != 'r') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 160) | (supplier['S_ACCTBAL'] >= 6137.852205400577) | (supplier['S_COMMENT'] == 'f')].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] <= 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 5) & (supplier['S_NATIONKEY'] < 7) | (supplier['S_ADDRESS'].str.startswith('E')) & (supplier['S_PHONE'] != '1') | (supplier['S_ADDRESS'] == 'n')].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] != 'E')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] > 19)].merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_NATIONKEY'] < 20) & (nation['N_NAME'] == 'K') & (nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] != 130) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NATIONKEY'] <= 13) & (supplier['S_ADDRESS'].str.startswith('C'))].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] <= 6) | (nation['N_NATIONKEY'] != 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] > 54) | (supplier['S_COMMENT'].str.startswith('x'))].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'] == 't')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] >= 0) & (supplier['S_SUPPKEY'] >= 48) & (supplier['S_NATIONKEY'] == 9) | (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_SUPPKEY'] > 103)][['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 189) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] == 45)].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_NAME'] != 'E') & (nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 121) | (supplier['S_ADDRESS'] != 'o') & (supplier['S_SUPPKEY'] != 28) & (supplier['S_SUPPKEY'] < 4) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_SUPPKEY'] <= 20)].merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('F'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 119) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] == 8807.812689784621) | (supplier['S_ACCTBAL'] == 6931.7583301443865) | (supplier['S_ADDRESS'] != 'b') & (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'] == 'v')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] == 17)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 7)].merge(region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 2)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 2883.55937341903) & (customer['C_ADDRESS'] == 'l') & (customer['C_NATIONKEY'] > 9) & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] != 2) | (nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] != 3)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'd') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '3') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] == '1') & (customer['C_ACCTBAL'] >= 6468.096640992292)].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] == 'i')].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'q')][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 20) | (nation['N_COMMENT'] != 'v')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 's')].merge(nation[(nation['N_NAME'] != 'C')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'a') & (customer['C_CUSTKEY'] >= 67)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'y') | (customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] >= 61) & (customer['C_COMMENT'].str.startswith('p')) & (customer['C_ACCTBAL'] >= 4868.005523320686)].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('w')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 5) | (customer['C_NATIONKEY'] <= 6)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 56) | (customer['C_PHONE'] == '3') & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD']))].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'] == 'J') & (nation['N_NAME'] == 'J') | (nation['N_NAME'] == 'J')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 57) & (customer['C_ACCTBAL'] <= 8368.632565655307) | (customer['C_NATIONKEY'] <= 5) & (customer['C_COMMENT'] != '.') | (customer['C_COMMENT'] == ' ') & (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_NAME'].str.startswith('F'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 16) | (customer['C_ADDRESS'] != 'O') & (customer['C_ACCTBAL'] <= 3318.8237108544336)].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] < 22) | (nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 56) & (customer['C_COMMENT'] != 'w') & (customer['C_CUSTKEY'] > 42) | (customer['C_CUSTKEY'] < 3) & (customer['C_CUSTKEY'] != 43)][['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] != 14) & (customer['C_CUSTKEY'] != 51) & (customer['C_CUSTKEY'] == 64) | (customer['C_CUSTKEY'] == 25)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] <= 84) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 5) & (nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] < 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '1') & (customer['C_CUSTKEY'] <= 65)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] == '27-') & (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 97) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] <= 5910.893185530352)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'].str.startswith('O')) | (customer['C_ACCTBAL'] <= 4457.18244550635) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('18-'))][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_ACCTBAL'] == 3919.2506484339256) | (customer['C_ADDRESS'] == 'U') & (customer['C_COMMENT'] == 'w') | (customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] < 91) | (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_ACCTBAL'] == 4849.222792308714) & (customer['C_CUSTKEY'] == 44) & (customer['C_NATIONKEY'] <= 6) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] != 17) | (nation['N_NAME'].str.startswith('B'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] == 23)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] != 5) & (nation['N_NAME'] == 'V')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] <= 355) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['O_ORDERKEY', 'O_COMMENT', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERDATE']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] != 19) | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'm') & (customer['C_COMMENT'] == 'p') & (customer['C_COMMENT'] != 'r')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[['CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(part[['P_NAME', 'SIZE', 'BRAND', 'TYPE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 21) & (partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['AVAILQTY'] != 1466) & (partsupp['SUPPLYCOST'] <= 264.7934892771026) & (partsupp['PS_SUPPKEY'] >= 20)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3636) & (partsupp['P_COMMENT'] != 'v')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 197.36587638283527)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] < 35) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['LINENUMBER'] > 2) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['L_ORDERKEY'] < 128) | (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_COMMENT'] == 'h')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('count')

lineitem[(lineitem['DISCOUNT'] < 0.08874484209363771) | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['L_SUPPKEY'] == 2329) | (lineitem['TAX'] != 0.030102449872357776) & (lineitem['L_ORDERKEY'] <= 46) & (lineitem['L_SUPPKEY'] <= 642) & (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'TRUCK', 'FOB', 'SHIP', 'RAIL', 'MAIL']))][['RETURNFLAG', 'QUANTITY', 'SHIPDATE', 'DISCOUNT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 86728.82615066068) | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['QUANTITY'] > 1) | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['L_PARTKEY'] == 181340) & (lineitem['L_PARTKEY'] < 139732) | (lineitem['EXTENDEDPRICE'] <= 26886.707774411978)][['SHIPMODE', 'L_SUPPKEY', 'COMMITDATE', 'QUANTITY']].groupby(by=['L_SUPPKEY', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] > 86846.38546888677) | (lineitem['LINENUMBER'] < 6) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_COMMENT'] == 't') | (lineitem['L_COMMENT'] != ',') & (lineitem['EXTENDEDPRICE'] < 69262.38182435752) | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['DISCOUNT'] == 0.03671646885001253) & (lineitem['L_COMMENT'].str.startswith('d'))][['RETURNFLAG', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 3) | (lineitem['L_COMMENT'] != 'e') | (lineitem['RECEIPTDATE'] > '1998-11-06')].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 2) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['EXTENDEDPRICE'] != 78283.76719559355) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['LINESTATUS'] != 'O') & (lineitem['L_PARTKEY'] > 83525)][['SHIPDATE', 'RECEIPTDATE', 'COMMITDATE', 'DISCOUNT', 'TAX', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER']]

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['SHIPMODE'] == 'MAIL')].merge(partsupp[(partsupp['PS_PARTKEY'] <= 43) | (partsupp['PS_SUPPKEY'] != 746) | (partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['P_COMMENT'] == ',')].merge(part[['SIZE', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != ',') | (lineitem['DISCOUNT'] <= 0.09405463561929163) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['LINENUMBER'] != 4) | (lineitem['LINENUMBER'] < 6) & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['EXTENDEDPRICE'] == 39039.21908089042)][['DISCOUNT', 'RETURNFLAG', 'EXTENDEDPRICE', 'RECEIPTDATE']].groupby(by=['DISCOUNT', 'RETURNFLAG', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 109) & (lineitem['TAX'] < 0.004672818498209548)].merge(partsupp[(partsupp['SUPPLYCOST'] == 615.0999167806444) & (partsupp['P_COMMENT'] == 'y') | (partsupp['PS_PARTKEY'] >= 5) | (partsupp['P_COMMENT'] != 'ly ')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'SIZE']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] <= 4539) & (lineitem['LINENUMBER'] >= 2) | (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPMODE'].isin(['TRUCK'])) & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R']))][['LINESTATUS', 'SHIPDATE', 'SHIPMODE', 'LINENUMBER', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 5082) | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['L_SUPPKEY'] != 4753) | (lineitem['L_ORDERKEY'] <= 64)][['L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'COMMITDATE', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'LINESTATUS', 'COMMITDATE', 'L_ORDERKEY', 'SHIPINSTRUCT']).agg('count')

lineitem[(lineitem['QUANTITY'] != 10) & (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPMODE'].isin(['SHIP', 'RAIL', 'TRUCK', 'REG AIR', 'FOB'])) & (lineitem['EXTENDEDPRICE'] >= 36311.43605561343) | (lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['L_PARTKEY'] == 73671) & (lineitem['L_PARTKEY'] > 51997)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 171.6647885599601) & (partsupp['AVAILQTY'] < 3134) | (partsupp['P_COMMENT'] == 'l') & (partsupp['PS_PARTKEY'] <= 49) & (partsupp['P_COMMENT'] == 'y')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['TAX'] <= 0.07929175821142191) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['EXTENDEDPRICE'] > 44361.92609392055) & (lineitem['LINENUMBER'] < 3) | (lineitem['L_PARTKEY'] != 102631)].merge(orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[(customer['C_ACCTBAL'] <= 8009.461340122416)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'lin') | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5'])) & (part['RETAILPRICE'] < 1082.2765209885763) & (part['P_NAME'] != 'lin') & (part['P_PARTKEY'] >= 197) & (part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['LINENUMBER'] <= 1) | (lineitem['QUANTITY'] >= 49) & (lineitem['DISCOUNT'] < 0.028592845706070038)].merge(partsupp[(partsupp['SUPPLYCOST'] < 719.2787641452147) | (partsupp['PS_PARTKEY'] != 29) | (partsupp['PS_PARTKEY'] >= 38)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['LINESTATUS'] == 'O') | (lineitem['L_ORDERKEY'] <= 115) & (lineitem['L_PARTKEY'] != 22564) & (lineitem['L_SUPPKEY'] != 9957)].merge(orders[['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY']).agg('count')

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_COMMENT'] != 'h') & (lineitem['LINENUMBER'] == 2) & (lineitem['L_SUPPKEY'] == 4798) | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_ORDERKEY'] >= 8)].merge(partsupp[(partsupp['P_COMMENT'] == '.')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['LINESTATUS'] == 'F')].merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_PARTKEY'] > 1261) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['TAX'] <= 0.059211902586134936) | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['TAX'] != 0.07126422456717117) & (lineitem['RETURNFLAG'] != 'N')][['DISCOUNT', 'SHIPDATE', 'L_COMMENT', 'RETURNFLAG', 'COMMITDATE']].groupby(by=['DISCOUNT', 'COMMITDATE']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['TAX'] <= 0.01718413648867304) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_PARTKEY'] >= 36149) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['TAX'] < 0.059791747991472646) & (lineitem['LINENUMBER'] >= 4) & (lineitem['LINESTATUS'] != 'F') | (lineitem['L_COMMENT'] == 'n')][['SHIPINSTRUCT', 'DISCOUNT', 'QUANTITY']].groupby(by=['DISCOUNT', 'QUANTITY']).agg('count')

lineitem[['LINESTATUS', 'QUANTITY', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[(orders['O_CUSTKEY'] != 148168) & (orders['O_ORDERKEY'] != 326)][['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem[['L_ORDERKEY', 'RETURNFLAG', 'RECEIPTDATE']].merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('max', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'RECEIPTDATE', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] != 125) | (part['BRAND'] != 'Brand#35') | (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'f') & (partsupp['PS_SUPPKEY'] <= 6146) | (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['P_COMMENT'].str.startswith('c'))][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'COMMITDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPMODE', 'L_COMMENT']].merge(orders[['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT', 'TAX', 'L_ORDERKEY']].merge(orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'SHIPDATE', 'COMMITDATE', 'L_COMMENT', 'EXTENDEDPRICE']].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] == 74382.92901997216) | (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] != 's')][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'v')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] != 'i') | (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] == 'R') & (nation['N_NAME'] == 'C') & (nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == 'e')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NAME'].str.startswith('A'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'] != 'o') | (nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 9)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'] != 'p')][['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'K') & (nation['N_NATIONKEY'] <= 3) | (nation['N_NAME'] == 'K')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'C')][['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'I') & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != 'r')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'h') | (customer['C_COMMENT'] == 'y') | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'].str.startswith('18-'))][['C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_NATIONKEY'] > 15) & (customer['C_ACCTBAL'] <= 1549.9090775557538)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('i')) & (customer['C_CUSTKEY'] > 29) & (customer['C_PHONE'] == '3') & (customer['C_ACCTBAL'] < 8451.695011633257)].merge(nation[(nation['N_NATIONKEY'] != 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] == 37) & (customer['C_CUSTKEY'] > 38) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_PHONE'] != '18-') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] != 15)].merge(nation[(nation['N_NATIONKEY'] == 15) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] > 92)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']).agg('count')

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 't')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 21) | (customer['C_ACCTBAL'] != 9455.829222133922) & (customer['C_ACCTBAL'] != -246.55092113422415) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 11) | (customer['C_ADDRESS'] != 'E')].merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE']))].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] >= 12) | (customer['C_PHONE'] == '25-') | (customer['C_COMMENT'] != 'n') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_COMMENT'] != 'w')].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] == 179047.37913735883) & (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['TOTALPRICE'] <= 138360.62820542665)][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] < 46652.21168989296) & (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] < 416) | (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'] != 'P')].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] != 0)].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] <= 749)][['O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['O_CUSTKEY'] < 78139)].merge(customer[(customer['C_CUSTKEY'] == 52) & (customer['C_ACCTBAL'] > 9712.702524813478) | (customer['C_NATIONKEY'] <= 15) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != '0')][['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1992-01-13')].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_PHONE'] == '22-') & (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] < 9020.99059197462) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21')].merge(customer[(customer['C_COMMENT'] == '.') & (customer['C_COMMENT'] == 'i') | (customer['C_ACCTBAL'] > 6608.838121774014) | (customer['C_COMMENT'] == 'e') & (customer['C_PHONE'].str.startswith('1')) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'l') | (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] != 88451) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_CUSTKEY'] < 88937)].merge(customer[['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH'])) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] == 232) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] <= 13) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_COMMENT'] == 'q') & (customer['C_NAME'] == 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_COMMENT'] == 'w') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] == 746) & (orders['O_COMMENT'] != ' ') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] != 4859) & (orders['O_ORDERKEY'] <= 516) | (orders['O_CUSTKEY'] >= 25464)].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != 'g') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] == 'i') & (orders['O_COMMENT'] == 'ly ') & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))].merge(customer[(customer['C_ACCTBAL'] <= 362.532302909834) | (customer['C_NATIONKEY'] <= 18) & (customer['C_CUSTKEY'] == 12) | (customer['C_CUSTKEY'] >= 27) | (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 66001) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('-'))].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 114643) & (orders['O_ORDERKEY'] >= 124) | (orders['TOTALPRICE'] <= 81701.4619936909)].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'y') | (customer['C_ACCTBAL'] <= 1624.19019454013) | (customer['C_PHONE'] != '2') | (customer['C_NATIONKEY'] <= 8) & (customer['C_CUSTKEY'] != 93)].merge(nation[(nation['N_REGIONKEY'] < 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 58344) & (orders['TOTALPRICE'] >= 295729.1064860525) | (orders['TOTALPRICE'] >= 281289.3933204051) | (orders['O_CUSTKEY'] < 120918) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] > 145407) | (orders['O_ORDERKEY'] > 298) | (orders['SHIPPRIORITY'] >= 0)][['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 786) & (orders['CLERK'] != 'C')].merge(customer[(customer['C_ACCTBAL'] > 6831.056336802602) & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] != 312) | (orders['O_CUSTKEY'] < 134308) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 101206) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] > 41778.25822050839) | (orders['CLERK'] != 'C')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] > 322084.7980001864) | (orders['O_COMMENT'] == 'l') | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_COMMENT'] != 'y') & (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'].str.startswith('z')) | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'F') | (orders['TOTALPRICE'] != 134767.40036869224) & (orders['TOTALPRICE'] != 97841.6391086825) & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 300079.3651388217) | (orders['TOTALPRICE'] >= 222542.11537580704) | (orders['O_CUSTKEY'] != 105419) & (orders['O_CUSTKEY'] < 78898)].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 13) & (nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']).agg('count')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] != 4730.359321316645) & (customer['C_ADDRESS'] != 'X')].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] < 4)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 60) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'n') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] != 8032.503707381555) | (customer['C_ADDRESS'] != 'T') | (customer['C_CUSTKEY'] <= 86)][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#33') & (part['PT_COMMENT'] == 'k') | (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'] != 'Manufacturer#3') | (part['TYPE'].str.startswith('L')) & (part['P_NAME'] == 'f') | (part['PT_COMMENT'] == 'n') & (part['P_PARTKEY'] >= 108) & (part['P_PARTKEY'] <= 141)][['SIZE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']]

part[(part['CONTAINER'] == 'MED') | (part['BRAND'] != 'Brand#41') | (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'].isin(['Brand#32', 'Brand#55'])) | (part['SIZE'] < 39) & (part['PT_COMMENT'] == ' ') & (part['BRAND'] != 'Brand#23') & (part['BRAND'] != 'Brand#15') | (part['RETAILPRICE'] >= 1046.4686885291162)][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'BRAND', 'RETAILPRICE']]

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'].str.startswith('WRAP')) | (part['P_NAME'].str.startswith('bis')) & (part['P_NAME'] != 'k') | (part['RETAILPRICE'] >= 949.9192676250611) | (part['SIZE'] == 23) & (part['RETAILPRICE'] <= 982.2599164365572) & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] != 126)][['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']]

part[(part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'] == 'd') | (part['TYPE'] != 'P') & (part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('g')) & (part['BRAND'].isin(['Brand#22', 'Brand#54'])) & (part['RETAILPRICE'] > 1086.2933291465201) | (part['RETAILPRICE'] > 903.8042615680347)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'BRAND']]

part[(part['PT_COMMENT'] != 'y') | (part['SIZE'] <= 9)][['MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('blu')) | (part['PT_COMMENT'].str.startswith('r')) | (part['CONTAINER'] != 'WRAP') & (part['SIZE'] > 9) | (part['CONTAINER'] != 'LG') | (part['CONTAINER'].str.startswith('WRAP')) & (part['RETAILPRICE'] >= 975.5724689401612) & (part['P_PARTKEY'] <= 175)][['SIZE', 'MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] == 990.0645060538696) | (part['BRAND'] == 'Brand#31') & (part['SIZE'] >= 34) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) & (part['TYPE'] == 'E') | (part['BRAND'] != 'Brand#24') & (part['RETAILPRICE'] > 908.0831550070376) | (part['SIZE'] < 14) & (part['SIZE'] == 16)][['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['RETAILPRICE'] > 965.2443019563718) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1'])) | (part['P_NAME'].str.startswith('v'))][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['SIZE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] > 995.3836060826941) & (part['P_PARTKEY'] < 27) & (part['SIZE'] < 32) & (part['P_NAME'].str.startswith('n')) | (part['TYPE'] == 'E') | (part['P_PARTKEY'] == 52) & (part['TYPE'] != 'L') & (part['SIZE'] > 47) & (part['P_PARTKEY'] < 25)][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'MFGR']]

part[(part['SIZE'] < 19) | (part['PT_COMMENT'] == 'k')][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'TYPE']].groupby(by=['MFGR', 'BRAND', 'TYPE']).agg('count')

part[(part['SIZE'] <= 16) | (part['P_NAME'].str.startswith('g')) | (part['P_NAME'] == 'y') & (part['TYPE'] == 'M') | (part['RETAILPRICE'] <= 979.8729989001696) | (part['PT_COMMENT'] != 'ly ') & (part['BRAND'].isin(['Brand#22', 'Brand#51', 'Brand#14', 'Brand#53', 'Brand#15', 'Brand#34', 'Brand#52', 'Brand#43', 'Brand#23', 'Brand#25'])) & (part['PT_COMMENT'].str.startswith('i')) & (part['MFGR'] == 'Manufacturer#5')][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']]

part[(part['TYPE'] != 'S') & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] != 'SMA')][['SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']].groupby(by=['SIZE', 'P_NAME', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'S') | (part['MFGR'] != 'Manufacturer#1')][['SIZE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']].groupby(by=['MFGR', 'PT_COMMENT', 'BRAND', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'].isin(['Brand#31', 'Brand#11', 'Brand#12', 'Brand#34', 'Brand#25', 'Brand#55', 'Brand#14', 'Brand#33'])) & (part['PT_COMMENT'].str.startswith('ss ')) | (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'] == 't') | (part['SIZE'] != 4) & (part['SIZE'] <= 28) | (part['P_PARTKEY'] <= 128) & (part['P_PARTKEY'] >= 103)][['P_PARTKEY', 'P_NAME', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'] != 'JUMBO') & (part['P_NAME'] == 'r') & (part['TYPE'] == 'M') & (part['BRAND'].isin(['Brand#44', 'Brand#11', 'Brand#31', 'Brand#32', 'Brand#14', 'Brand#23', 'Brand#15', 'Brand#42', 'Brand#33', 'Brand#24', 'Brand#51', 'Brand#13', 'Brand#45', 'Brand#52', 'Brand#41', 'Brand#25', 'Brand#43', 'Brand#21', 'Brand#34'])) & (part['P_NAME'] == 'f')][['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('!')) | (part['PT_COMMENT'].str.startswith('o')) & (part['MFGR'] != 'Manufacturer#4')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] == 'n') & (part['P_NAME'].str.startswith('w')) | (part['P_NAME'] != 'y') | (part['SIZE'] <= 13)][['P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 12) | (supplier['S_COMMENT'] != '.') & (supplier['S_PHONE'] != '1') | (supplier['S_ACCTBAL'] <= 4134.158790626995) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NATIONKEY'] != 1)][['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 68) | (supplier['S_ACCTBAL'] < 6525.839259133889)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] != 'S')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 6200) & (partsupp['PS_SUPPKEY'] > 4116) | (partsupp['PS_SUPPKEY'] <= 6811) & (partsupp['AVAILQTY'] > 5707) & (partsupp['P_COMMENT'].str.startswith('k'))][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 1575)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 3040) | (partsupp['PS_SUPPKEY'] > 2590)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 9060) & (partsupp['P_COMMENT'] == 'r')].merge(supplier[(supplier['S_SUPPKEY'] < 74) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ADDRESS'] == 'M') & (supplier['S_NATIONKEY'] != 16)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 6806) & (partsupp['AVAILQTY'] <= 6601) | (partsupp['P_COMMENT'] == ' ') & (partsupp['SUPPLYCOST'] != 860.3617646265546) & (partsupp['P_COMMENT'] == 'l')].merge(supplier[(supplier['S_SUPPKEY'] <= 96)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 17) | (partsupp['PS_SUPPKEY'] < 1848) & (partsupp['PS_PARTKEY'] <= 18)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 18)].merge(part[['P_NAME', 'RETAILPRICE', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 19) | (partsupp['P_COMMENT'] != 'l') | (partsupp['SUPPLYCOST'] != 289.1973176739774)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] >= 22)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 20) & (partsupp['PS_PARTKEY'] >= 42) | (partsupp['AVAILQTY'] >= 9799) | (partsupp['PS_SUPPKEY'] >= 7460) | (partsupp['SUPPLYCOST'] > 879.0734925237593)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 35) | (partsupp['AVAILQTY'] > 7671) & (partsupp['PS_PARTKEY'] > 47)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 3961)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 919.3686092593248) & (part['PT_COMMENT'] != 'r') & (part['CONTAINER'] == 'LG') | (part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] <= 6) & (part['SIZE'] < 6) | (part['P_PARTKEY'] >= 159) & (part['P_PARTKEY'] < 187)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 5528) & (partsupp['SUPPLYCOST'] == 645.9299499968386)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'MFGR', 'TYPE', 'BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 6086) & (partsupp['AVAILQTY'] >= 1521) & (partsupp['AVAILQTY'] >= 2251) | (partsupp['PS_SUPPKEY'] < 2374) & (partsupp['PS_PARTKEY'] < 27)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 7222) | (partsupp['SUPPLYCOST'] < 807.4863833476915) | (partsupp['AVAILQTY'] == 3722)].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 4528)][['PS_PARTKEY']].merge(part[['SIZE', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 5658) | (partsupp['PS_PARTKEY'] > 24)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] >= 101) & (supplier['S_SUPPKEY'] <= 127)][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'f') & (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['P_COMMENT'].str.startswith('y')) | (partsupp['PS_SUPPKEY'] > 6000)][['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'BRAND']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'h')][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'ly ') | (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_SUPPKEY'] >= 2418) & (partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['SUPPLYCOST'] <= 502.5050393972169)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'i') | (partsupp['PS_SUPPKEY'] <= 6975) & (partsupp['PS_SUPPKEY'] <= 4381)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'j') & (partsupp['PS_PARTKEY'] >= 34) | (partsupp['P_COMMENT'] != 'k') & (partsupp['PS_PARTKEY'] == 6)][['PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'MED') | (part['SIZE'] < 4) & (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] < 179) & (part['BRAND'] != 'Brand#12') | (part['PT_COMMENT'].str.startswith('!')) | (part['MFGR'] != 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'n') | (partsupp['SUPPLYCOST'] <= 164.8281254990655) | (partsupp['AVAILQTY'] <= 6543) | (partsupp['P_COMMENT'] == 'x')].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'o') | (partsupp['SUPPLYCOST'] > 636.7117890288382) & (partsupp['AVAILQTY'] == 8965) | (partsupp['AVAILQTY'] <= 6200) | (partsupp['PS_PARTKEY'] == 12)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 'ss ') & (part['P_PARTKEY'] == 90)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 65.74726253500502) | (partsupp['AVAILQTY'] < 6826)].merge(part[['SIZE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 215.63253912971)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'] == 'LG')][['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 308.3740883518202) | (partsupp['AVAILQTY'] != 6715) & (partsupp['AVAILQTY'] <= 6794)].merge(part[(part['TYPE'] == 'P') | (part['CONTAINER'] != 'MED') & (part['CONTAINER'].str.startswith('WRAP'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 267.2470099280588)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 826.1431982740633) | (partsupp['SUPPLYCOST'] != 914.0048835495438) & (partsupp['PS_PARTKEY'] >= 44)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ADDRESS'] == 'V') | (supplier['S_NATIONKEY'] == 15) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 831.024563125669) | (partsupp['AVAILQTY'] <= 7610) & (partsupp['PS_SUPPKEY'] < 1176)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 930.1662335311036) & (partsupp['SUPPLYCOST'] >= 574.1724228843603) | (partsupp['AVAILQTY'] == 7944) | (partsupp['PS_SUPPKEY'] >= 4568)].merge(part[(part['P_PARTKEY'] == 104) | (part['PT_COMMENT'].str.startswith('k')) & (part['BRAND'] != 'Brand#54') | (part['P_PARTKEY'] != 108) & (part['P_NAME'].str.startswith('t'))][['BRAND', 'MFGR', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 452.63433813811906) | (partsupp['AVAILQTY'] < 9692)].merge(supplier[(supplier['S_NATIONKEY'] == 4) | (supplier['S_NATIONKEY'] < 13) | (supplier['S_NATIONKEY'] <= 18) & (supplier['S_ADDRESS'] == '8') | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_ACCTBAL'] > 7782.467600446292) | (supplier['S_NATIONKEY'] < 0)][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['CONTAINER'].str.startswith('WRAP'))][['P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('s'))][['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_ADDRESS'].str.startswith('X')) | (supplier['S_PHONE'].str.startswith('2'))][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['BRAND', 'PT_COMMENT', 'TYPE', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] == 'b') | (part['P_PARTKEY'] < 5) & (part['TYPE'].str.startswith('S')) & (part['SIZE'] != 2)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] != 22)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] == 5) | (nation['N_NAME'] != 'U')].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('E'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] == 'C') & (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NATIONKEY'] > 12)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] == 7) | (nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] >= 6)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 0) | (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8046.07694123063) & (supplier['S_NATIONKEY'] >= 16) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 112) | (supplier['S_SUPPKEY'] <= 163)].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'T') | (supplier['S_NATIONKEY'] < 17) | (supplier['S_NATIONKEY'] >= 17) & (supplier['S_ACCTBAL'] <= 3127.612367271864)].merge(nation[(nation['N_NATIONKEY'] != 20) | (nation['N_NATIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 's') & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'] == 'G') & (supplier['S_ACCTBAL'] >= 1068.5125644273005) | (supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 3095.9377228236253)][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'G') | (supplier['S_NATIONKEY'] > 15)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'M')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('G')) & (supplier['S_SUPPKEY'] < 61) | (supplier['S_SUPPKEY'] != 119) | (supplier['S_ADDRESS'] != 'E') & (supplier['S_ADDRESS'] == 'U')].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] != 'p')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'the') | (supplier['S_NATIONKEY'] != 15) & (supplier['S_ACCTBAL'] <= 5909.958997307121)].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'] != 'A')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_NATIONKEY'] >= 0) | (supplier['S_COMMENT'] == 'f') & (supplier['S_ACCTBAL'] < 6651.365333480122) & (supplier['S_ADDRESS'] == 't') & (supplier['S_NATIONKEY'] >= 0)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('u')) & (supplier['S_NATIONKEY'] <= 21) & (supplier['S_SUPPKEY'] <= 163) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_NATIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'C') | (supplier['S_ACCTBAL'] > -844.0033699548411) | (supplier['S_ADDRESS'].str.startswith('U')) & (supplier['S_COMMENT'] != 'x') & (supplier['S_ACCTBAL'] < 5790.793192792598) & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 99) | (supplier['S_ADDRESS'] == 't') | (supplier['S_NATIONKEY'] <= 8)][['S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '3')].merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_NATIONKEY'] < 6)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '17-')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'n') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'] != 'S')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 16) & (supplier['S_SUPPKEY'] < 176)][['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] > 19)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 18) | (supplier['S_ACCTBAL'] > 8555.457299752092) | (supplier['S_SUPPKEY'] != 142) | (supplier['S_NATIONKEY'] == 13) | (supplier['S_COMMENT'].str.startswith('j'))].merge(nation[(nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 13)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 12) & (supplier['S_COMMENT'] != 'h')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 22)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 2) & (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_COMMENT'] == 'e')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] < 8799.889280923378) | (supplier['S_ADDRESS'] == '7') & (supplier['S_ACCTBAL'] > 729.5184116986086) | (supplier['S_NATIONKEY'] != 22) & (supplier['S_COMMENT'] != 'the') | (supplier['S_COMMENT'].str.startswith('r'))].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_NAME'] != 'B') | (nation['N_NATIONKEY'] > 11) | (nation['N_COMMENT'] == 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '2') | (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] == 13) & (nation['N_COMMENT'] != 'r')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_COMMENT'].str.startswith(' sl')) & (supplier['S_NATIONKEY'] != 20)].merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_NATIONKEY'] == 11) & (nation['N_NATIONKEY'] > 20)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NATIONKEY'] >= 11) | (supplier['S_NATIONKEY'] < 18) & (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_NATIONKEY'] < 3)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] == 1845.7454551299704) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] != 4416.780596973769) | (supplier['S_SUPPKEY'] < 20)].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 144) | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] <= 124) & (supplier['S_ACCTBAL'] != 1373.6623603097016)][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 146)][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] != 'K') & (nation['N_NAME'].str.startswith('G'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] < 23) | (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] >= 3)].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_NAME'] == 'R') & (nation['N_NAME'] == 'J') | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'o')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'] == 'l')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] <= 7)].merge(region[(region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'S') & (nation['N_NAME'] == 'P') | (nation['N_COMMENT'] == 'v') | (nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 0) | (nation['N_NATIONKEY'] == 13) & (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] == 11)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] == 5)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 2315.689853306909) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ACCTBAL'] != 112.05132220066207) | (customer['C_ACCTBAL'] > 6258.151407354991) | (customer['C_ACCTBAL'] > 6834.3854439786655) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] <= 2)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 8337.229135491893) | (customer['C_NATIONKEY'] < 6) & (customer['C_CUSTKEY'] == 80)][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 5796.686487462886) | (customer['C_NATIONKEY'] <= 16) & (customer['C_ACCTBAL'] == -206.664947724591) & (customer['C_COMMENT'] != 'c') & (customer['C_CUSTKEY'] <= 81) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('22-'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] >= 3309.361723052092) & (customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] >= 30) & (customer['C_COMMENT'] != 'w')].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] == 7) | (nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != 'R') | (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_ACCTBAL'] > 2021.7860656704015) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'l') | (customer['C_NATIONKEY'] > 0)].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'].str.startswith('C')) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'].str.startswith('p'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != ',') | (customer['C_ACCTBAL'] == -733.2730998794295) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'h') | (customer['C_ADDRESS'].str.startswith('c')) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 4) | (customer['C_ADDRESS'].str.startswith('4')) | (customer['C_COMMENT'] != 's') & (customer['C_NAME'].str.startswith('C'))][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_COMMENT', 'C_NAME', 'C_CUSTKEY']).agg('count')

customer[(customer['C_COMMENT'] != 'n') & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] > 5359.535750730055)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'o') & (customer['C_PHONE'] == '22-') & (customer['C_PHONE'] == '25-')].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'] != 't') & (customer['C_NATIONKEY'] < 18)][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'w') & (customer['C_ADDRESS'] == 'd') & (customer['C_ACCTBAL'] >= 8417.509164847424) | (customer['C_CUSTKEY'] >= 46)].merge(nation[(nation['N_NATIONKEY'] <= 20) & (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'e') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'l') & (customer['C_ACCTBAL'] != 8852.618680316673) & (customer['C_COMMENT'] != 's') & (customer['C_COMMENT'].str.startswith('p'))].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'l') & (customer['C_CUSTKEY'] >= 97) | (customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] >= 3) | (customer['C_COMMENT'] == 'k') | (customer['C_ACCTBAL'] < 8160.893722881299) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_NAME']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'f') & (customer['C_ADDRESS'] != 'X') | (customer['C_NATIONKEY'] != 4)].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 2) | (customer['C_COMMENT'] != 's')].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 1) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('22-')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] > 12) & (customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] >= 66)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_PHONE', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 9) | (customer['C_ACCTBAL'] < 429.23695315347004) & (customer['C_NATIONKEY'] >= 20) | (customer['C_ACCTBAL'] < 503.96412189805324) | (customer['C_CUSTKEY'] == 47) | (customer['C_ACCTBAL'] != 8331.43889376963) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'd')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 17) | (customer['C_ACCTBAL'] != 2268.2130723246646) & (customer['C_NATIONKEY'] >= 21)][['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('t'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 7) & (customer['C_ACCTBAL'] >= 3641.739894977969)].merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_NAME'] != 'F')].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 0) | (customer['C_CUSTKEY'] != 91) & (customer['C_ADDRESS'] == 'I')].merge(nation[(nation['N_NATIONKEY'] < 18) & (nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] > 17)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 19) | (customer['C_CUSTKEY'] <= 11)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 9) & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] < 2)].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '3') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'Y') | (customer['C_CUSTKEY'] >= 56) & (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_NATIONKEY'] != 5)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] < 7588.097689838036) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'M') | (customer['C_COMMENT'] == 'f')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') & (customer['C_NATIONKEY'] != 10) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE']))].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_PHONE'] != '27-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] >= 12) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] < 8106.123475072167) | (customer['C_CUSTKEY'] == 68) & (customer['C_ADDRESS'] == 'u') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('3'))].merge(nation[(nation['N_COMMENT'].str.startswith('y'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] < 4) & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_COMMENT'] == 'c') | (nation['N_NAME'] == 'P')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '2') & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'v') & (customer['C_ADDRESS'].str.startswith('M')) | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('sum', numeric_only=True)

lineitem.merge(orders[['CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 6867) & (partsupp['PS_SUPPKEY'] > 1489) & (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['P_COMMENT'] != 'r')][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 14) | (partsupp['AVAILQTY'] >= 5042) | (partsupp['SUPPLYCOST'] != 896.5599302631933) & (partsupp['AVAILQTY'] < 855) | (partsupp['P_COMMENT'] == 'y')][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'TYPE', 'P_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'l') | (partsupp['AVAILQTY'] <= 1895) & (partsupp['PS_SUPPKEY'] == 6760) | (partsupp['AVAILQTY'] != 8410)].merge(part[(part['BRAND'] == 'Brand#11') & (part['P_NAME'] == 'd') & (part['RETAILPRICE'] >= 1092.8472983888323) & (part['TYPE'] != 'E') & (part['P_NAME'].str.startswith('lem')) & (part['P_NAME'].str.startswith('b')) & (part['TYPE'].str.startswith('M')) | (part['CONTAINER'] != 'JUMBO') | (part['P_NAME'] == 'c')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'y')][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['P_NAME', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 158.9252371885772)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 20) & (nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] == 1)].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 155.27675000090142) | (partsupp['AVAILQTY'] <= 8803) & (partsupp['AVAILQTY'] > 2111) & (partsupp['PS_SUPPKEY'] != 4049)].merge(part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['TAX'] >= 0.040907886783954926) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE', 'COLLECT COD'])) | (lineitem['L_SUPPKEY'] >= 5949) | (lineitem['L_SUPPKEY'] < 5411) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['LINESTATUS'] == 'F') & (lineitem['DISCOUNT'] == 0.057593759919915756)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.00559819093119297) | (lineitem['L_PARTKEY'] > 152323) | (lineitem['L_ORDERKEY'] == 28) | (lineitem['LINESTATUS'] == 'O')][['L_SUPPKEY', 'SHIPDATE', 'L_COMMENT', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RECEIPTDATE']].groupby(by=['L_ORDERKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] != 5421.163004496023) | (lineitem['L_COMMENT'] != 'p') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['DISCOUNT'] <= 0.06491262585519696)].merge(partsupp[(partsupp['SUPPLYCOST'] != 468.8348758800348)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 82823.393537228) & (lineitem['L_SUPPKEY'] <= 8610) | (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'RAIL', 'SHIP'])) | (lineitem['L_COMMENT'].str.startswith(' ca')) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPDATE'] > '1992-04-27')][['QUANTITY', 'DISCOUNT', 'SHIPDATE', 'LINENUMBER']].groupby(by=['SHIPDATE', 'LINENUMBER', 'DISCOUNT', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] > 82790.50139762116) | (lineitem['L_SUPPKEY'] != 6180) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['QUANTITY'] != 43) | (lineitem['TAX'] < 0.04891373164565602) & (lineitem['LINENUMBER'] <= 5)][['RECEIPTDATE', 'SHIPDATE', 'L_PARTKEY', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE', 'TAX', 'DISCOUNT']].groupby(by=['SHIPMODE']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 5) & (lineitem['L_COMMENT'].str.startswith('e'))].merge(partsupp[(partsupp['SUPPLYCOST'] <= 989.6498759881185) | (partsupp['PS_SUPPKEY'] != 2606) | (partsupp['AVAILQTY'] == 5688) | (partsupp['P_COMMENT'] != 'l') & (partsupp['SUPPLYCOST'] != 563.4880365862751)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] <= 1) & (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] != 1) | (lineitem['L_SUPPKEY'] > 4244) | (lineitem['L_COMMENT'].str.startswith('s. '))][['L_COMMENT', 'L_SUPPKEY', 'SHIPDATE', 'QUANTITY', 'LINENUMBER', 'LINESTATUS']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] == 3) | (lineitem['LINENUMBER'] == 4) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['LINESTATUS'] == 'O') | (lineitem['LINENUMBER'] > 1) & (lineitem['L_COMMENT'] != ' ') | (lineitem['QUANTITY'] <= 15) | (lineitem['QUANTITY'] > 44)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1790) & (partsupp['PS_SUPPKEY'] != 6775) | (partsupp['PS_SUPPKEY'] != 1048)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['QUANTITY'] == 40) & (lineitem['EXTENDEDPRICE'] == 66805.95752858405) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINESTATUS'] != 'F') & (lineitem['EXTENDEDPRICE'] == 55719.52378544336)][['L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'ly ') & (lineitem['QUANTITY'] > 42) | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['L_PARTKEY'] < 9294) & (lineitem['EXTENDEDPRICE'] > 30781.05462969719)].merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] < 1723) & (lineitem['DISCOUNT'] < 0.005388348525255305) | (lineitem['L_PARTKEY'] == 187738) | (lineitem['L_ORDERKEY'] <= 41) & (lineitem['L_COMMENT'] == 's') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['EXTENDEDPRICE'] < 7861.40848596521)].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_COMMENT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] > 561) | (lineitem['TAX'] == 0.029997435851079387) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['L_PARTKEY'] == 102253) & (lineitem['LINESTATUS'] != 'O') & (lineitem['QUANTITY'] <= 1) & (lineitem['L_SUPPKEY'] >= 136)][['L_COMMENT', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE']].groupby(by=['RETURNFLAG', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 8) | (lineitem['TAX'] >= 0.05031798626330418) | (lineitem['LINENUMBER'] < 5) | (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['RECEIPTDATE'] == '1992-05-02')].merge(orders[(orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['L_ORDERKEY'] == 25)][['L_SUPPKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG', 'COMMITDATE', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2591) | (partsupp['SUPPLYCOST'] < 125.43964102408384) | (partsupp['AVAILQTY'] < 4484) & (partsupp['PS_PARTKEY'] <= 10) | (partsupp['PS_PARTKEY'] >= 19)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['LINENUMBER'] == 6)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 19) | (partsupp['PS_PARTKEY'] <= 45) & (partsupp['PS_PARTKEY'] > 17) | (partsupp['PS_PARTKEY'] <= 34) & (partsupp['PS_PARTKEY'] != 32)][['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['L_COMMENT'] != 's') | (lineitem['L_PARTKEY'] != 96754) | (lineitem['L_SUPPKEY'] == 757) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['LINENUMBER'] <= 6) | (lineitem['L_SUPPKEY'] <= 5280)].merge(partsupp[(partsupp['P_COMMENT'] != 'i') & (partsupp['SUPPLYCOST'] > 933.5077241476487) & (partsupp['AVAILQTY'] != 3681) & (partsupp['PS_PARTKEY'] < 12)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['EXTENDEDPRICE'] != 9544.080741212065) & (lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['L_SUPPKEY'] != 9783) & (lineitem['LINESTATUS'] != 'O')][['TAX', 'EXTENDEDPRICE', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 1410) | (partsupp['SUPPLYCOST'] >= 483.4503645833399) | (partsupp['P_COMMENT'] == 'b') & (partsupp['AVAILQTY'] != 7017) & (partsupp['SUPPLYCOST'] >= 119.9320366418291)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'N') & (lineitem['EXTENDEDPRICE'] >= 26365.026733093408) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_COMMENT'] == 'y') & (lineitem['DISCOUNT'] < 0.05424811053300769) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['RECEIPTDATE'] > '1998-11-06')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 1487)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['QUANTITY'] == 28) | (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'SHIP'])) | (lineitem['QUANTITY'] > 6) & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['L_SUPPKEY'] <= 4610) & (lineitem['LINENUMBER'] == 1) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'NONE'])) & (lineitem['COMMITDATE'] == '1998-10-16')][['COMMITDATE', 'TAX', 'DISCOUNT', 'QUANTITY']].groupby(by=['DISCOUNT', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE'])) | (lineitem['DISCOUNT'] < 0.09531128690334258) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['TAX'] > 0.028290244327769817)][['L_ORDERKEY', 'L_SUPPKEY']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_PHONE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'AIR') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['TAX'] > 0.0775885448117121) & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_COMMENT'] != 'e') | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPMODE'].isin(['MAIL', 'REG AIR', 'AIR', 'RAIL', 'TRUCK', 'FOB', 'SHIP']))].merge(partsupp[(partsupp['PS_PARTKEY'] > 28)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'FOB') & (lineitem['DISCOUNT'] > 0.06050555836774838)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'AIR') & (lineitem['L_COMMENT'].str.startswith('u')) & (lineitem['QUANTITY'] < 39) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE'])) | (lineitem['EXTENDEDPRICE'] < 27067.597286085667)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 854.5564827096139) | (partsupp['AVAILQTY'] == 7930) & (partsupp['SUPPLYCOST'] > 456.7999819204052) | (partsupp['PS_SUPPKEY'] == 2804) & (partsupp['PS_PARTKEY'] < 17)].merge(part[(part['BRAND'] != 'Brand#21')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] >= 0.02509018989365143) | (lineitem['L_ORDERKEY'] < 50)].merge(partsupp[(partsupp['AVAILQTY'] == 7372) | (partsupp['PS_SUPPKEY'] < 1128) & (partsupp['SUPPLYCOST'] == 28.662554736024916) & (partsupp['PS_PARTKEY'] != 38) & (partsupp['AVAILQTY'] <= 9208)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'SHIPDATE', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPMODE', 'DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] != 209.26401945937815)].merge(part[(part['CONTAINER'].str.startswith('JUMBO'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'SHIPDATE', 'L_PARTKEY', 'L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 267.04144859799777) | (partsupp['PS_SUPPKEY'] == 6310) | (partsupp['SUPPLYCOST'] < 607.4948195227739) & (partsupp['SUPPLYCOST'] >= 414.6890725574331) | (partsupp['SUPPLYCOST'] <= 544.4443277268166)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'SHIPMODE', 'DISCOUNT', 'COMMITDATE']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'DISCOUNT']].merge(orders[(orders['O_CUSTKEY'] < 22879) | (orders['O_ORDERKEY'] > 728) | (orders['ORDERDATE'] < '1992-01-13')][['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders.merge(customer[(customer['C_COMMENT'] != 'r') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 7722.733972676386) & (customer['C_COMMENT'] != '.') | (customer['C_CUSTKEY'] == 80) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'BUILDING'])) & (customer['C_NATIONKEY'] != 15)][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'RETURNFLAG', 'COMMITDATE', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER']].merge(orders[(orders['TOTALPRICE'] < 86170.45327049623) | (orders['TOTALPRICE'] != 335318.8824123415)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY']).agg('count')

lineitem[['QUANTITY', 'RETURNFLAG', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT']].merge(orders[(orders['O_ORDERKEY'] != 388) & (orders['ORDERSTATUS'] != 'P')].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['QUANTITY', 'SHIPDATE', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'TAX', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'RETURNFLAG', 'SHIPDATE', 'LINESTATUS', 'L_COMMENT']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'].str.startswith('i'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'] == 'c') & (nation['N_NAME'] != 'R')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] != 'C') | (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'P') & (nation['N_NAME'] != 'K') & (nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] == 5) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] < 16) & (nation['N_NAME'] == 'V')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] != 21) & (nation['N_NAME'] != 'U') & (nation['N_NAME'] != 'E')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 22) | (nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] != 18)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 6) & (nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'l')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 22)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] > 3) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'] == 'S')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('y'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'ASI') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] == 6) | (nation['N_NATIONKEY'] == 0)].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 1) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

orders.merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 19)].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'Q') & (customer['C_CUSTKEY'] == 1) & (customer['C_CUSTKEY'] > 67) & (customer['C_ADDRESS'] != 'r') | (customer['C_NATIONKEY'] > 18)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] > 41) | (customer['C_ACCTBAL'] > 8328.572637963454) & (customer['C_COMMENT'] != 'f')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'q') & (customer['C_NATIONKEY'] <= 11) | (customer['C_PHONE'] != '25-')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '27-') & (customer['C_NATIONKEY'] == 3) | (customer['C_ACCTBAL'] == 4997.7830045173705) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] == 29.55877056752604) | (customer['C_ACCTBAL'] >= 4403.91312237323) | (customer['C_PHONE'] == '27-')].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] >= 2) | (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'].str.startswith('b')) & (customer['C_CUSTKEY'] > 39) | (customer['C_ACCTBAL'] >= 507.21037611581346) & (customer['C_ADDRESS'] != 'c') & (customer['C_CUSTKEY'] <= 64) & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY']))].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] <= 6) | (customer['C_PHONE'] == '1')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_COMMENT'].str.startswith('y')) | (customer['C_NATIONKEY'] < 14) & (customer['C_COMMENT'] == 'f') & (customer['C_ADDRESS'].str.startswith('F')) & (customer['C_ACCTBAL'] >= 5735.379606643888) | (customer['C_ACCTBAL'] <= 3596.4355221242067) & (customer['C_COMMENT'].str.startswith('.'))][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 23) & (nation['N_COMMENT'] == 's')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] == 30291) | (orders['O_CUSTKEY'] < 9893) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] <= 334) & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 3656) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_NATIONKEY'] >= 10) | (customer['C_CUSTKEY'] > 49) & (customer['C_CUSTKEY'] >= 62) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'].str.startswith('y')) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '5-LOW'])) & (orders['O_COMMENT'].str.startswith('r')) | (orders['O_ORDERKEY'] < 662) & (orders['O_ORDERKEY'] >= 582) & (orders['O_CUSTKEY'] != 80610) & (orders['SHIPPRIORITY'] > 0)][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] != 73285) & (orders['TOTALPRICE'] != 203549.01215609547) & (orders['TOTALPRICE'] != 346913.35922633525) & (orders['O_COMMENT'] != '-') & (orders['O_COMMENT'] == 'x') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] < 475) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_PHONE']).agg('count')

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'] == 'w') | (orders['O_COMMENT'].str.startswith('r'))][['ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] >= 38) | (orders['O_CUSTKEY'] != 110498) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] == 't') & (orders['O_CUSTKEY'] == 41632)][['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'] == 'h')][['O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] < 345945.40383882285) & (orders['O_CUSTKEY'] == 58311) & (orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] > 134577.7250029229) | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] != 47972)][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O']))][['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 81237) & (orders['ORDERDATE'] == '1998-07-21')].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

orders[(orders['O_CUSTKEY'] < 35062) & (orders['O_COMMENT'].str.startswith('u')) | (orders['ORDERDATE'] != '1992-01-13')][['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] != 125.82467672518533)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['O_CUSTKEY'] <= 76346) | (orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'].str.startswith('e')) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] != 65964) & (orders['ORDERDATE'] == '1992-01-13')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 633) & (orders['O_COMMENT'] == 'y') | (orders['O_ORDERKEY'] != 678) | (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') & (orders['CLERK'].str.startswith('C'))][['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 185) & (orders['TOTALPRICE'] < 76665.67956019459) | (orders['TOTALPRICE'] != 307183.4064594068) | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '5-LOW', '4-NOT SPECIFIED'])) | (orders['O_ORDERKEY'] == 567)].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 356) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[(customer['C_ADDRESS'].str.startswith('a')) | (customer['C_ACCTBAL'] != 3064.823224220672) | (customer['C_NATIONKEY'] >= 19) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 6)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] < 27977) | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] > 242583.63275234718) & (orders['ORDERDATE'] == '1992-01-13')][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE']].groupby(by=['O_COMMENT', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] > 113) | (orders['O_COMMENT'].str.startswith('g')) & (orders['O_COMMENT'] != 'uri') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] > '1992-01-13')][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] == 198672.00249231074) & (orders['O_COMMENT'].str.startswith('r')) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] < 351079.0910944439) | (orders['O_COMMENT'] == 'k') | (orders['ORDERPRIORITY'] != '5-LOW')][['O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 135553.1762195146) | (orders['O_COMMENT'] != 'x') | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] < 41668.8312796176) & (orders['ORDERSTATUS'] == 'F')].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'].str.startswith('6')) | (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] >= 6)][['C_COMMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'O_ORDERKEY']].merge(customer[(customer['C_NATIONKEY'] != 21) | (customer['C_COMMENT'] == 'u')][['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] > 20)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

part[(part['BRAND'].isin(['Brand#42'])) & (part['SIZE'] <= 28) & (part['BRAND'] != 'Brand#45') | (part['P_NAME'].str.startswith('cor')) & (part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] <= 997.1576503248665) | (part['P_NAME'].str.startswith('o')) | (part['P_NAME'].str.startswith('c'))][['PT_COMMENT', 'TYPE', 'BRAND', 'P_NAME', 'CONTAINER']].groupby(by=['PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'SM') & (part['BRAND'] == 'Brand#15') & (part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'] == 'SM') | (part['CONTAINER'] != 'WRAP') & (part['P_NAME'] != 'lem') & (part['CONTAINER'] != 'SM')][['RETAILPRICE', 'SIZE', 'BRAND', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['CONTAINER', 'BRAND']).agg('max', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('p')) | (part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] == 'P')][['P_NAME', 'SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'TYPE']].groupby(by=['TYPE', 'RETAILPRICE', 'BRAND', 'SIZE']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('i')) & (part['P_PARTKEY'] != 73) | (part['PT_COMMENT'].str.startswith('k'))][['P_NAME', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'TYPE']].groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 't') & (part['MFGR'] == 'Manufacturer#2') & (part['TYPE'].str.startswith('L')) | (part['P_NAME'] != 'blu') | (part['BRAND'] == 'Brand#25') & (part['RETAILPRICE'] >= 968.0403322882553) & (part['P_PARTKEY'] <= 144)][['P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']].groupby(by=['TYPE', 'MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 105) & (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'] == 'Brand#22') | (part['SIZE'] != 15) | (part['MFGR'] == 'Manufacturer#4') | (part['BRAND'] == 'Brand#15') & (part['RETAILPRICE'] <= 949.5808000189356) | (part['RETAILPRICE'] < 1093.6416286970216)][['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 21) & (part['TYPE'] != 'S') & (part['MFGR'] == 'Manufacturer#5') & (part['BRAND'].isin(['Brand#23', 'Brand#51', 'Brand#11', 'Brand#21', 'Brand#45', 'Brand#13', 'Brand#52', 'Brand#32', 'Brand#54', 'Brand#43', 'Brand#41', 'Brand#14', 'Brand#42', 'Brand#22', 'Brand#34'])) | (part['BRAND'] == 'Brand#24') & (part['TYPE'].str.startswith('S'))][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE', 'MFGR', 'TYPE']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 29) | (part['RETAILPRICE'] != 931.346804263653) & (part['PT_COMMENT'] != 'kag') | (part['RETAILPRICE'] <= 1035.0442584696134) | (part['SIZE'] >= 1)][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'P_PARTKEY', 'MFGR', 'TYPE']].groupby(by=['RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 6) & (part['RETAILPRICE'] < 916.4144107059905) & (part['P_NAME'] != 'blu') | (part['P_NAME'] == 'w') & (part['RETAILPRICE'] == 945.3794138187833) | (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'].isin(['Brand#55', 'Brand#13', 'Brand#52', 'Brand#34', 'Brand#23', 'Brand#11', 'Brand#33', 'Brand#15', 'Brand#42', 'Brand#24', 'Brand#54', 'Brand#32', 'Brand#43', 'Brand#51', 'Brand#21', 'Brand#53', 'Brand#45', 'Brand#12', 'Brand#35'])) & (part['BRAND'] != 'Brand#35')][['P_PARTKEY', 'SIZE', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] <= 114) & (part['RETAILPRICE'] >= 977.7923721616323) | (part['SIZE'] < 29) & (part['TYPE'].str.startswith('S'))][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']].groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] <= 168) & (part['RETAILPRICE'] == 943.6364158076334)][['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE']].groupby(by=['MFGR', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] < 921.0284269928503) & (part['BRAND'].isin(['Brand#45', 'Brand#32', 'Brand#23', 'Brand#21', 'Brand#34', 'Brand#53', 'Brand#15', 'Brand#14', 'Brand#33', 'Brand#11', 'Brand#54', 'Brand#35', 'Brand#22'])) | (part['CONTAINER'] == 'LG') | (part['P_NAME'] != 't') & (part['P_PARTKEY'] != 156) & (part['RETAILPRICE'] != 972.9896338074211) | (part['MFGR'] != 'Manufacturer#1') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['SIZE'] < 48)][['P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['RETAILPRICE'] <= 984.5825565006146) & (part['PT_COMMENT'] != 'a') & (part['SIZE'] != 43) | (part['TYPE'].str.startswith('P')) & (part['SIZE'] <= 43)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE', 'BRAND', 'PT_COMMENT']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[(part['SIZE'] <= 44) | (part['CONTAINER'] != 'LG') | (part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'].str.startswith('m')) & (part['RETAILPRICE'] == 996.5171163132841) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3']))][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['TYPE'] == 'SMA') & (part['RETAILPRICE'] <= 1060.1161105140295) & (part['BRAND'].isin(['Brand#52', 'Brand#15', 'Brand#21', 'Brand#54', 'Brand#12', 'Brand#51', 'Brand#23', 'Brand#14', 'Brand#42', 'Brand#55', 'Brand#53', 'Brand#44', 'Brand#33', 'Brand#32', 'Brand#43', 'Brand#11', 'Brand#25'])) & (part['BRAND'] == 'Brand#25') | (part['TYPE'].str.startswith('SMA')) & (part['TYPE'] != 'S') & (part['P_PARTKEY'] >= 197) & (part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] < 945.0050641579129)][['PT_COMMENT', 'TYPE', 'SIZE', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] != 'f') | (part['PT_COMMENT'] == 'g') | (part['P_NAME'].str.startswith('d')) & (part['SIZE'] >= 35) | (part['P_NAME'].str.startswith('k')) & (part['P_PARTKEY'] > 182) & (part['SIZE'] == 17)][['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] == 66) | (part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] >= 949.6563626356761) & (part['BRAND'] != 'Brand#54') & (part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'].str.startswith('LG')) | (part['RETAILPRICE'] <= 1066.9482702143514) | (part['P_NAME'].str.startswith('y'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'TYPE', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 9) & (nation['N_NATIONKEY'] <= 9) & (nation['N_NAME'] == 'S')].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 365.40110835035944) & (supplier['S_ACCTBAL'] < 2723.5006765859753) & (supplier['S_SUPPKEY'] >= 154) & (supplier['S_SUPPKEY'] >= 55) | (supplier['S_ADDRESS'] != 'u') | (supplier['S_SUPPKEY'] != 158) & (supplier['S_PHONE'] != '17-')][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'w') | (supplier['S_NATIONKEY'] > 16) | (supplier['S_COMMENT'].str.startswith('t'))][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 3169) | (partsupp['AVAILQTY'] <= 462) & (partsupp['AVAILQTY'] != 1781)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 3329) & (partsupp['SUPPLYCOST'] < 938.8295782785743) | (partsupp['PS_SUPPKEY'] != 806) | (partsupp['PS_SUPPKEY'] == 598) | (partsupp['AVAILQTY'] >= 1323)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] >= 1012.2457637136918) & (part['PT_COMMENT'] == 'r') | (part['PT_COMMENT'].str.startswith(' fi'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 4978)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] < 1023.0282550362156)][['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 1625) & (partsupp['SUPPLYCOST'] <= 501.505646128285) & (partsupp['PS_SUPPKEY'] != 3422)].merge(supplier[(supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] > 138) & (supplier['S_NATIONKEY'] != 2) & (supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] == 146)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 5812) | (partsupp['PS_PARTKEY'] > 24)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] != 12) | (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] != 'Brand#12') & (part['CONTAINER'] == 'MED') & (part['TYPE'] == 'M') & (part['TYPE'] != 'E') & (part['P_PARTKEY'] < 153) & (part['CONTAINER'] != 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 9434) | (partsupp['PS_SUPPKEY'] == 5251)].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 26) | (partsupp['PS_PARTKEY'] < 8) | (partsupp['AVAILQTY'] >= 1800) | (partsupp['P_COMMENT'] != 'q') & (partsupp['PS_PARTKEY'] >= 41)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 13) | (partsupp['P_COMMENT'] == 'y') & (partsupp['SUPPLYCOST'] < 386.5472898741841) & (partsupp['SUPPLYCOST'] <= 110.2524079067814) & (partsupp['P_COMMENT'].str.startswith('d'))].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 20) & (partsupp['SUPPLYCOST'] >= 765.1316699315896)].merge(supplier[(supplier['S_ADDRESS'] == ' ')][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] > 14)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 41)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] > 35)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 12) | (partsupp['SUPPLYCOST'] != 982.2368950756575)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 26) & (partsupp['SUPPLYCOST'] > 431.77552968652657) & (partsupp['AVAILQTY'] >= 1488) & (partsupp['AVAILQTY'] >= 5385)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 1402) | (partsupp['PS_SUPPKEY'] > 4981) | (partsupp['P_COMMENT'] != ' th') & (partsupp['PS_PARTKEY'] < 13)].merge(part[(part['PT_COMMENT'] != 'h') | (part['P_PARTKEY'] != 126) & (part['P_PARTKEY'] >= 124)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'PT_COMMENT', 'RETAILPRICE', 'SIZE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 2123) | (partsupp['PS_PARTKEY'] >= 18) | (partsupp['AVAILQTY'] <= 6269) | (partsupp['PS_SUPPKEY'] == 6789)].merge(part[(part['P_PARTKEY'] <= 87) | (part['TYPE'] == 'SMA') & (part['SIZE'] > 45) | (part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6081) & (partsupp['PS_SUPPKEY'] > 3562)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['PT_COMMENT'].str.startswith('h')) | (part['TYPE'] != 'L') & (part['RETAILPRICE'] != 1058.7124905317212) | (part['P_PARTKEY'] == 179) | (part['RETAILPRICE'] == 1092.143604760615) | (part['P_PARTKEY'] >= 128)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6237) | (partsupp['PS_PARTKEY'] != 19) & (partsupp['AVAILQTY'] >= 6933) | (partsupp['PS_SUPPKEY'] == 787)].merge(part[['SIZE', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'SIZE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 5005) | (partsupp['AVAILQTY'] != 2318) | (partsupp['PS_PARTKEY'] != 3) | (partsupp['PS_SUPPKEY'] <= 6764) & (partsupp['SUPPLYCOST'] < 680.0802173839045)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 5608)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] != 106) | (supplier['S_ACCTBAL'] < 7004.241321307337) | (supplier['S_ACCTBAL'] != 6843.14095029082) & (supplier['S_SUPPKEY'] != 104)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'are') | (partsupp['AVAILQTY'] < 748) & (partsupp['AVAILQTY'] > 6663) | (partsupp['PS_SUPPKEY'] >= 4623)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q')].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NATIONKEY'] == 18) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] != 82) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'].str.startswith('2'))][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q')].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'r') | (partsupp['AVAILQTY'] < 7433) | (partsupp['AVAILQTY'] == 3131) & (partsupp['PS_SUPPKEY'] <= 4230)].merge(part[(part['PT_COMMENT'] != 'l') | (part['MFGR'] != 'Manufacturer#4') & (part['MFGR'] == 'Manufacturer#2') | (part['TYPE'] == 'STA') & (part['PT_COMMENT'] == 'a') | (part['SIZE'] == 35) & (part['P_NAME'].str.startswith('h'))][['P_PARTKEY', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['P_COMMENT'] != 'j')].merge(supplier[(supplier['S_ACCTBAL'] > 6488.065963817521) & (supplier['S_NATIONKEY'] != 19) & (supplier['S_SUPPKEY'] > 34) | (supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_PHONE'] == '32-') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['AVAILQTY'] == 6967)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) & (partsupp['PS_PARTKEY'] < 36) & (partsupp['SUPPLYCOST'] == 598.6461129863778)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['PS_PARTKEY'] != 14)].merge(part[(part['SIZE'] < 29) | (part['P_PARTKEY'] > 18) & (part['TYPE'].str.startswith('L')) & (part['SIZE'] > 34) & (part['PT_COMMENT'] == 's')][['CONTAINER', 'SIZE', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 466.23041996341783) & (partsupp['P_COMMENT'] == 'v') & (partsupp['AVAILQTY'] >= 1735) & (partsupp['PS_SUPPKEY'] > 6775)].merge(supplier.merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] == 'a')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 991.6057415811711) & (partsupp['P_COMMENT'] == 'c') | (partsupp['AVAILQTY'] == 7145) & (partsupp['AVAILQTY'] <= 673) & (partsupp['P_COMMENT'] == '.')].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 517.4054337630749) | (partsupp['PS_SUPPKEY'] != 2013) | (partsupp['PS_PARTKEY'] <= 49) & (partsupp['SUPPLYCOST'] >= 786.8594177212457) & (partsupp['PS_PARTKEY'] != 6)].merge(part[['P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 361.73990818523345)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 455.9552453167227) & (partsupp['SUPPLYCOST'] < 386.36333354242134)].merge(part[(part['TYPE'] != 'STA') | (part['CONTAINER'] == 'MED') & (part['P_PARTKEY'] < 199)][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 768.8018545344387)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 884.2616537323456) | (partsupp['P_COMMENT'] == ' ') | (partsupp['P_COMMENT'] == 'are') | (partsupp['SUPPLYCOST'] == 449.0349684616665)].merge(part[(part['PT_COMMENT'] != ' fi') & (part['RETAILPRICE'] > 957.2948641798623) & (part['SIZE'] < 25) | (part['SIZE'] != 20) | (part['P_PARTKEY'] >= 137) & (part['TYPE'] != 'STA')][['P_NAME', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 316.64308171692727) & (partsupp['SUPPLYCOST'] == 378.2359252135305) & (partsupp['SUPPLYCOST'] != 697.6900881694344) & (partsupp['PS_PARTKEY'] != 33) & (partsupp['P_COMMENT'] != 'c')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] > 26) | (part['PT_COMMENT'].str.startswith('kag')) | (part['PT_COMMENT'] != 's')][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('e')) | (supplier['S_ADDRESS'] != ',') & (supplier['S_NATIONKEY'] >= 2) & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 100) | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('a')) | (part['TYPE'].str.startswith('SMA')) & (part['P_PARTKEY'] >= 141) | (part['P_PARTKEY'] > 34) & (part['P_PARTKEY'] <= 76) & (part['P_NAME'] != 'f') | (part['P_NAME'].str.startswith('a')) & (part['SIZE'] == 11)][['P_PARTKEY', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] != 'kag') & (part['P_PARTKEY'] <= 84) & (part['P_PARTKEY'] >= 171) | (part['P_NAME'] != 's') | (part['P_NAME'] != 'c')][['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] == 8) & (supplier['S_ADDRESS'] == 'y') | (supplier['S_NATIONKEY'] >= 21) & (supplier['S_COMMENT'] != 'h') | (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'] == 'Brand#25') | (part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#53') & (part['SIZE'] == 31) | (part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] != 991.6781582332748) | (part['BRAND'] == 'Brand#21') & (part['TYPE'] == 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] >= 19) & (supplier['S_SUPPKEY'] >= 124) | (supplier['S_ACCTBAL'] <= 7741.24325873163) & (supplier['S_ADDRESS'] == 'c') & (supplier['S_ACCTBAL'] == 8359.083953649222) & (supplier['S_ACCTBAL'] >= 8211.317129660065) & (supplier['S_ADDRESS'].str.startswith('U'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] < 10) & (supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] >= 5888.582231375298) | (supplier['S_PHONE'] != '3')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'] != 'n') | (part['SIZE'] == 30)][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['CONTAINER', 'SIZE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NAME'].str.startswith('J'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] > 21) & (nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'].str.startswith('l'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'R') & (nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] >= 5) | (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 'r')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'M') | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 46.72769226731623) | (supplier['S_ACCTBAL'] <= 6472.885859013982) | (supplier['S_ADDRESS'] != '0') & (supplier['S_COMMENT'] == 'h')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 7566.395560063603) & (supplier['S_SUPPKEY'] != 5) & (supplier['S_NATIONKEY'] != 3)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 19) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 8015.053464341666) & (supplier['S_ADDRESS'] == 'M') | (supplier['S_NATIONKEY'] == 12)].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 9361.247605802599) & (supplier['S_SUPPKEY'] <= 66) | (supplier['S_SUPPKEY'] >= 70)].merge(nation[(nation['N_NATIONKEY'] > 16)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'U') & (supplier['S_PHONE'] != '3') & (supplier['S_ACCTBAL'] >= 6084.063756741908) | (supplier['S_SUPPKEY'] == 104) | (supplier['S_SUPPKEY'] <= 157) & (supplier['S_COMMENT'] != 'u')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == ' ') | (supplier['S_SUPPKEY'] >= 169) | (supplier['S_SUPPKEY'] > 27) | (supplier['S_SUPPKEY'] != 70)].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'R')].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('o')) | (supplier['S_SUPPKEY'] < 127) & (supplier['S_SUPPKEY'] >= 90) | (supplier['S_PHONE'] == '2') | (supplier['S_PHONE'] == '26-')].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('x')) | (supplier['S_SUPPKEY'] != 69) | (supplier['S_SUPPKEY'] <= 196)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != ',') & (supplier['S_ACCTBAL'] < 6783.007410163125) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_SUPPKEY'] < 94) & (supplier['S_ADDRESS'] != 'D') & (supplier['S_PHONE'] == '3')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'al ') | (supplier['S_SUPPKEY'] <= 35) & (supplier['S_COMMENT'] == 's') | (supplier['S_ADDRESS'] != '6') | (supplier['S_ADDRESS'] == 'Z') & (supplier['S_SUPPKEY'] != 92)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'g') | (supplier['S_ADDRESS'] != 'J') & (supplier['S_SUPPKEY'] <= 109) | (supplier['S_COMMENT'] == 'h') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('17-'))][['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_NAME', 'S_COMMENT', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_SUPPKEY'] < 66) & (supplier['S_ADDRESS'].str.startswith('o'))][['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'w') | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] > 174)].merge(nation[(nation['N_NATIONKEY'] < 6) & (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 3)].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'E') & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('es ')) & (supplier['S_ACCTBAL'] > 4320.247905163989) | (supplier['S_SUPPKEY'] == 106)][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('r')) | (supplier['S_ACCTBAL'] != 963.7613753978806) & (supplier['S_ADDRESS'] == 'z') | (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] < 17) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 1349.849232417181) & (supplier['S_NATIONKEY'] < 14)].merge(nation[(nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'g')].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_COMMENT'] != 'h')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > -948.0470998166808) & (supplier['S_COMMENT'] == 's') | (supplier['S_COMMENT'] != 'es ') & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] != 9542.797196923953)].merge(nation[(nation['N_NATIONKEY'] != 2) | (nation['N_REGIONKEY'] == 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == '0') & (supplier['S_ACCTBAL'] < 6785.74436727741) & (supplier['S_NATIONKEY'] < 16)][['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= -439.50464675142894) & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_SUPPKEY'] <= 153) | (supplier['S_PHONE'].str.startswith('1'))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'c') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '1') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('u'))].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 9) & (supplier['S_COMMENT'] != 'v') | (supplier['S_ADDRESS'] != 'W') & (supplier['S_ADDRESS'] != '2') | (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[(nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 14) & (supplier['S_ADDRESS'].str.startswith('c'))][['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 23) & (supplier['S_ACCTBAL'] < 1862.4432707811764)][['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] >= 3004.707551705491) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '2')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_SUPPKEY'] <= 89) | (supplier['S_SUPPKEY'] == 70) | (supplier['S_SUPPKEY'] >= 57)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 55) | (supplier['S_ADDRESS'] == 'W') & (supplier['S_ACCTBAL'] != 2075.2730253293403)][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 102) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] != 1592.091253936732) | (supplier['S_SUPPKEY'] > 88) & (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 171) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'] == 'W') | (supplier['S_ACCTBAL'] != 1129.596320537925) | (supplier['S_SUPPKEY'] >= 123) & (supplier['S_SUPPKEY'] == 182)].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] < 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 92) & (supplier['S_ADDRESS'] == '3') | (supplier['S_NATIONKEY'] > 17) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 18)].merge(nation[(nation['N_NATIONKEY'] <= 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 93) & (supplier['S_NATIONKEY'] > 6) | (supplier['S_NATIONKEY'] != 18) | (supplier['S_ACCTBAL'] == 3392.2484054118822) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('1'))][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] >= 21) & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] <= 18)].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] <= 1) & (nation['N_NATIONKEY'] < 16)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] <= 2) | (nation['N_NAME'] != 'B')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] < 16)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 0) | (nation['N_NAME'].str.startswith('G'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 2) | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] == 'S')].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 5039.031297191469) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'D') & (customer['C_COMMENT'] == 'w') & (customer['C_COMMENT'] == 'd') | (customer['C_ADDRESS'] == 'l') | (customer['C_NATIONKEY'] == 11)].merge(nation[(nation['N_COMMENT'].str.startswith('t'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 3294.760873293322) & (customer['C_ADDRESS'].str.startswith('j'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] < 59.48647610489195) & (customer['C_NATIONKEY'] >= 17) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] <= 8) | (nation['N_NATIONKEY'] > 0) | (nation['N_COMMENT'] == 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 5507.9917595001525) & (customer['C_COMMENT'] != 'g')].merge(nation[(nation['N_NATIONKEY'] >= 17)].merge(region[(region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 1270.3118767263377) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING']))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != '4') | (customer['C_ACCTBAL'] <= 8637.455020180412) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 8) | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != '9')][['C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'u') & (customer['C_ACCTBAL'] >= 2819.3381823915547)].merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('n')) & (customer['C_COMMENT'] == 'q') | (customer['C_NATIONKEY'] <= 5) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] >= 96) | (customer['C_COMMENT'] != 'e')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'n') & (customer['C_COMMENT'].str.startswith('a')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] <= 3)][['C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] == 4)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('.'))][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 58) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_ADDRESS'] != 'w') & (customer['C_COMMENT'] != 't')].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'V')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

customer[(customer['C_CUSTKEY'] >= 85) | (customer['C_COMMENT'] != 'f')][['C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] == 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'g') & (customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] < 21) & (customer['C_NATIONKEY'] > 1) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] <= 49)][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_NAME', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] == 3929.301025362961) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_ACCTBAL'] >= 1036.2877564210937)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 11) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] > 7) & (customer['C_ADDRESS'] != 'P') & (customer['C_NATIONKEY'] <= 15) & (customer['C_ADDRESS'] != 'R') & (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ADDRESS'] == 'Y')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].groupby(by=['C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 21) & (customer['C_CUSTKEY'] != 38)][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 21) | (customer['C_ACCTBAL'] <= 3668.082180291969) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] <= 5705.230499484521) | (customer['C_ACCTBAL'] <= 7265.592783910298) & (customer['C_NATIONKEY'] >= 20)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 7) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] > 37) | (customer['C_CUSTKEY'] >= 56) | (customer['C_ADDRESS'].str.startswith('d'))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '3') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] != 93) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '18-') & (customer['C_CUSTKEY'] <= 50) & (customer['C_COMMENT'] == 'q') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '18-') | (customer['C_COMMENT'].str.startswith('w')) | (customer['C_NATIONKEY'] < 2) | (customer['C_ACCTBAL'] != 7454.308544241103) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 3520.3186229450966) & (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] == 27) & (customer['C_COMMENT'] == 'p') | (customer['C_PHONE'] != '3')].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_ACCTBAL'] <= 1060.3225879469874) | (customer['C_NATIONKEY'] < 15)].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] == 'p') | (nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] >= 11)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'AME') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['O_COMMENT'] == ',') & (orders['TOTALPRICE'] != 54671.672885082786) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] == '.') & (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] == 0)][['O_ORDERKEY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] < 192188.58930547067) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) & (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_NATIONKEY'] == 0)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 9664) | (partsupp['SUPPLYCOST'] >= 361.75132291460454)].merge(supplier[(supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_PHONE'] != '32-')].merge(nation[(nation['N_NAME'] != 'U')].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 4597) & (partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['PS_SUPPKEY'] > 2597) & (partsupp['SUPPLYCOST'] != 908.2382424542759)].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 260.4164803721829) | (partsupp['SUPPLYCOST'] == 922.0429769178136) | (partsupp['SUPPLYCOST'] != 399.2961132959392)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15')][['L_COMMENT', 'L_PARTKEY', 'LINENUMBER', 'RETURNFLAG', 'SHIPDATE', 'QUANTITY', 'TAX', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 42768.60187004119) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['LINENUMBER'] != 4) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 610.1917944805787) & (partsupp['PS_SUPPKEY'] <= 3646)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] == 2) & (lineitem['L_COMMENT'].str.startswith('e')) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_COMMENT'] != 'd') & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['EXTENDEDPRICE'] <= 79628.89438918841) & (lineitem['TAX'] >= 0.06498514161660184)].merge(partsupp[(partsupp['P_COMMENT'] != 'g') | (partsupp['PS_SUPPKEY'] <= 4033) | (partsupp['PS_SUPPKEY'] < 1532)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['LINENUMBER'] > 1) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPMODE'] == 'SHIP')][['L_COMMENT', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'CLERK']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['LINENUMBER'] >= 3) & (lineitem['RECEIPTDATE'] != '1998-11-06')][['RECEIPTDATE', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'TAX', 'L_COMMENT', 'RETURNFLAG', 'SHIPINSTRUCT', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'COMMITDATE', 'RETURNFLAG']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 34780) | (lineitem['L_SUPPKEY'] == 1451) & (lineitem['DISCOUNT'] == 0.008833603964545146) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['TAX'] != 0.022734696185174725) | (lineitem['DISCOUNT'] >= 0.001195298127203104) | (lineitem['L_SUPPKEY'] == 9894)][['RETURNFLAG', 'RECEIPTDATE', 'DISCOUNT', 'TAX']].groupby(by=['RECEIPTDATE', 'RETURNFLAG', 'TAX', 'DISCOUNT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] <= 8857) & (lineitem['L_PARTKEY'] < 152443) | (lineitem['DISCOUNT'] != 0.05074414797232708) | (lineitem['LINENUMBER'] == 4) & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['EXTENDEDPRICE'] < 82052.70151042638) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['AVAILQTY'] <= 6782) | (partsupp['PS_SUPPKEY'] <= 1124)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['DISCOUNT'] != 0.026150364839371745) | (lineitem['TAX'] == 0.015121060396842908) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['LINENUMBER'] >= 3) | (lineitem['DISCOUNT'] != 0.0507790400428717) & (lineitem['L_PARTKEY'] >= 118149) & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['LINESTATUS'] != 'F')].merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] >= 153782.30181680497) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'].str.startswith('c')) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['TOTALPRICE'] <= 210249.78390339107)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['EXTENDEDPRICE'] >= 36516.860390813286)][['LINENUMBER', 'L_COMMENT', 'EXTENDEDPRICE', 'RECEIPTDATE', 'QUANTITY', 'LINESTATUS', 'DISCOUNT', 'L_ORDERKEY']].merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['LINESTATUS'].isin(['O', 'F']))].merge(orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] == 587) & (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] <= 306137.5461443772) & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] < 471)][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['SHIPMODE'].isin(['FOB', 'MAIL', 'REG AIR', 'RAIL', 'AIR'])) & (lineitem['L_SUPPKEY'] == 4615) | (lineitem['DISCOUNT'] <= 0.03337894408463549) | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['LINENUMBER'] <= 5) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['EXTENDEDPRICE'] == 44057.66094630189)].merge(partsupp[(partsupp['PS_PARTKEY'] == 7) | (partsupp['PS_SUPPKEY'] > 5623) | (partsupp['AVAILQTY'] == 2510) | (partsupp['SUPPLYCOST'] != 208.45807191316834)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['L_ORDERKEY'] <= 159) | (lineitem['L_COMMENT'] == 'f') | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['TAX'] >= 0.0022535155254657015)][['SHIPDATE', 'L_PARTKEY', 'L_ORDERKEY', 'QUANTITY', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 40)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['QUANTITY'] <= 30) | (lineitem['SHIPINSTRUCT'] != 'NONE')].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'FOB')][['L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'RECEIPTDATE', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE']].merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] != 'TRUCK')][['TAX', 'L_PARTKEY', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 5) & (supplier['S_ADDRESS'] != 'l') & (supplier['S_ADDRESS'] == 'k') | (supplier['S_NATIONKEY'] < 11) & (supplier['S_NATIONKEY'] != 17) | (supplier['S_ACCTBAL'] < 9575.423855295192) | (supplier['S_COMMENT'] != ' sl')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'AIR') | (lineitem['L_ORDERKEY'] > 156) | (lineitem['LINENUMBER'] != 4) & (lineitem['QUANTITY'] > 21) | (lineitem['DISCOUNT'] == 0.05470155717919537)][['SHIPINSTRUCT', 'L_ORDERKEY', 'LINESTATUS', 'SHIPDATE', 'EXTENDEDPRICE']].merge(orders[['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['LINENUMBER'] != 4) | (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['DISCOUNT'] == 0.02434034273973419)].merge(orders[(orders['O_COMMENT'] == ',') | (orders['O_ORDERKEY'] != 262) & (orders['O_ORDERKEY'] != 7) | (orders['TOTALPRICE'] <= 79571.53586587227)][['O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'AIR', 'FOB', 'SHIP', 'MAIL']))].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'] != 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

lineitem[['L_PARTKEY', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] >= 2670) | (partsupp['P_COMMENT'] != 'r') & (partsupp['P_COMMENT'] == 'h') & (partsupp['SUPPLYCOST'] < 363.45792447520466)].merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] != 91.42292100106273) | (partsupp['SUPPLYCOST'] > 930.9703801948642) & (partsupp['SUPPLYCOST'] == 526.797042481564) | (partsupp['PS_PARTKEY'] < 26) & (partsupp['PS_SUPPKEY'] > 2314)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('count')

lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 6557) | (partsupp['PS_SUPPKEY'] > 3632) & (partsupp['SUPPLYCOST'] <= 719.7616458081708) | (partsupp['AVAILQTY'] != 9161)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'LINESTATUS', 'SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'DISCOUNT', 'L_COMMENT', 'RETURNFLAG']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'LINESTATUS', 'TAX', 'L_ORDERKEY', 'RETURNFLAG', 'DISCOUNT', 'EXTENDEDPRICE', 'L_COMMENT', 'RECEIPTDATE']].merge(orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'L_ORDERKEY', 'DISCOUNT', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'LINESTATUS', 'SHIPMODE']].merge(orders[(orders['TOTALPRICE'] >= 106699.62741112676) | (orders['O_CUSTKEY'] > 54149) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['TOTALPRICE'] >= 286819.5665183781) & (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] != 207524.2243745682)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'L_PARTKEY', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPMODE', 'L_SUPPKEY', 'SHIPDATE', 'QUANTITY', 'RECEIPTDATE', 'COMMITDATE', 'LINENUMBER']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'] == 't') | (nation['N_NAME'] == 'S') & (nation['N_NAME'] == 'I') | (nation['N_COMMENT'] == 'h')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'AFR') & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r'))][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'F') & (nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] == 7)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 9) & (nation['N_NAME'].str.startswith('A')) & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 11) | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != 'l')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'R') | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 14)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'A')].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] >= 7360.815820966365)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 7311.645390782132) & (customer['C_ACCTBAL'] >= -625.2807797547032) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_COMMENT'] != 'a') & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_NATIONKEY'] >= 6) & (customer['C_COMMENT'] == 'u')][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] == 173016.35759154108) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW']))].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] <= 2) & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_CUSTKEY'] != 141316) & (orders['TOTALPRICE'] != 351432.8932895552) | (orders['O_CUSTKEY'] >= 36018) | (orders['O_ORDERKEY'] <= 275) | (orders['ORDERPRIORITY'].isin(['2-HIGH']))][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].groupby(by=['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'] == 'C')][['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'z') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['CLERK'] != 'C')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'z') & (orders['O_COMMENT'] == ',') & (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] >= 46837.0653126246) | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] == 0)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 149108) | (orders['TOTALPRICE'] >= 263403.14205728314)].merge(customer[(customer['C_CUSTKEY'] == 53) | (customer['C_ACCTBAL'] >= 9898.512191773523)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 83362)].merge(customer.merge(nation[(nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 16)].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['O_CUSTKEY'] == 121554) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'].str.startswith('the')) | (orders['O_CUSTKEY'] > 114809) & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] != 'l')][['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] <= 4841) | (orders['O_ORDERKEY'] == 237) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('i')) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] > 0)].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 270231.61049886415) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_ORDERKEY'] >= 399) & (orders['O_CUSTKEY'] > 69175)][['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] > 304239.42824469926)].merge(customer[(customer['C_ADDRESS'] == 'c')].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 0) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_COMMENT'] != 'f') & (customer['C_ADDRESS'] != 'f')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] <= 8) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] != '.')][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'CLERK']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer[(customer['C_CUSTKEY'] == 20)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'] != 'L')][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

orders[['TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#41', 'Brand#42', 'Brand#52', 'Brand#22', 'Brand#14', 'Brand#35', 'Brand#43', 'Brand#11', 'Brand#33', 'Brand#34', 'Brand#54', 'Brand#12', 'Brand#44', 'Brand#45', 'Brand#21', 'Brand#32', 'Brand#53'])) | (part['PT_COMMENT'].str.startswith('!')) & (part['TYPE'] != 'M') | (part['SIZE'] == 40) & (part['PT_COMMENT'] != 'ss ') & (part['SIZE'] > 48) & (part['P_PARTKEY'] < 199) & (part['PT_COMMENT'] == 'r')][['SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR']].groupby(by=['SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR']).agg('count')

part[(part['BRAND'].isin(['Brand#43', 'Brand#13', 'Brand#53', 'Brand#21', 'Brand#25', 'Brand#23', 'Brand#45', 'Brand#34', 'Brand#55', 'Brand#12', 'Brand#24', 'Brand#31', 'Brand#11', 'Brand#35', 'Brand#44', 'Brand#54', 'Brand#15', 'Brand#42', 'Brand#41', 'Brand#51'])) & (part['BRAND'] != 'Brand#34') & (part['P_NAME'] == 'r') | (part['P_NAME'].str.startswith('i')) | (part['PT_COMMENT'] == 'u') & (part['P_PARTKEY'] == 64)][['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']].groupby(by=['SIZE', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#1') | (part['TYPE'] == 'SMA') | (part['MFGR'] != 'Manufacturer#1') & (part['P_NAME'].str.startswith('bis')) & (part['RETAILPRICE'] != 1083.020369129374)][['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

part[(part['CONTAINER'] != 'JUMBO') & (part['TYPE'] == 'M') & (part['TYPE'] == 'STA') | (part['TYPE'].str.startswith('S')) & (part['TYPE'].str.startswith('STA'))][['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'm') & (part['PT_COMMENT'] != 'x') & (part['P_PARTKEY'] > 99) | (part['P_NAME'] == 'bis') | (part['BRAND'] == 'Brand#23') | (part['BRAND'].isin(['Brand#55', 'Brand#14', 'Brand#15', 'Brand#22', 'Brand#35', 'Brand#34', 'Brand#44', 'Brand#31', 'Brand#24', 'Brand#52', 'Brand#11', 'Brand#12', 'Brand#41']))][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE', 'MFGR', 'SIZE', 'BRAND', 'PT_COMMENT']].groupby(by=['TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('t')) & (part['BRAND'].isin(['Brand#13', 'Brand#31', 'Brand#34', 'Brand#41', 'Brand#45', 'Brand#12', 'Brand#32', 'Brand#52', 'Brand#33', 'Brand#23', 'Brand#14', 'Brand#55', 'Brand#42', 'Brand#44', 'Brand#25', 'Brand#21', 'Brand#22', 'Brand#43', 'Brand#15', 'Brand#11', 'Brand#51'])) & (part['BRAND'].isin(['Brand#21', 'Brand#53'])) & (part['PT_COMMENT'] != 'g') | (part['RETAILPRICE'] != 1040.9304313479038) & (part['BRAND'] == 'Brand#52') | (part['PT_COMMENT'] != ' ')][['SIZE', 'P_NAME', 'CONTAINER', 'MFGR', 'PT_COMMENT']].groupby(by=['P_NAME', 'SIZE', 'MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'h') & (part['PT_COMMENT'] == ' ') & (part['BRAND'].isin(['Brand#25', 'Brand#23', 'Brand#14', 'Brand#45', 'Brand#22', 'Brand#54', 'Brand#44', 'Brand#43', 'Brand#52', 'Brand#33', 'Brand#35', 'Brand#11', 'Brand#32', 'Brand#55', 'Brand#42', 'Brand#12', 'Brand#21', 'Brand#13', 'Brand#34', 'Brand#24'])) & (part['PT_COMMENT'] != 'h') | (part['RETAILPRICE'] > 960.5658645272237)][['TYPE', 'SIZE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] <= 82) | (part['RETAILPRICE'] >= 922.7290746541378) | (part['RETAILPRICE'] >= 1004.8588978914927) & (part['BRAND'] != 'Brand#45') | (part['PT_COMMENT'] != 's') | (part['P_NAME'] != 'cor') | (part['TYPE'].str.startswith('STA')) & (part['TYPE'] != 'SMA')][['SIZE', 'RETAILPRICE', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 136) & (part['BRAND'].isin(['Brand#53', 'Brand#21', 'Brand#43', 'Brand#44', 'Brand#23', 'Brand#55', 'Brand#41', 'Brand#51', 'Brand#45', 'Brand#31', 'Brand#14', 'Brand#34', 'Brand#35', 'Brand#13', 'Brand#33', 'Brand#25', 'Brand#52', 'Brand#11'])) | (part['PT_COMMENT'] != 'y') | (part['P_PARTKEY'] == 80) & (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] > 132) & (part['P_NAME'].str.startswith('l'))][['P_NAME', 'SIZE', 'P_PARTKEY', 'TYPE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('q')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5']))][['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] != 921.5800813336512) & (part['TYPE'] != 'S') & (part['SIZE'] >= 9) | (part['RETAILPRICE'] == 1039.7711457032065) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) & (part['P_PARTKEY'] < 195) | (part['PT_COMMENT'] == 'l') & (part['P_PARTKEY'] <= 81) & (part['SIZE'] <= 9)][['P_NAME', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('count')

partsupp.merge(part[(part['TYPE'] != 'P') | (part['P_NAME'].str.startswith('b')) & (part['TYPE'].str.startswith('L')) | (part['TYPE'] != 'S') | (part['TYPE'].str.startswith('P')) & (part['P_PARTKEY'] < 44)][['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 119) | (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'].str.startswith('c'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 9237) & (partsupp['AVAILQTY'] <= 9029)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 1909) | (partsupp['PS_PARTKEY'] > 23) & (partsupp['PS_SUPPKEY'] <= 3034) & (partsupp['AVAILQTY'] < 7138) | (partsupp['SUPPLYCOST'] == 590.0930286309484)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'WRAP') | (part['P_NAME'] != 't') | (part['BRAND'] == 'Brand#25') & (part['BRAND'] != 'Brand#54') | (part['RETAILPRICE'] > 914.9541972791733) & (part['SIZE'] == 29)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 5750)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 4515.015806188531) | (supplier['S_NATIONKEY'] > 21) & (supplier['S_PHONE'] == '28-')][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 9592) | (partsupp['P_COMMENT'] != 'f') | (partsupp['PS_SUPPKEY'] < 3116)].merge(part[(part['CONTAINER'] != 'MED') | (part['P_NAME'] == 'r') & (part['RETAILPRICE'] < 1070.5561761930908) & (part['CONTAINER'].str.startswith('LG')) & (part['TYPE'].str.startswith('P')) | (part['P_NAME'].str.startswith('o')) | (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 33) & (partsupp['AVAILQTY'] == 6228)].merge(supplier[(supplier['S_PHONE'] != '2') | (supplier['S_COMMENT'] == 'e') & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 33) & (partsupp['PS_PARTKEY'] != 42) | (partsupp['P_COMMENT'] == 't')].merge(part[(part['P_PARTKEY'] != 107) & (part['TYPE'] != 'STA') | (part['CONTAINER'] != 'MED') | (part['P_NAME'] == 'cor') | (part['BRAND'] == 'Brand#44') | (part['BRAND'] == 'Brand#42') & (part['PT_COMMENT'] != 'w') | (part['P_NAME'] == 'a') & (part['RETAILPRICE'] == 1039.4232057696743)][['CONTAINER', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 39) | (partsupp['P_COMMENT'] == 'x') & (partsupp['SUPPLYCOST'] > 378.3254287176706)].merge(supplier.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NAME'] == 'E')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 45) | (partsupp['SUPPLYCOST'] >= 943.4231706525962) & (partsupp['SUPPLYCOST'] != 859.7542770252134) & (partsupp['PS_SUPPKEY'] <= 172)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 22)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1006.795233758303) & (part['P_PARTKEY'] <= 118) | (part['SIZE'] < 9) | (part['CONTAINER'] == 'SM')][['SIZE', 'P_NAME', 'CONTAINER', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 26) & (partsupp['P_COMMENT'].str.startswith('v')) | (partsupp['PS_SUPPKEY'] >= 4013) | (partsupp['PS_PARTKEY'] != 19)].merge(part[(part['PT_COMMENT'].str.startswith('x')) & (part['P_NAME'] != 'f') | (part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4491) & (partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['P_COMMENT'] != 'are')].merge(part[['SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 5914)].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE', 'MFGR', 'BRAND', 'TYPE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 5429) & (partsupp['SUPPLYCOST'] != 327.15407195236446)][['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'v') & (part['P_PARTKEY'] > 175) & (part['P_PARTKEY'] != 59)][['MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6220) & (partsupp['PS_PARTKEY'] > 30)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 1712) | (partsupp['PS_PARTKEY'] >= 26) & (partsupp['PS_SUPPKEY'] == 1280) | (partsupp['PS_PARTKEY'] >= 41) | (partsupp['PS_SUPPKEY'] == 3192)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 7142) | (partsupp['P_COMMENT'] == 'd') | (partsupp['SUPPLYCOST'] >= 312.97755930733774) & (partsupp['AVAILQTY'] <= 9470)].merge(part[(part['SIZE'] > 36) & (part['RETAILPRICE'] == 906.3338409935959)][['SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 4918)].merge(part[(part['P_NAME'] != 'g') & (part['TYPE'].str.startswith('SMA')) & (part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] < 46) & (part['P_NAME'] == 'n') | (part['RETAILPRICE'] != 1016.3020231013041)][['BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'c') & (partsupp['P_COMMENT'].str.startswith(','))].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 14)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'h') & (partsupp['PS_SUPPKEY'] > 5495)].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] == 'n')].merge(region[(region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'i') | (partsupp['PS_SUPPKEY'] == 1796) | (partsupp['P_COMMENT'] == ';') & (partsupp['SUPPLYCOST'] < 337.20081047542766) & (partsupp['PS_SUPPKEY'] > 3766)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 985.4965382265323) & (part['RETAILPRICE'] >= 1074.2750953320626) | (part['P_PARTKEY'] >= 35) & (part['BRAND'].isin(['Brand#32', 'Brand#41', 'Brand#44', 'Brand#43', 'Brand#33', 'Brand#14', 'Brand#23', 'Brand#15', 'Brand#11', 'Brand#42', 'Brand#22', 'Brand#12', 'Brand#34', 'Brand#54', 'Brand#24', 'Brand#31'])) & (part['SIZE'] != 48)][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'j')].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' ') | (partsupp['PS_PARTKEY'] == 48)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'd') & (partsupp['PS_SUPPKEY'] == 554) | (partsupp['SUPPLYCOST'] <= 532.4090212919857)].merge(part[['P_NAME', 'BRAND', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['AVAILQTY'] > 3775)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['SIZE', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['PS_SUPPKEY'] >= 2375) | (partsupp['SUPPLYCOST'] < 530.03462616125) | (partsupp['SUPPLYCOST'] > 666.8695124362516)].merge(supplier[(supplier['S_NATIONKEY'] <= 22) | (supplier['S_SUPPKEY'] < 190) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_PHONE'] == '14-')][['S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('e'))].merge(part[['P_NAME', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'P_NAME', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('k')) & (partsupp['SUPPLYCOST'] == 798.8109662407729) & (partsupp['AVAILQTY'] <= 9617) & (partsupp['PS_PARTKEY'] == 2) & (partsupp['SUPPLYCOST'] <= 436.8486883973449)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('MED')) & (part['BRAND'] != 'Brand#24') | (part['BRAND'].isin(['Brand#45', 'Brand#31', 'Brand#14', 'Brand#11', 'Brand#22', 'Brand#34', 'Brand#55', 'Brand#52', 'Brand#41', 'Brand#43'])) | (part['PT_COMMENT'] != 'm') | (part['SIZE'] != 19) | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 487.99033175911495) | (partsupp['P_COMMENT'].str.startswith('p'))].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] < 3) & (supplier['S_ACCTBAL'] >= 3279.589840716055) | (supplier['S_SUPPKEY'] < 52) & (supplier['S_ADDRESS'].str.startswith('e')) | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 715.3637200774916) | (partsupp['PS_PARTKEY'] == 46) | (partsupp['PS_SUPPKEY'] >= 1205)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_NATIONKEY'] == 15)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] < 19) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] >= 16) & (supplier['S_SUPPKEY'] != 9) & (supplier['S_PHONE'] == '28-')][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] >= 11) & (supplier['S_PHONE'] != '3') & (supplier['S_ACCTBAL'] > -947.907000913578) & (supplier['S_PHONE'] == '32-') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('n')) | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] == 'b') | (part['PT_COMMENT'] == 'g') & (part['PT_COMMENT'] != 'w') & (part['RETAILPRICE'] <= 982.0371629082523) | (part['P_NAME'].str.startswith('t'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] > 940.7329924674916) | (part['P_PARTKEY'] < 136) | (part['P_PARTKEY'] < 131) | (part['CONTAINER'] != 'LG')][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] <= 23)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'D') & (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] <= 21) & (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 3586.0567080567253)][['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'K') & (nation['N_NAME'] != 'A') | (nation['N_COMMENT'] == 'p')].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] != 'P')].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 8377.839471581025) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_ACCTBAL'] != 4814.4424232799665) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 414.4236269587027) | (supplier['S_ACCTBAL'] >= 1102.9731993645948) | (supplier['S_NATIONKEY'] <= 0) & (supplier['S_ADDRESS'].str.startswith('C')) & (supplier['S_ACCTBAL'] >= 1343.939792697535)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] <= 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 5497.391467351706) | (supplier['S_PHONE'] == '3') & (supplier['S_ACCTBAL'] < 1327.9728237106212) | (supplier['S_SUPPKEY'] >= 192) & (supplier['S_NATIONKEY'] > 2) & (supplier['S_ACCTBAL'] < 6353.191501727599) & (supplier['S_COMMENT'] != 's')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'i') & (supplier['S_COMMENT'] == 'l') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'a')].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'] == 'I')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'l')][['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_ACCTBAL'] >= 1733.5413276356323)].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] >= 19) & (nation['N_REGIONKEY'] < 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('f'))][['S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'v') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'i') | (supplier['S_SUPPKEY'] == 108) & (supplier['S_SUPPKEY'] <= 150)].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] != 19)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_SUPPKEY'] < 101) & (supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_ADDRESS'] == 'N') & (supplier['S_PHONE'] != '28-')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 's')][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] != 'J') | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'].str.startswith('V'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_SUPPKEY'] >= 131) & (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 22) | (supplier['S_COMMENT'] != 'h') & (supplier['S_ADDRESS'] != ',') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 3) & (supplier['S_NATIONKEY'] >= 0)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_NATIONKEY'] != 23) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 16) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'].str.startswith('28-'))][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 13) | (supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] <= 358.31659613824854) | (supplier['S_PHONE'] == '14-') & (supplier['S_NATIONKEY'] > 7) | (supplier['S_COMMENT'] == '.') | (supplier['S_ACCTBAL'] > 8062.647217862815)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 21) & (supplier['S_ADDRESS'] != 'n') | (supplier['S_COMMENT'] != '.')].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 12) & (supplier['S_NATIONKEY'] == 15) & (supplier['S_ADDRESS'].str.startswith('6'))].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] != 18) & (nation['N_COMMENT'].str.startswith('e'))].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 16) | (supplier['S_NATIONKEY'] >= 8) | (supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_SUPPKEY'] != 46) & (supplier['S_ADDRESS'] == '9') | (supplier['S_COMMENT'] != 'c')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_NATIONKEY'] < 17) | (supplier['S_ADDRESS'].str.startswith('O')) & (supplier['S_ACCTBAL'] > 766.9228822104376) | (supplier['S_SUPPKEY'] >= 110) | (supplier['S_SUPPKEY'] < 81)].merge(nation[(nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] <= 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 9896.965404856906) & (supplier['S_ADDRESS'].str.startswith('b')) & (supplier['S_ACCTBAL'] != -698.9270636437948) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] > 2986.1268490606208) & (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] >= 184) | (supplier['S_SUPPKEY'] == 131)][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] <= 1) | (supplier['S_SUPPKEY'] >= 126) & (supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_COMMENT'] != 'r') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 6114.878608984385)].merge(nation.merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_PHONE'] != '26-')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 97) | (supplier['S_ADDRESS'] != '1') | (supplier['S_SUPPKEY'] < 86) & (supplier['S_ADDRESS'] != 'j') | (supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'].str.startswith('e'))].merge(nation.merge(region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 134) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 174) & (supplier['S_NATIONKEY'] >= 22) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '14-') | (supplier['S_SUPPKEY'] > 159)].merge(nation[(nation['N_NATIONKEY'] == 14) | (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 36) & (supplier['S_COMMENT'] == 'w') & (supplier['S_ACCTBAL'] == -797.9194269857514) & (supplier['S_NATIONKEY'] == 22) & (supplier['S_PHONE'] != '26-') | (supplier['S_SUPPKEY'] == 92)].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_NATIONKEY'] < 0) | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 18)].merge(region[(region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 8) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 6946.351578955115) & (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] > 13)][['C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != '3') & (customer['C_COMMENT'] == 'a') | (customer['C_ADDRESS'] != 'M') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 20) | (customer['C_ACCTBAL'] < 5723.96938611976) & (customer['C_NATIONKEY'] >= 14)].merge(nation[(nation['N_NATIONKEY'] < 19) & (nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] <= 4)].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'O') & (customer['C_ACCTBAL'] > 2163.5363033639705) & (customer['C_ACCTBAL'] <= 2305.2963991329866) & (customer['C_COMMENT'] != ' ') & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] >= 23)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('I')) | (customer['C_CUSTKEY'] > 44) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_ADDRESS'] == 'd') | (customer['C_ACCTBAL'] > 5420.855774122986) & (customer['C_PHONE'] != '25-') | (customer['C_ADDRESS'].str.startswith('T'))][['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('O')) | (customer['C_NATIONKEY'] <= 10) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 4048.3625074525307) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('Q')) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'l') & (customer['C_CUSTKEY'] >= 86) & (customer['C_CUSTKEY'] >= 71) | (customer['C_CUSTKEY'] < 1) | (customer['C_ACCTBAL'] == 5305.8519489510045)].merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'p') & (customer['C_ACCTBAL'] > 9316.35034065201) | (customer['C_PHONE'] != '25-')].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] >= 14)].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('f')) | (customer['C_NATIONKEY'] >= 19)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'c')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 3) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_NATIONKEY'] == 7) | (customer['C_COMMENT'] != 'r') | (customer['C_NATIONKEY'] == 10) & (customer['C_ACCTBAL'] != 3419.0999386200874)][['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 37) & (customer['C_CUSTKEY'] > 64) | (customer['C_NATIONKEY'] == 11) | (customer['C_ADDRESS'] != 'j') & (customer['C_NATIONKEY'] != 20) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 1456.0719000320382)].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] < 9) & (customer['C_NATIONKEY'] != 9) | (customer['C_CUSTKEY'] < 28) & (customer['C_NATIONKEY'] > 10)].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'].str.startswith('E'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 1) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] < 18)][['C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 10) | (customer['C_CUSTKEY'] != 54) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 11) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_COMMENT'].str.startswith('p')) & (customer['C_COMMENT'].str.startswith(' '))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] == 0)][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 8) | (customer['C_ADDRESS'].str.startswith('J')) & (customer['C_ACCTBAL'] >= 4878.664693120653) & (customer['C_NATIONKEY'] != 18) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'FURNITURE']))][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '2') | (customer['C_ACCTBAL'] >= 7378.273974932856) | (customer['C_NATIONKEY'] >= 22)].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '27-') & (customer['C_COMMENT'] == 'f') & (customer['C_ADDRESS'].str.startswith('7')) & (customer['C_NATIONKEY'] >= 20) & (customer['C_CUSTKEY'] > 31) | (customer['C_COMMENT'] != 'l') | (customer['C_COMMENT'] != 'o')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] == 0) | (nation['N_NATIONKEY'] != 16)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY'])) & (customer['C_CUSTKEY'] <= 44) & (customer['C_ACCTBAL'] < 5209.617202313361)].merge(nation[(nation['N_NATIONKEY'] > 3) | (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] >= 20) & (nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('count')

customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] == 17)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] <= 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] != 'AME') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] == 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'r')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_CUSTKEY'] < 60) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] >= 82) & (customer['C_ADDRESS'] == 'O') & (customer['C_COMMENT'] != 's') & (customer['C_ACCTBAL'] != 762.3048967441734) | (customer['C_NATIONKEY'] >= 4) | (customer['C_PHONE'].str.startswith('3'))].merge(nation[(nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] >= 133621) & (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] != 78756)].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 15) | (customer['C_ACCTBAL'] >= 3187.4904080802216) | (customer['C_ACCTBAL'] <= 8711.506345193833)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] < 23276.525244726363) | (orders['TOTALPRICE'] != 334429.019399784) & (orders['O_COMMENT'] == 'e') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] == 29285)].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL']).agg('count')

lineitem.merge(partsupp.merge(part[(part['P_NAME'].str.startswith('o')) & (part['TYPE'] == 'SMA') | (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'] != 'f') & (part['RETAILPRICE'] >= 1058.6310559058286) & (part['BRAND'].isin(['Brand#34', 'Brand#13', 'Brand#12', 'Brand#11', 'Brand#45', 'Brand#44', 'Brand#14', 'Brand#51', 'Brand#31', 'Brand#42', 'Brand#35', 'Brand#22', 'Brand#23', 'Brand#54'])) | (part['TYPE'] != 'P') | (part['BRAND'] != 'Brand#11') | (part['P_NAME'].str.startswith('n'))][['MFGR', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] == 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 8110) & (partsupp['P_COMMENT'] == 's') | (partsupp['SUPPLYCOST'] >= 38.83239804367564) & (partsupp['SUPPLYCOST'] == 117.74264150275586)].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] >= 15) & (nation['N_NATIONKEY'] == 1) & (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['P_COMMENT'].str.startswith('h')) | (partsupp['SUPPLYCOST'] == 613.7250877410305) | (partsupp['AVAILQTY'] != 235)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] >= 9861.548953159247)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 368.62903254427516) & (partsupp['PS_SUPPKEY'] >= 3065) | (partsupp['P_COMMENT'] != 'h') | (partsupp['PS_PARTKEY'] < 17) & (partsupp['P_COMMENT'] == 'o')].merge(part[(part['P_NAME'] != 'g') | (part['P_PARTKEY'] < 62) & (part['TYPE'] == 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 63424.63623585321) | (lineitem['DISCOUNT'] > 0.09467385301471726) & (lineitem['RECEIPTDATE'] == '1998-11-06')].merge(orders.merge(customer[['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 6) | (lineitem['QUANTITY'] >= 5)].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != ' ') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['L_PARTKEY'] == 103196) | (lineitem['L_SUPPKEY'] == 1733) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD']))].merge(partsupp[(partsupp['AVAILQTY'] < 802) | (partsupp['AVAILQTY'] <= 9241) & (partsupp['AVAILQTY'] < 4437)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 184) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['EXTENDEDPRICE'] < 87835.69280442609) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_PARTKEY'] >= 125952) & (lineitem['EXTENDEDPRICE'] == 19278.644732487595) & (lineitem['TAX'] >= 0.03397577983766787) & (lineitem['LINENUMBER'] >= 1) | (lineitem['EXTENDEDPRICE'] != 51701.84385416587)].merge(orders[(orders['O_COMMENT'] == '.') & (orders['TOTALPRICE'] != 13655.56568073697)].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] >= 148) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['DISCOUNT'] != 0.062318664713581474) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_PARTKEY'] > 2886) | (lineitem['EXTENDEDPRICE'] <= 71871.22855413318)][['L_ORDERKEY', 'RECEIPTDATE', 'LINENUMBER', 'DISCOUNT', 'SHIPINSTRUCT', 'COMMITDATE', 'SHIPMODE']].merge(orders[['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] < 7719) | (lineitem['SHIPMODE'].isin(['MAIL'])) & (lineitem['EXTENDEDPRICE'] != 26107.359281289388) & (lineitem['DISCOUNT'] == 0.015920187352487392) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['SHIPMODE'] == 'FOB')].merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] > 13) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['SHIPMODE'] != 'AIR') | (lineitem['LINENUMBER'] >= 4) | (lineitem['QUANTITY'] <= 49) & (lineitem['QUANTITY'] < 22) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPDATE'] >= '1998-10-30')][['LINESTATUS', 'RETURNFLAG', 'SHIPINSTRUCT', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] > 14) & (lineitem['L_PARTKEY'] != 98054) | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] > 24) & (lineitem['LINENUMBER'] <= 6) | (lineitem['LINENUMBER'] == 5) & (lineitem['QUANTITY'] < 47) | (lineitem['L_SUPPKEY'] > 2793) & (lineitem['L_SUPPKEY'] >= 3502)].merge(orders[['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINENUMBER'] != 6) & (lineitem['RECEIPTDATE'] == '1998-11-06')].merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 18) & (nation['N_COMMENT'] == 's')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_PARTKEY'] == 38698) & (lineitem['EXTENDEDPRICE'] != 72700.50380896851)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINESTATUS'] == 'F') & (lineitem['DISCOUNT'] < 0.027434651532517243) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['LINENUMBER'] != 1) & (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) | (lineitem['L_COMMENT'].str.startswith('h')) & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_SUPPKEY'] <= 7517) | (lineitem['RETURNFLAG'] == 'R')][['RECEIPTDATE', 'TAX', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE', 'L_SUPPKEY', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['RETURNFLAG'] != 'R') & (lineitem['LINESTATUS'] != 'F') | (lineitem['L_ORDERKEY'] <= 76) | (lineitem['L_ORDERKEY'] > 46) | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPMODE'] != 'SHIP')].merge(partsupp.merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN']))][['L_COMMENT', 'LINENUMBER', 'L_SUPPKEY', 'QUANTITY', 'TAX', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD']))].merge(partsupp[(partsupp['AVAILQTY'] == 2141) | (partsupp['SUPPLYCOST'] < 86.04605325737771) & (partsupp['PS_SUPPKEY'] >= 7481)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.008835238630733091) | (lineitem['L_ORDERKEY'] > 72) | (lineitem['SHIPINSTRUCT'].isin(['NONE'])) | (lineitem['L_ORDERKEY'] != 186)][['SHIPMODE', 'L_COMMENT', 'L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY', 'SHIPMODE', 'L_COMMENT', 'RETURNFLAG', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['TAX'] == 0.04205161153679898) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_ORDERKEY'] < 20) & (lineitem['EXTENDEDPRICE'] <= 67747.06639661588) & (lineitem['QUANTITY'] == 35) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_SUPPKEY'] == 2600) & (lineitem['L_PARTKEY'] != 80944)][['RECEIPTDATE', 'COMMITDATE', 'LINENUMBER', 'RETURNFLAG', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[['DISCOUNT', 'QUANTITY', 'RECEIPTDATE', 'L_COMMENT', 'TAX', 'SHIPDATE', 'L_ORDERKEY', 'COMMITDATE']].merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['DISCOUNT', 'TAX', 'RETURNFLAG', 'QUANTITY', 'L_PARTKEY']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'L_PARTKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'DISCOUNT']].merge(partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'L_COMMENT', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_COMMENT']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'SHIPDATE', 'COMMITDATE', 'L_PARTKEY', 'SHIPINSTRUCT']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['SIZE', 'P_NAME', 'CONTAINER', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'QUANTITY', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

lineitem[['SHIPDATE', 'LINESTATUS', 'L_PARTKEY', 'L_COMMENT', 'L_ORDERKEY', 'LINENUMBER', 'DISCOUNT', 'COMMITDATE', 'SHIPMODE']].merge(orders[['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'r') & (nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'a') & (nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] <= 22) | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] <= 15) & (nation['N_COMMENT'].str.startswith('h'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] < 10) | (nation['N_COMMENT'] != 'u')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 13) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] == 21)][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] >= 20) | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0)][['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('v'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] != 'AME') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'c')].merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'B')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] > 8157.933637894954) & (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] == 'y')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('e')) | (customer['C_ACCTBAL'] >= 8555.639213662516) & (customer['C_COMMENT'] != 'l') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 55)].merge(nation.merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'd') | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] == 99)][['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 41)].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'i') | (customer['C_ADDRESS'] == 'X') & (customer['C_CUSTKEY'] < 33) & (customer['C_COMMENT'] != 'i') | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('E')) | (customer['C_CUSTKEY'] > 59) | (customer['C_PHONE'].str.startswith('13-'))].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] > 8) | (nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('C'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] > 17) & (nation['N_NAME'] == 'P')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'].str.startswith('c')) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED']))][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 476) & (orders['O_COMMENT'] != 'q') | (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 48125)][['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] >= 5732.828293856017) & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] == 3372.1739531686035) & (customer['C_COMMENT'] == 'e') | (customer['C_NATIONKEY'] > 13) & (customer['C_CUSTKEY'] != 83) | (customer['C_ADDRESS'].str.startswith('U'))][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_CUSTKEY'] > 79771) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] < 86417) & (orders['O_ORDERKEY'] > 142)].merge(customer[(customer['C_COMMENT'] != 'p') & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] != 2564.6071259098094)][['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'].str.startswith('.'))].merge(customer[(customer['C_ADDRESS'].str.startswith(',')) & (customer['C_CUSTKEY'] > 34) & (customer['C_PHONE'] != '18-') & (customer['C_PHONE'] != '1') & (customer['C_COMMENT'] == 'n')].merge(nation[(nation['N_COMMENT'] != 'e')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('count')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW'])) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('b')) | (orders['O_COMMENT'] == '.')].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) | (orders['O_CUSTKEY'] != 55829)][['ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] < 633) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'] != '1-URGENT')].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'q') | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_ORDERKEY'] != 497) & (orders['TOTALPRICE'] >= 248372.32872419653) & (orders['TOTALPRICE'] < 153352.1969340401) & (orders['TOTALPRICE'] >= 323284.33840615314) | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['O_COMMENT'] == 't') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] < 98) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] == '.')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('f')) & (orders['TOTALPRICE'] > 15804.526935196809) & (orders['O_COMMENT'].str.startswith('h'))][['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'CLERK']].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('count')

orders[(orders['O_CUSTKEY'] >= 12157) & (orders['O_COMMENT'].str.startswith(' re')) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 'u') | (orders['O_ORDERKEY'] == 747)].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 35827) & (orders['TOTALPRICE'] <= 25414.982974093422)][['O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'g') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_COMMENT'].str.startswith('a')) | (customer['C_CUSTKEY'] != 12) | (customer['C_COMMENT'] == 'd') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] != 49) | (customer['C_NAME'] != 'C')][['C_NAME', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 378) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] == 'g') | (orders['TOTALPRICE'] < 68383.02688595638) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] >= 149595)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].groupby(by=['ORDERDATE', 'O_COMMENT', 'CLERK', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('count')

orders[(orders['O_ORDERKEY'] <= 610) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] != 2064) | (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] < 512) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] <= 140159)][['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 455) | (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED'])) | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] != 'q') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 474) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13')][['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'] != 'F') | (orders['TOTALPRICE'] > 131542.77985309102) | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] != 37100) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] == 'F')].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 233860.63548116788) & (orders['O_COMMENT'].str.startswith('d')) & (orders['O_COMMENT'].str.startswith('t')) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] >= 174015.6143372948) & (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] > 65070) | (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] == '25-')][['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] > 3610.4625367383987) | (customer['C_NATIONKEY'] > 3) & (customer['C_PHONE'] == '1') & (customer['C_ADDRESS'].str.startswith('Y'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] != 2684.047218193697)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

orders[['O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 22) & (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'a')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] != 'y')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] == 'Brand#31') | (part['TYPE'].str.startswith('P')) | (part['BRAND'] == 'Brand#43')][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'BRAND', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'LG') | (part['CONTAINER'] == 'JUMBO') & (part['P_PARTKEY'] == 9) | (part['SIZE'] == 13) & (part['BRAND'] == 'Brand#34') & (part['RETAILPRICE'] <= 1026.901020775697) & (part['MFGR'] != 'Manufacturer#4')][['SIZE', 'BRAND', 'TYPE', 'MFGR', 'PT_COMMENT', 'CONTAINER']].groupby(by=['SIZE', 'PT_COMMENT', 'CONTAINER', 'TYPE']).agg('count')

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'].str.startswith('E')) | (part['MFGR'] != 'Manufacturer#1') | (part['TYPE'].str.startswith('STA')) | (part['P_PARTKEY'] != 157) & (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'].str.startswith('S'))][['PT_COMMENT', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'BRAND']].groupby(by=['TYPE', 'CONTAINER', 'PT_COMMENT', 'BRAND']).agg('count')

part[(part['MFGR'] == 'Manufacturer#4') | (part['BRAND'] == 'Brand#14') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2'])) | (part['P_NAME'] == 'o') & (part['TYPE'] == 'P') | (part['P_NAME'] == 'c') & (part['P_NAME'].str.startswith('a')) & (part['BRAND'] == 'Brand#13')][['TYPE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'BRAND']].groupby(by=['TYPE', 'P_PARTKEY', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'd') | (part['CONTAINER'] == 'SM') & (part['P_NAME'].str.startswith('lin')) | (part['RETAILPRICE'] < 923.5963744240867) & (part['P_PARTKEY'] <= 161) | (part['RETAILPRICE'] <= 1011.7704503877378) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] == 35)][['PT_COMMENT', 'P_PARTKEY', 'BRAND', 'CONTAINER']].groupby(by=['BRAND', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == ' ') | (part['TYPE'].str.startswith('E')) & (part['P_NAME'] != 'k') & (part['TYPE'].str.startswith('L')) & (part['SIZE'] != 45) & (part['BRAND'] != 'Brand#51') | (part['BRAND'] != 'Brand#52') | (part['BRAND'] != 'Brand#51')][['P_PARTKEY', 'PT_COMMENT', 'TYPE', 'SIZE', 'BRAND', 'P_NAME', 'CONTAINER']].groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'i') | (part['SIZE'] > 24) & (part['CONTAINER'] != 'MED') | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] >= 42)][['P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 's') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['BRAND'] == 'Brand#13') | (part['SIZE'] != 33) | (part['TYPE'] == 'E') | (part['P_PARTKEY'] >= 37) | (part['PT_COMMENT'] == 'o')][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND']].groupby(by=['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'SIZE']).agg('count')

part[(part['P_PARTKEY'] <= 195) & (part['SIZE'] == 48) | (part['PT_COMMENT'].str.startswith('h')) | (part['SIZE'] > 11) & (part['SIZE'] >= 2) | (part['PT_COMMENT'] != ' fi') | (part['BRAND'].isin(['Brand#33', 'Brand#15', 'Brand#54', 'Brand#34', 'Brand#53'])) | (part['P_PARTKEY'] != 2)][['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['SIZE', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] > 142) & (part['P_PARTKEY'] <= 140) | (part['P_PARTKEY'] != 9) & (part['TYPE'] != 'P') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_NAME'] != 'n') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) & (part['P_NAME'] != 'h')][['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'S') | (part['TYPE'] == 'P') & (part['P_PARTKEY'] != 65) | (part['RETAILPRICE'] <= 1067.1681492310693) | (part['SIZE'] >= 5) | (part['RETAILPRICE'] != 1064.133763937859)][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['SIZE', 'P_NAME', 'BRAND']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'STA') & (part['PT_COMMENT'] != 'ly ') | (part['SIZE'] < 19) | (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] > 157) & (part['BRAND'] != 'Brand#24') & (part['TYPE'] != 'STA') | (part['PT_COMMENT'] != 'ly ')][['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'PT_COMMENT']].groupby(by=['BRAND']).agg('count')

partsupp.merge(part[(part['P_NAME'] != 'g') | (part['TYPE'] == 'S') & (part['BRAND'] != 'Brand#21') | (part['P_PARTKEY'] == 92) | (part['PT_COMMENT'].str.startswith('ly ')) & (part['CONTAINER'] == 'WRAP') | (part['SIZE'] >= 40) | (part['CONTAINER'].str.startswith('JUMBO'))][['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 3229.5408510212246) & (supplier['S_NATIONKEY'] < 20) | (supplier['S_ADDRESS'] == 'Y')][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'C')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] != '.')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == ',') & (supplier['S_COMMENT'] == ' ') | (supplier['S_ADDRESS'] == 'M') & (supplier['S_ACCTBAL'] == 2852.4148910743397)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'] == '32-') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('9')) & (supplier['S_PHONE'] == '1')][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 17) | (supplier['S_ADDRESS'] == 'c') & (supplier['S_NAME'] != 'S')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 15) | (supplier['S_ADDRESS'] != '9') & (supplier['S_COMMENT'].str.startswith('l'))][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 106)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] == 20)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] == 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] != 'V') & (nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] != 1)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 9345)].merge(supplier[(supplier['S_ACCTBAL'] == 2723.0540275914154) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'K') & (supplier['S_NATIONKEY'] <= 6) & (supplier['S_PHONE'] != '1') & (supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] >= 6117.5977520870965)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 36) & (partsupp['SUPPLYCOST'] <= 615.3169293579984)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 28) | (partsupp['AVAILQTY'] == 685)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['P_PARTKEY'] == 113) | (part['BRAND'].isin(['Brand#35', 'Brand#55', 'Brand#15', 'Brand#23', 'Brand#42', 'Brand#13', 'Brand#12'])) | (part['PT_COMMENT'] == 'n') & (part['TYPE'] != 'L')][['BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 42) & (partsupp['AVAILQTY'] == 3441)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'K')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 22) | (partsupp['PS_SUPPKEY'] == 6527) & (partsupp['P_COMMENT'] != 'u') | (partsupp['PS_SUPPKEY'] >= 1931)].merge(part[(part['CONTAINER'].str.startswith('LG')) & (part['TYPE'] != 'SMA') | (part['MFGR'] == 'Manufacturer#5') | (part['RETAILPRICE'] >= 1033.9044664601372) & (part['RETAILPRICE'] < 1091.5016108506052) & (part['P_PARTKEY'] > 126) | (part['TYPE'].str.startswith('E')) | (part['TYPE'] != 'P') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 39)].merge(part[['SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 1452) & (partsupp['AVAILQTY'] > 2131)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'].str.startswith('1'))][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 4538)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 948.3570243946267) & (supplier['S_COMMENT'] == '.')].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 4485) & (partsupp['PS_SUPPKEY'] <= 4225)].merge(supplier[(supplier['S_NATIONKEY'] != 5)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 5377) & (partsupp['P_COMMENT'].str.startswith('r'))][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 7) & (nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 2916) | (partsupp['PS_PARTKEY'] != 5)].merge(part[(part['PT_COMMENT'] == 'ss ') | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) & (part['TYPE'] != 'S') | (part['SIZE'] > 33) & (part['P_NAME'] == 'p')][['P_NAME', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'f') | (partsupp['PS_SUPPKEY'] >= 3498) & (partsupp['P_COMMENT'] == 'v')][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 1904.2064348394003) | (supplier['S_ACCTBAL'] <= 7334.8452732056985) | (supplier['S_COMMENT'].str.startswith('i'))][['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'r') | (partsupp['P_COMMENT'].str.startswith('v'))].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND', 'CONTAINER']).agg('count')

partsupp[(partsupp['P_COMMENT'] == ',') | (partsupp['PS_PARTKEY'] == 49) & (partsupp['SUPPLYCOST'] <= 507.77116811815677) | (partsupp['PS_SUPPKEY'] != 6714) | (partsupp['P_COMMENT'].str.startswith('s'))].merge(part[(part['RETAILPRICE'] == 1073.5884929919723) | (part['TYPE'].str.startswith('S')) | (part['PT_COMMENT'] == 'k') & (part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] == 941.4340244899115)][['MFGR', 'P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'are') | (partsupp['AVAILQTY'] <= 4735) & (partsupp['PS_PARTKEY'] == 20) | (partsupp['PS_PARTKEY'] <= 14) & (partsupp['PS_SUPPKEY'] <= 3759)].merge(part[(part['SIZE'] != 3) & (part['TYPE'] != 'SMA') & (part['MFGR'].isin(['Manufacturer#3'])) | (part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'].str.startswith('p')) & (part['P_PARTKEY'] != 107) | (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'q') & (partsupp['AVAILQTY'] < 2286) | (partsupp['P_COMMENT'] == 'are') | (partsupp['PS_SUPPKEY'] > 3491) & (partsupp['PS_SUPPKEY'] == 4912)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['SUPPLYCOST'] < 411.27536050496406) | (partsupp['AVAILQTY'] <= 7590)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_SUPPKEY'] != 1890) & (partsupp['AVAILQTY'] >= 7283) | (partsupp['SUPPLYCOST'] != 810.2380506020766) | (partsupp['SUPPLYCOST'] > 321.4317347278818)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))].merge(part[(part['P_NAME'].str.startswith('v'))][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 699.2746577318586) | (partsupp['PS_PARTKEY'] > 25) & (partsupp['SUPPLYCOST'] < 65.54441270033811) & (partsupp['SUPPLYCOST'] >= 543.1035756635916)].merge(part[(part['CONTAINER'] == 'SM') | (part['PT_COMMENT'] != 'c') | (part['BRAND'].isin(['Brand#41', 'Brand#45', 'Brand#33', 'Brand#53', 'Brand#24', 'Brand#34', 'Brand#43', 'Brand#15', 'Brand#32', 'Brand#11', 'Brand#22', 'Brand#12', 'Brand#55', 'Brand#25', 'Brand#44', 'Brand#54', 'Brand#21', 'Brand#52', 'Brand#35'])) | (part['RETAILPRICE'] >= 1049.0683704031337) | (part['CONTAINER'] == 'WRAP') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1'])) | (part['PT_COMMENT'] != ' fi') | (part['PT_COMMENT'] != 'b') & (part['P_PARTKEY'] == 180)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 441.31333415432647)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('w')) | (part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['MFGR'] == 'Manufacturer#2') | (part['PT_COMMENT'] == 'm') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] == 60)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'P_NAME', 'TYPE']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR', 'SIZE', 'TYPE', 'P_NAME']).agg('count')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#11', 'Brand#15', 'Brand#21', 'Brand#41', 'Brand#42', 'Brand#51', 'Brand#55', 'Brand#22', 'Brand#33', 'Brand#44', 'Brand#52', 'Brand#24', 'Brand#12', 'Brand#25', 'Brand#45', 'Brand#35', 'Brand#23', 'Brand#14'])) & (part['CONTAINER'] == 'SM') & (part['P_NAME'].str.startswith('s')) & (part['SIZE'] <= 33) & (part['PT_COMMENT'] != 'x')][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['BRAND', 'CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'P_NAME', 'CONTAINER']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 'y') | (nation['N_NATIONKEY'] > 13)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'ASI') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_NATIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 20)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] != 'I')].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < -940.9889916418932) & (supplier['S_ACCTBAL'] > 6703.822127540914) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] == '2')][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'] == 'C')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 6762.766366146166) & (supplier['S_ACCTBAL'] >= 4634.591668841226) & (supplier['S_COMMENT'] == 'n') | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_COMMENT'] != 'l') & (supplier['S_SUPPKEY'] != 138)].merge(nation.merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 5732.025118305693)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 4)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 6714.893698739275)].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 6450.159105319265) & (supplier['S_SUPPKEY'] > 157)].merge(nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] >= 8) & (nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] >= 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 9518.262718880658) | (supplier['S_ACCTBAL'] == 2130.4978242835205) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('b'))].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'].str.startswith('J'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 9740.982161682352)][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'e') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] < 5993.3289336762045)][['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_ADDRESS'] == 'q') | (supplier['S_ADDRESS'] != 'u')].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] < 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_SUPPKEY'] == 102)][['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] != 0)].merge(region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_SUPPKEY'] != 60) | (supplier['S_PHONE'] == '32-') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 97) | (supplier['S_SUPPKEY'] > 24)].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 5993.071049928048) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ADDRESS'] != '0') & (supplier['S_ADDRESS'] != 'e') | (supplier['S_ADDRESS'] != 'r') | (supplier['S_COMMENT'].str.startswith(','))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] > 12) & (nation['N_COMMENT'] != 'y')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] <= 104) & (supplier['S_ACCTBAL'] == 1449.733764894256) & (supplier['S_ACCTBAL'] == 1206.667668945445) | (supplier['S_NATIONKEY'] > 18) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] < 16)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 11) | (supplier['S_NATIONKEY'] != 8)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-'))][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 141) & (supplier['S_ACCTBAL'] == 1995.194710227596) | (supplier['S_ADDRESS'] != 'J') & (supplier['S_ACCTBAL'] != 3190.407152415014) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NATIONKEY'] < 20)].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 73) & (supplier['S_COMMENT'] != 'b')][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 82) | (supplier['S_ACCTBAL'] > 5394.153035173034) | (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_ADDRESS'].str.startswith('d')) & (supplier['S_ACCTBAL'] != 4221.466345391381)].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 160) & (supplier['S_NATIONKEY'] > 5) | (supplier['S_NATIONKEY'] > 21) | (supplier['S_PHONE'] == '3')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 95) & (supplier['S_PHONE'] == '26-') & (supplier['S_NATIONKEY'] != 12) | (supplier['S_COMMENT'] == 's') & (supplier['S_NATIONKEY'] == 0) & (supplier['S_NATIONKEY'] < 11) & (supplier['S_NATIONKEY'] < 9)].merge(nation[(nation['N_COMMENT'] != 'n')].merge(region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 113) & (supplier['S_COMMENT'] == 'd') | (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_COMMENT'] == ',')].merge(nation[(nation['N_NATIONKEY'] != 16) & (nation['N_NAME'] == 'J')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] >= 22) & (supplier['S_SUPPKEY'] < 175) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '17-') & (supplier['S_ADDRESS'] != 'w') | (supplier['S_SUPPKEY'] != 175)][['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 9) & (nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'c')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] > 11) | (nation['N_NATIONKEY'] == 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] != 21) & (nation['N_NAME'] != 'I')].merge(region[(region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NATIONKEY'] < 4)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'n')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] <= 20) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] < 19)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] < 0) | (nation['N_NATIONKEY'] >= 6) & (nation['N_NATIONKEY'] > 23) & (nation['N_NAME'].str.startswith('C'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 4608.996536123702) & (customer['C_PHONE'].str.startswith('27-')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] != 81) | (customer['C_CUSTKEY'] != 17) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_NATIONKEY'] <= 0)].merge(nation[(nation['N_NAME'] != 'G')].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 8575.501053217751) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_PHONE'] != '2') | (customer['C_CUSTKEY'] >= 62) | (customer['C_CUSTKEY'] >= 94) & (customer['C_ACCTBAL'] <= 9211.559301987703)].merge(nation[(nation['N_NAME'] != 'J')].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 6289.492591307615) | (customer['C_CUSTKEY'] <= 79) & (customer['C_PHONE'] != '18-')].merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9240.121692414334) & (customer['C_COMMENT'] == 'n')].merge(nation[(nation['N_NATIONKEY'] < 10) | (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] > 4)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 5725.722932775888) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('4')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NATIONKEY'] <= 13) | (customer['C_NATIONKEY'] < 14) | (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('b')) | (customer['C_ADDRESS'] == 'E') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'y')][['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('l')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 50)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('r')) | (customer['C_CUSTKEY'] <= 72)][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 76)][['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 45) | (customer['C_COMMENT'] != 'l') | (customer['C_PHONE'] == '13-') | (customer['C_ACCTBAL'] >= 1310.8270431975816)].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 69) & (customer['C_COMMENT'] == ' ') & (customer['C_PHONE'].str.startswith('2')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) & (customer['C_CUSTKEY'] <= 44) & (customer['C_CUSTKEY'] <= 38)].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 82) | (customer['C_COMMENT'] != ',') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] != 44) | (customer['C_PHONE'] == '3') | (customer['C_COMMENT'] != 'd') & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_NAME'] == 'U')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] == 23) | (customer['C_ACCTBAL'] > 6558.816891338193) & (customer['C_COMMENT'] == 's') & (customer['C_NATIONKEY'] == 7) & (customer['C_ADDRESS'] != 'm') & (customer['C_CUSTKEY'] != 27)].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 38) & (customer['C_ADDRESS'] != 'U')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 39) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] <= 64) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] != 5660.708651587298) | (customer['C_NATIONKEY'] == 21) | (customer['C_CUSTKEY'] >= 78)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 48) | (customer['C_PHONE'] == '1') | (customer['C_ADDRESS'].str.startswith('f')) | (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ADDRESS'] != 'L') | (customer['C_NATIONKEY'] == 20)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 91) | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_NATIONKEY'] != 10) | (customer['C_ACCTBAL'] != -167.63794155375058) & (customer['C_COMMENT'].str.startswith('a')) & (customer['C_COMMENT'].str.startswith('t')) & (customer['C_PHONE'].str.startswith('27-')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING']))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 10) & (customer['C_ACCTBAL'] > 5880.284151271823) & (customer['C_ACCTBAL'] < -395.2473202970606) | (customer['C_PHONE'] != '3') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 9) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 5)].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 4) & (customer['C_ACCTBAL'] >= 684.3007699592865) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] < 1)].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] <= 22)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 52) | (customer['C_NATIONKEY'] < 18) & (customer['C_ACCTBAL'] <= 7942.816300945407)].merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_NATIONKEY'] == 21)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] >= 98) & (customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] == 18) | (customer['C_ACCTBAL'] <= 2441.1409042682235) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] == 50) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] != 60) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ACCTBAL'] >= 153.6711180011573)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_PHONE'].str.startswith('27-'))][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 8) & (customer['C_PHONE'] == '25-') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_PHONE'] == '25-') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] != 31)].merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 7) | (customer['C_ADDRESS'].str.startswith('w')) | (customer['C_ADDRESS'] == '6') & (customer['C_COMMENT'].str.startswith('d')) | (customer['C_CUSTKEY'] < 62) | (customer['C_NATIONKEY'] >= 6) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE']))].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'J')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_PHONE'] == '1') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_COMMENT'].str.startswith('k')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '13-') & (customer['C_NATIONKEY'] >= 5) & (customer['C_ACCTBAL'] > 7068.927263890919) & (customer['C_ACCTBAL'] != 9868.130956477557)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_PHONE'] == '22-') | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith(' ')) & (customer['C_CUSTKEY'] != 17) | (customer['C_ADDRESS'] != 'c') | (customer['C_ADDRESS'] != 'P') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 92)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_COMMENT'] != 'i') & (customer['C_NATIONKEY'] == 0) | (customer['C_ADDRESS'] == 'g') | (customer['C_ACCTBAL'] >= 6491.4333345669365) & (customer['C_ACCTBAL'] != 9856.665002316473) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] == 'D') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('1'))][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'MACHINERY'])) & (customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] != 3289.601822735117) & (customer['C_NATIONKEY'] > 0) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] != 'I')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 13)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'E') & (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'] != 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 10)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['O_COMMENT'] != 'i') & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] != 0)][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] >= 144) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] < 300) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] >= 13) & (customer['C_ADDRESS'] != 'J') | (customer['C_CUSTKEY'] == 24) | (customer['C_CUSTKEY'] <= 98) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['SIZE'] > 5) | (part['TYPE'] != 'M') & (part['BRAND'] != 'Brand#22') | (part['P_PARTKEY'] < 6) & (part['SIZE'] <= 13) | (part['BRAND'].isin(['Brand#41', 'Brand#23', 'Brand#14', 'Brand#34', 'Brand#12', 'Brand#13', 'Brand#32', 'Brand#45', 'Brand#25'])) & (part['RETAILPRICE'] <= 1057.2286744025582) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) & (part['PT_COMMENT'] == 'w')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'SIZE', 'BRAND', 'TYPE', 'P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'v') & (partsupp['PS_PARTKEY'] >= 18) & (partsupp['AVAILQTY'] > 9512) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_PARTKEY'] < 38)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['QUANTITY'] < 39) | (lineitem['L_ORDERKEY'] <= 148) & (lineitem['LINENUMBER'] > 1)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 1335)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.04689223465323772) & (lineitem['TAX'] != 0.023998740060689576) | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['LINESTATUS'] != 'F') | (lineitem['TAX'] <= 0.015064160522757) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_ORDERKEY'] >= 135) | (lineitem['RETURNFLAG'].isin(['R', 'N'])) & (lineitem['TAX'] != 0.051084610289743385) & (lineitem['EXTENDEDPRICE'] > 56082.056961909104)][['LINENUMBER', 'QUANTITY', 'SHIPMODE', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPDATE']].groupby(by=['QUANTITY', 'L_ORDERKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.011438541026971472) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['L_ORDERKEY'] <= 74) & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_SUPPKEY'] > 6574) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['LINESTATUS'] == 'O') & (lineitem['DISCOUNT'] < 0.052350857191748236) & (lineitem['SHIPDATE'] == '1998-10-30')].merge(orders[(orders['O_CUSTKEY'] > 67510) | (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] != 88586)][['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.08029916456956483) & (lineitem['QUANTITY'] > 31) | (lineitem['EXTENDEDPRICE'] < 73531.5124302853) | (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['LINENUMBER'] != 5) | (lineitem['DISCOUNT'] != 0.0784088583828701) & (lineitem['L_ORDERKEY'] >= 177) & (lineitem['TAX'] < 0.07176305834755667)][['DISCOUNT', 'SHIPDATE', 'L_SUPPKEY', 'TAX', 'RETURNFLAG', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 706.63455911276) & (partsupp['P_COMMENT'].str.startswith(' '))], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] >= 0.010780067674499029) | (lineitem['L_COMMENT'] != '-') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['EXTENDEDPRICE'] == 35326.333797850486)][['SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'QUANTITY', 'RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'TAX', 'SHIPMODE', 'COMMITDATE']].groupby(by=['DISCOUNT', 'TAX']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 36753.68759797569) & (lineitem['RETURNFLAG'].isin(['N']))].merge(partsupp[(partsupp['AVAILQTY'] != 3755) & (partsupp['PS_PARTKEY'] <= 19)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('w'))][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 10628.887561296744) & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_PARTKEY'] >= 64415) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['QUANTITY'] != 14)].merge(orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'O_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 5) | (lineitem['L_COMMENT'].str.startswith('u')) & (lineitem['L_PARTKEY'] >= 148732) & (lineitem['DISCOUNT'] == 0.048619734406269204) & (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(orders[(orders['O_ORDERKEY'] > 629) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['ORDERDATE'] <= '1998-07-21')][['O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) & (lineitem['LINESTATUS'] == 'O') | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['TAX'] == 0.024272799312908103) & (lineitem['TAX'] >= 0.02151098305602629) & (lineitem['L_COMMENT'] != 'q') | (lineitem['L_SUPPKEY'] != 8307) | (lineitem['L_COMMENT'] != 'n') & (lineitem['L_COMMENT'] == 'ly ')][['RETURNFLAG', 'LINESTATUS', 'QUANTITY', 'LINENUMBER', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['QUANTITY'] < 1) & (lineitem['LINENUMBER'] == 1) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD']))][['RECEIPTDATE', 'COMMITDATE', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'QUANTITY', 'EXTENDEDPRICE', 'TAX', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != 's') & (partsupp['P_COMMENT'].str.startswith('b')) & (partsupp['PS_PARTKEY'] < 6)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('j')) | (lineitem['EXTENDEDPRICE'] > 68671.52035104507) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_SUPPKEY'] < 9319) | (lineitem['L_PARTKEY'] >= 84858) & (lineitem['SHIPMODE'] != 'AIR') & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['L_PARTKEY'] <= 191086)].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 235548.6929306491) & (orders['O_COMMENT'].str.startswith('t'))][['SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] < 91989) | (lineitem['L_COMMENT'] == 'i')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 27) | (partsupp['PS_SUPPKEY'] == 3847) | (partsupp['AVAILQTY'] <= 9656) & (partsupp['SUPPLYCOST'] <= 406.7300364955575) & (partsupp['SUPPLYCOST'] != 54.49733868007312)].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 195323) | (lineitem['L_COMMENT'] != 's. ') | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['LINESTATUS'] != 'F') & (lineitem['L_ORDERKEY'] != 21) & (lineitem['QUANTITY'] >= 14) | (lineitem['TAX'] == 0.06652720537109076)].merge(orders[['ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 13) & (lineitem['LINESTATUS'] != 'O') | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPMODE'].isin(['SHIP', 'TRUCK', 'AIR', 'FOB', 'RAIL', 'MAIL', 'REG AIR'])) | (lineitem['TAX'] != 0.05170567504715761) & (lineitem['L_COMMENT'].str.startswith('s')) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['LINENUMBER'] != 6)].merge(partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['PS_PARTKEY'] > 5) | (partsupp['AVAILQTY'] <= 1024) & (partsupp['AVAILQTY'] > 1232)].merge(part[['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['DISCOUNT'] <= 0.012380396687629636) & (lineitem['L_SUPPKEY'] == 8825) | (lineitem['DISCOUNT'] <= 0.005318189847519206) & (lineitem['QUANTITY'] >= 36) | (lineitem['LINENUMBER'] == 3) | (lineitem['TAX'] == 0.015166267108496775) | (lineitem['LINESTATUS'] != 'F')][['L_ORDERKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS', 'TAX']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02')][['SHIPINSTRUCT', 'TAX', 'L_PARTKEY', 'L_COMMENT', 'LINENUMBER']].merge(partsupp[(partsupp['P_COMMENT'] != 'j') | (partsupp['PS_PARTKEY'] > 34) & (partsupp['P_COMMENT'].str.startswith('n')) & (partsupp['PS_PARTKEY'] >= 40) & (partsupp['P_COMMENT'] == 'o')][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_PARTKEY'] <= 22890) & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['EXTENDEDPRICE'] == 35391.46302621849) & (lineitem['TAX'] != 6.998018914833537e-05)].merge(partsupp[(partsupp['AVAILQTY'] <= 7265) & (partsupp['AVAILQTY'] >= 5734) | (partsupp['AVAILQTY'] > 9577) & (partsupp['P_COMMENT'].str.startswith('y'))][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] == 'Brand#42') & (part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['DISCOUNT'] != 0.041923085495968154) & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_ORDERKEY'] != 23) | (lineitem['EXTENDEDPRICE'] <= 14447.90598023216) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['LINENUMBER'] != 2) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['LINENUMBER'] <= 1) & (lineitem['EXTENDEDPRICE'] == 68152.68837363573)].merge(partsupp[(partsupp['SUPPLYCOST'] < 418.2176201591097) & (partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['AVAILQTY'] >= 5395) & (partsupp['PS_PARTKEY'] != 43)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['SHIPMODE'] != 'AIR') | (lineitem['L_COMMENT'] != ' ca') | (lineitem['L_ORDERKEY'] <= 49) | (lineitem['QUANTITY'] <= 26) | (lineitem['QUANTITY'] != 21) | (lineitem['L_SUPPKEY'] >= 7662)].merge(partsupp[(partsupp['AVAILQTY'] != 4985) & (partsupp['SUPPLYCOST'] > 407.67302433702196) | (partsupp['PS_PARTKEY'] == 28)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[['LINENUMBER', 'LINESTATUS', 'L_COMMENT', 'L_PARTKEY', 'TAX', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] < -11.756864911822277) | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE']].merge(orders[(orders['O_COMMENT'] == 'c') & (orders['TOTALPRICE'] == 211969.51508062362) & (orders['TOTALPRICE'] >= 195526.9277010907) | (orders['TOTALPRICE'] != 161169.3455598432) & (orders['O_CUSTKEY'] < 47215) | (orders['ORDERSTATUS'] != 'F')][['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'QUANTITY', 'L_COMMENT', 'TAX', 'L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] != 9263) & (partsupp['AVAILQTY'] >= 4811) & (partsupp['SUPPLYCOST'] > 453.3934425273601)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'L_COMMENT', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 8261.525937045557) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] >= 85) & (supplier['S_ADDRESS'] == 'x') & (supplier['S_SUPPKEY'] != 148)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'TAX', 'RECEIPTDATE', 'L_PARTKEY', 'L_ORDERKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER']].merge(orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['CLERK'] != 'C')][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'DISCOUNT', 'COMMITDATE', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'] == 'ly ') | (partsupp['PS_PARTKEY'] == 39)][['P_COMMENT', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'LINESTATUS', 'EXTENDEDPRICE']].merge(orders[(orders['O_ORDERKEY'] >= 343) & (orders['O_CUSTKEY'] == 19277) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['O_COMMENT'].str.startswith('uri')) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 6714) & (orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'SHIPDATE', 'RETURNFLAG', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['SUPPLYCOST'] < 915.6397744470046) | (partsupp['PS_SUPPKEY'] == 7246) | (partsupp['P_COMMENT'] != 'i') & (partsupp['SUPPLYCOST'] != 322.76102987544635) & (partsupp['PS_PARTKEY'] < 43)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'PT_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_SUPPKEY', 'SHIPMODE', 'RECEIPTDATE']].merge(partsupp.merge(supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL']).agg('count')

lineitem[['L_SUPPKEY', 'TAX']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPMODE', 'QUANTITY', 'RECEIPTDATE', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER']].merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] != 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[['TAX', 'L_ORDERKEY', 'DISCOUNT', 'LINENUMBER']].merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_ACCTBAL'] > 3886.1985402104347) & (customer['C_ACCTBAL'] != 3753.1241542928874) | (customer['C_PHONE'] != '22-')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NAME'] != 'P') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] != 1)][['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 2) | (nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 5) | (nation['N_NATIONKEY'] < 6) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'G')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'].str.startswith('v'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] <= 76) | (customer['C_COMMENT'] == 'y') | (customer['C_ADDRESS'] == 'c') & (customer['C_ADDRESS'] == 'c') | (customer['C_ADDRESS'] != 'X')][['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] == 76) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_CUSTKEY'] != 45) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY']))].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ADDRESS'] != 'e') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 421.8339911678304) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_ADDRESS'] != 'h') & (customer['C_CUSTKEY'] <= 11) & (customer['C_NATIONKEY'] <= 17) | (customer['C_ADDRESS'] != 'Q')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 22) | (nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 'h')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] < 155875.0784084339) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] != 4937) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] >= 777)].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C')].merge(customer[(customer['C_NATIONKEY'] > 1) & (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_NATIONKEY'] == 17) | (customer['C_PHONE'] == '25-') & (customer['C_CUSTKEY'] != 3)][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] <= 83352) & (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] == 'a') & (orders['O_CUSTKEY'] >= 55896) & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] == '1992-01-13')][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'CLERK']).agg('count')

orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] < 139524) | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] == 456) & (orders['O_CUSTKEY'] < 87900)].merge(customer[(customer['C_CUSTKEY'] > 93)].merge(nation[(nation['N_NATIONKEY'] > 15)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] != 0)][['O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_COMMENT', 'C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] != 'b') & (orders['O_CUSTKEY'] > 489) | (orders['O_COMMENT'] == 'j') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] == 387) | (orders['ORDERSTATUS'] == 'F')][['ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERPRIORITY'] == '1-URGENT')][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'ORDERDATE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_CUSTKEY'] == 33549) | (orders['O_CUSTKEY'] != 103368) & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['O_COMMENT'] != 'd')].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] <= 19) & (nation['N_COMMENT'].str.startswith('c'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['CLERK'] == 'C')][['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 1) & (nation['N_COMMENT'] != 'a')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] >= 126202) | (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'].str.startswith('3')) & (customer['C_PHONE'] != '18-') & (customer['C_ADDRESS'] != 'T')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] > 402) & (orders['O_ORDERKEY'] >= 113) | (orders['O_CUSTKEY'] == 113403) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] == 1327.500519307785) & (orders['TOTALPRICE'] == 3806.3709752069817)].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['TOTALPRICE'] <= 68591.5442926181) & (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 'i') & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 103167.9085458898) | (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'O')].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != ',') | (orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] >= 335665.78281654295) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_COMMENT'].str.startswith('w')) & (customer['C_ADDRESS'] != 'M')].merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NAME'] != 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 't') | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_ORDERKEY'] <= 500) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] != 22) | (orders['ORDERDATE'] >= '1998-07-21')][['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE']].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 61449) | (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_COMMENT'] != 'uri') & (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_ADDRESS'] == 'p') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] == 'p') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 8) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 22815) & (orders['O_CUSTKEY'] >= 134171) & (orders['O_ORDERKEY'] != 1) & (orders['TOTALPRICE'] <= 311777.1097809103) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] < 238) | (orders['SHIPPRIORITY'] > 0)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['O_CUSTKEY'] >= 97794) & (orders['O_COMMENT'] == 'the') | (orders['O_COMMENT'] == 'd')][['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] >= 52) & (customer['C_ACCTBAL'] > 2787.7609719576726) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_ADDRESS'] == 'r')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 311)].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] != 584)].merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] == 8) & (customer['C_NATIONKEY'] != 22) | (customer['C_ACCTBAL'] == 6492.485738932895) | (customer['C_CUSTKEY'] <= 59) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] != -830.9755498946627)].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] > 128358) & (orders['O_COMMENT'] != 'o') | (orders['O_CUSTKEY'] > 65374)].merge(customer[(customer['C_ACCTBAL'] < 1110.8893011576213) & (customer['C_COMMENT'] == 's') & (customer['C_CUSTKEY'] != 27) & (customer['C_ADDRESS'].str.startswith('a')) & (customer['C_CUSTKEY'] > 46) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING']))][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 148237.38961141524) | (orders['O_CUSTKEY'] <= 86030) & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] != 86046.49374487525)].merge(customer.merge(nation[(nation['N_COMMENT'] == 'l')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 170682.68129604653) | (orders['O_COMMENT'] == 'e') | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] <= 328523.33802042966) | (orders['O_ORDERKEY'] <= 679) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH'])) | (orders['O_COMMENT'] != 'the')][['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[(customer['C_PHONE'] == '3') | (customer['C_COMMENT'].str.startswith('c'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 336294.92390928837)].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 160690.744079728) & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] == 127006.05100141327)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 23333.19391392608) & (orders['O_COMMENT'] != 'q') & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] >= 0)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] != 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 111775.37156165719)][['O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] > 6) | (nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 339092.2064846213) & (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] >= 231052.6852924863) & (orders['TOTALPRICE'] <= 130649.4902496723)][['O_CUSTKEY']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] == 72) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'] != '3') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) | (customer['C_NATIONKEY'] < 2) & (customer['C_ACCTBAL'] < 147.33053327184848)][['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('2'))].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] == 9) | (nation['N_NATIONKEY'] >= 8) & (nation['N_NATIONKEY'] == 9)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'MED') | (part['P_NAME'].str.startswith('a')) | (part['RETAILPRICE'] != 1005.1093235104773) | (part['P_PARTKEY'] > 158) & (part['TYPE'].str.startswith('STA')) & (part['MFGR'] != 'Manufacturer#3') & (part['TYPE'] != 'E')][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['MFGR', 'SIZE']).agg('count')

part[(part['CONTAINER'] == 'MED') | (part['SIZE'] != 3) | (part['P_NAME'] == 'y') & (part['PT_COMMENT'].str.startswith('h')) & (part['P_PARTKEY'] > 70)][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'SIZE']).agg('count')

part[(part['MFGR'] == 'Manufacturer#5') & (part['RETAILPRICE'] != 1013.5774612178028) | (part['P_PARTKEY'] == 187) | (part['RETAILPRICE'] > 936.2481156822787) | (part['PT_COMMENT'] != 'h') | (part['BRAND'] != 'Brand#52') & (part['PT_COMMENT'] == 'n') & (part['SIZE'] != 18)][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) | (part['SIZE'] == 23) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5'])) & (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] != 'SM') | (part['BRAND'] == 'Brand#25') & (part['CONTAINER'] != 'LG') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4'])) | (part['SIZE'] != 40)][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']].groupby(by=['TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'g') & (part['TYPE'] == 'M') & (part['RETAILPRICE'] != 929.2370079612775) & (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] == 102) & (part['RETAILPRICE'] == 1080.0194822506699)][['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['P_PARTKEY', 'TYPE', 'P_NAME', 'CONTAINER']).agg('count')

part[(part['P_PARTKEY'] != 175) & (part['SIZE'] <= 19) | (part['PT_COMMENT'] != 'n') | (part['BRAND'] != 'Brand#14') | (part['P_PARTKEY'] > 96)][['P_NAME', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']].groupby(by=['MFGR', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] < 126) & (part['SIZE'] != 25) & (part['P_NAME'] == 'c') & (part['PT_COMMENT'] != ' ') | (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'] == 's') | (part['SIZE'] >= 25)][['RETAILPRICE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'P_NAME', 'MFGR', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] >= 141) & (part['CONTAINER'] == 'LG') & (part['SIZE'] <= 12) & (part['CONTAINER'].str.startswith('SM')) | (part['TYPE'].str.startswith('STA')) | (part['P_NAME'] == 'p') & (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] == 'SM')][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('count')

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] != 1079.8979692101364) & (part['BRAND'] == 'Brand#44') & (part['SIZE'] == 24) | (part['PT_COMMENT'] != 'i') & (part['BRAND'] != 'Brand#54')][['P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'P_NAME', 'CONTAINER']).agg('count')

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 1190.6458877083908) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] <= 20) | (supplier['S_ACCTBAL'] < 5903.136780518827) & (supplier['S_ACCTBAL'] >= 9258.611734394748) & (supplier['S_COMMENT'] == 'd')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] >= 8256.735392898856)].merge(nation[(nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 3804) & (partsupp['P_COMMENT'] != 'a')].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] >= 17) & (nation['N_REGIONKEY'] == 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 6056) & (partsupp['PS_SUPPKEY'] >= 4270) & (partsupp['AVAILQTY'] != 2284) & (partsupp['SUPPLYCOST'] <= 803.5813206250884)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 8723) | (partsupp['SUPPLYCOST'] <= 343.99484421038403) | (partsupp['P_COMMENT'] != 'u') & (partsupp['AVAILQTY'] <= 1967)].merge(part[(part['MFGR'] != 'Manufacturer#2') | (part['CONTAINER'].str.startswith('MED')) | (part['BRAND'] == 'Brand#53') & (part['P_NAME'].str.startswith('lin')) | (part['TYPE'] == 'P') & (part['RETAILPRICE'] <= 1059.6995845265333) & (part['P_NAME'] == 'n') & (part['MFGR'] == 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('h'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 7232) | (partsupp['P_COMMENT'] != 'p')][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'S') & (part['P_PARTKEY'] < 83) & (part['TYPE'] != 'S') & (part['PT_COMMENT'] == 's') | (part['P_NAME'].str.startswith('a')) & (part['RETAILPRICE'] < 1069.3613648809198) & (part['P_NAME'] == 'f') | (part['SIZE'] > 1) & (part['P_PARTKEY'] == 65)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 430) & (partsupp['PS_SUPPKEY'] != 1243)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] != 46) | (part['TYPE'].str.startswith('STA')) & (part['TYPE'] != 'L') | (part['P_PARTKEY'] == 27) & (part['BRAND'] != 'Brand#22') | (part['P_PARTKEY'] <= 186) & (part['TYPE'] != 'P') & (part['P_NAME'].str.startswith('f')) | (part['PT_COMMENT'] != 'i')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 5273) & (partsupp['PS_PARTKEY'] < 23) & (partsupp['PS_SUPPKEY'] != 2969) & (partsupp['AVAILQTY'] == 8878)].merge(part[(part['SIZE'] <= 28) | (part['BRAND'] == 'Brand#14') & (part['RETAILPRICE'] <= 1079.2332011260278) | (part['PT_COMMENT'].str.startswith('m')) & (part['P_PARTKEY'] >= 10) & (part['SIZE'] <= 5) | (part['PT_COMMENT'] != 'ly ') | (part['TYPE'].str.startswith('STA')) | (part['CONTAINER'] == 'LG')][['SIZE', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] >= 8372) & (partsupp['SUPPLYCOST'] > 592.1301661469392) & (partsupp['P_COMMENT'] != 'j') | (partsupp['P_COMMENT'].str.startswith('f'))].merge(part[(part['PT_COMMENT'] == 'r') & (part['PT_COMMENT'].str.startswith('r')) & (part['SIZE'] == 26) | (part['MFGR'] == 'Manufacturer#3') | (part['PT_COMMENT'].str.startswith(' fi')) & (part['TYPE'] == 'SMA')][['SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 36) | (partsupp['PS_PARTKEY'] == 43)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 2)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 33)].merge(supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] != 'j') | (supplier['S_PHONE'] != '26-') | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('!'))][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 40) & (partsupp['PS_PARTKEY'] < 22) | (partsupp['P_COMMENT'] != 'd') & (partsupp['PS_SUPPKEY'] == 6040)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] > 12) & (partsupp['AVAILQTY'] != 7013) | (partsupp['SUPPLYCOST'] < 139.56021479848565)].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_COMMENT'] == 'y') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] < 1387.083405445623)][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 14) | (partsupp['AVAILQTY'] < 3367) | (partsupp['SUPPLYCOST'] != 808.3543324803294) & (partsupp['AVAILQTY'] == 4902)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '28-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2946)].merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2'])) & (part['BRAND'].isin(['Brand#51', 'Brand#32', 'Brand#33', 'Brand#55', 'Brand#14', 'Brand#52', 'Brand#22', 'Brand#23', 'Brand#44', 'Brand#15', 'Brand#42', 'Brand#53', 'Brand#12', 'Brand#24', 'Brand#45', 'Brand#21', 'Brand#35', 'Brand#43', 'Brand#13', 'Brand#25'])) | (part['PT_COMMENT'].str.startswith('kag')) & (part['BRAND'] != 'Brand#51') | (part['RETAILPRICE'] > 956.7302168322675) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1'])) & (part['SIZE'] == 32)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2737) & (partsupp['SUPPLYCOST'] < 97.5777803410838) & (partsupp['PS_PARTKEY'] == 13) | (partsupp['PS_SUPPKEY'] == 6499)].merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'].str.startswith('m')) | (part['RETAILPRICE'] >= 1052.8133026036123) & (part['BRAND'] != 'Brand#45') & (part['RETAILPRICE'] != 1023.4385289561077)][['PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 4492) & (partsupp['P_COMMENT'].str.startswith('a'))][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['CONTAINER', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4556) & (partsupp['AVAILQTY'] != 9947) | (partsupp['SUPPLYCOST'] >= 156.59127000348892) | (partsupp['SUPPLYCOST'] >= 67.16638158317824) & (partsupp['SUPPLYCOST'] < 353.9915461338385)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'] == 'S') & (part['RETAILPRICE'] >= 1072.4596160424064) & (part['TYPE'].str.startswith('S')) & (part['P_NAME'] != 'f') & (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'] != 'd') | (part['BRAND'] == 'Brand#15') & (part['CONTAINER'].str.startswith('SM')) & (part['PT_COMMENT'] == 'l')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 5161) | (partsupp['PS_SUPPKEY'] == 4003) & (partsupp['P_COMMENT'] == 'o') & (partsupp['PS_SUPPKEY'] >= 1809) & (partsupp['AVAILQTY'] <= 7999)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'] != 'r') | (nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 7289) | (partsupp['SUPPLYCOST'] <= 945.9718167454172)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('m')) | (supplier['S_NATIONKEY'] < 4) & (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'] != 'O') | (supplier['S_COMMENT'] == 't') | (supplier['S_COMMENT'] != 'k')][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ';') | (partsupp['AVAILQTY'] < 5266)].merge(supplier[(supplier['S_ACCTBAL'] == 6674.022504479574) | (supplier['S_ADDRESS'].str.startswith('8')) | (supplier['S_COMMENT'] != 'a') | (supplier['S_NATIONKEY'] == 14) & (supplier['S_ADDRESS'] != 'C') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'u')].merge(nation[(nation['N_NATIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['AVAILQTY'] >= 8041) & (partsupp['SUPPLYCOST'] < 34.99335978096223) | (partsupp['SUPPLYCOST'] != 918.3243671432555) | (partsupp['PS_SUPPKEY'] >= 4308)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'c') | (partsupp['PS_SUPPKEY'] < 4707)].merge(supplier.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] != 1) & (nation['N_NAME'] == 'R')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'g') & (partsupp['PS_PARTKEY'] != 16) | (partsupp['SUPPLYCOST'] >= 762.0258169910176) | (partsupp['SUPPLYCOST'] == 788.2518396377603)].merge(supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'M')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'i') & (partsupp['PS_PARTKEY'] == 26) & (partsupp['PS_PARTKEY'] != 17) | (partsupp['SUPPLYCOST'] <= 431.62711944850355) & (partsupp['P_COMMENT'].str.startswith('v'))].merge(supplier[(supplier['S_SUPPKEY'] == 144) | (supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] != 187) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 1) & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['PS_SUPPKEY'] <= 4250) & (partsupp['AVAILQTY'] >= 196) | (partsupp['AVAILQTY'] == 7789)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] >= 61) | (part['P_NAME'] == 'blu') & (part['P_NAME'] == 'f') & (part['P_PARTKEY'] > 80) & (part['BRAND'].isin(['Brand#45', 'Brand#41', 'Brand#11', 'Brand#15', 'Brand#55', 'Brand#14', 'Brand#31', 'Brand#22', 'Brand#54', 'Brand#25', 'Brand#13', 'Brand#44', 'Brand#21', 'Brand#51', 'Brand#35', 'Brand#34', 'Brand#32', 'Brand#43', 'Brand#53', 'Brand#24', 'Brand#42', 'Brand#12'])) | (part['SIZE'] <= 17) | (part['PT_COMMENT'].str.startswith(' fi')) & (part['P_NAME'] == 'bis')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'x') & (partsupp['P_COMMENT'] == 'o') & (partsupp['PS_PARTKEY'] == 26)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_COMMENT'] == 'u') | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_ADDRESS'] == 'u') & (supplier['S_COMMENT'] != '.') | (supplier['S_SUPPKEY'] >= 15)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] != 14) | (partsupp['SUPPLYCOST'] == 842.3389356661952) & (partsupp['PS_SUPPKEY'] != 5557)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 986.6718885845992) & (part['P_PARTKEY'] < 179) | (part['P_NAME'] != 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('s'))].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('the'))][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['PT_COMMENT'].str.startswith('y')) | (part['P_PARTKEY'] != 51)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 899.3378378701691) | (partsupp['AVAILQTY'] < 9116) & (partsupp['P_COMMENT'] == 'o') | (partsupp['AVAILQTY'] >= 2095) | (partsupp['SUPPLYCOST'] < 545.8643309703036)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'] != 'f') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 184)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 158.92018575168703) & (partsupp['P_COMMENT'] == 'q') & (partsupp['PS_PARTKEY'] != 20) | (partsupp['SUPPLYCOST'] < 467.6182574995405) | (partsupp['AVAILQTY'] != 2921)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] >= 1005.4345750957531) | (part['TYPE'].str.startswith('L')) | (part['P_NAME'] != 'b') | (part['CONTAINER'] != 'SM') | (part['TYPE'] != 'P') & (part['TYPE'].str.startswith('M')) & (part['TYPE'] != 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('c')) & (part['TYPE'] == 'E') & (part['BRAND'] == 'Brand#11') & (part['BRAND'] == 'Brand#43') | (part['P_PARTKEY'] == 36) & (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] == 'l') & (part['RETAILPRICE'] >= 1061.438050353079)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'TYPE']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['SIZE'] != 15) & (part['PT_COMMENT'] != 'the')][['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] == 955.9288869349808) | (part['P_NAME'].str.startswith('r')) & (part['CONTAINER'] == 'JUMBO') & (part['CONTAINER'].str.startswith('LG')) | (part['P_PARTKEY'] >= 117) | (part['P_NAME'].str.startswith('t')) | (part['P_PARTKEY'] > 63)][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('SMA')) & (part['BRAND'] == 'Brand#45') | (part['BRAND'].isin(['Brand#31', 'Brand#55', 'Brand#13', 'Brand#41', 'Brand#25', 'Brand#22', 'Brand#52', 'Brand#11', 'Brand#33', 'Brand#43', 'Brand#24'])) & (part['P_NAME'].str.startswith('cor')) & (part['TYPE'] != 'L') | (part['SIZE'] <= 42) | (part['P_PARTKEY'] >= 170) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4'])) | (part['SIZE'] != 48)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 23) & (supplier['S_SUPPKEY'] <= 83) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] > 6) & (nation['N_NAME'] != 'C')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'MFGR', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE']).agg('count')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 110) & (supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_COMMENT'] == 'y')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] != 17) & (supplier['S_ADDRESS'] == 'f') | (supplier['S_SUPPKEY'] < 172) | (supplier['S_NATIONKEY'] <= 20) | (supplier['S_ACCTBAL'] > 9616.024754760949) | (supplier['S_PHONE'] == '14-') | (supplier['S_ADDRESS'] != 'V')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['MFGR', 'BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#41') | (part['MFGR'] == 'Manufacturer#3') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2'])) & (part['BRAND'] == 'Brand#31') | (part['PT_COMMENT'] == 'a') | (part['TYPE'].str.startswith('P')) & (part['RETAILPRICE'] >= 975.3325009955781)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'MFGR']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] <= 21) | (nation['N_NATIONKEY'] > 9)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] <= 11)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'A') & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] != 9) | (nation['N_NATIONKEY'] < 7)].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 362.7786530965859)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 6398.553999768436) | (supplier['S_NATIONKEY'] < 15) & (supplier['S_ADDRESS'] != 'r') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'bli') | (supplier['S_ADDRESS'] != 'l') | (supplier['S_ADDRESS'].str.startswith('Z'))][['S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] == 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 1269.3459190015085) & (supplier['S_SUPPKEY'] != 32) & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NATIONKEY'] < 12) | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'n')].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'].str.startswith('t')) & (nation['N_NATIONKEY'] <= 23) & (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 4186.100212046395) | (supplier['S_ADDRESS'] != 'F') | (supplier['S_ACCTBAL'] < 6307.29696572729)].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] > 13)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > -0.5704092285908473) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'y') & (supplier['S_SUPPKEY'] > 75)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > -198.62363908168868)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 3116.9082770289842) & (supplier['S_SUPPKEY'] < 108) | (supplier['S_ACCTBAL'] >= 4712.991290722805)].merge(nation[(nation['N_NATIONKEY'] > 7) & (nation['N_NATIONKEY'] <= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 4427.457337776058) & (supplier['S_ADDRESS'] != 'W') | (supplier['S_ACCTBAL'] >= 7206.622495796874) | (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_PHONE'].str.startswith('17-'))].merge(nation[(nation['N_NATIONKEY'] < 2) & (nation['N_COMMENT'] != 'h')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 8812.177271947186) | (supplier['S_NATIONKEY'] == 7) | (supplier['S_COMMENT'] == 't') | (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] >= 7)][['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'S') & (supplier['S_SUPPKEY'] == 29) | (supplier['S_COMMENT'] != 'y') | (supplier['S_SUPPKEY'] < 195) & (supplier['S_SUPPKEY'] < 95)][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'k') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_COMMENT'] != '.') | (supplier['S_ADDRESS'] == 'i') | (supplier['S_NATIONKEY'] != 6) & (supplier['S_COMMENT'] == 'b')].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'] == 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'r') | (supplier['S_SUPPKEY'] <= 166) | (supplier['S_PHONE'] != '28-') & (supplier['S_COMMENT'] != 'u') & (supplier['S_NATIONKEY'] < 20) & (supplier['S_NATIONKEY'] <= 19)].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('C')) & (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'h')][['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > -370.2938351834031)][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NATIONKEY'] <= 8)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 19) & (supplier['S_ADDRESS'] != 'w') & (supplier['S_PHONE'] != '32-')][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 196) | (supplier['S_SUPPKEY'] <= 4) & (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NAME'] != 'S')][['S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'G')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 17) & (supplier['S_ADDRESS'] != 'S') | (supplier['S_SUPPKEY'] >= 56) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '1') | (supplier['S_ACCTBAL'] != 3401.2487540360808) | (supplier['S_ACCTBAL'] < 8453.74703688765)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 22)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 14) | (nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'].str.startswith('a'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 6) & (supplier['S_NATIONKEY'] != 17) & (supplier['S_ACCTBAL'] > 2918.6796817935983)][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 14) | (supplier['S_ADDRESS'] != 'v')].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] < 5)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] == '26-')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_ACCTBAL'] != 7604.436007550882) | (supplier['S_SUPPKEY'] >= 104) & (supplier['S_ACCTBAL'] != 932.5565201339775)][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] != 'n') | (supplier['S_NATIONKEY'] != 15) & (supplier['S_ACCTBAL'] >= -316.74747389339984)].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] > 17)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 149) & (supplier['S_COMMENT'] == ',') & (supplier['S_NATIONKEY'] == 2) & (supplier['S_NATIONKEY'] <= 21)].merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 30)][['S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] != 'e')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] >= 53) | (supplier['S_ACCTBAL'] == 7966.304775915368) | (supplier['S_PHONE'] != '14-') | (supplier['S_NATIONKEY'] <= 12) | (supplier['S_PHONE'] != '32-')].merge(nation.merge(region[(region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 20) | (nation['N_NATIONKEY'] <= 14)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 15)].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'G')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] < 12)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] == -337.37602215883135) & (customer['C_ADDRESS'] == 'M') & (customer['C_PHONE'] != '18-') & (customer['C_COMMENT'].str.startswith('u'))][['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 2795.996292298734) & (customer['C_CUSTKEY'] <= 33) & (customer['C_ACCTBAL'] < 1786.1152074403699) & (customer['C_CUSTKEY'] <= 61) | (customer['C_NATIONKEY'] == 11) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] != 5718.928771876922)].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 6303.638629286463) & (customer['C_COMMENT'] == 'a') & (customer['C_CUSTKEY'] <= 65) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'i') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('H')) | (customer['C_CUSTKEY'] < 7) | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('B'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'a') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] <= 56) | (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_ADDRESS'] != 'o')].merge(nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_NAME'] != 'A') | (nation['N_COMMENT'].str.startswith('o'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'g')][['C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] != 'c')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_CUSTKEY'] <= 13) | (customer['C_ACCTBAL'] != 1445.8600022932574) | (customer['C_ADDRESS'] != 'K') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NATIONKEY'] > 11)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 16) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] <= 68) & (customer['C_NATIONKEY'] > 3)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'u') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 13) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '25-') & (customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] <= 38) & (customer['C_ACCTBAL'] != 9798.911106780335) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'g')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 44) | (customer['C_ADDRESS'] == 'B') & (customer['C_NATIONKEY'] > 7) | (customer['C_CUSTKEY'] == 91) | (customer['C_NAME'] == 'C')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_CUSTKEY'] > 16) | (customer['C_COMMENT'].str.startswith('q')) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'] != '2') | (customer['C_CUSTKEY'] == 69) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY'])) | (customer['C_NATIONKEY'] != 12)][['C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 18) & (customer['C_CUSTKEY'] <= 96) & (customer['C_CUSTKEY'] == 81) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ACCTBAL'] < 2014.9392318133664) & (customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] >= 18) | (nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'] != 'r')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('v')) | (customer['C_ADDRESS'] == 'h') | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] != 6042.450060195384) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'w')][['C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 14) & (customer['C_COMMENT'] != 'l')].merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 17) | (customer['C_ADDRESS'].str.startswith('s')) & (customer['C_ADDRESS'].str.startswith('K')) | (customer['C_COMMENT'] != 'u') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 3) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] < 12)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '2') & (customer['C_ADDRESS'] != ',') | (customer['C_CUSTKEY'] <= 50) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('u')) & (customer['C_NATIONKEY'] <= 22) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 5537.270729947032)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('Y'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NATIONKEY'] < 11) | (customer['C_CUSTKEY'] != 19) & (customer['C_ADDRESS'] == 'H') & (customer['C_NAME'] != 'C')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'].str.startswith('z')) & (customer['C_ACCTBAL'] != 6343.262265891962) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'p') & (customer['C_PHONE'].str.startswith('3'))][['C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] != 'i') | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'] == 'D') | (customer['C_CUSTKEY'] >= 13) & (customer['C_CUSTKEY'] != 16) & (customer['C_CUSTKEY'] >= 58) & (customer['C_ACCTBAL'] > 7264.959996870537) & (customer['C_CUSTKEY'] > 77)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] >= 16) & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[['C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 15) & (nation['N_REGIONKEY'] != 3)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] < 10)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] != 22) & (nation['N_NATIONKEY'] < 7)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] > 2) & (nation['N_COMMENT'].str.startswith('e'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_NATIONKEY'] >= 22) | (customer['C_NATIONKEY'] == 22) & (customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] == 69)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 1) & (nation['N_NAME'] != 'U')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['PT_COMMENT'] == 't') & (part['TYPE'] != 'S') & (part['PT_COMMENT'].str.startswith('x')) & (part['PT_COMMENT'] == 't') | (part['P_PARTKEY'] == 122)][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('count')

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] < 22)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

lineitem.merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] != 18)].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3939)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 3) & (nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'] != 't') | (nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 421.6897245296626)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] < 58) & (part['CONTAINER'] == 'JUMBO') | (part['SIZE'] != 30) | (part['SIZE'] > 44)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'SIZE', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_COMMENT'] == 'ly ') & (lineitem['LINENUMBER'] <= 3)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 1155) & (partsupp['SUPPLYCOST'] <= 592.8728663087853)].merge(part[(part['BRAND'] == 'Brand#42') & (part['SIZE'] == 45) | (part['PT_COMMENT'] == 'ly ')][['SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_COMMENT'] == 'o') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_PARTKEY'] >= 148767) & (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP', 'FOB', 'TRUCK', 'MAIL', 'REG AIR']))][['QUANTITY', 'SHIPDATE', 'L_ORDERKEY', 'TAX', 'L_SUPPKEY']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.024202196132117618) | (lineitem['LINENUMBER'] > 5)].merge(partsupp.merge(part[(part['MFGR'] == 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('o')) | (part['TYPE'].str.startswith('S')) & (part['P_NAME'] == 'c')][['P_NAME', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 45290.37162201739) | (lineitem['COMMITDATE'] == '1992-05-15')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 619.623833405432) & (partsupp['PS_PARTKEY'] == 14) & (partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['PS_SUPPKEY'] < 4476) | (partsupp['AVAILQTY'] >= 736)].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] > 12948.476839134857) | (lineitem['L_ORDERKEY'] < 5) | (lineitem['TAX'] >= 0.03963664637530309)][['TAX', 'L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'EXTENDEDPRICE', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 7184) & (partsupp['SUPPLYCOST'] <= 824.9621329629892)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] < 163)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 39) | (partsupp['SUPPLYCOST'] > 826.1896730320927) & (partsupp['PS_PARTKEY'] > 20) | (partsupp['SUPPLYCOST'] < 909.5899219535688) & (partsupp['PS_SUPPKEY'] == 6726)].merge(supplier[(supplier['S_ACCTBAL'] < 4029.5265554633015)][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] == 137) & (lineitem['LINENUMBER'] == 5) & (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['EXTENDEDPRICE'] <= 38762.29120219168)][['L_COMMENT', 'TAX', 'RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] < 5473) & (lineitem['LINENUMBER'] >= 3) & (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['DISCOUNT'] <= 0.04703501627879219) & (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_PARTKEY'] == 158455) | (lineitem['L_PARTKEY'] != 8140) & (lineitem['RETURNFLAG'] != 'R')][['RETURNFLAG', 'L_SUPPKEY', 'SHIPDATE', 'COMMITDATE', 'DISCOUNT', 'RECEIPTDATE', 'LINENUMBER']].groupby(by=['RECEIPTDATE', 'LINENUMBER', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 14) | (lineitem['L_SUPPKEY'] <= 409)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_COMMENT'] == 't') & (lineitem['L_ORDERKEY'] != 65) & (lineitem['L_PARTKEY'] < 152901) & (lineitem['QUANTITY'] <= 21) | (lineitem['L_SUPPKEY'] < 5706) | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['RECEIPTDATE'] == '1992-05-02')].merge(partsupp.merge(part[['P_NAME', 'SIZE', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['LINENUMBER'] >= 5) & (lineitem['L_COMMENT'] == 'p') | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_PARTKEY'] >= 17380) & (lineitem['L_PARTKEY'] != 11566) & (lineitem['L_PARTKEY'] <= 76831)][['LINESTATUS', 'QUANTITY', 'L_COMMENT', 'TAX', 'SHIPDATE', 'RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE']].groupby(by=['TAX', 'RETURNFLAG']).agg('count')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['QUANTITY'] <= 24) & (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL', 'FOB', 'AIR', 'TRUCK', 'SHIP', 'MAIL'])) & (lineitem['RECEIPTDATE'] <= '1992-05-02')].merge(partsupp[(partsupp['AVAILQTY'] == 4640) | (partsupp['PS_SUPPKEY'] != 6741) | (partsupp['P_COMMENT'].str.startswith('y'))].merge(supplier[(supplier['S_ADDRESS'] == 'j')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_COMMENT', 'S_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['COMMITDATE'] == '1992-05-15')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1787) & (partsupp['AVAILQTY'] != 5899)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['DISCOUNT'] > 0.08878951229838884) & (lineitem['L_ORDERKEY'] != 98) | (lineitem['LINENUMBER'] < 2)][['SHIPMODE', 'L_COMMENT', 'QUANTITY', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp.merge(part[['P_NAME', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['LINENUMBER'] == 2) | (lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[['SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.05786603654555068) & (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] < 0.025354129659233404) & (lineitem['QUANTITY'] != 40) & (lineitem['EXTENDEDPRICE'] <= 84434.39384323773) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['LINESTATUS'] != 'F') | (lineitem['LINENUMBER'] != 5) & (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['L_ORDERKEY'] != 97)].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.013169439062927514)].merge(orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] >= 75266) | (orders['O_ORDERKEY'] >= 34) | (orders['O_ORDERKEY'] != 210)][['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT']).agg('mean', numeric_only=True)

lineitem[['DISCOUNT', 'L_SUPPKEY', 'SHIPDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'COMMITDATE', 'SHIPMODE', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 749.9493163377188)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'WRAP') & (part['P_PARTKEY'] > 96) & (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_COMMENT', 'RECEIPTDATE', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('B'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'SHIPDATE', 'L_COMMENT', 'TAX']].merge(orders.merge(customer.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'SHIPMODE', 'LINESTATUS', 'DISCOUNT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 559.9560163392455) | (partsupp['PS_SUPPKEY'] != 6325) & (partsupp['AVAILQTY'] == 2184) | (partsupp['SUPPLYCOST'] <= 771.1728811934393)].merge(part[['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'TAX', 'L_PARTKEY', 'DISCOUNT', 'SHIPMODE', 'EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT']].merge(partsupp.merge(part[(part['P_PARTKEY'] == 145) | (part['P_NAME'].str.startswith('n')) & (part['BRAND'] == 'Brand#42') | (part['PT_COMMENT'] != 's')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'DISCOUNT', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != 'r')][['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'RETURNFLAG', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] > 239.80867979438224) | (partsupp['PS_PARTKEY'] < 8)].merge(part[['SIZE', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] != 5)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('p')) | (customer['C_ADDRESS'] != 'd') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] == 'y') | (customer['C_PHONE'] != '25-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 4) | (customer['C_ACCTBAL'] > 1131.3715156600488)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] < 8) & (customer['C_ACCTBAL'] != 8954.263243217874) & (customer['C_NATIONKEY'] > 3) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] != 20)].merge(nation[(nation['N_COMMENT'] != 'r')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] == 20) | (customer['C_COMMENT'] == 'f')].merge(nation.merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 27) | (customer['C_ADDRESS'] != 'R') & (customer['C_NATIONKEY'] == 18) | (customer['C_PHONE'] != '2') & (customer['C_COMMENT'] == ',')].merge(nation[(nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('K')) & (customer['C_NATIONKEY'] != 5) | (customer['C_ADDRESS'] == 'M') & (customer['C_ADDRESS'] != 'g')][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] != 'e')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE', 'BUILDING']))][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('v'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'] != 'P') & (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '5-LOW', '3-MEDIUM'])) | (orders['CLERK'] != 'C')][['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_COMMENT'] != 'q') & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 175978.2120504319) & (orders['ORDERDATE'] == '1992-01-13')].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_COMMENT'] == ' ') | (orders['TOTALPRICE'] != 140392.58938722618) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_CUSTKEY'] == 24) & (customer['C_PHONE'] != '25-') & (customer['C_COMMENT'].str.startswith('i')) | (customer['C_ACCTBAL'] != 1578.9497793927208) | (customer['C_ACCTBAL'] >= 1604.9757194273257) | (customer['C_CUSTKEY'] != 43)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] != 123030)].merge(customer[(customer['C_ADDRESS'] != 'l') & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) | (customer['C_ACCTBAL'] < -708.5596086101673) & (customer['C_ADDRESS'] != 'J')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['O_COMMENT'] == '-') | (orders['TOTALPRICE'] > 217908.55975690676) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1992-01-13')][['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'] != 'w') | (customer['C_COMMENT'].str.startswith('y')) | (customer['C_PHONE'] != '25-') | (customer['C_ADDRESS'] == 'o')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['CLERK'] == 'C')].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] != 10) & (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_COMMENT'].str.startswith('u')) & (orders['TOTALPRICE'] == 75158.22634259064) | (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ADDRESS'].str.startswith('m')) | (customer['C_NATIONKEY'] == 13) & (customer['C_ACCTBAL'] >= 7033.283288275469) & (customer['C_NATIONKEY'] <= 19) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '5-LOW')].merge(customer.merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] <= 1) & (nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_ORDERKEY'] >= 578) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] <= 117240)].merge(customer[(customer['C_ACCTBAL'] < 2193.706387387011) & (customer['C_COMMENT'] != 'u') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) | (customer['C_NATIONKEY'] > 21)][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('count')

orders[(orders['O_COMMENT'] != 'f') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] != 149437) & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] != 'F') & (orders['CLERK'] == 'C')][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']].groupby(by=['O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] != 'u')][['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

orders[(orders['O_COMMENT'] == ',') | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'].str.startswith('y')) | (orders['CLERK'] == 'C')][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 6820) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] < 106713) | (orders['TOTALPRICE'] < 103663.0141005326)].merge(customer[(customer['C_CUSTKEY'] == 13) | (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NATIONKEY'] <= 22)].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] != 'e')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 131451) & (orders['TOTALPRICE'] < 148469.34649286998) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'O') & (orders['O_CUSTKEY'] != 80158) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] != 109765)].merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C'))][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 762) | (orders['TOTALPRICE'] > 69157.89434816882) | (orders['O_ORDERKEY'] <= 191) & (orders['O_CUSTKEY'] <= 59419) | (orders['O_COMMENT'] != 'g') & (orders['O_COMMENT'] == ' ') | (orders['SHIPPRIORITY'] <= 0)].merge(customer[['C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_CUSTKEY'] > 11209) & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] == 62648) & (orders['O_CUSTKEY'] <= 63327)][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] > 7) | (nation['N_NAME'].str.startswith('K'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] == 86298.47463224657) | (orders['CLERK'].str.startswith('C'))][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0)].merge(customer.merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] < 2) & (nation['N_COMMENT'] != 'o')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] >= 681) | (orders['TOTALPRICE'] != 263565.98458278296) & (orders['O_COMMENT'] != 'r')].merge(customer[(customer['C_ACCTBAL'] > 6979.846677376673)].merge(nation[(nation['N_NATIONKEY'] == 12) & (nation['N_NATIONKEY'] >= 12) & (nation['N_NAME'] != 'U') & (nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 254879.82435406017) & (orders['TOTALPRICE'] == 186337.06918285435) & (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['O_COMMENT'] != 'z') | (orders['O_CUSTKEY'] > 1709) & (orders['O_CUSTKEY'] < 74076) & (orders['O_COMMENT'].str.startswith('l')) & (orders['TOTALPRICE'] < 60754.41098256865) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))].merge(customer[(customer['C_ADDRESS'].str.startswith('K')) | (customer['C_CUSTKEY'] == 66) & (customer['C_CUSTKEY'] < 60) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] < 8)][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_PHONE'] != '13-')][['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] != 'G') | (nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#35') & (part['SIZE'] < 45) | (part['MFGR'].isin(['Manufacturer#5'])) | (part['RETAILPRICE'] != 970.4368316754462) | (part['P_NAME'] == 'n') & (part['RETAILPRICE'] != 1065.0553472272036) | (part['MFGR'] != 'Manufacturer#4') & (part['CONTAINER'].str.startswith('LG'))][['P_PARTKEY', 'P_NAME', 'MFGR', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']].groupby(by=['BRAND', 'P_NAME', 'MFGR']).agg('count')

part[(part['PT_COMMENT'] == 'r') | (part['BRAND'] == 'Brand#54') & (part['CONTAINER'] != 'LG') & (part['PT_COMMENT'] == 'the') & (part['RETAILPRICE'] < 1037.5362864166862) | (part['SIZE'] <= 35) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['TYPE'] != 'M') | (part['P_PARTKEY'] >= 69)][['P_PARTKEY', 'MFGR', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['CONTAINER', 'BRAND', 'MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'h') | (part['SIZE'] >= 41) | (part['P_PARTKEY'] == 164) | (part['P_NAME'] == 'r') & (part['P_PARTKEY'] >= 121) | (part['SIZE'] >= 30) & (part['SIZE'] <= 32) | (part['BRAND'].isin(['Brand#53', 'Brand#42', 'Brand#55', 'Brand#54', 'Brand#44', 'Brand#51', 'Brand#12', 'Brand#43', 'Brand#14', 'Brand#13', 'Brand#35', 'Brand#11', 'Brand#23', 'Brand#32', 'Brand#34', 'Brand#24', 'Brand#41', 'Brand#31', 'Brand#15', 'Brand#25', 'Brand#22', 'Brand#52']))][['TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND', 'MFGR']].groupby(by=['SIZE', 'BRAND', 'TYPE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_NAME'].str.startswith('b')) | (part['P_PARTKEY'] != 35) | (part['P_NAME'].str.startswith('a')) | (part['TYPE'].str.startswith('E')) & (part['PT_COMMENT'] != 'l') & (part['P_PARTKEY'] != 120) & (part['BRAND'] == 'Brand#33') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) & (part['P_PARTKEY'] >= 47)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'PT_COMMENT']].groupby(by=['P_NAME', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('f')) & (part['RETAILPRICE'] <= 949.8568591034698) & (part['PT_COMMENT'] == 'ly ') | (part['TYPE'] != 'STA') | (part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] != 45) & (part['P_PARTKEY'] >= 101) | (part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'] != 'm')][['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['P_NAME', 'MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('lem')) | (part['BRAND'].isin(['Brand#53', 'Brand#11', 'Brand#55', 'Brand#22', 'Brand#44', 'Brand#14', 'Brand#15', 'Brand#21'])) | (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'] != 'o') & (part['P_NAME'] == 'v') | (part['RETAILPRICE'] >= 1037.1401004744228) | (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'S') & (part['CONTAINER'].str.startswith('WRAP'))][['P_NAME', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND']].groupby(by=['BRAND', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['SIZE'] <= 41) | (part['PT_COMMENT'].str.startswith('d')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2'])) | (part['P_PARTKEY'] > 15) & (part['RETAILPRICE'] > 925.6293329264801) & (part['PT_COMMENT'] == 'd') | (part['P_NAME'] != 'i') & (part['P_NAME'] != 'c')][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']].groupby(by=['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] != 'm') | (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] != 88) | (part['CONTAINER'] == 'MED') & (part['RETAILPRICE'] == 992.7578995016963) & (part['SIZE'] <= 34) & (part['PT_COMMENT'] != ' fi')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 4042.1065546013615) | (supplier['S_ACCTBAL'] == 7069.18384971868) & (supplier['S_COMMENT'] == 'al ')][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'f') | (supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_ACCTBAL'] > 6614.6130761498325) & (supplier['S_SUPPKEY'] < 49) & (supplier['S_PHONE'] != '3') | (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 6346) & (partsupp['PS_SUPPKEY'] < 60) | (partsupp['PS_PARTKEY'] == 9)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 8743.91426120597) & (supplier['S_SUPPKEY'] <= 8) | (supplier['S_COMMENT'] == 'al ')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 3922) | (partsupp['SUPPLYCOST'] > 36.50045463520132) & (partsupp['AVAILQTY'] < 1902)].merge(part[(part['P_NAME'] == 'bis') & (part['P_NAME'] != 'v') & (part['TYPE'].str.startswith('L')) & (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('t')) | (part['SIZE'] > 20)][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 10) | (partsupp['SUPPLYCOST'] == 86.23347648877508) & (partsupp['AVAILQTY'] == 5793)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] > 15) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ADDRESS'] == '2')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 43) | (partsupp['P_COMMENT'].str.startswith('x'))][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != 'bli') & (supplier['S_ADDRESS'].str.startswith('S')) | (supplier['S_ACCTBAL'] > 9366.356786581093) & (supplier['S_SUPPKEY'] != 12)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 27)].merge(part[(part['SIZE'] != 35) | (part['P_NAME'] != 'w') | (part['TYPE'] == 'S') | (part['RETAILPRICE'] >= 922.7977204631866) & (part['MFGR'] == 'Manufacturer#3') | (part['SIZE'] <= 19) | (part['MFGR'] != 'Manufacturer#2')][['BRAND', 'P_PARTKEY', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 31) | (partsupp['PS_PARTKEY'] < 13) & (partsupp['SUPPLYCOST'] != 477.4724802178696) | (partsupp['SUPPLYCOST'] <= 551.4704760237674)].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] == 40) | (partsupp['AVAILQTY'] <= 1694)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] == 'Q') & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ACCTBAL'] <= 2441.094972367003) & (supplier['S_NATIONKEY'] != 21) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_ACCTBAL'] > 448.03228004947596)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 10) | (partsupp['PS_SUPPKEY'] != 273)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 24) | (partsupp['PS_SUPPKEY'] != 3242) | (partsupp['PS_SUPPKEY'] != 5721) & (partsupp['AVAILQTY'] == 3957) & (partsupp['AVAILQTY'] <= 4482)].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 1311) & (partsupp['PS_SUPPKEY'] >= 1573) & (partsupp['PS_PARTKEY'] == 10) & (partsupp['PS_SUPPKEY'] > 1272)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 1)].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 2759)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] < 70) | (part['P_NAME'].str.startswith('p')) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] != 'Brand#51') | (part['TYPE'] != 'L') | (part['BRAND'].isin(['Brand#24', 'Brand#55', 'Brand#54', 'Brand#34', 'Brand#22', 'Brand#52'])) | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'j')][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_PHONE'] != '17-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'n') & (supplier['S_SUPPKEY'] > 74)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'c')][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['TYPE'] != 'L') & (part['RETAILPRICE'] == 995.4213134549032) | (part['SIZE'] > 44) & (part['P_PARTKEY'] == 17)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#1') & (part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] != 1030.2384594410582) | (part['SIZE'] <= 41) & (part['P_PARTKEY'] > 1) & (part['SIZE'] <= 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 596.1882822467542) | (partsupp['PS_SUPPKEY'] > 5163) & (partsupp['P_COMMENT'] != 'e') | (partsupp['PS_SUPPKEY'] == 570)].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 973.6585242084053) | (partsupp['PS_PARTKEY'] < 6)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) & (part['PT_COMMENT'] != 'e') & (part['PT_COMMENT'].str.startswith('the')) & (part['CONTAINER'].str.startswith('SM')) & (part['PT_COMMENT'].str.startswith('u'))][['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 721.2321943015476) & (partsupp['P_COMMENT'] == 'e') & (partsupp['AVAILQTY'] != 4231)].merge(supplier[(supplier['S_SUPPKEY'] >= 187)][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] >= 19) | (nation['N_REGIONKEY'] != 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 766.2533295744429) & (partsupp['AVAILQTY'] != 47) | (partsupp['AVAILQTY'] >= 6309)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ACCTBAL'] != 4755.386368379912) | (supplier['S_ADDRESS'] == 'P') & (supplier['S_SUPPKEY'] != 116)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 343.2355229550269) & (partsupp['PS_SUPPKEY'] <= 5911) & (partsupp['AVAILQTY'] == 4737)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['SIZE'] > 9) | (part['CONTAINER'] != 'SM') | (part['BRAND'] != 'Brand#42') | (part['SIZE'] <= 21) | (part['TYPE'] == 'L') & (part['PT_COMMENT'] == 'l') | (part['PT_COMMENT'] != 'q') | (part['BRAND'] == 'Brand#35') & (part['CONTAINER'] != 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] < 1062.3866853274687) | (part['CONTAINER'].str.startswith('WRAP'))][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_SUPPKEY'] > 70) | (supplier['S_SUPPKEY'] == 60) | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] <= 952.6141655939417) & (part['TYPE'] != 'STA') & (part['TYPE'] == 'SMA') | (part['PT_COMMENT'].str.startswith('p')) | (part['CONTAINER'].str.startswith('MED')) & (part['P_PARTKEY'] <= 23) & (part['MFGR'] != 'Manufacturer#4') & (part['RETAILPRICE'] == 950.4213053541577)][['SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 4) | (supplier['S_COMMENT'] != 'es ')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] <= 23) & (nation['N_NAME'].str.startswith('E'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 4) | (nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'D') & (supplier['S_COMMENT'] == 'b')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#42') & (part['PT_COMMENT'] == 'y') | (part['TYPE'] != 'S') & (part['RETAILPRICE'] <= 1011.6377057896739) | (part['TYPE'] != 'SMA') & (part['P_NAME'] == 's') | (part['P_NAME'].str.startswith('t')) | (part['RETAILPRICE'] < 992.563474783156) & (part['PT_COMMENT'].str.startswith('y'))][['RETAILPRICE', 'SIZE', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_ACCTBAL'] == -750.7005011782694) & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_ACCTBAL'] > 8215.171056870484) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] != 'Z') & (supplier['S_ADDRESS'] == 'P')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 3191.1842129504184) & (supplier['S_ADDRESS'] == '7')][['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'q') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'O') & (supplier['S_ACCTBAL'] >= 395.2412915306186) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith(' sl'))].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] < 11) & (nation['N_NAME'].str.startswith('A')) & (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 1) | (supplier['S_ACCTBAL'] != 9004.056211780275) & (supplier['S_COMMENT'] == 'x') & (supplier['S_ACCTBAL'] < 7745.350082263719) & (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'].str.startswith('s'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'] != '2') | (supplier['S_PHONE'] != '28-') & (supplier['S_SUPPKEY'] >= 101) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'] == ',') & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 't')][['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] == 'q') & (supplier['S_ACCTBAL'] < 9108.72552116525) | (supplier['S_COMMENT'] == 'n')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 2) | (supplier['S_ACCTBAL'] > 6565.466648264683)].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] <= 23) | (nation['N_NATIONKEY'] == 11) | (nation['N_NATIONKEY'] != 20)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] <= 22)][['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] != 15) & (nation['N_NAME'].str.startswith('J'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 46) | (supplier['S_ACCTBAL'] <= 378.5799628913612) & (supplier['S_ADDRESS'] != '6') | (supplier['S_ADDRESS'] == 'x') & (supplier['S_NATIONKEY'] != 9)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 16) & (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] > 2) | (nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('l'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] > -141.00321981297736) & (customer['C_PHONE'] != '25-') & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 8443.366396728063)].merge(nation[(nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] > 1124.0268627159228) & (customer['C_ACCTBAL'] > 3127.231430371225) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 59)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] <= 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 6488.304351138193) & (customer['C_COMMENT'] == 'n') & (customer['C_ACCTBAL'] < 528.8940780218386) & (customer['C_NATIONKEY'] == 2) | (customer['C_CUSTKEY'] < 86) & (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 6188.481753019214) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 34) & (customer['C_ACCTBAL'] <= 6997.324772600475) | (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('b'))].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] != 3) & (nation['N_NATIONKEY'] == 14)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'g') | (customer['C_CUSTKEY'] < 18) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] <= 7854.585141023677) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'MACHINERY']))].merge(nation[(nation['N_NATIONKEY'] != 3) | (nation['N_NATIONKEY'] != 6) | (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('a'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'u') & (customer['C_NATIONKEY'] > 13) & (customer['C_ACCTBAL'] == 6181.550898047535)][['C_PHONE', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'c') & (customer['C_ACCTBAL'] > 5482.458057640323) & (customer['C_CUSTKEY'] == 71) | (customer['C_ACCTBAL'] < 4762.504114172086) | (customer['C_COMMENT'] != 'h') & (customer['C_CUSTKEY'] > 47)][['C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'h') & (customer['C_CUSTKEY'] < 19) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] < 8)][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'l') & (customer['C_COMMENT'].str.startswith('i')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] > 21) & (customer['C_ACCTBAL'] != 4318.808243485237) | (customer['C_NATIONKEY'] != 6) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] != 'K')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] > 3314.166136700641) & (customer['C_PHONE'] != '27-') & (customer['C_COMMENT'] != 'k') | (customer['C_COMMENT'] != 'q')][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_NATIONKEY'] < 12) & (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] > 85) & (customer['C_ACCTBAL'] >= -871.4471878963218) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_PHONE'] == '18-') | (customer['C_COMMENT'] != 'a')].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] <= 14) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] > 1639.7727386668394) & (customer['C_PHONE'] == '22-') | (customer['C_NATIONKEY'] > 2) & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 21)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '1') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] >= 28) | (customer['C_COMMENT'] == 'p') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'] != 'w') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'u') & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] < 2807.891047945731)].merge(nation[(nation['N_NATIONKEY'] >= 21)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NAME'].str.startswith('B')) & (nation['N_NATIONKEY'] <= 23) | (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'] == 'A') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] == 6)].merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'AFR') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 18)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 9) & (nation['N_NAME'] != 'U') | (nation['N_NAME'] == 'E') | (nation['N_COMMENT'] != 'r')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 9)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 6)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] < 251224.47257564525) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] == 296558.30927489226) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_CUSTKEY'] >= 9) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_COMMENT'] == '.') & (customer['C_ADDRESS'] == '7') | (customer['C_ACCTBAL'] != 1454.6115479622372) | (customer['C_COMMENT'] == 'n') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE']))].merge(nation[(nation['N_NATIONKEY'] >= 4)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING')][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 1686) | (partsupp['SUPPLYCOST'] <= 863.502425438896)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#41') & (part['TYPE'] != 'M') & (part['RETAILPRICE'] >= 946.5686267370477) | (part['P_NAME'].str.startswith('y')) | (part['BRAND'].isin(['Brand#21', 'Brand#45', 'Brand#44', 'Brand#31', 'Brand#42', 'Brand#23', 'Brand#54', 'Brand#15', 'Brand#32', 'Brand#53']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'TYPE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 14) | (partsupp['P_COMMENT'] != 'l')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 4316) | (partsupp['AVAILQTY'] == 4512) & (partsupp['PS_SUPPKEY'] < 4362)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'U') | (nation['N_NATIONKEY'] <= 6)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'TYPE', 'BRAND']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.03474830291321356) & (lineitem['L_ORDERKEY'] == 174) | (lineitem['LINESTATUS'] == 'O') | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['DISCOUNT'] < 0.028022834090429962) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINENUMBER'] > 2) | (lineitem['L_SUPPKEY'] >= 8139) | (lineitem['LINENUMBER'] >= 5) | (lineitem['LINENUMBER'] >= 5)][['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'TAX', 'COMMITDATE', 'L_COMMENT', 'L_ORDERKEY', 'RETURNFLAG']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['LINESTATUS'] == 'F') & (lineitem['L_COMMENT'].str.startswith('u')) & (lineitem['EXTENDEDPRICE'] != 37474.56536659355) & (lineitem['L_SUPPKEY'] > 9748) | (lineitem['L_COMMENT'] == 'h') | (lineitem['L_COMMENT'].str.startswith('u'))].merge(partsupp[(partsupp['SUPPLYCOST'] != 189.57144951107236) & (partsupp['AVAILQTY'] < 2906) & (partsupp['PS_SUPPKEY'] >= 6656) & (partsupp['AVAILQTY'] > 6249) & (partsupp['PS_PARTKEY'] < 22)].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 109) | (lineitem['TAX'] == 0.0022177793702659087) & (lineitem['SHIPDATE'] <= '1998-10-30')][['L_PARTKEY', 'DISCOUNT', 'RECEIPTDATE', 'TAX']].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 137) & (lineitem['QUANTITY'] <= 24) | (lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_PARTKEY'] <= 15195) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] == 6) & (lineitem['EXTENDEDPRICE'] == 27808.322979693512)].merge(partsupp[(partsupp['PS_PARTKEY'] != 36)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 9044) & (lineitem['L_COMMENT'].str.startswith('s')) & (lineitem['EXTENDEDPRICE'] <= 49992.902442444596) & (lineitem['LINENUMBER'] > 1)][['L_PARTKEY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3510) & (partsupp['SUPPLYCOST'] != 963.4142333485346) & (partsupp['AVAILQTY'] <= 2973)].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['L_ORDERKEY'] != 93) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_PARTKEY'] == 67604) | (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP'])) & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['DISCOUNT'] <= 0.070037665405211) | (lineitem['L_COMMENT'] != ' ca') & (lineitem['L_PARTKEY'] == 102030)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['LINENUMBER'] != 6) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['DISCOUNT'] >= 0.009984992724698572)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 152) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'P') & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['QUANTITY'] != 17) & (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['L_PARTKEY'] >= 90288) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['L_COMMENT'] == 's')][['L_SUPPKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'SHIPDATE', 'COMMITDATE', 'RETURNFLAG']].groupby(by=['COMMITDATE', 'SHIPINSTRUCT', 'SHIPDATE', 'RETURNFLAG', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['QUANTITY'] <= 37) | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_ORDERKEY'] > 125) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['L_COMMENT'].str.startswith('j'))].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Q'))][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_COMMENT'] == 'j') & (lineitem['TAX'] >= 0.05031177272606352) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['QUANTITY'] < 19) & (lineitem['L_SUPPKEY'] != 2088) & (lineitem['LINENUMBER'] == 6) | (lineitem['TAX'] > 0.03225679885804816) | (lineitem['LINESTATUS'] == 'F')][['L_COMMENT', 'TAX', 'LINESTATUS', 'LINENUMBER', 'DISCOUNT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY']].groupby(by=['LINESTATUS', 'RECEIPTDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['QUANTITY'] < 26) & (lineitem['LINESTATUS'] != 'O') | (lineitem['TAX'] >= 0.030086257900425465) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['L_COMMENT'] != ' ') & (lineitem['L_PARTKEY'] == 10807) | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['EXTENDEDPRICE'] == 60476.73893794935)].merge(orders[(orders['O_ORDERKEY'] != 95) & (orders['ORDERDATE'] >= '1992-01-13')][['O_ORDERKEY', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] == 'MAIL') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['L_SUPPKEY'] <= 4411) | (lineitem['LINENUMBER'] >= 1) & (lineitem['LINENUMBER'] < 2)].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2068)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] != 0.008477654647178907) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['L_PARTKEY'] == 31911) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['EXTENDEDPRICE'] == 22482.677408168765) & (lineitem['RECEIPTDATE'] < '1998-11-06')][['L_COMMENT', 'L_ORDERKEY', 'SHIPDATE', 'EXTENDEDPRICE', 'COMMITDATE', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RETURNFLAG', 'SHIPDATE', 'QUANTITY', 'L_PARTKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'LINENUMBER']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 4)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'QUANTITY', 'LINENUMBER', 'COMMITDATE', 'SHIPMODE']].merge(partsupp.merge(part[(part['PT_COMMENT'] != 's') | (part['RETAILPRICE'] > 907.2224389132053) & (part['P_PARTKEY'] != 121)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] != 7)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] == 7) & (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 9) | (nation['N_COMMENT'] != 'o') | (nation['N_NATIONKEY'] < 6) | (nation['N_NAME'] == 'S')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'c') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) & (customer['C_ADDRESS'].str.startswith('q')) & (customer['C_CUSTKEY'] <= 43) | (customer['C_PHONE'] != '13-') & (customer['C_CUSTKEY'] > 11) & (customer['C_NATIONKEY'] != 12) & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE']))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 17) & (customer['C_ADDRESS'].str.startswith('J')) & (customer['C_NATIONKEY'] < 18) | (customer['C_ACCTBAL'] != 879.1242758644873)][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 2) | (customer['C_NATIONKEY'] < 7) | (customer['C_NATIONKEY'] > 17) & (customer['C_PHONE'] != '1') | (customer['C_PHONE'] != '25-') | (customer['C_CUSTKEY'] >= 74) | (customer['C_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] > 11) & (nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'].str.startswith('r'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] <= 15) | (customer['C_NATIONKEY'] == 5) | (customer['C_ADDRESS'] != '4') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 3395.397722538216)][['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] != 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] == 31) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 18) | (customer['C_NATIONKEY'] != 5)][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_NATIONKEY'] > 17) | (customer['C_NATIONKEY'] > 20) & (customer['C_ACCTBAL'] >= 3075.6277758871447) | (customer['C_CUSTKEY'] >= 62)][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('F')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] < 7) | (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE'])) | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] < 7513.970141589667) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 15) & (customer['C_ACCTBAL'] <= 4203.555807393893)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] <= 67) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '5-LOW'])) | (orders['O_CUSTKEY'] == 135847) & (orders['O_COMMENT'] != 'n') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_CUSTKEY'] != 24190)][['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['SHIPPRIORITY'] >= 0)][['ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] == 2134.9992465794203) | (customer['C_ADDRESS'] == 'b') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY'])) | (customer['C_ADDRESS'] == 'E') | (customer['C_CUSTKEY'] <= 21) & (customer['C_ADDRESS'] == 'w') & (customer['C_COMMENT'].str.startswith('a'))][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] >= 250) & (orders['O_COMMENT'] != 'z') | (orders['O_CUSTKEY'] == 25373) & (orders['CLERK'] == 'C')].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 401)].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == ' ')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] == '.') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] != 37)][['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'h') & (orders['O_CUSTKEY'] != 13742)].merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_NATIONKEY'] >= 12)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith(' re')) | (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] <= 267907.46851967485) & (orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT'])) | (orders['O_CUSTKEY'] == 7832) & (orders['ORDERDATE'] > '1998-07-21')][['O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer.merge(nation[(nation['N_REGIONKEY'] < 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('l'))][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'].str.startswith('H')) | (customer['C_COMMENT'] == 's') | (customer['C_ACCTBAL'] == 197.20358938478262)][['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 90173) & (orders['O_ORDERKEY'] == 50) | (orders['O_ORDERKEY'] > 196) & (orders['TOTALPRICE'] != 57424.46473759852)].merge(customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] == 'u') | (customer['C_NATIONKEY'] == 12)][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 528) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] < 14) | (customer['C_PHONE'] == '27-') | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 189) & (orders['O_CUSTKEY'] > 139973) & (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERDATE'] <= '1992-01-13')][['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 599) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] != 13) | (customer['C_COMMENT'] == 'd') | (customer['C_COMMENT'] == 'n') | (customer['C_ADDRESS'] != 'u') & (customer['C_CUSTKEY'] >= 73) & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 6238.769848272549)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 479) | (orders['TOTALPRICE'] <= 178898.1451484402) & (orders['TOTALPRICE'] != 99347.73627277624) | (orders['ORDERSTATUS'] == 'P') | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'P')].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 4) | (nation['N_NATIONKEY'] < 6) & (nation['N_NAME'] == 'U')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'] != 'h') | (orders['O_CUSTKEY'] <= 87301) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1992-01-13')][['O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] == 59) & (customer['C_NATIONKEY'] <= 2) | (customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] != 5) & (customer['C_NATIONKEY'] > 15) | (customer['C_CUSTKEY'] == 35)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 176487.83204922752) | (orders['O_COMMENT'].str.startswith('q')) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] > '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] >= 8106.284589936664) & (customer['C_ADDRESS'] == 's') | (customer['C_ACCTBAL'] != -818.428652147767) & (customer['C_CUSTKEY'] <= 19) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] == 'C')][['C_NAME', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NAME'] == 'A')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] != 'l') & (customer['C_PHONE'] == '18-') | (customer['C_ADDRESS'] != 'E') & (customer['C_COMMENT'] == 'e') | (customer['C_PHONE'].str.startswith('27-'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer[(customer['C_PHONE'] == '13-') & (customer['C_PHONE'] == '3') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_PHONE'].str.startswith('22-')) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] <= 3222.07272351597) & (customer['C_ACCTBAL'] != 1842.6737284825372)][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) & (customer['C_CUSTKEY'] < 97) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'BUILDING', 'MACHINERY'])) & (customer['C_CUSTKEY'] != 31) | (customer['C_ACCTBAL'] == 1616.8299369621836) & (customer['C_NATIONKEY'] <= 6)][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#24') | (part['PT_COMMENT'].str.startswith('r')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] == 'o') & (part['CONTAINER'] == 'MED') & (part['RETAILPRICE'] < 1049.6108008418307) | (part['SIZE'] > 14) | (part['BRAND'].isin(['Brand#51', 'Brand#25', 'Brand#35', 'Brand#41', 'Brand#53', 'Brand#22', 'Brand#43', 'Brand#55', 'Brand#54']))][['SIZE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']].groupby(by=['BRAND', 'SIZE', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4'])) & (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] < 1) | (part['SIZE'] == 22) | (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] != 79) & (part['P_PARTKEY'] < 129) & (part['P_NAME'] == 'lem')][['MFGR', 'RETAILPRICE', 'SIZE', 'BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT']].groupby(by=['P_NAME', 'PT_COMMENT', 'BRAND', 'SIZE', 'MFGR']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] <= 1082.418504785367) & (part['P_PARTKEY'] == 181) & (part['BRAND'].isin(['Brand#55', 'Brand#13', 'Brand#35', 'Brand#25', 'Brand#34', 'Brand#41', 'Brand#44', 'Brand#32', 'Brand#33', 'Brand#12', 'Brand#14', 'Brand#15', 'Brand#45'])) | (part['CONTAINER'] != 'JUMBO') & (part['TYPE'] == 'E') | (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] > 1029.8088739343375) & (part['CONTAINER'].str.startswith('LG')) & (part['TYPE'] != 'E')][['TYPE', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].groupby(by=['TYPE', 'PT_COMMENT', 'MFGR']).agg('count')

partsupp.merge(part[(part['SIZE'] >= 35) | (part['P_PARTKEY'] < 133) & (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] != 'i') & (part['TYPE'] == 'E')][['MFGR', 'P_NAME', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 8341.388986936612) & (supplier['S_ADDRESS'] == 's') & (supplier['S_COMMENT'] != 'l')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('b'))][['S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_PHONE'] != '28-')][['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ACCTBAL'] < 3674.6952890767952) | (supplier['S_ADDRESS'].str.startswith('x')) & (supplier['S_PHONE'] != '26-') | (supplier['S_ACCTBAL'] != 2643.928226878469)][['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 3302) | (partsupp['AVAILQTY'] > 6888) & (partsupp['AVAILQTY'] == 4429) | (partsupp['AVAILQTY'] < 8938) | (partsupp['PS_SUPPKEY'] >= 1699)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 5281) | (partsupp['AVAILQTY'] >= 1195) & (partsupp['P_COMMENT'] == 'l') | (partsupp['AVAILQTY'] > 341)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 2321) | (partsupp['PS_PARTKEY'] > 42)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 7600.084213439196) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 36)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 7445) & (partsupp['PS_SUPPKEY'] < 3452) | (partsupp['PS_PARTKEY'] < 8)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] == 23) & (supplier['S_NATIONKEY'] >= 0) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] != 63)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'bli') | (partsupp['PS_PARTKEY'] != 30) | (partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['AVAILQTY'] > 9730) & (partsupp['AVAILQTY'] < 7364)][['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'o')][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('e'))][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'e') | (supplier['S_ADDRESS'] != 'K') | (supplier['S_COMMENT'] != 'd') & (supplier['S_COMMENT'].str.startswith('f'))][['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('p'))].merge(supplier[(supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NATIONKEY'] != 15) & (supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_SUPPKEY'] > 64) | (supplier['S_ACCTBAL'] != 440.85917800627317) | (supplier['S_PHONE'] != '26-')].merge(nation[(nation['N_NATIONKEY'] >= 0) & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('q')) & (partsupp['P_COMMENT'] != '.')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] < 992.9889577388913) | (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'P') | (part['CONTAINER'] == 'LG')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 151.8535200051666) & (partsupp['PS_SUPPKEY'] > 5964) & (partsupp['PS_SUPPKEY'] <= 6638)].merge(supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'] == 'w') & (supplier['S_ADDRESS'] != 'I') | (supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_ADDRESS'] != 'I')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 444.71888332495075) | (partsupp['PS_PARTKEY'] == 21) | (partsupp['PS_PARTKEY'] == 19) & (partsupp['PS_PARTKEY'] <= 19) | (partsupp['PS_SUPPKEY'] == 4011)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'cor') | (part['CONTAINER'] == 'LG') & (part['TYPE'] == 'S') & (part['SIZE'] > 43) & (part['P_PARTKEY'] < 59) & (part['P_PARTKEY'] <= 124)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 768.4508929419475) & (partsupp['SUPPLYCOST'] < 608.6476565193102) & (partsupp['PS_PARTKEY'] != 31) | (partsupp['PS_SUPPKEY'] > 6396) | (partsupp['P_COMMENT'] != 'are')].merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) | (part['TYPE'].str.startswith('SMA')) | (part['PT_COMMENT'] == 'u') & (part['CONTAINER'] != 'JUMBO') | (part['MFGR'] != 'Manufacturer#2') & (part['P_NAME'] == 'r') | (part['BRAND'] == 'Brand#34')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'BRAND', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 325.61700199146514)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 754.4236553160778) & (partsupp['AVAILQTY'] <= 3094) & (partsupp['PS_PARTKEY'] <= 5) | (partsupp['SUPPLYCOST'] > 770.4488596936403)].merge(part[['PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 91.7883760887827) | (partsupp['AVAILQTY'] == 1325)].merge(part[(part['BRAND'].isin(['Brand#23', 'Brand#52', 'Brand#21', 'Brand#34', 'Brand#25', 'Brand#51', 'Brand#35', 'Brand#22', 'Brand#15', 'Brand#53', 'Brand#12', 'Brand#41', 'Brand#43', 'Brand#33', 'Brand#45', 'Brand#11', 'Brand#13', 'Brand#42', 'Brand#54', 'Brand#55']))][['SIZE', 'P_NAME', 'BRAND', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'P_NAME', 'MFGR', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 759.5571960012626) & (partsupp['PS_SUPPKEY'] > 3191)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_PHONE'] != '32-')].merge(nation[(nation['N_NAME'] == 'B')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 421.02199679725317) | (partsupp['AVAILQTY'] <= 1660) & (partsupp['PS_PARTKEY'] <= 11) | (partsupp['PS_SUPPKEY'] != 4452)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '14-') | (supplier['S_ACCTBAL'] >= -670.8564852130216)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] != 1028.8761883234931) | (part['PT_COMMENT'] != ' fi') & (part['PT_COMMENT'] == 's') & (part['PT_COMMENT'].str.startswith('r')) & (part['RETAILPRICE'] >= 999.4616999914712) | (part['RETAILPRICE'] == 902.5879335628399) | (part['SIZE'] > 6) | (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'] != 'r')][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] != 'n') & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] <= -167.02633124723855) & (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('W'))][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'] == 'L') | (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] == 'Manufacturer#3') & (part['SIZE'] <= 10) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5'])) & (part['PT_COMMENT'] != 'a') & (part['SIZE'] == 45)][['PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#1')][['P_NAME', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'SIZE']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 4034.536923206527) | (supplier['S_NATIONKEY'] >= 10) | (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_ACCTBAL'] < 5991.78558480609) & (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] != 3)].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 7805.846416509155) | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] != 101)][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'o') & (supplier['S_ACCTBAL'] == 6098.124300108034) | (supplier['S_ACCTBAL'] >= 1907.428901356346) & (supplier['S_ADDRESS'] != 'W')].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] != 16)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('o')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] >= 1136.0080433227938) | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_PHONE'] != '26-')].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] < 21) & (nation['N_COMMENT'] != 'c')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] == 'f') & (supplier['S_ACCTBAL'] <= 6538.138997628369) & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_SUPPKEY'] == 17) | (supplier['S_ADDRESS'] != 'B') | (supplier['S_ADDRESS'].str.startswith('n')) & (supplier['S_NATIONKEY'] >= 1)][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 19)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'q') & (supplier['S_COMMENT'] != 'q') & (supplier['S_COMMENT'] == 'b') & (supplier['S_ACCTBAL'] <= 7782.0283842864255) & (supplier['S_NATIONKEY'] <= 10) | (supplier['S_SUPPKEY'] == 40)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] == 'u') & (supplier['S_NATIONKEY'] > 18)][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] != 19) & (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] != 11) | (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 72) | (supplier['S_ADDRESS'] == 'Y')][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] < 8) & (supplier['S_ACCTBAL'] >= 1915.658136246015) & (supplier['S_NATIONKEY'] >= 23) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 163) & (supplier['S_NATIONKEY'] >= 7)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 7)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('t'))][['S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] > 20)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 13) & (supplier['S_ACCTBAL'] >= 5765.729968508039) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ACCTBAL'] >= -657.5432066003489) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] >= 4760.965870159102)][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 19) | (nation['N_NAME'] != 'K')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_SUPPKEY'] >= 140) | (supplier['S_SUPPKEY'] != 198) & (supplier['S_ADDRESS'] == 's') | (supplier['S_ACCTBAL'] < -656.0722614145584)][['S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] <= 0)].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'] == '32-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > -468.23976019737967)].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] > 14) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] == '1') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'k')].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] < 12) & (nation['N_COMMENT'] == 'c')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NATIONKEY'] != 12) | (supplier['S_SUPPKEY'] != 48) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] >= 8144.028767174338) & (supplier['S_SUPPKEY'] != 124)][['S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 171) & (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] > 22) | (supplier['S_NATIONKEY'] > 0) | (supplier['S_SUPPKEY'] < 39) | (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 133) & (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] == 110) & (supplier['S_COMMENT'].str.startswith(','))].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] < 16) | (nation['N_NATIONKEY'] == 22) | (nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'].str.startswith('R'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] != 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('y'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] != -200.67664122673546) & (customer['C_CUSTKEY'] != 77) & (customer['C_CUSTKEY'] < 73) & (customer['C_ACCTBAL'] < 662.9566798397041) & (customer['C_PHONE'] == '13-') & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 3) | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 9980.900353737385) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] < 1)].merge(nation[(nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'] == 'T') | (customer['C_NATIONKEY'] == 12) | (customer['C_CUSTKEY'] < 36) & (customer['C_NATIONKEY'] >= 21) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '22-')][['C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_ADDRESS'].str.startswith('E')) | (customer['C_ACCTBAL'] < 7756.992102743801) & (customer['C_CUSTKEY'] > 63)].merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_COMMENT'] != 'o') | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('y')) & (customer['C_COMMENT'] == ',') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] == 'K') & (customer['C_ADDRESS'].str.startswith('7')) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'n')][['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 83) | (customer['C_CUSTKEY'] <= 36) & (customer['C_NATIONKEY'] == 7) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] >= 22) & (customer['C_PHONE'].str.startswith('1'))].merge(nation[(nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] == 15) & (nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'AFR') & (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] <= -553.1928271291746) & (customer['C_PHONE'] != '27-') | (customer['C_CUSTKEY'] != 93)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 7299.610723269749) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('u')) & (customer['C_PHONE'].str.startswith('3')) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 6659.939061817356) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_COMMENT'] != 'i') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] == 0)].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 5) & (customer['C_NATIONKEY'] != 11) & (customer['C_COMMENT'] == 's') & (customer['C_NATIONKEY'] > 11) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] < 38) | (customer['C_CUSTKEY'] > 12) & (customer['C_ADDRESS'] != 'L')].merge(nation[(nation['N_NATIONKEY'] != 4)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 12) & (customer['C_ACCTBAL'] >= 4425.590893772999) & (customer['C_ADDRESS'].str.startswith('b')) | (customer['C_COMMENT'] == 'd') | (customer['C_NATIONKEY'] > 21)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_PHONE'] == '13-') & (customer['C_ACCTBAL'] != 8473.698271196665) & (customer['C_ADDRESS'] != 'z')][['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_PHONE'] == '3') & (customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] >= 7880.685814876833)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] == 9298.470680685785) | (customer['C_ACCTBAL'] != 9576.644014076097) | (customer['C_ACCTBAL'] != 7957.589601343709) & (customer['C_ACCTBAL'] < 3601.873025095915) | (customer['C_PHONE'] == '27-')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_PHONE'] != '22-') & (customer['C_ACCTBAL'] >= 8921.689026098455) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] == 6350.464287220846) & (customer['C_CUSTKEY'] > 82) & (customer['C_PHONE'] != '22-')].merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'L') | (customer['C_NATIONKEY'] >= 16) | (customer['C_ACCTBAL'] >= 197.00794645106657) & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] != 12)].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] == 6449.286031459457) | (customer['C_COMMENT'] != 'y') | (customer['C_CUSTKEY'] < 44) | (customer['C_NATIONKEY'] < 0) | (customer['C_NATIONKEY'] <= 1)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] > 9) & (customer['C_ADDRESS'] != 'n') | (customer['C_ACCTBAL'] > 219.1203202527538) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 17) & (customer['C_ADDRESS'] == '7') & (customer['C_CUSTKEY'] == 21)].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'].str.startswith('e'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] != -363.4254907834023) | (customer['C_ACCTBAL'] != 1588.5108004279796) | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_NATIONKEY'] <= 14)].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] > 3) & (nation['N_NAME'] == 'S')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_COMMENT'].str.startswith('l')) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 7229.524998201871) & (customer['C_COMMENT'] == 'd') & (customer['C_NATIONKEY'] >= 1) & (customer['C_COMMENT'].str.startswith('.'))].merge(nation[(nation['N_NATIONKEY'] < 14)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_COMMENT'].str.startswith('e'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('count')

customer[['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['O_COMMENT'] != '-') & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] < 119037) | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] > 109520.6946664821) | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] == 38025.26105666164) | (orders['ORDERDATE'] != '1998-07-21')][['O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']).agg('count')

lineitem.merge(orders[(orders['O_COMMENT'] == 'o') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] > 604) | (orders['O_COMMENT'] == 'c') | (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 's') | (orders['TOTALPRICE'] != 77432.54428552178)].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('17-'))][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 20)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 46) & (partsupp['AVAILQTY'] == 3083) | (partsupp['SUPPLYCOST'] == 455.8845787638449) | (partsupp['PS_SUPPKEY'] != 4641)].merge(supplier[(supplier['S_ADDRESS'] != 'z') & (supplier['S_SUPPKEY'] != 69) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] >= 1603.3449793635739) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] > 11)].merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'bli') & (partsupp['SUPPLYCOST'] <= 489.1861374016492) | (partsupp['PS_PARTKEY'] <= 24) | (partsupp['P_COMMENT'] == 'o') | (partsupp['PS_PARTKEY'] < 42)].merge(part[['PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['P_NAME'] == 'w') & (part['P_PARTKEY'] < 152) | (part['P_NAME'].str.startswith('i')) & (part['P_NAME'] != 'o') & (part['P_NAME'] == 'g') & (part['SIZE'] >= 2) | (part['SIZE'] > 15) | (part['SIZE'] == 36) | (part['PT_COMMENT'] != 'ss ')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'SIZE']).agg('count')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.027512746258496625) | (lineitem['SHIPMODE'] == 'MAIL')][['LINESTATUS', 'LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE', 'QUANTITY', 'L_ORDERKEY', 'L_COMMENT', 'COMMITDATE', 'TAX', 'EXTENDEDPRICE']].merge(orders[(orders['ORDERSTATUS'] != 'F')][['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 40536.13209558817) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'TRUCK'])) | (lineitem['TAX'] < 0.07784935118862664) | (lineitem['LINENUMBER'] > 6) | (lineitem['QUANTITY'] == 46)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'g')][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] != 4) & (lineitem['QUANTITY'] != 49) & (lineitem['EXTENDEDPRICE'] <= 47547.19633428187) & (lineitem['RECEIPTDATE'] == '1992-05-02')].merge(partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != 't') | (nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] != 'B')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] <= 2) | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['EXTENDEDPRICE'] <= 59633.913761659955) | (lineitem['L_ORDERKEY'] <= 69) | (lineitem['QUANTITY'] <= 34) & (lineitem['TAX'] > 0.06834200064622264) | (lineitem['L_PARTKEY'] < 154330) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['DISCOUNT'] <= 0.07522236889020167)][['QUANTITY', 'SHIPINSTRUCT', 'LINENUMBER', 'RETURNFLAG', 'SHIPDATE', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT']].groupby(by=['L_COMMENT', 'LINENUMBER', 'SHIPDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['TAX'] >= 0.048732894155664445) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_COMMENT'] == ' ca')].merge(partsupp.merge(part[['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['LINENUMBER'] >= 2) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['COMMITDATE'] > '1992-05-15')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['SUPPLYCOST'] >= 530.2732961967791) | (partsupp['PS_SUPPKEY'] > 5879)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('u')) | (lineitem['L_ORDERKEY'] < 156) | (lineitem['EXTENDEDPRICE'] > 22300.71074782924) | (lineitem['L_PARTKEY'] >= 96759) & (lineitem['L_PARTKEY'] <= 154311) | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['SHIPMODE'] == 'FOB') & (lineitem['TAX'] <= 0.03558584028433977)].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] != 142) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_ORDERKEY'] < 51) | (lineitem['DISCOUNT'] < 0.02599461657759602) & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['L_SUPPKEY'] >= 1079) | (lineitem['L_ORDERKEY'] <= 185) | (lineitem['LINENUMBER'] != 1)].merge(orders.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 79642) | (lineitem['QUANTITY'] >= 11) & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['QUANTITY'] != 13)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['PS_PARTKEY'] < 42) & (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['PS_SUPPKEY'] < 4916)].merge(part[(part['PT_COMMENT'] != 's')][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 107338) | (lineitem['TAX'] <= 0.03831385877323939) & (lineitem['DISCOUNT'] < 0.02403839931856754) & (lineitem['SHIPMODE'] == 'SHIP')][['L_ORDERKEY']].merge(orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] >= 66274) & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_ORDERKEY'] <= 191)].merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['P_NAME'].str.startswith('n')) & (part['BRAND'] == 'Brand#15') | (part['MFGR'] == 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] == 'm') | (part['SIZE'] <= 9) | (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 9938) | (lineitem['L_PARTKEY'] >= 31884)].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 75) & (supplier['S_SUPPKEY'] != 4) & (supplier['S_NATIONKEY'] > 18) | (supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_ACCTBAL'] < 8593.982898075708) | (supplier['S_SUPPKEY'] >= 198)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] <= 47) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_SUPPKEY'] >= 2391) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPMODE'] != 'AIR') | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_ORDERKEY'] >= 18)][['EXTENDEDPRICE', 'TAX', 'LINESTATUS', 'L_ORDERKEY', 'SHIPDATE', 'DISCOUNT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY']].groupby(by=['DISCOUNT', 'RECEIPTDATE', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 2) | (lineitem['DISCOUNT'] == 0.06788014594140646) | (lineitem['L_COMMENT'] == 'k') | (lineitem['L_COMMENT'] != 'k') | (lineitem['L_COMMENT'].str.startswith('h')) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'RAIL'])) & (lineitem['LINENUMBER'] == 3)].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'A')].merge(orders[(orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] < 565) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] <= 167) | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['L_COMMENT'] != 'd') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['EXTENDEDPRICE'] == 20639.878536297245) & (lineitem['L_ORDERKEY'] != 59) & (lineitem['L_ORDERKEY'] == 23) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['SHIPDATE'] > '1998-10-30')].merge(orders[(orders['O_CUSTKEY'] != 102877) & (orders['O_COMMENT'] != 'i')].merge(customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] > 81.86536412841212) & (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'].str.startswith('v')) & (customer['C_COMMENT'] != 'c')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['DISCOUNT'] == 0.09482586829524048) | (lineitem['L_ORDERKEY'] >= 114) & (lineitem['L_PARTKEY'] < 56779) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['RETURNFLAG'] == 'R') | (lineitem['QUANTITY'] >= 5) | (lineitem['SHIPMODE'].isin(['REG AIR'])) & (lineitem['L_ORDERKEY'] < 24)].merge(orders[(orders['TOTALPRICE'] == 276914.3196301231) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] > 444) | (orders['TOTALPRICE'] > 315613.90319682704) | (orders['TOTALPRICE'] >= 122319.40383017863)][['ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['QUANTITY'] <= 9) & (lineitem['QUANTITY'] >= 35) | (lineitem['RETURNFLAG'].isin(['R'])) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_ORDERKEY'] >= 111) & (lineitem['QUANTITY'] <= 22) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_COMMENT'] != '-')].merge(orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['L_ORDERKEY'] < 109) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_ORDERKEY'] == 188) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['DISCOUNT'] > 0.016503936669782695) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['TAX'] < 0.03230387686548019)].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] != 0)][['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('count')

lineitem[(lineitem['TAX'] >= 0.07640384269835847)][['LINESTATUS', 'SHIPDATE', 'TAX', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINENUMBER', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('max', numeric_only=True)

lineitem[['COMMITDATE', 'RECEIPTDATE', 'LINESTATUS', 'L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPDATE', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'P_NAME']).agg('count')

lineitem[['LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'TAX']].merge(orders[(orders['ORDERSTATUS'].isin(['P']))][['O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'CLERK']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'RETURNFLAG', 'L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 965.6325409578682) & (partsupp['PS_SUPPKEY'] > 6097) & (partsupp['AVAILQTY'] < 5216)].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPMODE', 'DISCOUNT', 'LINENUMBER', 'L_PARTKEY', 'RECEIPTDATE', 'QUANTITY', 'COMMITDATE']].merge(partsupp.merge(part[(part['CONTAINER'] != 'LG') | (part['PT_COMMENT'] != 'ss ') | (part['SIZE'] >= 23)][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'SHIPDATE', 'LINENUMBER', 'QUANTITY', 'LINESTATUS']].merge(partsupp.merge(part[(part['PT_COMMENT'] == 'h') & (part['SIZE'] >= 38) & (part['SIZE'] <= 43) & (part['BRAND'].isin(['Brand#42', 'Brand#21', 'Brand#32', 'Brand#52', 'Brand#33', 'Brand#43', 'Brand#14', 'Brand#54', 'Brand#24', 'Brand#35', 'Brand#15', 'Brand#11', 'Brand#34'])) & (part['P_NAME'] != 'n') | (part['P_PARTKEY'] < 74) & (part['P_NAME'] == 'n')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'CONTAINER']).agg('count')

lineitem[['RETURNFLAG', 'L_ORDERKEY', 'LINENUMBER', 'SHIPDATE', 'LINESTATUS', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE', 'QUANTITY', 'COMMITDATE']].merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPMODE', 'L_PARTKEY', 'TAX', 'SHIPINSTRUCT']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 959.8201262741455) & (part['SIZE'] == 26) | (part['TYPE'].str.startswith('STA')) | (part['P_NAME'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'TYPE', 'SIZE']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] < 14)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'AFR') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 13) & (nation['N_NAME'] == 'I') | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] != 2) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] > 3514.451318808412) | (customer['C_COMMENT'] == 'y') & (customer['C_COMMENT'] != 'd') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] == 85)].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_NAME'] != 'G') & (nation['N_NAME'] != 'C') & (nation['N_COMMENT'].str.startswith('r'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'J') | (customer['C_CUSTKEY'] != 5) | (customer['C_COMMENT'] != 'c') & (customer['C_NATIONKEY'] > 4) | (customer['C_NATIONKEY'] >= 22) & (customer['C_NATIONKEY'] <= 22) | (customer['C_ACCTBAL'] == 6109.931049376162)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'j') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_ACCTBAL'] >= 4572.578029791106) | (customer['C_ACCTBAL'] != 3452.5568034072276) | (customer['C_COMMENT'] == 'f') | (customer['C_ADDRESS'] != 'p') | (customer['C_ACCTBAL'] < 7065.244657873072)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] < 81) | (customer['C_PHONE'] != '27-')].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 9) & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ADDRESS'] == 'U') & (customer['C_COMMENT'] != 'a') | (customer['C_ACCTBAL'] != 1289.6785414816845)].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] < 19) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ACCTBAL'] != 58.870194156568346) | (customer['C_NATIONKEY'] == 16) | (customer['C_COMMENT'] == 'n')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('M')) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] < 0) & (customer['C_COMMENT'] != 'e') | (customer['C_NATIONKEY'] != 18)].merge(nation[(nation['N_COMMENT'] != 'l')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] >= 65)][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 290640.1871087747) | (orders['ORDERDATE'] == '1992-01-13')][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21')].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'] == 'b') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['O_ORDERKEY'] == 98) | (orders['ORDERSTATUS'] != 'F')][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] > 548.046741559898) & (customer['C_ACCTBAL'] < 5804.4028403842) | (customer['C_CUSTKEY'] < 88) & (customer['C_NATIONKEY'] > 16) | (customer['C_ACCTBAL'] > 2043.652538932833)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['O_COMMENT'].str.startswith('i')) & (orders['O_ORDERKEY'] > 588) | (orders['TOTALPRICE'] < 124857.81389346778) | (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 118716)].merge(customer[(customer['C_CUSTKEY'] >= 53) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] > 891.4797191230252) & (customer['C_COMMENT'].str.startswith(',')) | (customer['C_COMMENT'] != 'r')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O')].merge(customer[(customer['C_NATIONKEY'] > 4) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 7333.1545828540875) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'p') | (customer['C_ACCTBAL'] >= 3505.621205470201)].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] != 'A')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O']))].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'P')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'l') | (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] == ' ') & (orders['TOTALPRICE'] >= 188999.08595095706) | (orders['O_CUSTKEY'] > 95310) & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_ORDERKEY'] > 660) & (orders['O_ORDERKEY'] != 612)][['O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']).agg('count')

orders[(orders['O_CUSTKEY'] <= 40565) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] > 157012.74272131012) | (orders['O_ORDERKEY'] <= 239)][['CLERK', 'ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 55260) & (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] != 'C')].merge(customer[(customer['C_ADDRESS'].str.startswith('T')) | (customer['C_PHONE'] != '1') & (customer['C_COMMENT'].str.startswith('e')) | (customer['C_CUSTKEY'] < 7) | (customer['C_ADDRESS'] != '0') | (customer['C_ACCTBAL'] >= -652.489899287779) | (customer['C_CUSTKEY'] >= 80)][['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 560)].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_ACCTBAL'] == 9189.151080163601)][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] <= 5)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 339) | (orders['O_ORDERKEY'] == 237)].merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] > 17) & (nation['N_COMMENT'] != 'y') & (nation['N_COMMENT'] != 'p')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 119) | (orders['O_ORDERKEY'] != 756) | (orders['O_CUSTKEY'] == 38640) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '5-LOW', '3-MEDIUM'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] >= 124032)][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE', 'BUILDING', 'HOUSEHOLD']))][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 139) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] >= 325059.06631618843) | (orders['O_COMMENT'] == '.') | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] != 764) & (orders['TOTALPRICE'] <= 194746.20782738324)].merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ADDRESS'] == 'g') & (customer['C_ACCTBAL'] > 4573.911192665854) | (customer['C_PHONE'] != '18-') & (customer['C_ADDRESS'] == 'E') | (customer['C_ADDRESS'].str.startswith('w')) & (customer['C_ADDRESS'].str.startswith('3')) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 661) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_CUSTKEY'] <= 121602) | (orders['O_COMMENT'] == 'o')][['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] <= 59) & (customer['C_ADDRESS'] != 'H') & (customer['C_CUSTKEY'] <= 80) & (customer['C_ACCTBAL'] >= 3476.057853731454)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_ACCTBAL'] > 6178.898790515489)].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NAME'] == 'C') & (nation['N_NATIONKEY'] == 14) | (nation['N_NAME'] != 'B')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['P']))][['O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 133294.91245199583)].merge(customer[(customer['C_CUSTKEY'] == 71) & (customer['C_ACCTBAL'] <= 4041.6877732137655) | (customer['C_ACCTBAL'] < 4609.348825807106) & (customer['C_CUSTKEY'] > 91) | (customer['C_ADDRESS'] != 'I') & (customer['C_ACCTBAL'] != 6658.431459192987)].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] == 'S')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 97546.86738489142) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] <= 245823.37863942914) | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '18-') | (customer['C_CUSTKEY'] <= 55)][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 23) | (nation['N_NATIONKEY'] < 1) & (nation['N_NAME'].str.startswith('C'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 229267.61209863028) & (orders['ORDERDATE'] < '1992-01-13')].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] < 3943.2712012642887) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'] == 'z') | (customer['C_ADDRESS'] == 'K')].merge(nation.merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] == '8') & (customer['C_NATIONKEY'] > 1) | (customer['C_NATIONKEY'] < 7) | (customer['C_ACCTBAL'] != 4948.191703553172) & (customer['C_CUSTKEY'] >= 48)].merge(nation[(nation['N_NATIONKEY'] > 9)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'].str.startswith('b')) | (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('8')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] > 1246.641205550749) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['MFGR'] != 'Manufacturer#1') & (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] < 160) | (part['PT_COMMENT'] == 't') | (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'] != 'STA') | (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'].str.startswith('x'))][['P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].groupby(by=['MFGR', 'P_NAME', 'CONTAINER', 'BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] <= 925.037078178792) | (part['P_PARTKEY'] > 77) & (part['PT_COMMENT'] == 'r') & (part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] != 'LG') | (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] > 198) | (part['SIZE'] <= 37)][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['BRAND', 'TYPE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['SIZE'] < 4) & (part['BRAND'] != 'Brand#53') | (part['SIZE'] != 45) | (part['SIZE'] > 26) & (part['SIZE'] < 39) | (part['RETAILPRICE'] > 1031.7379719673306) & (part['P_PARTKEY'] != 45) & (part['P_PARTKEY'] <= 75)][['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE']).agg('max', numeric_only=True)

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] != 18) | (part['SIZE'] == 32) & (part['P_PARTKEY'] > 190) | (part['BRAND'].isin(['Brand#12', 'Brand#22', 'Brand#52', 'Brand#45', 'Brand#53', 'Brand#41', 'Brand#11', 'Brand#32', 'Brand#33', 'Brand#55', 'Brand#21', 'Brand#34', 'Brand#13', 'Brand#14', 'Brand#44', 'Brand#35', 'Brand#43', 'Brand#15', 'Brand#25', 'Brand#24', 'Brand#51', 'Brand#54', 'Brand#23', 'Brand#42'])) & (part['P_NAME'].str.startswith('k')) & (part['MFGR'] == 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5'])) & (part['PT_COMMENT'] == 'x')][['PT_COMMENT', 'BRAND', 'MFGR', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#4'])) & (part['P_NAME'] == 'c') & (part['RETAILPRICE'] <= 1059.524785978248) | (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] <= 1020.2840966174454)][['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 17) & (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_PHONE'] == '32-')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 148) & (supplier['S_NATIONKEY'] != 12) & (supplier['S_COMMENT'] != 'i') | (supplier['S_ACCTBAL'] != 6691.268230160697) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 2108.9915682950923) & (supplier['S_PHONE'].str.startswith('26-'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 's')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp.merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] != 6) & (nation['N_NATIONKEY'] == 20) | (nation['N_REGIONKEY'] == 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8971) | (partsupp['AVAILQTY'] <= 8601) & (partsupp['PS_PARTKEY'] <= 48) | (partsupp['P_COMMENT'] == 'the') | (partsupp['PS_PARTKEY'] > 22)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 13) | (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] == 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5079) & (partsupp['AVAILQTY'] == 3760) | (partsupp['PS_SUPPKEY'] <= 1962)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_NATIONKEY'] < 7) | (supplier['S_SUPPKEY'] > 123) | (supplier['S_ADDRESS'].str.startswith('C')) | (supplier['S_ACCTBAL'] != 1656.2073939375748)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 5466) | (partsupp['AVAILQTY'] > 1319) & (partsupp['P_COMMENT'].str.startswith('k'))].merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 2099) & (partsupp['AVAILQTY'] <= 6606) & (partsupp['PS_SUPPKEY'] > 1737) | (partsupp['P_COMMENT'].str.startswith('a'))].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] == 'ASI') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 28)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['SIZE'] <= 33) | (part['SIZE'] < 37) & (part['SIZE'] == 30) & (part['P_PARTKEY'] >= 170) | (part['TYPE'].str.startswith('L')) | (part['TYPE'].str.startswith('P')) & (part['CONTAINER'].str.startswith('MED'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 30) & (partsupp['SUPPLYCOST'] == 620.6949672617566)].merge(supplier[(supplier['S_SUPPKEY'] > 56) | (supplier['S_NATIONKEY'] == 15) & (supplier['S_ACCTBAL'] >= 1039.9827044036945) | (supplier['S_ACCTBAL'] > 6619.555578935822) & (supplier['S_ADDRESS'] == ' ') & (supplier['S_SUPPKEY'] != 125)].merge(nation[(nation['N_NATIONKEY'] < 9) | (nation['N_NATIONKEY'] >= 14)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] <= 27)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] == 'F')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 1596) & (partsupp['AVAILQTY'] != 4316) | (partsupp['SUPPLYCOST'] <= 267.97406683220623)].merge(supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'].str.startswith('x')) | (supplier['S_COMMENT'] != 'the') & (supplier['S_NATIONKEY'] < 12) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_COMMENT'].str.startswith('f'))].merge(nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] >= 16) & (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 2316) & (partsupp['P_COMMENT'] == 'v')].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 154) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] < 9)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2947) & (partsupp['PS_SUPPKEY'] == 1999) & (partsupp['SUPPLYCOST'] != 525.4765572300645) & (partsupp['SUPPLYCOST'] > 584.4377347560502)].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 1) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 5414) | (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['PS_PARTKEY'] >= 15) & (partsupp['SUPPLYCOST'] <= 199.1050988194979)].merge(supplier[(supplier['S_NATIONKEY'] >= 2) | (supplier['S_COMMENT'] == '.') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'al ')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 6439) | (partsupp['AVAILQTY'] == 1174) | (partsupp['PS_PARTKEY'] != 10) & (partsupp['PS_SUPPKEY'] >= 2094) | (partsupp['PS_PARTKEY'] > 21)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#21') & (part['PT_COMMENT'] != 'k') & (part['BRAND'] != 'Brand#53') & (part['P_NAME'].str.startswith('bis')) & (part['BRAND'] != 'Brand#45') | (part['CONTAINER'] == 'SM') | (part['P_NAME'] == 'cor') | (part['TYPE'] == 'L') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 7035) | (partsupp['PS_SUPPKEY'] != 147) | (partsupp['SUPPLYCOST'] < 872.1578037553659)].merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'are') | (partsupp['PS_SUPPKEY'] <= 1448) | (partsupp['PS_SUPPKEY'] != 3577) & (partsupp['PS_SUPPKEY'] < 2313)].merge(part[(part['BRAND'] == 'Brand#53') & (part['PT_COMMENT'] == 'ss ') & (part['P_PARTKEY'] != 1) & (part['P_PARTKEY'] <= 22) | (part['RETAILPRICE'] != 931.9194086870066) | (part['SIZE'] > 12) | (part['RETAILPRICE'] == 1025.2485090640153) | (part['SIZE'] > 45) | (part['MFGR'] == 'Manufacturer#4')][['P_PARTKEY', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'g') | (partsupp['PS_PARTKEY'] >= 49) | (partsupp['P_COMMENT'] == 'y') & (partsupp['AVAILQTY'] < 799) | (partsupp['P_COMMENT'] != ' th')][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['P_COMMENT'] == 'u') & (partsupp['SUPPLYCOST'] > 80.02665716115769)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['P_COMMENT'] == 'ly ') & (partsupp['PS_PARTKEY'] == 19) & (partsupp['PS_SUPPKEY'] <= 2748) | (partsupp['SUPPLYCOST'] >= 252.894788202476)][['PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 211.12943775591071) & (partsupp['PS_SUPPKEY'] <= 3851)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] <= 945.0329141657835) & (part['MFGR'] != 'Manufacturer#2') & (part['RETAILPRICE'] == 1084.3012758243424) | (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'].str.startswith('d')) | (part['BRAND'] != 'Brand#24')][['SIZE', 'P_NAME', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 637.4984025138162) | (partsupp['PS_SUPPKEY'] != 4570) | (partsupp['AVAILQTY'] > 3260) | (partsupp['PS_SUPPKEY'] > 4099) | (partsupp['AVAILQTY'] < 1914)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 661.45359871577) & (partsupp['AVAILQTY'] == 2637) & (partsupp['P_COMMENT'] == 'b') | (partsupp['PS_PARTKEY'] > 4)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] < 158) & (part['P_NAME'] == 'g') | (part['PT_COMMENT'] == 'n') & (part['TYPE'].str.startswith('SMA'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 3) | (part['PT_COMMENT'] == '!') & (part['SIZE'] <= 20) | (part['RETAILPRICE'] > 907.6629235901688) | (part['PT_COMMENT'] != 'the') | (part['TYPE'] != 'E') | (part['CONTAINER'] == 'SM') & (part['TYPE'] == 'SMA') & (part['RETAILPRICE'] > 925.0210812691491)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_ACCTBAL'] <= 9827.57262779696) & (supplier['S_COMMENT'] == 'w')].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#11') | (part['PT_COMMENT'] == 'k') & (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] < 32) & (part['TYPE'].str.startswith('SMA')) | (part['SIZE'] != 6) & (part['TYPE'] == 'S') & (part['SIZE'] >= 8) | (part['PT_COMMENT'] != 'ly ')][['BRAND', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] == 'n') | (supplier['S_ACCTBAL'] < 2981.687988389165) | (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] < 147) | (supplier['S_SUPPKEY'] < 43)][['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] >= 85) | (supplier['S_ACCTBAL'] < 5926.200389871487) & (supplier['S_NATIONKEY'] > 13)].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] == 'o') & (supplier['S_PHONE'] == '1') & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] != -252.6499552906405) & (supplier['S_ACCTBAL'] <= 5872.627251452012) & (supplier['S_PHONE'] != '28-') & (supplier['S_ADDRESS'] == 'M')][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['P_NAME'] == 'y') & (part['SIZE'] <= 24) & (part['BRAND'] == 'Brand#24') & (part['P_NAME'] != 'y')][['BRAND', 'SIZE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#25') | (part['SIZE'] < 24) & (part['P_NAME'].str.startswith('r')) | (part['CONTAINER'] != 'JUMBO')][['RETAILPRICE', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'BRAND', 'RETAILPRICE']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 2543.0391256532885) | (supplier['S_ACCTBAL'] < 7585.116681682382) & (supplier['S_PHONE'] != '28-') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 13)].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 9571.407268002127) & (supplier['S_ACCTBAL'] < 8033.197972020281) & (supplier['S_ADDRESS'] == 'a') | (supplier['S_ADDRESS'] == 'R') & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'] == 'v') | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'O') | (supplier['S_COMMENT'] == 'g') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '26-') | (supplier['S_ADDRESS'] != 'u') | (supplier['S_NATIONKEY'] > 17)][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_NATIONKEY'] <= 18)].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'c') & (supplier['S_NATIONKEY'] >= 10) | (supplier['S_ADDRESS'] == 'g')][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'x') & (supplier['S_ADDRESS'] == 'v') & (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_COMMENT'] == 'es ') & (supplier['S_ADDRESS'].str.startswith('j')) & (supplier['S_SUPPKEY'] == 175)].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] > 2)].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('y'))][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'].str.startswith('o'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 10) | (supplier['S_ADDRESS'].str.startswith('x'))].merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 21) & (supplier['S_SUPPKEY'] != 97) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != '3')][['S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 3)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_NATIONKEY'] < 2) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] == 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 13) | (supplier['S_NATIONKEY'] <= 7) | (supplier['S_PHONE'] == '32-') | (supplier['S_ADDRESS'] == 'i') | (supplier['S_NATIONKEY'] <= 2)].merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_NATIONKEY'] <= 21)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_COMMENT'] == 'e') | (supplier['S_NATIONKEY'] >= 14) & (supplier['S_SUPPKEY'] > 139) | (supplier['S_ACCTBAL'] >= 3395.188062210251) & (supplier['S_SUPPKEY'] <= 75)].merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_PHONE'] == '26-') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 145)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] > 123) | (supplier['S_ADDRESS'] != 'I')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 17)].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_SUPPKEY'] >= 197) & (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_SUPPKEY'] <= 163) & (supplier['S_PHONE'] != '32-')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'R')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 59) | (supplier['S_ADDRESS'] != 'l') | (supplier['S_SUPPKEY'] == 124)][['S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] > 8)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 68) & (supplier['S_ACCTBAL'] < 804.419193371546) | (supplier['S_ACCTBAL'] != 7351.713309934995) | (supplier['S_NATIONKEY'] >= 7) & (supplier['S_NATIONKEY'] < 20) | (supplier['S_ACCTBAL'] > 3593.4001274580223)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 114) & (supplier['S_PHONE'] == '2') | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 83) | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_COMMENT'] != 'l') | (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] < 17) | (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 5703.006762817849) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] != 5492.257853742045) | (customer['C_ACCTBAL'] > 7109.948236248922) & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('p')) & (customer['C_ACCTBAL'] >= 7941.935371583348) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] != 17) & (customer['C_COMMENT'] == 'n') | (customer['C_NATIONKEY'] >= 15) | (customer['C_PHONE'] != '13-') | (customer['C_ADDRESS'] != 'd')][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'] != 'a') | (customer['C_NATIONKEY'] >= 18) & (customer['C_NATIONKEY'] <= 4) | (customer['C_ADDRESS'] == 'j') | (customer['C_NATIONKEY'] <= 20) & (customer['C_PHONE'].str.startswith('18-'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'o') | (customer['C_NATIONKEY'] > 20) | (customer['C_NATIONKEY'] != 11) | (customer['C_CUSTKEY'] >= 70) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_ACCTBAL'] <= 3545.380244757377) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) & (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'K') | (nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 78) & (customer['C_NATIONKEY'] != 4) & (customer['C_CUSTKEY'] <= 5) | (customer['C_PHONE'].str.startswith('2'))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 5)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 27) & (customer['C_ACCTBAL'] < 1453.9303993606732) | (customer['C_PHONE'] != '25-') | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_NAME'].str.startswith('F'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 31) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] == 'r') & (customer['C_ADDRESS'].str.startswith('8')) | (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_PHONE'] == '22-') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] == 8)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 3247.074005683) & (customer['C_CUSTKEY'] > 69) | (customer['C_COMMENT'] == 'o') | (customer['C_ADDRESS'].str.startswith('M')) | (customer['C_CUSTKEY'] == 68)].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] != 20)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] < -170.26394252621435)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 2) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'r') | (customer['C_ACCTBAL'] < 623.5465940032193) | (customer['C_COMMENT'] != 'k') | (customer['C_ACCTBAL'] < 7069.8884975687415) | (customer['MKTSEGMENT'].isin(['BUILDING']))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 18) | (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= -516.7753165094384)].merge(nation[(nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 14) & (customer['C_ACCTBAL'] > -593.3648237762925) & (customer['C_ACCTBAL'] < 9427.120128250188)][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 0) & (customer['C_ACCTBAL'] >= -278.4414314083041) & (customer['C_PHONE'] != '2') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_PHONE'] != '3') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_NAME'] == 'I')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 5) | (customer['C_COMMENT'] != ',') & (customer['C_ACCTBAL'] == 590.5169628696294) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_PHONE'].str.startswith('18-'))][['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '13-') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'] == 'x') & (customer['C_ACCTBAL'] > 2251.8353814831808) & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 2)].merge(nation[(nation['N_NAME'] == 'C') & (nation['N_NATIONKEY'] != 19) & (nation['N_NATIONKEY'] < 0)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] < 17) & (customer['C_NATIONKEY'] > 17) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING'])) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_NAME'] != 'C')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '25-')][['C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '3') & (customer['C_ACCTBAL'] >= 4472.357700854551) & (customer['C_ACCTBAL'] <= -445.8885995900411) & (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] == 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] > 18) | (nation['N_NAME'] == 'R') | (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer[['C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'o')].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] >= 21)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] == 't')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] != 248) & (orders['O_COMMENT'].str.startswith('y')) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) & (orders['O_ORDERKEY'] == 789)][['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_ORDERKEY'] > 331) | (orders['O_ORDERKEY'] == 652) & (orders['O_CUSTKEY'] != 7751) & (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] <= 675) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH'])) & (orders['O_CUSTKEY'] < 53546) & (orders['SHIPPRIORITY'] == 0)][['O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] >= 342026.4142396752) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] > '1998-07-21') | (orders['CLERK'] == 'C')][['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'l') | (customer['C_NATIONKEY'] == 20)][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 6891) & (partsupp['AVAILQTY'] <= 8914) | (partsupp['P_COMMENT'].str.startswith('u'))][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 35) & (partsupp['SUPPLYCOST'] < 192.59682604464737) | (partsupp['SUPPLYCOST'] == 217.07198011650829)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 13) & (nation['N_COMMENT'] == 'r')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['P_COMMENT'] != 'j')].merge(part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#2']))][['TYPE', 'PT_COMMENT', 'MFGR', 'BRAND', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 77.32374723587454)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] != 'l') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 44)][['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('count')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['TAX'] == 0.05780201913181344) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_COMMENT'] == 's') & (lineitem['DISCOUNT'] <= 0.035485482286825354) | (lineitem['QUANTITY'] > 39)].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16')].merge(orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] == 'C') | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] <= 265)].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] > 1639.9319055830697) & (customer['C_NATIONKEY'] == 21)][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] == 0.02694869480025285)].merge(partsupp[(partsupp['PS_PARTKEY'] > 3)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 5) | (nation['N_NATIONKEY'] <= 22) & (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 36341.80734759129) & (lineitem['L_ORDERKEY'] != 57) | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_SUPPKEY'] <= 5922) | (lineitem['L_SUPPKEY'] < 8101) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] < 13298.254132491289)].merge(orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'u') | (lineitem['EXTENDEDPRICE'] < 12202.262923545752) & (lineitem['QUANTITY'] != 11)][['SHIPDATE', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG', 'LINESTATUS', 'SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 7810) & (partsupp['PS_SUPPKEY'] <= 6409)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] == 188) | (lineitem['L_PARTKEY'] <= 194474) & (lineitem['TAX'] != 0.058748592322287546) | (lineitem['RECEIPTDATE'] <= '1992-05-02')][['LINESTATUS', 'RETURNFLAG', 'RECEIPTDATE', 'QUANTITY', 'L_SUPPKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'TAX', 'SHIPMODE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] >= 13) & (lineitem['EXTENDEDPRICE'] >= 50027.39300784706) & (lineitem['L_PARTKEY'] < 66230) | (lineitem['L_COMMENT'].str.startswith('o')) & (lineitem['QUANTITY'] == 29)].merge(partsupp.merge(part[(part['P_NAME'] == 'k') & (part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] == 1094.5243015491412) | (part['BRAND'] != 'Brand#34') & (part['SIZE'] <= 37) & (part['SIZE'] >= 1) | (part['P_PARTKEY'] > 134) & (part['PT_COMMENT'] == 'd') | (part['PT_COMMENT'] == 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02')][['L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'LINESTATUS', 'L_ORDERKEY', 'SHIPDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'] != '.') & (partsupp['P_COMMENT'] != 'the') | (partsupp['PS_SUPPKEY'] < 1079)].merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['LINENUMBER'] == 1)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3385)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'].str.startswith('.')) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'].str.startswith('s')) & (lineitem['EXTENDEDPRICE'] < 58702.1272385932)].merge(orders[['SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_PHONE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON', 'COLLECT COD'])) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(partsupp[(partsupp['PS_PARTKEY'] == 36) & (partsupp['PS_SUPPKEY'] > 2374) | (partsupp['SUPPLYCOST'] >= 51.43812988839089) & (partsupp['P_COMMENT'].str.startswith(',')) & (partsupp['AVAILQTY'] <= 4754)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] != 'k')][['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] == 0.034649155864789824) & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['QUANTITY'] > 11) & (lineitem['SHIPMODE'].isin(['FOB', 'RAIL', 'MAIL', 'TRUCK', 'AIR', 'REG AIR'])) & (lineitem['L_ORDERKEY'] >= 121) | (lineitem['L_COMMENT'] == 'l') & (lineitem['QUANTITY'] > 29) & (lineitem['TAX'] >= 0.0346568206903895) | (lineitem['QUANTITY'] > 20)].merge(partsupp[(partsupp['PS_PARTKEY'] > 34) & (partsupp['PS_PARTKEY'] > 27) & (partsupp['PS_SUPPKEY'] < 4218) & (partsupp['SUPPLYCOST'] == 391.1531549815578)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'TAX', 'DISCOUNT']].merge(orders.merge(customer.merge(nation[(nation['N_NAME'] == 'C') & (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['COMMITDATE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPMODE', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 22) & (partsupp['AVAILQTY'] >= 5121) | (partsupp['SUPPLYCOST'] > 833.7825574206233) & (partsupp['PS_PARTKEY'] == 29) & (partsupp['PS_SUPPKEY'] >= 3809)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'P_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 4) & (nation['N_NAME'].str.startswith('I'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] <= 5584.632720255328) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] >= 21) & (customer['C_ACCTBAL'] > -767.9170111111665) | (customer['C_ACCTBAL'] >= 1153.0345756581032)].merge(nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_NATIONKEY'] > 5)].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] != 10) & (customer['C_PHONE'] == '27-') & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'] != 'l')].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] == 243) | (orders['O_CUSTKEY'] < 10656) | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'] == ',')].merge(customer[(customer['C_COMMENT'] != 'n') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_PHONE'] == '22-') & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_CUSTKEY'] <= 41) | (customer['C_COMMENT'] != ' ')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 110861.7137465919) & (orders['O_ORDERKEY'] <= 183) & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] > 605) | (orders['O_ORDERKEY'] == 51) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '5-LOW']))].merge(customer[(customer['C_COMMENT'] != 'p') & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'z') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] != 'j') & (customer['C_COMMENT'] == 'h')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] == 249145.52115290737) | (orders['TOTALPRICE'] != 239264.5264366829)].merge(customer[(customer['C_ACCTBAL'] < -323.2483362501715) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] > 70) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] != 6) & (customer['C_CUSTKEY'] != 61) | (customer['C_PHONE'].str.startswith('2'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_CUSTKEY'] > 48445) | (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('a')) | (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT']))].merge(customer.merge(nation[(nation['N_COMMENT'] != 'o')].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] != 'l') & (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'] == 'C') & (orders['O_COMMENT'].str.startswith('z')) | (orders['O_CUSTKEY'] == 140660) & (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] > 93062.21172134476)].merge(customer[(customer['C_PHONE'] == '3')][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '3-MEDIUM', '1-URGENT'])) | (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_COMMENT'] == 't') & (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_CUSTKEY'] >= 139099) | (orders['TOTALPRICE'] == 352121.2879184426) & (orders['ORDERDATE'] >= '1992-01-13')][['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('r')) | (orders['O_ORDERKEY'] < 230) | (orders['ORDERDATE'] < '1992-01-13') | (orders['O_ORDERKEY'] == 437) & (orders['TOTALPRICE'] >= 214378.24038101142) | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '3-MEDIUM']))].merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] == 'l') | (orders['TOTALPRICE'] >= 251391.01180299555) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['TOTALPRICE'] > 145700.88023955264) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW'])) & (orders['O_ORDERKEY'] < 522)][['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']).agg('count')

orders[(orders['O_COMMENT'] != ',') | (orders['O_CUSTKEY'] >= 108259) & (orders['O_COMMENT'].str.startswith('u')) | (orders['TOTALPRICE'] != 273659.68666094064) & (orders['TOTALPRICE'] < 255411.22336366217) | (orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] == 'ly ') & (orders['O_CUSTKEY'] >= 22211)].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'b')][['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'] != 'M')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'r') | (orders['TOTALPRICE'] <= 193792.70788225147)].merge(customer[(customer['C_CUSTKEY'] == 71) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 70048)].merge(customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'].str.startswith('18-'))][['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 102106) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] <= 785) | (orders['O_COMMENT'] != 'l') | (orders['O_ORDERKEY'] != 546) & (orders['O_CUSTKEY'] <= 110920)].merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 7843) | (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_ORDERKEY'] == 660) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] < 246)].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']).agg('count')

orders[(orders['O_ORDERKEY'] != 208) | (orders['O_ORDERKEY'] != 89) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] == 'P')][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('count')

orders[(orders['O_ORDERKEY'] > 534) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) | (orders['O_COMMENT'] == 'e') | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] == 136475) & (orders['TOTALPRICE'] > 257860.49881257096) | (orders['TOTALPRICE'] == 344219.57804605336)].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] > 0) | (nation['N_NAME'] != 'J')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 5557.792093049568)][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != '3') | (customer['C_ADDRESS'] != 'v') & (customer['C_CUSTKEY'] == 63)][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('count')

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'].str.startswith('K')) | (customer['C_COMMENT'].str.startswith('o')) | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_NATIONKEY'] <= 16) | (customer['MKTSEGMENT'].isin(['FURNITURE']))][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_CUSTKEY'] < 81) | (customer['C_CUSTKEY'] > 96) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_PHONE'] == '13-') | (customer['C_ADDRESS'] != 'r')][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) & (customer['C_COMMENT'] != 't') | (customer['C_NATIONKEY'] >= 7) & (customer['C_ACCTBAL'] > 7970.521653191941) | (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] >= 52)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_COMMENT'] != 'c') & (customer['C_NATIONKEY'] < 6)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

part[(part['BRAND'] != 'Brand#52') | (part['PT_COMMENT'] == 'u') & (part['BRAND'].isin(['Brand#53', 'Brand#31', 'Brand#41', 'Brand#24'])) | (part['BRAND'] != 'Brand#31') | (part['P_PARTKEY'] >= 162) & (part['RETAILPRICE'] > 1021.4585787954826) | (part['PT_COMMENT'] == ' fi') | (part['SIZE'] > 8) & (part['BRAND'] != 'Brand#31')][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'BRAND', 'MFGR', 'TYPE', 'RETAILPRICE']].groupby(by=['BRAND', 'SIZE', 'TYPE', 'MFGR']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'F') & (supplier['S_NATIONKEY'] == 17) & (supplier['S_PHONE'] == '32-') | (supplier['S_COMMENT'] == 'y') | (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 1499) & (partsupp['SUPPLYCOST'] >= 444.23516601849565) & (partsupp['PS_SUPPKEY'] != 1211) | (partsupp['SUPPLYCOST'] == 257.1400816587982) | (partsupp['PS_SUPPKEY'] != 3720)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('j')) & (supplier['S_SUPPKEY'] < 95) & (supplier['S_SUPPKEY'] > 146)].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 7135) | (partsupp['P_COMMENT'] == 'y') & (partsupp['PS_PARTKEY'] <= 45) & (partsupp['P_COMMENT'] != 'k') & (partsupp['PS_PARTKEY'] < 15)].merge(part[(part['PT_COMMENT'] == 'b') | (part['PT_COMMENT'].str.startswith('n')) & (part['P_PARTKEY'] <= 55) | (part['P_PARTKEY'] < 44)][['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9923)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] == 6) | (part['BRAND'] != 'Brand#43') & (part['CONTAINER'] != 'LG') & (part['SIZE'] == 17) | (part['CONTAINER'] != 'MED') & (part['CONTAINER'] != 'LG') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) & (part['MFGR'] == 'Manufacturer#3') | (part['TYPE'] != 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 9532) | (partsupp['PS_SUPPKEY'] != 2579) & (partsupp['P_COMMENT'] != ',')][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != '4') | (supplier['S_ACCTBAL'] > 999.7866445843435) | (supplier['S_ADDRESS'] == 'z')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 4472) & (partsupp['PS_SUPPKEY'] >= 1102) | (partsupp['PS_PARTKEY'] == 40) & (partsupp['P_COMMENT'].str.startswith('k'))][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['P_NAME', 'P_PARTKEY', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6880) | (partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['PS_PARTKEY'] > 35)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) | (part['MFGR'] != 'Manufacturer#2') | (part['P_PARTKEY'] >= 110) | (part['P_NAME'] == 'p') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5'])) | (part['CONTAINER'] != 'MED') | (part['SIZE'] >= 19) | (part['P_NAME'] == 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 3281) | (partsupp['PS_SUPPKEY'] <= 5517) & (partsupp['PS_PARTKEY'] >= 17) & (partsupp['P_COMMENT'] != 'bli') | (partsupp['AVAILQTY'] >= 1558)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#52') | (part['CONTAINER'].str.startswith('WRAP'))][['BRAND', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['PS_SUPPKEY'] < 2459) | (partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['AVAILQTY'] <= 1666)].merge(part[(part['MFGR'] == 'Manufacturer#3') | (part['RETAILPRICE'] < 1090.7375151175333)][['P_NAME', 'SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['AVAILQTY'] < 7945) | (partsupp['SUPPLYCOST'] < 868.0276321674626) & (partsupp['SUPPLYCOST'] > 107.17390197856827) | (partsupp['P_COMMENT'] != 'q')].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 13) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] >= 9)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['PS_PARTKEY'] >= 34)].merge(supplier[(supplier['S_NATIONKEY'] == 22) | (supplier['S_NATIONKEY'] < 6) & (supplier['S_SUPPKEY'] <= 61) & (supplier['S_ADDRESS'] == '1') | (supplier['S_COMMENT'] == 'd') & (supplier['S_ACCTBAL'] < 1551.0746565859174)].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 582.2277988081128) & (partsupp['PS_SUPPKEY'] <= 6962)].merge(supplier[(supplier['S_NATIONKEY'] >= 13) & (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 440.8154451039666) & (partsupp['PS_SUPPKEY'] != 950) & (partsupp['AVAILQTY'] == 6614)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_NAME'].str.startswith('M')) & (nation['N_COMMENT'] != 'n') & (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 188.56060253722808) | (partsupp['SUPPLYCOST'] >= 125.32124831830588) & (partsupp['P_COMMENT'] == 't') | (partsupp['SUPPLYCOST'] == 512.0378092600567)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] > 38) | (part['P_PARTKEY'] == 10) & (part['SIZE'] > 45) | (part['SIZE'] >= 5)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ADDRESS'].str.startswith('H'))].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] != 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'STA') | (part['P_PARTKEY'] >= 76) | (part['PT_COMMENT'] == 'p')][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 22) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_ADDRESS'] == 'j')].merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] != 8)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#3') | (part['MFGR'] == 'Manufacturer#2') | (part['RETAILPRICE'] == 1082.0129439738) & (part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] <= 1016.6426909960579) & (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'].str.startswith('blu')) & (part['MFGR'] == 'Manufacturer#5')][['PT_COMMENT', 'CONTAINER', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] < 16) | (part['P_PARTKEY'] >= 25) & (part['RETAILPRICE'] >= 1096.0126590035047) & (part['TYPE'] != 'S') | (part['RETAILPRICE'] == 923.9206141288907)][['BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 't')].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < -662.8993958634655) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_NATIONKEY'] < 3) & (supplier['S_SUPPKEY'] < 60)].merge(nation[(nation['N_NATIONKEY'] == 18)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 2908.302263275543) & (supplier['S_ACCTBAL'] == 3972.523164853942) | (supplier['S_COMMENT'] != 'v') | (supplier['S_COMMENT'] == 'j') & (supplier['S_NATIONKEY'] >= 23) & (supplier['S_PHONE'] == '17-') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] >= 7666.823281148344) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 13) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 158) | (supplier['S_PHONE'] == '32-')].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] == 1) | (region['R_NAME'] == 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'M') | (supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] != 'm') & (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] == 15) | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'] != '28-') & (supplier['S_SUPPKEY'] < 89) & (supplier['S_ADDRESS'] == 'G') | (supplier['S_ACCTBAL'] > 1412.9122607896372)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'r') & (supplier['S_ACCTBAL'] <= 6157.230749272691) & (supplier['S_ACCTBAL'] >= 373.47288558029436) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'Y')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'the') | (supplier['S_COMMENT'] == 'o') | (supplier['S_ACCTBAL'] == 2765.764891031432) & (supplier['S_SUPPKEY'] <= 36) & (supplier['S_NATIONKEY'] > 15) | (supplier['S_PHONE'] == '26-') & (supplier['S_PHONE'].str.startswith('2'))][['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'y') | (supplier['S_NATIONKEY'] < 11) & (supplier['S_SUPPKEY'] <= 154) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] >= 904.7365261042985)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] != 'c') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('26-'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 1) & (supplier['S_NATIONKEY'] != 14) & (supplier['S_SUPPKEY'] > 173) | (supplier['S_NATIONKEY'] < 14) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] > 7) & (nation['N_NAME'] != 'G')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 2) | (supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_SUPPKEY'] > 198) | (supplier['S_ADDRESS'] != 'N') | (supplier['S_ADDRESS'].str.startswith('a')) | (supplier['S_ADDRESS'] != 'Q') & (supplier['S_SUPPKEY'] == 119)].merge(nation[(nation['N_NATIONKEY'] != 17) | (nation['N_NAME'].str.startswith('P'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_ACCTBAL'] >= 116.48471848136546) | (supplier['S_NATIONKEY'] > 9) & (supplier['S_NATIONKEY'] != 20) & (supplier['S_ADDRESS'] != 'W')][['S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 158) & (supplier['S_SUPPKEY'] != 91)][['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_NATIONKEY'] < 14)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 101) & (supplier['S_ACCTBAL'] >= -222.98339563871127) | (supplier['S_ACCTBAL'] > 5977.489736661389)].merge(nation[(nation['N_NATIONKEY'] == 3) & (nation['N_NATIONKEY'] == 5) & (nation['N_NATIONKEY'] <= 20) & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 75) | (supplier['S_NATIONKEY'] < 15)][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NATIONKEY'] != 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_NATIONKEY'] < 16)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] != 'F')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'] != 'S') | (nation['N_NAME'] == 'B')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 2522.373386559376) & (customer['C_NATIONKEY'] != 2) | (customer['C_NATIONKEY'] < 13) | (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'm') & (customer['C_NATIONKEY'] < 20) & (customer['C_NATIONKEY'] <= 20)][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 6422.503908240323) | (customer['C_CUSTKEY'] == 29)][['C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 986.7136760519718) | (customer['C_NATIONKEY'] > 1) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'f') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] < 11) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('q'))][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= -290.61920532431134) & (customer['C_COMMENT'] == 'a') & (customer['C_PHONE'] != '3') & (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'] != 'n') | (customer['C_CUSTKEY'] <= 54)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] != 'K') | (nation['N_NAME'] != 'F')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'I') | (customer['C_ACCTBAL'] == 1003.5494507199494) | (customer['C_ACCTBAL'] > -417.86423725146057)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('L')) | (customer['C_ADDRESS'] != 'u') | (customer['C_NATIONKEY'] < 2) & (customer['C_COMMENT'] == 'h') | (customer['C_COMMENT'] != 'h') & (customer['C_ADDRESS'] != 'F')][['C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('h'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('e')) & (customer['C_ACCTBAL'] < 5272.168341795128) | (customer['C_CUSTKEY'] != 3)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'FURNITURE', 'BUILDING'])) & (customer['C_ADDRESS'].str.startswith('8')) | (customer['C_ACCTBAL'] > 9157.544396641926) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_NATIONKEY'] != 4) | (customer['C_CUSTKEY'] < 55) & (customer['C_ACCTBAL'] < 3374.8814543568124)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] == 'a') & (nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 17) | (customer['C_ACCTBAL'] > 8759.353447387224) & (customer['C_CUSTKEY'] == 30) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] != 16)][['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 's') & (nation['N_NATIONKEY'] == 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 6) & (customer['C_ADDRESS'].str.startswith('j')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] <= 3757.783298568137)].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 20) | (customer['C_NATIONKEY'] >= 15) & (customer['C_NATIONKEY'] <= 19) | (customer['C_NATIONKEY'] != 17)][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 14) | (customer['C_ADDRESS'].str.startswith('x')) | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_NATIONKEY'] == 0) | (customer['C_NATIONKEY'] == 18)][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] > 4658.687537436096) | (customer['C_ADDRESS'] != '9') & (customer['C_CUSTKEY'] > 27) & (customer['C_ACCTBAL'] < 46.9545272141969) | (customer['C_COMMENT'] == 'h') | (customer['C_PHONE'] != '13-') | (customer['C_CUSTKEY'] != 36)].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_COMMENT'].str.startswith('r'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] != 22) | (nation['N_NATIONKEY'] <= 11)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 'r')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] > 18) & (nation['N_NATIONKEY'] > 19) | (nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'].str.startswith(' '))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['CLERK'] != 'C') | (orders['O_COMMENT'] != 'a') | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '5-LOW')][['TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] >= 37) | (customer['C_PHONE'] != '13-') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '22-') & (customer['C_NATIONKEY'] <= 13)][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] > 65480) | (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[(customer['C_COMMENT'].str.startswith('a')) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'P')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_ORDERKEY'] != 498) & (orders['TOTALPRICE'] < 307842.02815736673) & (orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['C_CUSTKEY'] == 60) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'] != '.') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 1336) & (partsupp['PS_SUPPKEY'] >= 6770) & (partsupp['PS_SUPPKEY'] >= 385) | (partsupp['P_COMMENT'] == ' ')].merge(supplier[(supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] < 15)][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 46) | (partsupp['PS_PARTKEY'] >= 32) & (partsupp['P_COMMENT'] != 'y') | (partsupp['PS_PARTKEY'] != 47) | (partsupp['PS_PARTKEY'] != 12)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('S')) | (part['TYPE'] == 'E') & (part['P_NAME'] != 'k')][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['SUPPLYCOST'] > 774.57194645474)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] >= 23)][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 390.4371811506292) | (partsupp['SUPPLYCOST'] <= 181.50840890063216) | (partsupp['SUPPLYCOST'] > 708.3932706713573) & (partsupp['PS_PARTKEY'] < 43)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('MED'))][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR', 'SIZE', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 982.8887703857519) & (partsupp['P_COMMENT'] != 'k') & (partsupp['SUPPLYCOST'] != 492.3316455147556) | (partsupp['PS_SUPPKEY'] != 1038)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] == 20)][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] >= 129) | (part['RETAILPRICE'] >= 984.6504141180732)][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'TYPE', 'RETAILPRICE', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.06289601843827573) | (lineitem['L_SUPPKEY'] != 9442) & (lineitem['L_PARTKEY'] < 59950) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['DISCOUNT'] >= 0.034307399275132745) | (lineitem['LINENUMBER'] < 6) | (lineitem['L_ORDERKEY'] >= 42) & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['QUANTITY'] != 45)][['L_SUPPKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'L_ORDERKEY', 'QUANTITY', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'COMMITDATE']].merge(orders[['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 46879.47615063165) & (lineitem['L_COMMENT'] != 'r') | (lineitem['QUANTITY'] >= 14) | (lineitem['RECEIPTDATE'] > '1992-05-02')].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] <= 33) | (orders['O_COMMENT'] == 'd') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['F', 'P', 'O']))][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 12502.956758397435) | (lineitem['L_SUPPKEY'] == 6273) | (lineitem['LINENUMBER'] < 6)][['L_SUPPKEY', 'RETURNFLAG', 'QUANTITY', 'RECEIPTDATE', 'COMMITDATE', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] != 18) | (partsupp['SUPPLYCOST'] != 729.5505285013736) & (partsupp['SUPPLYCOST'] > 245.4341328977653)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 65804.90719765655) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['TAX'] == 0.07855185539591646)].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2398) & (partsupp['PS_PARTKEY'] >= 31) | (partsupp['AVAILQTY'] < 5775) | (partsupp['PS_SUPPKEY'] <= 4278)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] < 134) | (supplier['S_NATIONKEY'] != 10) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] == 127) & (supplier['S_SUPPKEY'] < 81) & (supplier['S_ADDRESS'] == '2')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['QUANTITY'] >= 28)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] != 'Brand#52') | (part['P_PARTKEY'] < 185) & (part['TYPE'].str.startswith('S')) & (part['TYPE'] != 'M') & (part['P_PARTKEY'] <= 26) & (part['TYPE'] == 'L') | (part['SIZE'] < 40) & (part['P_PARTKEY'] < 143)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'BRAND']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] <= 21) | (lineitem['L_ORDERKEY'] == 179) | (lineitem['L_PARTKEY'] != 101861) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_SUPPKEY'] == 6375) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['LINENUMBER'] > 6) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['TAX'] != 0.05875374697641906)].merge(partsupp[(partsupp['SUPPLYCOST'] == 288.3037410005458) | (partsupp['SUPPLYCOST'] <= 18.65456144628544) & (partsupp['SUPPLYCOST'] <= 413.8168488558711) | (partsupp['PS_PARTKEY'] != 36)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] > 119290)].merge(partsupp[(partsupp['AVAILQTY'] == 4965) & (partsupp['P_COMMENT'] != 'r') & (partsupp['SUPPLYCOST'] == 350.1728621682074) | (partsupp['PS_PARTKEY'] > 18) | (partsupp['P_COMMENT'] == 'e')].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 109343) & (lineitem['QUANTITY'] > 34) | (lineitem['L_SUPPKEY'] != 6813) | (lineitem['DISCOUNT'] <= 0.09445401115260893) & (lineitem['TAX'] < 0.012366341319199937) | (lineitem['LINENUMBER'] <= 3) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_PARTKEY'] == 8299) & (lineitem['RECEIPTDATE'] < '1992-05-02')][['QUANTITY', 'RECEIPTDATE', 'DISCOUNT', 'LINENUMBER', 'COMMITDATE', 'SHIPDATE', 'SHIPMODE', 'LINESTATUS', 'L_COMMENT']].groupby(by=['QUANTITY', 'L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'DISCOUNT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 5549) | (lineitem['SHIPMODE'] == 'RAIL')].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['BRAND'].isin(['Brand#12', 'Brand#31', 'Brand#11', 'Brand#51', 'Brand#34', 'Brand#43', 'Brand#23', 'Brand#15', 'Brand#41', 'Brand#21', 'Brand#22', 'Brand#53', 'Brand#13', 'Brand#45', 'Brand#33', 'Brand#24', 'Brand#44', 'Brand#54', 'Brand#42', 'Brand#25'])) | (part['SIZE'] < 41)][['SIZE', 'P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 37) & (lineitem['TAX'] < 0.04194383509569933) & (lineitem['L_COMMENT'] != 't') | (lineitem['TAX'] <= 0.034387294552445276) & (lineitem['COMMITDATE'] > '1992-05-15')][['SHIPDATE', 'L_PARTKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['O_ORDERKEY'] >= 648) | (orders['O_CUSTKEY'] != 131340)][['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['DISCOUNT'] != 0.054073595436388705) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_ORDERKEY'] != 75) | (lineitem['EXTENDEDPRICE'] >= 62650.8260921818) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) & (lineitem['EXTENDEDPRICE'] <= 39470.81270340672) & (lineitem['RETURNFLAG'].isin(['N']))][['LINENUMBER', 'L_SUPPKEY', 'L_COMMENT', 'SHIPMODE', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(partsupp.merge(part[(part['P_PARTKEY'] >= 30) | (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] >= 177) & (part['SIZE'] < 20)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['DISCOUNT'] > 0.00312190035410137) | (lineitem['SHIPMODE'].isin(['SHIP']))][['COMMITDATE', 'L_SUPPKEY', 'RETURNFLAG', 'L_COMMENT', 'TAX', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2058) | (partsupp['PS_PARTKEY'] <= 44)].merge(part[(part['PT_COMMENT'] != 'e') | (part['P_NAME'] == 's') | (part['BRAND'] != 'Brand#33') & (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06')][['L_COMMENT', 'L_SUPPKEY', 'SHIPMODE', 'L_PARTKEY', 'LINESTATUS', 'L_ORDERKEY']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['DISCOUNT'] < 0.009621490820630596) | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['L_COMMENT'] != 'i')][['L_SUPPKEY', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPDATE', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] == 754.5782483602177)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['QUANTITY'] > 11) | (lineitem['QUANTITY'] >= 11) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['DISCOUNT'] > 0.04762126891294505) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['TAX'] < 0.00013752734108175347) & (lineitem['RETURNFLAG'] == 'N')].merge(orders[(orders['TOTALPRICE'] != 201682.97935916213) & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] == 'C') & (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] <= 111956) & (orders['TOTALPRICE'] == 66641.09023439794)][['ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] != 'FOB')].merge(orders[(orders['O_COMMENT'] == 'd') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] != 121176) | (orders['TOTALPRICE'] == 185383.4521668914) | (orders['TOTALPRICE'] <= 282072.3105991279) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['TOTALPRICE'] < 90983.13249255012)].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] >= 7) | (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] == 41965.86885732112) | (lineitem['EXTENDEDPRICE'] != 59115.90424893664) & (lineitem['L_COMMENT'] != 'e') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['QUANTITY'] == 9)].merge(partsupp[(partsupp['AVAILQTY'] > 5351) & (partsupp['PS_PARTKEY'] >= 30) & (partsupp['PS_SUPPKEY'] <= 6963) | (partsupp['P_COMMENT'] != 'i') | (partsupp['PS_SUPPKEY'] != 5343)].merge(part[['P_NAME', 'SIZE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'REG AIR') & (lineitem['L_SUPPKEY'] <= 5208) & (lineitem['TAX'] < 0.03151983133701772)][['SHIPDATE', 'RECEIPTDATE', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'SHIPMODE', 'TAX']].merge(orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['COMMITDATE', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'L_ORDERKEY']].merge(orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 19) | (nation['N_NATIONKEY'] != 17) & (nation['N_COMMENT'] == 'n') | (nation['N_NATIONKEY'] <= 6)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'L_SUPPKEY', 'QUANTITY', 'COMMITDATE', 'L_PARTKEY', 'SHIPMODE', 'L_COMMENT', 'DISCOUNT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 4790)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'P_NAME', 'CONTAINER']).agg('count')

lineitem[['LINESTATUS', 'RECEIPTDATE', 'DISCOUNT', 'QUANTITY', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 't') & (partsupp['AVAILQTY'] == 1203) & (partsupp['PS_SUPPKEY'] == 6997) & (partsupp['SUPPLYCOST'] <= 837.93115127918) & (partsupp['AVAILQTY'] > 9809)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY', 'RETURNFLAG', 'QUANTITY', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'TAX']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 523.082212166611) & (partsupp['PS_SUPPKEY'] < 3928) | (partsupp['PS_SUPPKEY'] != 4442) | (partsupp['P_COMMENT'] != 'i') & (partsupp['P_COMMENT'] == 'q')][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'RETURNFLAG', 'LINENUMBER', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'SHIPINSTRUCT', 'QUANTITY', 'COMMITDATE']].merge(partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'TAX', 'SHIPINSTRUCT', 'LINESTATUS', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 9)][['P_COMMENT', 'PS_PARTKEY']].merge(part[['RETAILPRICE', 'TYPE', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'L_SUPPKEY', 'QUANTITY']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'LINESTATUS', 'TAX', 'RECEIPTDATE']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG', 'L_COMMENT', 'SHIPINSTRUCT', 'DISCOUNT', 'QUANTITY', 'L_PARTKEY']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != '1') & (supplier['S_NATIONKEY'] < 19) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_SUPPKEY'] < 73) | (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_ADDRESS'] != 'g')][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('count')

lineitem[['SHIPINSTRUCT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPMODE', 'DISCOUNT', 'L_COMMENT', 'LINENUMBER']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] != '7') | (customer['C_COMMENT'] == 'g') | (customer['C_COMMENT'] != 'f') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] < 22) | (customer['C_ADDRESS'] == '9') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] < 1) | (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_COMMENT'] == 't') | (customer['C_NATIONKEY'] != 2) | (customer['C_ADDRESS'].str.startswith('H'))][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] != 12) & (customer['C_CUSTKEY'] >= 6) | (customer['C_ACCTBAL'] == 7249.113097020267) | (customer['C_PHONE'] == '2') | (customer['C_COMMENT'] != 'r') & (customer['C_CUSTKEY'] >= 24)][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] == 3) & (customer['C_ADDRESS'] == 'a')][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] == 7369.032833363117) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_PHONE'].str.startswith('2')) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE')][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] < 26)].merge(customer[(customer['C_ACCTBAL'] < 5589.33888962392) & (customer['C_ACCTBAL'] <= 5197.272549066562)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] > 309803.3431093106) & (orders['O_ORDERKEY'] < 512) | (orders['TOTALPRICE'] > 260027.5776094365) | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] == 35872.84660573258) | (orders['TOTALPRICE'] < 142340.59841151602) | (orders['O_CUSTKEY'] <= 16891)].merge(customer[(customer['C_ACCTBAL'] < 5748.199669477938) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING']))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] <= 278003.74173882476) & (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] >= 146642)][['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'BUILDING'])) & (customer['C_ACCTBAL'] <= 3517.068839720666) | (customer['C_CUSTKEY'] != 18) & (customer['C_CUSTKEY'] >= 65) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'].str.startswith('u'))][['C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] <= 452)][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_PHONE'] == '18-') | (customer['C_PHONE'] != '22-') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] != 'n')][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_COMMENT'] != 'l') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ADDRESS'] != 'M') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] >= 0) & (nation['N_NATIONKEY'] > 17) & (nation['N_NATIONKEY'] < 7)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['TOTALPRICE'] == 215115.51262353203) & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NATIONKEY'] != 21)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] < 6) | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW']))][['TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 22)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] == 85683.08369722308)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'egu') & (orders['O_COMMENT'] != 'f') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] == 'C')].merge(customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'the') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_CUSTKEY'] != 67147) & (orders['O_ORDERKEY'] < 84) | (orders['O_COMMENT'] != 'a') | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] >= 56) | (orders['TOTALPRICE'] > 74264.91243198075) | (orders['O_ORDERKEY'] < 332)].merge(customer[(customer['C_NATIONKEY'] >= 21) & (customer['C_NATIONKEY'] <= 10)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('q')) | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ACCTBAL'] == 1470.2466430501622) | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_ADDRESS'] != 'j')].merge(nation[(nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('the')) | (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['O_CUSTKEY'] > 129124)][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 43429) | (orders['O_COMMENT'].str.startswith('egu')) & (orders['O_CUSTKEY'] < 129806) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'].str.startswith('egu'))].merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('Y')) & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] == ' ')][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 492) & (orders['TOTALPRICE'] == 122480.80374413145)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] <= 4992.520204494183) & (customer['C_ADDRESS'] != 'R') & (customer['C_COMMENT'].str.startswith('f'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0)].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 22) | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 73196.6779355867) | (orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_CUSTKEY'] > 43) | (customer['C_ADDRESS'].str.startswith('b')) & (customer['C_ADDRESS'].str.startswith('J')) & (customer['C_ACCTBAL'] != 4060.3614934860543)].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NATIONKEY'] != 18)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 27756.390233265483) & (orders['O_COMMENT'] == 'j') & (orders['SHIPPRIORITY'] < 0)][['O_COMMENT', 'CLERK', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'f') & (customer['C_CUSTKEY'] >= 40) | (customer['C_ADDRESS'] != 'L') | (customer['C_COMMENT'].str.startswith('s')) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] <= 3) | (customer['C_NATIONKEY'] > 4)][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] <= 91) | (customer['C_PHONE'] != '2') | (customer['C_PHONE'] == '3') | (customer['C_PHONE'] != '18-')][['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('count')

orders[['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] != 's') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_ADDRESS'] != 'L') & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NATIONKEY'] == 3) & (customer['C_NATIONKEY'] != 15) | (customer['C_ADDRESS'] != 'X')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == 79.22598965694579) | (customer['C_NAME'] != 'C')][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 3008.6311947697636) | (customer['C_ACCTBAL'] != 5648.0181082605295)].merge(nation[(nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['P_NAME'].str.startswith('p')) & (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] != 1034.2091281037162) | (part['P_PARTKEY'] >= 157) & (part['RETAILPRICE'] >= 1054.338418955136) | (part['RETAILPRICE'] == 911.5696797007884) | (part['TYPE'] == 'SMA') & (part['RETAILPRICE'] >= 939.1624159226549) & (part['SIZE'] < 40)][['RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR']].groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 8370.746345047111)][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] != 'n') & (nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '28-') & (supplier['S_NATIONKEY'] != 14) | (supplier['S_ADDRESS'] != 'B')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 325) | (partsupp['SUPPLYCOST'] < 486.5496081575101) | (partsupp['PS_PARTKEY'] > 30)].merge(supplier[(supplier['S_PHONE'].str.startswith('28-'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 206) | (partsupp['P_COMMENT'].str.startswith(' th'))][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 9493) & (partsupp['PS_SUPPKEY'] > 3898) & (partsupp['PS_SUPPKEY'] != 6083) | (partsupp['PS_PARTKEY'] >= 18)].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] >= 16) & (nation['N_COMMENT'] == 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 8169) | (partsupp['AVAILQTY'] < 3135) & (partsupp['AVAILQTY'] < 891)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 17) & (partsupp['P_COMMENT'] != 'j') | (partsupp['SUPPLYCOST'] > 788.581911052131) | (partsupp['AVAILQTY'] > 110) | (partsupp['P_COMMENT'] != 'l')].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 19) | (partsupp['AVAILQTY'] != 7475) & (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['SUPPLYCOST'] >= 855.4600929819053)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 4) | (partsupp['PS_SUPPKEY'] == 5133) | (partsupp['SUPPLYCOST'] > 506.51900631746514) | (partsupp['P_COMMENT'] != 'g') | (partsupp['PS_SUPPKEY'] > 7511)].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 4) & (partsupp['PS_PARTKEY'] > 41) & (partsupp['PS_PARTKEY'] <= 8) | (partsupp['SUPPLYCOST'] != 417.1762738193987) & (partsupp['AVAILQTY'] != 2530)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] < 197) & (part['RETAILPRICE'] != 1022.1917778247789) & (part['P_NAME'] != 'c') & (part['TYPE'] == 'L') & (part['P_PARTKEY'] <= 144) & (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] == 84)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 1971) & (partsupp['SUPPLYCOST'] > 489.18137866805455) | (partsupp['PS_SUPPKEY'] == 4048) | (partsupp['PS_PARTKEY'] >= 2)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_COMMENT'] != ' sl') & (supplier['S_SUPPKEY'] == 158) | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_ACCTBAL'] == 6719.647740350887) | (supplier['S_ADDRESS'] == '8')][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 5970) | (partsupp['PS_SUPPKEY'] < 5748)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] >= 80)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 7062)].merge(part[(part['TYPE'] == 'M') | (part['CONTAINER'].str.startswith('LG')) | (part['P_PARTKEY'] == 98) & (part['P_PARTKEY'] >= 151)][['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 2492) & (partsupp['PS_SUPPKEY'] < 1336) & (partsupp['AVAILQTY'] != 165)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 4601) & (partsupp['PS_PARTKEY'] == 39) | (partsupp['SUPPLYCOST'] <= 893.1875750208812) | (partsupp['AVAILQTY'] != 6505)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['AVAILQTY'] < 383)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'].str.startswith(' ')) | (supplier['S_PHONE'] == '1')].merge(nation[(nation['N_NATIONKEY'] > 19)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'k') | (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['SUPPLYCOST'] < 919.9931521104396) & (partsupp['PS_PARTKEY'] == 36) & (partsupp['AVAILQTY'] <= 1310)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] == 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'e') & (partsupp['SUPPLYCOST'] >= 919.5197539416823) & (partsupp['SUPPLYCOST'] < 160.94152717892163)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['P_NAME', 'BRAND', 'TYPE', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('h')) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['SUPPLYCOST'] > 887.330348173549) & (partsupp['SUPPLYCOST'] != 437.54143245961205)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 320.0322474798551) & (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['PS_SUPPKEY'] == 6867) | (partsupp['P_COMMENT'] != 'n') | (partsupp['PS_PARTKEY'] >= 48)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == ',')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[['PS_PARTKEY']].merge(part[(part['SIZE'] < 10) | (part['RETAILPRICE'] >= 1065.289316810159) & (part['P_PARTKEY'] == 24) & (part['PT_COMMENT'].str.startswith('t')) & (part['RETAILPRICE'] <= 944.71434741926)][['PT_COMMENT', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] < 193) | (part['SIZE'] > 12) & (part['SIZE'] <= 25) & (part['P_NAME'] != 'lin') & (part['PT_COMMENT'] == 'e') & (part['BRAND'].isin(['Brand#35', 'Brand#53', 'Brand#34', 'Brand#13', 'Brand#33', 'Brand#54', 'Brand#24', 'Brand#25', 'Brand#11', 'Brand#22', 'Brand#15', 'Brand#55', 'Brand#42', 'Brand#14', 'Brand#23', 'Brand#31']))][['P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] <= 52) | (part['P_NAME'] != 'g') & (part['SIZE'] != 28)][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'TYPE', 'CONTAINER']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 0) | (nation['N_NATIONKEY'] <= 6) | (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != 'y')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'].str.startswith('P'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'o') | (supplier['S_COMMENT'] != 'al ') & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] != ' sl') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] == 7740.4588260266455) | (supplier['S_COMMENT'].str.startswith('i'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_ACCTBAL'] > 3273.7779800661738) & (supplier['S_SUPPKEY'] != 76)][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] > 8) | (nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('g'))][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_PHONE'] == '14-') & (supplier['S_ACCTBAL'] <= 5760.913763945021) & (supplier['S_ADDRESS'].str.startswith('6'))][['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 11)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 121) & (supplier['S_ADDRESS'] == 'E') | (supplier['S_SUPPKEY'] > 24) | (supplier['S_ACCTBAL'] > 4350.836612364461)][['S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'I') & (nation['N_NAME'] == 'F') & (nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 185) & (supplier['S_SUPPKEY'] < 26) & (supplier['S_ACCTBAL'] >= 1213.5489351975737) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 15) | (supplier['S_NATIONKEY'] == 17)].merge(nation[(nation['N_NATIONKEY'] != 14) & (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] > 21)].merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 70) | (supplier['S_PHONE'] != '3') | (supplier['S_ADDRESS'] == '8') & (supplier['S_SUPPKEY'] > 55)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'].str.startswith('a'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'l') | (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'M') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'] != 't') | (customer['C_CUSTKEY'] <= 29) | (customer['C_PHONE'] != '13-') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 5)].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('c')) | (customer['C_CUSTKEY'] <= 64) | (customer['C_ACCTBAL'] < 988.2221738213902)][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('r')) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_PHONE'] != '27-') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NATIONKEY'] < 20) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE']))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 70) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 9194.255644840021) & (customer['C_ADDRESS'] != 'g') & (customer['C_NATIONKEY'] == 3) | (customer['C_CUSTKEY'] >= 94) & (customer['C_CUSTKEY'] >= 87) & (customer['C_ADDRESS'] != 'K')][['C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'] == 'P') & (nation['N_NAME'] != 'S')].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 88) | (customer['C_ACCTBAL'] < 1376.783251716156) & (customer['C_ACCTBAL'] > -677.4681639658487) | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_ACCTBAL'] != 405.4782179965216) & (customer['C_COMMENT'] != 'u') & (customer['C_ACCTBAL'] > 8221.184729851695)][['C_NATIONKEY', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 12) | (customer['C_COMMENT'].str.startswith('p')) & (customer['C_NATIONKEY'] == 14) | (customer['C_PHONE'].str.startswith('25-'))][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_CUSTKEY'] == 63) & (customer['C_CUSTKEY'] <= 35) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NATIONKEY'] > 13)].merge(nation[(nation['N_NATIONKEY'] != 9) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] <= 16) | (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] < 1) | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 5) | (nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 22) & (nation['N_COMMENT'] == 'l')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] == 11)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'E') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'].str.startswith('a')) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 102)].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 2265) | (partsupp['P_COMMENT'] != ',')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] < 98) | (part['P_NAME'].str.startswith('p'))][['MFGR', 'BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 1467) | (partsupp['P_COMMENT'] != 'p') & (partsupp['SUPPLYCOST'] == 115.39693547714307) | (partsupp['PS_PARTKEY'] >= 14)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('0')) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_SUPPKEY'] == 163) | (supplier['S_ADDRESS'].str.startswith('i')) | (supplier['S_SUPPKEY'] > 90) | (supplier['S_SUPPKEY'] == 150) | (supplier['S_PHONE'] != '2')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 11) & (partsupp['PS_PARTKEY'] < 22) | (partsupp['PS_PARTKEY'] <= 20) | (partsupp['P_COMMENT'] == 't') & (partsupp['AVAILQTY'] < 640)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '17-') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 1) | (supplier['S_SUPPKEY'] == 197) & (supplier['S_PHONE'] != '17-') & (supplier['S_PHONE'].str.startswith('14-'))][['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 23) & (nation['N_COMMENT'] != 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['AVAILQTY'] != 9479) | (partsupp['AVAILQTY'] != 1156)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] >= 23) & (part['TYPE'] != 'M') & (part['P_NAME'].str.startswith('t')) | (part['P_PARTKEY'] <= 105) | (part['SIZE'] > 46) & (part['TYPE'] != 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

lineitem[(lineitem['DISCOUNT'] <= 0.016189321747114217) & (lineitem['TAX'] <= 0.06252277671910278) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_ORDERKEY'] > 93) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPDATE'] > '1992-04-27')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 364.99050380362837) | (partsupp['PS_PARTKEY'] != 43) | (partsupp['PS_SUPPKEY'] == 1205)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 46294.21262659816) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['TAX'] <= 0.04845487445926777) & (lineitem['L_COMMENT'] != 'p') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['QUANTITY'] >= 41)].merge(orders.merge(customer[(customer['C_ADDRESS'] == 'v') | (customer['C_ADDRESS'] != 'j') | (customer['C_COMMENT'] == 'a')][['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == ' re') & (lineitem['TAX'] != 0.05601993185634) | (lineitem['LINESTATUS'] != 'O') | (lineitem['DISCOUNT'] == 0.09174224620625412) | (lineitem['DISCOUNT'] > 0.042944963954082274) & (lineitem['L_PARTKEY'] > 197718) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['LINENUMBER'] > 3)].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1021.5418056731359) | (part['RETAILPRICE'] < 1051.4936526473073)][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] != 28) & (lineitem['L_PARTKEY'] < 88017) | (lineitem['LINESTATUS'] != 'F') & (lineitem['LINESTATUS'] == 'F') | (lineitem['DISCOUNT'] != 0.023196661903228246) | (lineitem['COMMITDATE'] != '1998-10-16')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 5201) | (partsupp['AVAILQTY'] <= 1368) & (partsupp['P_COMMENT'] != 'ly ') & (partsupp['PS_PARTKEY'] != 8) & (partsupp['SUPPLYCOST'] <= 978.3723022920329)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'TYPE', 'CONTAINER']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 164)][['SHIPDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'QUANTITY', 'RETURNFLAG', 'LINESTATUS', 'TAX', 'L_SUPPKEY', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] > 83673.40961458156) & (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['O_CUSTKEY'] == 98716) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] != 147671.77650420088) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] == '1998-07-21')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] != 9916) & (lineitem['L_COMMENT'] == ' ca') | (lineitem['LINESTATUS'] == 'O') | (lineitem['DISCOUNT'] >= 0.044982047492427936) & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON']))][['L_ORDERKEY', 'SHIPMODE']].merge(orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 2248) | (lineitem['EXTENDEDPRICE'] <= 62101.79779839311) | (lineitem['QUANTITY'] >= 2) | (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['LINENUMBER'] >= 2) | (lineitem['LINENUMBER'] == 3) & (lineitem['L_ORDERKEY'] != 186) | (lineitem['TAX'] == 0.019371169988681824) & (lineitem['SHIPMODE'].isin(['MAIL', 'AIR', 'REG AIR', 'FOB', 'TRUCK', 'RAIL', 'SHIP']))][['L_SUPPKEY', 'TAX', 'L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'RECEIPTDATE', 'SHIPDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['SUPPLYCOST'] >= 350.51134792636213)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[(lineitem['QUANTITY'] == 15) | (lineitem['SHIPINSTRUCT'] == 'NONE')].merge(partsupp[(partsupp['PS_PARTKEY'] < 3) | (partsupp['PS_SUPPKEY'] > 3053)].merge(part[(part['P_PARTKEY'] > 36) & (part['RETAILPRICE'] == 969.0330976616391) & (part['BRAND'] == 'Brand#52')][['PT_COMMENT', 'BRAND', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['LINENUMBER'] > 4) | (lineitem['TAX'] > 0.06634226790759656) & (lineitem['L_SUPPKEY'] >= 5582) & (lineitem['L_PARTKEY'] != 104349) & (lineitem['L_COMMENT'] != ' ') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['COMMITDATE', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 16) & (partsupp['SUPPLYCOST'] > 487.5180176985571) | (partsupp['PS_SUPPKEY'] > 2048) & (partsupp['PS_SUPPKEY'] == 7270)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['SHIPDATE'] > '1998-10-30')].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4287) & (partsupp['AVAILQTY'] > 9342)].merge(part[(part['BRAND'] != 'Brand#54') & (part['P_PARTKEY'] == 134) & (part['BRAND'] != 'Brand#53') & (part['MFGR'].isin(['Manufacturer#4']))][['MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['TAX'] >= 0.04245734334934797) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['QUANTITY'] == 13)][['SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'SHIPDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 36)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_COMMENT'] == 'b')].merge(orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] != 205314.08054761152) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'r') | (orders['TOTALPRICE'] > 166757.32041116574) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'] == 'O')][['O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['L_SUPPKEY'] == 8019) | (lineitem['COMMITDATE'] < '1992-05-15')][['L_COMMENT', 'L_ORDERKEY', 'TAX']].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] <= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['AIR', 'FOB'])) & (lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['LINENUMBER'] >= 2) & (lineitem['RETURNFLAG'] != 'N')].merge(orders.merge(customer[(customer['C_ACCTBAL'] != 296.95654914947886) | (customer['C_COMMENT'].str.startswith('k'))][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] < 0.07206473676316476)].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] >= 249223.31470017234) & (orders['O_ORDERKEY'] <= 531) & (orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] != 'a')].merge(customer[['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_ADDRESS']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'RECEIPTDATE', 'SHIPMODE', 'L_SUPPKEY', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPINSTRUCT', 'TAX', 'LINENUMBER', 'L_COMMENT']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['O_CUSTKEY'] != 34748) & (orders['TOTALPRICE'] == 353754.35514370503) | (orders['O_ORDERKEY'] < 774) & (orders['TOTALPRICE'] > 325465.47676731105) & (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == 'x') | (orders['TOTALPRICE'] < 162070.8832788124)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINENUMBER', 'DISCOUNT', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINESTATUS', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] != 33349.19302756247) | (orders['ORDERPRIORITY'].isin(['1-URGENT']))].merge(customer[(customer['C_NATIONKEY'] < 21) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 6383.226430304669) & (customer['C_ACCTBAL'] < 9007.962742835729) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'BUILDING')][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINENUMBER', 'TAX', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 22) & (partsupp['SUPPLYCOST'] >= 24.733768166559127)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('f'))][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'DISCOUNT', 'SHIPMODE', 'RETURNFLAG', 'L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE', 'L_ORDERKEY']].merge(orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'L_PARTKEY', 'SHIPDATE', 'RETURNFLAG', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 205.70953458853947) & (partsupp['PS_PARTKEY'] > 47) | (partsupp['SUPPLYCOST'] == 531.3859349309756) | (partsupp['AVAILQTY'] < 1083) & (partsupp['AVAILQTY'] < 5843)].merge(supplier[(supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_ADDRESS'].str.startswith('6')) | (supplier['S_COMMENT'] != '!') & (supplier['S_ACCTBAL'] <= 2300.0829617046456) & (supplier['S_ACCTBAL'] <= 6032.965984564618) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'es ')][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'L_PARTKEY', 'QUANTITY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'LINENUMBER', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] != 2019) & (partsupp['P_COMMENT'].str.startswith('a')) & (partsupp['PS_PARTKEY'] > 7)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem[['RETURNFLAG', 'L_SUPPKEY', 'TAX']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3684) & (partsupp['PS_PARTKEY'] < 5)].merge(supplier.merge(nation[(nation['N_NAME'] == 'I') | (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'RETURNFLAG', 'SHIPINSTRUCT', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5418) & (partsupp['PS_SUPPKEY'] < 5958)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPDATE', 'TAX', 'L_SUPPKEY', 'RECEIPTDATE', 'L_ORDERKEY', 'DISCOUNT', 'L_PARTKEY', 'RETURNFLAG', 'LINENUMBER', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2069) & (partsupp['P_COMMENT'].str.startswith(' ')) | (partsupp['SUPPLYCOST'] != 748.3505496793042) & (partsupp['PS_PARTKEY'] == 43) & (partsupp['P_COMMENT'].str.startswith('e'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'L_PARTKEY', 'COMMITDATE', 'SHIPDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] > 18) & (partsupp['SUPPLYCOST'] == 326.2071927787684)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPMODE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] > 19) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 3) & (customer['C_NATIONKEY'] >= 0)][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] != 13) | (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 7) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'u') & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] != 'U') & (nation['N_NAME'] != 'I')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] == 62969) & (orders['TOTALPRICE'] >= 246923.7201905771) | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 558)][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] != 'c') & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] >= 0) | (orders['TOTALPRICE'] <= 303903.7852247273) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] == 12348) | (orders['TOTALPRICE'] == 55916.6778440877) & (orders['O_CUSTKEY'] <= 129857) & (orders['O_CUSTKEY'] != 68297) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERSTATUS'].isin(['F']))][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NAME'] == 'P') & (nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_CUSTKEY'] >= 49326)][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'p')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] == 29444) | (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != '.') | (orders['O_CUSTKEY'] >= 132902) & (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > -788.0147951007227) & (customer['C_COMMENT'] == 'h') | (customer['C_ADDRESS'] == 'F') | (customer['C_PHONE'] == '13-')][['C_NAME', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'd') | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_COMMENT'] == 'g') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] <= 3)].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'g') | (orders['O_CUSTKEY'] > 18010) | (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] <= 666) & (orders['O_COMMENT'] != '.') | (orders['O_ORDERKEY'] < 612) | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] != 229)][['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] != 'f') | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_PHONE'].str.startswith('3'))][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 's') | (orders['O_COMMENT'] == 'q') | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] != 27) & (customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] <= 9) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'h')][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] == 4)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('a')) | (orders['O_CUSTKEY'] >= 26615) | (orders['O_CUSTKEY'] <= 135881) & (orders['TOTALPRICE'] <= 312467.416621541)].merge(customer[(customer['C_COMMENT'] != 'k') & (customer['C_ADDRESS'] == 'Q') | (customer['C_NATIONKEY'] <= 13) | (customer['C_PHONE'] == '25-') | (customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('e')) | (orders['O_COMMENT'].str.startswith('x')) & (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_ACCTBAL'] <= 5470.478227779827) | (customer['C_CUSTKEY'] == 27) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ADDRESS'] == 'z')].merge(nation[(nation['N_COMMENT'] != 'y')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('e'))][['O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('u')) | (orders['O_COMMENT'].str.startswith('l')) & (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] <= 586) | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] >= 58253.676136846) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_CUSTKEY'] > 77979)][['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('y')) & (customer['C_NATIONKEY'] <= 11)].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 51544) & (orders['TOTALPRICE'] < 127880.23025544909) | (orders['O_CUSTKEY'] <= 105641) | (orders['O_ORDERKEY'] <= 554) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['TOTALPRICE'] == 26650.007312096597) & (orders['O_CUSTKEY'] < 54469)].merge(customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] > 3) & (customer['C_CUSTKEY'] != 77) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ACCTBAL'] >= 5038.190415794583) & (customer['C_ACCTBAL'] >= 5109.890968556953)][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 41885) & (orders['ORDERSTATUS'] == 'F')][['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] == '3')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 't') & (nation['N_NAME'] != 'A') & (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 434) & (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] < 656) | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH']))][['O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NAME'] == 'M') & (nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 70) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))].merge(customer[(customer['C_NAME'] == 'C')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_NATIONKEY'] <= 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 30) & (orders['O_ORDERKEY'] <= 305) | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] > 796) | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT'])) | (orders['CLERK'].str.startswith('C'))][['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] == 14) & (customer['C_CUSTKEY'] < 70)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != 'l') & (orders['TOTALPRICE'] != 159632.095017139) | (orders['O_COMMENT'].str.startswith('b')) | (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['O_ORDERKEY'] == 13) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_COMMENT'] != 'r')].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) | (customer['C_ADDRESS'] == 'O') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] < 3) | (customer['C_NATIONKEY'] == 19)].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] != 155001.67218047616) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] > 321) & (orders['CLERK'] != 'C')].merge(customer.merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NATIONKEY'] > 19) & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 320516.42163611663) | (orders['O_COMMENT'] != 'd') & (orders['TOTALPRICE'] > 74545.01753158258) & (orders['O_COMMENT'] == 'i')][['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'].str.startswith('s')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 4) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('7')) | (customer['C_COMMENT'] == 'k') & (customer['C_PHONE'] != '22-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_CUSTKEY'] != 54) & (customer['C_NATIONKEY'] <= 13) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'p')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_ACCTBAL'] >= 2209.212317056872) | (customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'] != ',') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] == 42) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_PHONE'] != '3')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NAME']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] != 4846.082450956728) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 2811.7436664082306)].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] >= 4) & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_ACCTBAL'] != 9425.483034501214) & (customer['C_ACCTBAL'] == 7729.373930842321) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] <= 3400.7938698304133) & (customer['C_CUSTKEY'] <= 43) & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_CUSTKEY'] >= 29) & (customer['C_CUSTKEY'] > 56)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 23) | (nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_COMMENT'] != 'y') | (nation['N_NAME'] == 'K') | (nation['N_NAME'] != 'E')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 7064.466519143852) | (supplier['S_ACCTBAL'] != -840.5192811152492) | (supplier['S_SUPPKEY'] == 85) & (supplier['S_COMMENT'].str.startswith('t'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 8) | (supplier['S_SUPPKEY'] <= 33)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] != 'y') & (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] != 12)].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 8733) | (partsupp['SUPPLYCOST'] < 297.94644504518317)].merge(part[(part['BRAND'] == 'Brand#41') & (part['RETAILPRICE'] <= 1000.1702525584603) & (part['RETAILPRICE'] > 984.2550056088776) & (part['MFGR'] != 'Manufacturer#2') & (part['TYPE'].str.startswith('P')) & (part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] >= 942.2767617469467)][['P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] == 1532) | (partsupp['SUPPLYCOST'] < 384.60325920479784)].merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 19) | (nation['N_NATIONKEY'] < 3)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 3) & (partsupp['P_COMMENT'] != 'h') & (partsupp['AVAILQTY'] < 2572) & (partsupp['PS_SUPPKEY'] == 5123)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 'G') | (supplier['S_ADDRESS'] != 'H')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 36) | (partsupp['PS_PARTKEY'] <= 1) | (partsupp['PS_PARTKEY'] == 28)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ADDRESS'] != 'L') & (supplier['S_COMMENT'] == 't')][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 18) & (partsupp['P_COMMENT'] == 'h')].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['AVAILQTY'] == 9881)].merge(part[(part['TYPE'].str.startswith('L')) & (part['SIZE'] > 31) | (part['PT_COMMENT'] == '!') | (part['PT_COMMENT'].str.startswith('l')) | (part['P_PARTKEY'] > 49) | (part['SIZE'] >= 36) | (part['SIZE'] > 9) & (part['SIZE'] > 46)][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

partsupp[(partsupp['P_COMMENT'] != '.') & (partsupp['PS_PARTKEY'] != 10)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'bli') | (partsupp['P_COMMENT'] != 'ly ') | (partsupp['PS_SUPPKEY'] > 4639) | (partsupp['PS_SUPPKEY'] > 1197) & (partsupp['PS_PARTKEY'] == 2)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['PT_COMMENT'].str.startswith('r')) | (part['SIZE'] <= 16) & (part['TYPE'] != 'E') & (part['BRAND'] == 'Brand#44') & (part['P_PARTKEY'] == 27) | (part['MFGR'] != 'Manufacturer#5') & (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] == 'Brand#15') | (part['P_PARTKEY'] == 49)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'l') | (partsupp['AVAILQTY'] > 8117)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 6175.815479219058) & (supplier['S_SUPPKEY'] > 100) | (supplier['S_SUPPKEY'] >= 24) | (supplier['S_NATIONKEY'] > 7) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 31)].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] == 'U')].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 181.65388118727577) & (partsupp['PS_SUPPKEY'] > 1103) | (partsupp['AVAILQTY'] >= 3599) | (partsupp['PS_SUPPKEY'] < 2429)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] > 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 847.6220278492659) & (partsupp['PS_PARTKEY'] <= 43)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_NATIONKEY'] == 7) | (supplier['S_PHONE'] != '17-') & (supplier['S_COMMENT'].str.startswith('the')) & (supplier['S_NATIONKEY'] >= 4) | (supplier['S_PHONE'] == '1')].merge(nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 705.8948745062773)].merge(nation[(nation['N_COMMENT'] != 't')].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('a')) | (supplier['S_ACCTBAL'] < 7044.430128533967) & (supplier['S_ADDRESS'] != 'R')][['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] == 1)][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 't')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_SUPPKEY'] >= 110) | (supplier['S_NATIONKEY'] == 5) | (supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_ACCTBAL'] >= 7.849242419175425) & (supplier['S_ADDRESS'] != 'W') | (supplier['S_PHONE'] != '3')][['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_ADDRESS'] == 'G') | (supplier['S_COMMENT'] != 'l') | (supplier['S_SUPPKEY'] > 72) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'B')].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] != 6) | (nation['N_NATIONKEY'] >= 18) & (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_COMMENT'] == 'd') | (supplier['S_PHONE'].str.startswith('26-'))][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'Z') & (supplier['S_ADDRESS'].str.startswith('u')) | (supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_COMMENT'] == 'q') & (supplier['S_ACCTBAL'] > 2459.44436710394)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 10) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] >= 6)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 4) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ACCTBAL'] >= 2250.8468135535168) & (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ACCTBAL'] < 9086.79116861035) | (supplier['S_ACCTBAL'] < 1716.8642258467005) | (supplier['S_NATIONKEY'] == 14)][['S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] <= 7802.980651146897) | (supplier['S_NATIONKEY'] > 8) & (supplier['S_SUPPKEY'] == 8) | (supplier['S_ACCTBAL'] >= 6741.324540160212) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != 3863.1634465233974)].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'v') & (nation['N_NATIONKEY'] > 21) & (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 136) & (supplier['S_NATIONKEY'] <= 19)][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 47) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] != 5181.4925892720785) & (supplier['S_SUPPKEY'] < 133) & (supplier['S_SUPPKEY'] != 3) | (supplier['S_ACCTBAL'] >= 9508.735800350505)].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_COMMENT'] == 'o')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 13) & (supplier['S_PHONE'] == '14-') | (supplier['S_SUPPKEY'] < 178) | (supplier['S_NATIONKEY'] == 4) | (supplier['S_ADDRESS'].str.startswith('g')) & (supplier['S_NATIONKEY'] > 6) & (supplier['S_SUPPKEY'] > 47)][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] > 13) & (nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] != 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 51) | (supplier['S_PHONE'] != '26-') & (supplier['S_PHONE'] != '2') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'h')][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 36) & (supplier['S_PHONE'] == '3') & (supplier['S_NATIONKEY'] == 12) & (supplier['S_NATIONKEY'] <= 9) | (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_NATIONKEY'] >= 19) & (supplier['S_SUPPKEY'] > 148)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] < 8) | (nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 6757.460803818106)][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] == 'v') & (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != '4') | (customer['C_ACCTBAL'] > 7664.2243889937145) & (customer['C_PHONE'] != '25-') & (customer['C_COMMENT'] != ' ') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] >= 7340.360086707171) | (customer['C_ACCTBAL'] == 8915.407204562647)][['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 19) | (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] <= 10) | (nation['N_NATIONKEY'] <= 5)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith(',')) & (customer['C_PHONE'] != '22-') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] == 27) & (customer['C_ADDRESS'] != 'Y')][['C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] < 12)].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 59) & (customer['C_ACCTBAL'] != 363.37386552146745) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'] == ',') & (customer['C_NAME'] != 'C')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 43) | (customer['C_CUSTKEY'] < 10) | (customer['C_ACCTBAL'] >= 8703.769752058779) & (customer['C_ACCTBAL'] != 5774.871988537281)][['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 76) | (customer['C_CUSTKEY'] > 32) & (customer['C_ADDRESS'].str.startswith('m'))].merge(nation[(nation['N_NATIONKEY'] != 10) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 20)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] == 4247.064912236125) & (customer['C_ACCTBAL'] != 7229.379506253428)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'G')].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] <= 17)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 24) & (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_PARTKEY'] < 20)].merge(part[(part['BRAND'] == 'Brand#31') & (part['BRAND'] != 'Brand#43')][['MFGR', 'P_NAME', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 30)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 12) | (nation['N_COMMENT'] != 's') & (nation['N_NATIONKEY'] < 13) & (nation['N_NAME'].str.startswith('E'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 886)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('f')) | (supplier['S_COMMENT'] != 'e') | (supplier['S_SUPPKEY'] <= 189)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == '.') | (partsupp['PS_SUPPKEY'] > 1866) & (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['SUPPLYCOST'] < 794.4254363526225)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 8092.832136278305)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] == 194) & (supplier['S_ADDRESS'] != 'l') | (supplier['S_NATIONKEY'] != 13) & (supplier['S_ACCTBAL'] == 7663.64065251603) | (supplier['S_ACCTBAL'] <= 6348.065950876619) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] <= 74)].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] != 20)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 163) | (supplier['S_COMMENT'] != '!') | (supplier['S_ACCTBAL'] > 6228.851708420256) | (supplier['S_ADDRESS'] != '3') & (supplier['S_ADDRESS'] == 'M') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] != 20)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['TAX'] > 0.0401871819321241) & (lineitem['L_COMMENT'] != 'p') | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['QUANTITY'] < 45) | (lineitem['LINESTATUS'].isin(['O', 'F']))][['L_PARTKEY', 'QUANTITY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] != 34) & (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] != 'r') & (part['P_NAME'].str.startswith('v')) & (part['PT_COMMENT'] == 'ss ') & (part['TYPE'] == 'STA') | (part['PT_COMMENT'].str.startswith('t'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['DISCOUNT'] < 0.022509893836366625) | (lineitem['COMMITDATE'] > '1992-05-15')][['L_SUPPKEY', 'L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'QUANTITY', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] != 5619) & (partsupp['P_COMMENT'] == 'h') & (partsupp['PS_PARTKEY'] != 23)].merge(part[(part['P_NAME'] != 'k') | (part['TYPE'].str.startswith('M')) | (part['P_NAME'] != 'f') & (part['BRAND'] == 'Brand#53') | (part['P_NAME'].str.startswith('s')) | (part['TYPE'] == 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] != 0.03504506564447886) & (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'].isin(['Brand#12', 'Brand#52', 'Brand#33', 'Brand#11', 'Brand#53', 'Brand#24', 'Brand#31', 'Brand#44', 'Brand#54', 'Brand#45', 'Brand#21', 'Brand#35', 'Brand#32', 'Brand#14', 'Brand#13', 'Brand#15', 'Brand#55', 'Brand#23', 'Brand#43', 'Brand#34', 'Brand#51', 'Brand#22', 'Brand#42']))][['P_NAME', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'TYPE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 62151.838796439966) & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['DISCOUNT'] > 0.07650036095253568) | (lineitem['TAX'] == 0.021821116647846292) & (lineitem['LINENUMBER'] != 4) | (lineitem['L_SUPPKEY'] > 2551)][['L_ORDERKEY', 'SHIPMODE', 'EXTENDEDPRICE', 'QUANTITY', 'TAX']].merge(orders[(orders['O_ORDERKEY'] >= 34) | (orders['TOTALPRICE'] > 108050.73415224369)][['TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'TOTALPRICE', 'O_ORDERKEY']).agg('count')

lineitem[(lineitem['LINENUMBER'] <= 4) & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['DISCOUNT'] >= 0.017929671762948185) | (lineitem['L_PARTKEY'] >= 41295) | (lineitem['L_ORDERKEY'] >= 114) & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['LINESTATUS', 'L_COMMENT', 'L_PARTKEY', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders.merge(customer[(customer['C_ACCTBAL'] >= 6878.663598385121) | (customer['C_ACCTBAL'] >= 375.8477620207452) | (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['QUANTITY'] > 46) & (lineitem['L_SUPPKEY'] >= 1014) & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['TAX'] == 0.01791233327115249) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_ORDERKEY'] == 163) | (lineitem['LINENUMBER'] > 6) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['QUANTITY'] <= 44)][['L_SUPPKEY', 'L_ORDERKEY', 'TAX']].merge(orders[(orders['O_CUSTKEY'] == 123698) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] == 354071.1980761551) | (orders['O_COMMENT'] == '.') | (orders['ORDERDATE'] >= '1992-01-13')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_CUSTKEY']).agg('count')

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['LINESTATUS'] == 'O') & (lineitem['LINENUMBER'] == 5) | (lineitem['TAX'] > 0.0320128342217548) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['LINENUMBER'] != 5) | (lineitem['L_SUPPKEY'] >= 8455) & (lineitem['QUANTITY'] == 43) | (lineitem['SHIPINSTRUCT'] == 'NONE')][['LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'LINENUMBER', 'L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['SUPPLYCOST'] > 38.99533011589963)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'n')].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] > 472.9462546074085) & (supplier['S_NATIONKEY'] <= 20) & (supplier['S_ADDRESS'] != 'I') & (supplier['S_ADDRESS'] != '3') & (supplier['S_SUPPKEY'] >= 57) | (supplier['S_NATIONKEY'] == 11) & (supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == '-')][['LINESTATUS', 'LINENUMBER', 'L_SUPPKEY', 'L_COMMENT', 'L_ORDERKEY', 'QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'] != ' ')].merge(part[(part['RETAILPRICE'] > 1062.8356966772706) | (part['TYPE'] == 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 71106) | (lineitem['L_SUPPKEY'] == 6881) | (lineitem['EXTENDEDPRICE'] > 27012.455309687437) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['DISCOUNT'] != 0.046019827483241155) | (lineitem['L_PARTKEY'] < 65652)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 729.0012745962551) | (partsupp['SUPPLYCOST'] >= 420.45549296167724) | (partsupp['PS_PARTKEY'] >= 32) & (partsupp['PS_PARTKEY'] <= 43)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 153397) | (lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_SUPPKEY'] == 9147) | (lineitem['SHIPMODE'] != 'MAIL')].merge(partsupp[(partsupp['PS_PARTKEY'] > 29)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] == 1040.7313073772011) | (part['P_PARTKEY'] != 32) & (part['TYPE'].str.startswith('M')) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'].isin(['Brand#14', 'Brand#42']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 6348) | (lineitem['L_PARTKEY'] > 143629) & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['LINENUMBER'] > 1) & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_PARTKEY'] <= 52360) | (lineitem['L_ORDERKEY'] == 101) & (lineitem['LINESTATUS'].isin(['O']))].merge(partsupp.merge(part[['P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_SUPPKEY'] >= 8088) | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['DISCOUNT'] != 0.06104917328072426) & (lineitem['EXTENDEDPRICE'] != 11756.35568885377) | (lineitem['COMMITDATE'] > '1998-10-16')][['L_ORDERKEY', 'SHIPDATE', 'TAX', 'LINESTATUS', 'SHIPMODE']].merge(orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['L_PARTKEY'] <= 190522) & (lineitem['EXTENDEDPRICE'] != 43772.16202920581) & (lineitem['L_ORDERKEY'] > 5) & (lineitem['QUANTITY'] <= 9)].merge(partsupp[(partsupp['P_COMMENT'] == 'a') & (partsupp['PS_SUPPKEY'] > 4127) & (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['PS_SUPPKEY'] > 4508) | (partsupp['PS_PARTKEY'] > 43)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_ORDERKEY'] <= 132) | (lineitem['L_ORDERKEY'] > 158) & (lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['L_COMMENT'] != '-') | (lineitem['L_PARTKEY'] == 83830) | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['L_PARTKEY'] <= 5604) | (lineitem['TAX'] != 0.046208533465486104) & (lineitem['SHIPMODE'].isin(['RAIL', 'MAIL', 'TRUCK', 'FOB', 'REG AIR', 'AIR', 'SHIP']))].merge(partsupp[(partsupp['PS_PARTKEY'] <= 3) & (partsupp['PS_SUPPKEY'] < 7345) | (partsupp['SUPPLYCOST'] < 15.55737694894751) | (partsupp['PS_PARTKEY'] >= 7) | (partsupp['P_COMMENT'] == 'a')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'SIZE', 'P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['DISCOUNT'] <= 0.06079472600878121) | (lineitem['L_SUPPKEY'] >= 7407) | (lineitem['L_COMMENT'] == 't') | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) | (lineitem['COMMITDATE'] > '1998-10-16')].merge(orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] < 609) & (orders['O_CUSTKEY'] <= 114329) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] >= 71238) & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'] == 'w') & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1998-07-21')][['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_ORDERKEY'] == 141) & (lineitem['RETURNFLAG'].isin(['A', 'N']))][['SHIPDATE', 'RETURNFLAG', 'L_ORDERKEY', 'EXTENDEDPRICE']].merge(orders[(orders['TOTALPRICE'] <= 225044.80143131575) | (orders['TOTALPRICE'] < 126971.91872003187) | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 322) | (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] != 39402) & (orders['ORDERDATE'] > '1992-01-13')][['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['EXTENDEDPRICE'] > 64886.39990714099) & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['L_SUPPKEY'] > 9300)].merge(partsupp[(partsupp['PS_PARTKEY'] == 42)].merge(part[['BRAND', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'P_PARTKEY', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.054689286169966204) & (lineitem['L_PARTKEY'] <= 197683) | (lineitem['RETURNFLAG'] == 'A')].merge(partsupp[(partsupp['SUPPLYCOST'] == 404.4190794535267) | (partsupp['PS_PARTKEY'] > 8) & (partsupp['PS_SUPPKEY'] == 2761) | (partsupp['PS_SUPPKEY'] <= 757)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'STA') | (part['PT_COMMENT'] == 's') & (part['TYPE'] != 'SMA') & (part['PT_COMMENT'] == 'q') | (part['TYPE'].str.startswith('P')) | (part['RETAILPRICE'] > 1027.9569303972996) & (part['CONTAINER'] == 'MED') & (part['P_PARTKEY'] != 78) | (part['BRAND'] != 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_ORDERKEY', 'SHIPMODE', 'DISCOUNT', 'L_COMMENT', 'LINENUMBER']].merge(orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] <= 2752.511564019752) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] > 2610.270768232811) & (customer['C_PHONE'] != '3') | (customer['C_PHONE'] != '25-') & (customer['C_PHONE'] != '1')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['AVAILQTY'] >= 9018) & (partsupp['P_COMMENT'] == ' th') & (partsupp['AVAILQTY'] > 950) | (partsupp['P_COMMENT'].str.startswith('o'))][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

lineitem[['RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'EXTENDEDPRICE']].merge(orders[(orders['O_ORDERKEY'] != 473) & (orders['O_COMMENT'].str.startswith('x')) | (orders['TOTALPRICE'] == 280449.44716591993) | (orders['O_ORDERKEY'] >= 60) & (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['ORDERSTATUS'].isin(['P', 'O']))].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_NAME'].str.startswith('C')) & (nation['N_COMMENT'] != 'e')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'U') & (customer['C_PHONE'] == '2') & (customer['C_NATIONKEY'] != 11) & (customer['C_CUSTKEY'] <= 62)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('V'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] < 17) & (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] != 'h')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 2) | (customer['C_PHONE'] != '2') & (customer['C_ACCTBAL'] >= 677.9623113304967) | (customer['C_NATIONKEY'] >= 15) & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_PHONE'] == '1') & (customer['C_ADDRESS'] == 'f') & (customer['C_ADDRESS'] != 's')].merge(nation[(nation['N_NATIONKEY'] > 18) | (nation['N_NATIONKEY'] > 20) | (nation['N_NATIONKEY'] <= 6) | (nation['N_NATIONKEY'] == 6)].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] >= 23) | (nation['N_NATIONKEY'] >= 5)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] != 'x') & (orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'b') & (orders['SHIPPRIORITY'] >= 0)].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] == 762) & (orders['O_ORDERKEY'] != 396) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 181954.2674365353) | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_ORDERKEY'] > 744) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH']))].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'J')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['O_COMMENT'] != 'r') | (orders['O_COMMENT'] == 'n') & (orders['O_ORDERKEY'] == 457)].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('K'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'] != 'e') & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT'])) | (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_ADDRESS'] != 'x') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '22-') & (customer['C_PHONE'].str.startswith('3')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'] != 'Y')].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] <= 13) | (nation['N_REGIONKEY'] < 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'] != 'c') | (orders['O_ORDERKEY'] <= 635) | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] == 450) | (orders['O_COMMENT'] != 'u')].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['TOTALPRICE'] <= 260979.04064987594) & (orders['O_CUSTKEY'] != 104041) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] != 'k') & (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] == 'C')][['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] >= 74) & (customer['C_ACCTBAL'] != 5185.8595394422955) & (customer['C_COMMENT'] == 'l') & (customer['C_NATIONKEY'] > 14)][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '2-HIGH', '5-LOW'])) | (orders['TOTALPRICE'] < 333468.6801368288) & (orders['O_ORDERKEY'] >= 569) | (orders['TOTALPRICE'] <= 69055.69037682762) & (orders['O_ORDERKEY'] == 601) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O']))][['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'the') & (orders['O_CUSTKEY'] < 61270) & (orders['TOTALPRICE'] < 279042.4488399743) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] < 84219) & (orders['O_ORDERKEY'] >= 789)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 104070) & (orders['O_COMMENT'].str.startswith('b')) | (orders['O_ORDERKEY'] != 189) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] >= 185282.0303516272) | (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] != 'the')].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 21) | (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] == 9)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 62648) & (orders['TOTALPRICE'] <= 344224.2659113989) & (orders['O_CUSTKEY'] == 119545) | (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] > 131293.41903213246)].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 24481) & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_NATIONKEY'] == 10) & (customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] < 16) & (customer['C_NATIONKEY'] != 7) & (customer['C_ACCTBAL'] != 8142.619708260114) | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL']).agg('count')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_COMMENT'] != 'e') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'z') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_CUSTKEY'] != 9) & (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NATIONKEY'] <= 16) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] < 20)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] >= 8108) | (orders['TOTALPRICE'] <= 9776.068327986282) | (orders['O_ORDERKEY'] < 353) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_ORDERKEY'] != 250) & (orders['O_CUSTKEY'] <= 885) | (orders['ORDERDATE'] != '1992-01-13')][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] < 14)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 208271.26559186695) & (orders['O_COMMENT'].str.startswith('uri')) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_ORDERKEY'] >= 158)][['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NAME'] == 'M') | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 47533.60063218912) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('q'))].merge(customer[(customer['C_ACCTBAL'] < 1105.7536223715665) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] == 9) & (nation['N_COMMENT'] == 'l')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] == 80) & (customer['C_ADDRESS'] != 'I')].merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('u')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_COMMENT'] != 'o') & (customer['C_CUSTKEY'] == 96) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('q')) | (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_ACCTBAL'] < 7952.79662640352)][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 20)].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] != 0)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NAME'].str.startswith('U')) & (nation['N_NATIONKEY'] == 17) & (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] == 'C') | (nation['N_NATIONKEY'] == 16) & (nation['N_REGIONKEY'] > 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 16) & (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] == 'o')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] >= 85) & (supplier['S_COMMENT'] == 'j')].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 1) & (partsupp['PS_SUPPKEY'] != 2956) & (partsupp['P_COMMENT'].str.startswith('a')) & (partsupp['AVAILQTY'] < 6874) & (partsupp['SUPPLYCOST'] != 240.02384916709352)][['PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#23') & (part['SIZE'] > 12) & (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] != 1001.0569599073276) & (part['TYPE'].str.startswith('P'))][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2724) | (partsupp['PS_PARTKEY'] == 39) | (partsupp['P_COMMENT'] != 'a') | (partsupp['P_COMMENT'].str.startswith('j'))][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['PT_COMMENT'].str.startswith('o')) & (part['CONTAINER'] != 'JUMBO')][['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 7516) | (partsupp['AVAILQTY'] >= 466) | (partsupp['SUPPLYCOST'] >= 264.67575685871157) | (partsupp['PS_PARTKEY'] > 32) | (partsupp['PS_SUPPKEY'] > 3743)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'i') & (partsupp['SUPPLYCOST'] >= 442.8321803527467) | (partsupp['AVAILQTY'] < 2561)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] == 15) | (nation['N_COMMENT'] == 'o')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 459.3409558673173) & (partsupp['PS_PARTKEY'] != 24) & (partsupp['PS_SUPPKEY'] != 5763) | (partsupp['AVAILQTY'] > 6903) & (partsupp['PS_SUPPKEY'] < 900)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('lin')) | (part['PT_COMMENT'] != 'u') | (part['P_NAME'] != 'm') | (part['BRAND'].isin(['Brand#25', 'Brand#41', 'Brand#15', 'Brand#11', 'Brand#51', 'Brand#33', 'Brand#35', 'Brand#55', 'Brand#23', 'Brand#14', 'Brand#31', 'Brand#12', 'Brand#42', 'Brand#54'])) & (part['SIZE'] < 16) & (part['P_NAME'] != 'o') | (part['PT_COMMENT'] == 'kag')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 82.43392362890455) | (partsupp['SUPPLYCOST'] <= 814.5777230785529)].merge(supplier[(supplier['S_NATIONKEY'] <= 3) & (supplier['S_COMMENT'] != ' ') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'].str.startswith('l'))][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] >= 5) | (nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_ADDRESS'].str.startswith('2'))][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 4) | (supplier['S_SUPPKEY'] != 162) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == -403.73189905798995) & (supplier['S_COMMENT'] == '.')].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'].str.startswith('k')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] <= 10) & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 5562.679140158718) & (supplier['S_PHONE'] == '2') | (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] == 'o') & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'es ') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] <= 79) | (supplier['S_COMMENT'] != 't')].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_ADDRESS'] == 'j') & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'].str.startswith('D'))][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'U')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_NATIONKEY'] > 9) & (supplier['S_COMMENT'] != 'k') & (supplier['S_PHONE'] == '17-')].merge(nation[(nation['N_NATIONKEY'] < 19) | (nation['N_NATIONKEY'] >= 15) & (nation['N_NATIONKEY'] > 20) & (nation['N_NATIONKEY'] == 8)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 't') & (supplier['S_NATIONKEY'] > 18) & (supplier['S_ACCTBAL'] > 5948.279924363316)][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'e') | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'] != '26-')].merge(nation[(nation['N_NATIONKEY'] >= 5) | (nation['N_NATIONKEY'] == 16) & (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 3) | (supplier['S_PHONE'] != '3') | (supplier['S_PHONE'] == '14-') & (supplier['S_COMMENT'] == 'r') & (supplier['S_COMMENT'] == ' sl') & (supplier['S_NATIONKEY'] != 19) & (supplier['S_ADDRESS'] != 'b')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 20) | (supplier['S_PHONE'] != '3')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'V')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ACCTBAL'] == 1067.9070972103932) & (supplier['S_SUPPKEY'] >= 197) & (supplier['S_SUPPKEY'] != 100)][['S_NATIONKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 32) | (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_ACCTBAL'] <= 8585.907951298788) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'].str.startswith('o')) | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 32) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '2')][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 1770.7952494713836) & (customer['C_ACCTBAL'] != 7199.371556874713) & (customer['C_CUSTKEY'] != 34) | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '13-') | (customer['C_COMMENT'] != 'u')][['C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('f')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] != 74) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'X') | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_PHONE'] != '18-')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_NATIONKEY'] < 22) | (nation['N_NATIONKEY'] <= 9) | (nation['N_NATIONKEY'] != 16)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_ADDRESS'] == 'Y')][['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_NATIONKEY'] >= 21) & (customer['C_ADDRESS'].str.startswith('q')) & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 21) | (customer['C_ACCTBAL'] <= 8211.65737806672)][['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] < 4)].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 36) | (customer['C_ADDRESS'] != 'D') & (customer['C_NATIONKEY'] >= 0) | (customer['C_ACCTBAL'] <= 2382.2909684558567) & (customer['C_NATIONKEY'] != 15) & (customer['C_COMMENT'].str.startswith('.'))][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] <= 2) & (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] == 14)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 62) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 64) | (customer['C_COMMENT'] == 'a') & (customer['C_CUSTKEY'] == 54)].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] < 6) | (nation['N_NAME'] == 'F') & (nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 15) & (customer['C_ACCTBAL'] <= 2943.890033499326) & (customer['C_CUSTKEY'] >= 20) | (customer['C_NATIONKEY'] != 13) & (customer['C_COMMENT'] == 's')][['C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('13-')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] > 33) | (customer['C_ADDRESS'] == 'x') & (customer['C_PHONE'] == '18-') | (customer['C_COMMENT'] == 'e')][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] == 22) & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 22) | (customer['C_ADDRESS'] != '3') & (customer['C_NATIONKEY'] >= 15) & (customer['C_ACCTBAL'] == 1871.2277810255482)][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] >= 8) & (nation['N_NAME'] != 'K')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 6) | (customer['C_NATIONKEY'] < 18) & (customer['C_CUSTKEY'] == 56) & (customer['C_ACCTBAL'] != 4736.323717542149) | (customer['C_NATIONKEY'] < 13) | (customer['C_NATIONKEY'] <= 1) & (customer['C_NATIONKEY'] >= 16) | (customer['C_ADDRESS'] != '9')][['C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'] == ' ')].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 2189.1721262310166) | (customer['C_ADDRESS'] == 'E')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'X') | (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 4) & (customer['C_NATIONKEY'] == 19) | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] <= 18)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] > 19) & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] < 16)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != ' ')].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '3-MEDIUM'])) & (orders['O_CUSTKEY'] < 149361)].merge(customer[(customer['C_ACCTBAL'] != 2171.942795735886) | (customer['C_NATIONKEY'] == 17) & (customer['C_ADDRESS'] == ',') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_NATIONKEY'] == 15)][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] >= 23806) & (orders['O_CUSTKEY'] == 148100) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['TOTALPRICE'] == 37781.04384310491) | (orders['O_CUSTKEY'] < 112067)][['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['C_ACCTBAL'] != 8681.81074223803) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '13-') & (customer['C_NAME'] == 'C')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] != -631.7221312553174) | (supplier['S_COMMENT'] == 'n') | (supplier['S_SUPPKEY'] > 146) | (supplier['S_NATIONKEY'] == 3) | (supplier['S_ACCTBAL'] >= 8228.900541995119) | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 26) & (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] == 2)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'TYPE', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 9) & (partsupp['PS_SUPPKEY'] < 1310) & (partsupp['PS_PARTKEY'] > 24) | (partsupp['P_COMMENT'] != 'p') | (partsupp['AVAILQTY'] == 4660)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 24) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_PHONE'] != '28-') & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == '1') | (supplier['S_SUPPKEY'] > 131)].merge(nation[(nation['N_NAME'].str.startswith('S'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] != 10) & (part['SIZE'] > 15) | (part['RETAILPRICE'] != 1056.1707061615764) | (part['CONTAINER'] == 'LG') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['BRAND'] == 'Brand#21') & (part['TYPE'] != 'M')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'BRAND', 'P_NAME', 'CONTAINER', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'BRAND']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 9048.895084429072) & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 174) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] != 'f') & (supplier['S_NATIONKEY'] <= 10) | (supplier['S_COMMENT'] != '!')].merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] != 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['LINENUMBER'] < 3) & (lineitem['L_SUPPKEY'] == 3946)].merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] > 3373.307837530083) | (customer['C_NATIONKEY'] <= 18)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 31307.16427404768) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RETURNFLAG'].isin(['R']))].merge(orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 50757.150950795505) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['LINESTATUS'] == 'F') & (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['LINESTATUS'].isin(['F']))][['SHIPMODE', 'LINESTATUS', 'TAX', 'L_SUPPKEY', 'L_ORDERKEY', 'DISCOUNT', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'EXTENDEDPRICE']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('count')

lineitem[(lineitem['LINENUMBER'] != 4) & (lineitem['QUANTITY'] >= 5) & (lineitem['L_ORDERKEY'] != 179) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['LINENUMBER'] <= 2) | (lineitem['L_ORDERKEY'] <= 67) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_SUPPKEY'] >= 3799)].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_COMMENT'] != ' re') | (lineitem['L_ORDERKEY'] <= 52) & (lineitem['COMMITDATE'] < '1998-10-16')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 927.3271224516675) | (partsupp['SUPPLYCOST'] >= 889.9159178919206) & (partsupp['PS_PARTKEY'] != 29) | (partsupp['SUPPLYCOST'] != 50.30112167292096)].merge(supplier[(supplier['S_SUPPKEY'] > 47) & (supplier['S_COMMENT'] == 'f') & (supplier['S_ACCTBAL'] <= 1980.836551342508) & (supplier['S_ADDRESS'] == 'R') & (supplier['S_COMMENT'] != 'n') & (supplier['S_COMMENT'] == 'y') | (supplier['S_COMMENT'] != ' ')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['EXTENDEDPRICE'] <= 4828.563034242146)].merge(orders[(orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_ACCTBAL'] != 6400.418726594469) & (customer['C_PHONE'] == '2') & (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] != 'a')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 10189) & (lineitem['DISCOUNT'] > 0.0809261017622681) & (lineitem['TAX'] <= 0.049922450749742844) | (lineitem['DISCOUNT'] >= 0.09697680151181184) & (lineitem['EXTENDEDPRICE'] > 87975.68385542065) & (lineitem['L_PARTKEY'] >= 91679) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'] != 'SHIP')][['L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'RETURNFLAG', 'L_ORDERKEY', 'LINENUMBER', 'DISCOUNT', 'L_PARTKEY', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] < 9593) & (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'REG AIR', 'RAIL', 'MAIL', 'AIR'])) & (lineitem['LINENUMBER'] >= 2) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['RETURNFLAG'] == 'A') & (lineitem['EXTENDEDPRICE'] < 21487.429646104832) & (lineitem['L_SUPPKEY'] > 8573)].merge(partsupp.merge(part[(part['PT_COMMENT'] != 'x') & (part['CONTAINER'].str.startswith('LG')) & (part['PT_COMMENT'].str.startswith('w')) | (part['P_PARTKEY'] > 18) | (part['P_NAME'] == 'lem') & (part['BRAND'] == 'Brand#14')][['SIZE', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 22) | (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 4970) & (partsupp['PS_SUPPKEY'] > 3391) | (partsupp['P_COMMENT'] == 'v') & (partsupp['AVAILQTY'] < 1117)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('e'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['L_ORDERKEY'] >= 90)].merge(partsupp[(partsupp['SUPPLYCOST'] > 398.8596241606656)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] != 45) | (part['BRAND'] == 'Brand#13') | (part['PT_COMMENT'] != 'the') & (part['RETAILPRICE'] == 964.103286658089) | (part['RETAILPRICE'] == 969.7794490812421)][['TYPE', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['DISCOUNT'] == 0.07624392118879117) | (lineitem['L_COMMENT'] != 'j')].merge(orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'G') | (nation['N_NAME'] == 'A') | (nation['N_NAME'].str.startswith('V')) & (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['L_COMMENT'] == 'e')].merge(orders[(orders['O_CUSTKEY'] < 78831) | (orders['TOTALPRICE'] < 137844.93145557516) & (orders['O_COMMENT'].str.startswith('d')) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] < 48689.48405331162) | (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] >= 75464.29516415042) | (orders['O_COMMENT'].str.startswith('u'))].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_COMMENT'] == 'i') | (lineitem['QUANTITY'] <= 37) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD'])) | (lineitem['QUANTITY'] > 11) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['L_ORDERKEY'] <= 63) & (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['LINENUMBER'] < 6)].merge(orders[(orders['TOTALPRICE'] == 38140.544867452336) | (orders['O_COMMENT'] == 'y') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] > 305266.9267405019) | (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'].str.startswith('f'))].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'] == 'FOB') | (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['L_ORDERKEY'] <= 65) & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_COMMENT'].str.startswith('q')) & (lineitem['LINESTATUS'] == 'O') | (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(partsupp[(partsupp['PS_PARTKEY'] != 32)].merge(supplier[(supplier['S_COMMENT'].str.startswith('i')) | (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_COMMENT'] == 'the') & (supplier['S_PHONE'].str.startswith('14-'))][['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] != 0.002391540145440603) & (lineitem['LINESTATUS'] != 'F') | (lineitem['L_COMMENT'] != 'n') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['EXTENDEDPRICE'] == 18610.51377367405) | (lineitem['L_COMMENT'] == 's. ') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['LINENUMBER'] != 1) | (lineitem['L_COMMENT'] == 'j') | (lineitem['TAX'] >= 0.011018487753794997)].merge(orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'].str.startswith('i')) | (orders['O_CUSTKEY'] < 127611) | (orders['O_ORDERKEY'] <= 67) | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] < 0.061407367086737275) & (lineitem['DISCOUNT'] <= 0.09202383404795327) | (lineitem['L_ORDERKEY'] >= 95) & (lineitem['SHIPMODE'].isin(['FOB', 'REG AIR', 'TRUCK'])) | (lineitem['LINESTATUS'] == 'O')].merge(partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPDATE', 'L_PARTKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPMODE', 'TAX', 'DISCOUNT']].merge(partsupp.merge(part[(part['P_PARTKEY'] != 4) | (part['RETAILPRICE'] != 1010.8876633930726) | (part['PT_COMMENT'] == 'p') | (part['CONTAINER'].str.startswith('WRAP')) | (part['MFGR'].isin(['Manufacturer#3'])) & (part['P_PARTKEY'] <= 48)][['RETAILPRICE', 'P_NAME', 'BRAND', 'P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'L_ORDERKEY']].merge(orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('SM')) & (part['RETAILPRICE'] == 1058.7990881082137) & (part['PT_COMMENT'].str.startswith('h')) & (part['CONTAINER'] != 'JUMBO')][['CONTAINER', 'P_PARTKEY', 'BRAND', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'TAX', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['SUPPLYCOST'] > 909.2879297351528)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RECEIPTDATE', 'LINESTATUS', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'QUANTITY', 'SHIPMODE', 'L_PARTKEY', 'DISCOUNT']].merge(orders[(orders['TOTALPRICE'] >= 288924.37955921894) & (orders['TOTALPRICE'] < 52401.72217315864) | (orders['TOTALPRICE'] == 106012.00005665471) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['O_ORDERKEY'] < 687) | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 't') & (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[['SHIPDATE', 'EXTENDEDPRICE', 'DISCOUNT', 'TAX', 'L_COMMENT', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS', 'LINENUMBER']].merge(partsupp[(partsupp['AVAILQTY'] < 6824) & (partsupp['SUPPLYCOST'] <= 965.3190557236835) | (partsupp['SUPPLYCOST'] != 333.19083872817845) & (partsupp['PS_SUPPKEY'] > 1233) & (partsupp['AVAILQTY'] > 7159)].merge(part[['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'LINENUMBER']].merge(partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] > 9) | (nation['N_NAME'] == 'U')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '27-') & (customer['C_ACCTBAL'] > 8808.425567923428) & (customer['C_COMMENT'] == 'q') & (customer['C_CUSTKEY'] < 35) | (customer['C_CUSTKEY'] <= 38)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'] != 'F') & (nation['N_NATIONKEY'] > 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'u') & (customer['C_PHONE'] != '27-') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] <= -431.3725382019329) | (customer['C_ADDRESS'] == 'l')][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'P')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW'])) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '5-LOW', '3-MEDIUM'])) & (orders['O_CUSTKEY'] != 90351) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '2-HIGH']))][['O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] > 19) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] != 9816.852464646137) | (customer['C_NATIONKEY'] >= 14)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['O_COMMENT'] != 'c') & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] < 86709)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ACCTBAL'] < 5271.626112870115) & (customer['C_COMMENT'] != 't') & (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_ACCTBAL'] <= -508.0231403417119) | (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] <= 22) | (customer['C_CUSTKEY'] < 94)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'].str.startswith('u'))][['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_NATIONKEY'] == 7) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'H')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'] != 'c') | (orders['O_ORDERKEY'] != 765) | (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'].str.startswith('b'))][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')][['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] > 187) & (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['TOTALPRICE'] >= 65984.19212520515) | (orders['O_COMMENT'] == 'y')].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == '.') & (customer['C_PHONE'] == '13-') & (customer['C_ADDRESS'] == 'z')][['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] == 's') & (nation['N_NAME'] == 'E')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] == 164254.20423375553)][['O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] > 5) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 97) | (customer['C_NATIONKEY'] <= 14) | (customer['C_NATIONKEY'] <= 14) | (customer['C_ADDRESS'] == '3')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] <= '1998-07-21') & (orders['SHIPPRIORITY'] != 0)][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] != 144423) & (orders['O_ORDERKEY'] < 320)].merge(customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_ACCTBAL'] != 2858.0756288268612) | (customer['C_ACCTBAL'] >= 1583.5832167853805) & (customer['C_ADDRESS'].str.startswith('4')) | (customer['C_CUSTKEY'] > 95) | (customer['C_CUSTKEY'] > 33) | (customer['C_NAME'] == 'C')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] != 268046.25441228354) & (orders['O_CUSTKEY'] <= 36519) & (orders['O_COMMENT'] == 'h')][['CLERK', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 20119) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] <= 623) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_COMMENT'] == 'w')].merge(customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 71359) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_COMMENT'] != 'w') | (orders['O_ORDERKEY'] == 411) & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'].isin(['O', 'P']))][['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] <= 13) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] == 126.23668740416565)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] == 54970)].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 17924.30287840555) & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] != 'the') | (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] != 121989) | (orders['ORDERSTATUS'] == 'O')][['O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 259963.74284448492) & (orders['O_CUSTKEY'] == 130765) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['TOTALPRICE'] >= 27057.303191816245) | (orders['O_ORDERKEY'] > 762) | (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['C_ADDRESS'].str.startswith('z')) | (customer['C_NAME'] != 'C')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_CUSTKEY'] >= 92) & (customer['C_COMMENT'] != 'k') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] != 'y') & (customer['C_NATIONKEY'] == 10) | (customer['C_NATIONKEY'] < 0)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] < 10) | (customer['C_ACCTBAL'] >= 1979.7167267110326) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] > 6) & (customer['C_PHONE'] != '25-')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] == 'o') & (customer['C_ACCTBAL'] == 9318.359923680797) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] == '2') & (customer['C_CUSTKEY'] != 92)].merge(nation[(nation['N_COMMENT'].str.startswith('a'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_NATIONKEY'] < 2)][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'] == 'K')].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] != 4) & (nation['N_COMMENT'] == 'p')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] != 9546) | (partsupp['AVAILQTY'] >= 3999) & (partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['PS_PARTKEY'] >= 43) & (partsupp['PS_SUPPKEY'] != 3136)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 7657) | (partsupp['PS_PARTKEY'] >= 6) | (partsupp['SUPPLYCOST'] >= 167.73961819835577) | (partsupp['SUPPLYCOST'] >= 142.1515671033812) | (partsupp['PS_SUPPKEY'] == 960)].merge(supplier[(supplier['S_ACCTBAL'] >= 6470.6101278936) & (supplier['S_NATIONKEY'] <= 2) & (supplier['S_SUPPKEY'] < 42) & (supplier['S_COMMENT'] != 'e') & (supplier['S_SUPPKEY'] <= 126) & (supplier['S_COMMENT'] != 'a') & (supplier['S_ACCTBAL'] > 4044.928359374333)].merge(nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NATIONKEY'] > 1) & (nation['N_REGIONKEY'] == 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 7580) | (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['AVAILQTY'] >= 3872) | (partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_SUPPKEY'] == 1382)].merge(part[(part['SIZE'] > 25) | (part['TYPE'] == 'S') | (part['MFGR'] == 'Manufacturer#4') | (part['BRAND'].isin(['Brand#41', 'Brand#11', 'Brand#52', 'Brand#51', 'Brand#12', 'Brand#21', 'Brand#13', 'Brand#55', 'Brand#44', 'Brand#24', 'Brand#23', 'Brand#43', 'Brand#33'])) | (part['TYPE'] != 'P') & (part['P_PARTKEY'] != 55) | (part['RETAILPRICE'] >= 1044.4855722044406)][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6549) | (partsupp['SUPPLYCOST'] == 952.3298516184052)].merge(supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4315) & (partsupp['PS_SUPPKEY'] == 2343) & (partsupp['SUPPLYCOST'] > 86.90811042758985)][['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 10) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 5946) | (partsupp['AVAILQTY'] >= 9417) | (partsupp['P_COMMENT'] != 'd') & (partsupp['P_COMMENT'] == 'u')][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'k') & (part['P_NAME'] == 'c') & (part['P_NAME'].str.startswith('c')) & (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] != 994.2893105666342)][['SIZE', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] == 4418.84245498534) | (supplier['S_COMMENT'] != 'f') | (supplier['S_SUPPKEY'] < 189)][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['BRAND'] == 'Brand#25') | (part['P_NAME'].str.startswith('cor')) | (part['TYPE'].str.startswith('SMA')) | (part['TYPE'] == 'P') | (part['P_PARTKEY'] <= 184) | (part['PT_COMMENT'] != 'u')][['SIZE', 'P_NAME', 'P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] >= 10) | (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] > 126)].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'M') & (supplier['S_SUPPKEY'] <= 5) | (supplier['S_SUPPKEY'] <= 197) & (supplier['S_PHONE'] != '1') & (supplier['S_ADDRESS'] != '0') | (supplier['S_ADDRESS'].str.startswith('D'))].merge(nation[(nation['N_NATIONKEY'] < 1) & (nation['N_NAME'] != 'V') & (nation['N_COMMENT'] != 'i') | (nation['N_NAME'].str.startswith('R'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('q')) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 168) & (supplier['S_ACCTBAL'] == 140.35793874512) | (supplier['S_ADDRESS'] == 'O') | (supplier['S_ADDRESS'] == 'C')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_ACCTBAL'] > 5106.44804191176) | (supplier['S_NATIONKEY'] >= 19) & (supplier['S_SUPPKEY'] < 25)].merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'AFR')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('w')) & (supplier['S_NATIONKEY'] > 14)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 6)].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_ACCTBAL'] < -183.319502531681) & (supplier['S_ADDRESS'] != 'E') & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] <= 32) | (supplier['S_NATIONKEY'] == 18) | (supplier['S_SUPPKEY'] < 123)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 20) | (supplier['S_ACCTBAL'] <= 9624.288750878408) | (supplier['S_ADDRESS'] != 'M')][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U'))].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 33) | (supplier['S_ACCTBAL'] != -835.4264229747977)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] == 15) | (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 181) | (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'] != '28-')].merge(nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] != 'V')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'V') & (nation['N_NAME'] == 'K')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 6641.877750692529) | (customer['C_ADDRESS'] != 'd') & (customer['C_ADDRESS'] != 'H') & (customer['C_NATIONKEY'] <= 4)][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'M') & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 8540.38904639185) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_NATIONKEY'] < 21) | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_NATIONKEY'] < 9) & (customer['C_PHONE'] != '18-') & (customer['C_CUSTKEY'] == 48) | (customer['C_NATIONKEY'] < 4)][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] > 3848.6431570546138) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] == 3825.0127471803307) | (customer['C_PHONE'] == '22-') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'j') | (customer['C_ACCTBAL'] > 1955.9084400392617) & (customer['C_ADDRESS'] != 'z') & (customer['C_COMMENT'] != 'n') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] < 586.5715937183008)][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_NATIONKEY'] == 21) | (nation['N_REGIONKEY'] > 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'l') | (customer['C_CUSTKEY'] <= 37) & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] > 11)][['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'C') & (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == ',') | (customer['C_NATIONKEY'] != 14) | (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 24) & (customer['C_ADDRESS'].str.startswith('R')) & (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NATIONKEY'] < 11) | (customer['C_ACCTBAL'] > 6059.62324301547) | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_NATIONKEY'] >= 0) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] != 47) & (customer['C_NATIONKEY'] < 16) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] == 21)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 10) & (customer['C_COMMENT'].str.startswith('t'))][['C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] >= 18) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '18-') | (customer['C_PHONE'] == '1')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'C') | (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 4) | (customer['C_ADDRESS'] == 'E')][['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] > 0)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '27-') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 42) & (customer['C_NATIONKEY'] == 17)].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] == 'e') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] != 'c') & (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] == 18)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem.merge(orders.merge(customer[(customer['C_CUSTKEY'] <= 33) | (customer['C_ACCTBAL'] <= 3366.0528547467975) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'] == 'e') | (customer['C_PHONE'] != '2') & (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_CUSTKEY'] < 61)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM']))][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] <= 7152.999234811298) | (customer['C_PHONE'] != '2') & (customer['C_CUSTKEY'] >= 84) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_NATIONKEY'] >= 3)].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['O_COMMENT'].str.startswith('i')) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] != 124547) | (orders['O_COMMENT'] != 'g')].merge(customer[(customer['C_PHONE'].str.startswith('3')) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'] == 'u') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD']))].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] != 'n') | (orders['O_CUSTKEY'] >= 5788) | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] != 54) & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] < '1992-01-13')][['O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'V')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 952.9339283202114) | (partsupp['AVAILQTY'] == 6093) | (partsupp['PS_SUPPKEY'] < 4970)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('B')) & (supplier['S_NATIONKEY'] < 10) | (supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] == 5713.816060804536) & (supplier['S_COMMENT'] == 'v') & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ADDRESS'] == 'Y')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.087485038611151) & (lineitem['L_SUPPKEY'] >= 8113) | (lineitem['RECEIPTDATE'] >= '1992-05-02')][['L_COMMENT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 2389) & (partsupp['SUPPLYCOST'] > 131.01170456225094) & (partsupp['PS_PARTKEY'] < 49) & (partsupp['AVAILQTY'] >= 513) | (partsupp['AVAILQTY'] <= 4268)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['MFGR'] == 'Manufacturer#5') & (part['P_PARTKEY'] < 133)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 64098.559418280376) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['QUANTITY'] != 35) & (lineitem['EXTENDEDPRICE'] > 85211.37849970804) & (lineitem['L_COMMENT'] != 'n') | (lineitem['LINESTATUS'] != 'F') & (lineitem['TAX'] == 0.06708916545416052)][['COMMITDATE', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 61620.518469469826) | (orders['SHIPPRIORITY'] != 0) | (orders['TOTALPRICE'] < 339957.81157631177) | (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] > 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 1) & (lineitem['EXTENDEDPRICE'] <= 12371.00939049001) | (lineitem['LINENUMBER'] <= 3) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['QUANTITY'] != 3) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_COMMENT'] != 's. ') | (lineitem['TAX'] != 0.07305854361164711)][['L_SUPPKEY', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 78.53048070978944) & (partsupp['SUPPLYCOST'] >= 255.32629269325324) & (partsupp['SUPPLYCOST'] != 50.57585185047308) | (partsupp['PS_SUPPKEY'] >= 343) & (partsupp['P_COMMENT'] == ' th')].merge(part[['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['L_COMMENT'] != 'i') & (lineitem['L_SUPPKEY'] != 9016) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_SUPPKEY'] == 709) & (lineitem['LINENUMBER'] < 4) & (lineitem['TAX'] == 0.017351941580303187) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON']))].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['SUPPLYCOST'] >= 255.80185714352427) & (partsupp['P_COMMENT'] == 'g') | (partsupp['SUPPLYCOST'] == 637.6833797209615) | (partsupp['PS_SUPPKEY'] != 1031)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('b')) & (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('t')) | (part['RETAILPRICE'] >= 965.9781231281282) & (part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] != 1061.6494155126054) & (part['SIZE'] < 9) & (part['CONTAINER'] == 'WRAP') | (part['SIZE'] < 28)][['CONTAINER', 'PT_COMMENT', 'SIZE', 'P_PARTKEY', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('h')) & (lineitem['EXTENDEDPRICE'] >= 14271.456289196474) & (lineitem['TAX'] > 0.03365547705685296) & (lineitem['L_COMMENT'] != 'd')].merge(partsupp[(partsupp['PS_SUPPKEY'] > 6382) & (partsupp['AVAILQTY'] <= 511) & (partsupp['PS_PARTKEY'] > 20)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] == '8') | (supplier['S_ADDRESS'] == 'x') & (supplier['S_NATIONKEY'] > 0) | (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 1)][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 175500) | (lineitem['SHIPMODE'].isin(['FOB', 'RAIL', 'AIR', 'SHIP']))].merge(partsupp[(partsupp['SUPPLYCOST'] < 767.6932083627297) & (partsupp['AVAILQTY'] >= 1088) & (partsupp['SUPPLYCOST'] == 112.98412634624111) & (partsupp['PS_PARTKEY'] <= 8) & (partsupp['P_COMMENT'] == 'a')].merge(part[(part['TYPE'] == 'E') | (part['TYPE'] == 'SMA') & (part['PT_COMMENT'] == 'a') & (part['CONTAINER'] != 'LG') & (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'] == 'MED') | (part['TYPE'] != 'S') | (part['RETAILPRICE'] >= 966.276038200241)][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'AIR', 'RAIL', 'REG AIR', 'MAIL'])) | (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['LINENUMBER'] <= 6) | (lineitem['DISCOUNT'] != 0.023604197422078612) & (lineitem['EXTENDEDPRICE'] > 85122.7293980539) & (lineitem['SHIPMODE'] != 'FOB') & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPDATE'] != '1992-04-27')].merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['TOTALPRICE'] <= 153466.7956438342) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_CUSTKEY'] > 84458) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] >= 207645.97934055293) | (orders['O_ORDERKEY'] != 746) & (orders['O_ORDERKEY'] == 290)].merge(customer[(customer['C_NATIONKEY'] <= 9) & (customer['C_NATIONKEY'] < 6) & (customer['C_COMMENT'].str.startswith('e'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['EXTENDEDPRICE'] < 49042.477525152506) | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['DISCOUNT'] < 0.025649212119857247) & (lineitem['L_SUPPKEY'] < 9683) | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['QUANTITY'] >= 35) & (lineitem['SHIPMODE'].isin(['MAIL', 'TRUCK', 'FOB', 'REG AIR', 'AIR'])) | (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp.merge(part[(part['P_PARTKEY'] <= 33) | (part['P_NAME'] == 'lem') & (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'].isin(['Brand#25', 'Brand#13', 'Brand#55', 'Brand#43', 'Brand#42', 'Brand#45', 'Brand#31', 'Brand#35', 'Brand#33', 'Brand#53', 'Brand#41', 'Brand#54', 'Brand#23', 'Brand#14', 'Brand#44', 'Brand#15', 'Brand#32', 'Brand#11', 'Brand#22', 'Brand#51', 'Brand#52', 'Brand#12', 'Brand#24'])) & (part['BRAND'].isin(['Brand#52', 'Brand#14', 'Brand#34', 'Brand#44', 'Brand#43', 'Brand#23', 'Brand#22', 'Brand#24', 'Brand#41', 'Brand#45', 'Brand#13', 'Brand#25', 'Brand#53', 'Brand#21', 'Brand#31', 'Brand#32', 'Brand#42', 'Brand#12', 'Brand#11', 'Brand#55', 'Brand#54'])) & (part['MFGR'] == 'Manufacturer#5') & (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['RECEIPTDATE'] > '1998-11-06')].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] <= 5511.918509713624) | (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] > 6795.908335567507) | (supplier['S_ADDRESS'].str.startswith('3'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY', 'L_COMMENT', 'SHIPMODE', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 10)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['TYPE'] != 'P') | (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] <= 88) & (part['BRAND'] != 'Brand#21') & (part['RETAILPRICE'] > 959.4173151975394) | (part['P_NAME'] != 'lin')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'LINESTATUS', 'SHIPMODE', 'LINENUMBER', 'L_PARTKEY', 'SHIPINSTRUCT', 'QUANTITY', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] != 7016) | (partsupp['P_COMMENT'] == ',') | (partsupp['P_COMMENT'] != 'o') | (partsupp['SUPPLYCOST'] != 562.2884764375498)].merge(supplier[(supplier['S_COMMENT'] != 'c') | (supplier['S_ADDRESS'] != 'a')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'SHIPDATE', 'SHIPMODE', 'RETURNFLAG', 'COMMITDATE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['SUPPLYCOST'] < 262.65744106537915) | (partsupp['P_COMMENT'] != 'b') | (partsupp['SUPPLYCOST'] < 226.23262919646226) & (partsupp['PS_SUPPKEY'] != 2356)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'DISCOUNT', 'L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'TAX', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 6760) & (partsupp['PS_SUPPKEY'] > 4787)][['P_COMMENT', 'PS_PARTKEY']].merge(part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'DISCOUNT', 'RECEIPTDATE', 'QUANTITY']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 's') & (nation['N_NATIONKEY'] <= 15)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPMODE', 'L_COMMENT', 'L_PARTKEY', 'RETURNFLAG', 'COMMITDATE', 'RECEIPTDATE', 'QUANTITY', 'SHIPDATE', 'TAX', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 317)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['TYPE', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

lineitem[['TAX', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_ACCTBAL'] == 8810.718820084732) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 3) & (customer['C_ACCTBAL'] != 4474.98939601761) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '18-')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'h') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 22) | (nation['N_COMMENT'] == 't') | (nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] != 'y')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] != 197826.19903886007) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] == 1258.4006476542263) | (customer['C_COMMENT'] == 'g') & (customer['C_NATIONKEY'] == 10)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) & (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'] != 'g') & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['TOTALPRICE'] == 152586.5320957347) | (orders['O_ORDERKEY'] > 635) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH']))][['CLERK', 'ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_COMMENT'].str.startswith(',')) | (customer['C_ACCTBAL'] <= 8526.118030362155) | (customer['C_PHONE'].str.startswith('13-'))][['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != ' re') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH'])) | (orders['TOTALPRICE'] == 110350.32504097506) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_CUSTKEY'] != 64907) & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_PHONE'] != '1') & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] >= 64)].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NAME'] != 'B') & (nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 108216) | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] == 88) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_COMMENT'].str.startswith('.')) | (customer['C_NATIONKEY'] == 7) & (customer['C_CUSTKEY'] <= 10) & (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 64079) & (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'].str.startswith('h')) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH']))].merge(customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 69098) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['O_ORDERKEY'] > 353) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'] != 'k') & (orders['O_CUSTKEY'] < 67629) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['CLERK'] != 'C')].merge(customer[(customer['C_ADDRESS'] != 'r') & (customer['C_ACCTBAL'] <= 9241.400811837939) | (customer['C_ACCTBAL'] == 3738.4420327700855) & (customer['C_ADDRESS'] != '9') & (customer['C_NATIONKEY'] > 10) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] != 'K')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] == 539)].merge(customer[(customer['C_NATIONKEY'] == 10) | (customer['C_ACCTBAL'] == 7043.650279926105) | (customer['C_ADDRESS'] == ',') & (customer['C_ACCTBAL'] == 7187.199835612157)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_COMMENT'] != ' ') | (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['O_COMMENT'] == 'w')].merge(customer[(customer['C_NATIONKEY'] == 9) & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_COMMENT'] != 'r') | (customer['C_PHONE'] == '1')][['C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NATIONKEY'] > 7)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED', '1-URGENT'])) | (orders['O_CUSTKEY'] == 140682)].merge(customer[(customer['C_CUSTKEY'] > 30) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING'])) & (customer['C_CUSTKEY'] >= 43) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_ADDRESS'].str.startswith('g')) & (customer['C_ACCTBAL'] > 7404.778499829938)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 90472) | (orders['O_ORDERKEY'] >= 79)][['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NAME'] == 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] < 12) & (customer['C_COMMENT'] != 'r') | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_COMMENT'].str.startswith('w')) | (customer['C_CUSTKEY'] != 45) | (customer['C_COMMENT'].str.startswith('i')) | (customer['C_NATIONKEY'] < 13)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] <= 9699.44080506257) | (customer['C_COMMENT'] != 's')][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'] != 'p') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] < 38) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'].str.startswith('m')) | (customer['C_CUSTKEY'] == 39) | (customer['C_PHONE'] == '3') | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']).agg('count')

orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] < 69) & (customer['C_CUSTKEY'] > 4) | (customer['C_PHONE'].str.startswith('3')) | (customer['C_COMMENT'] == 'p')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'q') | (supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_COMMENT'] != 'l') & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'w')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 2626) | (partsupp['PS_SUPPKEY'] <= 7267) | (partsupp['SUPPLYCOST'] > 714.6615011217922) | (partsupp['PS_SUPPKEY'] != 5856) & (partsupp['PS_PARTKEY'] < 9)].merge(part[(part['SIZE'] <= 9) | (part['P_NAME'].str.startswith('lin')) | (part['RETAILPRICE'] <= 1016.5092108169786) | (part['MFGR'] == 'Manufacturer#1') | (part['BRAND'].isin(['Brand#23', 'Brand#53', 'Brand#15', 'Brand#55', 'Brand#52', 'Brand#21', 'Brand#34', 'Brand#13', 'Brand#32', 'Brand#42', 'Brand#31', 'Brand#35', 'Brand#45', 'Brand#51', 'Brand#54', 'Brand#33', 'Brand#24', 'Brand#44', 'Brand#25'])) | (part['SIZE'] <= 38) & (part['P_PARTKEY'] > 93)][['SIZE', 'TYPE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9704)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] != 181)][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'SIZE', 'MFGR', 'BRAND']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 621) & (partsupp['AVAILQTY'] >= 1428) & (partsupp['PS_PARTKEY'] >= 27) & (partsupp['PS_SUPPKEY'] == 974) & (partsupp['SUPPLYCOST'] != 66.79905472024136)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1491)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 154)].merge(nation[(nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 2111) | (partsupp['PS_PARTKEY'] >= 12) | (partsupp['AVAILQTY'] <= 1259) | (partsupp['PS_SUPPKEY'] <= 3133) | (partsupp['PS_PARTKEY'] >= 6)].merge(supplier[(supplier['S_NATIONKEY'] != 14) & (supplier['S_PHONE'] != '1') | (supplier['S_SUPPKEY'] == 150) | (supplier['S_ACCTBAL'] < 5528.695300176905) | (supplier['S_COMMENT'] == 'w') | (supplier['S_ADDRESS'] == 'E') & (supplier['S_SUPPKEY'] > 46)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 2278)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'].str.startswith('M')) | (nation['N_NAME'].str.startswith('C'))].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 6224) & (partsupp['AVAILQTY'] != 3316) & (partsupp['SUPPLYCOST'] >= 908.2141639005838) & (partsupp['AVAILQTY'] <= 6889)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'] != 'R') & (nation['N_REGIONKEY'] == 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 140.18086662385062) & (partsupp['PS_PARTKEY'] < 32) | (partsupp['PS_SUPPKEY'] >= 7436)][['PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == ' ') & (part['P_PARTKEY'] <= 148) | (part['P_NAME'] == 'bis') & (part['P_NAME'] != 'b') | (part['P_NAME'] != 'o') & (part['CONTAINER'] != 'WRAP') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5'])) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1']))][['P_NAME', 'MFGR', 'TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'P_NAME', 'TYPE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 608.397051277688) & (partsupp['SUPPLYCOST'] != 793.153081435505) | (partsupp['SUPPLYCOST'] <= 102.18223912262773)].merge(supplier[(supplier['S_ADDRESS'] != ' ') & (supplier['S_PHONE'] != '17-') | (supplier['S_SUPPKEY'] == 30) | (supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_COMMENT'].str.startswith('.'))][['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 0) | (nation['N_NATIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 449.84476375079817) & (partsupp['PS_SUPPKEY'] <= 1593) & (partsupp['AVAILQTY'] < 2276)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] > 145) & (supplier['S_ACCTBAL'] > -606.1911959911245)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 1) | (supplier['S_SUPPKEY'] > 179) | (supplier['S_SUPPKEY'] >= 77) & (supplier['S_ADDRESS'] != 'G') | (supplier['S_COMMENT'].str.startswith('t')) & (supplier['S_PHONE'] == '3') | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'] != 'r')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 8211.592601709746) | (supplier['S_ADDRESS'].str.startswith('m')) | (supplier['S_NATIONKEY'] <= 9)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 1473.8221519451529) | (supplier['S_COMMENT'] == 'c')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'M') & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'O') | (supplier['S_ACCTBAL'] < 1068.0436888607173) | (supplier['S_NAME'] == 'S')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('U')) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '2') & (supplier['S_ACCTBAL'] < 8870.293732666674) | (supplier['S_ACCTBAL'] >= 3327.834711564633)][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'c') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '3') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 9433.537645787266) & (supplier['S_SUPPKEY'] < 1) | (supplier['S_ACCTBAL'] != 4526.233264970608)].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NATIONKEY'] <= 8) | (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] < 7566.456638369297) & (supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_ACCTBAL'] <= 2142.3045984720884)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] != 'G')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NAME'] != 'I') & (nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 8712.404127237027) & (customer['C_NATIONKEY'] != 12) & (customer['C_ACCTBAL'] >= 5720.816694339506) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_ADDRESS'] != 'v') & (customer['C_CUSTKEY'] == 5) & (customer['C_NAME'] != 'C')][['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] > 3)].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('g')) & (customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] == 'M') & (customer['C_CUSTKEY'] >= 74) & (customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] >= 31)].merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('.')) | (customer['C_NATIONKEY'] == 0) & (customer['C_NATIONKEY'] != 7) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_PHONE'].str.startswith('3')) | (customer['C_ACCTBAL'] == 6722.297783504154)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 57) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] < 13) | (nation['N_NATIONKEY'] > 13)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] == 11) | (customer['C_ACCTBAL'] < -565.3251031047429) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] == 27) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] != 's') & (customer['C_ACCTBAL'] <= 4497.225213118979)][['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] >= 10) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '13-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'f')][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] <= 7712.553635110869) | (customer['C_ADDRESS'] == 'F') | (customer['C_ADDRESS'].str.startswith('0'))][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't') & (nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] != 8)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 2317) & (partsupp['PS_PARTKEY'] >= 37) & (partsupp['PS_PARTKEY'] > 39) | (partsupp['PS_PARTKEY'] > 31)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] == 'e')].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['QUANTITY'] != 47) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['QUANTITY'] >= 24) & (lineitem['EXTENDEDPRICE'] == 2981.5945816416233) | (lineitem['L_PARTKEY'] > 91323) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['LINENUMBER'] <= 6) & (lineitem['L_PARTKEY'] < 61060)][['RETURNFLAG', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE', 'L_PARTKEY']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 15038.708472123157) | (lineitem['L_ORDERKEY'] >= 73) | (lineitem['LINESTATUS'].isin(['F']))].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['TAX'] >= 0.06895007172597) | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['P_COMMENT'] == 'o') & (partsupp['AVAILQTY'] <= 994) & (partsupp['AVAILQTY'] < 8164) & (partsupp['SUPPLYCOST'] == 91.593521585933)].merge(supplier[(supplier['S_NATIONKEY'] <= 12) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '17-') | (supplier['S_NATIONKEY'] <= 6)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 4) | (lineitem['L_PARTKEY'] > 155625) & (lineitem['LINESTATUS'] == 'F')][['L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 'o') & (partsupp['SUPPLYCOST'] >= 725.0800616968154) | (partsupp['PS_SUPPKEY'] < 813) | (partsupp['PS_PARTKEY'] != 20)].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'O')][['COMMITDATE', 'TAX', 'L_PARTKEY', 'LINESTATUS', 'SHIPMODE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['SUPPLYCOST'] <= 573.7097104438752)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('u'))].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] != 4067) & (lineitem['L_ORDERKEY'] > 168) & (lineitem['L_ORDERKEY'] <= 148) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] == 5) | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['SHIPMODE'].isin(['AIR', 'MAIL', 'RAIL', 'SHIP', 'FOB', 'REG AIR', 'TRUCK']))].merge(partsupp[(partsupp['SUPPLYCOST'] == 846.6257993712279) & (partsupp['AVAILQTY'] == 5284) & (partsupp['P_COMMENT'] != 'p')][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'BRAND', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['EXTENDEDPRICE'] >= 63129.91439684208) | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['L_ORDERKEY'] != 58) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['L_ORDERKEY'] < 51) | (lineitem['L_PARTKEY'] <= 150736)].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'p')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['LINESTATUS'].isin(['F']))].merge(orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_COMMENT'].str.startswith(' ')) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED', '5-LOW']))].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'M') | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['DISCOUNT'] > 0.09262669823685055) & (lineitem['TAX'] != 0.05049297639976891) | (lineitem['EXTENDEDPRICE'] >= 50820.91139666893) & (lineitem['TAX'] >= 0.04365824510009232) | (lineitem['TAX'] <= 0.009316338350617848)].merge(orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 'y') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '5-LOW', '3-MEDIUM'])) | (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] > 318094.20010718354) & (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] == 35814) | (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'P') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] >= 18)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_COMMENT'].str.startswith('f')) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['LINENUMBER'] >= 4) & (lineitem['DISCOUNT'] >= 0.0912652809797093)][['EXTENDEDPRICE', 'LINESTATUS', 'SHIPDATE', 'COMMITDATE', 'RECEIPTDATE', 'LINENUMBER', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['L_PARTKEY'] < 90692) | (lineitem['DISCOUNT'] <= 0.01491031881385979) & (lineitem['LINENUMBER'] < 1) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['QUANTITY'] == 18) & (lineitem['RETURNFLAG'].isin(['A', 'N']))].merge(partsupp.merge(part[(part['P_PARTKEY'] == 68)][['MFGR', 'BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'P_PARTKEY', 'CONTAINER', 'TYPE']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'SHIP') | (lineitem['LINENUMBER'] >= 5) & (lineitem['L_SUPPKEY'] != 2127) & (lineitem['DISCOUNT'] >= 0.03113147914207043) | (lineitem['LINENUMBER'] < 3) | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['TAX'] != 0.06255880460151583)].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('a')) & (part['CONTAINER'] == 'WRAP') & (part['BRAND'] != 'Brand#13') & (part['PT_COMMENT'] != 's')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.05976173362042542) | (lineitem['DISCOUNT'] >= 0.051076940501401207) & (lineitem['QUANTITY'] == 34) & (lineitem['EXTENDEDPRICE'] != 61122.29205281264) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['LINENUMBER'] == 4) & (lineitem['L_COMMENT'].str.startswith(' re')) & (lineitem['EXTENDEDPRICE'] < 61981.43215435363) & (lineitem['COMMITDATE'] > '1992-05-15')][['DISCOUNT', 'TAX', 'SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 432) | (partsupp['AVAILQTY'] != 3226) & (partsupp['P_COMMENT'] == 'k') | (partsupp['AVAILQTY'] <= 1950) & (partsupp['PS_PARTKEY'] > 24)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'DISCOUNT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'TAX', 'RETURNFLAG', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1043) & (partsupp['P_COMMENT'].str.startswith('are'))][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] != 904.3382697064192)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'MFGR', 'TYPE', 'PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'LINENUMBER', 'RETURNFLAG', 'COMMITDATE', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'w') | (supplier['S_PHONE'] == '32-')][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE']).agg('count')

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3203) | (partsupp['SUPPLYCOST'] < 635.7009109563065) | (partsupp['SUPPLYCOST'] <= 935.7970872621698) & (partsupp['P_COMMENT'].str.startswith('the'))][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem[['SHIPDATE', 'L_PARTKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY', 'RETURNFLAG', 'LINENUMBER']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] != 'k') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'f') | (customer['C_CUSTKEY'] <= 63)][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 9102.37623562807) & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_CUSTKEY'] <= 94) | (customer['C_ACCTBAL'] <= 6451.366455484542) | (customer['C_NATIONKEY'] == 13) | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_NATIONKEY'] < 22)][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'] == 'G') & (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] <= 10) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] < 7928.185377377591) | (customer['C_CUSTKEY'] < 46)][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NATIONKEY'] <= 7) | (customer['C_NATIONKEY'] >= 2) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 1042.7158353424898)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_ORDERKEY'] >= 279) & (orders['O_CUSTKEY'] < 93708) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] != 90335.40576535565) & (orders['SHIPPRIORITY'] < 0)][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] == 9) | (customer['C_ACCTBAL'] < -424.37510140609004)][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] > 1535.9182263077714) | (orders['O_COMMENT'].str.startswith('c'))][['CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT'])) | (orders['TOTALPRICE'] < 86542.55408413969) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['SHIPPRIORITY'] == 0)].merge(customer.merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'v')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] != 'g') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'] != 'w') | (orders['O_COMMENT'] == 'w')][['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] <= 80) & (customer['C_COMMENT'] != 'e') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_ACCTBAL'] < 5631.352136159124)].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_COMMENT'] != 'e')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 60215) & (orders['O_ORDERKEY'] > 74) & (orders['TOTALPRICE'] <= 296656.3925559974) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] > 437) | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] > 212981.35193746642)][['O_ORDERKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('A'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 634) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'] == 'o') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] <= 742) & (orders['O_CUSTKEY'] > 11830)].merge(customer[(customer['C_CUSTKEY'] > 25) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] == 2610.205196534468) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('a')) | (customer['C_ACCTBAL'] != 3954.055395635166) & (customer['C_ADDRESS'].str.startswith('4')) | (customer['C_CUSTKEY'] > 37)].merge(nation[(nation['N_NAME'] != 'E')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 677) & (orders['O_ORDERKEY'] <= 370)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'] != 'J') & (nation['N_NAME'].str.startswith('I'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] < 249476.12253860035) & (orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] > 315067.2234755679) | (orders['O_CUSTKEY'] >= 106716) | (orders['O_COMMENT'].str.startswith('f')) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_COMMENT'] != 'k')].merge(customer[(customer['C_ADDRESS'].str.startswith('l')) | (customer['C_CUSTKEY'] != 58) | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] > 9338.075306097577)].merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'] == 'u') & (nation['N_NAME'] != 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 14115.640776126898) | (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] > 232)].merge(customer[(customer['C_CUSTKEY'] >= 21) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] == -31.244142124856126) & (customer['C_ACCTBAL'] != 5118.571904802764) & (customer['C_ADDRESS'].str.startswith('j')) | (customer['C_ADDRESS'].str.startswith('r')) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'e')][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 11880.93499844242) | (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'] != 'l')].merge(customer[(customer['C_ACCTBAL'] != 2734.92593866594) & (customer['C_CUSTKEY'] < 15) | (customer['C_COMMENT'].str.startswith('g')) & (customer['C_CUSTKEY'] >= 95) & (customer['C_COMMENT'] != 'f') | (customer['C_CUSTKEY'] == 33)][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 11) | (nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] == 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] >= 3168.7176261790837) | (orders['O_CUSTKEY'] <= 57837) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] == 'uri') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_CUSTKEY'] <= 9) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'L') | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_ADDRESS'] != ',') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'v')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_CUSTKEY'] > 68) | (customer['C_NATIONKEY'] == 5) & (customer['C_COMMENT'].str.startswith('d'))].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] == 'r')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders[['O_CUSTKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'].str.startswith('U'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] <= 81) & (customer['C_NATIONKEY'] > 14) | (customer['C_ADDRESS'] == 'B')].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_NAME'] == 'B')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 68) | (supplier['S_COMMENT'].str.startswith('u'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 2386) & (partsupp['AVAILQTY'] != 2929) | (partsupp['SUPPLYCOST'] <= 358.3232750337377) | (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['SUPPLYCOST'] < 196.99859847592916)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_COMMENT'].str.startswith('j'))][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['P_COMMENT'] != 'the') & (partsupp['AVAILQTY'] >= 6058)][['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == '2') | (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'].str.startswith('C')) & (supplier['S_SUPPKEY'] >= 105)].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] < 18)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 78.29018359724385) | (partsupp['PS_PARTKEY'] == 9) & (partsupp['AVAILQTY'] < 7804)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] != 3649.1559369026427) | (supplier['S_NATIONKEY'] != 1) & (supplier['S_ADDRESS'] == '9')][['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] <= 5338.732492311443) & (supplier['S_SUPPKEY'] > 66) & (supplier['S_ADDRESS'].str.startswith('Y')) & (supplier['S_NATIONKEY'] < 9) | (supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_PHONE'].str.startswith('2'))][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] < 0) | (nation['N_NAME'] == 'I') & (nation['N_NAME'] == 'A')].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 9448.502621463558) | (supplier['S_COMMENT'] != 'k') | (supplier['S_ACCTBAL'] > 7480.183168607363) & (supplier['S_NATIONKEY'] < 5) & (supplier['S_COMMENT'] != '!') | (supplier['S_NAME'] != 'S')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'R') & (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'K') & (supplier['S_ACCTBAL'] <= 1481.0230169226272) | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] <= 9)][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] <= 17)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'N') & (supplier['S_PHONE'] == '28-') & (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_SUPPKEY'] == 127) & (supplier['S_SUPPKEY'] >= 118) & (supplier['S_SUPPKEY'] <= 14)][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'i')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_COMMENT'] == 'u') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'd') & (customer['C_ADDRESS'].str.startswith('v'))][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'L') | (customer['C_CUSTKEY'] < 42) | (customer['C_COMMENT'].str.startswith('s'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_COMMENT'] == 'p') & (nation['N_NAME'] != 'B') | (nation['N_COMMENT'] != 's')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'] == 'n') | (customer['C_COMMENT'] != 'f') & (customer['C_COMMENT'].str.startswith('p')) & (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'BUILDING']))][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_PHONE'] == '2') | (customer['C_ACCTBAL'] == 402.11960954728033) & (customer['C_ACCTBAL'] > 8060.597823227334) & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_PHONE'] == '27-') & (customer['C_ACCTBAL'] != 5982.914249037985) | (customer['C_NATIONKEY'] == 5) | (customer['C_NATIONKEY'] < 21)][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'] != 'b')][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4084) & (partsupp['AVAILQTY'] > 8574)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('s')) | (part['BRAND'] == 'Brand#14') | (part['TYPE'] == 'E') & (part['P_NAME'] == 'c')][['TYPE', 'PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 597.124257639267) | (partsupp['PS_PARTKEY'] <= 14) | (partsupp['PS_PARTKEY'] > 33) | (partsupp['SUPPLYCOST'] >= 781.3305661051195) | (partsupp['PS_SUPPKEY'] >= 1767)].merge(supplier[(supplier['S_ACCTBAL'] > 9503.325448508196) | (supplier['S_SUPPKEY'] <= 182) | (supplier['S_ACCTBAL'] <= 7913.473159000902) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 153) & (supplier['S_ADDRESS'] == '9')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['DISCOUNT'] == 0.0010636326794958406) | (lineitem['L_ORDERKEY'] == 165) | (lineitem['TAX'] != 0.046201312460941446) | (lineitem['L_SUPPKEY'] <= 9388) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['RECEIPTDATE'] == '1992-05-02')].merge(orders.merge(customer[(customer['C_PHONE'] != '25-') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] >= 17) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE']))].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['DISCOUNT'] >= 0.024994437774958002)][['QUANTITY', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 33) | (partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_PARTKEY'] >= 29) & (partsupp['PS_PARTKEY'] > 36) & (partsupp['SUPPLYCOST'] >= 271.73197871361924)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] != 4) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_PARTKEY'] < 186142) | (lineitem['LINENUMBER'] != 5)][['L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] <= 6) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE'])) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE'])) & (lineitem['EXTENDEDPRICE'] == 19335.98920911358) & (lineitem['LINENUMBER'] != 1) & (lineitem['L_ORDERKEY'] == 41) | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['DISCOUNT'] < 0.06385473750622093) & (lineitem['EXTENDEDPRICE'] < 24945.309353303284)][['DISCOUNT', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp.merge(part[(part['SIZE'] >= 4) | (part['RETAILPRICE'] == 920.3635348585725) | (part['PT_COMMENT'] != 'c') | (part['BRAND'] == 'Brand#51') | (part['RETAILPRICE'] < 1077.7195916015044) | (part['TYPE'] == 'SMA')][['P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'b') | (lineitem['QUANTITY'] <= 6) | (lineitem['QUANTITY'] <= 15) & (lineitem['QUANTITY'] < 28)][['LINENUMBER', 'SHIPDATE', 'L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'COMMITDATE']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 1609.7418919138202) | (supplier['S_COMMENT'] != 'bli') | (supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] != 5)][['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] != 137) & (lineitem['RETURNFLAG'] != 'A') | (lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['TAX'] < 0.00673901958677555) & (lineitem['LINENUMBER'] >= 6) & (lineitem['L_PARTKEY'] < 2895) & (lineitem['L_ORDERKEY'] <= 81) & (lineitem['LINENUMBER'] == 6)].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 7166.647235368678) | (supplier['S_SUPPKEY'] > 41) & (supplier['S_ACCTBAL'] > 3606.6727578422688)].merge(nation[(nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['RETURNFLAG'] != 'N') & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['L_SUPPKEY'] <= 6345) & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['DISCOUNT'] <= 0.09872638351738744) | (lineitem['LINESTATUS'] == 'F')].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] != 'x') | (supplier['S_PHONE'] != '1') | (supplier['S_SUPPKEY'] > 23) | (supplier['S_ADDRESS'] == 'U') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == '9')][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['EXTENDEDPRICE'] < 50275.01064449597) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_ORDERKEY'] != 133) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['DISCOUNT'] <= 0.03724932616214562) & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['LINESTATUS'] != 'F')][['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'COMMITDATE', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'L_COMMENT', 'SHIPINSTRUCT']].merge(orders[(orders['ORDERSTATUS'] == 'P')][['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['TAX'] > 0.053356901810837874) & (lineitem['LINENUMBER'] <= 1) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPINSTRUCT'].isin(['NONE']))][['LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] != 3187)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['CONTAINER', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_PARTKEY'] >= 178473) & (lineitem['EXTENDEDPRICE'] <= 29941.81975377863) & (lineitem['DISCOUNT'] < 0.09285764691064069) | (lineitem['L_COMMENT'] != 'v') | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['LINESTATUS'] != 'O') | (lineitem['LINESTATUS'] == 'F')][['SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINENUMBER']].merge(partsupp.merge(part[(part['BRAND'] == 'Brand#42') & (part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.0058697620831590315) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['QUANTITY'] < 28) | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['P_COMMENT'] != 'n') & (partsupp['P_COMMENT'] != 'j') & (partsupp['PS_PARTKEY'] == 42) | (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['SUPPLYCOST'] >= 551.8242051025169)].merge(supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 13) | (supplier['S_NATIONKEY'] > 7) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_COMMENT'] == 'p')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'L_PARTKEY', 'L_COMMENT', 'SHIPMODE', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'].str.startswith('g')) | (part['CONTAINER'] == 'MED') & (part['SIZE'] == 36) & (part['TYPE'] != 'SMA') & (part['TYPE'] == 'E') & (part['P_NAME'] == 'h') | (part['BRAND'] != 'Brand#42') & (part['BRAND'] != 'Brand#52')][['CONTAINER', 'SIZE', 'P_PARTKEY', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'SHIPINSTRUCT', 'DISCOUNT', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPDATE', 'L_COMMENT']].merge(orders.merge(customer[(customer['C_NATIONKEY'] >= 4) & (customer['C_NATIONKEY'] <= 18) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ADDRESS'] == 'o') & (customer['C_CUSTKEY'] <= 25) | (customer['C_COMMENT'].str.startswith('k')) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'L_SUPPKEY', 'RECEIPTDATE', 'RETURNFLAG', 'TAX']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 8) & (supplier['S_ACCTBAL'] <= 9732.667558206178) | (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] >= 659) & (orders['O_CUSTKEY'] > 7271) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21')][['ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] != 7441.688375297521) | (customer['C_ACCTBAL'] > 8206.729993870367) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('q')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE']))][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('count')

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] == 32968) & (orders['O_CUSTKEY'] > 92317) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 23411) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW'])) | (orders['O_ORDERKEY'] >= 296) & (orders['CLERK'] == 'C') & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_NATIONKEY'] > 16) | (customer['C_COMMENT'] != 'g') & (customer['C_NATIONKEY'] != 1) & (customer['C_COMMENT'].str.startswith(',')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'FURNITURE'])) & (customer['C_ACCTBAL'] > 809.0757841127629) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'X')][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['TOTALPRICE'] == 183725.80330052294) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_CUSTKEY'] >= 126857)].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('e')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] != 69) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_NATIONKEY'] < 22) | (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'] != '.') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERDATE'] >= '1998-07-21')][['ORDERSTATUS', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_COMMENT'].str.startswith('n'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('w')) & (orders['O_COMMENT'] == 'k') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_COMMENT'] == ' re') & (orders['O_COMMENT'] == '-')][['CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('z'))].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] == 19) | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] != 'M')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 29392) | (orders['TOTALPRICE'] != 237643.75123482954) | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] == 74846) | (orders['O_COMMENT'] != '-') | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] != ',')][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 60957) | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_ORDERKEY'] > 637)][['CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 140987) | (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] > 474) | (orders['O_COMMENT'] != 'the')][['CLERK', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] == 19) | (nation['N_NATIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 14983) | (orders['O_ORDERKEY'] >= 612) | (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] < 104228) & (orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'g')][['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 125402) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) | (orders['TOTALPRICE'] <= 221253.76433795798) | (orders['O_ORDERKEY'] > 506) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_ORDERKEY'] == 456)].merge(customer[(customer['C_ACCTBAL'] <= 1838.0899240787157) & (customer['C_COMMENT'] != 'i') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 19) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'e') | (customer['C_COMMENT'] == 'c') & (customer['C_CUSTKEY'] != 64)].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 515) | (orders['O_COMMENT'] != 'a')].merge(customer[['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 1) | (nation['N_NAME'] == 'S')].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 141739.94787828435) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] != 93391) & (orders['CLERK'] == 'C') & (orders['O_COMMENT'] == 'a') | (orders['TOTALPRICE'] > 353472.68360608077) | (orders['TOTALPRICE'] >= 345064.54838822276) & (orders['TOTALPRICE'] == 14140.440020083422)][['O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_COMMENT'] != '.') | (customer['C_NATIONKEY'] != 0) | (customer['C_ADDRESS'] != '4') & (customer['C_CUSTKEY'] < 40) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] == 1) & (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] == 'I')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] != 1685.3735375733677) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '27-')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'S') & (nation['N_NATIONKEY'] > 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_ADDRESS'] != 'E') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) & (customer['C_COMMENT'] == 'a') | (customer['C_PHONE'] == '18-') & (customer['C_NATIONKEY'] > 12) | (customer['C_ACCTBAL'] < 8653.43623587552)][['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 13)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] > 9414) | (partsupp['PS_PARTKEY'] > 24) | (partsupp['P_COMMENT'] != 'u') | (partsupp['P_COMMENT'] != 'q') | (partsupp['AVAILQTY'] == 7692)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] != 115)].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 19) & (partsupp['AVAILQTY'] >= 5610) | (partsupp['AVAILQTY'] <= 6732) | (partsupp['SUPPLYCOST'] <= 132.72140824444398)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 5756)].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'] == 'V') & (supplier['S_ADDRESS'] != 'F') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'a')][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] == 12)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 3569) | (partsupp['PS_PARTKEY'] > 39)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] > 3) | (supplier['S_SUPPKEY'] > 131) & (supplier['S_SUPPKEY'] >= 190)].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 15) & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 5407) | (partsupp['PS_PARTKEY'] < 15) | (partsupp['SUPPLYCOST'] >= 660.3319731279465) | (partsupp['PS_PARTKEY'] == 27)][['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] <= 916.5293205648428) & (part['BRAND'].isin(['Brand#32', 'Brand#41', 'Brand#33', 'Brand#13', 'Brand#34', 'Brand#21', 'Brand#35', 'Brand#55', 'Brand#45', 'Brand#43', 'Brand#12', 'Brand#44', 'Brand#54', 'Brand#51'])) & (part['P_NAME'] == 'lin') & (part['CONTAINER'] != 'WRAP') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] != 32) & (part['BRAND'] != 'Brand#43') & (part['P_NAME'] != 'p')][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'd') | (partsupp['SUPPLYCOST'] <= 705.1861735503618)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 14) | (nation['N_NATIONKEY'] == 1) & (nation['N_COMMENT'] == 'l') | (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('j')) | (partsupp['SUPPLYCOST'] < 819.2847669373244) | (partsupp['SUPPLYCOST'] <= 461.5717263803674) & (partsupp['PS_PARTKEY'] < 6)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] > 3852.708714599049)].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['PS_PARTKEY'] > 42) & (partsupp['P_COMMENT'] != 'n') & (partsupp['SUPPLYCOST'] < 902.5961302850926) & (partsupp['P_COMMENT'].str.startswith('a'))].merge(part[(part['TYPE'] == 'P') & (part['P_NAME'] == 'p') & (part['P_NAME'] != 'g') & (part['RETAILPRICE'] <= 1038.8393537159616) & (part['PT_COMMENT'] != 'i') & (part['PT_COMMENT'] != 'x') & (part['BRAND'].isin(['Brand#13', 'Brand#54', 'Brand#42', 'Brand#21', 'Brand#44', 'Brand#15'])) | (part['PT_COMMENT'] == 'r')][['MFGR', 'TYPE', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 't') & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ACCTBAL'] >= 7105.496861105473) & (customer['C_ACCTBAL'] <= 7950.477321942644) & (customer['C_NATIONKEY'] < 4) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_PHONE'].str.startswith('18-'))][['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['C_NATIONKEY'] < 13) & (customer['C_NATIONKEY'] != 4) & (customer['C_ACCTBAL'] > 5223.056662690781) & (customer['C_PHONE'] == '18-') & (customer['C_NATIONKEY'] > 2) & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 98) & (customer['C_NATIONKEY'] < 22) | (customer['C_NATIONKEY'] != 9) & (customer['C_ACCTBAL'] != 961.6715816933927) & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] < 6) | (customer['C_PHONE'] != '3')].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 8)][['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'U') & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'].str.startswith('F'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] == 23)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] >= 221624.78607140906) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERSTATUS'] != 'F') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] > 463)][['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('j')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] > 1911.6174047340778) | (customer['C_PHONE'] != '18-') & (customer['C_NATIONKEY'] == 17) | (customer['C_NATIONKEY'] <= 22) & (customer['C_PHONE'] != '27-') & (customer['C_COMMENT'] == 't')][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] == 1695.2302017576985) & (customer['C_PHONE'] == '27-') | (customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] != 2) & (customer['C_ACCTBAL'] < 8769.696315357216) & (customer['C_CUSTKEY'] >= 68)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 39) | (partsupp['P_COMMENT'] == 'h') & (partsupp['SUPPLYCOST'] <= 148.0340503074129) & (partsupp['SUPPLYCOST'] == 253.1569329040744) & (partsupp['P_COMMENT'] == 'are')][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 4911.2741961547035) | (supplier['S_ADDRESS'].str.startswith('S')) | (supplier['S_PHONE'] != '3') & (supplier['S_PHONE'].str.startswith('3'))].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'REG AIR', 'MAIL', 'AIR', 'FOB', 'RAIL'])) & (lineitem['L_COMMENT'].str.startswith('h')) & (lineitem['TAX'] != 0.0025424720612942943) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_COMMENT'].str.startswith('-')) | (lineitem['L_COMMENT'].str.startswith('l'))].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('are')) | (partsupp['PS_PARTKEY'] > 19) | (partsupp['PS_SUPPKEY'] <= 6245) & (partsupp['PS_SUPPKEY'] > 2532) | (partsupp['SUPPLYCOST'] > 164.65439752229332)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('g')) & (part['P_PARTKEY'] == 157) | (part['SIZE'] < 32) | (part['PT_COMMENT'] != 'n') | (part['PT_COMMENT'] != 's') | (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_PARTKEY'] <= 190472) & (lineitem['LINESTATUS'] != 'O') & (lineitem['LINESTATUS'] != 'F') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['QUANTITY'] != 32)][['LINESTATUS', 'L_PARTKEY', 'TAX', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'] != 'al ') & (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_COMMENT'] == 'f') & (supplier['S_SUPPKEY'] > 118)].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] != 0.0039305389861191255) | (lineitem['EXTENDEDPRICE'] != 77139.43874693659) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['DISCOUNT'] >= 0.09065570540914929) & (lineitem['DISCOUNT'] <= 0.08634706396972965) | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] <= 11)][['L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] != 231.85957953458197)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'SMA') & (part['TYPE'] == 'L') | (part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] > 9) | (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'] != 'ss ')][['PT_COMMENT', 'SIZE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.045128246037558065) & (lineitem['EXTENDEDPRICE'] <= 4035.4018306857824)][['RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'L_COMMENT', 'SHIPINSTRUCT', 'COMMITDATE', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 5323) & (partsupp['PS_PARTKEY'] != 8) | (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['PS_SUPPKEY'] >= 2679) | (partsupp['AVAILQTY'] < 8501)].merge(supplier[(supplier['S_NATIONKEY'] != 23) | (supplier['S_PHONE'] != '32-') & (supplier['S_SUPPKEY'] <= 44) & (supplier['S_ADDRESS'] != 'S')][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.07236356996095343) & (lineitem['QUANTITY'] != 25) | (lineitem['L_PARTKEY'] <= 139815) | (lineitem['EXTENDEDPRICE'] < 51756.32128474769) | (lineitem['LINENUMBER'] != 4) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['DISCOUNT'] <= 0.07912585181529423)].merge(partsupp[(partsupp['PS_SUPPKEY'] > 6129) & (partsupp['P_COMMENT'] == 'x')].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ACCTBAL'] < 650.4795757888621) & (supplier['S_SUPPKEY'] > 148) & (supplier['S_ACCTBAL'] < 4591.908915372468) | (supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] != 'u')].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] != 6)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.01331744108527514) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_COMMENT'] == 's. ')][['QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER', 'L_COMMENT', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 710.2510348943139) | (partsupp['PS_SUPPKEY'] == 299) | (partsupp['PS_PARTKEY'] <= 30)].merge(part[(part['TYPE'].str.startswith('E')) & (part['SIZE'] > 15) & (part['PT_COMMENT'].str.startswith(' fi')) & (part['SIZE'] <= 37) & (part['BRAND'].isin(['Brand#12', 'Brand#31', 'Brand#41', 'Brand#43', 'Brand#53', 'Brand#54', 'Brand#11', 'Brand#21', 'Brand#25', 'Brand#22', 'Brand#52', 'Brand#32', 'Brand#14', 'Brand#23', 'Brand#34', 'Brand#44', 'Brand#13'])) | (part['MFGR'] == 'Manufacturer#5') & (part['PT_COMMENT'] != 'g') & (part['PT_COMMENT'] != 'g')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.015063714054914745) | (lineitem['EXTENDEDPRICE'] != 28144.920807670416) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_PARTKEY'] >= 4419) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RECEIPTDATE'] == '1998-11-06')][['LINESTATUS', 'DISCOUNT', 'QUANTITY', 'RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE']].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.09837807938938836)][['SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'COMMITDATE', 'LINESTATUS', 'L_COMMENT']].merge(orders[(orders['O_COMMENT'] != 'd') & (orders['O_ORDERKEY'] == 8) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] <= 48177.41046100324) | (lineitem['L_ORDERKEY'] < 186)].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_ORDERKEY'] >= 723) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_ORDERKEY'] == 347) | (orders['TOTALPRICE'] != 151318.57885307842)].merge(customer[(customer['C_ACCTBAL'] != 3267.8662851580693) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] != 'z')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'] != 'I')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != '-') & (lineitem['L_SUPPKEY'] < 9925) & (lineitem['SHIPMODE'].isin(['AIR', 'TRUCK', 'MAIL', 'RAIL', 'REG AIR', 'SHIP', 'FOB'])) | (lineitem['DISCOUNT'] != 0.09886142970642815) & (lineitem['COMMITDATE'] < '1992-05-15')][['SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'LINENUMBER', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] < 6229) | (partsupp['AVAILQTY'] > 2106) | (partsupp['AVAILQTY'] >= 2200) & (partsupp['PS_PARTKEY'] >= 44) & (partsupp['PS_SUPPKEY'] >= 5498)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 148458) | (lineitem['EXTENDEDPRICE'] < 67775.2641221281) | (lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['L_PARTKEY'] <= 187294) | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['L_ORDERKEY'] >= 8) & (lineitem['L_SUPPKEY'] > 1906)].merge(orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] != 407) | (orders['O_CUSTKEY'] > 148984) | (orders['O_CUSTKEY'] <= 103892)][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 2290) & (lineitem['L_COMMENT'] == 'i') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['LINENUMBER'] > 5) | (lineitem['TAX'] == 0.05874179072821779) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['LINENUMBER'] != 6) & (lineitem['QUANTITY'] <= 25) & (lineitem['QUANTITY'] >= 8)][['L_PARTKEY', 'SHIPDATE', 'LINENUMBER']].merge(partsupp[(partsupp['PS_PARTKEY'] == 44) & (partsupp['PS_SUPPKEY'] >= 3195)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] > 75) & (part['SIZE'] <= 44)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'BRAND']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 3961) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['L_ORDERKEY'] != 193)][['L_COMMENT', 'L_SUPPKEY', 'SHIPMODE', 'L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] == 3918)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'r')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] <= 31) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON'])) & (lineitem['EXTENDEDPRICE'] == 77501.6377257316) & (lineitem['SHIPMODE'].isin(['TRUCK', 'FOB'])) | (lineitem['L_COMMENT'] != 'lit')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 14) & (partsupp['AVAILQTY'] < 1436) | (partsupp['P_COMMENT'] != 'd') | (partsupp['PS_SUPPKEY'] >= 6475)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'r') | (supplier['S_SUPPKEY'] > 160) & (supplier['S_ACCTBAL'] < 9213.773283866207) | (supplier['S_NATIONKEY'] == 19) & (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_COMMENT'] != 'ly ') & (lineitem['RETURNFLAG'] == 'R') | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_SUPPKEY'] == 1905) | (lineitem['L_COMMENT'] == ' ') | (lineitem['RETURNFLAG'] != 'N') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')][['RECEIPTDATE', 'COMMITDATE', 'LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'L_COMMENT', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'TAX']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'FOB', 'AIR', 'RAIL', 'MAIL'])) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['L_ORDERKEY'] <= 67) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_PARTKEY'] < 114907) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN']))][['COMMITDATE', 'SHIPDATE', 'RECEIPTDATE', 'TAX', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] >= 7764) | (partsupp['SUPPLYCOST'] >= 31.87712170253137) & (partsupp['P_COMMENT'] == 'l')][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] <= 0.033445124192778744) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['EXTENDEDPRICE'] > 21527.551754915305) | (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['TAX'] >= 0.013497282281673587) & (lineitem['DISCOUNT'] != 0.04493053646803057) & (lineitem['L_ORDERKEY'] == 1)].merge(partsupp[(partsupp['AVAILQTY'] == 2986)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('i')) & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'h') | (part['P_NAME'] != 'n') & (part['CONTAINER'].str.startswith('MED')) | (part['CONTAINER'] != 'MED') & (part['SIZE'] >= 25) | (part['P_NAME'].str.startswith('p'))][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.06596178097730951) & (lineitem['QUANTITY'] >= 21) & (lineitem['EXTENDEDPRICE'] != 69836.07436572724) & (lineitem['EXTENDEDPRICE'] != 81580.47030356317) | (lineitem['QUANTITY'] > 10) & (lineitem['DISCOUNT'] < 0.0008915853233627314) | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['TAX'] == 0.07212972427201396) | (lineitem['DISCOUNT'] < 0.030186422815134173)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 3) | (partsupp['PS_PARTKEY'] > 9) & (partsupp['P_COMMENT'] != 'a')].merge(part[(part['P_NAME'].str.startswith('w')) | (part['P_NAME'].str.startswith('o'))][['RETAILPRICE', 'TYPE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

lineitem[(lineitem['TAX'] == 0.07404295248687127) | (lineitem['L_SUPPKEY'] == 8157) | (lineitem['L_SUPPKEY'] != 2214) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINESTATUS'] != 'O') | (lineitem['L_SUPPKEY'] < 6398) | (lineitem['DISCOUNT'] == 0.02114045547816893) & (lineitem['EXTENDEDPRICE'] <= 32183.621043026775) & (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['LINESTATUS'] == 'O')][['QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp.merge(part[(part['BRAND'].isin(['Brand#12', 'Brand#33', 'Brand#24', 'Brand#52', 'Brand#32', 'Brand#11', 'Brand#14', 'Brand#34', 'Brand#35', 'Brand#21', 'Brand#22', 'Brand#43', 'Brand#44', 'Brand#41', 'Brand#45', 'Brand#23', 'Brand#53', 'Brand#51', 'Brand#25', 'Brand#15', 'Brand#42', 'Brand#54'])) & (part['CONTAINER'] != 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

lineitem[['DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY', 'L_PARTKEY', 'QUANTITY', 'TAX']].merge(partsupp[(partsupp['SUPPLYCOST'] == 49.58153269312619) & (partsupp['P_COMMENT'] != 'i') & (partsupp['SUPPLYCOST'] <= 512.5931430962563) & (partsupp['SUPPLYCOST'] == 528.0978147037168) | (partsupp['AVAILQTY'] != 9338)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NAME'].str.startswith('J'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'QUANTITY', 'COMMITDATE', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT']].merge(partsupp[(partsupp['AVAILQTY'] <= 8792) | (partsupp['AVAILQTY'] > 2517) | (partsupp['PS_PARTKEY'] >= 27) & (partsupp['PS_SUPPKEY'] == 280) & (partsupp['PS_SUPPKEY'] == 6681)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] > 32) & (part['P_PARTKEY'] < 17) | (part['PT_COMMENT'] == 's') | (part['TYPE'] != 'STA') & (part['SIZE'] < 17) & (part['PT_COMMENT'].str.startswith('c')) | (part['TYPE'] == 'M') | (part['BRAND'].isin(['Brand#41', 'Brand#25', 'Brand#53', 'Brand#23', 'Brand#55', 'Brand#13', 'Brand#43', 'Brand#54', 'Brand#35', 'Brand#32', 'Brand#44', 'Brand#24', 'Brand#34', 'Brand#33', 'Brand#11']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'DISCOUNT', 'SHIPDATE', 'L_PARTKEY', 'RECEIPTDATE', 'QUANTITY', 'COMMITDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3566) | (partsupp['PS_PARTKEY'] < 25) & (partsupp['AVAILQTY'] < 3319) | (partsupp['SUPPLYCOST'] > 754.6950573489312) | (partsupp['PS_PARTKEY'] >= 20)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'DISCOUNT', 'LINENUMBER', 'COMMITDATE', 'L_SUPPKEY', 'L_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 'M') | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != 'M') & (supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

lineitem[['SHIPMODE', 'COMMITDATE', 'L_ORDERKEY', 'L_SUPPKEY']].merge(orders[(orders['O_CUSTKEY'] != 37676) & (orders['TOTALPRICE'] < 88623.3158847589) | (orders['O_ORDERKEY'] != 211) & (orders['ORDERDATE'] > '1992-01-13')][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'SHIPDATE', 'TAX', 'RECEIPTDATE', 'L_PARTKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG']].merge(orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '27-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('z')) & (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] >= 2) & (customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] >= 1810.0110910741082) & (customer['C_ACCTBAL'] < 4744.400807995776) & (customer['C_COMMENT'] == ',') | (customer['C_ACCTBAL'] != 1722.8794082517265) | (customer['C_PHONE'] != '1')][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'l') | (customer['C_PHONE'] != '25-') | (customer['C_CUSTKEY'] < 78) | (customer['C_PHONE'] == '13-') & (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'BUILDING')][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] > '1998-07-21')][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'n') | (customer['C_ACCTBAL'] != 1091.0361725668558) & (customer['C_NATIONKEY'] < 18) & (customer['C_NATIONKEY'] < 10) & (customer['C_ADDRESS'] == 'L') & (customer['C_PHONE'] == '22-') & (customer['C_COMMENT'] != ' ') & (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] >= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 220) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_CUSTKEY'] > 72844) & (orders['O_COMMENT'].str.startswith('k')) | (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] > 140638.5474228488) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '5-LOW'])) | (orders['TOTALPRICE'] == 144296.7515278769) | (orders['TOTALPRICE'] >= 278169.3715574797) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_ADDRESS'] != 'a') | (customer['C_ADDRESS'] == '8') & (customer['C_NATIONKEY'] == 14) | (customer['C_ACCTBAL'] < 9496.447333382259) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] == 19) & (customer['C_COMMENT'] == 'i') | (customer['C_ACCTBAL'] < 2419.6662191348255)].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'q') & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] <= 344221.81855649035) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] == 98085) | (orders['TOTALPRICE'] == 133572.88897585237) | (orders['O_ORDERKEY'] < 307) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] == '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] == 6) | (customer['C_PHONE'] != '25-') | (customer['C_ACCTBAL'] <= 6049.000297756324)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'a') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 159) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] >= 1943) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] >= 46547.682804591444)][['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'] == 'g') & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] <= 0) & (customer['C_ACCTBAL'] != 3264.176968806766) & (customer['C_NATIONKEY'] < 15) & (customer['C_ACCTBAL'] == 3564.5729780332113) | (customer['C_NATIONKEY'] == 1)][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('w')) | (orders['O_CUSTKEY'] != 133874) & (orders['ORDERSTATUS'] != 'F') | (orders['TOTALPRICE'] < 337226.5537270689) | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_COMMENT'].str.startswith('g'))][['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'] != 'n')].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 9848) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] == '.') & (orders['O_CUSTKEY'] >= 96444) & (orders['O_CUSTKEY'] < 116799) & (orders['TOTALPRICE'] >= 241155.03342747272) & (orders['TOTALPRICE'] > 63187.721863045124) & (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] < 7180.997429396782) | (customer['C_ACCTBAL'] < 3381.415463282684) & (customer['C_COMMENT'].str.startswith('r')) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'r') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING'])) & (customer['C_CUSTKEY'] == 6) | (customer['C_PHONE'] == '18-')].merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 754) | (orders['O_ORDERKEY'] <= 82) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] != 27) | (customer['C_ACCTBAL'] <= 4303.4437049607795) & (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] <= 16)][['C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 99) | (orders['O_ORDERKEY'] != 466) | (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] != 'i') & (orders['TOTALPRICE'] != 349077.1167658709) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_ADDRESS'] != 'H') | (customer['C_CUSTKEY'] <= 57) & (customer['C_PHONE'] != '27-') | (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] == ' ') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('r')) | (customer['C_ADDRESS'] == 'd')][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 542) & (orders['O_COMMENT'].str.startswith('l')) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ACCTBAL'] <= 3237.1306457144265) & (customer['C_ACCTBAL'] != 4403.337413481256) & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'c') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] == ' ') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'] == 'C')].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 2) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'].str.startswith('c')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] != 'h')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != 'j') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] != 66860.60597797445) & (orders['O_COMMENT'] == 'u')].merge(customer[(customer['C_ACCTBAL'] < 267.36880417555676) | (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'] == 'K') | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) & (customer['C_PHONE'] == '1')].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'G')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] != '.')][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 39451) & (orders['O_ORDERKEY'] > 539) & (orders['ORDERDATE'] > '1992-01-13')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 242182.93115508606) & (orders['O_CUSTKEY'] <= 34693) | (orders['O_CUSTKEY'] > 77258) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] <= 602) & (orders['TOTALPRICE'] == 270279.3861794407) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] < 9) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 10) & (customer['C_ACCTBAL'] <= 6535.557222951836) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_PHONE'].str.startswith('25-')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_CUSTKEY'] != 58) & (customer['C_CUSTKEY'] > 24) | (customer['C_ADDRESS'] == 'M') | (customer['C_ACCTBAL'] == 4845.223132304359) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 84) | (customer['C_ADDRESS'] == 'm')].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 46) & (partsupp['PS_SUPPKEY'] > 3839) | (partsupp['PS_PARTKEY'] >= 5)].merge(supplier[(supplier['S_NATIONKEY'] <= 23) & (supplier['S_ADDRESS'].str.startswith('y')) & (supplier['S_ACCTBAL'] >= 8409.839570493054)][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 47) & (partsupp['AVAILQTY'] > 9746)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 4258) | (partsupp['AVAILQTY'] != 8029) & (partsupp['SUPPLYCOST'] <= 527.5031367325973) & (partsupp['AVAILQTY'] != 9902)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 21) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] != 7) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'] == ',')][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 5766)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_PHONE'] != '2')][['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'j') & (partsupp['SUPPLYCOST'] >= 157.53139168422345) | (partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['PS_PARTKEY'] != 8) | (partsupp['PS_SUPPKEY'] != 4752)].merge(supplier[(supplier['S_COMMENT'] == 'the') & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'the') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 2814.6753292649937) | (supplier['S_COMMENT'].str.startswith('g'))].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] < 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 597.9123294817483) & (partsupp['AVAILQTY'] > 2182) & (partsupp['PS_PARTKEY'] != 44) & (partsupp['PS_PARTKEY'] > 28)].merge(supplier[(supplier['S_COMMENT'] == 'w') | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'e') & (supplier['S_SUPPKEY'] != 20) & (supplier['S_COMMENT'] != 'n') | (supplier['S_ACCTBAL'] <= 2958.8329599233166) | (supplier['S_NATIONKEY'] <= 15)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'i') | (supplier['S_PHONE'] == '26-') | (supplier['S_NATIONKEY'] != 20) & (supplier['S_ADDRESS'].str.startswith('z')) & (supplier['S_SUPPKEY'] > 151)].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 14) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_COMMENT'] != 'g') & (supplier['S_NATIONKEY'] == 8)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'E') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'K') & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 8) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] != '28-') | (supplier['S_SUPPKEY'] < 59) & (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_NATIONKEY'] == 1)][['S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 14) & (supplier['S_NATIONKEY'] == 6) | (supplier['S_COMMENT'] != 'r') | (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] != '3') | (supplier['S_NATIONKEY'] != 23) | (supplier['S_SUPPKEY'] != 100)][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_NATIONKEY'] < 22) | (nation['N_NATIONKEY'] <= 22)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_SUPPKEY'] < 197) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 79) | (supplier['S_NATIONKEY'] < 21) & (supplier['S_ADDRESS'] == '9') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('R'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'].str.startswith('I'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 7639.615688718752) & (customer['C_ACCTBAL'] == 5770.450027118237) | (customer['C_NATIONKEY'] != 7) | (customer['C_ACCTBAL'] < 4613.846822836851) | (customer['C_NAME'] == 'C')][['C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] < 16)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 5464.770875697446) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 15) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] > 16) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == 'd')][['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] <= 12)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] > 4013.9332190202385) & (customer['C_ACCTBAL'] == 8746.890101675712) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] >= 20) | (customer['C_PHONE'] == '13-') & (customer['C_ADDRESS'] == 'o') & (customer['C_COMMENT'] != 'k') | (customer['C_ADDRESS'] == 'l')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'r') | (customer['C_COMMENT'].str.startswith('w')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ACCTBAL'] < 8504.1305864095) & (customer['C_ADDRESS'] == '0') | (customer['C_ADDRESS'].str.startswith('B'))][['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'l')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 85) | (customer['C_ADDRESS'] != 'd') | (customer['C_PHONE'] == '22-') | (customer['C_NATIONKEY'] != 2) & (customer['C_ACCTBAL'] > 6704.302289791416) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] <= 13)][['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'] != 'V') & (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'z') & (customer['C_PHONE'] == '27-')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] < 16)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 13) | (customer['C_NATIONKEY'] < 2) & (customer['C_ADDRESS'].str.startswith('i')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] < 7884.736469052206) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_CUSTKEY'] < 11) & (customer['C_ACCTBAL'] > 571.744039920658)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 11) | (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] <= 15) | (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ACCTBAL'] <= 5877.222076918844) | (customer['C_NATIONKEY'] != 0)][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NATIONKEY'] > 8) & (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'A')].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] == 107) | (orders['O_COMMENT'] == 'a') & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] < 557) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 105) & (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] == 59265)][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] > 1503.6647122716627) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 17773.318168860354) & (lineitem['L_ORDERKEY'] <= 97) & (lineitem['LINENUMBER'] <= 6) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['EXTENDEDPRICE'] < 56436.28078158556) | (lineitem['DISCOUNT'] > 0.08240284449268905) | (lineitem['EXTENDEDPRICE'] != 76738.69354080941) & (lineitem['L_ORDERKEY'] > 21) | (lineitem['QUANTITY'] == 32) & (lineitem['SHIPMODE'] != 'RAIL')][['COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] >= 9151) | (partsupp['PS_PARTKEY'] < 46) | (partsupp['PS_PARTKEY'] != 6) & (partsupp['PS_SUPPKEY'] < 676) & (partsupp['SUPPLYCOST'] >= 785.867784498627)].merge(part[['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 2) | (lineitem['L_COMMENT'] == 'j') & (lineitem['TAX'] == 0.05951531586401483) | (lineitem['L_PARTKEY'] == 117745) & (lineitem['SHIPMODE'].isin(['AIR', 'FOB', 'RAIL', 'MAIL', 'SHIP'])) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['QUANTITY'] <= 27)][['RECEIPTDATE', 'LINESTATUS', 'L_PARTKEY', 'L_SUPPKEY', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPMODE', 'SHIPINSTRUCT', 'TAX']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] > '1998-10-30')].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] < 245295.44519905373) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['TOTALPRICE'] == 74571.11174538366)].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] > 8704.992567198633) | (customer['C_ACCTBAL'] > 8773.587320711253) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] != 's') & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != ' ') | (lineitem['LINENUMBER'] != 4) & (lineitem['L_ORDERKEY'] != 83)].merge(orders[(orders['O_ORDERKEY'] > 292) & (orders['ORDERDATE'] >= '1998-07-21')][['O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] == '18-') & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != '8') | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 9) & (customer['C_NATIONKEY'] >= 17) | (customer['C_ACCTBAL'] <= 9104.078608079093) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 143) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_SUPPKEY'] > 8128) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['EXTENDEDPRICE'] > 74696.23446332334) | (lineitem['DISCOUNT'] > 0.08081112665503021) & (lineitem['TAX'] > 0.046010153760775434) & (lineitem['L_ORDERKEY'] > 73) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPDATE'] <= '1992-04-27')].merge(orders.merge(customer[(customer['C_ACCTBAL'] >= 3824.877121262164) & (customer['C_COMMENT'] != 'e') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_ADDRESS'].str.startswith('f')) | (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_NAME']).agg('count')

lineitem[(lineitem['L_PARTKEY'] < 5007) & (lineitem['L_PARTKEY'] < 50155)][['SHIPMODE', 'L_SUPPKEY', 'LINESTATUS', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['MFGR'] != 'Manufacturer#1') | (part['RETAILPRICE'] >= 947.081154807448) | (part['PT_COMMENT'].str.startswith('x')) | (part['PT_COMMENT'].str.startswith('w')) & (part['PT_COMMENT'].str.startswith('q'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_ORDERKEY'] <= 129) & (lineitem['L_PARTKEY'] <= 44936) | (lineitem['LINENUMBER'] > 6) | (lineitem['TAX'] < 0.06295221815804339) & (lineitem['L_SUPPKEY'] >= 2100) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['DISCOUNT'] != 0.07904954931635622) | (lineitem['L_PARTKEY'] <= 79267)].merge(partsupp[(partsupp['P_COMMENT'] != 'ly ') & (partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] != 'i') & (partsupp['P_COMMENT'] != ',') & (partsupp['AVAILQTY'] == 216)].merge(part[(part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] == 'o') | (part['P_PARTKEY'] < 75) & (part['P_PARTKEY'] != 150)][['P_PARTKEY', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['LINESTATUS'] != 'F') | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_PARTKEY'] != 186669) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['LINENUMBER'] > 5)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'f') & (part['P_PARTKEY'] <= 132) & (part['P_NAME'] != 'lin') | (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] < 174) | (part['BRAND'] == 'Brand#42') | (part['RETAILPRICE'] > 1023.9190569628373) & (part['PT_COMMENT'] == 'q') & (part['P_NAME'] != 'c')][['PT_COMMENT', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) | (lineitem['LINENUMBER'] < 2) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['DISCOUNT'] < 0.03685694900474745) & (lineitem['L_ORDERKEY'] == 70) & (lineitem['QUANTITY'] <= 14) | (lineitem['L_ORDERKEY'] == 112) | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['LINESTATUS'] != 'F') | (lineitem['COMMITDATE'] != '1998-10-16')][['SHIPDATE', 'L_PARTKEY', 'L_COMMENT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_PARTKEY'] > 35) | (partsupp['SUPPLYCOST'] > 108.69418511380954)].merge(supplier[['S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'FOB') & (lineitem['COMMITDATE'] >= '1992-05-15')][['SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'DISCOUNT', 'RECEIPTDATE', 'QUANTITY', 'SHIPDATE', 'EXTENDEDPRICE', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] >= 78438)][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'REG AIR'])) | (lineitem['L_SUPPKEY'] >= 4611) & (lineitem['QUANTITY'] > 8) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'] == 'a') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_SUPPKEY'] > 1108) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['L_PARTKEY'] != 10462)].merge(orders[(orders['O_CUSTKEY'] > 133373) & (orders['O_ORDERKEY'] == 435)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR'])) | (lineitem['L_ORDERKEY'] != 53) & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['L_COMMENT'].str.startswith('f')) | (lineitem['L_COMMENT'].str.startswith(' re'))][['LINESTATUS', 'RETURNFLAG', 'LINENUMBER', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPDATE', 'COMMITDATE', 'TAX', 'EXTENDEDPRICE']].merge(orders[(orders['CLERK'] == 'C')].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] != 0.00827879288934498) | (lineitem['L_ORDERKEY'] >= 36) | (lineitem['L_PARTKEY'] != 129820) & (lineitem['L_ORDERKEY'] > 82)][['SHIPMODE', 'L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['SUPPLYCOST'] < 312.28167406540473) & (partsupp['PS_PARTKEY'] >= 38) | (partsupp['SUPPLYCOST'] < 161.73218336418108) & (partsupp['SUPPLYCOST'] < 88.59007554141297) & (partsupp['PS_PARTKEY'] != 22)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'K') | (supplier['S_ADDRESS'].str.startswith('7')) & (supplier['S_ACCTBAL'] <= 2227.2685248779017) | (supplier['S_NATIONKEY'] >= 6) | (supplier['S_COMMENT'] == 'a') | (supplier['S_NATIONKEY'] != 15) | (supplier['S_PHONE'].str.startswith('14-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] > 0.07460611042033195) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] >= 928) & (lineitem['COMMITDATE'] > '1998-10-16')].merge(partsupp.merge(supplier.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] < 1) | (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'LINESTATUS', 'DISCOUNT', 'L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'TAX', 'SHIPDATE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 13) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 14)].merge(nation.merge(region[(region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY', 'L_COMMENT', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'MFGR', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'SHIPDATE', 'QUANTITY', 'COMMITDATE', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] < 874.4979500192172) | (partsupp['SUPPLYCOST'] <= 159.84691497568147) & (partsupp['SUPPLYCOST'] >= 140.9938343543059)].merge(part[(part['SIZE'] != 6) | (part['PT_COMMENT'] != 'ss ') & (part['SIZE'] <= 7) | (part['BRAND'].isin(['Brand#31', 'Brand#52', 'Brand#54', 'Brand#14', 'Brand#13', 'Brand#43', 'Brand#15', 'Brand#22', 'Brand#33', 'Brand#53', 'Brand#45', 'Brand#41', 'Brand#32', 'Brand#55', 'Brand#44', 'Brand#34', 'Brand#11', 'Brand#23', 'Brand#51', 'Brand#42', 'Brand#21', 'Brand#24', 'Brand#25'])) & (part['P_PARTKEY'] > 66) & (part['CONTAINER'] == 'WRAP')][['CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPDATE', 'TAX', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'LINENUMBER', 'L_COMMENT', 'EXTENDEDPRICE']].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[(orders['O_COMMENT'].str.startswith('z')) | (orders['TOTALPRICE'] <= 168561.57939295605) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['O_COMMENT'] == 'e') | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_COMMENT'] == 'g')][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] < 15) & (customer['C_ACCTBAL'] == 4634.314255745326) | (customer['C_CUSTKEY'] != 97)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'L_ORDERKEY', 'EXTENDEDPRICE', 'TAX']].merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] < 84464.60700592285) | (orders['TOTALPRICE'] < 158170.91523190905)].merge(customer.merge(nation[(nation['N_COMMENT'] == ' ')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'LINESTATUS', 'SHIPDATE', 'L_SUPPKEY', 'DISCOUNT', 'LINENUMBER', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 994.413144706754) | (partsupp['PS_PARTKEY'] == 14) & (partsupp['P_COMMENT'].str.startswith('l'))][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_NAME', 'SIZE', 'BRAND', 'TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[['SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'LINESTATUS', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 3981) & (partsupp['PS_SUPPKEY'] < 2085) & (partsupp['SUPPLYCOST'] >= 700.452894587701) | (partsupp['SUPPLYCOST'] != 727.7696349504366)].merge(part[(part['PT_COMMENT'].str.startswith('ss '))][['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'BRAND', 'SIZE']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] != 6261.464655087676) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] >= 19) & (customer['C_CUSTKEY'] != 2) | (customer['C_COMMENT'] == 'p') & (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['CLERK'] != 'C') | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'].str.startswith('.')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_CUSTKEY'] != 107223)][['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'] == 'k') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] != 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] >= 143240)][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] != '27-') & (customer['C_ACCTBAL'] == 9931.701894834425) | (customer['C_PHONE'] == '22-') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] != 19) & (customer['C_NATIONKEY'] == 6) & (customer['C_COMMENT'] == 'l')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] <= 294704.41524760524) | (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'].str.startswith('w')) & (orders['TOTALPRICE'] <= 91731.0919858216)].merge(customer[(customer['C_CUSTKEY'] > 39) | (customer['C_PHONE'] == '3') & (customer['C_PHONE'] == '13-') | (customer['C_NATIONKEY'] == 4) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'P')][['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'].str.startswith('q')) & (orders['TOTALPRICE'] <= 166014.07779133707) | (orders['O_CUSTKEY'] != 126661) | (orders['TOTALPRICE'] > 200834.51713126164) | (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] > 199044.6502298662) | (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] <= 14)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_COMMENT'] == 'egu') | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1998-07-21')][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['O_ORDERKEY'] != 638) | (orders['O_COMMENT'].str.startswith('u')) | (orders['TOTALPRICE'] <= 250141.73652198218)][['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_NATIONKEY'] > 1) | (customer['C_NATIONKEY'] >= 15)].merge(nation[(nation['N_COMMENT'] != 'h')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'b') | (orders['TOTALPRICE'] <= 42888.968115965596) | (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] > 108377) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERPRIORITY'] == '3-MEDIUM')][['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 125530) & (orders['O_COMMENT'] != 't') & (orders['O_ORDERKEY'] != 17) | (orders['O_COMMENT'].str.startswith('j')) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_ORDERKEY'] >= 682)].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 80283) & (orders['ORDERSTATUS'] == 'O')].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] == 19) & (nation['N_COMMENT'] == 'i')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 140589) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['O_ORDERKEY'] == 406)][['O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_NAME'] != 'G') | (nation['N_NAME'] != 'I')].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 325) & (orders['O_CUSTKEY'] > 32268) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] <= 17948.6875214092)][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] < 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 188142.88720928528) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERDATE'] > '1998-07-21')][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] < 7) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] == 8) | (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 39830.32485222931) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_CUSTKEY'] == 28162) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] > 25) | (orders['O_CUSTKEY'] > 134776) & (orders['O_CUSTKEY'] > 66408)][['O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'] == 'E') & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NATIONKEY'] > 10)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 14) | (nation['N_NAME'] != 'C')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_ACCTBAL'] == 2647.213398960215) | (customer['C_COMMENT'] == 't') & (customer['C_NATIONKEY'] == 0) | (customer['C_ADDRESS'] != 'P') & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('y'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] <= 9344.07538186173) & (customer['C_ADDRESS'] == 'l') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] >= 2949.5274009362847) & (customer['C_ADDRESS'] != 'Y') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('a'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'u') | (supplier['S_COMMENT'] == 'c') & (supplier['S_SUPPKEY'] < 85) & (supplier['S_ADDRESS'].str.startswith('p')) & (supplier['S_ADDRESS'] == 'd') | (supplier['S_NATIONKEY'] >= 16) | (supplier['S_ACCTBAL'] <= 8053.248563926311)][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 1627) & (partsupp['PS_SUPPKEY'] != 6356)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] <= 4746.21818902724) & (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] >= 20) | (supplier['S_NATIONKEY'] >= 4) & (supplier['S_PHONE'] != '14-')].merge(nation.merge(region[(region['R_NAME'] != 'E') & (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 6786) & (partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['PS_PARTKEY'] < 7) & (partsupp['SUPPLYCOST'] != 847.618590777879)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('b')) | (part['TYPE'] == 'L') | (part['SIZE'] > 9) & (part['RETAILPRICE'] < 967.79809799544) & (part['P_NAME'] == 'g') | (part['CONTAINER'] != 'SM') & (part['CONTAINER'] == 'MED')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'p') | (partsupp['PS_SUPPKEY'] >= 1912) | (partsupp['PS_PARTKEY'] > 39)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] < 12) & (part['RETAILPRICE'] > 1035.9580019564728) & (part['BRAND'].isin(['Brand#42', 'Brand#15'])) | (part['P_NAME'] == 'i') | (part['SIZE'] == 32) | (part['TYPE'].str.startswith('STA')) & (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] <= 7)][['P_NAME', 'MFGR', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'x') & (partsupp['PS_PARTKEY'] <= 33) & (partsupp['SUPPLYCOST'] > 899.5820718116105) | (partsupp['SUPPLYCOST'] < 224.20741420586074) & (partsupp['PS_PARTKEY'] == 40)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['MFGR'] == 'Manufacturer#5') | (part['TYPE'] != 'E') & (part['BRAND'].isin(['Brand#43', 'Brand#14', 'Brand#52', 'Brand#11', 'Brand#13', 'Brand#51', 'Brand#53', 'Brand#54', 'Brand#25', 'Brand#21', 'Brand#12', 'Brand#24', 'Brand#33', 'Brand#41', 'Brand#42', 'Brand#32', 'Brand#44'])) & (part['BRAND'].isin(['Brand#35', 'Brand#25', 'Brand#42', 'Brand#51', 'Brand#52'])) | (part['TYPE'] != 'SMA') & (part['P_NAME'] != 'l')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'MFGR', 'RETAILPRICE', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 346.9236791468504) & (partsupp['AVAILQTY'] < 1457) & (partsupp['SUPPLYCOST'] == 380.74959774351396) & (partsupp['PS_PARTKEY'] <= 28)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'w') & (part['RETAILPRICE'] > 979.7180252611136) & (part['SIZE'] > 10) | (part['CONTAINER'] != 'JUMBO') & (part['TYPE'].str.startswith('P')) | (part['RETAILPRICE'] < 1028.1789991953951) & (part['SIZE'] > 43) & (part['RETAILPRICE'] < 996.045973775092) | (part['TYPE'] == 'P')][['PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'j') & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != ',') & (customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'f') & (customer['C_NATIONKEY'] == 1) | (customer['C_PHONE'].str.startswith('13-'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('w')) | (customer['C_COMMENT'] != 'y') | (customer['C_CUSTKEY'] < 26) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] > 23) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] < 1)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE', 'C_COMMENT', 'C_NAME', 'MKTSEGMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '3') | (supplier['S_NATIONKEY'] != 17) | (supplier['S_PHONE'].str.startswith('32-'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['QUANTITY'] > 4) & (lineitem['TAX'] > 0.05683668837204223) | (lineitem['L_COMMENT'] != 'h') | (lineitem['TAX'] <= 0.07414577576205789) & (lineitem['COMMITDATE'] == '1998-10-16')][['SHIPDATE', 'L_PARTKEY', 'L_COMMENT', 'SHIPMODE', 'QUANTITY', 'DISCOUNT', 'RETURNFLAG', 'COMMITDATE', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 6169) & (partsupp['PS_PARTKEY'] == 46)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 15) & (part['PT_COMMENT'] == 'b')][['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] == 0.05807515590885407) & (lineitem['L_SUPPKEY'] != 7598) | (lineitem['L_COMMENT'] == 'u') | (lineitem['LINENUMBER'] >= 6) & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RECEIPTDATE'] != '1998-11-06')][['L_COMMENT', 'L_PARTKEY', 'QUANTITY', 'TAX', 'RETURNFLAG', 'LINENUMBER']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] > 37) | (part['BRAND'] == 'Brand#53') | (part['BRAND'] != 'Brand#31') | (part['TYPE'].str.startswith('STA'))][['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] != 3820)][['SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY', 'RECEIPTDATE', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'TAX']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] < 1065.5218747539952) | (part['PT_COMMENT'].str.startswith('f'))][['PT_COMMENT', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] == 'N') & (lineitem['EXTENDEDPRICE'] != 14409.87626232788) & (lineitem['EXTENDEDPRICE'] < 75257.56796736723) & (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['L_ORDERKEY'] != 36) & (lineitem['LINENUMBER'] < 3)][['SHIPMODE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'TAX', 'L_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] == 680.3574688711977) & (partsupp['PS_PARTKEY'] > 17) | (partsupp['PS_PARTKEY'] != 39) & (partsupp['P_COMMENT'] == 'f') & (partsupp['PS_PARTKEY'] < 23)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'P') | (part['CONTAINER'] != 'MED') & (part['TYPE'].str.startswith('E')) & (part['TYPE'].str.startswith('S'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['EXTENDEDPRICE'] != 40420.962261905326) & (lineitem['QUANTITY'] <= 27) | (lineitem['L_PARTKEY'] >= 130844) & (lineitem['TAX'] < 0.05557901763297418) & (lineitem['L_PARTKEY'] == 16950) & (lineitem['DISCOUNT'] < 0.03242267742577256)].merge(partsupp[(partsupp['AVAILQTY'] == 531) | (partsupp['P_COMMENT'] == 'ly ')][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'L_PARTKEY', 'LINENUMBER', 'COMMITDATE', 'RECEIPTDATE', 'QUANTITY', 'LINESTATUS', 'L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_ORDERKEY']].merge(orders[['ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'QUANTITY', 'L_SUPPKEY', 'L_ORDERKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 6941) | (partsupp['PS_PARTKEY'] != 2) & (partsupp['PS_PARTKEY'] == 36) | (partsupp['PS_PARTKEY'] > 7) & (partsupp['SUPPLYCOST'] < 953.673702042778)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] <= 992.9329330396764) | (part['RETAILPRICE'] != 942.5340819048565) | (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'].isin(['Brand#52', 'Brand#22', 'Brand#25', 'Brand#21', 'Brand#15', 'Brand#34', 'Brand#54', 'Brand#23', 'Brand#43', 'Brand#31', 'Brand#13', 'Brand#35', 'Brand#42', 'Brand#41', 'Brand#51', 'Brand#24', 'Brand#14', 'Brand#44', 'Brand#45', 'Brand#12', 'Brand#53'])) & (part['P_NAME'].str.startswith('b')) | (part['PT_COMMENT'].str.startswith('!')) & (part['SIZE'] <= 22) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4'])) & (part['CONTAINER'] != 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

lineitem[['SHIPMODE', 'L_ORDERKEY', 'QUANTITY', 'SHIPDATE', 'L_COMMENT', 'RECEIPTDATE']].merge(orders[(orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'] == 'z') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_COMMENT'] == 'q') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] == 148) & (orders['TOTALPRICE'] > 103464.72925621948)].merge(customer[(customer['C_NATIONKEY'] > 21)][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['TOTALPRICE'] == 295692.20506932423) & (orders['O_COMMENT'] == 'c') & (orders['ORDERSTATUS'] == 'O') | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] <= 63058.15277582689) | (orders['TOTALPRICE'] <= 87500.73363017039) & (orders['ORDERDATE'] >= '1998-07-21')][['ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] == 't') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NATIONKEY'] < 6) & (nation['N_COMMENT'].str.startswith('r'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 144792) | (orders['SHIPPRIORITY'] == 0)].merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 138503) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] >= 103822) & (orders['O_CUSTKEY'] < 130885) & (orders['O_COMMENT'] == 'f')][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 277) & (orders['O_COMMENT'] != ' re') | (orders['O_COMMENT'] == 'r') & (orders['TOTALPRICE'] >= 144331.8450623478) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'u')][['ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] < 17) | (customer['C_ADDRESS'] != 'd') & (customer['C_PHONE'] != '3') & (customer['C_CUSTKEY'] != 30)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] != 2813.979175803186) | (customer['C_ADDRESS'] == 'P') & (customer['C_COMMENT'] == 'c') | (customer['C_COMMENT'].str.startswith('i')) | (customer['C_ACCTBAL'] == 7808.751500241393) & (customer['C_ADDRESS'] == 'R')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_ADDRESS'] == 'h') | (customer['C_ACCTBAL'] < 9375.619681323717) & (customer['C_CUSTKEY'] != 23)].merge(nation[(nation['N_NAME'] == 'C')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] > 2620.590504346278) & (customer['C_ACCTBAL'] == 9917.613064868745) | (customer['C_CUSTKEY'] != 41) | (customer['C_ADDRESS'] != 'x') & (customer['C_ACCTBAL'] <= 3280.4463944461804)].merge(nation[(nation['N_NATIONKEY'] < 9)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] <= 10) | (customer['C_NATIONKEY'] <= 4) & (customer['C_ADDRESS'] != 'B') | (customer['C_ACCTBAL'] <= 5520.156184307623) | (customer['C_CUSTKEY'] != 33) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_NATIONKEY'] >= 17) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] < 3145) | (partsupp['SUPPLYCOST'] <= 686.8289000612717) | (partsupp['P_COMMENT'] == 'g')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 'k') & (supplier['S_ACCTBAL'] != 6682.151179336329) & (supplier['S_SUPPKEY'] > 13) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] > 22) | (nation['N_NATIONKEY'] != 18) & (nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 8471)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 1318) | (partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_SUPPKEY'] < 4349)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'j') | (supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_NATIONKEY'] < 10)][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 37)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] >= 6) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 12) & (partsupp['AVAILQTY'] < 5156) | (partsupp['PS_SUPPKEY'] == 4010) & (partsupp['PS_PARTKEY'] < 6) & (partsupp['P_COMMENT'] != 'e')][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 3269.140191862025) & (supplier['S_COMMENT'].str.startswith('a')) | (supplier['S_ADDRESS'] == 'K') | (supplier['S_ADDRESS'] != 'b') | (supplier['S_NATIONKEY'] < 1)].merge(nation[(nation['N_NATIONKEY'] > 3) | (nation['N_NATIONKEY'] > 15) & (nation['N_NATIONKEY'] > 3) | (nation['N_NATIONKEY'] >= 10)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 816.0020223169946)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] <= 19) & (supplier['S_SUPPKEY'] <= 192) | (supplier['S_COMMENT'] == 'c') | (supplier['S_NATIONKEY'] == 13) | (supplier['S_NATIONKEY'] <= 18)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('f')) | (customer['C_NATIONKEY'] <= 8) | (customer['C_NATIONKEY'] < 8) & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_PHONE'] != '18-')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'y') | (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'J')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) & (customer['C_NATIONKEY'] != 2) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 5589.821792262988) | (customer['C_NATIONKEY'] < 4) | (customer['MKTSEGMENT'] != 'FURNITURE')][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] == 4) | (nation['N_NAME'] == 'R')].merge(region[(region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] != 2332.741103192475) & (customer['C_NATIONKEY'] <= 12) & (customer['C_ADDRESS'].str.startswith('M')) | (customer['C_ACCTBAL'] != 1870.509218350142) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING']))][['C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NATIONKEY'] >= 7) & (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPDATE'] <= '1998-10-30')].merge(partsupp.merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 57817.34169934821) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['DISCOUNT'] >= 0.03969711393629735) & (lineitem['DISCOUNT'] != 0.08069378682679655) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['QUANTITY'] >= 16) & (lineitem['RETURNFLAG'] == 'R')][['RETURNFLAG', 'SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT', 'SHIPMODE', 'EXTENDEDPRICE', 'L_ORDERKEY']].merge(orders[(orders['CLERK'] == 'C') & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 87093.17894959652) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '2-HIGH')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 49112.181492935255) & (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['EXTENDEDPRICE'] >= 61166.888718551396) & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_COMMENT'].str.startswith('r')) | (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_ORDERKEY'] != 183)].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('X')) | (supplier['S_ACCTBAL'] == 4096.3280563240505) | (supplier['S_ADDRESS'] == 'U')][['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] == 140) | (lineitem['L_PARTKEY'] <= 100846) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['TAX'] != 0.04267597300078497) & (lineitem['DISCOUNT'] != 0.013001415698119545)][['L_PARTKEY', 'L_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 52.31522503854221) | (partsupp['AVAILQTY'] != 9883) & (partsupp['PS_PARTKEY'] == 34) | (partsupp['PS_PARTKEY'] == 36)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

lineitem[(lineitem['L_PARTKEY'] == 150249) & (lineitem['LINENUMBER'] < 3) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON'])) | (lineitem['L_ORDERKEY'] >= 61) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['L_PARTKEY'] == 86899) & (lineitem['L_SUPPKEY'] == 6056)][['L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 4458) & (partsupp['P_COMMENT'] != 'o') | (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['P_COMMENT'] == 'q')].merge(part[['SIZE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 8324) | (lineitem['LINESTATUS'] == 'F') & (lineitem['EXTENDEDPRICE'] != 23588.55949292457) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_COMMENT'] != 'k') & (lineitem['QUANTITY'] == 21) | (lineitem['L_SUPPKEY'] < 7753)].merge(orders.merge(customer[(customer['C_COMMENT'] == 'i') | (customer['C_CUSTKEY'] != 45) | (customer['C_ACCTBAL'] >= 3531.22242929406) & (customer['C_ACCTBAL'] >= 9352.73769947806) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 5708.397741950054)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_ADDRESS']).agg('count')

lineitem[(lineitem['QUANTITY'] > 10) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['L_PARTKEY', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] < 67.14128294569939) & (partsupp['PS_SUPPKEY'] <= 3714) | (partsupp['AVAILQTY'] > 9060)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02')][['L_SUPPKEY', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'LINENUMBER', 'TAX', 'RETURNFLAG', 'LINESTATUS', 'SHIPMODE']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] < 141) & (part['P_PARTKEY'] <= 12) & (part['MFGR'] != 'Manufacturer#1')][['RETAILPRICE', 'TYPE', 'BRAND', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_SUPPKEY'] == 4920)][['COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPMODE', 'L_COMMENT']].merge(orders[(orders['TOTALPRICE'] > 338686.9778268759) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'] != 'C')][['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['R', 'A']))][['EXTENDEDPRICE', 'LINESTATUS', 'LINENUMBER', 'DISCOUNT', 'RECEIPTDATE', 'L_ORDERKEY']].merge(orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_PARTKEY'] <= 48897) | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '3-MEDIUM', '5-LOW'])) | (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'k') & (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] != 'f') & (orders['O_ORDERKEY'] >= 312)].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 5) | (nation['N_NAME'] != 'B') | (nation['N_COMMENT'] == 's') | (nation['N_NAME'].str.startswith('I'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['TAX'] == 0.02060864377173604) | (lineitem['LINENUMBER'] < 1) | (lineitem['L_SUPPKEY'] != 1258) & (lineitem['QUANTITY'] >= 12)].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('n')) | (part['RETAILPRICE'] > 911.6980074058132) & (part['RETAILPRICE'] >= 1060.6481273858844) & (part['RETAILPRICE'] < 976.5085077994754) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3']))][['RETAILPRICE', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'CONTAINER', 'BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.010153510628131262) & (lineitem['LINENUMBER'] != 6) & (lineitem['L_SUPPKEY'] > 8417) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['L_COMMENT'].str.startswith('a')) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['L_PARTKEY'] > 151209) | (lineitem['L_PARTKEY'] < 178586) & (lineitem['RETURNFLAG'] != 'A')].merge(partsupp[(partsupp['PS_PARTKEY'] != 24)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != ',') | (supplier['S_NATIONKEY'] <= 12)][['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']).agg('count')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPMODE', 'RETURNFLAG', 'TAX', 'LINENUMBER', 'L_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] <= 8354) | (partsupp['PS_SUPPKEY'] <= 6788) | (partsupp['SUPPLYCOST'] < 64.54865251549667)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] == -298.61467807426993) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 18) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ADDRESS'] == 'n')][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINENUMBER', 'LINESTATUS', 'RECEIPTDATE', 'DISCOUNT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'TAX', 'SHIPMODE', 'EXTENDEDPRICE']].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['BRAND'].isin(['Brand#32', 'Brand#35', 'Brand#11', 'Brand#25', 'Brand#21', 'Brand#22'])) & (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) & (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] != 157) | (part['RETAILPRICE'] <= 936.0754994661894) | (part['BRAND'] != 'Brand#55')][['BRAND', 'CONTAINER', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] > 14) | (partsupp['SUPPLYCOST'] >= 811.7985169963774)].merge(supplier[(supplier['S_ADDRESS'] != 'd') | (supplier['S_ACCTBAL'] >= 2048.7108067894414) | (supplier['S_ACCTBAL'] > 4241.443204637517) | (supplier['S_ADDRESS'] == 'K') & (supplier['S_ADDRESS'] != 's') | (supplier['S_ACCTBAL'] == -872.252915612237) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem[['RETURNFLAG', 'L_PARTKEY', 'SHIPDATE', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] < 13) | (partsupp['PS_PARTKEY'] >= 16)].merge(supplier[(supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NATIONKEY'] < 20) | (supplier['S_SUPPKEY'] <= 61) | (supplier['S_NAME'] == 'S')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] == 'y') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_NATIONKEY'] >= 7) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'g') & (customer['C_NATIONKEY'] < 21) | (customer['C_CUSTKEY'] > 86)].merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] == 14) | (nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] > 616) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_COMMENT'] == 'u') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 4) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] > 91) & (customer['C_NATIONKEY'] > 4) | (customer['C_PHONE'] != '13-')][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) & (orders['O_CUSTKEY'] < 137172) & (orders['TOTALPRICE'] < 330097.8289026405)][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('s')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('p')) & (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'].str.startswith('e')) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'] == 'h') & (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_ACCTBAL'] <= 2955.8501503629145) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY'])) | (customer['C_ADDRESS'] != 'X')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'] == 'i')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['CLERK'] != 'C') & (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] == 'b') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] >= 118869.35626878728) & (orders['O_ORDERKEY'] != 452) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) & (orders['CLERK'] != 'C')][['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'].str.startswith(' ')) & (customer['C_NATIONKEY'] <= 9) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 3866.357431150035) & (customer['C_CUSTKEY'] != 4) & (customer['C_ADDRESS'].str.startswith('F')) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('count')

orders[(orders['O_COMMENT'].str.startswith(' ')) & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] != 'C')][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 0) & (customer['C_ACCTBAL'] > 5925.777499191473)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 4483) & (orders['O_CUSTKEY'] < 30263) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_ORDERKEY'] <= 202) | (orders['O_CUSTKEY'] <= 47545)].merge(customer[(customer['C_PHONE'].str.startswith('3')) | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] >= 22) | (customer['C_COMMENT'] != 'f') | (customer['C_CUSTKEY'] <= 81) & (customer['C_PHONE'] == '18-')][['C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 60606) | (orders['O_CUSTKEY'] != 27541) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '5-LOW'])) | (orders['O_ORDERKEY'] >= 297) & (orders['O_ORDERKEY'] >= 625) & (orders['TOTALPRICE'] != 203136.09091883973) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'].str.startswith('uri'))][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'] != 'B')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 143205) | (orders['O_COMMENT'] == '-') | (orders['O_CUSTKEY'] != 123500) & (orders['ORDERSTATUS'] != 'P') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERDATE'] <= '1992-01-13')][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] == 't')].merge(nation.merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 80993) & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERDATE'] < '1998-07-21') | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'h') | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['CLERK'] == 'C')][['ORDERDATE', 'O_CUSTKEY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] == 'd') & (customer['C_PHONE'] != '18-')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 136226.38361228842) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] > 774) | (orders['O_CUSTKEY'] <= 72112) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'].str.startswith(' '))].merge(customer[(customer['C_COMMENT'] == 'l') | (customer['C_CUSTKEY'] < 23) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] != 75) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD']))].merge(nation[(nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 129850.61586238835) | (orders['O_COMMENT'].str.startswith('g'))][['O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'] != 'u')][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] == 1)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] <= 166663.1675520967) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['CLERK'] == 'C')][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'] == 'r') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] <= 7608.626372736137)].merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] < 4) | (nation['N_REGIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] != 6) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'FURNITURE'])) & (customer['C_ACCTBAL'] > 3622.546584346276) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'l')][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_ACCTBAL'] < 433.63200787272626) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'f') & (customer['C_COMMENT'] == 'a') | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'AME') | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] == 5753) | (partsupp['PS_PARTKEY'] > 38) | (partsupp['AVAILQTY'] != 2342) & (partsupp['SUPPLYCOST'] > 541.6757082814559)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_ADDRESS'] != 'K') | (supplier['S_ACCTBAL'] == 5764.406832013344) | (supplier['S_SUPPKEY'] >= 5) & (supplier['S_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NAME'] != 'V') & (nation['N_COMMENT'] != 'a')].merge(region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 10) | (partsupp['PS_SUPPKEY'] >= 1451) & (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['P_COMMENT'] != ' ') & (partsupp['SUPPLYCOST'] == 314.36250471959994)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'V') | (supplier['S_ACCTBAL'] >= 3859.051042932627) & (supplier['S_NATIONKEY'] >= 20) & (supplier['S_ADDRESS'] != '0')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_NATIONKEY'] == 16) | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.08445103845217684) | (lineitem['L_SUPPKEY'] < 7126) | (lineitem['L_COMMENT'] != 'd') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_ORDERKEY'] != 180)].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] <= 2) | (lineitem['L_ORDERKEY'] == 37) | (lineitem['SHIPMODE'].isin(['MAIL']))][['COMMITDATE', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 4259) | (partsupp['AVAILQTY'] >= 6560) & (partsupp['PS_PARTKEY'] > 32) & (partsupp['SUPPLYCOST'] >= 198.5206614117802) | (partsupp['AVAILQTY'] == 5746)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'ly ') | (part['SIZE'] <= 12) & (part['TYPE'] == 'P') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1'])) | (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] != 158) & (part['P_PARTKEY'] < 80)][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] > 2) & (lineitem['DISCOUNT'] != 0.04707837653104755)][['L_COMMENT', 'RECEIPTDATE', 'DISCOUNT', 'SHIPMODE', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] == 7846) & (partsupp['P_COMMENT'] == 'f') | (partsupp['AVAILQTY'] < 5497) | (partsupp['PS_PARTKEY'] > 40) & (partsupp['PS_PARTKEY'] > 5)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] == 'WRAP') | (part['PT_COMMENT'].str.startswith('kag')) | (part['P_NAME'] != 'm') & (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] < 184) | (part['RETAILPRICE'] <= 992.099998995787)][['TYPE', 'P_PARTKEY', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['EXTENDEDPRICE'] < 85644.32881491154) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'REG AIR', 'FOB']))][['RECEIPTDATE', 'TAX', 'L_ORDERKEY', 'DISCOUNT', 'LINENUMBER', 'RETURNFLAG', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == 's') & (supplier['S_NATIONKEY'] == 9) | (supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] > 37) | (supplier['S_NATIONKEY'] == 18) & (supplier['S_ADDRESS'] != 'e')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 192757) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['L_PARTKEY'] <= 58177) | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_SUPPKEY'] != 1392) | (lineitem['L_COMMENT'].str.startswith('ly ')) & (lineitem['L_SUPPKEY'] != 3127) & (lineitem['SHIPDATE'] > '1992-04-27')].merge(partsupp[(partsupp['PS_PARTKEY'] == 35) | (partsupp['AVAILQTY'] == 9925) | (partsupp['AVAILQTY'] <= 6542) | (partsupp['SUPPLYCOST'] > 864.9800762441392) | (partsupp['SUPPLYCOST'] >= 466.207644174556)].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 3210)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 34) | (partsupp['PS_PARTKEY'] < 15) & (partsupp['AVAILQTY'] <= 6859) & (partsupp['P_COMMENT'] == 'e')][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 16) | (nation['N_NATIONKEY'] == 13) & (nation['N_NATIONKEY'] < 13)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_PARTKEY'] >= 146097) | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) | (lineitem['SHIPDATE'] <= '1998-10-30')].merge(partsupp[(partsupp['SUPPLYCOST'] != 972.7377865995062) & (partsupp['P_COMMENT'] == 'p')].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['DISCOUNT'] < 0.013938737523568046) & (lineitem['LINENUMBER'] == 6) & (lineitem['L_ORDERKEY'] > 157) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPMODE'] != 'SHIP')][['COMMITDATE', 'RECEIPTDATE', 'DISCOUNT', 'L_SUPPKEY', 'L_PARTKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'TAX', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['L_COMMENT'].str.startswith('p')) | (lineitem['DISCOUNT'] == 0.09337973377726289) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_SUPPKEY'] == 2982)][['L_PARTKEY', 'QUANTITY', 'TAX']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 197.45642014342815) & (partsupp['P_COMMENT'] != 'x') & (partsupp['PS_SUPPKEY'] == 853) & (partsupp['PS_PARTKEY'] == 49) | (partsupp['SUPPLYCOST'] > 762.8400467873329)].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 4)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27')][['L_SUPPKEY', 'LINESTATUS', 'L_COMMENT', 'L_ORDERKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('l')) & (partsupp['AVAILQTY'] <= 4905) & (partsupp['P_COMMENT'] == ' th')][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['SIZE', 'P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE', 'TYPE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'MAIL', 'REG AIR', 'RAIL'])) | (lineitem['L_PARTKEY'] >= 2253) | (lineitem['LINENUMBER'] >= 2) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_COMMENT'].str.startswith(' re')) | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_COMMENT'] != 'i')].merge(orders.merge(customer[['C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

lineitem[['LINENUMBER', 'RETURNFLAG', 'LINESTATUS', 'QUANTITY', 'L_SUPPKEY', 'L_COMMENT', 'COMMITDATE', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5002) & (partsupp['P_COMMENT'] == 'n') | (partsupp['PS_PARTKEY'] != 30) & (partsupp['SUPPLYCOST'] <= 203.62050924550454)].merge(part[['P_PARTKEY', 'TYPE', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'LINESTATUS', 'RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY']].merge(orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_ORDERKEY'] < 678) & (orders['O_COMMENT'].str.startswith('r')) | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] <= '1992-01-13')][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('n')) & (customer['C_PHONE'] != '13-')].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] <= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'LINESTATUS', 'SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'QUANTITY', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 27) & (partsupp['PS_PARTKEY'] == 40) | (partsupp['P_COMMENT'] != '.')][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] <= 4)].merge(region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'LINESTATUS', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'QUANTITY', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 3631) & (partsupp['SUPPLYCOST'] < 679.2374921123983) | (partsupp['PS_PARTKEY'] <= 18)].merge(part[(part['PT_COMMENT'] != 'the') & (part['BRAND'] == 'Brand#25') | (part['P_PARTKEY'] > 76) & (part['CONTAINER'] == 'SM') & (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#1') & (part['SIZE'] < 8) & (part['TYPE'] == 'M') | (part['CONTAINER'] != 'JUMBO')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('count')

lineitem[['QUANTITY', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY', 'RETURNFLAG', 'LINENUMBER', 'SHIPDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 5619)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 23)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] != 118483) | (orders['SHIPPRIORITY'] >= 0)][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] < 11)].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('s')) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_CUSTKEY'] < 8776) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] > 116628) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'] != ' ')][['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 8239.833087499319) | (customer['C_NATIONKEY'] <= 9) | (customer['C_NAME'] != 'C')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 90) | (orders['O_COMMENT'] == 'n') | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 60153.19261194615) & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_CUSTKEY'] != 101932) & (orders['O_COMMENT'] == 'l') & (orders['ORDERSTATUS'].isin(['P', 'F']))][['O_CUSTKEY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 14) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'g')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] > 295348.1637053057)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] == 'I') & (nation['N_NAME'].str.startswith('G'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'E')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[['O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] != 4141.443277942376) | (customer['C_COMMENT'].str.startswith('s')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] < 7097.777170051438) & (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_NATIONKEY'] < 7) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ADDRESS'] == 'm')][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 939.2318417771822) & (partsupp['PS_SUPPKEY'] <= 3121) & (partsupp['PS_SUPPKEY'] >= 4719) & (partsupp['P_COMMENT'] != 'g') | (partsupp['SUPPLYCOST'] > 827.975995920904)].merge(supplier[(supplier['S_NATIONKEY'] != 18) & (supplier['S_COMMENT'] == 'es ') | (supplier['S_NATIONKEY'] == 1)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'I') & (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'].str.startswith('e'))].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] >= 17) & (nation['N_NAME'].str.startswith('A'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] > 1526.8982162847312) & (supplier['S_COMMENT'] == 'f') | (supplier['S_NATIONKEY'] == 4) | (supplier['S_ACCTBAL'] >= 8380.428393154909) | (supplier['S_ACCTBAL'] < 5662.846102204502) | (supplier['S_COMMENT'] == 'n') & (supplier['S_NATIONKEY'] != 22)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] < 22) & (nation['N_NATIONKEY'] < 17) & (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['O_COMMENT'].str.startswith(' re')) | (orders['O_COMMENT'].str.startswith('f')) | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] <= 9417) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 8) & (nation['N_COMMENT'] == 'l')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 782.8810538909798) & (partsupp['AVAILQTY'] >= 8392) | (partsupp['SUPPLYCOST'] == 313.5366700700587) | (partsupp['PS_PARTKEY'] <= 46)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('L')) | (supplier['S_ACCTBAL'] > 4123.883126534889) | (supplier['S_NATIONKEY'] >= 8) & (supplier['S_ACCTBAL'] == 2555.684137051023) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '3') & (supplier['S_SUPPKEY'] != 80)][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] != 'e')].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] != 67) | (supplier['S_COMMENT'] == 'u') & (supplier['S_ACCTBAL'] <= 132.65552190696053) & (supplier['S_SUPPKEY'] <= 108) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'a') | (supplier['S_NATIONKEY'] >= 5)][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] != 'V')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.006667452924129647) | (lineitem['EXTENDEDPRICE'] > 82351.11587098209) & (lineitem['L_COMMENT'] != 'l') & (lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'REG AIR', 'FOB', 'SHIP', 'TRUCK', 'AIR'])) | (lineitem['L_PARTKEY'] == 99477) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_SUPPKEY'] == 8415) & (lineitem['L_PARTKEY'] > 95955) | (lineitem['DISCOUNT'] < 0.0985201583485964) & (lineitem['EXTENDEDPRICE'] > 44107.225939865646)][['LINENUMBER', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'QUANTITY', 'L_ORDERKEY']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['TYPE'] != 'STA') | (part['P_PARTKEY'] == 50) | (part['CONTAINER'].str.startswith('JUMBO'))][['SIZE', 'CONTAINER', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.04596876675583992) | (lineitem['EXTENDEDPRICE'] <= 38348.348071258406)][['DISCOUNT', 'L_PARTKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] == 508.2744955000936) | (partsupp['SUPPLYCOST'] == 232.55858881055136) & (partsupp['PS_SUPPKEY'] < 7072) & (partsupp['AVAILQTY'] < 7322) | (partsupp['PS_PARTKEY'] <= 39)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_COMMENT'].str.startswith('h'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.07604075525323914) & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['L_PARTKEY'] < 16000) & (lineitem['EXTENDEDPRICE'] > 65823.57377799417) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['RECEIPTDATE'] > '1998-11-06')].merge(partsupp[(partsupp['SUPPLYCOST'] != 854.2027159566409) | (partsupp['P_COMMENT'] == ';') & (partsupp['AVAILQTY'] >= 9156) | (partsupp['P_COMMENT'] != 'k')][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] < 12) | (supplier['S_NATIONKEY'] != 23) & (supplier['S_NATIONKEY'] > 1) | (supplier['S_NATIONKEY'] >= 19) & (supplier['S_PHONE'] != '26-')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('a')) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['L_SUPPKEY'] < 1883) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['QUANTITY'] <= 25) & (lineitem['SHIPMODE'].isin(['AIR', 'TRUCK', 'SHIP', 'RAIL']))].merge(partsupp[(partsupp['PS_PARTKEY'] != 22) & (partsupp['SUPPLYCOST'] > 859.765824994387)].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] == 'B') & (nation['N_COMMENT'] != 'y')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 120920) | (lineitem['QUANTITY'] != 24) | (lineitem['L_COMMENT'] == 'f') | (lineitem['L_ORDERKEY'] >= 185) & (lineitem['EXTENDEDPRICE'] < 43070.33816212324) & (lineitem['L_PARTKEY'] == 26228) & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['QUANTITY'] == 16) & (lineitem['LINENUMBER'] > 2)][['SHIPDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_COMMENT', 'RECEIPTDATE', 'RETURNFLAG']].merge(orders[(orders['TOTALPRICE'] != 214328.47982338627) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] <= 15928) | (orders['TOTALPRICE'] == 301047.23810662003) | (orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 9262.106351409673) | (customer['C_PHONE'] == '1')][['C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 165432) | (lineitem['DISCOUNT'] == 0.06671275144477) | (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'MAIL', 'REG AIR', 'FOB', 'RAIL', 'TRUCK'])) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPDATE'] >= '1998-10-30')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';'))].merge(supplier[(supplier['S_NATIONKEY'] < 12) | (supplier['S_COMMENT'] == 'b')].merge(nation[(nation['N_NATIONKEY'] <= 23) & (nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 'a')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RETURNFLAG'].isin(['A', 'N'])) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['SHIPMODE'].isin(['MAIL', 'AIR', 'REG AIR'])) | (lineitem['EXTENDEDPRICE'] <= 69941.67905135322) & (lineitem['RETURNFLAG'] != 'A')].merge(partsupp[(partsupp['SUPPLYCOST'] != 157.3571939212074) & (partsupp['PS_SUPPKEY'] >= 5500)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 17) & (part['PT_COMMENT'] == ' ') & (part['MFGR'] != 'Manufacturer#4')][['BRAND', 'P_NAME', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'SIZE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE']).agg('count')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['L_COMMENT'].str.startswith('u')) | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_PARTKEY'] >= 133077) & (lineitem['QUANTITY'] >= 19) | (lineitem['TAX'] <= 0.021507676481435797)].merge(orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] < 52157.10906382588) & (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] == 'C')][['SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] >= -763.8772322817424) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 't') | (customer['C_ADDRESS'] != 'z')][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'REG AIR', 'AIR'])) & (lineitem['TAX'] != 0.009455951781061041) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(orders[(orders['TOTALPRICE'] != 93317.06484886965) & (orders['TOTALPRICE'] < 169082.85531447805) | (orders['O_COMMENT'] != '-') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] == 516)][['O_CUSTKEY', 'O_COMMENT', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_NATIONKEY'] < 11) & (customer['C_COMMENT'] == 'i') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'FURNITURE'])) | (customer['C_NATIONKEY'] <= 6)][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[['LINENUMBER', 'RECEIPTDATE', 'QUANTITY', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'COMMITDATE', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] != 1090) & (partsupp['PS_PARTKEY'] < 15)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] == 'l') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_NAME'] != 'h') | (part['CONTAINER'] != 'JUMBO') | (part['CONTAINER'] != 'WRAP')][['BRAND', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'LINENUMBER', 'SHIPINSTRUCT', 'COMMITDATE', 'TAX', 'SHIPMODE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 26) & (partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] == 's') | (partsupp['P_COMMENT'] != 'q')][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'f') | (supplier['S_ADDRESS'].str.startswith('7')) & (supplier['S_ADDRESS'] != '5') & (supplier['S_COMMENT'] != '.') & (supplier['S_COMMENT'] == 'al ') & (supplier['S_COMMENT'] == 'c') & (supplier['S_ACCTBAL'] != 4286.6913107672335)][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] > 626) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] >= 370) | (orders['O_COMMENT'] != 'b') & (orders['O_ORDERKEY'] != 175) & (orders['TOTALPRICE'] <= 149529.10618552868) & (orders['O_CUSTKEY'] >= 90250) & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_NATIONKEY'] < 19) & (customer['C_ACCTBAL'] < -89.39822333037739) & (customer['C_ACCTBAL'] <= 1580.4744619240987) | (customer['C_COMMENT'] == 'u') & (customer['C_NATIONKEY'] < 1)][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == 'egu') & (orders['TOTALPRICE'] != 191642.70194201553) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] == ',') & (customer['C_PHONE'] == '13-') | (customer['C_ADDRESS'] == 'K')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['O_CUSTKEY'] == 70557) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] == 'y') | (orders['TOTALPRICE'] > 56733.49407494545) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 319)][['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 33389) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '2-HIGH', '1-URGENT'])) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERDATE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] == 'h')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('e')) & (customer['C_NATIONKEY'] != 3) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] != 'u') | (customer['C_COMMENT'] == '.') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 44) & (partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['SUPPLYCOST'] > 186.9035648125024) & (partsupp['P_COMMENT'] == 'p')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 14) | (supplier['S_ADDRESS'].str.startswith('T'))][['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 7947.258373941625) | (supplier['S_NATIONKEY'] > 7) & (supplier['S_COMMENT'] != 'a') & (supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('5')) & (supplier['S_ACCTBAL'] == 2621.511724594563)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] > 12) | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '17-') | (supplier['S_PHONE'] == '2') | (supplier['S_COMMENT'] == ' sl') & (supplier['S_NATIONKEY'] != 16) | (supplier['S_ADDRESS'] == '5') & (supplier['S_NATIONKEY'] >= 11)][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 7) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 938.9236380997447) & (partsupp['SUPPLYCOST'] > 692.6038688802861) & (partsupp['AVAILQTY'] < 1674) | (partsupp['P_COMMENT'] == 'g') | (partsupp['PS_SUPPKEY'] < 5563)].merge(supplier[(supplier['S_NATIONKEY'] != 21) & (supplier['S_NATIONKEY'] > 11) | (supplier['S_ACCTBAL'] != 4415.443552760907) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_SUPPKEY'] <= 6)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] != 152435) & (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['QUANTITY'] == 2) | (lineitem['L_PARTKEY'] <= 43125)][['RETURNFLAG', 'QUANTITY', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp.merge(supplier.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 5295) | (lineitem['EXTENDEDPRICE'] <= 18752.083113063323) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['EXTENDEDPRICE'] < 74245.99255536095) & (lineitem['TAX'] <= 0.020114481943322417) | (lineitem['QUANTITY'] == 22) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['DISCOUNT'] < 0.09220565044739376) & (lineitem['L_SUPPKEY'] < 8442)][['QUANTITY', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY', 'LINENUMBER', 'SHIPDATE']].merge(partsupp.merge(part[(part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] > 156) | (part['MFGR'] == 'Manufacturer#4') & (part['PT_COMMENT'] != 'q') | (part['P_NAME'].str.startswith('t')) | (part['RETAILPRICE'] <= 920.1274523868788) | (part['BRAND'].isin(['Brand#51', 'Brand#11', 'Brand#35', 'Brand#55', 'Brand#33', 'Brand#32', 'Brand#23', 'Brand#53', 'Brand#52', 'Brand#15', 'Brand#34'])) | (part['SIZE'] > 29)][['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_ORDERKEY'] != 181) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_COMMENT'].str.startswith('g')) | (lineitem['RETURNFLAG'].isin(['A', 'R']))][['LINESTATUS', 'RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'L_COMMENT', 'TAX', 'SHIPMODE', 'L_PARTKEY']].merge(partsupp.merge(part[(part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] == 92) & (part['TYPE'] != 'M') & (part['P_PARTKEY'] >= 145)][['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('count')

lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['SHIPMODE'].isin(['MAIL', 'SHIP', 'AIR', 'REG AIR', 'FOB'])) | (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')][['LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'DISCOUNT', 'COMMITDATE']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] != 'd') & (supplier['S_ACCTBAL'] <= 1742.8545278783197) & (supplier['S_ACCTBAL'] <= 8994.7495780738) | (supplier['S_NATIONKEY'] == 3) | (supplier['S_ADDRESS'] != 'z') | (supplier['S_NATIONKEY'] <= 1)][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_COMMENT'] != 'l')][['SHIPMODE', 'DISCOUNT', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPDATE', 'L_COMMENT', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6143) | (partsupp['AVAILQTY'] >= 434) & (partsupp['PS_SUPPKEY'] == 7260)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_NATIONKEY'] >= 20) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 50)][['S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) | (lineitem['QUANTITY'] == 9)][['SHIPMODE', 'COMMITDATE', 'DISCOUNT', 'TAX', 'L_COMMENT', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 354.78629010406024) | (partsupp['PS_PARTKEY'] > 49) & (partsupp['PS_SUPPKEY'] == 1203)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 39) | (supplier['S_NATIONKEY'] == 16) & (supplier['S_COMMENT'] != 'h') & (supplier['S_ADDRESS'] == 'n') & (supplier['S_ACCTBAL'] <= 9053.115746771336) | (supplier['S_PHONE'] == '3') | (supplier['S_ADDRESS'] == 'y')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['LINESTATUS'] != 'O')][['L_SUPPKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_COMMENT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'RETURNFLAG', 'LINESTATUS', 'SHIPMODE']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 8731.040307298945) | (supplier['S_COMMENT'] != 'f') & (supplier['S_PHONE'].str.startswith('3'))].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_SUPPKEY'] > 5255) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['L_COMMENT'] == 'q') | (lineitem['SHIPMODE'] == 'FOB')][['L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5965) | (partsupp['SUPPLYCOST'] < 763.8001015272231) & (partsupp['PS_SUPPKEY'] <= 6561) | (partsupp['P_COMMENT'].str.startswith('h'))][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 112) | (supplier['S_COMMENT'].str.startswith('t')) | (supplier['S_COMMENT'] == 'd') | (supplier['S_SUPPKEY'] >= 195)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RECEIPTDATE', 'L_ORDERKEY', 'QUANTITY', 'TAX', 'EXTENDEDPRICE']].merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] == 125) | (orders['O_ORDERKEY'] <= 267) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_COMMENT'].str.startswith('d')) & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] == '25-') | (customer['C_COMMENT'] == 'h') & (customer['C_NAME'] == 'C')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] != 134973.92548508622) & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] != '1-URGENT')][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_COMMENT'] != 'o') | (orders['O_COMMENT'].str.startswith('.')) & (orders['O_CUSTKEY'] != 132099) | (orders['ORDERDATE'] <= '1992-01-13')][['SHIPPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] >= 21) | (customer['C_ACCTBAL'] >= 7443.333502023381) & (customer['C_CUSTKEY'] >= 88) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD']))].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('c')) & (orders['O_COMMENT'] == 'x') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_ORDERKEY'] < 528) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 96774) | (orders['O_CUSTKEY'] == 15925) | (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] == 48243) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] != 0)][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] >= 2226.0713115968347)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 630) | (orders['O_COMMENT'].str.startswith(',')) | (orders['O_COMMENT'] != 'b')][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] <= 5751.381098754997) & (customer['C_ADDRESS'] == 'S') | (customer['C_ACCTBAL'] == 1229.5768653915616) | (customer['C_ACCTBAL'] <= 6137.168690370759) | (customer['C_CUSTKEY'] >= 56)][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] > 15) & (nation['N_NATIONKEY'] <= 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 262650.1283648412) & (orders['ORDERDATE'] != '1992-01-13')][['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] == 3222.91631830441) | (customer['C_CUSTKEY'] >= 87) & (customer['C_COMMENT'].str.startswith('n')) & (customer['C_PHONE'] == '27-')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 4830.608979526696) & (customer['C_COMMENT'].str.startswith('i'))][['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'].str.startswith('B'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] == 'w') & (supplier['S_PHONE'] == '14-') | (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_ACCTBAL'] > 6462.074654440029) | (supplier['S_NATIONKEY'] == 6) | (supplier['S_PHONE'] != '3')].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] > 21) | (nation['N_COMMENT'] != 'c') | (nation['N_NAME'] != 'J')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'C') & (supplier['S_ACCTBAL'] == 5126.343892464499) & (supplier['S_ACCTBAL'] > 3438.783807884187) & (supplier['S_ADDRESS'] == '0') & (supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'] == '3')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 2) | (nation['N_NAME'] == 'U')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 71386.5192879364) & (lineitem['QUANTITY'] < 42) | (lineitem['L_ORDERKEY'] < 60) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_SUPPKEY'] != 42) & (lineitem['L_ORDERKEY'] < 7) & (lineitem['L_ORDERKEY'] > 186) & (lineitem['DISCOUNT'] < 0.08553402807872973)][['L_COMMENT', 'EXTENDEDPRICE', 'L_PARTKEY', 'RECEIPTDATE', 'RETURNFLAG', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'COMMITDATE']].merge(partsupp.merge(part[(part['CONTAINER'] != 'MED') | (part['BRAND'] != 'Brand#35') & (part['P_NAME'] == 'w') & (part['CONTAINER'] == 'MED') & (part['P_NAME'] == 'i')][['PT_COMMENT', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] >= 1) | (lineitem['L_SUPPKEY'] == 5027) & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['L_ORDERKEY'] == 27) | (lineitem['DISCOUNT'] <= 0.06904365517577642) & (lineitem['L_SUPPKEY'] > 4569) | (lineitem['QUANTITY'] >= 34) & (lineitem['DISCOUNT'] != 0.008737897075688162)][['SHIPMODE', 'RECEIPTDATE', 'L_PARTKEY', 'L_ORDERKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'LINENUMBER']].merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('13-')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_CUSTKEY'] >= 43) | (customer['C_COMMENT'] == 't') | (customer['C_PHONE'] != '2')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['QUANTITY'] != 42) | (lineitem['TAX'] <= 0.011875830898717998) | (lineitem['DISCOUNT'] >= 0.016611470497427283) & (lineitem['L_COMMENT'].str.startswith('e')) & (lineitem['RETURNFLAG'].isin(['R', 'N'])) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['L_ORDERKEY'] == 174) | (lineitem['COMMITDATE'] > '1992-05-15')][['COMMITDATE', 'LINESTATUS', 'SHIPDATE', 'L_SUPPKEY', 'L_COMMENT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'TAX', 'DISCOUNT']].merge(partsupp[(partsupp['SUPPLYCOST'] == 443.4501370462063) | (partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_PARTKEY'] >= 20) | (partsupp['PS_SUPPKEY'] >= 3643) | (partsupp['PS_PARTKEY'] == 29)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_SUPPKEY'] != 6815) & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_COMMENT'] == 'q') & (lineitem['QUANTITY'] == 18) | (lineitem['L_ORDERKEY'] <= 175) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINENUMBER'] < 3)].merge(orders[(orders['TOTALPRICE'] <= 166672.7858443707) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] < 453) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C'))][['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('count')

lineitem[(lineitem['TAX'] <= 0.053456145942116895) & (lineitem['COMMITDATE'] != '1998-10-16')][['L_SUPPKEY', 'QUANTITY', 'SHIPDATE', 'COMMITDATE', 'DISCOUNT', 'L_PARTKEY', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 5588)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 1092.3039762545377) | (part['CONTAINER'] == 'LG') | (part['TYPE'].str.startswith('STA'))][['P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY', 'TAX', 'COMMITDATE', 'L_PARTKEY', 'RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_CUSTKEY'] < 28829)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'LINESTATUS', 'SHIPMODE', 'SHIPDATE', 'L_ORDERKEY', 'L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 163)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] == 'r')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH']))][['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 't')].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['5-LOW'])) | (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] < 315811.7079857837) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_ORDERKEY'] <= 241) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] < 114721.87800345603)][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'] == 'u') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'] == 'j') & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 4) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD']))].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_NAME'] != 'V')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ACCTBAL'] == 6141.511911489118) | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == 6631.063333914314) | (customer['C_CUSTKEY'] >= 20) & (customer['C_CUSTKEY'] > 6) | (customer['C_COMMENT'] != 'p')][['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[['O_CUSTKEY', 'CLERK', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] == 12) & (customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] == 11) | (customer['C_NATIONKEY'] < 14) & (customer['C_ACCTBAL'] == 7040.790163970401) & (customer['C_COMMENT'] == 'g') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_NAME'] == 'J')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] <= 14) | (customer['C_ADDRESS'] == 'K') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('n')) & (customer['C_COMMENT'] != 'e') | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_COMMENT'] == 'r')][['C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer[(customer['C_ADDRESS'] != 'K') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('b')) | (customer['C_ACCTBAL'] <= 7389.712772924608) | (customer['C_ACCTBAL'] < 428.14783536110167) | (customer['C_ADDRESS'].str.startswith('D')) | (customer['C_COMMENT'].str.startswith('y')) & (customer['C_PHONE'].str.startswith('2'))][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] < 0) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 6099) & (partsupp['PS_PARTKEY'] <= 20) & (partsupp['SUPPLYCOST'] == 161.324469325463) | (partsupp['AVAILQTY'] == 1393) | (partsupp['PS_PARTKEY'] == 43)][['PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 8829.195717325449) & (supplier['S_SUPPKEY'] < 41) & (supplier['S_SUPPKEY'] == 173)].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 65) & (customer['C_ADDRESS'] == '9') & (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_ADDRESS'] != 'c') | (customer['C_ACCTBAL'] >= 7010.265959127815)][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] != 23)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] < 49096) | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] >= 514) & (orders['O_ORDERKEY'] <= 39) & (orders['O_COMMENT'] != 'd')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'h') | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] == 'f') | (customer['C_COMMENT'] != 'a') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'] != ',')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] < 0.07003761716053408) & (lineitem['L_ORDERKEY'] <= 100) & (lineitem['QUANTITY'] < 36) | (lineitem['QUANTITY'] > 7)][['SHIPDATE', 'L_SUPPKEY', 'L_ORDERKEY', 'L_COMMENT', 'L_PARTKEY', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.04595644304443335) | (lineitem['EXTENDEDPRICE'] > 63190.312376056405) & (lineitem['TAX'] == 0.07399248606587094) | (lineitem['TAX'] <= 0.03491718348840312)].merge(partsupp[(partsupp['AVAILQTY'] < 5894) | (partsupp['P_COMMENT'] == 'f') & (partsupp['P_COMMENT'] == 'x') | (partsupp['P_COMMENT'].str.startswith('x'))][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] < 121) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 81) | (supplier['S_ADDRESS'] != 'm') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 9)][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] != 20)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'k') | (lineitem['L_PARTKEY'] != 119171)][['SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 447.35540919178356)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] == 1029.4750502515888) | (part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] != 'Manufacturer#3') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2'])) & (part['SIZE'] < 10) & (part['P_PARTKEY'] == 147)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'MFGR', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith(' re')) | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] >= 134) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['EXTENDEDPRICE'] >= 44368.21262632488)][['L_SUPPKEY', 'QUANTITY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'LINENUMBER', 'COMMITDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 239) | (partsupp['PS_SUPPKEY'] >= 5911) | (partsupp['SUPPLYCOST'] == 801.265647759106)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 913.0956871844444) | (part['SIZE'] == 20) & (part['P_NAME'] != 'i') & (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'] != 'STA') | (part['BRAND'] != 'Brand#51') & (part['SIZE'] >= 8)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 50) | (lineitem['L_PARTKEY'] == 107822)].merge(orders[(orders['O_CUSTKEY'] <= 95907) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'] == ',') | (orders['TOTALPRICE'] != 176247.95035578898) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 163962.4095791619)][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] < 40) & (lineitem['DISCOUNT'] == 0.07640144863457092) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN'])) | (lineitem['LINENUMBER'] >= 6) | (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['L_PARTKEY'] <= 163715)][['LINENUMBER', 'EXTENDEDPRICE', 'L_PARTKEY', 'RECEIPTDATE', 'DISCOUNT', 'L_SUPPKEY', 'SHIPMODE', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] != 365.52307119301446)].merge(supplier[(supplier['S_NATIONKEY'] >= 4) | (supplier['S_NATIONKEY'] >= 18) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 16) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'q')][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['L_PARTKEY'] != 27950) & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'TRUCK', 'RAIL', 'SHIP', 'AIR'])) & (lineitem['EXTENDEDPRICE'] >= 26718.538262619244) | (lineitem['TAX'] == 0.042096506205712966) | (lineitem['EXTENDEDPRICE'] == 59836.048049045945) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['RECEIPTDATE'] <= '1992-05-02')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('.')) & (partsupp['P_COMMENT'] != 'k') | (partsupp['AVAILQTY'] <= 9438) & (partsupp['PS_SUPPKEY'] == 65) | (partsupp['PS_SUPPKEY'] > 107)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4'])) & (part['P_NAME'].str.startswith('n')) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] == 105) & (part['MFGR'] != 'Manufacturer#3') | (part['P_NAME'].str.startswith('l')) | (part['P_NAME'] == 'm') | (part['P_PARTKEY'] >= 67)][['P_NAME', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

lineitem[['COMMITDATE', 'DISCOUNT', 'SHIPMODE', 'RETURNFLAG', 'L_ORDERKEY', 'QUANTITY', 'SHIPINSTRUCT', 'TAX', 'SHIPDATE', 'L_COMMENT']].merge(orders[(orders['TOTALPRICE'] < 77243.57017680017) | (orders['TOTALPRICE'] <= 328122.17881189607) & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_ORDERKEY'] < 287) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['CLERK'] == 'C')].merge(customer[(customer['C_CUSTKEY'] > 26) & (customer['C_ADDRESS'].str.startswith(',')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith('c')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_PHONE'] == '1') & (customer['C_ADDRESS'] == 's') & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPDATE', 'SHIPMODE', 'L_ORDERKEY', 'RETURNFLAG', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] <= 6462) | (partsupp['AVAILQTY'] > 4354)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] != 131) & (part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'] == 'v') | (part['TYPE'] == 'E') & (part['TYPE'] == 'E')][['CONTAINER', 'SIZE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('0')) | (customer['C_ACCTBAL'] >= 1558.135150445124) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('t')) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] >= 7) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] == 'E') & (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] == 'o') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 's') & (customer['C_PHONE'] != '22-') & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] == 7683.050395642764)][['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] == 'g') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] == 6) & (nation['N_NAME'] != 'A')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE']))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 0)].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] < 138) | (supplier['S_NATIONKEY'] >= 21) & (supplier['S_NATIONKEY'] != 1) & (supplier['S_PHONE'] != '2') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('o'))][['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 33600.377925728906)][['RECEIPTDATE', 'TAX', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 417.00805117751173) | (partsupp['SUPPLYCOST'] < 634.1382691310702) | (partsupp['AVAILQTY'] < 7581)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 7) & (supplier['S_COMMENT'].str.startswith('the')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 0)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['RETURNFLAG'] == 'R') & (lineitem['LINENUMBER'] >= 3) | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_ORDERKEY'] < 1)][['SHIPDATE', 'L_PARTKEY', 'L_COMMENT', 'L_ORDERKEY', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'TAX', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] != 222572.04124313357) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[(customer['C_COMMENT'] == 'i') | (customer['C_ADDRESS'].str.startswith('6'))].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] == 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 66430) & (lineitem['RETURNFLAG'] == 'A')][['COMMITDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] <= 28) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'] == 'd') | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['CLERK'] == 'C')].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 18) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] < 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 4182) & (lineitem['TAX'] > 0.01717483404357326)].merge(orders[(orders['O_ORDERKEY'] != 105) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 175) & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] == 379) & (orders['O_COMMENT'].str.startswith('h')) & (orders['CLERK'] != 'C')][['O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '22-') | (customer['C_ACCTBAL'] != 2653.4316093439907) & (customer['C_ADDRESS'].str.startswith('7')) & (customer['C_ADDRESS'].str.startswith('z')) | (customer['C_COMMENT'] == 'c')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 22) & (lineitem['L_COMMENT'] == 'lit') | (lineitem['L_ORDERKEY'] != 65) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['DISCOUNT'] == 0.08051855807242586) | (lineitem['TAX'] <= 0.04554546293914727) & (lineitem['QUANTITY'] >= 29)].merge(orders.merge(customer[(customer['C_COMMENT'] != 'i') & (customer['C_ACCTBAL'] != 1534.3837486284597) | (customer['C_COMMENT'] == 'a') & (customer['C_ACCTBAL'] == -548.0251797720064) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] < 8)][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_ORDERKEY'] >= 167) & (lineitem['L_SUPPKEY'] <= 265) & (lineitem['L_COMMENT'].str.startswith(' ca')) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['EXTENDEDPRICE'] > 2632.5447507617027) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_SUPPKEY'] > 2563) & (lineitem['TAX'] == 0.04528046242308194)].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= 2361.0559835560534) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] < 18)][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['L_COMMENT'] != 'f') | (lineitem['L_SUPPKEY'] >= 5448) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['SHIPDATE'] == '1992-04-27')][['L_SUPPKEY', 'SHIPDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'RECEIPTDATE', 'LINENUMBER']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 3)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'FOB') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_COMMENT'] != 'q') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'TAKE BACK RETURN'])) & (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'RAIL', 'MAIL', 'SHIP']))].merge(partsupp[(partsupp['AVAILQTY'] == 8002) | (partsupp['AVAILQTY'] <= 6670) | (partsupp['AVAILQTY'] < 9717) | (partsupp['PS_SUPPKEY'] < 3791) & (partsupp['SUPPLYCOST'] >= 959.426018456339)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'RETURNFLAG', 'RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'L_COMMENT', 'TAX', 'SHIPMODE', 'L_PARTKEY']].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['O_COMMENT'].str.startswith('g')) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['O_CUSTKEY'] >= 67290) & (orders['ORDERDATE'] <= '1992-01-13')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'SHIPDATE', 'LINENUMBER', 'L_SUPPKEY', 'L_COMMENT', 'RETURNFLAG', 'QUANTITY', 'SHIPMODE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'] != 'y') & (partsupp['SUPPLYCOST'] > 367.41973871878037) & (partsupp['AVAILQTY'] >= 6398) & (partsupp['SUPPLYCOST'] != 615.3857782936677) | (partsupp['PS_PARTKEY'] < 32)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RECEIPTDATE', 'COMMITDATE', 'SHIPDATE', 'LINENUMBER', 'RETURNFLAG', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPMODE', 'TAX', 'DISCOUNT']].merge(orders.merge(customer[(customer['C_ADDRESS'] != 'h') | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NATIONKEY'] > 8) | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] <= 5) & (nation['N_NAME'] != 'G')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] >= 137148)][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_PHONE'] != '1') & (customer['C_CUSTKEY'] > 73) & (customer['C_ACCTBAL'] != -460.5823387340266) | (customer['C_COMMENT'].str.startswith('h'))][['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] > 227) | (orders['O_ORDERKEY'] == 11) & (orders['O_CUSTKEY'] <= 24674) | (orders['O_COMMENT'] != 's') | (orders['O_ORDERKEY'] < 359) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '5-LOW')][['ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NATIONKEY'] != 4) | (customer['C_NATIONKEY'] < 18) | (customer['C_COMMENT'] == '.') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] != 302652.83598437253) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] == '1-URGENT')][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] > 11) | (customer['C_COMMENT'] == 'q') | (customer['C_CUSTKEY'] == 72)][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] < 21) & (nation['N_NATIONKEY'] >= 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] < 182784.13487518847) & (orders['O_CUSTKEY'] >= 67260) & (orders['O_CUSTKEY'] != 64154) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_CUSTKEY'] > 26) | (customer['C_NATIONKEY'] < 22) | (customer['C_ACCTBAL'] <= 2480.0063873344025) | (customer['C_CUSTKEY'] <= 15) | (customer['C_PHONE'] != '27-')][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] == 5) | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['C_NATIONKEY'] >= 6) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'B') | (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[(customer['C_ADDRESS'].str.startswith('d')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] == 'e') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_CUSTKEY'] >= 44)][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] != 'M')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 2970)].merge(supplier[(supplier['S_ACCTBAL'] > -80.82805585602432) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] == 2751.31193568632) & (supplier['S_SUPPKEY'] <= 141) & (supplier['S_SUPPKEY'] == 101)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'] == 'l') | (nation['N_NAME'] != 'K') | (nation['N_REGIONKEY'] > 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

lineitem[(lineitem['DISCOUNT'] > 0.04979722501821365) & (lineitem['QUANTITY'] >= 41) & (lineitem['L_COMMENT'].str.startswith('f')) | (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['EXTENDEDPRICE'] < 28184.392275739385) & (lineitem['EXTENDEDPRICE'] <= 15994.392876022228) & (lineitem['EXTENDEDPRICE'] == 28517.611931630057) & (lineitem['RETURNFLAG'] == 'R')][['L_COMMENT', 'RETURNFLAG', 'SHIPMODE', 'LINENUMBER', 'DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE', 'QUANTITY']].merge(partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 8749.398480053054) | (supplier['S_ACCTBAL'] <= 6768.773374503755) & (supplier['S_PHONE'] == '1') & (supplier['S_ACCTBAL'] != 1339.4409254880768) & (supplier['S_SUPPKEY'] != 29)].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] == 'i') & (nation['N_NATIONKEY'] == 15) | (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['QUANTITY'] < 21)][['TAX', 'SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 5) & (nation['N_COMMENT'] != 'r')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINENUMBER'] >= 3) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['LINENUMBER'] == 4) & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_PARTKEY'] < 181040) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['EXTENDEDPRICE'] == 59356.48464416109)][['LINENUMBER', 'SHIPDATE', 'SHIPMODE', 'DISCOUNT', 'L_ORDERKEY', 'COMMITDATE', 'RECEIPTDATE']].merge(orders[(orders['O_ORDERKEY'] != 641) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['TOTALPRICE'] <= 232866.72432207988) & (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'].str.startswith('n'))][['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 7826) & (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['LINENUMBER'] != 2) & (lineitem['EXTENDEDPRICE'] != 69445.53741199573)].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 9163.595432391994) | (supplier['S_SUPPKEY'] < 23)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] != 44) & (lineitem['QUANTITY'] > 34) | (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['COMMITDATE'] < '1992-05-15')][['LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'COMMITDATE', 'RECEIPTDATE', 'SHIPDATE']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'REG AIR', 'RAIL'])) | (lineitem['SHIPMODE'].isin(['TRUCK', 'RAIL', 'MAIL', 'FOB', 'AIR'])) & (lineitem['LINENUMBER'] > 1) & (lineitem['L_SUPPKEY'] <= 9729) | (lineitem['RECEIPTDATE'] != '1992-05-02')][['COMMITDATE', 'TAX', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT', 'EXTENDEDPRICE', 'QUANTITY', 'L_ORDERKEY', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 892.5910277081248) | (partsupp['AVAILQTY'] > 4185) | (partsupp['P_COMMENT'] == '.') | (partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['P_COMMENT'] != 'n')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('count')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'LINENUMBER', 'RETURNFLAG', 'QUANTITY', 'SHIPDATE', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'] == 'g') | (partsupp['PS_SUPPKEY'] <= 6934)].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPMODE', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT', 'QUANTITY', 'TAX', 'LINESTATUS', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 16) | (customer['C_NATIONKEY'] <= 20) & (customer['C_ACCTBAL'] != 1928.4855183481222)][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 6304) | (partsupp['SUPPLYCOST'] != 183.92209458953837) & (partsupp['PS_SUPPKEY'] > 1028) | (partsupp['SUPPLYCOST'] > 521.8767901706809)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 20) | (supplier['S_ADDRESS'] == 'W') | (supplier['S_NATIONKEY'] <= 18) | (supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] != 4) & (supplier['S_ACCTBAL'] >= 6115.711588465148)][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 22043.22954295111) & (lineitem['DISCOUNT'] < 0.054231611419064955) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['QUANTITY'] > 20)][['L_ORDERKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPMODE']].merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 826.4129273722799) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < 7725.1931486874055) | (customer['C_ACCTBAL'] <= 9904.704941493554) & (customer['C_ACCTBAL'] <= 450.0766167114848) & (customer['C_COMMENT'] == 'd') | (customer['C_NATIONKEY'] != 10)][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'a')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != '-') | (lineitem['L_COMMENT'].str.startswith('g')) & (lineitem['L_PARTKEY'] == 171487) & (lineitem['SHIPMODE'].isin(['RAIL'])) | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_ORDERKEY'] == 134) | (lineitem['DISCOUNT'] == 0.08978817534755082)][['L_SUPPKEY', 'SHIPMODE', 'L_PARTKEY', 'COMMITDATE', 'TAX', 'RECEIPTDATE']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 24) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] <= 19) & (supplier['S_ADDRESS'].str.startswith('a')) & (supplier['S_SUPPKEY'] < 23)].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 148529) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'MAIL', 'REG AIR', 'AIR', 'RAIL', 'FOB'])) & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['L_ORDERKEY'] <= 146)][['QUANTITY', 'L_ORDERKEY', 'TAX', 'L_PARTKEY', 'SHIPMODE', 'L_COMMENT']].merge(orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW', '3-MEDIUM'])) & (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] != 337469.58621307847) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] <= 93802)][['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 9392) | (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['TAX'] >= 0.020653705668085304) & (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['L_SUPPKEY'] != 9045)].merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != ' re') & (orders['TOTALPRICE'] > 166825.53696038012) | (orders['O_COMMENT'] != 'k') & (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_CUSTKEY'] >= 41) | (customer['C_NATIONKEY'] < 2) & (customer['C_ADDRESS'] == 'R') | (customer['C_ADDRESS'].str.startswith(','))].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] >= 14) | (nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPMODE'] != 'AIR')].merge(orders[['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_PHONE'] == '3')][['C_NAME', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 4) | (nation['N_NAME'].str.startswith('F')) & (nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'c')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 147719) | (orders['TOTALPRICE'] <= 88298.67307348906) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] > 202844.28449508752) & (orders['SHIPPRIORITY'] == 0)][['ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '2') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] > 67) & (customer['C_ADDRESS'] == 'L') | (customer['C_COMMENT'] == 'n') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING', 'MACHINERY']))].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('ASI'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

orders[(orders['O_ORDERKEY'] >= 199) | (orders['TOTALPRICE'] != 140275.85784731616) & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] < 268207.63328891835) | (orders['CLERK'] != 'C')][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['L_PARTKEY'] >= 8547) & (lineitem['LINENUMBER'] != 3) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_PARTKEY'] != 131776) | (lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPMODE'] != 'FOB') | (lineitem['DISCOUNT'] > 0.008324635759370036)][['COMMITDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'EXTENDEDPRICE', 'QUANTITY', 'TAX', 'LINENUMBER', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3546) | (partsupp['SUPPLYCOST'] != 119.92861286920237)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 2526.289188711412) & (supplier['S_ACCTBAL'] > 18.17573893926226)][['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.06315859081466463) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['TAX'] >= 0.051147431870446756)][['LINESTATUS', 'L_SUPPKEY', 'SHIPDATE', 'COMMITDATE', 'L_ORDERKEY', 'SHIPMODE', 'LINENUMBER', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders.merge(customer[(customer['C_CUSTKEY'] == 65) | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '18-') & (customer['C_COMMENT'] != ' ')][['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['DISCOUNT', 'L_PARTKEY', 'L_SUPPKEY', 'EXTENDEDPRICE', 'TAX', 'RETURNFLAG', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] == 321.30172725624607) & (partsupp['AVAILQTY'] > 7916) | (partsupp['SUPPLYCOST'] != 979.048519827533) & (partsupp['PS_SUPPKEY'] != 4991)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_ADDRESS'] == '0') & (supplier['S_NATIONKEY'] < 12) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 7) & (supplier['S_ADDRESS'] != 't') | (supplier['S_SUPPKEY'] >= 31)][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

lineitem[['SHIPMODE', 'SHIPDATE', 'TAX', 'L_SUPPKEY', 'L_ORDERKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG', 'L_COMMENT', 'LINENUMBER']].merge(orders[(orders['O_COMMENT'].str.startswith('.')) & (orders['O_ORDERKEY'] == 545)][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'] == 'P') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'BUILDING']))].merge(nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('a')) & (orders['O_ORDERKEY'] == 507) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == ' ') & (orders['O_ORDERKEY'] <= 484)][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] > 48) | (customer['C_NATIONKEY'] >= 13) | (customer['C_PHONE'].str.startswith('22-'))][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'].isin(['F'])) | (orders['CLERK'] != 'C') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 258983.68545485806) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NATIONKEY'] != 13)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 120104.45339365571) & (orders['ORDERPRIORITY'].isin(['5-LOW'])) | (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == 'z') & (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERSTATUS'] == 'O') & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] < '1998-07-21')][['O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NATIONKEY'] >= 12) & (customer['C_COMMENT'].str.startswith('u'))][['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] >= 58068.80884412399) & (lineitem['LINENUMBER'] > 2) & (lineitem['L_ORDERKEY'] == 171) | (lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'REG AIR']))][['SHIPMODE', 'TAX', 'RETURNFLAG', 'SHIPDATE', 'QUANTITY', 'L_PARTKEY', 'LINESTATUS']].merge(partsupp[(partsupp['PS_PARTKEY'] < 31) | (partsupp['P_COMMENT'].str.startswith('g')) | (partsupp['PS_PARTKEY'] >= 30) | (partsupp['AVAILQTY'] <= 1101)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('c')) & (part['P_PARTKEY'] <= 15) | (part['TYPE'] == 'M') & (part['TYPE'] != 'SMA') & (part['CONTAINER'] == 'JUMBO') & (part['TYPE'] != 'P') & (part['TYPE'] == 'P')][['SIZE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('count')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['LINESTATUS'] == 'F') | (lineitem['L_ORDERKEY'] == 130) & (lineitem['L_COMMENT'] != 'lit') | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_ORDERKEY'] <= 8) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] < 22) | (lineitem['L_ORDERKEY'] <= 105)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] >= 61) | (supplier['S_NATIONKEY'] < 4) & (supplier['S_ACCTBAL'] != 6364.973067432058) | (supplier['S_PHONE'] == '2') | (supplier['S_ACCTBAL'] <= -176.7016159293388) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('u')) & (orders['ORDERDATE'] > '1992-01-13') & (orders['TOTALPRICE'] >= 197004.2742909876) | (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] != 38777.47733894246) & (orders['TOTALPRICE'] != 247359.97349119862)][['CLERK', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] <= 2413.9284109108603) & (customer['C_CUSTKEY'] <= 19) | (customer['C_ACCTBAL'] > 5175.853219609403) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_NATIONKEY'] != 14) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] == 'n')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'RAIL', 'MAIL', 'SHIP'])) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['LINENUMBER'] >= 3) & (lineitem['TAX'] > 0.029520070780773854) | (lineitem['QUANTITY'] <= 31) & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(orders[(orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH', '5-LOW'])) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] <= 585) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] >= 7) | (customer['C_CUSTKEY'] < 40) & (customer['C_ACCTBAL'] < 3141.977985007816) | (customer['C_ACCTBAL'] != 1372.0050464569586) & (customer['C_ACCTBAL'] == 2015.1888443490302) & (customer['C_COMMENT'] == ',') & (customer['C_COMMENT'] != 'k')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['LINESTATUS'] != 'O') & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['EXTENDEDPRICE'] == 85659.31018477572) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['LINESTATUS'].isin(['O']))][['L_PARTKEY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPDATE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 23) & (supplier['S_COMMENT'] == 'c') | (supplier['S_NAME'] == 'S')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 7)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 3) | (lineitem['DISCOUNT'] != 0.027305486879231324) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['EXTENDEDPRICE'] >= 86189.94093189987) | (lineitem['RETURNFLAG'].isin(['A']))][['SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPMODE', 'EXTENDEDPRICE', 'RETURNFLAG', 'COMMITDATE']].merge(orders[(orders['O_CUSTKEY'] < 113531) | (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'P')][['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']].merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 85548) | (lineitem['QUANTITY'] == 10) | (lineitem['QUANTITY'] < 4) & (lineitem['L_COMMENT'] == 'lit') & (lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['QUANTITY'] != 27) | (lineitem['L_PARTKEY'] != 193939) | (lineitem['SHIPDATE'] == '1992-04-27')][['SHIPMODE', 'L_ORDERKEY', 'LINENUMBER']].merge(orders[(orders['O_ORDERKEY'] <= 748) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] > 340) | (orders['O_COMMENT'].str.startswith('the'))].merge(customer[(customer['C_ACCTBAL'] == 2929.6790809656395) | (customer['C_NAME'] == 'C')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'o') & (nation['N_NAME'].str.startswith('C'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'] == 'o')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['LINENUMBER'] <= 5) & (lineitem['LINENUMBER'] == 1) | (lineitem['L_SUPPKEY'] > 2953)].merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] >= 9734.752817358923) & (customer['C_COMMENT'] == 'i') & (customer['C_CUSTKEY'] > 81) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-')][['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 16)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'AIR', 'TRUCK', 'RAIL', 'MAIL'])) | (lineitem['L_PARTKEY'] > 72211) & (lineitem['LINENUMBER'] > 3) & (lineitem['DISCOUNT'] < 0.09717473238683137) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_ORDERKEY'] != 64) & (lineitem['RETURNFLAG'] == 'N')].merge(orders[(orders['TOTALPRICE'] == 17327.36877454359) | (orders['O_CUSTKEY'] < 148443)].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_COMMENT'] == 'h')][['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_NAME'].str.startswith('J'))].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'TAX', 'L_PARTKEY', 'LINESTATUS', 'SHIPINSTRUCT', 'SHIPDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 1769) | (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['SUPPLYCOST'] != 770.817494920937) | (partsupp['PS_PARTKEY'] == 13) & (partsupp['AVAILQTY'] == 5845)].merge(supplier[(supplier['S_ADDRESS'] == 'L') | (supplier['S_PHONE'] != '2') & (supplier['S_NATIONKEY'] < 10) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 73) & (supplier['S_COMMENT'] != 'bli')][['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] < 16) | (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE', 'LINESTATUS', 'L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT']].merge(orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '3-MEDIUM'])) | (orders['O_ORDERKEY'] != 288) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW'])) & (orders['O_ORDERKEY'] <= 296) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 244043.57257293028)].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_CUSTKEY'] == 75)].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'] != 'F') & (nation['N_COMMENT'].str.startswith('u'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_COMMENT'] != 'y') | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_ORDERKEY'] > 2) & (lineitem['LINENUMBER'] >= 1) & (lineitem['COMMITDATE'] > '1992-05-15')].merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] == 10583) | (orders['O_CUSTKEY'] == 27231) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['O_ORDERKEY'] == 795)].merge(customer[(customer['C_ACCTBAL'] > 2664.702854443511) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('w'))].merge(nation[(nation['N_NATIONKEY'] > 17) | (nation['N_COMMENT'] == ' ') | (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] < 316120.7963701619) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERDATE'] > '1998-07-21')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('o')) | (customer['C_PHONE'] == '13-') & (customer['C_PHONE'].str.startswith('3')) & (customer['C_CUSTKEY'] == 58) & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] < 134.85573632526916) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_PHONE'].str.startswith('2'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'v')].merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 330847.16201442335) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_ORDERKEY'] >= 248) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_CUSTKEY'] <= 30524) | (orders['TOTALPRICE'] != 280785.4741120209) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['TOTALPRICE'] == 327108.78228926484)][['O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem[(lineitem['DISCOUNT'] >= 0.042704638070749604) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_SUPPKEY'] <= 2668) | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['EXTENDEDPRICE'] <= 20881.24432929337) | (lineitem['QUANTITY'] > 32) & (lineitem['L_COMMENT'].str.startswith('o')) | (lineitem['DISCOUNT'] != 0.06995753616600846) | (lineitem['COMMITDATE'] != '1992-05-15')][['RECEIPTDATE', 'COMMITDATE', 'DISCOUNT', 'TAX', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINESTATUS', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 1345) & (partsupp['AVAILQTY'] > 7578) | (partsupp['AVAILQTY'] > 8000) | (partsupp['SUPPLYCOST'] >= 909.6766350178219)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] == 40) & (part['SIZE'] >= 25) | (part['PT_COMMENT'] == 'e') & (part['RETAILPRICE'] < 1066.8602939069897) & (part['TYPE'] == 'M') & (part['SIZE'] >= 8)][['SIZE', 'P_NAME', 'CONTAINER', 'TYPE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['TOTALPRICE'] <= 15704.674779427512) & (orders['O_ORDERKEY'] < 371) | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '4-NOT SPECIFIED']))][['O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] > 77) | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 11) | (customer['C_PHONE'] == '2') | (customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] != 65)][['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'] == 'p')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13')][['TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] == 21) & (customer['C_CUSTKEY'] > 68) | (customer['C_ACCTBAL'] == 8582.38288871949) & (customer['C_CUSTKEY'] != 69) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ADDRESS'] != 'c') | (customer['C_CUSTKEY'] <= 82)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] != 309879.0233460453) & (orders['O_CUSTKEY'] != 98797) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['ORDERSTATUS'] != 'P')][['O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] >= 13) | (nation['N_NATIONKEY'] != 12)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.05547938203709573) | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['TAX'] >= 0.01919908444480553) & (lineitem['TAX'] >= 0.011929383047806868) | (lineitem['QUANTITY'] < 5) | (lineitem['QUANTITY'] == 25)][['SHIPINSTRUCT', 'RECEIPTDATE', 'L_PARTKEY', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 1) & (nation['N_NAME'] == 'I') | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'C')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['ORDERDATE'] != '1998-07-21') | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] >= 6707) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_CUSTKEY'] <= 113743)][['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_NATIONKEY'] <= 22) | (customer['C_CUSTKEY'] == 44) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'].str.startswith('27-')) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['TAX'] <= 0.05595484218547445) | (lineitem['LINENUMBER'] >= 2) | (lineitem['QUANTITY'] != 8) | (lineitem['LINENUMBER'] < 6) & (lineitem['EXTENDEDPRICE'] < 29551.90693190863) | (lineitem['RECEIPTDATE'] != '1998-11-06')][['COMMITDATE', 'LINESTATUS', 'DISCOUNT', 'RECEIPTDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPDATE', 'L_COMMENT']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 41) | (partsupp['AVAILQTY'] > 5816) | (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['P_COMMENT'] == 's')][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('J')) & (supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] >= 17) & (supplier['S_NATIONKEY'] >= 9)].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NAME'] == 'U') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'] == 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A')][['LINENUMBER', 'EXTENDEDPRICE', 'L_PARTKEY', 'RECEIPTDATE', 'RETURNFLAG', 'LINESTATUS', 'TAX', 'SHIPINSTRUCT', 'L_ORDERKEY', 'COMMITDATE']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] <= 32) & (part['TYPE'].str.startswith('STA')) & (part['P_PARTKEY'] <= 1) & (part['RETAILPRICE'] >= 984.8091990391645) & (part['P_NAME'] != 't') & (part['PT_COMMENT'] != 'h') | (part['P_NAME'] == 'h') & (part['P_NAME'] != 'p')][['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE', 'TYPE', 'SIZE', 'MFGR', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'] == 'q') & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'O') & (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'CLERK']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 17) | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] == 13)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] <= 6855.559938552982) | (lineitem['LINENUMBER'] != 5) | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['EXTENDEDPRICE'] > 53939.4117754169) & (lineitem['RECEIPTDATE'] < '1992-05-02')][['SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'QUANTITY']].merge(orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['O_COMMENT'] == 'u') | (orders['O_CUSTKEY'] == 9484) | (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == 'r') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C')][['O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] != 399.12673257209826) & (customer['C_ADDRESS'] == 'z') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'o') | (customer['C_ACCTBAL'] > -825.0610335135677) & (customer['C_CUSTKEY'] >= 97) | (customer['C_ACCTBAL'] > -875.5868448859129)][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'SHIPMODE', 'LINENUMBER']].merge(orders[(orders['TOTALPRICE'] >= 48237.359114004124) & (orders['O_CUSTKEY'] >= 101748) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'O') & (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] != 51074)][['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] <= 2) & (customer['C_ADDRESS'].str.startswith('I')) & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 720.2608275603097) & (customer['C_CUSTKEY'] != 13) | (customer['C_PHONE'] == '2')].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] == 18) & (nation['N_NATIONKEY'] >= 3)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'].str.startswith('h')) & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] > 0)][['ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_ADDRESS'] != 'a') | (customer['C_CUSTKEY'] > 36) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] != 5) & (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] > 40) | (customer['C_ACCTBAL'] <= 467.5730714474644) & (customer['C_COMMENT'] == 'a')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['TAX'] > 0.004474797807759882) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'] == 'AIR') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RETURNFLAG'] != 'R')][['COMMITDATE', 'LINESTATUS', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPMODE', 'SHIPINSTRUCT', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['L_COMMENT'] != 'y') | (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_SUPPKEY'] <= 2319)][['SHIPMODE', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'L_COMMENT', 'QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 77) & (partsupp['PS_SUPPKEY'] == 7368) & (partsupp['PS_SUPPKEY'] == 5751) | (partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['PS_SUPPKEY'] < 6151)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'N'])) & (lineitem['LINENUMBER'] >= 3) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['LINENUMBER'] <= 1) | (lineitem['L_PARTKEY'] != 52464) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINESTATUS'] != 'F') | (lineitem['QUANTITY'] == 10)][['L_ORDERKEY', 'SHIPMODE', 'SHIPINSTRUCT']].merge(orders[(orders['TOTALPRICE'] >= 36934.876405383104) & (orders['O_ORDERKEY'] == 454)][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] != 1) | (customer['C_ACCTBAL'] < 1805.0175630453577) & (customer['C_ADDRESS'] == 'L') & (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 3)][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)