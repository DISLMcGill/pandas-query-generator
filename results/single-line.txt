customer

customer

customer

customer

customer

customer.groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer.groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 8700.713822285878)][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 's') | (customer['C_CUSTKEY'] != 34) | (customer['C_ACCTBAL'] == 9243.89020712594)][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']]

customer[(customer['C_ADDRESS'] == 'P')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']].groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('8')) | (customer['C_NATIONKEY'] >= 1)][['C_NAME', 'C_COMMENT']]

customer[(customer['C_COMMENT'] == 'w') | (customer['C_CUSTKEY'] >= 92) | (customer['C_CUSTKEY'] >= 31) | (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] == 16)][['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('u')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] == 'm') | (customer['C_ACCTBAL'] > 9551.56774569104)][['C_ADDRESS', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] <= 43) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'j') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE']))]

customer[(customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT']).agg('count')

customer[(customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 40) & (customer['C_CUSTKEY'] != 17) & (customer['C_COMMENT'] != 'r')]

customer[(customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] == 'g') | (customer['C_NATIONKEY'] >= 7)][['C_PHONE', 'C_NAME']]

customer[(customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 17) & (customer['C_PHONE'].str.startswith('18-'))][['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE']].groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 21)][['C_NAME', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_PHONE'] != '13-')][['C_PHONE', 'MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') & (customer['MKTSEGMENT'] != 'BUILDING')][['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].groupby(by=['C_PHONE']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'] == 'j') & (customer['C_PHONE'].str.startswith('13-'))][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'] != '1') | (customer['C_CUSTKEY'] < 48) | (customer['C_NATIONKEY'] < 3) & (customer['C_NAME'] == 'C')][['C_ADDRESS']]

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE'])) | (customer['C_ACCTBAL'] >= 3266.9381384599264) | (customer['C_ADDRESS'] != '3') & (customer['C_NATIONKEY'] > 16)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY']]

customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_ACCTBAL']).agg('count')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer[['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('count')

customer[['C_COMMENT', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT']]

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']).agg('count')

customer[['C_CUSTKEY', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_NAME', 'C_COMMENT']]

customer[['C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']]

customer[['C_NAME', 'MKTSEGMENT']]

customer[['C_PHONE']]

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_COMMENT']]

lineitem

lineitem.groupby(by=['COMMITDATE', 'LINESTATUS', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'SHIPMODE', 'DISCOUNT', 'L_PARTKEY', 'EXTENDEDPRICE']).agg('count')

lineitem.groupby(by=['LINESTATUS']).agg('max', numeric_only=True)

lineitem.groupby(by=['L_PARTKEY', 'SHIPDATE', 'QUANTITY', 'EXTENDEDPRICE', 'TAX']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_COMMENT'] == 'i') | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['SHIPMODE'] != 'AIR')][['LINESTATUS', 'RETURNFLAG', 'L_COMMENT']].groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1998-10-16')][['LINESTATUS', 'EXTENDEDPRICE', 'SHIPMODE']]

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['L_PARTKEY'] != 178916) & (lineitem['L_COMMENT'].str.startswith('l'))][['RETURNFLAG', 'SHIPMODE', 'LINESTATUS', 'TAX', 'EXTENDEDPRICE']]

lineitem[(lineitem['DISCOUNT'] == 0.023645392251714373)][['RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.002143998165709804)].groupby(by=['LINENUMBER', 'EXTENDEDPRICE', 'L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 2) & (lineitem['DISCOUNT'] < 0.00907295085091805) & (lineitem['L_SUPPKEY'] <= 9723) | (lineitem['SHIPMODE'] != 'REG AIR')][['COMMITDATE']]

lineitem[(lineitem['LINENUMBER'] >= 1)][['SHIPINSTRUCT', 'COMMITDATE']]

lineitem[(lineitem['LINENUMBER'] >= 3) & (lineitem['L_SUPPKEY'] < 8112) | (lineitem['L_SUPPKEY'] <= 5408) & (lineitem['L_COMMENT'] != 'p') | (lineitem['QUANTITY'] < 3)][['DISCOUNT', 'SHIPINSTRUCT', 'TAX']]

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['QUANTITY'] == 5) | (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['L_ORDERKEY'] != 43)][['EXTENDEDPRICE']]

lineitem[(lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 87918) | (lineitem['RECEIPTDATE'] != '1998-11-06')][['RECEIPTDATE', 'L_COMMENT', 'L_PARTKEY', 'SHIPMODE']].groupby(by=['SHIPMODE', 'RECEIPTDATE', 'L_COMMENT', 'L_PARTKEY']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] >= 2107) & (lineitem['DISCOUNT'] == 0.029331481499994073)][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] != 46) & (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL'])) & (lineitem['TAX'] != 0.02244195924151028)]

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['RETURNFLAG'] != 'R')].groupby(by=['DISCOUNT', 'COMMITDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_ORDERKEY'] > 97) & (lineitem['QUANTITY'] < 9) | (lineitem['L_COMMENT'] == '-')][['COMMITDATE', 'QUANTITY', 'TAX']]

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['TAX'] >= 0.0575684157770623) & (lineitem['EXTENDEDPRICE'] != 50132.74115742339)][['SHIPMODE', 'LINENUMBER', 'SHIPDATE']]

lineitem[(lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['LINENUMBER'] >= 6)][['SHIPINSTRUCT']]

lineitem[(lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['COMMITDATE'] >= '1998-10-16')]

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_COMMENT'].str.startswith('c')) & (lineitem['EXTENDEDPRICE'] != 68358.05859113205)][['TAX', 'RECEIPTDATE', 'QUANTITY']].groupby(by=['TAX', 'RECEIPTDATE', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_ORDERKEY'] != 1)]

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['L_PARTKEY'] == 39624) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['TAX'] > 0.054260827970900545) & (lineitem['QUANTITY'] <= 13)][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['SHIPMODE'] == 'SHIP')][['SHIPDATE', 'EXTENDEDPRICE']]

lineitem[(lineitem['SHIPMODE'] != 'AIR')][['RECEIPTDATE', 'SHIPDATE']].groupby(by=['RECEIPTDATE']).agg('count')

lineitem[(lineitem['SHIPMODE'] != 'FOB') & (lineitem['QUANTITY'] <= 20) & (lineitem['LINENUMBER'] > 5) & (lineitem['L_COMMENT'] != ',') & (lineitem['L_COMMENT'] != ' ca')][['LINENUMBER', 'SHIPDATE', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_SUPPKEY']].groupby(by=['EXTENDEDPRICE', 'L_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.01769877377662545) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['RECEIPTDATE'] <= '1998-11-06')][['SHIPINSTRUCT', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'L_ORDERKEY']]

lineitem[['COMMITDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'TAX']].groupby(by=['SHIPMODE', 'COMMITDATE', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'TAX', 'SHIPDATE', 'EXTENDEDPRICE']]

lineitem[['DISCOUNT', 'LINENUMBER', 'SHIPINSTRUCT', 'LINESTATUS']].groupby(by=['LINESTATUS', 'SHIPINSTRUCT', 'LINENUMBER', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem[['DISCOUNT', 'LINENUMBER']]

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'TAX']].groupby(by=['EXTENDEDPRICE', 'TAX', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'QUANTITY', 'DISCOUNT']]

lineitem[['LINENUMBER', 'RETURNFLAG', 'QUANTITY', 'SHIPMODE']].groupby(by=['SHIPMODE', 'LINENUMBER', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'LINENUMBER']].groupby(by=['LINESTATUS']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_COMMENT']].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'LINENUMBER', 'RETURNFLAG', 'L_COMMENT']]

lineitem[['RETURNFLAG']]

lineitem[['SHIPDATE']]

lineitem[['SHIPDATE']]

lineitem[['SHIPDATE']].groupby(by=['SHIPDATE']).agg('min', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'LINENUMBER', 'TAX']]

lineitem[['SHIPINSTRUCT', 'RETURNFLAG']].groupby(by=['SHIPINSTRUCT']).agg('count')

lineitem[['SHIPINSTRUCT', 'SHIPMODE']].groupby(by=['SHIPINSTRUCT', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[['SHIPMODE', 'DISCOUNT', 'COMMITDATE', 'RECEIPTDATE']]

lineitem[['SHIPMODE', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_PARTKEY', 'L_COMMENT']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['SHIPMODE', 'EXTENDEDPRICE']]

lineitem[['SHIPMODE', 'LINESTATUS', 'SHIPINSTRUCT']].groupby(by=['SHIPMODE']).agg('count')

lineitem[['SHIPMODE', 'TAX']]

lineitem[['TAX', 'DISCOUNT', 'QUANTITY', 'SHIPINSTRUCT']].groupby(by=['TAX']).agg('count')

nation

nation

nation

nation

nation

nation.groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation.groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] == 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'] == 'P') | (nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] < 18)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] <= 23) | (nation['N_REGIONKEY'] >= 2)]

nation[(nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] > 20)][['N_NAME']]

nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] <= 17)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] == 'o')]

nation[(nation['N_NAME'] == 'B') | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] == 'B')][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] == 0)].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 1)][['N_COMMENT', 'N_NAME']]

nation[(nation['N_NATIONKEY'] != 11)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] != 19) | (nation['N_NATIONKEY'] >= 13) | (nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] != 2)].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 4)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 19) | (nation['N_COMMENT'] == 'v') | (nation['N_NAME'].str.startswith('G'))][['N_COMMENT', 'N_NAME']]

nation[(nation['N_NATIONKEY'] >= 17) | (nation['N_NAME'] == 'S')].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 12)][['N_NAME']]

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] < 21) & (nation['N_NATIONKEY'] < 19)][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] == 15) | (nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] <= 0)]

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] >= 9) & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'J')].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_COMMENT']]

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']]

nation[['N_NAME']]

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']]

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']]

nation[['N_REGIONKEY', 'N_NATIONKEY']]

nation[['N_REGIONKEY']]

orders

orders

orders

orders.groupby(by=['O_CUSTKEY']).agg('max', numeric_only=True)

orders.groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] == 18) | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] > 95152)][['ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] > 305) | (orders['O_ORDERKEY'] >= 377) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0)][['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY']]

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_COMMENT'].str.startswith('y')) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] > '1998-07-21') | (orders['ORDERDATE'] <= '1998-07-21')][['CLERK', 'SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['TOTALPRICE'] <= 150942.78929450945) | (orders['TOTALPRICE'] >= 256134.46674852257) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] > '1998-07-21')][['ORDERPRIORITY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']]

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) & (orders['O_ORDERKEY'] <= 324) & (orders['O_ORDERKEY'] > 625)][['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O')][['CLERK']]

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'] != 'y') & (orders['TOTALPRICE'] < 179140.442906167) & (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] >= 302243.68067634414)][['ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK']]

orders[(orders['O_COMMENT'] != 'r') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH'])) | (orders['O_CUSTKEY'] >= 57741) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '5-LOW'])) & (orders['ORDERDATE'] != '1992-01-13')][['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] == 'c') | (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] == 0)].groupby(by=['CLERK', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'i')]

orders[(orders['O_COMMENT'] == 'j') & (orders['ORDERSTATUS'] != 'O')][['TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT']]

orders[(orders['O_COMMENT'].str.startswith('o')) & (orders['TOTALPRICE'] == 88793.38998807131) | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] <= 116)][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 137640) | (orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_COMMENT'] == 'o')].groupby(by=['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 14279)][['TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']]

orders[(orders['O_CUSTKEY'] > 53929) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS', 'O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 36589) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERSTATUS', 'CLERK']]

orders[(orders['O_ORDERKEY'] < 271) & (orders['ORDERDATE'] != '1992-01-13') | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] < 66)].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 7) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] <= 594) & (orders['O_ORDERKEY'] >= 551)][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']]

orders[(orders['O_ORDERKEY'] <= 393) & (orders['TOTALPRICE'] <= 173272.8414407968) | (orders['TOTALPRICE'] <= 127400.91968584315)]

orders[(orders['O_ORDERKEY'] <= 604)][['ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 788) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 64529)][['ORDERDATE', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT']]

orders[(orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] == 114514) | (orders['O_COMMENT'] != 'i')][['ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERDATE']]

orders[(orders['TOTALPRICE'] < 22705.221682892872) | (orders['SHIPPRIORITY'] > 0)][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 89788.6716515696)][['ORDERDATE']]

orders[(orders['TOTALPRICE'] >= 185653.29811722218)].groupby(by=['TOTALPRICE', 'ORDERDATE', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 62025.401144983356) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'F')].groupby(by=['TOTALPRICE', 'ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT']).agg('count')

orders[['CLERK', 'ORDERDATE', 'SHIPPRIORITY']]

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY']]

orders[['CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE']].groupby(by=['CLERK', 'ORDERPRIORITY', 'O_COMMENT']).agg('max', numeric_only=True)

orders[['CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[['ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'ORDERDATE']).agg('count')

orders[['ORDERSTATUS', 'ORDERDATE']]

orders[['ORDERSTATUS']]

orders[['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']]

orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY']]

part

part

part

part

part

part

part

part

part

part

part

part.groupby(by=['BRAND', 'SIZE', 'P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'BRAND', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'TYPE', 'BRAND']).agg('count')

part.groupby(by=['SIZE', 'CONTAINER', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER', 'MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'MFGR']).agg('count')

part.groupby(by=['TYPE', 'P_NAME', 'SIZE', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#13') & (part['P_PARTKEY'] > 192) & (part['BRAND'] == 'Brand#34') & (part['PT_COMMENT'].str.startswith('x')) & (part['PT_COMMENT'].str.startswith('q'))]

part[(part['BRAND'] != 'Brand#21') & (part['TYPE'].str.startswith('SMA')) | (part['RETAILPRICE'] <= 1035.8765656940313)]

part[(part['BRAND'] != 'Brand#34') | (part['BRAND'] == 'Brand#14') & (part['BRAND'] == 'Brand#32') & (part['SIZE'] < 8)].groupby(by=['P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['BRAND'] != 'Brand#43')][['MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'TYPE']].groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#52') & (part['RETAILPRICE'] != 946.2696279901694) | (part['PT_COMMENT'] == 'x') & (part['RETAILPRICE'] <= 929.5123925097802)]

part[(part['CONTAINER'] != 'SM') & (part['CONTAINER'].str.startswith('MED'))]

part[(part['CONTAINER'] != 'SM') | (part['MFGR'].isin(['Manufacturer#2'])) | (part['RETAILPRICE'] == 1018.8114909066379)]

part[(part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] != 1067.5584594598524) | (part['PT_COMMENT'] == 'kag')][['SIZE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'] == 'c')].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'SM')]

part[(part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] > 925.6286594141886) | (part['MFGR'] == 'Manufacturer#4')][['PT_COMMENT']]

part[(part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] != 109) | (part['TYPE'].str.startswith('L')) & (part['MFGR'] == 'Manufacturer#5') & (part['P_NAME'].str.startswith('blu'))].groupby(by=['RETAILPRICE', 'P_NAME', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] == 10) | (part['BRAND'] == 'Brand#22')]

part[(part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'] == 'blu') | (part['BRAND'].isin(['Brand#53', 'Brand#21', 'Brand#32', 'Brand#22', 'Brand#25', 'Brand#15', 'Brand#11', 'Brand#13', 'Brand#35', 'Brand#34']))].groupby(by=['PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2'])) & (part['RETAILPRICE'] > 961.3156267079946) & (part['TYPE'] != 'M')]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) | (part['CONTAINER'].str.startswith('MED')) & (part['RETAILPRICE'] != 1034.382016025473)][['CONTAINER']]

part[(part['PT_COMMENT'] != 'b') & (part['SIZE'] != 33) | (part['RETAILPRICE'] == 942.9589026217044)][['MFGR', 'CONTAINER']]

part[(part['PT_COMMENT'] != 'kag') | (part['TYPE'] == 'M') & (part['RETAILPRICE'] == 902.6853275190441) & (part['RETAILPRICE'] <= 1036.9884458972463) | (part['BRAND'] == 'Brand#21')][['PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'kag') | (part['P_PARTKEY'] < 70) | (part['P_NAME'].str.startswith('l'))][['BRAND', 'TYPE']]

part[(part['PT_COMMENT'] == 's') & (part['RETAILPRICE'] == 985.1689111125899) & (part['BRAND'].isin(['Brand#42'])) | (part['RETAILPRICE'] <= 1020.6135079861231)][['P_NAME', 'P_PARTKEY', 'MFGR']]

part[(part['PT_COMMENT'] == 'w') & (part['P_NAME'] != 'lem') | (part['TYPE'] == 'SMA')].groupby(by=['BRAND', 'SIZE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('y'))].groupby(by=['BRAND', 'SIZE', 'RETAILPRICE', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'bis') & (part['TYPE'] == 'P')][['BRAND', 'RETAILPRICE', 'CONTAINER']].groupby(by=['BRAND']).agg('count')

part[(part['P_NAME'] != 'm') & (part['SIZE'] > 11)][['TYPE']]

part[(part['P_NAME'] != 'v') & (part['RETAILPRICE'] >= 910.9279942082484) | (part['BRAND'] == 'Brand#41') | (part['TYPE'] == 'SMA')]

part[(part['P_NAME'] == 'c') | (part['RETAILPRICE'] <= 1061.6729231484783) & (part['PT_COMMENT'] == 'e') | (part['CONTAINER'] == 'WRAP')].groupby(by=['BRAND', 'CONTAINER', 'PT_COMMENT']).agg('count')

part[(part['P_NAME'].str.startswith('lin')) | (part['TYPE'] == 'STA') & (part['P_PARTKEY'] <= 191) & (part['MFGR'] == 'Manufacturer#4')][['P_PARTKEY', 'PT_COMMENT', 'MFGR']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] != 36) | (part['BRAND'].isin(['Brand#31', 'Brand#35', 'Brand#34', 'Brand#33', 'Brand#55', 'Brand#14', 'Brand#13', 'Brand#25', 'Brand#32', 'Brand#54'])) | (part['CONTAINER'] == 'MED')][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] < 135) | (part['P_PARTKEY'] != 122)].groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('count')

part[(part['P_PARTKEY'] <= 103)][['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'CONTAINER']]

part[(part['P_PARTKEY'] <= 127) & (part['BRAND'].isin(['Brand#15', 'Brand#31', 'Brand#24', 'Brand#22', 'Brand#51', 'Brand#42', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#52'])) & (part['CONTAINER'] != 'LG') | (part['TYPE'] == 'P')][['MFGR', 'BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER']]

part[(part['P_PARTKEY'] <= 27) & (part['SIZE'] < 38)]

part[(part['P_PARTKEY'] <= 49) | (part['BRAND'] == 'Brand#21') | (part['SIZE'] > 14) & (part['TYPE'] == 'P')][['CONTAINER', 'P_NAME', 'SIZE']].groupby(by=['P_NAME', 'SIZE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] <= 95) | (part['RETAILPRICE'] > 930.4013698605213) & (part['P_PARTKEY'] > 168) | (part['PT_COMMENT'].str.startswith('g'))][['PT_COMMENT', 'TYPE']]

part[(part['P_PARTKEY'] >= 188) & (part['SIZE'] < 40) & (part['MFGR'] == 'Manufacturer#3')][['MFGR']].groupby(by=['MFGR']).agg('count')

part[(part['P_PARTKEY'] >= 56)]

part[(part['RETAILPRICE'] != 996.0183008516367) & (part['PT_COMMENT'].str.startswith('o')) & (part['PT_COMMENT'] == 'w') | (part['SIZE'] > 13)]

part[(part['RETAILPRICE'] < 908.7054742234409)][['CONTAINER', 'PT_COMMENT', 'P_NAME']].groupby(by=['CONTAINER', 'P_NAME']).agg('count')

part[(part['RETAILPRICE'] <= 965.0251887764088) | (part['RETAILPRICE'] < 1065.6155254096761)][['RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['TYPE', 'RETAILPRICE']).agg('count')

part[(part['RETAILPRICE'] <= 990.5887688450824) | (part['BRAND'] != 'Brand#22') | (part['CONTAINER'].str.startswith('MED')) & (part['BRAND'] == 'Brand#52') | (part['RETAILPRICE'] >= 930.9963353316994)][['CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] == 1001.6379513141094)].groupby(by=['MFGR', 'TYPE']).agg('count')

part[(part['RETAILPRICE'] == 1064.9658900861643) | (part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'] == 'w') | (part['TYPE'] != 'L')]

part[(part['RETAILPRICE'] == 1081.8771228705452) | (part['MFGR'] == 'Manufacturer#5')][['P_PARTKEY', 'SIZE', 'MFGR']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] == 921.7987398454356) & (part['TYPE'].str.startswith('STA'))][['MFGR', 'CONTAINER', 'BRAND', 'RETAILPRICE']]

part[(part['RETAILPRICE'] > 975.79899581686) & (part['SIZE'] >= 12) | (part['BRAND'] != 'Brand#44') | (part['MFGR'] != 'Manufacturer#2')].groupby(by=['SIZE', 'MFGR', 'TYPE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] >= 970.5131895191486) | (part['PT_COMMENT'].str.startswith('o')) | (part['CONTAINER'].str.startswith('SM')) & (part['SIZE'] >= 17)][['RETAILPRICE', 'P_NAME', 'CONTAINER']].groupby(by=['RETAILPRICE', 'P_NAME', 'CONTAINER']).agg('count')

part[(part['SIZE'] <= 48) & (part['BRAND'].isin(['Brand#31', 'Brand#54', 'Brand#41', 'Brand#44', 'Brand#33', 'Brand#14', 'Brand#45', 'Brand#22', 'Brand#52', 'Brand#42'])) | (part['SIZE'] <= 36)]

part[(part['SIZE'] >= 35)]

part[(part['TYPE'] == 'SMA') & (part['TYPE'].str.startswith('P')) & (part['P_NAME'] == 'o') | (part['CONTAINER'].str.startswith('WRAP'))][['MFGR', 'RETAILPRICE']]

part[['BRAND', 'P_PARTKEY']]

part[['BRAND', 'TYPE', 'MFGR', 'SIZE', 'P_NAME']].groupby(by=['BRAND', 'MFGR', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

part[['CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME']]

part[['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'MFGR']]

part[['CONTAINER']]

part[['CONTAINER']]

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[['MFGR', 'P_NAME', 'RETAILPRICE']]

part[['MFGR', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']]

part[['MFGR', 'RETAILPRICE', 'SIZE', 'BRAND', 'TYPE']]

part[['PT_COMMENT', 'BRAND', 'MFGR']]

part[['PT_COMMENT', 'MFGR', 'BRAND', 'P_NAME']].groupby(by=['P_NAME']).agg('count')

part[['PT_COMMENT', 'TYPE']]

part[['P_NAME', 'SIZE', 'TYPE', 'BRAND']].groupby(by=['P_NAME', 'SIZE']).agg('count')

part[['P_NAME']]

part[['P_NAME']].groupby(by=['P_NAME']).agg('count')

part[['P_PARTKEY', 'BRAND', 'SIZE', 'PT_COMMENT', 'P_NAME']].groupby(by=['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'TYPE', 'P_NAME']]

part[['P_PARTKEY', 'SIZE']]

part[['RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_NAME']].groupby(by=['CONTAINER', 'MFGR', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'P_PARTKEY', 'SIZE']]

part[['RETAILPRICE', 'TYPE']].groupby(by=['RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[['SIZE', 'BRAND', 'P_NAME']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['SIZE', 'BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[['SIZE', 'CONTAINER']]

part[['SIZE', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'TYPE']].groupby(by=['P_NAME', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'TYPE']).agg('sum', numeric_only=True)

part[['SIZE', 'P_NAME']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['SIZE']]

part[['TYPE', 'CONTAINER']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[['TYPE', 'CONTAINER']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[['TYPE', 'MFGR', 'SIZE', 'CONTAINER']].groupby(by=['MFGR', 'TYPE']).agg('min', numeric_only=True)

part[['TYPE', 'SIZE']]

partsupp

partsupp

partsupp.groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 9285) | (partsupp['SUPPLYCOST'] <= 736.0607628869628)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 39) | (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['P_COMMENT'] != 'v') & (partsupp['PS_SUPPKEY'] > 6105)]

partsupp[(partsupp['PS_PARTKEY'] == 18) & (partsupp['P_COMMENT'] == 'i') | (partsupp['AVAILQTY'] >= 7002) & (partsupp['PS_SUPPKEY'] >= 1622)][['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 8) | (partsupp['SUPPLYCOST'] >= 680.266386564877) & (partsupp['PS_PARTKEY'] == 13) | (partsupp['P_COMMENT'] == 'g') & (partsupp['P_COMMENT'] != 'n')][['P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] >= 27) & (partsupp['AVAILQTY'] < 5872) | (partsupp['AVAILQTY'] >= 9398) | (partsupp['AVAILQTY'] > 5754)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 726)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] >= 5662) & (partsupp['PS_PARTKEY'] < 38) | (partsupp['PS_PARTKEY'] > 28)][['P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != 'i') & (partsupp['SUPPLYCOST'] == 876.1274186440247)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['AVAILQTY'] == 2688) & (partsupp['PS_SUPPKEY'] >= 2430) | (partsupp['P_COMMENT'] != 'the')][['P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] == 'k') | (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['PS_SUPPKEY'] == 2315) | (partsupp['PS_SUPPKEY'] <= 1185) | (partsupp['SUPPLYCOST'] < 335.5985281359544)]

partsupp[(partsupp['P_COMMENT'] == 'x')][['AVAILQTY', 'P_COMMENT']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] != 204.3806669421034) & (partsupp['SUPPLYCOST'] == 836.584946212669) & (partsupp['AVAILQTY'] >= 4359)].groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 67.58889967890876) & (partsupp['SUPPLYCOST'] > 729.0647195814473) | (partsupp['SUPPLYCOST'] != 775.5080355298286)]

partsupp[(partsupp['SUPPLYCOST'] > 805.171719033851) & (partsupp['SUPPLYCOST'] != 243.85391339019037)].groupby(by=['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 84.39792340026098) & (partsupp['AVAILQTY'] != 7458) & (partsupp['PS_SUPPKEY'] < 2090) & (partsupp['PS_SUPPKEY'] >= 2955)]

partsupp[['AVAILQTY', 'P_COMMENT']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']]

partsupp[['P_COMMENT', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

region

region

region

region

region

region

region

region

region

region

region

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] >= 1)][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'E')]

region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'A')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'ASI')]

region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))]

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] != 1)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') & (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'] != 'A')]

region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'E')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 3)]

region[(region['R_NAME'] == 'A') | (region['R_NAME'] == 'ASI') & (region['R_COMMENT'] != 'l')]

region[(region['R_NAME'] == 'A')].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('M'))][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] == 'AME')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] == 'M') & (region['R_NAME'] != 'A')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] < 2)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))]

region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('E'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('h'))]

region[(region['R_REGIONKEY'] != 0)][['R_NAME']]

region[(region['R_REGIONKEY'] != 1)]

region[(region['R_REGIONKEY'] != 3)]

region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('AME'))]

region[(region['R_REGIONKEY'] < 1)].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_REGIONKEY'] < 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'] == 'AFR')]

region[(region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 1)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'E')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] < 0)]

region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']]

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']]

region[['R_REGIONKEY']]

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier

supplier

supplier

supplier.groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

supplier.groupby(by=['S_COMMENT', 'S_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 6494.769610466242) | (supplier['S_ADDRESS'].str.startswith('I')) & (supplier['S_COMMENT'] != 'd') | (supplier['S_COMMENT'] != 'y') & (supplier['S_PHONE'] == '3')][['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] == -408.13440350692986) & (supplier['S_ACCTBAL'] != 3188.405078491115) | (supplier['S_NATIONKEY'] > 2)][['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] > 9421.202202922144) & (supplier['S_PHONE'] != '17-')][['S_NAME', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 8707.793214282336) | (supplier['S_COMMENT'] == 'o') & (supplier['S_ACCTBAL'] >= 9022.992494252787) | (supplier['S_ACCTBAL'] < -123.72929112630061) | (supplier['S_SUPPKEY'] < 125)][['S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'j')][['S_NAME']]

supplier[(supplier['S_ADDRESS'] == 'q') | (supplier['S_ACCTBAL'] > 6474.0377005347655) & (supplier['S_ADDRESS'] != 'j') & (supplier['S_COMMENT'] != 'a') | (supplier['S_SUPPKEY'] < 172)][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_COMMENT'] != 'k') & (supplier['S_NATIONKEY'] < 4) & (supplier['S_PHONE'] == '32-')][['S_NAME', 'S_ACCTBAL', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'] != 'x') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_COMMENT'].str.startswith('l')) & (supplier['S_PHONE'] == '2')]

supplier[(supplier['S_COMMENT'] == 'al ') & (supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] == 7436.876426718037) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 8741.743749604371)][['S_SUPPKEY']]

supplier[(supplier['S_COMMENT'] == 'i')]

supplier[(supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'] == 'E')][['S_PHONE']]

supplier[(supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_ACCTBAL'] >= 5695.9761357341495) & (supplier['S_ACCTBAL'] < 385.9376665323023) & (supplier['S_COMMENT'].str.startswith('v'))][['S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_NAME'] != 'S')][['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('28-'))]

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_NAME', 'S_PHONE']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 14) & (supplier['S_ACCTBAL'] == 4560.625700466384) | (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] != 15) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ACCTBAL'] == 8066.884933412656) & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 0)].groupby(by=['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 9) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 1583.0078340832745) | (supplier['S_ACCTBAL'] >= 5228.884460360683) | (supplier['S_ADDRESS'] != 'I')][['S_ADDRESS']]

supplier[(supplier['S_PHONE'] == '26-')].groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 177) | (supplier['S_ADDRESS'] != 'C') | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_SUPPKEY'] != 39) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_SUPPKEY'] <= 66) & (supplier['S_ACCTBAL'] == 3940.4525670201865) | (supplier['S_SUPPKEY'] == 2)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 128) | (supplier['S_COMMENT'].str.startswith('d'))].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 70)][['S_ADDRESS', 'S_PHONE', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[['S_ACCTBAL']]

supplier[['S_ACCTBAL']]

supplier[['S_ADDRESS', 'S_NATIONKEY']]

supplier[['S_ADDRESS', 'S_SUPPKEY']]

supplier[['S_ADDRESS']]

supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_COMMENT', 'S_SUPPKEY']]

supplier[['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']]

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE']]

supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_NAME']).agg('count')

supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].groupby(by=['S_ADDRESS', 'S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']]

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[['S_SUPPKEY', 'S_NAME', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_NAME', 'S_COMMENT']]

supplier[['S_SUPPKEY']]

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] >= 12) | (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] == 't')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NAME'] == 'I') | (nation['N_COMMENT'] == 't') | (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'].str.startswith('u'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 12)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 5780.9944135981805) & (customer['C_NATIONKEY'] == 2) & (customer['C_ADDRESS'] == '4')].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] != 13)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 5252.309242517155) & (customer['C_ADDRESS'] == 'd') | (customer['C_ADDRESS'] != 's') | (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] < 8564.715455589325)].merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'r') & (customer['C_CUSTKEY'] > 56) & (customer['C_ACCTBAL'] == 4170.01731940161)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'h') | (customer['C_ACCTBAL'] == -55.402481462070796) | (customer['C_COMMENT'] == 'h') & (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_NATIONKEY'] < 0) & (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'].str.startswith('l'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'h') & (customer['C_PHONE'] != '22-') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= -256.58994842037384)][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'i') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] > 2227.5601544751316) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY']))].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'n') & (customer['C_ADDRESS'].str.startswith('4'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 25) | (customer['C_NATIONKEY'] != 12) & (customer['C_ADDRESS'] == '8') & (customer['C_PHONE'] == '13-')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 45) & (customer['C_COMMENT'].str.startswith('y'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 39) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '3') & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_COMMENT'].str.startswith('h'))].merge(nation[(nation['N_REGIONKEY'] != 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 81) | (customer['C_NATIONKEY'] != 20) | (customer['C_ADDRESS'].str.startswith('m')) & (customer['C_PHONE'].str.startswith('22-'))][['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] == 23) | (customer['C_NATIONKEY'] > 14)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 19)][['C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '1')][['C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] == '3') | (customer['C_ADDRESS'] != 'O')].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NATIONKEY'] == 17)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] <= 2008)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 22) & (partsupp['SUPPLYCOST'] != 112.21088434562529) & (partsupp['P_COMMENT'].str.startswith(' th'))][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 49) | (partsupp['AVAILQTY'] != 9926) | (partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['PS_PARTKEY'] <= 26)][['AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'b')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'SUPPLYCOST']).agg('count')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 65489.2451120232) & (lineitem['QUANTITY'] <= 8) | (lineitem['QUANTITY'] < 1)].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['EXTENDEDPRICE'] > 16477.59716228789) | (lineitem['TAX'] > 0.060568556788095106)][['RETURNFLAG', 'SHIPMODE', 'L_ORDERKEY', 'DISCOUNT', 'COMMITDATE']].merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['L_PARTKEY'] > 11327)][['RETURNFLAG', 'L_ORDERKEY', 'COMMITDATE', 'TAX', 'LINESTATUS']].merge(orders[['O_COMMENT', 'CLERK', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['QUANTITY'] == 27) & (lineitem['TAX'] == 0.026270945414865476) & (lineitem['EXTENDEDPRICE'] > 15914.631072837567) & (lineitem['COMMITDATE'] >= '1992-05-15')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3692) | (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['PS_PARTKEY'] != 35)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'c') | (lineitem['DISCOUNT'] > 0.040697972355114166) | (lineitem['L_SUPPKEY'] >= 9748) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['RECEIPTDATE'] != '1992-05-02')][['SHIPMODE', 'L_ORDERKEY', 'COMMITDATE', 'LINENUMBER']].merge(orders[['ORDERDATE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] != 183) & (lineitem['L_PARTKEY'] != 168302) & (lineitem['EXTENDEDPRICE'] > 18329.21555416712)].merge(orders[(orders['O_CUSTKEY'] == 147448) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0)][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['TAX'] < 0.025744698027506976) & (lineitem['TAX'] != 0.04298159196261402) & (lineitem['LINENUMBER'] == 4)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06')][['COMMITDATE', 'SHIPMODE', 'L_COMMENT', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 6) | (partsupp['PS_PARTKEY'] > 46) | (partsupp['PS_PARTKEY'] >= 12) | (partsupp['PS_SUPPKEY'] >= 4940)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'REG AIR', 'TRUCK']))].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.013121022450294522) & (lineitem['RECEIPTDATE'] < '1992-05-02')].merge(orders[(orders['O_CUSTKEY'] != 81631) | (orders['CLERK'] != 'C')][['O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'DISCOUNT', 'L_ORDERKEY', 'TAX']].merge(orders[(orders['ORDERDATE'] == '1998-07-21')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS', 'O_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_PARTKEY', 'L_COMMENT', 'QUANTITY']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'L_ORDERKEY', 'SHIPDATE', 'EXTENDEDPRICE']].merge(orders[(orders['O_ORDERKEY'] < 596) & (orders['TOTALPRICE'] > 302419.40954292356)][['CLERK', 'O_ORDERKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG', 'QUANTITY', 'L_ORDERKEY', 'L_PARTKEY']].merge(orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] > 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'o')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] != 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NAME'] != 'F')].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('n'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] != 'u')][['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_REGIONKEY'] <= 2) & (nation['N_COMMENT'] == 'n') & (nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] != 7)][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] < 9) & (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] != 16) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NATIONKEY'] >= 1) & (nation['N_NATIONKEY'] > 18)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] > 9)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 0) | (nation['N_COMMENT'] == 'u')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 1) & (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] == 10) & (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_COMMENT'] != 'o') & (nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 8) & (nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] <= 19) | (nation['N_REGIONKEY'] == 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 2)].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'A') | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'l') & (nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'n')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] < 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] <= 17)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 6315.705439051644) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 976.0928285597088)][['MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('B')) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith(',')) | (customer['C_ACCTBAL'] < 542.3054559689156)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'w') | (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_CUSTKEY'] == 69) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] > 7)][['C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_NATIONKEY'] > 5) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == -241.5320376742692) & (customer['C_ACCTBAL'] >= 1645.4435388974848)][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')].merge(customer[(customer['C_ADDRESS'] == 'g') & (customer['C_PHONE'].str.startswith('3'))][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('count')

orders[(orders['ORDERDATE'] > '1998-07-21')].merge(customer[(customer['C_NATIONKEY'] < 14) & (customer['C_CUSTKEY'] < 47)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'] != 'BUILDING')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] <= 316318.4363174714) & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F')].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] >= 668) & (orders['SHIPPRIORITY'] < 0)].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ',') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] >= 143633)].merge(customer[['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('ly ')) & (orders['O_ORDERKEY'] > 372) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'] != 'F')].merge(customer[(customer['C_NATIONKEY'] >= 8) & (customer['C_PHONE'] == '3')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 116279)].merge(customer[(customer['C_COMMENT'] != 's')][['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 789)].merge(customer[(customer['C_ADDRESS'] == 'h') | (customer['C_NATIONKEY'] <= 15)][['MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] == 99681)].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] < 134208.53793069313) & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] == 180) & (orders['TOTALPRICE'] < 206015.31721076704)][['ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 128539.77799668125) | (orders['O_ORDERKEY'] > 621) | (orders['CLERK'] == 'C')].merge(customer[(customer['C_CUSTKEY'] > 49) & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] == 98200.71501100977)].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 127065.96311486293) & (orders['TOTALPRICE'] != 3627.7941278297544) | (orders['TOTALPRICE'] > 222823.47965301274)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] >= 9) & (part['SIZE'] >= 30) & (part['PT_COMMENT'].str.startswith('!')) & (part['P_PARTKEY'] < 125)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] == 'p') | (part['SIZE'] < 8) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'].str.startswith('i'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] >= 132) | (part['P_NAME'] != 'cor') | (part['SIZE'] != 3) | (part['BRAND'] != 'Brand#12') & (part['TYPE'] == 'E')][['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] <= 934.096569506714) | (part['RETAILPRICE'] == 917.7110158538231) | (part['SIZE'] != 18)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] >= 918.7757662987811) | (part['SIZE'] >= 8) & (part['CONTAINER'].str.startswith('LG')) | (part['SIZE'] <= 9) | (part['P_PARTKEY'] > 16)][['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 14)][['P_NAME', 'P_PARTKEY', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('count')

partsupp.merge(part[(part['SIZE'] < 43) & (part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] != 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp.merge(part[['BRAND', 'MFGR', 'SIZE', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['CONTAINER', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'P_NAME', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part[['TYPE', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < -497.915272002548)][['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 8056.991566545424) & (supplier['S_SUPPKEY'] > 91) | (supplier['S_ADDRESS'] == 'o') & (supplier['S_NATIONKEY'] < 20)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 178) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'p') & (supplier['S_NATIONKEY'] < 12)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 26) | (supplier['S_ADDRESS'].str.startswith('D'))][['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 2640) | (partsupp['SUPPLYCOST'] >= 446.5079504105244)].merge(part[(part['CONTAINER'].str.startswith('SM'))][['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 6824) | (partsupp['AVAILQTY'] != 1680) & (partsupp['SUPPLYCOST'] > 432.7715084939501)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 3723) & (partsupp['SUPPLYCOST'] >= 653.7265981086495) & (partsupp['PS_PARTKEY'] > 29) | (partsupp['PS_PARTKEY'] > 47) & (partsupp['AVAILQTY'] != 7719)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] != 't') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ACCTBAL'] != 232.83449660663996) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_PHONE'] != '2')][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 3839) | (partsupp['SUPPLYCOST'] > 164.49621431171596)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 3586) & (partsupp['PS_SUPPKEY'] != 6443)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 4704)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 3117) & (partsupp['SUPPLYCOST'] > 961.8334043125003) | (partsupp['AVAILQTY'] < 1607) & (partsupp['PS_SUPPKEY'] <= 3149) & (partsupp['PS_PARTKEY'] == 34)].merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 6480) & (partsupp['PS_SUPPKEY'] <= 7167) | (partsupp['P_COMMENT'] != 'r') & (partsupp['SUPPLYCOST'] > 674.4628356008096)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'] != 'Brand#23')][['CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 20) | (partsupp['AVAILQTY'] <= 5638)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 46) | (partsupp['PS_SUPPKEY'] >= 3980) | (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['P_COMMENT'].str.startswith('k'))].merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3'])) & (part['P_NAME'].str.startswith('n')) | (part['PT_COMMENT'] == 'b')][['MFGR', 'TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 24) | (partsupp['P_COMMENT'] == 'f') | (partsupp['SUPPLYCOST'] < 533.969654679321) | (partsupp['P_COMMENT'] != 's') | (partsupp['P_COMMENT'] != 'u')].merge(part[(part['MFGR'].isin(['Manufacturer#3'])) & (part['BRAND'] != 'Brand#34') | (part['P_PARTKEY'] <= 59) | (part['MFGR'] != 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 47) | (partsupp['PS_PARTKEY'] >= 29)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 22) & (partsupp['PS_PARTKEY'] >= 36) & (partsupp['PS_SUPPKEY'] > 3644)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 3) | (supplier['S_ADDRESS'] != 'c') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '14-')][['S_NATIONKEY', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 12) | (partsupp['P_COMMENT'] != 'p') | (partsupp['SUPPLYCOST'] == 362.201117376271)].merge(part[['SIZE', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 14) & (partsupp['PS_PARTKEY'] != 17) | (partsupp['SUPPLYCOST'] <= 735.707795995855)].merge(supplier[(supplier['S_COMMENT'] != ',') | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 155)][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 7085) & (partsupp['PS_PARTKEY'] > 10) & (partsupp['PS_PARTKEY'] <= 40) | (partsupp['PS_PARTKEY'] != 44)][['PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 3392) & (partsupp['P_COMMENT'] != 'k') & (partsupp['AVAILQTY'] != 5326) | (partsupp['SUPPLYCOST'] <= 844.899272920483) & (partsupp['PS_SUPPKEY'] <= 5988)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['TYPE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 4929) & (partsupp['AVAILQTY'] == 4595) | (partsupp['P_COMMENT'] != '.')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3623) & (partsupp['SUPPLYCOST'] == 967.0889438563255) | (partsupp['AVAILQTY'] == 1438)].merge(supplier[(supplier['S_NATIONKEY'] < 11) & (supplier['S_ACCTBAL'] > 2301.1365622851717) | (supplier['S_COMMENT'] != 'e') | (supplier['S_ACCTBAL'] <= 3789.268607733111) & (supplier['S_PHONE'].str.startswith('1'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 2542) & (partsupp['P_COMMENT'] != 's')].merge(part[(part['TYPE'].str.startswith('SMA')) | (part['SIZE'] == 38) | (part['P_NAME'] == 's') & (part['BRAND'].isin(['Brand#54', 'Brand#14', 'Brand#44', 'Brand#35', 'Brand#22', 'Brand#24', 'Brand#51', 'Brand#45', 'Brand#13', 'Brand#21', 'Brand#12', 'Brand#34', 'Brand#11', 'Brand#42', 'Brand#25', 'Brand#15', 'Brand#23', 'Brand#52', 'Brand#32', 'Brand#55', 'Brand#41', 'Brand#33', 'Brand#31', 'Brand#53', 'Brand#43'])) | (part['PT_COMMENT'] == 'r')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 166) | (partsupp['PS_PARTKEY'] < 1) | (partsupp['PS_SUPPKEY'] > 6390) & (partsupp['PS_SUPPKEY'] < 96)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 2362) | (partsupp['PS_PARTKEY'] == 37) | (partsupp['SUPPLYCOST'] < 796.8201524867835) | (partsupp['PS_SUPPKEY'] < 6853) | (partsupp['AVAILQTY'] > 8064)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 3564) & (partsupp['AVAILQTY'] > 7919) | (partsupp['PS_SUPPKEY'] < 4000) & (partsupp['SUPPLYCOST'] != 613.7679536918939) | (partsupp['AVAILQTY'] != 3289)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] != 58) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'].str.startswith('7')) & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 864) | (partsupp['P_COMMENT'] != 'h') & (partsupp['PS_PARTKEY'] < 45) | (partsupp['AVAILQTY'] <= 2071) | (partsupp['SUPPLYCOST'] >= 105.57820831991312)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'are') & (partsupp['PS_SUPPKEY'] > 1448) & (partsupp['SUPPLYCOST'] < 921.7267726864713) | (partsupp['PS_PARTKEY'] >= 36) & (partsupp['PS_SUPPKEY'] != 6923)].merge(part[(part['TYPE'] == 'M') | (part['TYPE'] == 'S') | (part['RETAILPRICE'] >= 1004.3151699859136)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'c')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'e') | (partsupp['SUPPLYCOST'] < 956.1591507549426) | (partsupp['PS_PARTKEY'] < 13) & (partsupp['PS_PARTKEY'] > 35)].merge(part[['CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'n') & (partsupp['P_COMMENT'] != 'g') | (partsupp['AVAILQTY'] != 2879) | (partsupp['PS_SUPPKEY'] >= 1366) & (partsupp['PS_PARTKEY'] == 16)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('c')) | (part['CONTAINER'] == 'JUMBO') & (part['TYPE'] == 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'n') | (partsupp['PS_PARTKEY'] > 3) & (partsupp['P_COMMENT'].str.startswith('q'))].merge(part[(part['P_NAME'].str.startswith('a')) | (part['P_NAME'] == 'p') & (part['RETAILPRICE'] >= 982.8873974127829) | (part['P_PARTKEY'] >= 53)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('bli'))][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['RETAILPRICE'] <= 1033.3919078214806) | (part['P_NAME'] == 'f') & (part['MFGR'] != 'Manufacturer#5')][['BRAND', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 774.2565577820698) | (partsupp['AVAILQTY'] == 7309) & (partsupp['P_COMMENT'] == '.') & (partsupp['SUPPLYCOST'] > 31.235783121718377) & (partsupp['SUPPLYCOST'] == 758.0528457149642)].merge(supplier[(supplier['S_PHONE'] != '1')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 941.5537576140057) & (partsupp['P_COMMENT'] != 'x') | (partsupp['PS_SUPPKEY'] > 3926) | (partsupp['SUPPLYCOST'] == 761.0047137937065) & (partsupp['SUPPLYCOST'] == 654.1264802972634)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'CONTAINER', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'CONTAINER', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'CONTAINER', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] == 'k') | (part['PT_COMMENT'].str.startswith('q')) & (part['BRAND'] != 'Brand#43')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] <= 613.9533446427811) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '17-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] <= 78) | (part['RETAILPRICE'] == 1067.3574371798431) | (part['SIZE'] == 1) | (part['PT_COMMENT'].str.startswith('b')) & (part['P_NAME'] != 'k')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'MED') & (part['BRAND'] != 'Brand#13')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] <= 939.7394334844762) | (part['P_NAME'] != 'o') | (part['RETAILPRICE'] < 915.467260702522) | (part['RETAILPRICE'] >= 1007.4201003645389) | (part['SIZE'] < 15)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] < 1075.6469695663432) | (part['CONTAINER'] != 'WRAP') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3']))][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'CONTAINER', 'PT_COMMENT']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['BRAND', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'CONTAINER', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_ACCTBAL'] == -427.70238649651276) | (supplier['S_COMMENT'].str.startswith(','))][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] != 'B')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'E')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] <= 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4406.111674977951) & (supplier['S_ACCTBAL'] > 7386.6809807672425) & (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 1914.8898766467967) & (supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_ACCTBAL'] != 3032.127318874076) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'G')].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] != 0) | (nation['N_NATIONKEY'] != 13) | (nation['N_REGIONKEY'] <= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('T')) & (supplier['S_ADDRESS'] != '4') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('3'))][['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_REGIONKEY'] > 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'] == '!') | (supplier['S_ADDRESS'] != 'g')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'x') | (supplier['S_ADDRESS'] != 'p') & (supplier['S_PHONE'] != '32-')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 7)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_COMMENT'] != 't') & (nation['N_NATIONKEY'] != 14) | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] != 2) & (nation['N_COMMENT'] == 'i') & (nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] == 'F')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'I')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] > 3)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 1) | (nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_NATIONKEY'] <= 6) & (nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] == ' ')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'G') | (nation['N_NAME'] != 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'] == 'a') & (nation['N_NAME'] != 'B')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 3949.9484382602423) | (customer['C_CUSTKEY'] <= 6) | (customer['C_ACCTBAL'] == -789.0216291471836) | (customer['C_COMMENT'] != '.') & (customer['C_ACCTBAL'] <= 6469.083281619344)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 405.0720256570946)][['C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'D') | (customer['C_NATIONKEY'] != 1) | (customer['C_ADDRESS'] != 'i')][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation.merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'O') | (customer['C_NATIONKEY'] == 5) & (customer['C_ADDRESS'] != 'u') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'L')].merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != 'v') & (customer['C_CUSTKEY'] == 36) | (customer['C_CUSTKEY'] < 13) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] == 'R') & (nation['N_COMMENT'] != 'n')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'B') | (customer['C_CUSTKEY'] <= 6)].merge(nation.merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'j') | (customer['C_COMMENT'] == 'g') | (customer['C_ACCTBAL'] < 239.17258792702842) | (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith(' '))][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('w')) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('h')) | (customer['C_NATIONKEY'] <= 14) & (customer['C_CUSTKEY'] > 87)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'r')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 71) | (customer['C_ADDRESS'] != 'l') & (customer['C_CUSTKEY'] == 60)][['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] < 11) & (nation['N_COMMENT'].str.startswith('v')) & (nation['N_NAME'] == 'V')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] < 5732.730827082508) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 11) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] > 99) & (customer['C_ADDRESS'] != 'h')].merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 15) & (customer['C_COMMENT'].str.startswith('l')) & (customer['C_NATIONKEY'] > 5) | (customer['C_ADDRESS'] != 'Q')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 16)][['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'] == 'a')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 19) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] == '18-')].merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] <= 12) & (nation['N_NAME'] != 'V') & (nation['N_NAME'].str.startswith('A'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 15) | (customer['C_ACCTBAL'] != 3516.2099422666297) | (customer['C_ACCTBAL'] == -860.0323891523781) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 14)].merge(nation[(nation['N_NATIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] >= 23)][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] > 2875.7445561271347) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD']))][['C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] != 's')].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] < 304.6117877906918)][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_NATIONKEY'] == 1) & (customer['C_COMMENT'] == 'e')].merge(nation[(nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'BUILDING', 'AUTOMOBILE', 'FURNITURE'])) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_CUSTKEY'] != 51) | (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] == 5) & (nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] == 2) & (nation['N_NATIONKEY'] != 9)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 10) & (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) & (orders['TOTALPRICE'] == 15553.72046097868) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 7669.766608734018)].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['BRAND'] == 'Brand#51') | (part['P_PARTKEY'] >= 80)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('kag')) | (part['PT_COMMENT'] != ' fi')][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(part[['BRAND', 'MFGR', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 10) | (partsupp['AVAILQTY'] <= 375) & (partsupp['PS_SUPPKEY'] != 7396) & (partsupp['SUPPLYCOST'] <= 111.34077564285622) & (partsupp['PS_SUPPKEY'] < 2735)].merge(part[['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 928) & (partsupp['P_COMMENT'].str.startswith('l')) | (partsupp['SUPPLYCOST'] > 220.42407637968375)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 117.24217368868453)].merge(part[(part['P_PARTKEY'] < 82) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) | (part['TYPE'] == 'M')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] != 'LG') & (part['P_NAME'].str.startswith('p')) & (part['P_PARTKEY'] < 143) & (part['P_NAME'].str.startswith('k'))][['MFGR', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['RETAILPRICE', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] > 173) | (part['P_PARTKEY'] == 47) | (part['BRAND'] != 'Brand#54') & (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] <= 984.456969362502)][['TYPE', 'SIZE', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] == 60000.69374016917) & (lineitem['L_ORDERKEY'] >= 187) | (lineitem['DISCOUNT'] > 0.047610269075582926)].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS', 'C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 78103.52449570745) | (lineitem['L_ORDERKEY'] >= 108) & (lineitem['L_ORDERKEY'] != 119)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 2) | (lineitem['EXTENDEDPRICE'] >= 16764.96751051967) & (lineitem['COMMITDATE'] <= '1992-05-15')].merge(partsupp[(partsupp['PS_PARTKEY'] == 41) & (partsupp['AVAILQTY'] == 3331) | (partsupp['SUPPLYCOST'] <= 679.4679576494041) & (partsupp['P_COMMENT'] == 'n') | (partsupp['AVAILQTY'] <= 1547)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['MFGR'] == 'Manufacturer#1') | (part['BRAND'] == 'Brand#13') & (part['PT_COMMENT'] != 'l') | (part['P_NAME'] != 'h')][['RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 4) & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['TAX'] != 0.05041308108607736)][['RETURNFLAG', 'LINENUMBER', 'L_SUPPKEY', 'COMMITDATE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5214)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'] != 'Manufacturer#5') & (part['BRAND'] == 'Brand#15') & (part['P_NAME'] != 'o') | (part['BRAND'].isin(['Brand#44', 'Brand#34', 'Brand#25', 'Brand#42', 'Brand#35', 'Brand#33', 'Brand#43', 'Brand#53', 'Brand#12', 'Brand#21', 'Brand#55', 'Brand#51', 'Brand#11', 'Brand#13', 'Brand#22', 'Brand#14', 'Brand#41', 'Brand#31', 'Brand#24', 'Brand#23', 'Brand#15', 'Brand#45']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] >= 4) & (lineitem['LINENUMBER'] >= 6)].merge(partsupp[(partsupp['AVAILQTY'] >= 7647)].merge(part[(part['BRAND'].isin(['Brand#14', 'Brand#12', 'Brand#24', 'Brand#13', 'Brand#22', 'Brand#25', 'Brand#51', 'Brand#45']))][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 133)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 47) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['LINESTATUS'] == 'O') & (lineitem['TAX'] < 0.026068141565530424)].merge(partsupp[(partsupp['P_COMMENT'] == 'a') & (partsupp['P_COMMENT'].str.startswith('d')) & (partsupp['SUPPLYCOST'] >= 773.9036662656333) | (partsupp['PS_PARTKEY'] > 19) & (partsupp['PS_SUPPKEY'] == 6299)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('count')

lineitem[(lineitem['L_PARTKEY'] != 116890) & (lineitem['LINESTATUS'] == 'F')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['PS_SUPPKEY'] < 6212) | (partsupp['SUPPLYCOST'] > 371.20767163729215)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] != 823.7066096040746) | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] < 1176) | (lineitem['RECEIPTDATE'] >= '1992-05-02')].merge(partsupp[(partsupp['AVAILQTY'] <= 399) & (partsupp['PS_PARTKEY'] >= 22) & (partsupp['P_COMMENT'] != 'i')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'].str.startswith('n')) | (part['RETAILPRICE'] == 949.7604244106166) | (part['P_NAME'].str.startswith('o')) | (part['SIZE'] >= 44) & (part['SIZE'] >= 21)][['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 9506) & (lineitem['TAX'] != 0.05977070704841251) & (lineitem['EXTENDEDPRICE'] < 37386.105241813675) | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINENUMBER'] >= 2)][['LINESTATUS', 'TAX', 'DISCOUNT', 'L_ORDERKEY', 'L_SUPPKEY']].merge(orders[['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['L_ORDERKEY'] != 189) | (lineitem['TAX'] > 0.0037638855929301497) | (lineitem['LINENUMBER'] >= 4)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3306) & (partsupp['PS_SUPPKEY'] > 213) | (partsupp['AVAILQTY'] <= 794) | (partsupp['AVAILQTY'] == 1695) | (partsupp['SUPPLYCOST'] <= 876.9995620452529)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] < 2168) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 94) & (supplier['S_NATIONKEY'] < 5) | (supplier['S_SUPPKEY'] >= 155) | (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(partsupp[(partsupp['P_COMMENT'] == 'bli')].merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['L_COMMENT'] == ' ca') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[(partsupp['AVAILQTY'] > 6310) & (partsupp['PS_SUPPKEY'] == 4989)].merge(part[(part['P_PARTKEY'] < 26) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3'])) | (part['P_PARTKEY'] > 191) & (part['PT_COMMENT'].str.startswith('i'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['DISCOUNT'] == 0.07505676982867343) & (lineitem['L_SUPPKEY'] != 9403) & (lineitem['LINENUMBER'] > 6)].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] != 1031.8912846232026)][['TYPE', 'BRAND', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD']))][['DISCOUNT', 'L_SUPPKEY', 'TAX', 'SHIPDATE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

lineitem[(lineitem['SHIPMODE'] == 'SHIP')].merge(partsupp[(partsupp['PS_PARTKEY'] < 12) & (partsupp['PS_PARTKEY'] <= 10) | (partsupp['P_COMMENT'] != 'h')][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['P_NAME'] != 'lem')][['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['MAIL']))][['QUANTITY', 'L_COMMENT', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['AVAILQTY'] >= 5861) & (partsupp['PS_PARTKEY'] != 3) | (partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['AVAILQTY'] > 9566)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('LG')) & (part['SIZE'] > 46) | (part['P_PARTKEY'] >= 60) & (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'L_ORDERKEY', 'L_PARTKEY', 'EXTENDEDPRICE', 'L_COMMENT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'TYPE', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] > 608.1250357955495)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != '9') & (supplier['S_COMMENT'] != 's') & (supplier['S_COMMENT'] == 's') | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_ORDERKEY', 'L_PARTKEY']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 34) & (partsupp['PS_PARTKEY'] != 11) | (partsupp['P_COMMENT'] != 'c')].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPMODE', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] < 13) | (partsupp['SUPPLYCOST'] < 692.9549051813656) & (partsupp['AVAILQTY'] > 6299) | (partsupp['PS_SUPPKEY'] <= 4624)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] != 18) & (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] <= 3792.2820475426197)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_REGIONKEY'] != 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] == 'O')].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_COMMENT'] != 'e')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'O') & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0)][['TOTALPRICE', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'].str.startswith('w'))][['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_PHONE'] != '22-') & (customer['C_NATIONKEY'] > 16) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] == 1) | (nation['N_NATIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'j') | (orders['TOTALPRICE'] > 152341.69972444413) | (orders['O_CUSTKEY'] < 70396) & (orders['O_COMMENT'] == 'uri') | (orders['ORDERDATE'] > '1992-01-13')].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] == 16) | (nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] == 'K')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

orders[(orders['O_COMMENT'] == 'r') | (orders['SHIPPRIORITY'] >= 0)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 42759)][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('y'))].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('S'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 710) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '5-LOW', '2-HIGH', '3-MEDIUM'])) | (orders['TOTALPRICE'] >= 59317.01156055116) & (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_NATIONKEY'] == 19)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] == 17)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_NATIONKEY'] >= 16) & (customer['C_CUSTKEY'] >= 38) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] > 18) & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'U') & (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 10) & (supplier['S_ACCTBAL'] < 4847.930866154822)].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] <= 6) | (nation['N_NATIONKEY'] >= 19) & (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] <= 23) | (partsupp['AVAILQTY'] > 3176) | (partsupp['PS_PARTKEY'] >= 45) | (partsupp['SUPPLYCOST'] == 158.10951459144863)][['PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != 'w')].merge(nation[(nation['N_NAME'] == 'U')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 1041.7025655864759) | (supplier['S_COMMENT'] != 'v')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] >= 148)].merge(nation[(nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_NATIONKEY'] != 15)].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 12) | (nation['N_NATIONKEY'] <= 10) & (nation['N_NAME'].str.startswith('V')) | (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 5)].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 19)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] <= 6) & (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 5537.1331910435665) & (supplier['S_COMMENT'] == 'v') & (supplier['S_SUPPKEY'] <= 100)].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] != 2) & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'x') & (supplier['S_ACCTBAL'] < -48.593772394559664) & (supplier['S_NATIONKEY'] >= 14) & (supplier['S_ACCTBAL'] <= 9218.323867741437) & (supplier['S_ACCTBAL'] != 5412.166055739791)].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('k'))][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'j') & (supplier['S_ACCTBAL'] < 9840.218440840154) & (supplier['S_ACCTBAL'] <= 5815.950896616563)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'l')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] < 9)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] == 832.2091909870549)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 2) & (supplier['S_COMMENT'] == 'h') & (supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_PHONE'].str.startswith('17-'))][['S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 14) & (supplier['S_ADDRESS'].str.startswith('w')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] != 47)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 18) | (supplier['S_ACCTBAL'] == 5920.3150929826015)][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 10) | (supplier['S_ACCTBAL'] == 3053.827810368358) | (supplier['S_NATIONKEY'] < 8) & (supplier['S_PHONE'] != '17-')].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] >= 13)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 1)][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 7)].merge(nation[(nation['N_NATIONKEY'] <= 1) | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] != '2') | (supplier['S_ACCTBAL'] <= -406.1588339260436)].merge(nation[(nation['N_COMMENT'] == 'p')].merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 22)][['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'] != 'k') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ADDRESS'] == 'O') & (supplier['S_PHONE'] == '28-')][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '1') & (supplier['S_SUPPKEY'] != 87)][['S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 6)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 28) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 9196.222015094536)].merge(nation[(nation['N_NATIONKEY'] >= 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] != 58) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '17-') | (supplier['S_ADDRESS'] == 'C') | (supplier['S_SUPPKEY'] <= 40)][['S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 108) & (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] == 's') | (supplier['S_PHONE'] != '26-')][['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] > 9) | (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] != 16) | (nation['N_NAME'].str.startswith('M'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 's')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'F')].merge(customer.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] > 8)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 5104)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 16) & (partsupp['SUPPLYCOST'] >= 203.84650165506005)].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] <= 3) & (nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 3941) & (partsupp['AVAILQTY'] >= 3514) | (partsupp['SUPPLYCOST'] < 450.54667889174834)][['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'].str.startswith('K'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'o') | (partsupp['PS_SUPPKEY'] <= 2803) | (partsupp['PS_SUPPKEY'] != 6842) | (partsupp['SUPPLYCOST'] == 750.0692064805495) | (partsupp['PS_PARTKEY'] >= 37)].merge(supplier[(supplier['S_ACCTBAL'] == 2415.25375556595)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['TAX'] <= 0.07098848761240842)][['EXTENDEDPRICE', 'SHIPMODE', 'L_PARTKEY', 'LINESTATUS', 'L_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] == 't') & (partsupp['SUPPLYCOST'] <= 203.2575625501778) & (partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['PS_PARTKEY'] == 13)].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 132)][['L_COMMENT', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'p') & (partsupp['AVAILQTY'] < 453)].merge(supplier[(supplier['S_ACCTBAL'] > 6224.659124150774)].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] > 6791)].merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_PHONE'] == '3')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE')][['L_SUPPKEY', 'LINESTATUS', 'L_ORDERKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] <= 6188) | (partsupp['PS_SUPPKEY'] >= 4602) | (partsupp['AVAILQTY'] == 7998) & (partsupp['SUPPLYCOST'] >= 820.6728534295188)].merge(supplier[['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

lineitem[['L_ORDERKEY', 'TAX']].merge(orders[(orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_CUSTKEY'] == 9) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'n')][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 736) | (partsupp['SUPPLYCOST'] > 391.8566104703249)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 8210.790104228829) & (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[(nation['N_NATIONKEY'] >= 1) | (nation['N_NATIONKEY'] <= 15) & (nation['N_NATIONKEY'] >= 11) | (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 's') | (customer['C_COMMENT'] == 'p') | (customer['C_NATIONKEY'] >= 7) | (customer['C_NAME'] != 'C')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 4) | (customer['C_ACCTBAL'] == 453.8556016771179) | (customer['C_NATIONKEY'] <= 18) & (customer['C_NATIONKEY'] > 6) & (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'] != 'l')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] <= 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'] != 'a')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] <= 438) & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] <= 706)].merge(customer[(customer['C_ACCTBAL'] < 402.4167320041829) & (customer['C_ACCTBAL'] == -836.9324470699976)].merge(nation[(nation['N_COMMENT'] != 'h')].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] != 111827) & (orders['TOTALPRICE'] <= 49242.558471184515)].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'q')].merge(customer[(customer['C_ADDRESS'].str.startswith('8')) & (customer['C_ACCTBAL'] >= 851.0371974194284) & (customer['C_COMMENT'].str.startswith('k'))].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21')][['TOTALPRICE', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 128665.87112899596) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 74) | (customer['C_ADDRESS'] == 'u') | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] >= 16)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 53006) | (orders['O_ORDERKEY'] == 457) & (orders['CLERK'].str.startswith('C'))][['CLERK', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < -55.716254842005355) & (customer['C_NATIONKEY'] < 13) | (customer['C_ACCTBAL'] > -350.8475997435669) & (customer['C_CUSTKEY'] == 57)][['C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 51684)].merge(customer[(customer['C_CUSTKEY'] >= 32) & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_PHONE'] != '3') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) | (orders['ORDERSTATUS'] == 'P') & (orders['ORDERSTATUS'] == 'P')].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 18) | (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] != 7) | (nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] <= 144800) & (orders['TOTALPRICE'] == 102462.60179452416) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_ADDRESS'] == '7') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'].str.startswith('q'))][['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] <= 14) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] <= 3) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] != 28533.726625431424) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT'])) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] != 's') & (customer['C_NATIONKEY'] <= 19) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY']))][['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] < 19) & (customer['C_NATIONKEY'] != 13) | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) & (customer['C_ADDRESS'] != 'h')].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] >= 17) & (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_COMMENT', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] != '1') & (customer['C_COMMENT'].str.startswith('w')) & (customer['C_ADDRESS'].str.startswith('l')) & (customer['C_CUSTKEY'] >= 18) & (customer['C_PHONE'] == '2')][['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] == 22) | (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 8241.191652313266) | (supplier['S_ACCTBAL'] < 6393.960545911887) | (supplier['S_ADDRESS'].str.startswith('L'))].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 5182.103888521407)].merge(nation[(nation['N_NATIONKEY'] <= 21)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != ' ') | (supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'] != 'g')][['S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'E') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == ',') | (supplier['S_SUPPKEY'] != 44) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] < 4)][['S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 48)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] > 3) | (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 3938)].merge(supplier[(supplier['S_SUPPKEY'] > 146) & (supplier['S_ADDRESS'] != '2') | (supplier['S_ACCTBAL'] < 8184.613284534872) | (supplier['S_ACCTBAL'] < 2479.9385403883316)].merge(nation[(nation['N_NAME'] == 'C') | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] > 9)].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 11) & (partsupp['AVAILQTY'] != 4593) | (partsupp['P_COMMENT'] == 'f')].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 3) | (nation['N_REGIONKEY'] != 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 4968) & (partsupp['PS_SUPPKEY'] < 1058) & (partsupp['SUPPLYCOST'] <= 766.0689822401707) | (partsupp['PS_PARTKEY'] > 21) & (partsupp['PS_PARTKEY'] < 11)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 369.3823782881775) & (partsupp['PS_SUPPKEY'] >= 3329) | (partsupp['PS_PARTKEY'] <= 29) & (partsupp['PS_SUPPKEY'] < 5797) & (partsupp['AVAILQTY'] <= 5403)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 21) & (supplier['S_SUPPKEY'] < 59) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] > 1)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('2'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 'l') & (supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_ADDRESS'].str.startswith('q'))].merge(nation[(nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 11) & (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] > 12)].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['TOTALPRICE'] == 354431.11001603317)].merge(customer[(customer['C_ACCTBAL'] <= 1099.657220937901) & (customer['C_ACCTBAL'] == 4903.207669956256)].merge(nation[(nation['N_NATIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 23) | (nation['N_NATIONKEY'] != 11) & (nation['N_NATIONKEY'] <= 5)].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_CUSTKEY'] >= 25498) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_ACCTBAL'] > 8621.439022576982) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] > 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['TOTALPRICE'] >= 164462.51413073248) & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 4)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 30) | (partsupp['SUPPLYCOST'] < 336.3269370204249) | (partsupp['AVAILQTY'] > 5302) | (partsupp['SUPPLYCOST'] >= 149.17847634531523)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 5546)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '1') & (supplier['S_NAME'] == 'S')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] == 't')].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.07271739096328389) & (lineitem['TAX'] == 0.028055023462806066) | (lineitem['LINESTATUS'] == 'F')].merge(orders[(orders['O_CUSTKEY'] < 118534) | (orders['TOTALPRICE'] >= 148971.95052409844)][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] > 0.0037292646946543552) | (lineitem['L_ORDERKEY'] <= 155) | (lineitem['L_PARTKEY'] < 104774)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 46) | (partsupp['PS_SUPPKEY'] > 7260) | (partsupp['SUPPLYCOST'] == 608.2837012825357) | (partsupp['SUPPLYCOST'] <= 523.9041960385177) & (partsupp['PS_PARTKEY'] > 18)].merge(supplier.merge(nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'e') | (nation['N_NATIONKEY'] <= 12)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 30694.638660861372) & (lineitem['L_ORDERKEY'] < 64)].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] >= 22783) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '2-HIGH', '5-LOW'])) & (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] > 33541.866464508385)].merge(partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'n') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['EXTENDEDPRICE'] < 20234.63133584781) | (lineitem['L_COMMENT'].str.startswith('t'))][['SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_SUPPKEY'] >= 7398) | (partsupp['P_COMMENT'] == ' th') | (partsupp['PS_PARTKEY'] < 27)][['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 9) | (nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 15)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == 'c') | (lineitem['L_PARTKEY'] == 1223) | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 543.5045910956076)].merge(supplier[(supplier['S_COMMENT'] != 'the') | (supplier['S_NATIONKEY'] > 17)].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] < 4) & (nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 77765) & (lineitem['L_ORDERKEY'] < 61) | (lineitem['L_SUPPKEY'] != 9705) | (lineitem['SHIPMODE'] == 'SHIP')].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] > 1525.6467984136946) | (supplier['S_COMMENT'] == '!') | (supplier['S_COMMENT'] != 'j')].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'K')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 6104) | (lineitem['TAX'] > 0.06574109692523218) & (lineitem['L_SUPPKEY'] < 5267) & (lineitem['TAX'] <= 0.0745455672586336)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 17) & (partsupp['PS_PARTKEY'] >= 24)].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] >= 21) | (nation['N_NATIONKEY'] < 2) & (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['LINENUMBER'] < 1)].merge(partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] != 'h')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem[['L_SUPPKEY', 'SHIPMODE', 'COMMITDATE', 'LINENUMBER', 'DISCOUNT']].merge(partsupp[(partsupp['SUPPLYCOST'] != 881.2222908324726) | (partsupp['PS_PARTKEY'] > 21) | (partsupp['PS_PARTKEY'] < 21) & (partsupp['P_COMMENT'] != 'x') & (partsupp['AVAILQTY'] != 1983)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] == 19)][['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[['QUANTITY', 'RECEIPTDATE', 'L_PARTKEY', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 171.44861938253553) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 12) | (supplier['S_COMMENT'].str.startswith('.'))].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')