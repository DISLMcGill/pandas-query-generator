customer

lineitem

nation

orders

part

partsupp

region

supplier

customer[(customer['C_NATIONKEY'] != 8)]

customer[(customer['C_PHONE'] == '22-')]

customer[(customer['MKTSEGMENT'] == 'BUILDING')]

customer[['C_ACCTBAL']]

customer[['C_ADDRESS']]

customer[['C_COMMENT']]

customer[['C_NAME']]

customer[['C_PHONE']]

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27')]

lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'SHIP', 'MAIL', 'TRUCK', 'FOB', 'AIR', 'RAIL']))]

lineitem[['COMMITDATE']]

lineitem[['DISCOUNT']]

lineitem[['EXTENDEDPRICE']]

lineitem[['LINENUMBER']]

lineitem[['LINESTATUS']]

lineitem[['QUANTITY']]

nation[(nation['N_COMMENT'] != 'y')]

nation[(nation['N_COMMENT'] == 'l')]

nation[(nation['N_COMMENT'] == 'v')]

nation[(nation['N_NAME'] != 'A')]

nation[(nation['N_NATIONKEY'] != 16)]

nation[(nation['N_NATIONKEY'] <= 6)]

nation[['N_COMMENT']]

nation[['N_NAME']]

nation[['N_NATIONKEY']]

nation[['N_REGIONKEY']]

orders[(orders['ORDERDATE'] <= '1998-07-21')]

orders[(orders['ORDERSTATUS'].isin(['F']))]

orders[(orders['ORDERSTATUS'].isin(['P']))]

orders[(orders['TOTALPRICE'] != 173737.47390887715)]

orders[['ORDERDATE']]

orders[['ORDERSTATUS']]

orders[['O_COMMENT']]

orders[['O_ORDERKEY']]

orders[['SHIPPRIORITY']]

orders[['TOTALPRICE']]

part[(part['CONTAINER'] != 'LG')]

part[(part['CONTAINER'].str.startswith('LG'))]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4']))]

part[(part['PT_COMMENT'] == 'x')]

part[(part['PT_COMMENT'].str.startswith('a'))]

part[(part['PT_COMMENT'].str.startswith('l'))]

part[(part['PT_COMMENT'].str.startswith('m'))]

part[(part['P_NAME'].str.startswith('i'))]

part[(part['P_PARTKEY'] < 141)]

part[(part['RETAILPRICE'] >= 915.7093697200822)]

part[(part['SIZE'] != 47)]

part[(part['SIZE'] == 2)]

part[['CONTAINER']]

part[['MFGR']]

part[['PT_COMMENT']]

part[['P_NAME']]

part[['P_PARTKEY']]

part[['RETAILPRICE']]

part[['SIZE']]

part[['TYPE']]

partsupp[(partsupp['AVAILQTY'] != 2704)]

partsupp[(partsupp['AVAILQTY'] != 5319)]

partsupp[(partsupp['AVAILQTY'] != 5596)]

partsupp[(partsupp['PS_PARTKEY'] == 32)]

partsupp[(partsupp['PS_PARTKEY'] > 24)]

partsupp[(partsupp['P_COMMENT'] != 'x')]

partsupp[(partsupp['P_COMMENT'].str.startswith('u'))]

partsupp[['AVAILQTY']]

partsupp[['PS_PARTKEY']]

partsupp[['PS_SUPPKEY']]

partsupp[['P_COMMENT']]

partsupp[['SUPPLYCOST']]

region[(region['R_COMMENT'] != 'h')]

region[(region['R_COMMENT'] != 'l')]

region[(region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] == 'g')]

region[(region['R_COMMENT'] == 'h')]

region[(region['R_COMMENT'] == 'l')]

region[(region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('u'))]

region[(region['R_NAME'] != 'AME')]

region[(region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] != 'M')]

region[(region['R_NAME'] == 'A')]

region[(region['R_NAME'] == 'M')]

region[(region['R_NAME'].str.startswith('A'))]

region[(region['R_NAME'].str.startswith('AME'))]

region[(region['R_NAME'].str.startswith('ASI'))]

region[(region['R_NAME'].str.startswith('E'))]

region[(region['R_NAME'].str.startswith('M'))]

region[(region['R_REGIONKEY'] != 1)]

region[(region['R_REGIONKEY'] != 2)]

region[(region['R_REGIONKEY'] < 0)]

region[(region['R_REGIONKEY'] < 1)]

region[(region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] <= 0)]

region[(region['R_REGIONKEY'] <= 1)]

region[(region['R_REGIONKEY'] <= 2)]

region[(region['R_REGIONKEY'] <= 3)]

region[(region['R_REGIONKEY'] == 0)]

region[(region['R_REGIONKEY'] == 3)]

region[(region['R_REGIONKEY'] > 1)]

region[(region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] >= 1)]

region[(region['R_REGIONKEY'] >= 3)]

region[['R_COMMENT']]

region[['R_NAME']]

region[['R_REGIONKEY']]

supplier[(supplier['S_ADDRESS'] != 'x')]

supplier[(supplier['S_NAME'] != 'S')]

supplier[(supplier['S_NATIONKEY'] <= 2)]

supplier[(supplier['S_PHONE'] == '17-')]

supplier[(supplier['S_SUPPKEY'] <= 105)]

supplier[(supplier['S_SUPPKEY'] == 198)]

supplier[['S_ACCTBAL']]

supplier[['S_ADDRESS']]

supplier[['S_COMMENT']]

supplier[['S_NAME']]

supplier[['S_PHONE']]

supplier[['S_SUPPKEY']]

customer.groupby(by=['C_ADDRESS']).agg('count')

customer.groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

customer.groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer.groupby(by=['C_NATIONKEY']).agg('count')

customer.groupby(by=['C_PHONE']).agg('count')

customer.groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('g')) & (customer['C_ACCTBAL'] > -4.245191426775136)]

customer[(customer['C_COMMENT'] != 'a') | (customer['C_NATIONKEY'] != 14)]

customer[(customer['C_CUSTKEY'] > 8) | (customer['C_PHONE'] != '13-')]

customer[(customer['C_NATIONKEY'] != 11) | (customer['C_ADDRESS'] != 'U')]

customer[(customer['C_PHONE'] == '22-') | (customer['C_NAME'] == 'C')]

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] > 37)]

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_NATIONKEY'] == 0)]

customer[['C_ACCTBAL', 'C_PHONE']]

customer[['C_ADDRESS', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_ACCTBAL']]

customer[['C_COMMENT', 'C_ADDRESS']]

customer[['C_COMMENT', 'C_NAME']]

customer[['C_CUSTKEY', 'C_ADDRESS']]

customer[['C_NAME', 'C_CUSTKEY']]

customer[['C_NAME', 'MKTSEGMENT']]

customer[['C_NATIONKEY', 'C_NAME']]

customer[['C_PHONE', 'C_ACCTBAL']]

customer[['C_PHONE', 'C_ADDRESS']]

customer[['C_PHONE', 'C_COMMENT']]

customer[['C_PHONE', 'C_CUSTKEY']]

customer[['C_PHONE', 'C_NAME']]

customer[['MKTSEGMENT', 'C_NAME']]

customer[['MKTSEGMENT', 'C_PHONE']]

lineitem.groupby(by=['DISCOUNT']).agg('count')

lineitem.groupby(by=['LINENUMBER']).agg('sum', numeric_only=True)

lineitem.groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG']).agg('count')

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['LINENUMBER'] <= 2)]

lineitem[(lineitem['DISCOUNT'] < 0.09706310856877619) & (lineitem['QUANTITY'] >= 44)]

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPDATE'] > '1998-10-30')]

lineitem[['DISCOUNT', 'COMMITDATE']]

lineitem[['LINESTATUS', 'LINENUMBER']]

lineitem[['L_SUPPKEY', 'QUANTITY']]

lineitem[['RECEIPTDATE', 'QUANTITY']]

lineitem[['SHIPDATE', 'EXTENDEDPRICE']]

lineitem[['SHIPDATE', 'L_COMMENT']]

lineitem[['SHIPDATE', 'QUANTITY']]

lineitem[['SHIPDATE', 'SHIPMODE']]

lineitem[['SHIPINSTRUCT', 'EXTENDEDPRICE']]

lineitem[['SHIPINSTRUCT', 'LINENUMBER']]

lineitem[['SHIPINSTRUCT', 'RETURNFLAG']]

lineitem[['SHIPMODE', 'RETURNFLAG']]

lineitem[['TAX', 'QUANTITY']]

nation.groupby(by=['N_COMMENT']).agg('count')

nation.groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NAME']).agg('count')

nation.groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] == 't')]

nation[(nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] != 'h')]

nation[(nation['N_NAME'] == 'J') & (nation['N_NAME'] == 'S')]

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'].str.startswith('V'))]

nation[(nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] > 3)]

nation[(nation['N_NATIONKEY'] <= 14) & (nation['N_COMMENT'] != 'r')]

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] >= 20)]

nation[['N_COMMENT', 'N_NAME']]

nation[['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_REGIONKEY']]

nation[['N_NAME', 'N_COMMENT']]

nation[['N_NAME', 'N_NATIONKEY']]

nation[['N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_REGIONKEY']]

nation[['N_REGIONKEY', 'N_COMMENT']]

nation[['N_REGIONKEY', 'N_NAME']]

orders.groupby(by=['ORDERDATE']).agg('sum', numeric_only=True)

orders.groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders.groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders.groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders.groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

orders.groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'w')]

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['SHIPPRIORITY'] < 0)]

orders[['CLERK', 'ORDERSTATUS']]

orders[['CLERK', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_CUSTKEY']]

orders[['ORDERDATE', 'SHIPPRIORITY']]

orders[['ORDERPRIORITY', 'ORDERSTATUS']]

orders[['ORDERPRIORITY', 'O_COMMENT']]

orders[['O_ORDERKEY', 'ORDERDATE']]

orders[['O_ORDERKEY', 'ORDERSTATUS']]

orders[['SHIPPRIORITY', 'ORDERPRIORITY']]

orders[['SHIPPRIORITY', 'O_ORDERKEY']]

orders[['SHIPPRIORITY', 'TOTALPRICE']]

orders[['TOTALPRICE', 'O_COMMENT']]

part.groupby(by=['BRAND']).agg('count')

part.groupby(by=['BRAND']).agg('max', numeric_only=True)

part.groupby(by=['BRAND']).agg('min', numeric_only=True)

part.groupby(by=['BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('count')

part.groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR']).agg('count')

part.groupby(by=['MFGR']).agg('max', numeric_only=True)

part.groupby(by=['MFGR']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('count')

part.groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('count')

part.groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part.groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE']).agg('max', numeric_only=True)

part.groupby(by=['TYPE']).agg('count')

part.groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['BRAND'] == 'Brand#35')]

part[(part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] == 948.1147481878845)]

part[(part['MFGR'] != 'Manufacturer#3') & (part['MFGR'] != 'Manufacturer#3')]

part[(part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] <= 22)]

part[(part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#2')]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5'])) | (part['P_PARTKEY'] <= 61)]

part[(part['PT_COMMENT'] == 'k') & (part['TYPE'].str.startswith('STA'))]

part[(part['PT_COMMENT'] == 't') | (part['CONTAINER'] == 'WRAP')]

part[(part['P_NAME'] != 'bis') | (part['P_NAME'].str.startswith('a'))]

part[(part['P_NAME'] != 'lin') | (part['PT_COMMENT'] == 'd')]

part[(part['P_NAME'] == 'a') | (part['P_PARTKEY'] > 39)]

part[(part['P_NAME'] == 'w') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2']))]

part[(part['P_PARTKEY'] >= 80) | (part['CONTAINER'] == 'MED')]

part[(part['RETAILPRICE'] < 1039.8539895352756) | (part['RETAILPRICE'] <= 1009.3341236723073)]

part[(part['RETAILPRICE'] <= 1044.7819690453255) | (part['RETAILPRICE'] < 1062.8579078320859)]

part[(part['RETAILPRICE'] <= 948.6734675027437) | (part['P_PARTKEY'] >= 20)]

part[(part['SIZE'] > 15) | (part['RETAILPRICE'] != 1096.5164445753162)]

part[(part['SIZE'] >= 16) & (part['RETAILPRICE'] > 1034.8214754888006)]

part[(part['SIZE'] >= 29) & (part['CONTAINER'] != 'WRAP')]

part[(part['TYPE'] != 'S') | (part['SIZE'] <= 39)]

part[['BRAND', 'CONTAINER']]

part[['BRAND', 'PT_COMMENT']]

part[['CONTAINER', 'PT_COMMENT']]

part[['CONTAINER', 'SIZE']]

part[['MFGR', 'BRAND']]

part[['MFGR', 'PT_COMMENT']]

part[['MFGR', 'P_NAME']]

part[['MFGR', 'SIZE']]

part[['MFGR', 'TYPE']]

part[['PT_COMMENT', 'CONTAINER']]

part[['P_NAME', 'CONTAINER']]

part[['P_NAME', 'SIZE']]

part[['P_PARTKEY', 'CONTAINER']]

part[['P_PARTKEY', 'MFGR']]

part[['SIZE', 'BRAND']]

part[['SIZE', 'MFGR']]

part[['SIZE', 'RETAILPRICE']]

part[['TYPE', 'CONTAINER']]

part[['TYPE', 'MFGR']]

partsupp.groupby(by=['AVAILQTY']).agg('count')

partsupp.groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY']).agg('count')

partsupp.groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 6040) & (partsupp['AVAILQTY'] == 6535)]

partsupp[(partsupp['AVAILQTY'] > 7541) & (partsupp['PS_PARTKEY'] <= 4)]

partsupp[(partsupp['AVAILQTY'] >= 9020) & (partsupp['PS_SUPPKEY'] == 6836)]

partsupp[(partsupp['PS_PARTKEY'] < 23) | (partsupp['P_COMMENT'] == 't')]

partsupp[(partsupp['PS_PARTKEY'] >= 43) & (partsupp['AVAILQTY'] != 9562)]

partsupp[(partsupp['PS_SUPPKEY'] >= 65) & (partsupp['P_COMMENT'] != 'c')]

partsupp[(partsupp['P_COMMENT'] == 's') & (partsupp['PS_SUPPKEY'] == 106)]

partsupp[['AVAILQTY', 'PS_PARTKEY']]

partsupp[['AVAILQTY', 'P_COMMENT']]

partsupp[['AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'PS_PARTKEY']]

partsupp[['P_COMMENT', 'SUPPLYCOST']]

partsupp[['SUPPLYCOST', 'PS_PARTKEY']]

partsupp[['SUPPLYCOST', 'P_COMMENT']]

region.groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME']).agg('count')

region.groupby(by=['R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('count')

region.groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] != 2)]

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 2)]

region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'A')]

region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('A'))]

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 1)]

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 1)]

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'u')]

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('u'))]

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'AME')]

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 1)]

region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'ASI')]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] <= 0)]

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 3)]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'AME')]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'E')]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] == 'ASI')]

region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] != 'E') & (region['R_NAME'] != 'AME')]

region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'AME')]

region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'].str.startswith('g'))]

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'A')]

region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] <= 2)]

region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'g')]

region[(region['R_NAME'] == 'E') & (region['R_NAME'] == 'E')]

region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 0)]

region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'A')]

region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'A')]

region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] <= 1)]

region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'A')]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] > 0)]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] >= 2)]

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] == 2)]

region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] != 'g')]

region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] == 'h')]

region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'ASI')]

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] > 0)]

region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'ASI')]

region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'E')]

region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] == 0)]

region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'h')]

region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] != 1)]

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] != 'M')]

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'AME')]

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] == 0)]

region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] == 'g')]

region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('AFR'))]

region[['R_COMMENT', 'R_NAME']]

region[['R_COMMENT', 'R_REGIONKEY']]

region[['R_NAME', 'R_COMMENT']]

region[['R_NAME', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT']]

region[['R_REGIONKEY', 'R_NAME']]

supplier.groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier.groupby(by=['S_ADDRESS']).agg('count')

supplier.groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 1301.4385979645865) & (supplier['S_ACCTBAL'] <= 6269.875304130362)]

supplier[(supplier['S_SUPPKEY'] <= 53) | (supplier['S_ACCTBAL'] < 6270.4944666579695)]

supplier[['S_ACCTBAL', 'S_COMMENT']]

supplier[['S_ACCTBAL', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_PHONE']]

supplier[['S_ACCTBAL', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_NAME']]

supplier[['S_COMMENT', 'S_PHONE']]

supplier[['S_COMMENT', 'S_SUPPKEY']]

supplier[['S_NAME', 'S_ACCTBAL']]

supplier[['S_NAME', 'S_ADDRESS']]

supplier[['S_NAME', 'S_NATIONKEY']]

supplier[['S_NAME', 'S_PHONE']]

supplier[['S_NAME', 'S_SUPPKEY']]

supplier[['S_PHONE', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_ACCTBAL']]

supplier[['S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_SUPPKEY', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_PHONE']]

customer.groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('count')

customer.groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_COMMENT']).agg('count')

customer.groupby(by=['C_NATIONKEY', 'C_COMMENT']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['C_ACCTBAL'] >= 2562.9603482862735) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('v'))]

customer[(customer['C_COMMENT'] == 'o') | (customer['C_ACCTBAL'] <= 6657.596856525103) & (customer['C_ADDRESS'] == 'S')]

customer[(customer['C_CUSTKEY'] != 49) | (customer['C_NATIONKEY'] == 22) | (customer['C_NAME'] != 'C')]

customer[(customer['C_PHONE'] == '18-') & (customer['C_PHONE'] != '3') | (customer['C_NATIONKEY'] < 20)]

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']]

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE']]

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NAME']]

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']]

customer[['C_NAME', 'C_COMMENT', 'C_ADDRESS']]

customer[['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_PHONE', 'MKTSEGMENT', 'C_NAME']]

customer[['MKTSEGMENT', 'C_PHONE', 'C_NAME']]

lineitem.groupby(by=['COMMITDATE', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem.groupby(by=['QUANTITY', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'y') & (lineitem['L_PARTKEY'] != 164262) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE']))]

lineitem[['COMMITDATE', 'EXTENDEDPRICE', 'SHIPMODE']]

lineitem[['COMMITDATE', 'LINESTATUS', 'DISCOUNT']]

lineitem[['LINENUMBER', 'COMMITDATE', 'L_COMMENT']]

lineitem[['LINENUMBER', 'QUANTITY', 'SHIPMODE']]

lineitem[['LINESTATUS', 'RECEIPTDATE', 'DISCOUNT']]

lineitem[['L_COMMENT', 'SHIPDATE', 'TAX']]

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'L_ORDERKEY']]

lineitem[['RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY']]

lineitem[['RETURNFLAG', 'RECEIPTDATE', 'DISCOUNT']]

lineitem[['SHIPDATE', 'RECEIPTDATE', 'L_COMMENT']]

lineitem[['SHIPINSTRUCT', 'COMMITDATE', 'DISCOUNT']]

lineitem[['SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINENUMBER']]

lineitem[['TAX', 'DISCOUNT', 'SHIPMODE']]

lineitem[['TAX', 'LINENUMBER', 'L_PARTKEY']]

lineitem[['TAX', 'RECEIPTDATE', 'COMMITDATE']]

lineitem[['TAX', 'RECEIPTDATE', 'EXTENDEDPRICE']]

nation.groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

nation.groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] <= 3)]

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

orders.groupby(by=['ORDERDATE', 'SHIPPRIORITY']).agg('count')

orders.groupby(by=['O_COMMENT', 'ORDERPRIORITY']).agg('count')

orders.groupby(by=['O_ORDERKEY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['CLERK'] == 'C') | (orders['CLERK'].str.startswith('C'))]

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] >= 56) & (orders['ORDERDATE'] >= '1992-01-13')]

orders[(orders['O_COMMENT'] != 'uri') & (orders['O_COMMENT'] != 't') & (orders['TOTALPRICE'] <= 110134.73412519848)]

orders[(orders['O_CUSTKEY'] > 138030) & (orders['O_ORDERKEY'] <= 170) & (orders['ORDERSTATUS'] == 'P')]

orders[['CLERK', 'ORDERDATE', 'ORDERSTATUS']]

orders[['CLERK', 'O_COMMENT', 'ORDERSTATUS']]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']]

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK']]

orders[['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT']]

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS']]

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERDATE']]

orders[['SHIPPRIORITY', 'ORDERDATE', 'CLERK']]

orders[['TOTALPRICE', 'CLERK', 'ORDERDATE']]

orders[['TOTALPRICE', 'CLERK', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'ORDERPRIORITY', 'CLERK']]

orders[['TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT']]

part.groupby(by=['BRAND', 'PT_COMMENT']).agg('count')

part.groupby(by=['CONTAINER', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY']).agg('count')

part.groupby(by=['MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['P_NAME', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME']).agg('count')

part.groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_PARTKEY', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'PT_COMMENT']).agg('count')

part.groupby(by=['SIZE', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['SIZE', 'TYPE']).agg('count')

part.groupby(by=['SIZE', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'CONTAINER']).agg('count')

part.groupby(by=['TYPE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#13') & (part['PT_COMMENT'] == 'd') | (part['PT_COMMENT'] != 'q')]

part[(part['BRAND'].isin(['Brand#35', 'Brand#21', 'Brand#11'])) & (part['TYPE'].str.startswith('L')) & (part['CONTAINER'] == 'SM')]

part[(part['BRAND'].isin(['Brand#41', 'Brand#11', 'Brand#35'])) | (part['SIZE'] != 7) | (part['TYPE'] == 'L')]

part[(part['CONTAINER'] != 'MED') | (part['BRAND'] == 'Brand#13') & (part['BRAND'].isin(['Brand#31']))]

part[(part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] == 'm') | (part['SIZE'] < 34)]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] == 'c') & (part['CONTAINER'] == 'WRAP')]

part[(part['MFGR'] == 'Manufacturer#4') & (part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] == 1003.6208032586184)]

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] != 33)]

part[(part['PT_COMMENT'].str.startswith('a')) | (part['MFGR'] != 'Manufacturer#4') & (part['TYPE'] != 'E')]

part[(part['PT_COMMENT'].str.startswith('e')) | (part['CONTAINER'] != 'SM') | (part['P_PARTKEY'] != 190)]

part[(part['P_NAME'] == 'bis') | (part['P_PARTKEY'] == 12) & (part['TYPE'] != 'M')]

part[(part['P_NAME'].str.startswith('p')) | (part['P_PARTKEY'] < 93) | (part['PT_COMMENT'].str.startswith('!'))]

part[(part['P_PARTKEY'] < 1) & (part['BRAND'] == 'Brand#14') | (part['P_PARTKEY'] < 19)]

part[(part['P_PARTKEY'] <= 129) & (part['P_PARTKEY'] <= 130) | (part['RETAILPRICE'] < 1008.0620326724378)]

part[(part['P_PARTKEY'] > 27) & (part['RETAILPRICE'] > 1016.5211360739595) | (part['P_PARTKEY'] > 91)]

part[(part['RETAILPRICE'] != 963.8467238430858) & (part['P_PARTKEY'] > 10) | (part['TYPE'].str.startswith('P'))]

part[(part['RETAILPRICE'] < 1052.3521421054097) | (part['MFGR'].isin(['Manufacturer#3'])) & (part['TYPE'] != 'STA')]

part[(part['RETAILPRICE'] >= 1087.3382671195286) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1'])) | (part['BRAND'] != 'Brand#55')]

part[(part['SIZE'] != 18) | (part['RETAILPRICE'] > 1024.6770235483395) & (part['RETAILPRICE'] < 956.821023318158)]

part[(part['SIZE'] != 42) & (part['CONTAINER'] != 'JUMBO') | (part['TYPE'] == 'P')]

part[(part['SIZE'] > 41) | (part['BRAND'] != 'Brand#55') | (part['P_NAME'].str.startswith('o'))]

part[['BRAND', 'CONTAINER', 'P_PARTKEY']]

part[['BRAND', 'MFGR', 'P_PARTKEY']]

part[['CONTAINER', 'BRAND', 'MFGR']]

part[['CONTAINER', 'BRAND', 'PT_COMMENT']]

part[['CONTAINER', 'MFGR', 'SIZE']]

part[['CONTAINER', 'RETAILPRICE', 'P_PARTKEY']]

part[['MFGR', 'P_PARTKEY', 'P_NAME']]

part[['MFGR', 'SIZE', 'P_NAME']]

part[['MFGR', 'TYPE', 'PT_COMMENT']]

part[['MFGR', 'TYPE', 'RETAILPRICE']]

part[['PT_COMMENT', 'TYPE', 'P_NAME']]

part[['P_NAME', 'BRAND', 'PT_COMMENT']]

part[['P_NAME', 'CONTAINER', 'RETAILPRICE']]

part[['P_PARTKEY', 'CONTAINER', 'RETAILPRICE']]

part[['P_PARTKEY', 'TYPE', 'PT_COMMENT']]

part[['TYPE', 'P_NAME', 'PT_COMMENT']]

part[['TYPE', 'P_PARTKEY', 'PT_COMMENT']]

part[['TYPE', 'RETAILPRICE', 'P_PARTKEY']]

partsupp.groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5905) & (partsupp['PS_PARTKEY'] < 8) | (partsupp['PS_SUPPKEY'] != 4569)]

partsupp[(partsupp['PS_PARTKEY'] <= 13) | (partsupp['PS_SUPPKEY'] <= 4921) | (partsupp['P_COMMENT'] == ',')]

partsupp[(partsupp['PS_SUPPKEY'] >= 2889) & (partsupp['SUPPLYCOST'] != 131.8240680100724) | (partsupp['P_COMMENT'].str.startswith('h'))]

partsupp[(partsupp['SUPPLYCOST'] != 499.75346438783384) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['PS_PARTKEY'] < 10)]

partsupp[(partsupp['SUPPLYCOST'] > 504.6061920662918) | (partsupp['SUPPLYCOST'] != 914.8708422768984) & (partsupp['PS_SUPPKEY'] == 6909)]

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']]

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 1)]

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] < 2)]

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] < 0)]

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] != 1)]

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 3) | (region['R_NAME'] == 'AFR')]

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'A')]

region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] >= 3)]

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'g')]

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'u')]

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] < 2)]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 2)]

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'M')]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] == 1)]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] != 0)]

region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'u')]

region[(region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] > 0)]

region[(region['R_NAME'] != 'AME') & (region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'AME')]

region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] < 2)]

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'M')]

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] <= 0) & (region['R_NAME'] == 'M')]

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'h')]

region[(region['R_NAME'] == 'A') & (region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'ASI')]

region[(region['R_NAME'] == 'AME') & (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'l')]

region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('AFR'))]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'A')]

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 3) | (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] <= 3)]

region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('ASI'))]

region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'h')]

region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'A')]

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] <= 3)]

region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('E'))]

region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] >= 0) | (region['R_NAME'].str.startswith('E'))]

region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 0)]

region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME')]

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] == 1)]

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] != 3) & (region['R_NAME'] != 'AME')]

region[(region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] < 3)]

region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'A')]

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'u')]

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] < 2)]

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'u')]

region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('l'))]

region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 2)]

region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('E'))]

region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] != 'ASI') | (region['R_NAME'] == 'AFR')]

region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] == 'AME') | (region['R_NAME'].str.startswith('A'))]

region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] <= 2)]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

supplier.groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_ACCTBAL']).agg('count')

supplier.groupby(by=['S_ADDRESS', 'S_PHONE']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('min', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8486.88572890926) | (supplier['S_ACCTBAL'] == -135.26064019643013) & (supplier['S_NATIONKEY'] > 2)]

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] >= 8728.873468455833) & (supplier['S_PHONE'].str.startswith('28-'))]

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '2')]

supplier[(supplier['S_NATIONKEY'] < 10) | (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_NATIONKEY'] <= 3)]

supplier[(supplier['S_NATIONKEY'] >= 13) & (supplier['S_NATIONKEY'] > 12) | (supplier['S_NATIONKEY'] <= 12)]

supplier[(supplier['S_SUPPKEY'] <= 113) & (supplier['S_NATIONKEY'] != 21) | (supplier['S_NAME'] == 'S')]

supplier[(supplier['S_SUPPKEY'] <= 46) | (supplier['S_SUPPKEY'] > 190) | (supplier['S_NATIONKEY'] <= 22)]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME']]

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE']]

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']]

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL']]

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_NAME']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_COMMENT']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME']]

customer.groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

customer.groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 't')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'c')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 6)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 5541.171566111075) & (customer['C_ADDRESS'] != 'l') & (customer['C_CUSTKEY'] == 10) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING']))]

customer[(customer['C_ADDRESS'] == '8') & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_ACCTBAL'] != 1400.0639450421045) | (customer['C_NATIONKEY'] == 2)]

customer[(customer['C_ADDRESS'] == 'e') | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '18-')]

customer[(customer['C_COMMENT'] != 'e') & (customer['C_NATIONKEY'] < 19) | (customer['C_CUSTKEY'] >= 12) | (customer['C_PHONE'] == '1')]

customer[(customer['C_CUSTKEY'] != 37)][['C_ACCTBAL']]

customer[(customer['C_NATIONKEY'] < 7)][['C_PHONE']]

customer[(customer['C_NATIONKEY'] == 18)][['MKTSEGMENT']]

customer[(customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] <= 1773.3960526150258) & (customer['C_NATIONKEY'] >= 5) | (customer['C_COMMENT'].str.startswith(','))]

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] != 4076.122280572118) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'f')]

customer[['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_NAME']]

customer[['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']]

customer[['C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']]

customer[['C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']]

customer[['C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']]

customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']]

customer[['C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_NATIONKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']]

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']]

customer[['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']]

customer[['C_PHONE', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']]

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']]

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']]

lineitem.groupby(by=['LINENUMBER', 'DISCOUNT', 'L_COMMENT']).agg('max', numeric_only=True)

lineitem.groupby(by=['L_COMMENT', 'DISCOUNT', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['L_COMMENT', 'SHIPINSTRUCT', 'LINESTATUS']).agg('mean', numeric_only=True)

lineitem.groupby(by=['L_PARTKEY', 'DISCOUNT', 'SHIPMODE']).agg('count')

lineitem.groupby(by=['RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY']).agg('min', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG', 'DISCOUNT', 'TAX']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'v') | (lineitem['L_COMMENT'].str.startswith('lit')) | (lineitem['SHIPMODE'] == 'AIR') & (lineitem['COMMITDATE'] >= '1998-10-16')]

lineitem[(lineitem['L_ORDERKEY'] < 36)][['DISCOUNT']]

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30')][['SHIPINSTRUCT']]

lineitem[(lineitem['SHIPMODE'] != 'MAIL') & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['EXTENDEDPRICE'] != 2509.1586282723447) | (lineitem['LINESTATUS'] == 'F')]

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'MAIL', 'TRUCK']))][['DISCOUNT']]

lineitem[['COMMITDATE', 'RETURNFLAG', 'LINENUMBER', 'SHIPDATE']]

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'LINENUMBER', 'LINESTATUS']]

lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'SHIPDATE', 'QUANTITY']]

lineitem[['LINESTATUS', 'LINENUMBER', 'COMMITDATE', 'SHIPDATE']]

lineitem[['L_COMMENT', 'QUANTITY', 'SHIPDATE', 'LINESTATUS']]

lineitem[['QUANTITY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'L_ORDERKEY']]

lineitem[['RECEIPTDATE', 'RETURNFLAG', 'COMMITDATE', 'L_COMMENT']]

lineitem[['SHIPDATE', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT']]

lineitem[['SHIPINSTRUCT', 'TAX', 'RECEIPTDATE', 'EXTENDEDPRICE']]

nation.groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation.groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] != 'y') & (nation['N_NAME'] != 'F') & (nation['N_NAME'] == 'F')]

nation[(nation['N_NAME'] == 'S')][['N_COMMENT']]

nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] <= 12) | (nation['N_REGIONKEY'] == 2)]

nation[(nation['N_NATIONKEY'] == 13) & (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] >= 9) | (nation['N_NATIONKEY'] >= 11)]

nation[(nation['N_NATIONKEY'] >= 18) | (nation['N_NATIONKEY'] < 20) | (nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'S')]

nation[(nation['N_REGIONKEY'] != 1)][['N_REGIONKEY']]

nation[(nation['N_REGIONKEY'] < 0)][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 1)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] == 3)][['N_COMMENT']]

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']]

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']]

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

orders.groupby(by=['ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']).agg('max', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'CLERK', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'ORDERDATE', 'CLERK']).agg('count')

orders.groupby(by=['O_CUSTKEY', 'ORDERDATE', 'CLERK']).agg('mean', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'].isin(['P'])) & (orders['SHIPPRIORITY'] != 0)]

orders[['CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']]

orders[['ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK']]

orders[['O_COMMENT', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS']]

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERSTATUS']]

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[['SHIPPRIORITY', 'O_COMMENT', 'CLERK', 'ORDERSTATUS']]

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']]

orders[['TOTALPRICE', 'O_ORDERKEY', 'O_COMMENT', 'CLERK']]

orders[['TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']]

part.groupby(by=['BRAND', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'RETAILPRICE']).agg('count')

part.groupby(by=['CONTAINER', 'PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'RETAILPRICE', 'P_NAME']).agg('count')

part.groupby(by=['CONTAINER', 'TYPE', 'P_PARTKEY']).agg('count')

part.groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND']).agg('count')

part.groupby(by=['PT_COMMENT', 'P_NAME', 'TYPE']).agg('count')

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'RETAILPRICE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'MFGR', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'CONTAINER']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'SIZE', 'TYPE']).agg('count')

part.groupby(by=['P_PARTKEY', 'TYPE', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'BRAND', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'TYPE', 'P_PARTKEY']).agg('count')

part.groupby(by=['SIZE', 'BRAND', 'P_NAME']).agg('count')

part.groupby(by=['SIZE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'P_NAME', 'PT_COMMENT']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'P_PARTKEY', 'BRAND']).agg('count')

part.groupby(by=['SIZE', 'P_PARTKEY', 'MFGR']).agg('count')

part.groupby(by=['TYPE', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#33') & (part['BRAND'].isin(['Brand#33', 'Brand#35', 'Brand#32', 'Brand#41', 'Brand#42', 'Brand#54', 'Brand#31', 'Brand#21', 'Brand#55', 'Brand#11', 'Brand#53'])) | (part['PT_COMMENT'] == 'e') & (part['P_PARTKEY'] != 38)]

part[(part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'] != 'SM') | (part['SIZE'] >= 42) | (part['PT_COMMENT'] != 'w')]

part[(part['CONTAINER'] != 'LG') | (part['P_NAME'] == 'r') & (part['SIZE'] < 26) & (part['PT_COMMENT'] == 'l')]

part[(part['CONTAINER'] != 'WRAP') & (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] != 'Brand#43') & (part['CONTAINER'] == 'SM')]

part[(part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] > 79) | (part['SIZE'] <= 35) | (part['PT_COMMENT'] == 'x')]

part[(part['CONTAINER'] == 'SM') & (part['MFGR'] != 'Manufacturer#1') & (part['RETAILPRICE'] > 920.1341862064329) | (part['P_PARTKEY'] <= 31)]

part[(part['MFGR'] != 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#5'])) | (part['PT_COMMENT'] != 'd') | (part['MFGR'] != 'Manufacturer#5')]

part[(part['MFGR'] == 'Manufacturer#2') | (part['P_PARTKEY'] < 8) | (part['RETAILPRICE'] > 971.7534674364167) & (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['MFGR'] == 'Manufacturer#4')][['SIZE']]

part[(part['MFGR'] == 'Manufacturer#5') & (part['TYPE'].str.startswith('M')) | (part['BRAND'].isin(['Brand#42', 'Brand#22', 'Brand#23', 'Brand#24', 'Brand#33', 'Brand#53', 'Brand#35', 'Brand#51', 'Brand#45'])) & (part['CONTAINER'] != 'SM')]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1'])) & (part['BRAND'] == 'Brand#33') | (part['P_NAME'].str.startswith('r')) & (part['CONTAINER'].str.startswith('WRAP'))]

part[(part['PT_COMMENT'] != '!') | (part['BRAND'] == 'Brand#54') | (part['CONTAINER'] == 'JUMBO') | (part['SIZE'] == 14)]

part[(part['PT_COMMENT'] == 'u') | (part['P_NAME'].str.startswith('y')) | (part['BRAND'] == 'Brand#32') & (part['BRAND'] == 'Brand#24')]

part[(part['P_NAME'] == 'i') & (part['PT_COMMENT'].str.startswith('r')) | (part['BRAND'] != 'Brand#32') | (part['P_PARTKEY'] < 175)]

part[(part['P_NAME'] == 't') | (part['P_PARTKEY'] != 5) & (part['BRAND'] == 'Brand#13') | (part['SIZE'] == 43)]

part[(part['P_PARTKEY'] < 85) & (part['P_NAME'] != 'v') | (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] == 'P')]

part[(part['P_PARTKEY'] <= 76) | (part['P_NAME'] != 'y') | (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'] != 'WRAP')]

part[(part['RETAILPRICE'] != 1069.4655113040326) | (part['SIZE'] >= 33) & (part['BRAND'] == 'Brand#31') | (part['SIZE'] < 45)]

part[(part['RETAILPRICE'] == 1083.4065003363517) | (part['PT_COMMENT'].str.startswith('o')) | (part['P_NAME'] != 'y') & (part['P_NAME'].str.startswith('v'))]

part[(part['SIZE'] < 41) & (part['SIZE'] < 19) & (part['PT_COMMENT'].str.startswith(' fi')) & (part['RETAILPRICE'] < 1073.6135070752039)]

part[(part['SIZE'] <= 26) & (part['CONTAINER'] != 'WRAP') & (part['MFGR'] != 'Manufacturer#5') | (part['CONTAINER'] == 'SM')]

part[(part['SIZE'] > 9)][['MFGR']]

part[(part['TYPE'] == 'STA')][['TYPE']]

part[(part['TYPE'].str.startswith('P')) | (part['TYPE'].str.startswith('P')) & (part['TYPE'] == 'S') | (part['CONTAINER'] != 'JUMBO')]

part[['BRAND', 'P_NAME', 'P_PARTKEY', 'SIZE']]

part[['MFGR', 'SIZE', 'RETAILPRICE', 'CONTAINER']]

part[['P_PARTKEY', 'CONTAINER', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'P_NAME', 'TYPE', 'RETAILPRICE']]

part[['RETAILPRICE', 'MFGR', 'TYPE', 'CONTAINER']]

part[['SIZE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']]

part[['TYPE', 'MFGR', 'P_NAME', 'RETAILPRICE']]

partsupp.groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 4220)][['AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] > 2031) & (partsupp['PS_PARTKEY'] != 42) & (partsupp['P_COMMENT'].str.startswith('i')) | (partsupp['PS_PARTKEY'] < 28)]

partsupp[(partsupp['PS_PARTKEY'] > 41) | (partsupp['PS_PARTKEY'] > 43) | (partsupp['SUPPLYCOST'] >= 397.3877091678553) | (partsupp['SUPPLYCOST'] <= 212.04568769192235)]

partsupp[(partsupp['PS_PARTKEY'] >= 42) & (partsupp['PS_PARTKEY'] > 33) & (partsupp['AVAILQTY'] >= 2803) | (partsupp['AVAILQTY'] > 6931)]

partsupp[(partsupp['PS_SUPPKEY'] <= 4675)][['PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'] != 'y')][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] < 710.6812375582898) | (partsupp['PS_PARTKEY'] > 8) | (partsupp['PS_SUPPKEY'] >= 6012) | (partsupp['PS_SUPPKEY'] >= 1685)]

partsupp[(partsupp['SUPPLYCOST'] == 952.6515392043631)][['PS_SUPPKEY']]

partsupp[(partsupp['SUPPLYCOST'] >= 803.6158239601615)][['AVAILQTY']]

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']]

partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']]

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region.groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region.groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'h')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'u')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'u')][['R_NAME']]

region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME']]

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME']]

region[(region['R_NAME'] != 'A')][['R_NAME']]

region[(region['R_NAME'] != 'AME')][['R_NAME']]

region[(region['R_NAME'] != 'M')][['R_COMMENT']]

region[(region['R_NAME'] == 'AFR')][['R_NAME']]

region[(region['R_NAME'] == 'AME')][['R_REGIONKEY']]

region[(region['R_NAME'] == 'ASI')][['R_COMMENT']]

region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2)][['R_NAME']]

region[(region['R_REGIONKEY'] < 0)][['R_NAME']]

region[(region['R_REGIONKEY'] < 1)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 2)][['R_COMMENT']]

region[(region['R_REGIONKEY'] < 3)][['R_COMMENT']]

region[(region['R_REGIONKEY'] <= 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] <= 2)][['R_NAME']]

region[(region['R_REGIONKEY'] == 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 1)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 3)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 2)][['R_COMMENT']]

region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY']]

supplier.groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_PHONE', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 9103.89655708385) | (supplier['S_SUPPKEY'] < 27) | (supplier['S_SUPPKEY'] <= 103) & (supplier['S_COMMENT'] == 'k')]

supplier[(supplier['S_ADDRESS'] != 'G') | (supplier['S_ACCTBAL'] <= 9128.623689504702) | (supplier['S_NATIONKEY'] <= 16) | (supplier['S_ACCTBAL'] != 1583.444346617843)]

supplier[(supplier['S_ADDRESS'].str.startswith('g'))][['S_SUPPKEY']]

supplier[(supplier['S_COMMENT'] != '.')][['S_NAME']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] != 'v') & (supplier['S_SUPPKEY'] < 102)]

supplier[(supplier['S_NATIONKEY'] >= 6)][['S_ACCTBAL']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']]

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']]

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']]

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']]

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']]

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL']]

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']]

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']]

supplier[['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']]

customer.groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']).agg('min', numeric_only=True)

customer.groupby(by=['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer.groupby(by=['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer.groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ADDRESS'] == 'J')][['C_COMMENT']]

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT']]

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

customer[['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_ADDRESS', 'C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']]

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('count')

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[['C_COMMENT']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']]

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NAME']]

customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']]

customer[['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']]

customer[['C_NAME']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[['C_NAME']].groupby(by=['C_NAME']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']]

customer[['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']]

customer[['C_PHONE']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem.groupby(by=['COMMITDATE', 'L_SUPPKEY', 'L_ORDERKEY', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'LINENUMBER', 'SHIPINSTRUCT', 'LINESTATUS']).agg('sum', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE', 'L_ORDERKEY', 'LINENUMBER', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'COMMITDATE', 'L_ORDERKEY', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'L_PARTKEY', 'QUANTITY', 'L_SUPPKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['RECEIPTDATE', 'L_COMMENT', 'L_ORDERKEY', 'L_PARTKEY']).agg('count')

lineitem.groupby(by=['RECEIPTDATE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'QUANTITY']).agg('mean', numeric_only=True)

lineitem.groupby(by=['SHIPDATE', 'L_SUPPKEY', 'RECEIPTDATE', 'L_ORDERKEY']).agg('count')

lineitem.groupby(by=['SHIPDATE', 'RECEIPTDATE', 'TAX', 'L_ORDERKEY']).agg('max', numeric_only=True)

lineitem.merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] != 3)][['EXTENDEDPRICE', 'COMMITDATE']]

lineitem[(lineitem['LINENUMBER'] < 4) & (lineitem['L_PARTKEY'] > 98868) & (lineitem['LINESTATUS'] != 'F') & (lineitem['L_ORDERKEY'] >= 138) | (lineitem['TAX'] == 0.057696777476219)]

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['SHIPMODE'].isin(['FOB', 'MAIL'])) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_COMMENT'].str.startswith(' '))]

lineitem[(lineitem['LINESTATUS'] == 'O')][['COMMITDATE', 'SHIPMODE']]

lineitem[(lineitem['L_ORDERKEY'] != 73) | (lineitem['EXTENDEDPRICE'] != 70179.67900415428) | (lineitem['DISCOUNT'] >= 0.054551858198871185) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'REG AIR', 'RAIL', 'MAIL', 'TRUCK', 'AIR']))]

lineitem[(lineitem['L_ORDERKEY'] <= 30) | (lineitem['LINENUMBER'] > 6) & (lineitem['EXTENDEDPRICE'] >= 74721.53667575914) | (lineitem['L_SUPPKEY'] == 9962) & (lineitem['L_ORDERKEY'] < 150)]

lineitem[(lineitem['L_PARTKEY'] != 125717) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['L_COMMENT'] == ' ca') | (lineitem['TAX'] == 0.045173105540249864) & (lineitem['LINESTATUS'] == 'O')]

lineitem[(lineitem['L_PARTKEY'] != 180786)].groupby(by=['SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02')].groupby(by=['L_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02')][['COMMITDATE', 'RECEIPTDATE']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN'])) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['TAX'] < 0.018455943118248934) | (lineitem['L_ORDERKEY'] >= 70) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')]

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['RETURNFLAG'] != 'N')][['SHIPDATE']]

lineitem[['DISCOUNT', 'LINESTATUS', 'COMMITDATE', 'RETURNFLAG', 'RECEIPTDATE']]

lineitem[['DISCOUNT']].groupby(by=['DISCOUNT']).agg('max', numeric_only=True)

lineitem[['DISCOUNT']].groupby(by=['DISCOUNT']).agg('min', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'RECEIPTDATE', 'DISCOUNT', 'RETURNFLAG']]

lineitem[['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE', 'RETURNFLAG']]

lineitem[['LINENUMBER']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'DISCOUNT']]

lineitem[['LINESTATUS']].groupby(by=['LINESTATUS']).agg('max', numeric_only=True)

lineitem[['LINESTATUS']].groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

lineitem[['L_COMMENT', 'LINENUMBER', 'L_SUPPKEY', 'SHIPDATE', 'QUANTITY']]

lineitem[['L_COMMENT', 'L_PARTKEY', 'TAX', 'L_ORDERKEY', 'DISCOUNT']]

lineitem[['QUANTITY', 'COMMITDATE', 'EXTENDEDPRICE', 'DISCOUNT', 'TAX']]

lineitem[['QUANTITY', 'RECEIPTDATE', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']]

lineitem[['QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINESTATUS']]

lineitem[['QUANTITY']].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

lineitem[['RECEIPTDATE', 'TAX', 'SHIPDATE', 'L_COMMENT', 'QUANTITY']]

lineitem[['RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'DISCOUNT', 'RECEIPTDATE', 'SHIPMODE', 'RETURNFLAG']]

lineitem[['SHIPDATE']].groupby(by=['SHIPDATE']).agg('count')

lineitem[['SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['TAX']].groupby(by=['TAX']).agg('count')

nation.groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation.groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

nation.groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_COMMENT'] == 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] != 't')][['N_NAME']]

nation[(nation['N_COMMENT'] == 'y') | (nation['N_NAME'] != 'P')][['N_NAME']]

nation[(nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] < 10)][['N_COMMENT']]

nation[(nation['N_NAME'] == 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NAME'] == 'P')][['N_NAME']]

nation[(nation['N_NAME'].str.startswith('R'))].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 11) & (nation['N_COMMENT'] == 'l')][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] != 15) | (nation['N_COMMENT'] == 'u')][['N_NAME']]

nation[(nation['N_NATIONKEY'] != 23)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] <= 3)][['N_NAME']]

nation[(nation['N_NATIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] == 1)][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 13) | (nation['N_REGIONKEY'] == 3)][['N_COMMENT']]

nation[(nation['N_NATIONKEY'] == 22)].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_NATIONKEY'] >= 20)][['N_NAME']]

nation[(nation['N_REGIONKEY'] != 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 9)][['N_NAME']]

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] <= 1)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'I')][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3)][['N_NATIONKEY', 'N_COMMENT']]

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('count')

nation[['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['CLERK', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders.groupby(by=['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders.groupby(by=['ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_COMMENT']).agg('count')

orders.groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']).agg('sum', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 76274) | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] == 0)]

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] > 574) & (orders['O_COMMENT'].str.startswith('t'))]

orders[(orders['ORDERPRIORITY'] == '1-URGENT')][['SHIPPRIORITY', 'CLERK']]

orders[(orders['O_CUSTKEY'] == 133885) | (orders['O_CUSTKEY'] > 11220) | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] < 4423)]

orders[(orders['O_ORDERKEY'] < 763) & (orders['ORDERDATE'] <= '1992-01-13')][['O_COMMENT']]

orders[(orders['SHIPPRIORITY'] < 0)][['CLERK', 'O_COMMENT']]

orders[(orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] != 'i')]

orders[['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_COMMENT']]

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('count')

orders[['ORDERDATE']].groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']]

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY']].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('count')

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

orders[['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY']]

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE']]

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

part.groupby(by=['BRAND', 'TYPE', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'P_NAME', 'P_PARTKEY']).agg('count')

part.groupby(by=['MFGR', 'CONTAINER', 'P_NAME', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'SIZE', 'BRAND']).agg('count')

part.groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'SIZE', 'BRAND']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']).agg('count')

part.groupby(by=['MFGR', 'RETAILPRICE', 'P_NAME', 'CONTAINER']).agg('max', numeric_only=True)

part.groupby(by=['MFGR', 'RETAILPRICE', 'SIZE', 'BRAND']).agg('count')

part.groupby(by=['PT_COMMENT', 'MFGR', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER', 'BRAND', 'RETAILPRICE']).agg('count')

part.groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('count')

part.groupby(by=['P_PARTKEY', 'BRAND', 'SIZE', 'RETAILPRICE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'CONTAINER', 'P_NAME', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'BRAND']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'SIZE', 'TYPE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'P_NAME', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_NAME', 'TYPE', 'PT_COMMENT']).agg('count')

part.groupby(by=['RETAILPRICE', 'TYPE', 'CONTAINER', 'PT_COMMENT']).agg('count')

part.groupby(by=['SIZE', 'BRAND', 'MFGR', 'P_PARTKEY']).agg('count')

part.groupby(by=['SIZE', 'BRAND', 'P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

part.groupby(by=['SIZE', 'P_NAME', 'RETAILPRICE', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['SIZE', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME']).agg('count')

part.groupby(by=['TYPE', 'P_NAME', 'MFGR', 'BRAND']).agg('min', numeric_only=True)

part[(part['BRAND'] != 'Brand#13') | (part['P_PARTKEY'] < 6) & (part['P_NAME'] == 'i') | (part['RETAILPRICE'] > 1098.2101402105618) | (part['P_PARTKEY'] >= 82)]

part[(part['BRAND'] != 'Brand#44') & (part['BRAND'] != 'Brand#12')][['P_PARTKEY']]

part[(part['BRAND'] == 'Brand#41')][['TYPE', 'BRAND']]

part[(part['BRAND'].isin(['Brand#32', 'Brand#55', 'Brand#13', 'Brand#25', 'Brand#35', 'Brand#42', 'Brand#11', 'Brand#44', 'Brand#54', 'Brand#22', 'Brand#34', 'Brand#23', 'Brand#14', 'Brand#51', 'Brand#15'])) & (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] >= 909.7091540028501) | (part['SIZE'] != 39) | (part['RETAILPRICE'] <= 1035.6328839909079)]

part[(part['CONTAINER'] != 'JUMBO') | (part['P_NAME'].str.startswith('p')) | (part['CONTAINER'] == 'LG') | (part['P_NAME'] != 'o') & (part['TYPE'].str.startswith('SMA'))]

part[(part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] <= 105) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['SIZE'] < 4) | (part['BRAND'] != 'Brand#43')]

part[(part['CONTAINER'] == 'WRAP') | (part['SIZE'] < 24) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2'])) & (part['P_PARTKEY'] <= 170) & (part['P_NAME'].str.startswith('lin'))]

part[(part['MFGR'] != 'Manufacturer#3') | (part['BRAND'] == 'Brand#53') & (part['CONTAINER'] == 'JUMBO') & (part['SIZE'] != 22) & (part['P_PARTKEY'] > 88)]

part[(part['P_NAME'] != 'bis') | (part['CONTAINER'] == 'WRAP') & (part['TYPE'] != 'P') & (part['P_NAME'].str.startswith('s')) & (part['P_PARTKEY'] == 41)]

part[(part['P_NAME'] != 'cor') | (part['P_NAME'] == 'w') & (part['P_NAME'] != 'v') & (part['RETAILPRICE'] > 981.1336159001935) | (part['P_NAME'].str.startswith('f'))]

part[(part['P_NAME'] == 'f') | (part['RETAILPRICE'] <= 989.857937773436) | (part['TYPE'] != 'S') | (part['P_NAME'] != 'i') & (part['PT_COMMENT'] == 'q')]

part[(part['P_NAME'] == 't') & (part['BRAND'] == 'Brand#44') & (part['SIZE'] < 26) & (part['P_PARTKEY'] == 40) | (part['CONTAINER'] == 'MED')]

part[(part['P_NAME'] == 'v')][['BRAND', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('bis')) | (part['BRAND'] == 'Brand#24') | (part['RETAILPRICE'] < 910.0194916739894) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1']))]

part[(part['P_NAME'].str.startswith('i')) & (part['P_PARTKEY'] == 42) & (part['TYPE'] != 'M') & (part['PT_COMMENT'].str.startswith('w')) | (part['CONTAINER'] == 'WRAP')]

part[(part['P_PARTKEY'] < 132) & (part['P_PARTKEY'] < 109) | (part['SIZE'] != 35) & (part['BRAND'] == 'Brand#35') & (part['TYPE'] != 'SMA')]

part[(part['P_PARTKEY'] < 147) & (part['BRAND'].isin(['Brand#22', 'Brand#21', 'Brand#54', 'Brand#52', 'Brand#32', 'Brand#41', 'Brand#53', 'Brand#14', 'Brand#25', 'Brand#34', 'Brand#33', 'Brand#24', 'Brand#12', 'Brand#42', 'Brand#23'])) | (part['RETAILPRICE'] >= 1018.1124691772835) & (part['CONTAINER'] != 'WRAP') & (part['P_NAME'] == 'bis')]

part[(part['P_PARTKEY'] <= 120) | (part['CONTAINER'].str.startswith('LG')) | (part['RETAILPRICE'] == 929.1413250330361) | (part['P_PARTKEY'] != 194) | (part['PT_COMMENT'].str.startswith('e'))]

part[(part['RETAILPRICE'] < 1059.8262629534947)].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 936.0209823709267) | (part['CONTAINER'] == 'MED')][['SIZE']]

part[(part['RETAILPRICE'] >= 992.0832913664432) | (part['RETAILPRICE'] > 983.4168515535541) | (part['RETAILPRICE'] > 1012.4569701543164) & (part['PT_COMMENT'] != 'i') | (part['MFGR'] != 'Manufacturer#5')]

part[(part['SIZE'] != 33) | (part['BRAND'].isin(['Brand#55', 'Brand#11', 'Brand#21', 'Brand#15', 'Brand#31', 'Brand#24', 'Brand#33', 'Brand#54'])) & (part['SIZE'] < 22) | (part['SIZE'] < 16) & (part['PT_COMMENT'] != '!')]

part[(part['SIZE'] < 7) | (part['SIZE'] == 9)][['MFGR']]

part[(part['SIZE'] == 2) & (part['PT_COMMENT'].str.startswith('!')) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['PT_COMMENT'].str.startswith('kag')) & (part['PT_COMMENT'].str.startswith('a'))]

part[(part['SIZE'] > 1) & (part['RETAILPRICE'] > 993.5119569650196) & (part['TYPE'] == 'M') & (part['RETAILPRICE'] >= 979.61881663393) & (part['BRAND'] != 'Brand#15')]

part[(part['SIZE'] >= 43) & (part['TYPE'] == 'L') & (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] <= 84) & (part['PT_COMMENT'].str.startswith('o'))]

part[(part['TYPE'] != 'L') & (part['P_PARTKEY'] != 28) & (part['BRAND'].isin(['Brand#32', 'Brand#24', 'Brand#44', 'Brand#53', 'Brand#41', 'Brand#54', 'Brand#23', 'Brand#15', 'Brand#33', 'Brand#11', 'Brand#12', 'Brand#42', 'Brand#43', 'Brand#21', 'Brand#13', 'Brand#14', 'Brand#31'])) & (part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] > 144)]

part[(part['TYPE'] != 'P')].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('SMA'))][['P_PARTKEY', 'BRAND']]

part[['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER']]

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('count')

part[['CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']]

part[['MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'TYPE']]

part[['MFGR']].groupby(by=['MFGR']).agg('count')

part[['MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[['PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'TYPE']]

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('count')

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'BRAND']]

part[['P_NAME']].groupby(by=['P_NAME']).agg('count')

part[['P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'BRAND', 'CONTAINER', 'P_NAME', 'SIZE']]

part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'SIZE']]

part[['RETAILPRICE', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME']]

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['SIZE']].groupby(by=['SIZE']).agg('count')

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'P_NAME']]

part[['TYPE']].groupby(by=['TYPE']).agg('count')

part[['TYPE']].groupby(by=['TYPE']).agg('min', numeric_only=True)

part[['TYPE']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp.groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']).agg('count')

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['PT_COMMENT'] != 'q')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] <= 11) | (part['SIZE'] > 9)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] != 'STA') | (part['SIZE'] > 11)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 280.65987416750613)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 3729) & (partsupp['PS_SUPPKEY'] == 4189) | (partsupp['PS_PARTKEY'] >= 21) & (partsupp['SUPPLYCOST'] < 562.9503127876958) & (partsupp['SUPPLYCOST'] < 602.2535551673119)]

partsupp[(partsupp['AVAILQTY'] == 4328)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 17)][['AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] != 19) & (partsupp['P_COMMENT'] != 'n') | (partsupp['SUPPLYCOST'] > 427.5575415084193) & (partsupp['PS_PARTKEY'] != 9) | (partsupp['P_COMMENT'] == 'ly ')]

partsupp[(partsupp['PS_PARTKEY'] < 7) & (partsupp['SUPPLYCOST'] >= 53.597409497094205)][['AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] < 8) & (partsupp['AVAILQTY'] == 7021) & (partsupp['PS_PARTKEY'] < 33) | (partsupp['AVAILQTY'] < 3887) & (partsupp['AVAILQTY'] >= 3928)]

partsupp[(partsupp['PS_PARTKEY'] == 43) | (partsupp['PS_PARTKEY'] != 16)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] == 597)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'p')][['AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['SUPPLYCOST'] != 385.8958693170136) | (partsupp['PS_PARTKEY'] < 2) & (partsupp['PS_SUPPKEY'] >= 5931) & (partsupp['AVAILQTY'] == 2017) & (partsupp['SUPPLYCOST'] == 51.642427698482834)]

partsupp[(partsupp['SUPPLYCOST'] < 363.16616058789765)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 344.27676858876936) & (partsupp['AVAILQTY'] <= 5274)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] == 691.4232640197553)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 908.4954969750522)][['P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] > 259.68963835565836) | (partsupp['SUPPLYCOST'] == 232.93300005808786)][['P_COMMENT']]

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

partsupp[['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'l')].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'A')][['R_COMMENT']]

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'E')][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] >= 0)][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'M')][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'M')][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'E')][['R_COMMENT']]

region[(region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT']]

region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] == 'l')][['R_COMMENT']]

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'g')][['R_COMMENT']]

region[(region['R_NAME'] != 'ASI')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u')][['R_COMMENT']]

region[(region['R_NAME'] != 'E')].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'g')][['R_COMMENT']]

region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('AME'))][['R_NAME']]

region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] != 1)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'].str.startswith('AFR'))][['R_NAME']]

region[(region['R_REGIONKEY'] != 3)].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1)].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0)].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] != 0)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] != 'ASI')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 1)][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'ASI')][['R_NAME']]

region[(region['R_REGIONKEY'] >= 0)].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] == 1)][['R_COMMENT']]

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('count')

supplier.groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']).agg('mean', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 6263.187520143709) | (supplier['S_PHONE'] == '17-')][['S_PHONE']]

supplier[(supplier['S_COMMENT'] != 'd')].groupby(by=['S_SUPPKEY']).agg('count')

supplier[(supplier['S_COMMENT'] == 'al ') & (supplier['S_NAME'] != 'S')][['S_COMMENT']]

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '1')][['S_PHONE']]

supplier[(supplier['S_NATIONKEY'] <= 16)][['S_SUPPKEY', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] == 12) | (supplier['S_ACCTBAL'] == 5167.851576628754)][['S_ACCTBAL']]

supplier[(supplier['S_NATIONKEY'] >= 16) | (supplier['S_NAME'].str.startswith('S'))][['S_PHONE']]

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ADDRESS'].str.startswith('O'))][['S_ACCTBAL']]

supplier[(supplier['S_SUPPKEY'] < 135) | (supplier['S_PHONE'] != '28-')][['S_ACCTBAL']]

supplier[(supplier['S_SUPPKEY'] < 45)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 123)][['S_SUPPKEY', 'S_PHONE']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']]

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('count')

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_NAME']].groupby(by=['S_NAME']).agg('count')

supplier[['S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[['S_NAME']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[['S_PHONE']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']]

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer.groupby(by=['C_COMMENT', 'C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer.groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']).agg('sum', numeric_only=True)

customer.groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME']).agg('max', numeric_only=True)

customer.groupby(by=['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] < 12) & (nation['N_REGIONKEY'] < 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 9639.030146385827) | (customer['C_CUSTKEY'] == 67)][['MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_ACCTBAL'] >= 2271.62725460926) | (customer['C_ACCTBAL'] <= 1205.3809266165845)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('X'))][['C_NAME', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_COMMENT'] != 'f') & (customer['C_ADDRESS'] != 'o')][['C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'r') | (customer['C_ADDRESS'] != 'L') | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE'])) | (customer['C_CUSTKEY'] <= 39) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')]

customer[(customer['C_COMMENT'].str.startswith('p')) & (customer['C_COMMENT'].str.startswith('u'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 36) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'j') & (customer['C_CUSTKEY'] >= 13) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'] != 'x')]

customer[(customer['C_CUSTKEY'] >= 74) | (customer['C_CUSTKEY'] == 48) | (customer['C_NATIONKEY'] > 3)][['C_ACCTBAL']]

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 9509.734870804401) & (customer['C_CUSTKEY'] < 81) & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_PHONE'].str.startswith('3')) & (customer['C_COMMENT'] != 'd')]

customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_NATIONKEY'] != 7)][['C_CUSTKEY', 'C_NAME']]

customer[(customer['C_PHONE'] != '13-') & (customer['C_ACCTBAL'] == 9167.828015612391) & (customer['C_COMMENT'] == 'i') | (customer['C_ADDRESS'].str.startswith('w')) & (customer['C_ADDRESS'].str.startswith('P')) & (customer['C_ADDRESS'] != 'j')]

customer[(customer['C_PHONE'].str.startswith('3'))][['C_NAME', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] > 16)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']]

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT']]

customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']]

customer[['C_ACCTBAL', 'C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY']]

customer[['C_ADDRESS', 'C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']]

customer[['C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']]

customer[['C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']]

customer[['C_NAME', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_PHONE', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NAME']].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']]

lineitem.groupby(by=['EXTENDEDPRICE', 'L_SUPPKEY', 'LINESTATUS', 'RETURNFLAG', 'DISCOUNT']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINENUMBER', 'TAX', 'SHIPMODE', 'L_SUPPKEY', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem.groupby(by=['LINESTATUS', 'RETURNFLAG', 'DISCOUNT', 'SHIPDATE', 'LINENUMBER']).agg('sum', numeric_only=True)

lineitem.groupby(by=['RETURNFLAG', 'LINESTATUS', 'RECEIPTDATE', 'EXTENDEDPRICE', 'TAX']).agg('max', numeric_only=True)

lineitem.groupby(by=['SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE', 'RETURNFLAG', 'COMMITDATE']).agg('sum', numeric_only=True)

lineitem.groupby(by=['TAX', 'RECEIPTDATE', 'DISCOUNT', 'L_SUPPKEY', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

lineitem.merge(orders[['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 3558) & (partsupp['PS_SUPPKEY'] != 1645) | (partsupp['SUPPLYCOST'] <= 838.3048548735375)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 651.8498434862494) & (partsupp['PS_SUPPKEY'] == 536) | (partsupp['PS_PARTKEY'] < 22)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 31562.6513808084) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['L_ORDERKEY'] != 177) | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_ORDERKEY'] <= 144)]

lineitem[(lineitem['LINENUMBER'] < 6) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_PARTKEY'] >= 160378) & (lineitem['L_COMMENT'] != 'g') | (lineitem['TAX'] == 0.074775525311746) & (lineitem['EXTENDEDPRICE'] <= 14234.759627160953)]

lineitem[(lineitem['LINENUMBER'] >= 6) | (lineitem['DISCOUNT'] == 0.007671439163742567) & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['DISCOUNT'] != 0.01527189579489956)]

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_ORDERKEY'] <= 107) & (lineitem['LINENUMBER'] >= 3) & (lineitem['TAX'] == 0.05130622061520329) | (lineitem['L_SUPPKEY'] == 6976) | (lineitem['DISCOUNT'] == 0.08708691290470712)]

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_PARTKEY'] == 3975)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN', 'NONE'])) & (lineitem['RETURNFLAG'].isin(['A', 'N']))][['TAX', 'QUANTITY']]

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'TRUCK', 'FOB', 'REG AIR']))].groupby(by=['QUANTITY', 'L_PARTKEY']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'LINESTATUS']].groupby(by=['COMMITDATE']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'LINENUMBER', 'SHIPMODE', 'LINESTATUS']]

lineitem[['EXTENDEDPRICE', 'LINESTATUS']].groupby(by=['EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY']].groupby(by=['EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY', 'LINESTATUS', 'DISCOUNT', 'RETURNFLAG']]

lineitem[['L_PARTKEY', 'DISCOUNT', 'EXTENDEDPRICE', 'TAX', 'SHIPINSTRUCT', 'L_SUPPKEY']]

lineitem[['L_SUPPKEY', 'SHIPDATE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'SHIPDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'RETURNFLAG', 'EXTENDEDPRICE']]

lineitem[['QUANTITY', 'SHIPDATE', 'RETURNFLAG', 'COMMITDATE', 'L_SUPPKEY', 'TAX']]

lineitem[['RETURNFLAG', 'RECEIPTDATE']].groupby(by=['RETURNFLAG']).agg('count')

lineitem[['SHIPDATE', 'L_COMMENT', 'LINESTATUS', 'COMMITDATE', 'QUANTITY', 'SHIPINSTRUCT']]

lineitem[['SHIPDATE', 'L_ORDERKEY']].groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'QUANTITY']].groupby(by=['SHIPDATE']).agg('max', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'EXTENDEDPRICE', 'RETURNFLAG', 'DISCOUNT']]

lineitem[['SHIPINSTRUCT', 'SHIPDATE']].groupby(by=['SHIPDATE']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 1) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'E') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] == 'AFR') | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'].str.startswith('A')) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'l')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] >= 2)][['N_NAME', 'N_COMMENT']]

nation[(nation['N_COMMENT'].str.startswith('o'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] > 0)][['N_NAME']]

nation[(nation['N_NAME'] != 'G') & (nation['N_COMMENT'] == ' ')][['N_NAME', 'N_COMMENT']]

nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'A')][['N_COMMENT']]

nation[(nation['N_NAME'] == 'F') | (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'M')][['N_NAME']]

nation[(nation['N_NAME'].str.startswith('R'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] != 6) | (nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_NAME'] != 'F') & (nation['N_NATIONKEY'] < 0)][['N_NAME']]

nation[(nation['N_NATIONKEY'] > 15)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 14)][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('I'))].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'P')][['N_COMMENT', 'N_NATIONKEY']]

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'O_COMMENT']).agg('mean', numeric_only=True)

orders.groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders.groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK']).agg('mean', numeric_only=True)

orders.merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')][['CLERK', 'TOTALPRICE', 'O_COMMENT']]

orders[(orders['O_COMMENT'] != 'uri') & (orders['ORDERSTATUS'] == 'F')][['TOTALPRICE', 'O_CUSTKEY']]

orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] < 67687)][['SHIPPRIORITY', 'O_CUSTKEY']]

orders[(orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] > 69258.90704085867)][['ORDERPRIORITY', 'TOTALPRICE']]

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] == 'uri') & (orders['O_CUSTKEY'] <= 132605) | (orders['O_ORDERKEY'] == 337)]

orders[(orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'CLERK', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] < 0)].groupby(by=['CLERK']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 62813.01691426256) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] == 211) & (orders['CLERK'].str.startswith('C'))]

orders[['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']]

orders[['CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']]

orders[['ORDERDATE', 'CLERK']].groupby(by=['ORDERDATE']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_COMMENT']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']]

orders[['ORDERSTATUS', 'O_CUSTKEY']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'CLERK']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'CLERK']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY']]

orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']]

orders[['O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

part.groupby(by=['BRAND', 'MFGR', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part.groupby(by=['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'BRAND', 'P_NAME', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY', 'P_NAME', 'SIZE']).agg('min', numeric_only=True)

part.groupby(by=['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['CONTAINER', 'RETAILPRICE', 'BRAND', 'SIZE', 'TYPE']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'PT_COMMENT', 'P_NAME', 'BRAND', 'TYPE']).agg('count')

part.groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']).agg('min', numeric_only=True)

part.groupby(by=['MFGR', 'P_NAME', 'SIZE', 'BRAND', 'RETAILPRICE']).agg('sum', numeric_only=True)

part.groupby(by=['MFGR', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'SIZE', 'TYPE']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'SIZE', 'MFGR']).agg('count')

part.groupby(by=['PT_COMMENT', 'RETAILPRICE', 'BRAND', 'SIZE', 'P_NAME']).agg('mean', numeric_only=True)

part.groupby(by=['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'CONTAINER', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

part.groupby(by=['P_NAME', 'PT_COMMENT', 'MFGR', 'TYPE', 'BRAND']).agg('count')

part.groupby(by=['P_NAME', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'SIZE']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['RETAILPRICE', 'SIZE', 'TYPE', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part.groupby(by=['SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR']).agg('min', numeric_only=True)

part.groupby(by=['SIZE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

part.groupby(by=['TYPE', 'MFGR', 'RETAILPRICE', 'BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

part.groupby(by=['TYPE', 'PT_COMMENT', 'BRAND', 'P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'BRAND']).agg('max', numeric_only=True)

part.groupby(by=['TYPE', 'SIZE', 'BRAND', 'MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#43') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) | (part['BRAND'] != 'Brand#21') & (part['SIZE'] == 48) & (part['SIZE'] <= 10) & (part['PT_COMMENT'] == 'p')]

part[(part['BRAND'] != 'Brand#51') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1']))][['P_PARTKEY', 'RETAILPRICE']]

part[(part['BRAND'] == 'Brand#24') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] >= 33) & (part['SIZE'] == 12) & (part['BRAND'].isin(['Brand#42', 'Brand#54', 'Brand#33', 'Brand#41', 'Brand#12', 'Brand#14', 'Brand#11', 'Brand#55', 'Brand#24', 'Brand#21']))]

part[(part['BRAND'] == 'Brand#42')].groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#51') & (part['RETAILPRICE'] <= 981.8573914620938) & (part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] != 26) | (part['SIZE'] == 18) & (part['SIZE'] >= 17)]

part[(part['BRAND'] == 'Brand#53') & (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] <= 922.1074716434744) | (part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] != 1056.559859498036) & (part['TYPE'].str.startswith('S'))]

part[(part['CONTAINER'] != 'MED')].groupby(by=['TYPE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') & (part['CONTAINER'] == 'JUMBO') & (part['P_PARTKEY'] < 119) & (part['RETAILPRICE'] < 1034.948820029993) & (part['SIZE'] <= 19) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4']))]

part[(part['PT_COMMENT'] != 'k')].groupby(by=['P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] == 'k')].groupby(by=['PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 's') & (part['P_NAME'] == 'b') & (part['BRAND'].isin(['Brand#31', 'Brand#12', 'Brand#45', 'Brand#33', 'Brand#23', 'Brand#11', 'Brand#24', 'Brand#54', 'Brand#14', 'Brand#22', 'Brand#21', 'Brand#51', 'Brand#35', 'Brand#44', 'Brand#34', 'Brand#13', 'Brand#15'])) & (part['PT_COMMENT'] != 'i') & (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] > 141)]

part[(part['P_NAME'].str.startswith('w')) & (part['SIZE'] <= 5) | (part['SIZE'] != 28) | (part['P_NAME'] != 'o') | (part['SIZE'] >= 5) | (part['SIZE'] == 21)]

part[(part['P_PARTKEY'] != 17) & (part['P_PARTKEY'] <= 175) | (part['P_NAME'].str.startswith('v')) | (part['RETAILPRICE'] != 1082.1133028780232) & (part['SIZE'] < 48) | (part['P_NAME'] != 'v')]

part[(part['P_PARTKEY'] <= 38) | (part['TYPE'] != 'P') | (part['RETAILPRICE'] <= 1076.1995706847636) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['SIZE'] > 15) & (part['P_PARTKEY'] < 123)]

part[(part['P_PARTKEY'] <= 9) & (part['P_PARTKEY'] <= 18) & (part['BRAND'].isin(['Brand#35', 'Brand#14', 'Brand#54', 'Brand#51', 'Brand#24', 'Brand#31', 'Brand#33', 'Brand#25', 'Brand#23', 'Brand#53', 'Brand#42', 'Brand#45', 'Brand#32', 'Brand#44', 'Brand#22', 'Brand#41', 'Brand#15', 'Brand#55', 'Brand#11', 'Brand#43', 'Brand#13', 'Brand#21', 'Brand#52', 'Brand#12', 'Brand#34'])) | (part['P_NAME'] != 'y') & (part['SIZE'] == 13) & (part['RETAILPRICE'] >= 902.1827195601782)]

part[(part['P_PARTKEY'] == 141) | (part['BRAND'] != 'Brand#51') | (part['P_PARTKEY'] == 29) | (part['BRAND'].isin(['Brand#41', 'Brand#21', 'Brand#25', 'Brand#22', 'Brand#33', 'Brand#15', 'Brand#11', 'Brand#52', 'Brand#23', 'Brand#51', 'Brand#31', 'Brand#53', 'Brand#24', 'Brand#34'])) & (part['P_PARTKEY'] < 24) & (part['P_NAME'] == 't')]

part[(part['P_PARTKEY'] == 34)][['P_NAME', 'PT_COMMENT', 'MFGR']]

part[(part['P_PARTKEY'] >= 104)].groupby(by=['SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] >= 145) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5']))][['BRAND', 'TYPE']]

part[(part['P_PARTKEY'] >= 152) & (part['P_PARTKEY'] >= 98) & (part['PT_COMMENT'].str.startswith('t')) & (part['CONTAINER'].str.startswith('MED')) | (part['SIZE'] < 13) & (part['P_NAME'] != 'r')]

part[(part['P_PARTKEY'] >= 170) & (part['P_NAME'] != 'blu')].groupby(by=['BRAND']).agg('count')

part[(part['RETAILPRICE'] < 1050.3066278689857) | (part['PT_COMMENT'] == 'o')].groupby(by=['RETAILPRICE']).agg('count')

part[(part['SIZE'] != 22) & (part['SIZE'] < 43) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) & (part['BRAND'].isin(['Brand#45', 'Brand#35', 'Brand#33', 'Brand#11', 'Brand#13', 'Brand#32', 'Brand#42', 'Brand#52', 'Brand#44'])) | (part['RETAILPRICE'] >= 1083.1873971174014) & (part['BRAND'].isin(['Brand#52', 'Brand#53', 'Brand#15', 'Brand#34', 'Brand#21', 'Brand#11', 'Brand#22', 'Brand#14', 'Brand#35', 'Brand#41', 'Brand#54', 'Brand#24', 'Brand#43', 'Brand#31']))]

part[(part['TYPE'] != 'STA') & (part['P_NAME'].str.startswith('a')) & (part['RETAILPRICE'] != 927.3516597680982) & (part['P_PARTKEY'] < 97) | (part['RETAILPRICE'] <= 1090.2745983814436) & (part['CONTAINER'].str.startswith('LG'))]

part[(part['TYPE'] != 'STA') & (part['SIZE'] > 4) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'] != 'SM') | (part['RETAILPRICE'] != 952.5707822482905) & (part['P_PARTKEY'] > 33)]

part[(part['TYPE'].str.startswith('S')) & (part['CONTAINER'] != 'SM') & (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'].isin(['Brand#23', 'Brand#31', 'Brand#24', 'Brand#35', 'Brand#51', 'Brand#54', 'Brand#44', 'Brand#45', 'Brand#14', 'Brand#33', 'Brand#34', 'Brand#42', 'Brand#52', 'Brand#12', 'Brand#55', 'Brand#53'])) & (part['SIZE'] == 1) | (part['SIZE'] >= 16)]

part[['BRAND', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']]

part[['BRAND', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'TYPE']]

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'PT_COMMENT', 'SIZE']]

part[['CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE', 'BRAND']]

part[['MFGR', 'SIZE']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[['PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[['P_NAME', 'BRAND', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']]

part[['P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'PT_COMMENT']]

part[['P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']]

part[['P_NAME', 'RETAILPRICE']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['P_NAME', 'SIZE']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'BRAND', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']]

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'SIZE']]

part[['P_PARTKEY', 'SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[['RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']]

part[['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME']]

part[['RETAILPRICE', 'SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'BRAND']]

part[['SIZE', 'CONTAINER']].groupby(by=['SIZE']).agg('count')

part[['SIZE', 'TYPE']].groupby(by=['TYPE']).agg('min', numeric_only=True)

part[['TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'SIZE']]

part[['TYPE', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'P_NAME', 'PT_COMMENT']]

part[['TYPE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'SIZE', 'CONTAINER']]

part[['TYPE', 'SIZE']].groupby(by=['TYPE']).agg('count')

partsupp.groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp.groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp.groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('count')

partsupp.merge(part[(part['RETAILPRICE'] != 942.6076941026693) | (part['TYPE'] == 'STA') | (part['P_NAME'] != 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] != 'P') | (part['RETAILPRICE'] > 1081.337495039378) | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 2962)].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 3894) & (partsupp['AVAILQTY'] >= 2410)][['PS_SUPPKEY', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] < 24) & (partsupp['SUPPLYCOST'] < 976.3466536940077)][['PS_PARTKEY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_PARTKEY'] <= 28) | (partsupp['SUPPLYCOST'] >= 410.7755593348171)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] == 47) | (partsupp['PS_SUPPKEY'] <= 987)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 1913) | (partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['PS_SUPPKEY'] >= 3171)][['SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] <= 5484) | (partsupp['PS_PARTKEY'] > 12)][['SUPPLYCOST', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_SUPPKEY'] > 1506) & (partsupp['AVAILQTY'] <= 5429)][['P_COMMENT', 'PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'] != 'bli')][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'] == 'r') & (partsupp['PS_SUPPKEY'] == 2768)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'u')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['P_COMMENT'] != ' th')][['PS_PARTKEY', 'P_COMMENT']]

partsupp[(partsupp['P_COMMENT'].str.startswith('y'))][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] == 196.22943545526758) & (partsupp['PS_SUPPKEY'] > 2526) | (partsupp['PS_PARTKEY'] != 4)][['P_COMMENT']]

partsupp[(partsupp['SUPPLYCOST'] > 404.01625872164067) | (partsupp['PS_PARTKEY'] >= 48) & (partsupp['PS_SUPPKEY'] > 3915)][['AVAILQTY']]

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'AFR')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] == 0)][['R_COMMENT']]

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AME')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'u')].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'ASI')][['R_NAME']]

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'g')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'h')].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('A'))].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] <= 2)].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'u')][['R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 3)].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'A')][['R_REGIONKEY']]

region[(region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'ASI')].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 1)][['R_COMMENT']]

region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] < 0)][['R_COMMENT']]

region[(region['R_NAME'] != 'M') & (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] != 0)][['R_REGIONKEY']]

region[(region['R_NAME'] == 'AFR') & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] >= 3)][['R_NAME']]

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'AME')].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'l')].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'M')][['R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 2) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT']]

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] > 0)].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 1)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'u')][['R_NAME']]

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] >= 1)][['R_COMMENT']]

region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 2)][['R_NAME']]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'M') | (region['R_REGIONKEY'] != 2)][['R_NAME']]

region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'u')].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.groupby(by=['S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY']).agg('count')

supplier.groupby(by=['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier.groupby(by=['S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier.groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] < 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] != 'A') | (nation['N_COMMENT'] == 't')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 6156.29948587379) | (supplier['S_SUPPKEY'] >= 4) & (supplier['S_ACCTBAL'] != 9379.047845767447) | (supplier['S_SUPPKEY'] <= 76) & (supplier['S_NATIONKEY'] > 9) & (supplier['S_COMMENT'] == 'g')]

supplier[(supplier['S_ADDRESS'] != 'a')][['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 30)][['S_NAME']]

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 15) & (supplier['S_ADDRESS'] != 'U')][['S_NAME']]

supplier[(supplier['S_NATIONKEY'] != 22) & (supplier['S_ACCTBAL'] != 2973.655483305256) & (supplier['S_NATIONKEY'] >= 4) | (supplier['S_ADDRESS'].str.startswith('5')) | (supplier['S_ACCTBAL'] >= 9082.637096922577) & (supplier['S_NAME'].str.startswith('S'))]

supplier[(supplier['S_NATIONKEY'] < 11) & (supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] <= 5) | (supplier['S_ADDRESS'].str.startswith('h'))][['S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] > 4) & (supplier['S_NATIONKEY'] <= 20)][['S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] > 5) | (supplier['S_COMMENT'].str.startswith('l'))][['S_NAME', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']]

supplier[['S_ADDRESS', 'S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']]

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 9)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 3206.6019560265086) & (customer['C_ACCTBAL'] == 3016.6081410959955) & (customer['C_CUSTKEY'] >= 99) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD']))][['C_NAME']]

customer[(customer['C_ACCTBAL'] <= 5829.666717157191) | (customer['C_ADDRESS'] == 'a') | (customer['C_CUSTKEY'] == 17)][['C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] <= 8950.95521766439) & (customer['C_CUSTKEY'] > 89) & (customer['C_NATIONKEY'] >= 7)][['MKTSEGMENT', 'C_ACCTBAL']]

customer[(customer['C_ACCTBAL'] >= 3498.0707648771113)].groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'f') & (customer['C_CUSTKEY'] == 10) | (customer['C_CUSTKEY'] <= 83)][['C_CUSTKEY', 'C_NAME']]

customer[(customer['C_COMMENT'].str.startswith('n'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 21)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] < 20)][['C_NAME', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] < 22) & (customer['C_PHONE'] != '1')].groupby(by=['C_NATIONKEY', 'C_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] < 5) | (customer['C_COMMENT'] == 'q') & (customer['C_NATIONKEY'] >= 13) & (customer['C_COMMENT'] != 'f') | (customer['C_CUSTKEY'] >= 92) & (customer['C_CUSTKEY'] > 4) & (customer['C_NATIONKEY'] < 8)]

customer[(customer['C_NATIONKEY'] <= 7) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE'])) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C')][['C_COMMENT']]

customer[(customer['C_NATIONKEY'] <= 8)][['C_COMMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']]

customer[(customer['C_PHONE'] == '25-') | (customer['C_COMMENT'] == 't')][['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']]

customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_COMMENT'] != 't') | (customer['C_PHONE'] == '1') & (customer['C_COMMENT'].str.startswith('k')) & (customer['C_ACCTBAL'] <= 2945.1157851884686) & (customer['C_PHONE'] == '2') & (customer['C_ADDRESS'] == '4')]

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']]

customer[['C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']]

customer[['C_ACCTBAL', 'C_PHONE']].groupby(by=['C_ACCTBAL', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']]

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']]

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('count')

customer[['C_COMMENT', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_COMMENT']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']]

customer[['C_NATIONKEY', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_NATIONKEY', 'C_PHONE', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_PHONE']].groupby(by=['C_PHONE', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT']).agg('count')

customer[['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('count')

lineitem.merge(orders[(orders['CLERK'] != 'C')][['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 11739.625178296088)].merge(partsupp[(partsupp['P_COMMENT'] == 'p')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] != 3) & (lineitem['L_ORDERKEY'] == 137)][['DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']]

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['L_PARTKEY'] <= 89363) | (lineitem['L_COMMENT'] != ',') & (lineitem['LINENUMBER'] != 6)][['DISCOUNT']]

lineitem[(lineitem['L_COMMENT'] != 'j') | (lineitem['L_SUPPKEY'] <= 8063)][['RECEIPTDATE', 'EXTENDEDPRICE', 'RETURNFLAG']]

lineitem[(lineitem['L_ORDERKEY'] > 173) | (lineitem['LINENUMBER'] < 5)][['COMMITDATE', 'EXTENDEDPRICE', 'SHIPDATE']]

lineitem[(lineitem['L_PARTKEY'] == 181045) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['LINENUMBER'] >= 6) | (lineitem['RETURNFLAG'] == 'N') & (lineitem['QUANTITY'] != 37) & (lineitem['L_COMMENT'] == ' ') | (lineitem['QUANTITY'] >= 45)]

lineitem[(lineitem['L_PARTKEY'] > 184329) | (lineitem['DISCOUNT'] >= 0.03822184993503963) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['TAX'] < 0.07325885325664794) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['RETURNFLAG'] != 'N')]

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['EXTENDEDPRICE'] != 17422.096750469467)].groupby(by=['QUANTITY']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['EXTENDEDPRICE'] == 3408.7236860685616) & (lineitem['SHIPMODE'] != 'SHIP')][['EXTENDEDPRICE', 'LINESTATUS']]

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')].groupby(by=['RETURNFLAG', 'RECEIPTDATE', 'COMMITDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_ORDERKEY'] < 12) | (lineitem['TAX'] < 0.07339274262585091) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['RETURNFLAG'] != 'N')]

lineitem[(lineitem['SHIPMODE'].isin(['RAIL', 'AIR', 'REG AIR', 'TRUCK', 'FOB']))][['EXTENDEDPRICE', 'COMMITDATE', 'LINENUMBER', 'TAX']]

lineitem[(lineitem['TAX'] > 0.022479201226282476)].groupby(by=['QUANTITY', 'COMMITDATE', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['DISCOUNT', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPDATE', 'RETURNFLAG', 'SHIPMODE', 'L_COMMENT']]

lineitem[['DISCOUNT', 'LINESTATUS', 'LINENUMBER', 'L_ORDERKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'QUANTITY']]

lineitem[['EXTENDEDPRICE', 'TAX', 'L_ORDERKEY']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[['EXTENDEDPRICE', 'TAX', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY', 'COMMITDATE', 'RETURNFLAG']]

lineitem[['EXTENDEDPRICE', 'TAX', 'RETURNFLAG', 'SHIPDATE', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT']]

lineitem[['LINENUMBER', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'LINENUMBER']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'COMMITDATE']].groupby(by=['COMMITDATE', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'RETURNFLAG']].groupby(by=['EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'SHIPDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'DISCOUNT']]

lineitem[['L_ORDERKEY', 'SHIPDATE', 'EXTENDEDPRICE', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE', 'SHIPMODE']]

lineitem[['L_PARTKEY', 'L_SUPPKEY', 'LINENUMBER']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[['L_SUPPKEY', 'SHIPMODE', 'EXTENDEDPRICE']].groupby(by=['SHIPMODE']).agg('count')

lineitem[['QUANTITY', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['SHIPDATE', 'LINENUMBER', 'RETURNFLAG', 'TAX', 'QUANTITY', 'SHIPMODE', 'RECEIPTDATE']]

lineitem[['SHIPINSTRUCT', 'DISCOUNT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('count')

lineitem[['SHIPINSTRUCT', 'RETURNFLAG', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('count')

lineitem[['SHIPINSTRUCT', 'SHIPMODE']].groupby(by=['SHIPMODE', 'SHIPINSTRUCT']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'QUANTITY']].groupby(by=['SHIPMODE', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[['TAX', 'L_ORDERKEY']].groupby(by=['TAX', 'L_ORDERKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'].str.startswith('R')) | (nation['N_NATIONKEY'] > 12) | (nation['N_REGIONKEY'] != 3)][['N_NAME']]

nation[(nation['N_COMMENT'] != 'h')].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'a')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] <= 10) | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] == 7)][['N_COMMENT']]

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] >= 0) & (nation['N_NATIONKEY'] != 5) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] <= 14)][['N_NATIONKEY', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] == 1)].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'F') | (nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] == 'E')][['N_COMMENT']]

nation[(nation['N_NAME'] != 'I') & (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] == 'I')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] == 'J') | (nation['N_COMMENT'] == ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'B') & (nation['N_COMMENT'] == 'n') | (nation['N_NATIONKEY'] < 22) | (nation['N_NAME'] != 'A')][['N_COMMENT']]

nation[(nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] >= 1) | (nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] != 0)].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('K'))][['N_NAME']]

nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_NAME'].str.startswith('U')) | (nation['N_NATIONKEY'] == 4) & (nation['N_NAME'] != 'P')][['N_NATIONKEY']]

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'] == 'I')][['N_NAME']]

nation[(nation['N_NAME'].str.startswith('U'))].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_NATIONKEY'] < 6) & (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] < 9) & (nation['N_COMMENT'] == 'e') & (nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 17) & (nation['N_NATIONKEY'] == 20) | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] < 8)][['N_NAME']]

nation[(nation['N_NATIONKEY'] == 8) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] > 13)].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 15)].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 23) | (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] != 'K') & (nation['N_NATIONKEY'] <= 15)][['N_NAME']]

nation[(nation['N_NATIONKEY'] >= 9) & (nation['N_NAME'] != 'R') & (nation['N_COMMENT'].str.startswith(' '))][['N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] >= 9)].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] < 16) | (nation['N_NATIONKEY'] >= 10) | (nation['N_NAME'] != 'R')][['N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] < 0)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] == 13) | (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] == 2)][['N_COMMENT']]

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] < 8)][['N_COMMENT', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 2)].groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] != 'I') & (nation['N_COMMENT'] != 'e')].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

nation[['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] != 87684.9608678333) | (orders['O_COMMENT'] != 'o')][['ORDERSTATUS']]

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['O_ORDERKEY'] < 514)][['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE']]

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] <= 337728.5273867612) | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'].str.startswith('t')) & (orders['O_CUSTKEY'] < 27571)]

orders[(orders['ORDERPRIORITY'] != '5-LOW')][['O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']]

orders[(orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] >= 20271.203791416592) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'] != 'the') | (orders['TOTALPRICE'] <= 302616.89530193974) & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'] != '5-LOW')]

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_CUSTKEY'] < 110241) & (orders['TOTALPRICE'] != 166591.71580263125)][['O_CUSTKEY', 'CLERK']]

orders[(orders['O_COMMENT'] == 'i') & (orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'] == 'C')][['CLERK', 'O_COMMENT']]

orders[(orders['O_CUSTKEY'] == 46172) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT'])) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] <= 349) | (orders['O_ORDERKEY'] < 752) | (orders['ORDERDATE'] != '1998-07-21')]

orders[(orders['O_CUSTKEY'] >= 14319) | (orders['O_COMMENT'] == 'd') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['O']))][['ORDERDATE']]

orders[(orders['O_ORDERKEY'] < 682) | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 630)][['ORDERSTATUS', 'O_COMMENT']]

orders[(orders['O_ORDERKEY'] >= 279) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] > 137374.67659623057) & (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'] != 'C')]

orders[(orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] <= 363) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 239305.9724806403) & (orders['CLERK'].str.startswith('C'))]

orders[['CLERK', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

orders[['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS']].groupby(by=['CLERK']).agg('count')

orders[['ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[['ORDERDATE', 'CLERK', 'TOTALPRICE']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS']].groupby(by=['ORDERDATE', 'ORDERSTATUS']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']]

orders[['ORDERDATE', 'O_ORDERKEY']].groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'CLERK', 'ORDERSTATUS']].groupby(by=['CLERK']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']]

orders[['O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']]

orders[['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERSTATUS']].groupby(by=['O_CUSTKEY', 'ORDERSTATUS']).agg('count')

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']]

orders[['O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('count')

orders[['O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('count')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK']].groupby(by=['SHIPPRIORITY', 'CLERK']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']]

part[(part['BRAND'] != 'Brand#55') & (part['TYPE'].str.startswith('L')) & (part['RETAILPRICE'] == 947.1308155019999)].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#11') | (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#41') & (part['RETAILPRICE'] == 1015.0073610611611) & (part['SIZE'] < 8) | (part['MFGR'] == 'Manufacturer#3') | (part['RETAILPRICE'] >= 1070.5968672536312) | (part['CONTAINER'].str.startswith('SM')) | (part['P_PARTKEY'] != 83)]

part[(part['BRAND'].isin(['Brand#13', 'Brand#34', 'Brand#25', 'Brand#54', 'Brand#24', 'Brand#11', 'Brand#15', 'Brand#43', 'Brand#31', 'Brand#44', 'Brand#45', 'Brand#51', 'Brand#55', 'Brand#32', 'Brand#52', 'Brand#23', 'Brand#35', 'Brand#22', 'Brand#42', 'Brand#41'])) & (part['P_PARTKEY'] == 87) & (part['PT_COMMENT'] == 'a')].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#22', 'Brand#45', 'Brand#15', 'Brand#14', 'Brand#25', 'Brand#55', 'Brand#33', 'Brand#44', 'Brand#12', 'Brand#32', 'Brand#23', 'Brand#43', 'Brand#52'])) | (part['SIZE'] >= 40) | (part['SIZE'] != 25) | (part['SIZE'] != 40) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) | (part['SIZE'] > 5) & (part['RETAILPRICE'] != 1004.1274840743608)]

part[(part['CONTAINER'] != 'MED') | (part['CONTAINER'] == 'SM') | (part['TYPE'] != 'L')].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') | (part['BRAND'] != 'Brand#12') & (part['RETAILPRICE'] > 1079.2950687784105) & (part['CONTAINER'] != 'WRAP')][['P_PARTKEY']]

part[(part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] <= 946.2980510683307)][['RETAILPRICE', 'PT_COMMENT', 'CONTAINER']]

part[(part['CONTAINER'].str.startswith('LG')) & (part['TYPE'] != 'E') & (part['TYPE'] != 'L') | (part['SIZE'] != 7) | (part['BRAND'] == 'Brand#13') & (part['RETAILPRICE'] <= 972.8737384808129) | (part['CONTAINER'].str.startswith('SM'))]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['SIZE'] >= 37) & (part['PT_COMMENT'].str.startswith('r')) | (part['PT_COMMENT'] == 'x') | (part['SIZE'] > 48) & (part['BRAND'] != 'Brand#45') & (part['SIZE'] >= 10)]

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] < 34) & (part['PT_COMMENT'].str.startswith('r')) | (part['PT_COMMENT'].str.startswith('the')) & (part['P_PARTKEY'] >= 45) & (part['P_NAME'].str.startswith('f')) & (part['CONTAINER'] == 'MED')]

part[(part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] < 36)].groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2') | (part['PT_COMMENT'].str.startswith('kag')) & (part['TYPE'] == 'STA') & (part['TYPE'].str.startswith('L')) | (part['P_NAME'] == 's') & (part['TYPE'].str.startswith('L')) | (part['SIZE'] >= 1)]

part[(part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] <= 35)].groupby(by=['PT_COMMENT', 'P_NAME']).agg('count')

part[(part['MFGR'] == 'Manufacturer#5') | (part['BRAND'] != 'Brand#55') & (part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] < 161) & (part['PT_COMMENT'].str.startswith('ly ')) | (part['PT_COMMENT'] != ' ') | (part['BRAND'] == 'Brand#43')]

part[(part['MFGR'].isin(['Manufacturer#1'])) & (part['MFGR'] != 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] != 'M') & (part['P_NAME'] == 'w') & (part['P_PARTKEY'] >= 8) & (part['SIZE'] < 41)]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) | (part['SIZE'] > 48) | (part['RETAILPRICE'] <= 1012.5997168798772)].groupby(by=['PT_COMMENT']).agg('count')

part[(part['PT_COMMENT'] != 'h') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5']))][['P_PARTKEY', 'MFGR', 'P_NAME']]

part[(part['PT_COMMENT'] == 'k')].groupby(by=['PT_COMMENT', 'MFGR', 'RETAILPRICE']).agg('count')

part[(part['PT_COMMENT'].str.startswith('!')) & (part['BRAND'] != 'Brand#23') | (part['TYPE'] == 'SMA') & (part['P_PARTKEY'] <= 180) | (part['P_PARTKEY'] > 151) & (part['SIZE'] == 43) | (part['TYPE'] != 'SMA')]

part[(part['P_NAME'] != 'y')].groupby(by=['RETAILPRICE', 'P_NAME', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['P_NAME'].str.startswith('r'))][['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'TYPE']]

part[(part['P_PARTKEY'] == 74)].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] > 156) & (part['P_PARTKEY'] > 18)].groupby(by=['P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 188) & (part['TYPE'].str.startswith('L')) & (part['CONTAINER'] != 'LG') | (part['P_NAME'] == 'o') & (part['P_PARTKEY'] < 37) & (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] < 927.4054578474922)]

part[(part['RETAILPRICE'] != 1065.296940671141) & (part['SIZE'] <= 15) & (part['P_PARTKEY'] >= 78) & (part['TYPE'] != 'L') | (part['P_PARTKEY'] != 75) | (part['TYPE'] != 'S') & (part['SIZE'] == 14)]

part[(part['RETAILPRICE'] < 921.2286121443151)][['TYPE', 'MFGR', 'BRAND', 'PT_COMMENT']]

part[(part['SIZE'] != 37)].groupby(by=['PT_COMMENT', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['SIZE'] < 18) & (part['CONTAINER'] != 'SM') | (part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] == 'p') & (part['MFGR'] == 'Manufacturer#3') & (part['P_NAME'].str.startswith('r')) & (part['TYPE'] == 'STA')]

part[(part['SIZE'] <= 40)][['MFGR', 'SIZE', 'BRAND', 'TYPE']]

part[(part['SIZE'] >= 26) & (part['MFGR'] == 'Manufacturer#4') | (part['P_NAME'] != 'blu')].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'STA') | (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] < 173)].groupby(by=['SIZE']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'STA') | (part['TYPE'] == 'SMA') & (part['BRAND'].isin(['Brand#44', 'Brand#43', 'Brand#34', 'Brand#13', 'Brand#32', 'Brand#35', 'Brand#45', 'Brand#54', 'Brand#14', 'Brand#25', 'Brand#52', 'Brand#41', 'Brand#55', 'Brand#11', 'Brand#53', 'Brand#42', 'Brand#22'])) & (part['PT_COMMENT'] != 'g') & (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] == 961.1416221776161) | (part['SIZE'] < 42)]

part[['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE']]

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'SIZE']]

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'SIZE']]

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_PARTKEY', 'TYPE']]

part[['MFGR', 'PT_COMMENT', 'SIZE']].groupby(by=['PT_COMMENT']).agg('count')

part[['MFGR', 'P_NAME']].groupby(by=['P_NAME', 'MFGR']).agg('min', numeric_only=True)

part[['MFGR', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'MFGR']).agg('min', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'TYPE']]

part[['PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'MFGR', 'BRAND']]

part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND']]

part[['P_PARTKEY', 'MFGR']].groupby(by=['MFGR', 'P_PARTKEY']).agg('count')

part[['P_PARTKEY', 'PT_COMMENT', 'TYPE']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'SIZE']].groupby(by=['SIZE', 'P_PARTKEY']).agg('count')

part[['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE']]

part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'MFGR', 'SIZE', 'PT_COMMENT', 'BRAND']]

part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'BRAND']]

part[['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'MFGR', 'P_NAME', 'BRAND']]

part[['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'P_NAME', 'MFGR']]

part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[['TYPE', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']]

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] > 106) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] >= 177) | (part['BRAND'] == 'Brand#41')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] == 'E') | (part['CONTAINER'] == 'WRAP') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3'])) & (part['P_NAME'] == 'blu')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] == 'b') | (part['MFGR'] != 'Manufacturer#5') & (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_PHONE']).agg('min', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 6625) | (partsupp['PS_SUPPKEY'] == 1161)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['AVAILQTY'] <= 352)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['AVAILQTY'] <= 9556) | (partsupp['SUPPLYCOST'] == 722.3726982265459) & (partsupp['SUPPLYCOST'] == 575.0014389640697) & (partsupp['PS_PARTKEY'] != 39)][['P_COMMENT']]

partsupp[(partsupp['AVAILQTY'] == 5342) & (partsupp['AVAILQTY'] >= 3412) & (partsupp['P_COMMENT'].str.startswith('e'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 8314) & (partsupp['AVAILQTY'] != 3606) & (partsupp['PS_SUPPKEY'] < 4102)][['SUPPLYCOST', 'AVAILQTY']]

partsupp[(partsupp['PS_PARTKEY'] < 35) | (partsupp['PS_PARTKEY'] < 48) | (partsupp['PS_SUPPKEY'] >= 1482)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] < 7) | (partsupp['PS_PARTKEY'] >= 22) | (partsupp['PS_SUPPKEY'] != 1710)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 27) | (partsupp['PS_SUPPKEY'] != 2894) & (partsupp['SUPPLYCOST'] < 783.6136513442402)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 18) & (partsupp['SUPPLYCOST'] != 157.6030018617778) | (partsupp['PS_PARTKEY'] <= 27)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 1) & (partsupp['SUPPLYCOST'] != 981.3637432527673) | (partsupp['PS_SUPPKEY'] == 7370)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] > 23) & (partsupp['PS_PARTKEY'] != 14) | (partsupp['AVAILQTY'] != 8776)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 21)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] < 3550) | (partsupp['P_COMMENT'] == 'h') & (partsupp['P_COMMENT'] != 'v') & (partsupp['PS_SUPPKEY'] != 6248)][['AVAILQTY']]

partsupp[(partsupp['PS_SUPPKEY'] == 1628) | (partsupp['PS_SUPPKEY'] != 1858) & (partsupp['PS_PARTKEY'] < 4)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2906) & (partsupp['PS_SUPPKEY'] != 82) & (partsupp['AVAILQTY'] != 1106)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 7188) | (partsupp['P_COMMENT'] != ',') | (partsupp['PS_SUPPKEY'] >= 5003)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'v') & (partsupp['PS_SUPPKEY'] != 228) & (partsupp['PS_SUPPKEY'] != 5191)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['PS_PARTKEY'] >= 46) | (partsupp['P_COMMENT'].str.startswith('s'))].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 835.9041327974244) & (partsupp['SUPPLYCOST'] == 420.76436663737616) | (partsupp['PS_SUPPKEY'] > 6993) & (partsupp['AVAILQTY'] != 8611)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] == 558.9297921048031) & (partsupp['AVAILQTY'] > 1400) & (partsupp['SUPPLYCOST'] != 226.5407603553384)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 242.71137676489212) | (partsupp['AVAILQTY'] != 7870) | (partsupp['PS_SUPPKEY'] == 7167)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 396.56057862744683) & (partsupp['P_COMMENT'] != ';') | (partsupp['AVAILQTY'] >= 6628)][['AVAILQTY', 'P_COMMENT']]

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'P_COMMENT']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('count')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST']].groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'] != 'g')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'u') & (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_COMMENT'] != 'h')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u')].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] >= 1)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'g')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'h')].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('M'))].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'M') & (region['R_NAME'] == 'AME')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'h')].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT']]

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] == 'u')].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] >= 3) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 2)].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('A')) | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] >= 0)].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] != 0)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'M')].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'u')].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'A')].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'h')].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] <= 0)].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'M')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 1)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'A')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'ASI')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_NAME'] == 'AME')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_NAME'] == 'AME')].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] == 1)].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 3) | (region['R_NAME'].str.startswith('M'))].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('A'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_COMMENT']]

region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'].str.startswith('ASI'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] < 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] != 0)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] != 1)].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] != 3)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 0)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 0)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'AFR')].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] >= 0)].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']]

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] > 1) | (region['R_COMMENT'].str.startswith('u'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 1)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] > 3)].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] != 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1)].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] >= 3) | (region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('count')

region[['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] == 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'E')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= -511.70441121320425)].groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 5118.380176928494) | (supplier['S_COMMENT'].str.startswith('i')) | (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] < 4)][['S_PHONE']]

supplier[(supplier['S_ADDRESS'] != 'H') | (supplier['S_COMMENT'] == 'o')][['S_COMMENT', 'S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_COMMENT'] != 'x') | (supplier['S_NATIONKEY'] <= 21) & (supplier['S_ACCTBAL'] > -379.7937026484433) & (supplier['S_NATIONKEY'] < 10) | (supplier['S_SUPPKEY'] > 179) | (supplier['S_NATIONKEY'] < 15) & (supplier['S_SUPPKEY'] == 56)]

supplier[(supplier['S_COMMENT'] == ' ')].merge(nation[(nation['N_NATIONKEY'] > 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] < 6) | (supplier['S_NATIONKEY'] >= 23) & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE']]

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('M')) | (supplier['S_NATIONKEY'] == 20)].groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] != 3) | (supplier['S_ADDRESS'] == 's') | (supplier['S_PHONE'] != '1')][['S_PHONE']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'y') & (supplier['S_ACCTBAL'] == 3400.740236144705) & (supplier['S_NATIONKEY'] >= 10)][['S_SUPPKEY']]

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'z') | (supplier['S_ADDRESS'] != ' ')][['S_COMMENT', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] != 6) | (supplier['S_ADDRESS'] == 'v') | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] == 20) | (supplier['S_NATIONKEY'] < 0) & (supplier['S_ACCTBAL'] < 7861.384615000484) & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL']]

supplier[(supplier['S_NATIONKEY'] > 1) & (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_NATIONKEY'] >= 17) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '3') & (supplier['S_NATIONKEY'] != 2)]

supplier[(supplier['S_NATIONKEY'] > 11) | (supplier['S_PHONE'] == '3') | (supplier['S_NATIONKEY'] != 15)].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'o') | (supplier['S_ADDRESS'] != 'm') & (supplier['S_NATIONKEY'] == 14) | (supplier['S_NATIONKEY'] <= 13) & (supplier['S_ADDRESS'] == 'g')]

supplier[(supplier['S_SUPPKEY'] <= 193) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_SUPPKEY'] == 115) | (supplier['S_ADDRESS'] != 'T')].groupby(by=['S_NAME', 'S_COMMENT']).agg('count')

supplier[(supplier['S_SUPPKEY'] > 15)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']]

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_PHONE']].groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']]

supplier[['S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_PHONE']].groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']]

supplier[['S_PHONE', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']]

supplier[['S_SUPPKEY', 'S_PHONE']].groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 's') & (nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_NATIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] == 6)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 2906.966079833233) & (customer['C_ADDRESS'] == 'O') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] == -660.3802360004215) & (customer['C_CUSTKEY'] > 44) | (customer['C_NATIONKEY'] >= 7) & (customer['C_COMMENT'] != 'p')]

customer[(customer['C_ADDRESS'] == '9') | (customer['C_ADDRESS'].str.startswith('Q')) | (customer['C_NAME'] != 'C')].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'd') & (customer['C_PHONE'] != '1') | (customer['C_ACCTBAL'] == 722.8887112363047) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 26) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NAME'] != 'C')]

customer[(customer['C_CUSTKEY'] == 83) | (customer['C_ACCTBAL'] == 6060.745236679858) | (customer['C_ACCTBAL'] >= 8535.089394185512) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_CUSTKEY'] == 64) & (customer['C_ADDRESS'] != 'L') | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '13-')]

customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'g')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'p') & (customer['C_ACCTBAL'] == 6409.383226264978)][['C_NAME', 'MKTSEGMENT']]

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 1) & (customer['C_ACCTBAL'] != 7814.929827836237)][['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 19)][['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] >= 1) & (customer['C_NATIONKEY'] > 17) | (customer['C_NATIONKEY'] > 16)].groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_CUSTKEY'] > 41) & (customer['C_CUSTKEY'] == 42) & (customer['C_ADDRESS'] == 'H')][['C_NAME', 'C_ADDRESS']]

customer[(customer['C_PHONE'] != '27-')][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] >= 62) | (customer['C_ACCTBAL'] != 9974.7521430281) | (customer['C_NATIONKEY'] != 19) & (customer['C_ADDRESS'] != '4')][['C_NATIONKEY']]

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_REGIONKEY'] < 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] > 2) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']]

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['C_PHONE', 'C_NAME']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME']].groupby(by=['C_NATIONKEY', 'C_NAME']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_CUSTKEY'] <= 93357) & (orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] == 18642) & (orders['CLERK'] != 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '28-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 2735) & (partsupp['AVAILQTY'] == 4690)][['AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.07351577862496995) & (lineitem['L_COMMENT'].str.startswith('.')) | (lineitem['SHIPMODE'] == 'TRUCK')].groupby(by=['QUANTITY', 'COMMITDATE']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] == 48879.09863338384)][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['LINENUMBER'] > 6) | (lineitem['L_SUPPKEY'] < 5211) | (lineitem['LINENUMBER'] >= 1)].groupby(by=['SHIPDATE']).agg('count')

lineitem[(lineitem['L_COMMENT'] == 's') & (lineitem['EXTENDEDPRICE'] > 64737.598873359915) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['DISCOUNT'] != 0.06265187487019123) & (lineitem['TAX'] != 0.07521928806110932)][['L_COMMENT']]

lineitem[(lineitem['L_COMMENT'].str.startswith('t'))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] < 110) & (lineitem['DISCOUNT'] > 0.09271645989308881) | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['LINENUMBER'] != 3)][['LINESTATUS']]

lineitem[(lineitem['L_ORDERKEY'] >= 165)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] != 104385)][['LINESTATUS']].groupby(by=['LINESTATUS']).agg('count')

lineitem[(lineitem['L_PARTKEY'] >= 182423) | (lineitem['RETURNFLAG'] != 'R') | (lineitem['EXTENDEDPRICE'] >= 7879.366730085054) | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['QUANTITY'] == 44)]

lineitem[(lineitem['L_SUPPKEY'] == 887) | (lineitem['L_COMMENT'] != 'l')][['LINESTATUS', 'LINENUMBER', 'SHIPMODE', 'QUANTITY']]

lineitem[(lineitem['QUANTITY'] == 42)][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') & (lineitem['L_SUPPKEY'] != 3495) | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['COMMITDATE'] == '1998-10-16')][['TAX', 'DISCOUNT']]

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['L_PARTKEY'] < 91457)].groupby(by=['RECEIPTDATE', 'LINENUMBER']).agg('count')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'TAX', 'DISCOUNT', 'L_PARTKEY', 'RETURNFLAG', 'L_ORDERKEY', 'COMMITDATE']]

lineitem[['LINESTATUS', 'LINENUMBER', 'QUANTITY', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

lineitem[['L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'LINENUMBER', 'SHIPMODE', 'L_ORDERKEY', 'L_COMMENT']]

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'a')].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'o')].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] != 22) & (nation['N_REGIONKEY'] > 2)].groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']]

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] != 'r')].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'B') | (nation['N_NAME'] == 'U') & (nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'P') & (nation['N_COMMENT'] == 'l') & (nation['N_NAME'] == 'P') & (nation['N_REGIONKEY'] >= 2)].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'U')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'U')][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] == 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] == 'K') & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] >= 7) & (nation['N_COMMENT'].str.startswith('p'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 11) | (nation['N_NATIONKEY'] != 9)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] < 14) & (nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] > 6)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] < 7) | (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] == 's')][['N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_NATIONKEY'] <= 12)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 14) | (nation['N_COMMENT'] == 'r')].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 21) | (nation['N_NAME'] == 'C') & (nation['N_COMMENT'] == 'o') | (nation['N_COMMENT'].str.startswith('t'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 21)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 20)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 9) | (nation['N_NAME'] != 'P') & (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']]

nation[(nation['N_NATIONKEY'] > 11) | (nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] > 13) | (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_NATIONKEY'] > 7)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'] != 'p')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'A')].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] < 3)].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'G') | (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] > 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] != 'o')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']]

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] <= 2) | (nation['N_NATIONKEY'] >= 5) | (nation['N_COMMENT'].str.startswith('o'))].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] != 7)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] < 23)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']]

nation[(nation['N_REGIONKEY'] > 3)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] > 8) & (nation['N_NAME'] == 'B')].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] == 'i')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY', 'CLERK']]

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] > 207915.63366943705) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] > 11313) | (orders['O_COMMENT'].str.startswith('r')) & (orders['SHIPPRIORITY'] <= 0)]

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['CLERK'].str.startswith('C'))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] == 272) & (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['TOTALPRICE'] == 4730.250991730435)][['O_COMMENT']]

orders[(orders['O_COMMENT'] != 'a') | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['CLERK'].str.startswith('C'))][['CLERK', 'ORDERPRIORITY']]

orders[(orders['O_COMMENT'] == 'n') | (orders['O_CUSTKEY'] != 139982) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'F')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('j')) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '1-URGENT')][['O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] <= 54485) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED'])) & (orders['O_CUSTKEY'] > 149342)][['ORDERPRIORITY', 'ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] > 191) | (orders['O_ORDERKEY'] > 639) & (orders['O_ORDERKEY'] > 683) & (orders['O_CUSTKEY'] < 147900)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 677)][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 327987.5401315323) | (orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith(' ')) & (orders['SHIPPRIORITY'] == 0)][['CLERK', 'SHIPPRIORITY']]

orders[['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('count')

orders[['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_COMMENT']].groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'SHIPPRIORITY', 'CLERK']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']]

orders[['ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'CLERK']].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT']].groupby(by=['TOTALPRICE', 'ORDERPRIORITY']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('count')

part[(part['BRAND'] != 'Brand#13') | (part['SIZE'] == 8) | (part['P_NAME'] == 'f')].groupby(by=['P_NAME', 'MFGR']).agg('mean', numeric_only=True)

part[(part['BRAND'] != 'Brand#25')].groupby(by=['CONTAINER', 'P_NAME', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') & (part['BRAND'] == 'Brand#41') | (part['TYPE'].str.startswith('SMA'))].groupby(by=['MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['BRAND'].isin(['Brand#11', 'Brand#44', 'Brand#53', 'Brand#13', 'Brand#22', 'Brand#41', 'Brand#21', 'Brand#34', 'Brand#54', 'Brand#25', 'Brand#52', 'Brand#43', 'Brand#32', 'Brand#45'])) & (part['RETAILPRICE'] != 950.0459652017117) & (part['RETAILPRICE'] == 1016.4180750241668) & (part['RETAILPRICE'] >= 959.1993808060554)][['RETAILPRICE']]

part[(part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] == 949.6957293495922)].groupby(by=['SIZE', 'MFGR', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'MED') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3']))].groupby(by=['P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['CONTAINER'] != 'MED') | (part['MFGR'] == 'Manufacturer#1') & (part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#25') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] > 985.4204841523746) | (part['RETAILPRICE'] < 1096.3429654831396)]

part[(part['MFGR'] != 'Manufacturer#1')].groupby(by=['MFGR', 'RETAILPRICE', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('h')) | (part['SIZE'] != 14) & (part['MFGR'] != 'Manufacturer#4') | (part['TYPE'] == 'S') | (part['PT_COMMENT'] != 'the') & (part['P_PARTKEY'] == 22) & (part['MFGR'] == 'Manufacturer#3')]

part[(part['MFGR'] != 'Manufacturer#4')].groupby(by=['SIZE', 'TYPE', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != 'b') & (part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] != 'kag') | (part['BRAND'] == 'Brand#13') | (part['TYPE'] != 'L') & (part['P_NAME'] != 'v') | (part['RETAILPRICE'] <= 1021.4327432071423) & (part['MFGR'] != 'Manufacturer#1')]

part[(part['PT_COMMENT'] == 'k') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3'])) | (part['SIZE'] >= 1) | (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#3') | (part['P_NAME'].str.startswith('l')) & (part['P_PARTKEY'] != 106) & (part['CONTAINER'] != 'WRAP')]

part[(part['P_NAME'] != 'cor')].groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER', 'TYPE']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'k') | (part['RETAILPRICE'] >= 1024.6658621779025) | (part['BRAND'] != 'Brand#13') | (part['CONTAINER'] == 'SM') | (part['P_PARTKEY'] >= 116) & (part['RETAILPRICE'] <= 917.9808259194705) | (part['PT_COMMENT'] != ' fi') & (part['CONTAINER'] != 'LG')]

part[(part['P_PARTKEY'] <= 182) & (part['CONTAINER'] == 'MED')].groupby(by=['CONTAINER', 'P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] > 51)][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] >= 137) & (part['P_NAME'].str.startswith('t')) | (part['RETAILPRICE'] == 947.8055882386296) | (part['PT_COMMENT'] == 'i')].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] >= 153) | (part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#3') | (part['TYPE'] != 'M') & (part['P_NAME'] != 'a') | (part['MFGR'] != 'Manufacturer#1') & (part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'].str.startswith('WRAP'))]

part[(part['P_PARTKEY'] >= 84) | (part['P_PARTKEY'] != 62) & (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] == 'm')].groupby(by=['P_PARTKEY']).agg('count')

part[(part['RETAILPRICE'] < 961.8119530347025) & (part['BRAND'] == 'Brand#23')].groupby(by=['BRAND', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['SIZE'] != 32) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] > 20) & (part['TYPE'].str.startswith('STA')) & (part['TYPE'].str.startswith('P')) & (part['SIZE'] < 16) | (part['PT_COMMENT'] != 'w') | (part['CONTAINER'] != 'MED')]

part[(part['SIZE'] < 29) & (part['P_PARTKEY'] > 24) & (part['P_NAME'].str.startswith('r')) & (part['PT_COMMENT'] == 'l') | (part['P_NAME'] == 'c') & (part['BRAND'] == 'Brand#35') | (part['RETAILPRICE'] >= 930.1192503205431) & (part['MFGR'] != 'Manufacturer#4')]

part[(part['SIZE'] < 41) & (part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('r')) & (part['BRAND'] != 'Brand#22') | (part['BRAND'].isin(['Brand#14', 'Brand#33', 'Brand#21', 'Brand#25', 'Brand#15', 'Brand#24', 'Brand#41', 'Brand#35', 'Brand#45', 'Brand#52', 'Brand#43', 'Brand#22', 'Brand#31', 'Brand#53', 'Brand#23', 'Brand#55', 'Brand#11', 'Brand#34', 'Brand#32', 'Brand#54', 'Brand#13', 'Brand#44', 'Brand#51'])) & (part['PT_COMMENT'].str.startswith('p')) & (part['TYPE'].str.startswith('STA')) | (part['P_PARTKEY'] > 154)]

part[(part['SIZE'] <= 48) | (part['PT_COMMENT'] != 'b') & (part['RETAILPRICE'] < 1036.4331579873117) & (part['P_NAME'].str.startswith('cor')) & (part['MFGR'].isin(['Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] >= 991.7308548346034) & (part['CONTAINER'] != 'WRAP')]

part[(part['TYPE'] == 'S') & (part['P_PARTKEY'] > 34) | (part['TYPE'].str.startswith('S')) & (part['SIZE'] < 39) & (part['PT_COMMENT'] != 'd') & (part['MFGR'] == 'Manufacturer#1') | (part['SIZE'] >= 22) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1']))]

part[(part['TYPE'] == 'S') | (part['BRAND'].isin(['Brand#43', 'Brand#12', 'Brand#25', 'Brand#21', 'Brand#33', 'Brand#32', 'Brand#35', 'Brand#24', 'Brand#31', 'Brand#11', 'Brand#55', 'Brand#22', 'Brand#53', 'Brand#54', 'Brand#34', 'Brand#23'])) & (part['RETAILPRICE'] > 942.0403879565573)].groupby(by=['P_NAME', 'BRAND']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) & (part['TYPE'].str.startswith('STA'))].groupby(by=['SIZE', 'BRAND', 'TYPE']).agg('count')

part[(part['TYPE'].str.startswith('M'))][['MFGR', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'RETAILPRICE']]

part[(part['TYPE'].str.startswith('STA')) & (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] != 'y') & (part['CONTAINER'] != 'LG') | (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] <= 52) & (part['RETAILPRICE'] <= 1086.230658627046) & (part['PT_COMMENT'].str.startswith('p'))]

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[['BRAND', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['CONTAINER', 'MFGR', 'BRAND']].groupby(by=['MFGR', 'BRAND']).agg('min', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'CONTAINER', 'P_NAME', 'TYPE']]

part[['MFGR', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['MFGR', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['P_NAME', 'P_PARTKEY', 'TYPE']].groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

part[['P_NAME', 'TYPE', 'P_PARTKEY', 'CONTAINER']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE']]

part[['P_PARTKEY', 'MFGR', 'PT_COMMENT', 'TYPE']].groupby(by=['MFGR']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'P_NAME']].groupby(by=['MFGR', 'P_NAME']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_NAME', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']]

part[['RETAILPRICE', 'TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']]

part[['RETAILPRICE', 'TYPE', 'P_NAME']].groupby(by=['TYPE', 'RETAILPRICE']).agg('count')

part[['SIZE', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['RETAILPRICE']).agg('count')

part[['SIZE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

part[['TYPE', 'BRAND', 'P_PARTKEY']].groupby(by=['P_PARTKEY', 'BRAND']).agg('count')

part[['TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'RETAILPRICE', 'BRAND']]

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('kag')) | (part['BRAND'] == 'Brand#32')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] == 103)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 85) & (supplier['S_NATIONKEY'] >= 7) | (supplier['S_PHONE'] == '28-') | (supplier['S_PHONE'] == '26-') & (supplier['S_ADDRESS'] == 'V')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 444)].groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 547) | (partsupp['PS_SUPPKEY'] == 7162) | (partsupp['AVAILQTY'] <= 9739) & (partsupp['P_COMMENT'] == 'o')].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 4029) | (partsupp['AVAILQTY'] != 4077) & (partsupp['PS_PARTKEY'] <= 34) & (partsupp['PS_PARTKEY'] > 31)].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 5358)][['PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 6580) | (partsupp['AVAILQTY'] < 2588) & (partsupp['P_COMMENT'].str.startswith('the')) & (partsupp['PS_SUPPKEY'] >= 6470)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 7734)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[(partsupp['AVAILQTY'] >= 8845) & (partsupp['P_COMMENT'] == 'd') & (partsupp['AVAILQTY'] > 1698) & (partsupp['SUPPLYCOST'] <= 401.6546185366717)][['PS_SUPPKEY', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] > 25)].groupby(by=['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 38)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 6985) | (partsupp['PS_SUPPKEY'] < 7453) & (partsupp['AVAILQTY'] <= 3665) | (partsupp['PS_SUPPKEY'] > 3313) | (partsupp['SUPPLYCOST'] < 465.91294335244027)][['P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] < 4219) | (partsupp['PS_PARTKEY'] == 37) | (partsupp['SUPPLYCOST'] == 139.14107056096657) | (partsupp['AVAILQTY'] == 605)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 6656) & (partsupp['AVAILQTY'] >= 6668) | (partsupp['AVAILQTY'] <= 299) | (partsupp['P_COMMENT'] != 't') & (partsupp['PS_PARTKEY'] < 31)][['P_COMMENT']]

partsupp[(partsupp['P_COMMENT'] != ',')].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'g') & (partsupp['P_COMMENT'] != 's')].groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'a')][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'c') & (partsupp['PS_PARTKEY'] < 46)].merge(part[(part['P_NAME'].str.startswith('lin'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'h')].merge(part[(part['P_PARTKEY'] >= 69) & (part['PT_COMMENT'] == 'g')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['PS_PARTKEY'] > 41) | (partsupp['AVAILQTY'] == 9241)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['P_COMMENT'] != 'ly ') | (partsupp['SUPPLYCOST'] > 792.9628379300177) & (partsupp['P_COMMENT'] == 'are')][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['SUPPLYCOST'] < 338.93736282014436)][['PS_SUPPKEY']].groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 465.1376854826983) & (partsupp['SUPPLYCOST'] != 577.2480262915727) | (partsupp['PS_SUPPKEY'] > 5824) | (partsupp['PS_SUPPKEY'] <= 1240) & (partsupp['SUPPLYCOST'] >= 968.1372056669728)][['AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] > 606.6095798927464) | (partsupp['PS_SUPPKEY'] < 7095) | (partsupp['SUPPLYCOST'] >= 256.8643630454697) | (partsupp['PS_PARTKEY'] <= 35)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('14-'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']]

region[(region['R_COMMENT'] != 'h')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] <= 3) | (region['R_NAME'].str.startswith('AFR'))].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'l')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_COMMENT'] != 'l')][['R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 1) & (region['R_REGIONKEY'] > 0)].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('AME'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'u')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] == 2)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] > 0)].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'M')].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 1) & (region['R_NAME'] != 'E')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'g')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('h'))].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'ASI')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] >= 0)].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 2)].groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'M')].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'] != 'AME') | (region['R_NAME'] == 'A') | (region['R_NAME'] != 'AFR')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 2)].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'M')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] <= 3) | (region['R_NAME'].str.startswith('M'))].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] == 2)].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AFR')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] != 'A')].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] != 0)].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E') | (region['R_NAME'] == 'ASI') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[(region['R_NAME'].str.startswith('A'))][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'E')].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'l')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'ASI')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] == 'E') & (region['R_COMMENT'] != 'l')].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] > 3)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('M'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] >= 3)].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('g'))].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] < 2)][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] == 1)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'E')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] >= 0)].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']]

region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] == 2)][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']]

region[(region['R_REGIONKEY'] == 3)][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'h')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 3)][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'u')].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 'o')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] == 'y')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4022.386700404727)][['S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'U') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != '9') & (supplier['S_COMMENT'] != 'x') | (supplier['S_ACCTBAL'] > 7621.8907050561165)][['S_ADDRESS']]

supplier[(supplier['S_ADDRESS'] == 'f')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'h')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != ' ') | (supplier['S_ACCTBAL'] != -526.7916698350175) & (supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] != 'w')][['S_ACCTBAL', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'] != 'v')].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('r'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 9) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ADDRESS'] != 'U') | (supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] >= 8)][['S_ADDRESS']]

supplier[(supplier['S_PHONE'] != '1')][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_PHONE'] != '17-')][['S_NAME']].groupby(by=['S_NAME']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_COMMENT'] == 'f') & (supplier['S_NATIONKEY'] < 8) & (supplier['S_COMMENT'] == 'c') | (supplier['S_SUPPKEY'] >= 20)][['S_NAME']]

supplier[(supplier['S_SUPPKEY'] <= 193) | (supplier['S_COMMENT'] != 'g') & (supplier['S_ADDRESS'] == 'w') | (supplier['S_NAME'].str.startswith('S'))].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 49) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 20)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_SUPPKEY'] == 154) | (supplier['S_PHONE'] != '26-') & (supplier['S_ACCTBAL'] >= 9681.006020080957)][['S_ADDRESS', 'S_NAME', 'S_NATIONKEY']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_COMMENT', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_NATIONKEY']).agg('count')

supplier[['S_PHONE', 'S_ACCTBAL', 'S_COMMENT']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'AME') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NATIONKEY'] == 19) & (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('J'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'U')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_COMMENT'].str.startswith('t'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 1167.084735157454) | (customer['C_PHONE'] != '18-') | (customer['C_ADDRESS'] != 'F') & (customer['C_ADDRESS'] != '6') | (customer['C_COMMENT'].str.startswith('e'))][['C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_ACCTBAL'] <= 9716.3484292394) | (customer['MKTSEGMENT'] == 'BUILDING')].groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 8081.128363849288) | (customer['C_PHONE'] != '2')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'M') | (customer['C_CUSTKEY'] >= 49) & (customer['C_COMMENT'] != 'o') & (customer['C_PHONE'] == '27-') | (customer['MKTSEGMENT'] == 'BUILDING')][['C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_ADDRESS'].str.startswith(',')) & (customer['C_NATIONKEY'] < 13)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_ADDRESS'].str.startswith('i')) & (customer['C_ADDRESS'] == 'e')][['C_PHONE']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == '.') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE', 'MACHINERY'])) & (customer['C_CUSTKEY'] >= 77) | (customer['C_PHONE'] != '13-') | (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] < 53) & (customer['C_COMMENT'] != ',')][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 16) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '3') & (customer['C_ADDRESS'].str.startswith('v')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_COMMENT', 'C_PHONE']]

customer[(customer['C_NATIONKEY'] < 7) & (customer['C_NATIONKEY'] < 11) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_COMMENT'] != 'a') & (customer['C_ACCTBAL'] < 5657.1212389467655)][['C_COMMENT']]

customer[(customer['C_NATIONKEY'] == 15) & (customer['C_COMMENT'] != ' ')][['C_NAME']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] != '27-') & (customer['C_CUSTKEY'] >= 81)].groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']).agg('count')

customer[(customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] >= 12)].groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') & (customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'FURNITURE')][['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']]

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_ACCTBAL'] < 7668.832014925418) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'].str.startswith('.')) | (customer['C_NATIONKEY'] != 5)][['C_ACCTBAL', 'C_ADDRESS']]

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] == 5533.416023793422)][['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING')][['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_PHONE', 'C_NAME']].groupby(by=['C_NAME']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] < 24) | (customer['C_CUSTKEY'] != 7) | (customer['C_NATIONKEY'] <= 17) & (customer['C_CUSTKEY'] == 83) | (customer['C_PHONE'] != '13-')][['C_ADDRESS']]

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_COMMENT', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']).agg('count')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('I'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(part[['PT_COMMENT', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3942) | (partsupp['SUPPLYCOST'] == 44.55509310023845)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['LINENUMBER'] == 6)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['EXTENDEDPRICE'] < 36176.57857055843) | (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['EXTENDEDPRICE'] > 23629.13607972853) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_COMMENT'].str.startswith('d'))][['SHIPDATE']]

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINESTATUS'] == 'O')][['L_COMMENT', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE']]

lineitem[(lineitem['DISCOUNT'] <= 0.04672818850560401) | (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['RETURNFLAG'].isin(['R', 'A']))].merge(partsupp[(partsupp['AVAILQTY'] < 7708)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 84084.52439690876) | (lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_SUPPKEY'] <= 7348) | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPMODE'] == 'SHIP')][['L_COMMENT']]

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['L_ORDERKEY'] > 132) & (lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'REG AIR'])) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['DISCOUNT'] > 0.09711950649636086) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['RECEIPTDATE'] < '1992-05-02')]

lineitem[(lineitem['LINESTATUS'].isin(['F'])) & (lineitem['TAX'] < 0.01229076289623822) | (lineitem['L_ORDERKEY'] >= 84) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) & (lineitem['LINENUMBER'] == 2) | (lineitem['EXTENDEDPRICE'] >= 65803.07878628414) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_PARTKEY'] <= 110912)]

lineitem[(lineitem['L_COMMENT'].str.startswith('h')) & (lineitem['L_SUPPKEY'] == 3869) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_ORDERKEY'] <= 122)][['SHIPDATE', 'EXTENDEDPRICE']]

lineitem[(lineitem['L_ORDERKEY'] != 32) | (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['RETURNFLAG'] != 'R')][['SHIPINSTRUCT', 'RECEIPTDATE', 'QUANTITY', 'TAX']]

lineitem[(lineitem['L_PARTKEY'] > 63711) & (lineitem['L_PARTKEY'] == 172923)][['SHIPDATE', 'LINESTATUS', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']]

lineitem[(lineitem['L_SUPPKEY'] != 4378) | (lineitem['L_ORDERKEY'] != 168) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_ORDERKEY'] >= 170) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_PARTKEY'] == 8207) | (lineitem['TAX'] <= 0.07338247140032428) & (lineitem['L_SUPPKEY'] < 7784) | (lineitem['DISCOUNT'] == 0.08540446472951602)]

lineitem[(lineitem['L_SUPPKEY'] <= 149) | (lineitem['COMMITDATE'] != '1992-05-15')][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 8262) | (lineitem['DISCOUNT'] != 0.04308763464484542)].groupby(by=['TAX', 'COMMITDATE', 'L_COMMENT', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 23)][['L_ORDERKEY', 'RETURNFLAG']].groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] >= 5425) & (lineitem['L_PARTKEY'] <= 166787)].groupby(by=['SHIPDATE', 'LINENUMBER', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['DISCOUNT'] > 0.0746036135996679) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['QUANTITY'] >= 11) | (lineitem['QUANTITY'] >= 24) | (lineitem['LINENUMBER'] != 4)][['SHIPMODE']]

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['DISCOUNT'] != 0.0904914260588275)][['TAX']].groupby(by=['TAX']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['LINESTATUS'] == 'F') | (lineitem['L_PARTKEY'] <= 188541) & (lineitem['L_ORDERKEY'] <= 143)][['RECEIPTDATE']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['TAX'] != 0.04924653780261043) & (lineitem['DISCOUNT'] != 0.05751982507357448) & (lineitem['LINENUMBER'] >= 4) & (lineitem['LINESTATUS'] != 'F')].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['SHIPMODE'].isin(['MAIL', 'RAIL', 'SHIP', 'REG AIR', 'FOB'])) & (lineitem['L_ORDERKEY'] == 25) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] != '1998-11-06')]

lineitem[(lineitem['SHIPMODE'] == 'SHIP') & (lineitem['LINENUMBER'] < 1) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['DISCOUNT'] == 0.05661201180444079)].groupby(by=['QUANTITY']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'L_COMMENT', 'DISCOUNT', 'L_SUPPKEY', 'TAX', 'LINENUMBER', 'QUANTITY', 'RETURNFLAG']]

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'SHIPMODE']].groupby(by=['EXTENDEDPRICE', 'L_COMMENT', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] < 261)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'LINESTATUS', 'COMMITDATE', 'RETURNFLAG']].groupby(by=['COMMITDATE', 'RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'LINENUMBER']].groupby(by=['SHIPDATE', 'RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'RECEIPTDATE', 'SHIPMODE', 'DISCOUNT', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'LINENUMBER', 'EXTENDEDPRICE']].groupby(by=['LINENUMBER', 'SHIPINSTRUCT', 'EXTENDEDPRICE']).agg('count')

lineitem[['SHIPINSTRUCT', 'L_COMMENT', 'TAX']].groupby(by=['L_COMMENT', 'SHIPINSTRUCT', 'TAX']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'RETURNFLAG', 'EXTENDEDPRICE']].groupby(by=['SHIPINSTRUCT', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'] == 'AME') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] != 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] != 'M') & (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] >= 14) & (nation['N_NAME'] != 'S')].groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l')][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 's') & (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_NAME'] == 'S')][['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_REGIONKEY'] <= 1)][['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_NATIONKEY'] < 9) | (nation['N_COMMENT'] != ' ')].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_COMMENT'] == 'a') | (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']]

nation[(nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] <= 17)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 1) & (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']]

nation[(nation['N_NAME'] != 'F') & (nation['N_COMMENT'] == 'y')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] <= 10)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'U') & (nation['N_COMMENT'] == 'r')][['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] != 'F')].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'].str.startswith('K'))].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] < 15)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] == 21)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] == 0)][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] != 6) | (nation['N_NAME'] != 'K')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] < 18) & (nation['N_COMMENT'].str.startswith('c'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 6)][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 17) | (nation['N_NAME'] != 'R') | (nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] == 'AME') & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 19) & (nation['N_NAME'] != 'C')].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] == ' ')].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] != 'l') | (nation['N_NAME'] != 'C') | (nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']]

nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('P')) & (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'].str.startswith('p'))][['N_NAME']].groupby(by=['N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] < 20)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']]

nation[(nation['N_REGIONKEY'] <= 2)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] == 0)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'R')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] == 1)].groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] != 1)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] >= 9) & (nation['N_NATIONKEY'] == 1)].merge(region[(region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] != 2) & (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']]

nation[(nation['N_REGIONKEY'] > 2)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] == 2)].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'n')].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] <= 2)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 5) | (nation['N_COMMENT'] == 'a') | (nation['N_NATIONKEY'] < 13)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] != '13-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 10620.013596791698) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERDATE'] != '1992-01-13') & (orders['TOTALPRICE'] <= 164358.5951014586) & (orders['O_CUSTKEY'] != 145916)][['O_CUSTKEY']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['O_ORDERKEY'] < 693) & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] == 'l')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] != 648) & (orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] > 489) & (orders['O_COMMENT'] == 'd')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH'])) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) & (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] < 230)].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] == 175610.6013071687) & (orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] > 121117.91882815838) | (orders['CLERK'].str.startswith('C'))]

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] >= 227)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] == 'P') | (orders['O_CUSTKEY'] == 77943)][['O_COMMENT']]

orders[(orders['ORDERSTATUS'] == 'P') & (orders['O_CUSTKEY'] <= 46449) | (orders['O_COMMENT'] != 'f') & (orders['O_COMMENT'].str.startswith('the')) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['O_ORDERKEY'] > 589)]

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['TOTALPRICE'] >= 10112.909594430055) & (orders['O_CUSTKEY'] <= 77227) & (orders['O_CUSTKEY'] != 28545) & (orders['O_COMMENT'] != ' ') | (orders['O_ORDERKEY'] < 227) & (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'] == 'q') & (orders['CLERK'] == 'C')]

orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_ORDERKEY'] != 680) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'] != 'C')]

orders[(orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) & (orders['O_ORDERKEY'] <= 327) & (orders['O_CUSTKEY'] > 80602) | (orders['O_ORDERKEY'] != 382) | (orders['TOTALPRICE'] <= 242303.30998032427)][['TOTALPRICE', 'O_ORDERKEY']]

orders[(orders['O_COMMENT'] != 'egu') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] > 302709.0341218924) | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'].str.startswith('ly '))][['SHIPPRIORITY', 'O_COMMENT']]

orders[(orders['O_COMMENT'].str.startswith('f')) & (orders['TOTALPRICE'] <= 12163.965114678784) & (orders['O_COMMENT'].str.startswith('the')) | (orders['SHIPPRIORITY'] <= 0)][['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['O_COMMENT'].str.startswith('q')) | (orders['SHIPPRIORITY'] >= 0)][['ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK']]

orders[(orders['O_COMMENT'].str.startswith('w'))][['O_CUSTKEY', 'O_ORDERKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('z')) | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_COMMENT'] != 'i') & (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] == 293068.4460093725)][['ORDERPRIORITY']]

orders[(orders['O_CUSTKEY'] >= 82011) | (orders['ORDERPRIORITY'].isin(['5-LOW'])) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C')].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 631) | (orders['O_CUSTKEY'] == 95689)][['ORDERDATE', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']]

orders[(orders['SHIPPRIORITY'] != 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0)].groupby(by=['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] == 'b') | (orders['O_COMMENT'].str.startswith('y')) | (orders['O_COMMENT'] == 'e') | (orders['O_COMMENT'].str.startswith(',')) | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_COMMENT'] == 'i') & (orders['O_COMMENT'].str.startswith('n'))]

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_COMMENT'] != 'i') & (orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] < 60050.12457526282) & (orders['O_CUSTKEY'] == 27003) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH']))]

orders[(orders['TOTALPRICE'] <= 191030.7554401413) & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['O_ORDERKEY'] == 431) | (orders['CLERK'].str.startswith('C')) | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] != '1998-07-21')]

orders[(orders['TOTALPRICE'] > 195827.38101861847) & (orders['ORDERSTATUS'] != 'F')][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] > 271375.1962211445) & (orders['O_ORDERKEY'] > 666) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('the')) & (orders['ORDERSTATUS'] == 'O')][['ORDERDATE', 'ORDERSTATUS']]

orders[['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK']).agg('count')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE']].groupby(by=['ORDERSTATUS', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'CLERK']].groupby(by=['CLERK', 'O_ORDERKEY', 'O_COMMENT']).agg('count')

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']]

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']]

orders[['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT']].groupby(by=['O_COMMENT', 'TOTALPRICE', 'CLERK']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']]

part[(part['BRAND'] == 'Brand#35') | (part['RETAILPRICE'] == 1024.8479573432114) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1']))][['RETAILPRICE', 'P_NAME', 'BRAND', 'PT_COMMENT']]

part[(part['BRAND'] == 'Brand#41')].groupby(by=['SIZE', 'TYPE', 'P_NAME', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

part[(part['BRAND'].isin(['Brand#54', 'Brand#35', 'Brand#22', 'Brand#52', 'Brand#34', 'Brand#12', 'Brand#42', 'Brand#13', 'Brand#33', 'Brand#44', 'Brand#31', 'Brand#53'])) & (part['RETAILPRICE'] < 1023.3710049776251) & (part['CONTAINER'] != 'MED')].groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['SIZE'] < 10) & (part['RETAILPRICE'] > 1073.6235776179428) & (part['RETAILPRICE'] >= 974.6783931435156)][['RETAILPRICE', 'BRAND', 'SIZE']]

part[(part['CONTAINER'] != 'SM') & (part['CONTAINER'].str.startswith('LG')) & (part['SIZE'] <= 28) | (part['TYPE'] == 'SMA') & (part['SIZE'] <= 45) | (part['CONTAINER'].str.startswith('SM')) & (part['RETAILPRICE'] == 904.7881167261841) | (part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] > 23)]

part[(part['CONTAINER'] != 'WRAP')][['PT_COMMENT', 'SIZE']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') & (part['P_NAME'] != 'blu') | (part['TYPE'] == 'STA') | (part['P_PARTKEY'] == 140) | (part['SIZE'] < 40) & (part['CONTAINER'] == 'LG') & (part['SIZE'] >= 26) | (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] == 81)]

part[(part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'].str.startswith('k')) & (part['P_PARTKEY'] >= 5) & (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] > 33) | (part['MFGR'].isin(['Manufacturer#4'])) | (part['P_PARTKEY'] >= 1) & (part['P_NAME'].str.startswith('w')) | (part['P_NAME'] != 'cor')]

part[(part['MFGR'] == 'Manufacturer#3')][['BRAND', 'P_NAME', 'MFGR', 'TYPE', 'CONTAINER', 'SIZE']]

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5']))].groupby(by=['SIZE', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 't') & (part['PT_COMMENT'] != 'f') & (part['P_NAME'] == 'i')][['P_PARTKEY', 'BRAND', 'P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'] == 'd') | (part['RETAILPRICE'] > 991.4747994695065) | (part['P_PARTKEY'] < 61) & (part['PT_COMMENT'].str.startswith('c')) | (part['TYPE'].str.startswith('E')) & (part['CONTAINER'] != 'MED') & (part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'] != 'f') & (part['BRAND'] != 'Brand#15')]

part[(part['PT_COMMENT'] == 'g') & (part['P_PARTKEY'] > 156) | (part['P_NAME'].str.startswith('r')) & (part['RETAILPRICE'] >= 1018.1805561677556) & (part['PT_COMMENT'] != 'f')][['P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'].str.startswith('r'))][['P_NAME', 'TYPE']].groupby(by=['TYPE']).agg('count')

part[(part['P_NAME'] != 'm') & (part['P_PARTKEY'] <= 157) & (part['TYPE'] != 'L') & (part['MFGR'].isin(['Manufacturer#4'])) & (part['TYPE'] == 'S') | (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] == 'Brand#52') & (part['P_PARTKEY'] > 185) | (part['SIZE'] >= 9)]

part[(part['P_NAME'] != 'r')][['P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']]

part[(part['P_NAME'] != 'y') | (part['P_PARTKEY'] < 15)][['CONTAINER', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'BRAND']]

part[(part['P_NAME'] == 'l') | (part['P_NAME'] != 'a') & (part['PT_COMMENT'] != 'kag') | (part['P_PARTKEY'] > 143) & (part['BRAND'].isin(['Brand#33', 'Brand#12', 'Brand#54', 'Brand#35', 'Brand#42', 'Brand#24', 'Brand#31', 'Brand#43', 'Brand#34', 'Brand#51', 'Brand#45', 'Brand#44', 'Brand#55', 'Brand#25', 'Brand#21', 'Brand#53', 'Brand#41', 'Brand#32', 'Brand#14', 'Brand#52'])) | (part['P_NAME'].str.startswith('t')) | (part['CONTAINER'] == 'SM') & (part['PT_COMMENT'] != 'h') & (part['P_NAME'].str.startswith('g'))]

part[(part['P_NAME'].str.startswith('g')) | (part['BRAND'].isin(['Brand#12', 'Brand#25', 'Brand#51', 'Brand#15', 'Brand#42', 'Brand#54', 'Brand#55', 'Brand#35', 'Brand#11', 'Brand#24'])) & (part['P_PARTKEY'] == 51) | (part['BRAND'] != 'Brand#33') & (part['RETAILPRICE'] >= 984.2093420641253) & (part['SIZE'] <= 25) | (part['P_PARTKEY'] <= 92) & (part['PT_COMMENT'] != 'e') & (part['SIZE'] >= 24)]

part[(part['P_NAME'].str.startswith('k')) | (part['BRAND'].isin(['Brand#52', 'Brand#41', 'Brand#11', 'Brand#31', 'Brand#44', 'Brand#14', 'Brand#34', 'Brand#45'])) & (part['BRAND'] != 'Brand#53') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1']))].groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 158) | (part['BRAND'].isin(['Brand#11', 'Brand#33', 'Brand#12', 'Brand#35', 'Brand#55', 'Brand#44', 'Brand#45', 'Brand#32', 'Brand#23', 'Brand#31', 'Brand#52', 'Brand#24', 'Brand#15', 'Brand#13', 'Brand#43', 'Brand#21'])) | (part['SIZE'] < 45)].groupby(by=['SIZE', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] != 183) | (part['SIZE'] == 43) & (part['P_NAME'].str.startswith('v')) | (part['TYPE'] == 'SMA') & (part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'].str.startswith('r'))][['CONTAINER']]

part[(part['P_PARTKEY'] != 195) & (part['BRAND'] == 'Brand#24') & (part['SIZE'] < 42)].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] <= 65) & (part['TYPE'] == 'E')].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'TYPE']).agg('count')

part[(part['P_PARTKEY'] > 74) & (part['BRAND'] == 'Brand#22') & (part['TYPE'] != 'L') | (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] == 'Brand#55') | (part['MFGR'] == 'Manufacturer#2')][['RETAILPRICE']]

part[(part['P_PARTKEY'] >= 145)][['MFGR', 'SIZE']].groupby(by=['SIZE']).agg('count')

part[(part['P_PARTKEY'] >= 181) | (part['SIZE'] > 19) | (part['P_NAME'] == 'a')].groupby(by=['CONTAINER', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 32) | (part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'] == 'SM') | (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] >= 9)][['BRAND', 'TYPE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] != 1029.1798355587214) & (part['MFGR'] == 'Manufacturer#1') & (part['TYPE'].str.startswith('L')) & (part['PT_COMMENT'] != 'b')].groupby(by=['PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] <= 923.848833181006) | (part['BRAND'].isin(['Brand#12', 'Brand#33', 'Brand#43', 'Brand#11', 'Brand#52', 'Brand#51', 'Brand#55', 'Brand#32', 'Brand#14', 'Brand#23', 'Brand#25', 'Brand#15', 'Brand#54', 'Brand#45', 'Brand#34', 'Brand#13', 'Brand#44', 'Brand#42', 'Brand#53', 'Brand#35', 'Brand#41', 'Brand#24'])) | (part['TYPE'] == 'L') | (part['RETAILPRICE'] == 1034.1756522954565) & (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] < 988.3134414437257) & (part['MFGR'] != 'Manufacturer#5') | (part['SIZE'] == 22) | (part['BRAND'] != 'Brand#43')]

part[(part['RETAILPRICE'] == 1005.3185812836084) | (part['P_PARTKEY'] < 156) & (part['MFGR'] != 'Manufacturer#5') | (part['TYPE'] == 'L') | (part['SIZE'] < 44)][['CONTAINER', 'SIZE']]

part[(part['RETAILPRICE'] == 1039.146549735543) | (part['CONTAINER'] == 'LG') & (part['BRAND'] == 'Brand#44') & (part['TYPE'] != 'M') & (part['P_NAME'].str.startswith('p')) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) | (part['BRAND'] == 'Brand#45') & (part['SIZE'] <= 38) | (part['P_PARTKEY'] > 121)]

part[(part['RETAILPRICE'] == 1042.3135054055194) | (part['RETAILPRICE'] > 1009.978198080737) | (part['PT_COMMENT'] != ' ') & (part['CONTAINER'] != 'LG')][['CONTAINER', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['RETAILPRICE'] == 950.7313494733503) | (part['P_PARTKEY'] > 94)].groupby(by=['TYPE', 'MFGR', 'RETAILPRICE', 'SIZE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] >= 962.1233224515299) & (part['RETAILPRICE'] >= 1006.7866299570371) | (part['BRAND'] == 'Brand#35') & (part['SIZE'] == 38)].groupby(by=['P_NAME', 'MFGR']).agg('count')

part[(part['RETAILPRICE'] >= 981.0492929859329) | (part['BRAND'].isin(['Brand#54', 'Brand#35', 'Brand#43', 'Brand#52', 'Brand#23', 'Brand#32', 'Brand#51', 'Brand#33', 'Brand#45', 'Brand#15', 'Brand#42', 'Brand#12', 'Brand#21', 'Brand#31', 'Brand#55', 'Brand#13', 'Brand#14', 'Brand#34', 'Brand#24', 'Brand#25', 'Brand#22', 'Brand#11'])) & (part['P_PARTKEY'] == 145) | (part['P_PARTKEY'] >= 112) | (part['P_NAME'] != 'p') | (part['CONTAINER'] != 'LG') & (part['MFGR'] == 'Manufacturer#1') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) & (part['P_NAME'] != 'lin')]

part[(part['SIZE'] != 2) & (part['P_PARTKEY'] == 174) | (part['P_NAME'] != 'cor') | (part['RETAILPRICE'] < 1030.6031591817828) & (part['TYPE'] != 'STA') & (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'] != 'LG') & (part['TYPE'] == 'S') & (part['RETAILPRICE'] > 964.3214283945957)]

part[(part['SIZE'] != 38) & (part['TYPE'] != 'SMA') & (part['RETAILPRICE'] < 1090.572016451507) & (part['SIZE'] == 17) & (part['MFGR'] != 'Manufacturer#3')][['P_PARTKEY', 'BRAND']]

part[(part['SIZE'] < 18) & (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] >= 915.0202715443031) | (part['PT_COMMENT'] == 'e')].groupby(by=['SIZE', 'MFGR']).agg('count')

part[(part['SIZE'] >= 31) & (part['RETAILPRICE'] >= 1043.7727916449462) | (part['P_PARTKEY'] != 137) & (part['PT_COMMENT'] == 'g') | (part['RETAILPRICE'] >= 1073.4263443354544) & (part['P_NAME'].str.startswith('f')) & (part['SIZE'] >= 22) | (part['P_NAME'].str.startswith('w')) | (part['SIZE'] >= 7)]

part[(part['TYPE'] != 'E') & (part['SIZE'] >= 11) & (part['MFGR'] == 'Manufacturer#2') & (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] < 1005.5299271326462) | (part['BRAND'] != 'Brand#15') & (part['PT_COMMENT'].str.startswith('x')) | (part['BRAND'] == 'Brand#34') | (part['CONTAINER'].str.startswith('JUMBO'))]

part[(part['TYPE'] != 'P')][['SIZE', 'TYPE']].groupby(by=['SIZE']).agg('count')

part[(part['TYPE'] != 'SMA')].groupby(by=['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'MFGR']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('P')) | (part['PT_COMMENT'].str.startswith('p')) & (part['TYPE'].str.startswith('S')) & (part['SIZE'] <= 33) & (part['CONTAINER'] != 'LG')].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) | (part['P_NAME'] != 'g')][['P_PARTKEY']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) | (part['P_NAME'].str.startswith('n')) | (part['P_PARTKEY'] >= 12) & (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] == 'LG')][['TYPE', 'P_NAME']]

part[(part['TYPE'].str.startswith('S')) | (part['TYPE'].str.startswith('L')) & (part['MFGR'] != 'Manufacturer#4')].groupby(by=['PT_COMMENT', 'MFGR', 'RETAILPRICE']).agg('count')

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']]

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'SIZE']].groupby(by=['BRAND']).agg('max', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'CONTAINER']]

part[['BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'P_NAME']]

part[['CONTAINER', 'MFGR', 'SIZE', 'TYPE']].groupby(by=['MFGR', 'TYPE']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[['CONTAINER', 'RETAILPRICE', 'TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']]

part[['CONTAINER', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME', 'BRAND']]

part[['MFGR', 'BRAND', 'SIZE']].groupby(by=['SIZE', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE']]

part[['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'P_NAME']].groupby(by=['P_PARTKEY', 'MFGR']).agg('mean', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[['MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE']].groupby(by=['CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'BRAND', 'MFGR', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

part[['PT_COMMENT', 'BRAND', 'SIZE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']]

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['CONTAINER']).agg('count')

part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']]

part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'MFGR', 'BRAND']]

part[['SIZE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

part[['TYPE', 'P_PARTKEY', 'SIZE']].groupby(by=['SIZE', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'SIZE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'MFGR', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'P_NAME', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#25') | (part['CONTAINER'] != 'WRAP')][['P_PARTKEY', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] <= 943.8644063158816) | (part['PT_COMMENT'].str.startswith(' fi')) & (part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] == 'WRAP') | (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > -592.0269319473223) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != 5858.0830418539645) | (supplier['S_SUPPKEY'] > 22) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 21)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '32-')][['S_COMMENT', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_NATIONKEY'] < 13)][['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] > 7) | (supplier['S_ADDRESS'] == 'Q') & (supplier['S_ADDRESS'] == 'Y') | (supplier['S_NATIONKEY'] != 12) | (supplier['S_PHONE'] == '3')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 1131) & (partsupp['PS_SUPPKEY'] != 1989)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 2387) | (partsupp['SUPPLYCOST'] != 320.99997215582084) & (partsupp['PS_SUPPKEY'] >= 1585) | (partsupp['PS_PARTKEY'] == 7)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']]

partsupp[(partsupp['PS_PARTKEY'] != 12) & (partsupp['P_COMMENT'] != 'e') | (partsupp['SUPPLYCOST'] < 745.8917443477384) & (partsupp['AVAILQTY'] < 8896) & (partsupp['PS_PARTKEY'] < 24)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 22)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 41) & (partsupp['PS_PARTKEY'] != 30) | (partsupp['P_COMMENT'] != 's') | (partsupp['PS_PARTKEY'] < 27) & (partsupp['AVAILQTY'] <= 1795)][['SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_PARTKEY'] < 49)].groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 3648) | (partsupp['AVAILQTY'] < 4028) & (partsupp['P_COMMENT'] != 'g')].groupby(by=['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6950)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'bli') | (partsupp['AVAILQTY'] != 6008)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'i') | (partsupp['SUPPLYCOST'] < 691.3686150572196) & (partsupp['P_COMMENT'].str.startswith('h')) & (partsupp['SUPPLYCOST'] == 693.7299215434788) | (partsupp['AVAILQTY'] < 8390)][['PS_PARTKEY', 'PS_SUPPKEY']]

partsupp[(partsupp['P_COMMENT'] != 'y') | (partsupp['PS_SUPPKEY'] == 3446) | (partsupp['P_COMMENT'] != 'c') | (partsupp['PS_PARTKEY'] <= 39) | (partsupp['PS_PARTKEY'] <= 29)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'bli')][['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['AVAILQTY'] < 3679) | (partsupp['P_COMMENT'] == 't')][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'].str.startswith('g'))][['SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 195.92170663640488) & (partsupp['SUPPLYCOST'] <= 463.33898498075655)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 565.508284916736) & (partsupp['P_COMMENT'] != 'j') & (partsupp['SUPPLYCOST'] != 22.893897414950512) | (partsupp['PS_SUPPKEY'] <= 1421) & (partsupp['PS_PARTKEY'] >= 17)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 804.0101156490086) & (partsupp['PS_SUPPKEY'] != 76) | (partsupp['PS_SUPPKEY'] > 3140) & (partsupp['PS_SUPPKEY'] >= 463) & (partsupp['P_COMMENT'] == 'b')].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 849.945636254026) | (partsupp['SUPPLYCOST'] != 793.1913759285425) & (partsupp['SUPPLYCOST'] != 273.83342841313106) & (partsupp['PS_PARTKEY'] < 30) & (partsupp['PS_PARTKEY'] > 27)][['P_COMMENT', 'AVAILQTY']]

partsupp[(partsupp['SUPPLYCOST'] >= 673.4067621050458) | (partsupp['PS_PARTKEY'] <= 25) | (partsupp['PS_SUPPKEY'] > 1660) | (partsupp['P_COMMENT'] != 'g')].groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 868.5699950507769)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('count')

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'g')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('g'))][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] != 'u')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] < 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] < 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] != 'A') | (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('l'))].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'ASI')].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'l')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] > 0)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g')].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] == 'ASI') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] != 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] != 'g')][['R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] == 'E')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] != 'g')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) & (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] > 3)].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] < 3) & (region['R_NAME'].str.startswith('E'))][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'AME')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'A') & (region['R_NAME'] == 'E')].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] != 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] == 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'AFR')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'g')].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'r') & (nation['N_NAME'] != 'V')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] >= 10)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] != 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] <= 0) & (nation['N_NATIONKEY'] < 13)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] < 1) & (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 3115.2685145730647) & (supplier['S_NATIONKEY'] < 13)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_NATIONKEY'] != 18) & (supplier['S_COMMENT'] == 'es ')].merge(nation[(nation['N_NAME'] != 'A')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('U')) | (supplier['S_PHONE'] != '3')][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('j')) & (supplier['S_COMMENT'] == ',') | (supplier['S_ADDRESS'] == 'd')].groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'u') & (supplier['S_ACCTBAL'] < 1594.8457329303767)][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_ACCTBAL'] != 5411.878358986468)].groupby(by=['S_PHONE', 'S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] < 7683.136052979356) | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_NATIONKEY'] >= 8) | (supplier['S_SUPPKEY'] > 44)][['S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_ADDRESS'] != 'E') & (supplier['S_NATIONKEY'] <= 15)][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']]

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'] == 'j') & (supplier['S_SUPPKEY'] > 37)].groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] > 11)][['S_NAME']].groupby(by=['S_NAME']).agg('count')

supplier[(supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'] != 'j')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']]

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'] == 'i')][['S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 119) & (supplier['S_SUPPKEY'] != 14)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] == 88) & (supplier['S_ACCTBAL'] > 1077.644831102851) | (supplier['S_NATIONKEY'] == 5) & (supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'] != 'p')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 157) | (supplier['S_COMMENT'] != 'q') | (supplier['S_COMMENT'] == 'f') | (supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_SUPPKEY'] > 178) & (supplier['S_ACCTBAL'] > 8764.68558991408)][['S_COMMENT']]

supplier[(supplier['S_SUPPKEY'] >= 44) | (supplier['S_ACCTBAL'] >= 247.37886877824985) & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_PHONE'] == '17-')][['S_ACCTBAL', 'S_SUPPKEY']]

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_COMMENT']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME']].groupby(by=['S_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_ADDRESS']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] != 9) & (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] >= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'E')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'] == 'a')].merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('C'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NAME'].str.startswith('E'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 23) | (nation['N_NAME'] == 'J') | (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_COMMENT'] == 'h') | (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 3) & (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] == 'u')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 1)].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_NATIONKEY'] > 0) | (nation['N_COMMENT'] != 'o') & (nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'M') & (nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] <= 5394.497498258749) | (customer['C_ADDRESS'] != 'X') & (customer['C_ACCTBAL'] <= 4244.236986967643) & (customer['C_COMMENT'] == ',') | (customer['C_ACCTBAL'] >= 2893.8989204774084) | (customer['C_ACCTBAL'] < 2388.482494131786) | (customer['C_CUSTKEY'] == 19)][['C_CUSTKEY']]

customer[(customer['C_ACCTBAL'] == 1596.4497475825774) & (customer['C_ADDRESS'] != '0')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] > 8275.064574998669) | (customer['C_NATIONKEY'] >= 19) | (customer['C_ADDRESS'] != 'E')][['C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[(customer['C_ADDRESS'] != ',')][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_ADDRESS'] == 'm')][['C_CUSTKEY', 'C_NAME']].groupby(by=['C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('p')) & (customer['C_ADDRESS'] == 'O') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < -536.1390510756116)][['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_COMMENT'] != 'h') | (customer['C_COMMENT'] == 'l') | (customer['C_ACCTBAL'] >= 333.54462314536795) & (customer['C_ACCTBAL'] >= 2725.4000772964387)].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == ',') & (customer['C_NATIONKEY'] < 14) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NATIONKEY'] != 22) & (customer['C_CUSTKEY'] != 2) | (customer['C_PHONE'] == '25-')][['C_CUSTKEY']]

customer[(customer['C_COMMENT'].str.startswith('f')) | (customer['C_CUSTKEY'] >= 34) | (customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] <= 844.156413131614)][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY']]

customer[(customer['C_COMMENT'].str.startswith('u')) | (customer['C_ADDRESS'] != 's') & (customer['C_ACCTBAL'] < 378.986241224771)].groupby(by=['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 43) | (customer['C_COMMENT'] == 'f') | (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']]

customer[(customer['C_CUSTKEY'] < 67) | (customer['C_ADDRESS'] == 'X') & (customer['C_PHONE'].str.startswith('1'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 88) | (customer['C_NATIONKEY'] >= 0) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] <= 5319.30019914516) | (customer['C_CUSTKEY'] < 94)][['C_NAME', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_CUSTKEY'] == 40)][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_CUSTKEY'] > 48) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NATIONKEY'] != 4) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'S')][['C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('w')) & (customer['C_ACCTBAL'] <= 6080.857968578104)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 16)].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] >= 22) & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] > 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 1) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] >= 1088.0932773063198) & (customer['C_PHONE'] != '3') & (customer['C_COMMENT'] == 'c') & (customer['C_CUSTKEY'] <= 64)][['C_PHONE', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] > 16) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'h') & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'J')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 20) | (customer['C_NATIONKEY'] > 17) | (customer['C_NATIONKEY'] <= 11)][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['MKTSEGMENT'].isin(['MACHINERY']))].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['C_PHONE'] != '25-') | (customer['C_ACCTBAL'] >= 9035.689387649878) & (customer['C_COMMENT'].str.startswith('d'))][['C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('count')

customer[(customer['C_PHONE'] == '18-') | (customer['C_ACCTBAL'] > 6213.515734102811) | (customer['C_CUSTKEY'] >= 92) | (customer['C_NATIONKEY'] <= 1) | (customer['C_CUSTKEY'] < 94) | (customer['C_CUSTKEY'] >= 32)][['C_NATIONKEY', 'MKTSEGMENT']]

customer[(customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] == 69) | (customer['C_CUSTKEY'] <= 53) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('n'))].groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] >= 1) & (customer['C_COMMENT'] != 't') | (customer['C_CUSTKEY'] <= 99)].merge(nation[(nation['N_NATIONKEY'] > 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_COMMENT'].str.startswith('l'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] >= 52) | (customer['C_CUSTKEY'] <= 63) & (customer['C_ACCTBAL'] > 4596.424860420483)][['MKTSEGMENT']]

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ADDRESS'].str.startswith('f')) & (customer['C_ACCTBAL'] < 5696.437122070734)][['C_COMMENT']].groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY')][['C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_NAME', 'MKTSEGMENT']).agg('count')

customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NAME']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_PHONE']).agg('count')

customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['P'])) | (orders['O_ORDERKEY'] > 272) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'd') & (orders['ORDERSTATUS'] != 'O') | (orders['CLERK'].str.startswith('C'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] <= 16402) | (orders['O_COMMENT'] != 'a')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('max', numeric_only=True)

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('count')

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']).agg('count')

lineitem.merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_COMMENT', 'S_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_COMMENT'] == 'f')][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST']).agg('count')

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_PARTKEY'] < 95489) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['TAX'] >= 0.0724671757293131) & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['LINESTATUS'].isin(['O', 'F']))][['RETURNFLAG']]

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['LINENUMBER'] != 1)][['SHIPDATE', 'DISCOUNT', 'COMMITDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT']]

lineitem[(lineitem['EXTENDEDPRICE'] > 65396.21185787721) & (lineitem['LINENUMBER'] < 5) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 'l') | (lineitem['QUANTITY'] <= 5) | (lineitem['EXTENDEDPRICE'] <= 6190.492434320677)].groupby(by=['RECEIPTDATE', 'LINENUMBER', 'SHIPDATE', 'L_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 57471) | (lineitem['L_ORDERKEY'] <= 122) & (lineitem['L_SUPPKEY'] != 4066)][['DISCOUNT']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] >= 3223) | (lineitem['L_COMMENT'] != ' ca') & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['DISCOUNT'] != 0.0680737709183828) | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['EXTENDEDPRICE'] <= 48604.66405905923) | (lineitem['QUANTITY'] < 36) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RECEIPTDATE'] != '1998-11-06')]

lineitem[(lineitem['RETURNFLAG'] == 'R')][['COMMITDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE')][['COMMITDATE', 'TAX', 'LINENUMBER']].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['L_COMMENT'] != 'l') & (lineitem['RETURNFLAG'].isin(['A', 'N']))].merge(partsupp[(partsupp['P_COMMENT'] != 's')], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINENUMBER'] >= 5) & (lineitem['LINESTATUS'] == 'O') | (lineitem['COMMITDATE'] != '1992-05-15')][['SHIPINSTRUCT', 'L_COMMENT', 'LINESTATUS']]

lineitem[(lineitem['SHIPMODE'].isin(['FOB', 'MAIL', 'AIR'])) & (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_ORDERKEY'] <= 26)][['RETURNFLAG', 'DISCOUNT', 'RECEIPTDATE', 'L_ORDERKEY']]

lineitem[(lineitem['TAX'] > 0.020160306687777567) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPDATE'] == '1998-10-30')][['EXTENDEDPRICE', 'QUANTITY', 'SHIPDATE', 'DISCOUNT']]

lineitem[(lineitem['TAX'] > 0.028209046749712155) & (lineitem['LINESTATUS'] != 'O') & (lineitem['DISCOUNT'] == 0.09064067895040952) & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['SHIPDATE'] >= '1998-10-30')].groupby(by=['QUANTITY']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'LINENUMBER', 'QUANTITY', 'RETURNFLAG', 'L_COMMENT', 'DISCOUNT']].groupby(by=['QUANTITY']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPINSTRUCT', 'SHIPDATE', 'RECEIPTDATE', 'L_SUPPKEY', 'QUANTITY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['RETURNFLAG', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY']].groupby(by=['LINENUMBER', 'L_ORDERKEY', 'DISCOUNT']).agg('count')

lineitem[['SHIPDATE', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY', 'LINENUMBER', 'LINESTATUS', 'QUANTITY', 'SHIPINSTRUCT']]

lineitem[['SHIPDATE', 'L_COMMENT', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'SHIPMODE']].groupby(by=['RETURNFLAG']).agg('max', numeric_only=True)

lineitem[['TAX', 'SHIPMODE', 'RECEIPTDATE', 'LINESTATUS', 'DISCOUNT', 'RETURNFLAG']].groupby(by=['SHIPMODE']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'M') | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'] == 'AFR') & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] <= 12) | (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'n') | (nation['N_COMMENT'] == 'a')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'o') & (nation['N_NATIONKEY'] >= 10)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'i') & (nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']]

nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 14)].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'].str.startswith('c'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') | (nation['N_NATIONKEY'] < 22)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] < 1)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'V')][['N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'G') | (nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] < 0)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'I') | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'U') & (nation['N_NATIONKEY'] > 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 11) | (nation['N_NAME'] == 'P') & (nation['N_NAME'] != 'I')].groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 18) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] <= 0)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] < 20) & (nation['N_NATIONKEY'] < 14)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('K'))].groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 16) & (nation['N_NAME'] == 'S') | (nation['N_NATIONKEY'] < 18)][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 9) & (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] <= 12)][['N_NAME']].groupby(by=['N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1)].merge(region[(region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_COMMENT'] != 'y')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] == 'I') & (nation['N_NATIONKEY'] <= 19)].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] == 'G')].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'S')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('F'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != 'E') | (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('1'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'r')][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'i') & (customer['C_NATIONKEY'] != 14) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] > 693)][['ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']]

orders[(orders['CLERK'] == 'C') & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] >= 420)][['O_COMMENT', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['O_COMMENT'] != 'u') | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] == 0)][['ORDERDATE', 'O_COMMENT']]

orders[(orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['ORDERDATE'] != '1998-07-21')][['O_ORDERKEY', 'ORDERPRIORITY']].groupby(by=['O_ORDERKEY', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] != 'P') | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 670)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']]

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERDATE'] != '1992-01-13')][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] > 347351.2850492186) | (orders['TOTALPRICE'] > 251471.7562906206)][['CLERK', 'TOTALPRICE']]

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['ORDERSTATUS'].isin(['P']))].groupby(by=['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY']).agg('count')

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['TOTALPRICE'] != 95797.54532451696) | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'] != 'F')][['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK']]

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH']))][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']]

orders[(orders['O_COMMENT'] == 'i') & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] <= 121)][['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT']]

orders[(orders['O_COMMENT'].str.startswith('d'))].merge(customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 52) & (orders['O_ORDERKEY'] == 368)].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] >= 135616) & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERPRIORITY'] != '5-LOW')].groupby(by=['ORDERSTATUS', 'ORDERDATE', 'O_CUSTKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '1-URGENT'])) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_CUSTKEY'] >= 67893) & (orders['TOTALPRICE'] < 47797.70533136317) | (orders['O_COMMENT'] != 'x')][['O_ORDERKEY', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['O_CUSTKEY'] <= 138214) | (orders['TOTALPRICE'] > 352202.0019075004) | (orders['O_CUSTKEY'] <= 111355) & (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERDATE'] == '1998-07-21')].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'].str.startswith('b')) | (orders['TOTALPRICE'] <= 67456.6913048736)][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE']]

orders[(orders['TOTALPRICE'] < 8854.081834370085) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] < 292877.6302170487) & (orders['O_COMMENT'] != 'the')].groupby(by=['ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY']).agg('count')

orders[['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] < 8110.739026082225)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']].groupby(by=['CLERK', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']].groupby(by=['CLERK']).agg('count')

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK']].groupby(by=['TOTALPRICE', 'CLERK', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#54') | (part['P_PARTKEY'] >= 72) & (part['PT_COMMENT'] == 'o') | (part['CONTAINER'] == 'JUMBO') | (part['P_NAME'] != 'k') | (part['BRAND'].isin(['Brand#43', 'Brand#41', 'Brand#22', 'Brand#25', 'Brand#33', 'Brand#55', 'Brand#35', 'Brand#14']))].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#23') | (part['RETAILPRICE'] < 913.5259126324353) & (part['P_NAME'] != 'b') | (part['RETAILPRICE'] < 1009.7677265321198) | (part['PT_COMMENT'].str.startswith('c')) | (part['TYPE'] != 'P') & (part['RETAILPRICE'] > 1044.7143744856025)][['P_NAME']]

part[(part['BRAND'] == 'Brand#34') | (part['TYPE'] == 'S') | (part['CONTAINER'] == 'MED')].groupby(by=['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#33', 'Brand#24', 'Brand#54', 'Brand#25', 'Brand#32', 'Brand#41', 'Brand#52'])) & (part['CONTAINER'].str.startswith('SM')) | (part['BRAND'] == 'Brand#34') & (part['PT_COMMENT'] == ' fi') | (part['P_PARTKEY'] != 113) | (part['CONTAINER'].str.startswith('MED'))].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] > 932.6765742912327) & (part['TYPE'] != 'M') | (part['P_PARTKEY'] != 135) & (part['TYPE'] != 'STA') & (part['SIZE'] < 48) & (part['SIZE'] <= 42)][['MFGR']]

part[(part['CONTAINER'] != 'SM') & (part['RETAILPRICE'] != 1075.1032807198976) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2'])) & (part['P_NAME'].str.startswith('d')) | (part['P_NAME'].str.startswith('m'))][['P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['CONTAINER'] == 'JUMBO') & (part['SIZE'] < 37) | (part['CONTAINER'] == 'MED') & (part['CONTAINER'] == 'JUMBO') & (part['SIZE'] > 26) & (part['P_NAME'] != 'g')].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'SM')][['PT_COMMENT', 'BRAND', 'MFGR']].groupby(by=['MFGR']).agg('count')

part[(part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'] == 'MED') | (part['TYPE'] == 'L')][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']]

part[(part['CONTAINER'].str.startswith('WRAP')) & (part['BRAND'] != 'Brand#44') & (part['P_PARTKEY'] < 180) & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'].isin(['Brand#14', 'Brand#24', 'Brand#25', 'Brand#32', 'Brand#35', 'Brand#41', 'Brand#22', 'Brand#34', 'Brand#31', 'Brand#11', 'Brand#21', 'Brand#52', 'Brand#12', 'Brand#51', 'Brand#55', 'Brand#15'])) | (part['BRAND'] == 'Brand#21') | (part['P_NAME'] != 'l')][['PT_COMMENT']]

part[(part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] < 99) | (part['SIZE'] < 39) & (part['P_PARTKEY'] >= 79) | (part['PT_COMMENT'].str.startswith('!'))][['SIZE', 'BRAND', 'CONTAINER']]

part[(part['MFGR'] == 'Manufacturer#1') | (part['BRAND'].isin(['Brand#44', 'Brand#15', 'Brand#13', 'Brand#22', 'Brand#31', 'Brand#34', 'Brand#51', 'Brand#53', 'Brand#25', 'Brand#33', 'Brand#12', 'Brand#32', 'Brand#52', 'Brand#55', 'Brand#24', 'Brand#11', 'Brand#42', 'Brand#23', 'Brand#43', 'Brand#54', 'Brand#45', 'Brand#21', 'Brand#41']))][['BRAND', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

part[(part['MFGR'] == 'Manufacturer#5') | (part['BRAND'] != 'Brand#52') & (part['P_PARTKEY'] <= 95) & (part['BRAND'] != 'Brand#15')].groupby(by=['MFGR', 'P_NAME', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4'])) | (part['RETAILPRICE'] == 1026.3589276045552) & (part['PT_COMMENT'] == 'g') | (part['TYPE'] != 'S') & (part['BRAND'].isin(['Brand#21']))].groupby(by=['BRAND', 'TYPE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == ' ') | (part['CONTAINER'] != 'LG')].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'TYPE', 'P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'] == 'n') & (part['PT_COMMENT'] != 'g') | (part['BRAND'].isin(['Brand#11', 'Brand#41', 'Brand#15']))][['PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']]

part[(part['PT_COMMENT'] == 'p') & (part['TYPE'].str.startswith('S')) | (part['BRAND'] == 'Brand#11') | (part['MFGR'] != 'Manufacturer#4')][['P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT']]

part[(part['PT_COMMENT'] == 's') | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] < 14) | (part['P_NAME'] == 'b') | (part['BRAND'] == 'Brand#12')][['CONTAINER', 'BRAND', 'SIZE']]

part[(part['P_NAME'] != 'i') & (part['P_PARTKEY'] < 183)][['SIZE', 'P_NAME']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'r') & (part['P_NAME'].str.startswith('y')) & (part['PT_COMMENT'] != 'b') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1'])) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5']))][['CONTAINER', 'PT_COMMENT', 'P_PARTKEY']]

part[(part['P_NAME'] != 'v') | (part['P_PARTKEY'] < 58) & (part['PT_COMMENT'] != 'the')].groupby(by=['MFGR', 'BRAND', 'CONTAINER', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_NAME'] != 'w') & (part['P_NAME'] == 'y') | (part['SIZE'] >= 20)][['MFGR']].groupby(by=['MFGR']).agg('max', numeric_only=True)

part[(part['P_NAME'] == 'a') | (part['TYPE'].str.startswith('L')) & (part['BRAND'].isin(['Brand#12', 'Brand#23', 'Brand#55', 'Brand#54', 'Brand#14', 'Brand#24'])) & (part['P_NAME'].str.startswith('lin')) & (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'] != 'JUMBO') | (part['BRAND'].isin(['Brand#15', 'Brand#51', 'Brand#11', 'Brand#52', 'Brand#53', 'Brand#43', 'Brand#55', 'Brand#34', 'Brand#23', 'Brand#21', 'Brand#12', 'Brand#44', 'Brand#54', 'Brand#45']))][['MFGR']]

part[(part['P_NAME'] == 'blu') & (part['PT_COMMENT'] != 'a') | (part['MFGR'] != 'Manufacturer#4') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))].groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('count')

part[(part['P_PARTKEY'] < 126) & (part['P_NAME'].str.startswith('lin')) & (part['P_PARTKEY'] < 147) | (part['P_PARTKEY'] == 57) | (part['MFGR'] != 'Manufacturer#5') & (part['RETAILPRICE'] < 972.8835870265908)].groupby(by=['CONTAINER']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] >= 145)][['TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']]

part[(part['RETAILPRICE'] < 980.7220544973354) | (part['PT_COMMENT'] != ' ') | (part['PT_COMMENT'] != 'f') & (part['TYPE'] != 'STA') | (part['CONTAINER'] == 'LG')].groupby(by=['SIZE', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] == 970.7507874625863) | (part['P_NAME'].str.startswith('s')) & (part['MFGR'] == 'Manufacturer#5') & (part['TYPE'] == 'S') & (part['TYPE'] != 'S')].groupby(by=['P_NAME', 'MFGR']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] >= 916.9232391791678) | (part['P_PARTKEY'] < 120) | (part['PT_COMMENT'] == ' fi')][['P_NAME']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['SIZE'] != 3) | (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] >= 1058.0407275631903) & (part['SIZE'] != 24) & (part['P_NAME'] != 'v') & (part['PT_COMMENT'] != 'f')][['P_NAME', 'RETAILPRICE']]

part[(part['SIZE'] <= 23) | (part['TYPE'] != 'P') & (part['P_NAME'] == 'lem') | (part['SIZE'] != 24) & (part['SIZE'] != 22) | (part['P_NAME'] != 'd')].groupby(by=['SIZE']).agg('count')

part[(part['SIZE'] >= 5) & (part['SIZE'] > 24) | (part['PT_COMMENT'].str.startswith('d')) & (part['RETAILPRICE'] == 1067.0164913598117)].groupby(by=['P_NAME', 'SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['TYPE'] == 'STA') & (part['SIZE'] != 21) | (part['RETAILPRICE'] == 980.6726221988209) & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] >= 974.2357670075287) | (part['BRAND'].isin(['Brand#54', 'Brand#34', 'Brand#44', 'Brand#31']))].groupby(by=['TYPE']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('E')) & (part['BRAND'] != 'Brand#43') | (part['TYPE'] != 'E') | (part['RETAILPRICE'] != 1033.6395947501435)].groupby(by=['P_PARTKEY', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('P')) | (part['P_NAME'] != 'k') | (part['PT_COMMENT'] == 'p') & (part['MFGR'] == 'Manufacturer#5') | (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] <= 26) & (part['PT_COMMENT'] == 't')][['BRAND']]

part[(part['TYPE'].str.startswith('S')) | (part['RETAILPRICE'] >= 1016.9464668391226) | (part['BRAND'].isin(['Brand#25'])) & (part['PT_COMMENT'] != 'x') & (part['P_PARTKEY'] > 45)][['MFGR', 'BRAND', 'RETAILPRICE']]

part[['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'TYPE']].groupby(by=['BRAND', 'TYPE']).agg('mean', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']].groupby(by=['CONTAINER']).agg('count')

part[['BRAND', 'TYPE', 'MFGR', 'SIZE']].groupby(by=['SIZE', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND']].groupby(by=['SIZE']).agg('mean', numeric_only=True)

part[['MFGR', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'MFGR']).agg('count')

part[['MFGR', 'TYPE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'TYPE', 'RETAILPRICE']].groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_NAME', 'TYPE', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['P_NAME', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'BRAND', 'MFGR', 'SIZE', 'TYPE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE', 'PT_COMMENT', 'TYPE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'MFGR', 'SIZE', 'PT_COMMENT', 'BRAND']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'BRAND', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'BRAND', 'PT_COMMENT']).agg('count')

part[['SIZE', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME']].groupby(by=['P_NAME', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['SIZE', 'TYPE', 'P_NAME', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

part[['TYPE', 'CONTAINER', 'SIZE', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'MFGR']).agg('sum', numeric_only=True)

part[['TYPE', 'MFGR', 'SIZE', 'PT_COMMENT']].groupby(by=['TYPE', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'SIZE', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_PARTKEY']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']).agg('count')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER']).agg('count')

partsupp.merge(part[(part['BRAND'].isin(['Brand#13', 'Brand#23', 'Brand#21']))][['BRAND', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#32', 'Brand#45', 'Brand#15', 'Brand#12', 'Brand#42', 'Brand#11', 'Brand#43', 'Brand#25', 'Brand#13', 'Brand#53', 'Brand#44', 'Brand#33']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('count')

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) | (part['SIZE'] != 42) | (part['TYPE'] == 'SMA')][['SIZE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] != 'i') | (part['PT_COMMENT'].str.startswith('ss ')) & (part['TYPE'].str.startswith('P')) | (part['RETAILPRICE'] > 1017.4656840152737)][['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] > 163)][['RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] <= 945.8698092092258) | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] == 20) | (part['BRAND'] != 'Brand#51') | (part['SIZE'] > 26) | (part['BRAND'] != 'Brand#44')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'the') & (supplier['S_COMMENT'] == 'd') & (supplier['S_SUPPKEY'] > 144)][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] < 2) & (supplier['S_ADDRESS'] == '7') & (supplier['S_ADDRESS'] != 'I') | (supplier['S_NATIONKEY'] == 18)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('count')

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 8785) | (partsupp['SUPPLYCOST'] < 127.25145085150073) | (partsupp['AVAILQTY'] != 6957) | (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['PS_SUPPKEY'] == 3332)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']]

partsupp[(partsupp['AVAILQTY'] >= 4716) | (partsupp['AVAILQTY'] > 1606)].groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 41)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 2)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 14) | (partsupp['PS_PARTKEY'] != 36)].groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4138) & (partsupp['PS_SUPPKEY'] > 7000) & (partsupp['PS_PARTKEY'] < 6)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 5595) & (partsupp['PS_PARTKEY'] <= 18) & (partsupp['P_COMMENT'] == 'r') & (partsupp['PS_PARTKEY'] == 14) & (partsupp['PS_PARTKEY'] == 18)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['PS_SUPPKEY'] == 5313) | (partsupp['P_COMMENT'].str.startswith('a'))][['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 3533)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 269.9314605321157) | (partsupp['SUPPLYCOST'] >= 267.57328044806303) & (partsupp['AVAILQTY'] == 2095)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 80.15499144196419)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'BRAND']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 347.67405022778183) & (partsupp['AVAILQTY'] < 3529) | (partsupp['AVAILQTY'] < 2763) | (partsupp['PS_PARTKEY'] < 7)].merge(part[(part['RETAILPRICE'] < 1035.9892026737368)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 895.004880012061) & (partsupp['AVAILQTY'] <= 8287)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 509.55436974442324) | (partsupp['SUPPLYCOST'] < 365.3677130636997) | (partsupp['SUPPLYCOST'] == 486.1623386406671)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'k') | (supplier['S_ACCTBAL'] == 124.56145125816806) | (supplier['S_SUPPKEY'] < 140)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] > 1) | (region['R_NAME'] == 'A')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'ASI')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] < 2)][['R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] > 2)][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'ASI') | (region['R_REGIONKEY'] == 0) | (region['R_NAME'] != 'A')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'l')][['R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] <= 1) & (region['R_NAME'].str.startswith('E'))][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'u')][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 1)][['R_COMMENT']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('u'))][['R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'AFR') & (region['R_NAME'] != 'ASI')][['R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'u')][['R_NAME']].groupby(by=['R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] < 5)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NATIONKEY'] == 11) | (nation['N_REGIONKEY'] >= 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'G') | (nation['N_COMMENT'] == 'e') & (nation['N_NATIONKEY'] > 11) | (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('G'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'R')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'S')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 19)].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 23)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 12) | (nation['N_NATIONKEY'] != 21) & (nation['N_NAME'].str.startswith('G')) & (nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'] != 'M') | (nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 1617.2843137836182)].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 4011.0635159768435) & (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'] != 'u') | (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_PHONE'].str.startswith('2'))][['S_NAME', 'S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] > 6152.890574802196) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 125) & (supplier['S_SUPPKEY'] <= 35) & (supplier['S_SUPPKEY'] > 68)].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('count')

supplier[(supplier['S_ACCTBAL'] >= 1215.5613446909313)][['S_ADDRESS', 'S_PHONE']].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'U') | (supplier['S_SUPPKEY'] > 116) & (supplier['S_NATIONKEY'] >= 15) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('k')) | (supplier['S_COMMENT'] != 'x')][['S_ADDRESS', 'S_NAME']]

supplier[(supplier['S_ADDRESS'] == '5') | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NAME'] != 'S')].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('1')) & (supplier['S_PHONE'].str.startswith('3'))][['S_ACCTBAL', 'S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_SUPPKEY'] != 143) | (supplier['S_ACCTBAL'] <= 1439.9290007023944)][['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']]

supplier[(supplier['S_ADDRESS'].str.startswith('c')) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 8)][['S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('o')) & (supplier['S_COMMENT'] == 'c') & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ACCTBAL'] == 917.9333714247864) | (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_COMMENT'] != 'a') & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'x')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 's')].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] < 1) & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] >= 4)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('!')) & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'].str.startswith('S')) & (supplier['S_COMMENT'] != '!')].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_ACCTBAL'] < 3099.6707510139277) | (supplier['S_ACCTBAL'] <= 5527.775937879073)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('al '))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] == 13)][['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_NAME'] != 'S')][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']]

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'o') & (supplier['S_NATIONKEY'] == 7)][['S_ACCTBAL']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 3)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 19) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 7) | (supplier['S_ADDRESS'].str.startswith('R')) | (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_PHONE'].str.startswith('1'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 8) & (supplier['S_SUPPKEY'] >= 189) & (supplier['S_ACCTBAL'] == 6194.477983823081)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 0) | (supplier['S_SUPPKEY'] == 55) | (supplier['S_ADDRESS'] == 'g') | (supplier['S_ACCTBAL'] > -374.18678627002384) & (supplier['S_ADDRESS'] == 'J') | (supplier['S_ADDRESS'] == 'y') | (supplier['S_ADDRESS'] != 'N')][['S_ACCTBAL']]

supplier[(supplier['S_NATIONKEY'] <= 15) & (supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_ADDRESS'] == 'S')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 18) & (supplier['S_ADDRESS'] == 'J') | (supplier['S_NATIONKEY'] >= 12) & (supplier['S_COMMENT'] != ' ') & (supplier['S_ACCTBAL'] != 6528.638753007367) | (supplier['S_SUPPKEY'] == 117)][['S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] > 15)][['S_ACCTBAL', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-')][['S_ACCTBAL', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') & (supplier['S_SUPPKEY'] <= 91) & (supplier['S_ADDRESS'].str.startswith('V')) | (supplier['S_ADDRESS'] != 'Y') & (supplier['S_NATIONKEY'] != 17) | (supplier['S_ADDRESS'].str.startswith('L'))][['S_PHONE', 'S_ADDRESS']]

supplier[(supplier['S_SUPPKEY'] <= 35) | (supplier['S_ADDRESS'].str.startswith('l')) | (supplier['S_SUPPKEY'] >= 48)][['S_COMMENT']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 135) & (supplier['S_ACCTBAL'] == 6034.923022041751) | (supplier['S_ACCTBAL'] >= 5952.512140199218)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 149)][['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 61)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']]

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_PHONE', 'S_NAME']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_COMMENT', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] > 11) & (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('o'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_NATIONKEY'] >= 0) & (nation['N_NAME'] == 'M') & (nation['N_COMMENT'].str.startswith('r'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 17) | (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'].str.startswith('E'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_REGIONKEY'] != 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] > 5) & (nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('F')) & (nation['N_NAME'] != 'M')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] == 15)].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] != 'e')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] == 10)].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 3781.4219692212882) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] >= 2391.213827482644) & (customer['C_PHONE'] == '18-') & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_ADDRESS']]

customer[(customer['C_ADDRESS'] != 'Y') & (customer['C_COMMENT'] == 'y') | (customer['C_ACCTBAL'] == 3823.487684994938)].groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('c')) & (customer['C_PHONE'] == '3') | (customer['C_COMMENT'] != 'k') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 16) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ADDRESS'].str.startswith('T'))][['C_ACCTBAL', 'C_NAME']]

customer[(customer['C_ADDRESS'].str.startswith('z')) & (customer['C_ACCTBAL'] > -231.71408814376127)][['C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('count')

customer[(customer['C_COMMENT'] != ',') & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] < 1315.1893600485214) & (customer['C_CUSTKEY'] != 3) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'] != 'u') | (customer['C_ADDRESS'].str.startswith('z'))].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('w')) | (customer['C_ADDRESS'] != 'l') & (customer['C_CUSTKEY'] != 47) | (customer['C_NATIONKEY'] > 11) | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] < 35) | (customer['C_CUSTKEY'] > 15) | (customer['C_ACCTBAL'] != 5391.522808249465) & (customer['C_ADDRESS'] == 'U') & (customer['C_PHONE'] == '1') & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] > 19)][['C_COMMENT', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] == 3) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] == 'E') | (customer['C_NATIONKEY'] == 13) | (customer['C_ACCTBAL'] < 6528.319917660509)].groupby(by=['C_NAME', 'C_ACCTBAL']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 66)][['MKTSEGMENT', 'C_PHONE']].groupby(by=['C_PHONE', 'MKTSEGMENT']).agg('count')

customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '1')].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 7) & (customer['C_CUSTKEY'] < 25) | (customer['C_ADDRESS'] != 'l') & (customer['C_NATIONKEY'] != 11) | (customer['C_ADDRESS'].str.startswith('O'))][['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']]

customer[(customer['C_NATIONKEY'] < 13) | (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 22) & (customer['C_ACCTBAL'] >= 8126.64320520768) | (customer['C_ACCTBAL'] != 4297.289784686987)].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 1) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] < 5563.725075951667) & (customer['C_ACCTBAL'] != 1761.3027889652526) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] < 17)][['C_ADDRESS']]

customer[(customer['C_NATIONKEY'] > 17) & (customer['C_NATIONKEY'] != 6) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_ADDRESS'] == 'I') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_NATIONKEY'] >= 14) | (customer['C_NAME'] != 'C')].groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 13) & (customer['C_PHONE'] != '25-')][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] >= 190.1835537452473) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 't') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] > 2178.485675663323)][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_PHONE'] == '1') | (customer['C_COMMENT'] == 'q') | (customer['C_ADDRESS'] != 'E') & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_NATIONKEY'] != 3) & (customer['C_NATIONKEY'] >= 5)].groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_ADDRESS'] != 'T') & (customer['C_CUSTKEY'] != 4) | (customer['C_ACCTBAL'] > 392.12793028032047) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C')][['C_COMMENT', 'C_CUSTKEY']]

customer[(customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ADDRESS'] != 'U') & (customer['C_COMMENT'] == 'n') | (customer['C_ACCTBAL'] == 4201.768794606038) | (customer['C_PHONE'] != '25-') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_ADDRESS'] == 'I')].groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING'])) | (customer['C_NATIONKEY'] < 3) & (customer['C_COMMENT'] != 'y') | (customer['C_NATIONKEY'] > 1) | (customer['MKTSEGMENT'] == 'BUILDING')][['C_PHONE', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_NATIONKEY'] <= 4)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_COMMENT']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_COMMENT']).agg('count')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_COMMENT']).agg('count')

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] > -197.09406238547683) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] < 16)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'].str.startswith('ly '))][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] == '1998-07-21') | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] <= 563)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] == 'j') | (orders['O_CUSTKEY'] == 84139) | (orders['O_CUSTKEY'] < 121886) & (orders['O_ORDERKEY'] > 252) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_CUSTKEY'] > 35340) | (orders['O_CUSTKEY'] >= 81771) | (orders['O_CUSTKEY'] > 149158)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] == 117776)].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

lineitem.merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 5263)].merge(part[(part['PT_COMMENT'].str.startswith('n')) | (part['SIZE'] >= 27) & (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 84)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 18) | (partsupp['PS_PARTKEY'] > 35) & (partsupp['PS_SUPPKEY'] >= 4278) & (partsupp['P_COMMENT'] == 's')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3405) & (partsupp['PS_SUPPKEY'] >= 1124) | (partsupp['SUPPLYCOST'] <= 812.2494816004593)].merge(supplier[(supplier['S_NATIONKEY'] <= 21)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 588.0102459335466) & (partsupp['PS_SUPPKEY'] <= 6826) | (partsupp['SUPPLYCOST'] == 955.8569471344534)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 43087.2521111363) & (lineitem['LINESTATUS'] != 'O') | (lineitem['L_ORDERKEY'] == 3) & (lineitem['L_COMMENT'].str.startswith('v')) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['L_SUPPKEY'] > 5414)][['EXTENDEDPRICE', 'TAX', 'SHIPDATE']]

lineitem[(lineitem['L_COMMENT'] != 'lit') & (lineitem['TAX'] > 0.07069959697174885) | (lineitem['TAX'] == 0.06333572148922086)].groupby(by=['L_ORDERKEY', 'SHIPDATE', 'L_COMMENT', 'L_PARTKEY', 'RETURNFLAG']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] != 182698) & (lineitem['TAX'] != 0.012577329627776131) & (lineitem['L_COMMENT'] == 'y') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['TAX'] == 0.012332515977543439)][['COMMITDATE', 'RECEIPTDATE']]

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPMODE'] == 'FOB') & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['TAX'] <= 0.05871993678572441)][['SHIPDATE', 'DISCOUNT', 'LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE']]

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_SUPPKEY'] < 6047) | (lineitem['LINENUMBER'] < 2) & (lineitem['RETURNFLAG'].isin(['N']))][['L_COMMENT', 'SHIPDATE', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPMODE']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN'])) | (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['RECEIPTDATE'] >= '1998-11-06')][['RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY', 'TAX']]

lineitem[(lineitem['TAX'] != 0.07771623783690114) | (lineitem['L_ORDERKEY'] < 57) & (lineitem['EXTENDEDPRICE'] > 28248.55242412345) | (lineitem['DISCOUNT'] > 0.009497580592044454) | (lineitem['RETURNFLAG'] == 'N')][['SHIPMODE', 'EXTENDEDPRICE', 'L_COMMENT', 'DISCOUNT']]

lineitem[['L_COMMENT', 'TAX', 'QUANTITY', 'DISCOUNT']].groupby(by=['QUANTITY', 'TAX', 'L_COMMENT', 'DISCOUNT']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'RETURNFLAG', 'SHIPDATE', 'EXTENDEDPRICE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['QUANTITY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'TAX']].groupby(by=['TAX', 'L_SUPPKEY', 'QUANTITY', 'SHIPINSTRUCT']).agg('count')

lineitem[['RETURNFLAG', 'LINENUMBER', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'SHIPDATE', 'QUANTITY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation.merge(region[(region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] == 'u') | (nation['N_NAME'].str.startswith('E'))][['N_NAME']].groupby(by=['N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] <= 14)][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] != 5) & (nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] == 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h') & (nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'] != 'V')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'l') | (nation['N_NAME'].str.startswith('A'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] <= 0) & (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] <= 23)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u') | (nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] >= 4)][['N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] <= 6) & (nation['N_COMMENT'] != 'l')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'].str.startswith('A'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] != 6)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] == 11)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] <= 18) | (nation['N_NATIONKEY'] <= 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] >= 2) | (nation['N_NAME'] == 'J') | (nation['N_NAME'] != 'F')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'F') & (nation['N_COMMENT'] != 'r') & (nation['N_NAME'] != 'A')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] >= 13) | (nation['N_NAME'] != 'J')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'] == 'M') & (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'] == 'r')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'].str.startswith('p'))].groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('F'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] <= 0) & (nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] == 'l') & (nation['N_NAME'] != 'R')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] > 2) | (nation['N_COMMENT'] != 'n')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] <= 19) & (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] == 'o')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 5) | (nation['N_NATIONKEY'] != 8) & (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 11)][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'n')][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_NATIONKEY'] <= 18) | (nation['N_REGIONKEY'] == 2)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 23)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 17) & (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 3) & (nation['N_NAME'] == 'V')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 1) & (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] != 'B')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 13) | (nation['N_NATIONKEY'] > 0) & (nation['N_NATIONKEY'] != 20)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 14)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 21) | (nation['N_NATIONKEY'] >= 15)][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 4)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] < 20) | (nation['N_COMMENT'] != 'p') & (nation['N_REGIONKEY'] >= 2)][['N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] > 13)].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] != 4) | (nation['N_NATIONKEY'] > 15) & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_COMMENT'] != 'p')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] >= 2)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] <= 11) | (nation['N_NAME'].str.startswith('V'))][['N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] < 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] == 21) | (nation['N_NATIONKEY'] > 14)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] != 11) | (nation['N_NATIONKEY'] < 1) & (nation['N_COMMENT'] == 'v')][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] < 19) & (nation['N_NAME'] == 'U')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] < 4)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] != 'B')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] == 'S')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] == 'P') & (customer['C_ADDRESS'] == 'z') & (customer['C_ACCTBAL'] >= 1418.2844274162758)][['C_PHONE', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'].str.startswith('P')) & (customer['C_PHONE'] != '25-')][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] < 9)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '27-') & (customer['C_PHONE'] != '18-') | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == 'j') | (customer['C_ADDRESS'] == 'U') | (customer['C_NATIONKEY'] <= 6) & (customer['C_ACCTBAL'] > -477.8389712633487)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] < 66) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE'])) | (customer['C_CUSTKEY'] < 20) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] == 1588.2819468259513)][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('mean', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'] == 'r') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')][['CLERK']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 165) | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERPRIORITY'].isin(['2-HIGH']))].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] != 26658) | (orders['O_COMMENT'] == ',') | (orders['O_COMMENT'] != 'z') | (orders['O_ORDERKEY'] != 270)].groupby(by=['CLERK', 'TOTALPRICE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] == 99583)][['ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT']].groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] > 113769) & (orders['O_COMMENT'] == 'ly ') | (orders['ORDERSTATUS'].isin(['O']))][['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1992-01-13')][['O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'] == 'j') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] >= 70651)].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['O_CUSTKEY'] <= 143114) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT'])) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '5-LOW'])) & (orders['TOTALPRICE'] >= 201665.67910781418) & (orders['ORDERDATE'] >= '1998-07-21')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 11677)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 483) | (orders['O_COMMENT'].str.startswith('b')) & (orders['O_ORDERKEY'] != 208)].merge(customer[['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 372) & (orders['O_COMMENT'].str.startswith('s'))].merge(customer[(customer['C_NATIONKEY'] == 10) & (customer['C_ADDRESS'] == 'o') | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 78)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 598)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] != ',') | (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 69109) | (orders['TOTALPRICE'] != 12152.618313713985) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] == 'u')][['O_COMMENT']]

orders[(orders['TOTALPRICE'] != 31135.675710253556) | (orders['O_CUSTKEY'] == 88389) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] != 0)][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 193570.06075142554) & (orders['O_CUSTKEY'] < 22353) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] <= 715) | (orders['ORDERDATE'] > '1998-07-21')].groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 247165.07929825434) | (orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O']))][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[(orders['TOTALPRICE'] <= 273985.48702690983) | (orders['O_CUSTKEY'] >= 85893) | (orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']]

orders[(orders['TOTALPRICE'] > 312534.72380303766) & (orders['O_ORDERKEY'] <= 188) & (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] <= 207764.73147492684) & (orders['O_CUSTKEY'] == 68029) | (orders['SHIPPRIORITY'] < 0)][['ORDERSTATUS', 'TOTALPRICE']]

orders[['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['ORDERPRIORITY', 'CLERK']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'ORDERSTATUS']].groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['O_COMMENT', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[['ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].groupby(by=['CLERK', 'O_COMMENT', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_COMMENT']].groupby(by=['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY']].groupby(by=['O_ORDERKEY', 'ORDERPRIORITY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['ORDERDATE', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#34') & (part['RETAILPRICE'] > 1098.2195722817657) | (part['BRAND'] != 'Brand#52')].groupby(by=['SIZE', 'BRAND', 'TYPE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#41') | (part['P_PARTKEY'] > 136)][['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']]

part[(part['CONTAINER'] != 'LG') | (part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'] != 'f') & (part['TYPE'] == 'E') & (part['RETAILPRICE'] >= 990.4884795713598) & (part['RETAILPRICE'] < 956.7604721900753) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3'])) | (part['PT_COMMENT'].str.startswith('s'))][['TYPE']]

part[(part['CONTAINER'] != 'MED') | (part['RETAILPRICE'] >= 985.270439975269) & (part['RETAILPRICE'] >= 906.3675622219873) & (part['MFGR'] == 'Manufacturer#5') & (part['PT_COMMENT'].str.startswith('q')) & (part['SIZE'] > 17) & (part['RETAILPRICE'] == 973.3394546767622)][['SIZE', 'CONTAINER']]

part[(part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] == 1069.762638531627) | (part['PT_COMMENT'] == 'l') & (part['PT_COMMENT'] != ' ') & (part['P_PARTKEY'] > 46) & (part['CONTAINER'] == 'JUMBO')][['SIZE', 'TYPE', 'P_NAME']]

part[(part['CONTAINER'] == 'SM') | (part['CONTAINER'] == 'MED') & (part['SIZE'] == 20) | (part['BRAND'] == 'Brand#51') & (part['SIZE'] <= 8)].groupby(by=['MFGR', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'SM') | (part['TYPE'] == 'SMA') & (part['PT_COMMENT'] == 'x') | (part['TYPE'].str.startswith('M')) & (part['TYPE'].str.startswith('SMA'))].groupby(by=['TYPE', 'P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('SM'))][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'] != 'm') & (part['TYPE'] == 'STA')][['CONTAINER', 'P_NAME', 'BRAND', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[(part['PT_COMMENT'].str.startswith('f')) & (part['BRAND'] != 'Brand#33') | (part['P_PARTKEY'] > 125) | (part['BRAND'].isin(['Brand#12', 'Brand#13', 'Brand#43', 'Brand#14', 'Brand#41', 'Brand#34', 'Brand#42', 'Brand#52', 'Brand#35', 'Brand#11', 'Brand#54', 'Brand#31', 'Brand#21'])) & (part['MFGR'] != 'Manufacturer#2') & (part['TYPE'] != 'SMA') & (part['P_NAME'].str.startswith('b'))].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('x')) & (part['RETAILPRICE'] == 994.1773913681715) & (part['PT_COMMENT'] == 'i') & (part['TYPE'] == 'M') & (part['BRAND'] != 'Brand#45') | (part['TYPE'] != 'L') & (part['MFGR'] != 'Manufacturer#3')][['SIZE', 'BRAND']]

part[(part['P_NAME'] != 'w') | (part['BRAND'] != 'Brand#42') | (part['P_NAME'] != 's') & (part['PT_COMMENT'] != 'kag') & (part['SIZE'] == 20)][['BRAND', 'PT_COMMENT', 'MFGR', 'SIZE']]

part[(part['P_NAME'] == 'h') | (part['MFGR'] != 'Manufacturer#2') | (part['RETAILPRICE'] <= 958.1722210635415) | (part['P_PARTKEY'] > 97) | (part['PT_COMMENT'].str.startswith('b'))].groupby(by=['MFGR', 'SIZE', 'P_NAME']).agg('count')

part[(part['P_NAME'].str.startswith('o')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['P_NAME'] != 'p') & (part['P_PARTKEY'] != 142) & (part['P_NAME'] != 's') | (part['P_NAME'].str.startswith('bis'))].groupby(by=['MFGR', 'RETAILPRICE']).agg('count')

part[(part['P_NAME'].str.startswith('w'))][['CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']]

part[(part['P_PARTKEY'] != 90) & (part['CONTAINER'] == 'WRAP')][['P_NAME', 'BRAND', 'MFGR']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] < 176)][['MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[(part['P_PARTKEY'] < 86) & (part['TYPE'].str.startswith('L')) & (part['TYPE'].str.startswith('P')) & (part['MFGR'] == 'Manufacturer#2')].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] >= 36) | (part['TYPE'].str.startswith('P')) | (part['PT_COMMENT'] != 'm') & (part['CONTAINER'].str.startswith('LG')) & (part['PT_COMMENT'].str.startswith('!')) | (part['SIZE'] == 26) & (part['P_NAME'].str.startswith('s')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3']))][['TYPE']]

part[(part['RETAILPRICE'] != 905.61304295388) | (part['MFGR'] == 'Manufacturer#2') & (part['RETAILPRICE'] >= 971.6204408689554) & (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] != 'f') | (part['P_NAME'] != 'd')].groupby(by=['SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] < 1022.7287403258011) | (part['P_NAME'] != 'o') | (part['RETAILPRICE'] >= 920.8764848513936) & (part['SIZE'] == 44)].groupby(by=['CONTAINER', 'SIZE', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] < 1030.3189765358873) & (part['SIZE'] > 5) | (part['RETAILPRICE'] != 968.8083473232317) & (part['TYPE'] != 'STA')].groupby(by=['BRAND', 'MFGR', 'P_NAME', 'PT_COMMENT']).agg('count')

part[(part['RETAILPRICE'] <= 1062.0845309562822) & (part['P_NAME'] != 'l') | (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] == 32) & (part['PT_COMMENT'] == ' fi') | (part['RETAILPRICE'] <= 1038.7101988817712) | (part['P_NAME'] != 'c')].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 33) & (part['BRAND'] != 'Brand#25') & (part['PT_COMMENT'] != 'n') | (part['MFGR'] == 'Manufacturer#1') & (part['RETAILPRICE'] != 910.4570546657752) | (part['SIZE'] >= 48) | (part['SIZE'] >= 48)][['SIZE', 'RETAILPRICE']]

part[(part['SIZE'] <= 1) & (part['BRAND'] != 'Brand#54') | (part['RETAILPRICE'] == 988.8923356624775) | (part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('lin'))].groupby(by=['P_NAME', 'PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

part[(part['SIZE'] <= 18)][['CONTAINER', 'RETAILPRICE', 'BRAND']].groupby(by=['CONTAINER', 'BRAND']).agg('sum', numeric_only=True)

part[(part['SIZE'] <= 36) & (part['RETAILPRICE'] >= 1011.2026448280963) | (part['PT_COMMENT'].str.startswith('e'))][['SIZE', 'P_NAME']].groupby(by=['P_NAME']).agg('max', numeric_only=True)

part[(part['SIZE'] <= 4) | (part['P_NAME'] == 'l') & (part['RETAILPRICE'] >= 1029.6463163729027) & (part['CONTAINER'].str.startswith('MED'))][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['SIZE'] > 30) & (part['PT_COMMENT'].str.startswith(' ')) | (part['PT_COMMENT'] == 'y') | (part['MFGR'] != 'Manufacturer#1') | (part['P_PARTKEY'] < 131) & (part['MFGR'].isin(['Manufacturer#3'])) | (part['RETAILPRICE'] != 1050.6329632434943) & (part['PT_COMMENT'] != 'm')][['P_NAME']]

part[(part['SIZE'] > 31) | (part['PT_COMMENT'].str.startswith('n')) & (part['CONTAINER'] == 'MED') | (part['TYPE'] != 'SMA')][['MFGR']].groupby(by=['MFGR']).agg('count')

part[(part['TYPE'] != 'E') & (part['RETAILPRICE'] <= 932.120662416881) | (part['P_NAME'].str.startswith('w')) & (part['RETAILPRICE'] != 979.23751359538) & (part['MFGR'] != 'Manufacturer#4') & (part['BRAND'] == 'Brand#14') & (part['RETAILPRICE'] >= 1045.4223713225306)].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'STA') & (part['MFGR'] != 'Manufacturer#3')][['MFGR', 'TYPE', 'BRAND', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE']]

part[(part['TYPE'] == 'E') | (part['CONTAINER'] != 'JUMBO') | (part['MFGR'] != 'Manufacturer#5') | (part['P_NAME'].str.startswith('y'))][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('count')

part[(part['TYPE'] == 'M') & (part['RETAILPRICE'] >= 901.638349072301) | (part['P_NAME'] == 'p')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME', 'RETAILPRICE']]

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'TYPE']].groupby(by=['P_NAME', 'BRAND']).agg('count')

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']].groupby(by=['SIZE', 'BRAND']).agg('mean', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE', 'PT_COMMENT', 'TYPE']].groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'BRAND', 'SIZE', 'TYPE', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']].groupby(by=['P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_PARTKEY', 'BRAND', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['P_NAME']).agg('count')

part[['P_PARTKEY', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'TYPE']].groupby(by=['TYPE', 'CONTAINER']).agg('count')

part[['P_PARTKEY', 'SIZE', 'BRAND', 'MFGR', 'PT_COMMENT', 'TYPE']].groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT', 'MFGR']).agg('count')

part[['TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']].groupby(by=['MFGR']).agg('count')

part[['TYPE', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#25') & (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] < 34) & (part['SIZE'] >= 37) & (part['CONTAINER'] != 'MED')][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['BRAND'] == 'Brand#43') | (part['P_PARTKEY'] <= 113) & (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] >= 143) & (part['SIZE'] <= 30)][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'] == 'MED') | (part['P_PARTKEY'] <= 114) & (part['RETAILPRICE'] <= 1068.6869591487468) & (part['PT_COMMENT'] == 'a') | (part['SIZE'] <= 15) | (part['TYPE'].str.startswith('M')) | (part['P_NAME'].str.startswith('p')) | (part['P_PARTKEY'] >= 69)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['P_NAME'] == 'w') | (part['CONTAINER'] == 'MED') & (part['TYPE'] == 'E') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3'])) & (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] >= 950.7952338747488)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('w')) | (part['PT_COMMENT'].str.startswith(' fi')) & (part['RETAILPRICE'] == 991.1588056937984) | (part['TYPE'].str.startswith('SMA')) | (part['SIZE'] != 37) | (part['PT_COMMENT'].str.startswith('a')) & (part['P_PARTKEY'] >= 184)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] != 'kag') | (part['PT_COMMENT'].str.startswith('i')) & (part['BRAND'] != 'Brand#35') | (part['MFGR'].isin(['Manufacturer#5'])) & (part['TYPE'].str.startswith('P')) | (part['TYPE'].str.startswith('STA')) | (part['RETAILPRICE'] != 1066.3199049926607) & (part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('ly '))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'TYPE', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_NAME'] != 'o') & (part['BRAND'].isin(['Brand#41', 'Brand#33', 'Brand#53', 'Brand#32', 'Brand#21', 'Brand#51', 'Brand#54', 'Brand#55', 'Brand#22', 'Brand#42', 'Brand#31', 'Brand#35', 'Brand#15', 'Brand#11', 'Brand#45', 'Brand#34'])) | (part['MFGR'] != 'Manufacturer#5') & (part['TYPE'].str.startswith('E')) | (part['MFGR'] == 'Manufacturer#2') | (part['P_NAME'].str.startswith('g')) | (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] < 1)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_NAME'] == 'p')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME', 'P_PARTKEY', 'BRAND']).agg('count')

partsupp.merge(part[(part['SIZE'] >= 7) & (part['P_PARTKEY'] == 170) | (part['P_NAME'] == 'l') | (part['CONTAINER'] != 'WRAP') | (part['TYPE'] == 'STA') | (part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] > 89) & (part['TYPE'] != 'L')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(part[['P_NAME', 'MFGR', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'SIZE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 13)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 4130)][['PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 4233) | (partsupp['PS_SUPPKEY'] >= 7044) & (partsupp['SUPPLYCOST'] < 936.3554917375358) & (partsupp['P_COMMENT'] == '.')].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 37) & (partsupp['P_COMMENT'] != 'n')].merge(part[(part['TYPE'].str.startswith('L')) | (part['CONTAINER'] != 'WRAP') | (part['BRAND'].isin(['Brand#13', 'Brand#41', 'Brand#22', 'Brand#12', 'Brand#53', 'Brand#44', 'Brand#45', 'Brand#52', 'Brand#55', 'Brand#54', 'Brand#25', 'Brand#11', 'Brand#43', 'Brand#23', 'Brand#24', 'Brand#32', 'Brand#15', 'Brand#31', 'Brand#42'])) | (part['P_PARTKEY'] == 17)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 21) | (partsupp['PS_SUPPKEY'] < 6851) & (partsupp['SUPPLYCOST'] == 309.05862021849487)].merge(part[['P_PARTKEY', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 26) & (partsupp['SUPPLYCOST'] != 405.6584866051649) & (partsupp['PS_PARTKEY'] < 27) | (partsupp['PS_SUPPKEY'] == 574) & (partsupp['P_COMMENT'].str.startswith('l'))][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] != 2915) | (partsupp['AVAILQTY'] > 8858) | (partsupp['SUPPLYCOST'] <= 514.0679502349502) & (partsupp['AVAILQTY'] > 4218)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 5612) | (partsupp['SUPPLYCOST'] > 506.273532912416) & (partsupp['P_COMMENT'] == 'u')][['P_COMMENT', 'AVAILQTY']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 4040) & (partsupp['SUPPLYCOST'] != 833.874540764377)][['P_COMMENT', 'PS_PARTKEY']].groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5621) | (partsupp['PS_SUPPKEY'] > 7289) | (partsupp['PS_SUPPKEY'] > 1853) | (partsupp['SUPPLYCOST'] >= 235.552576018644) & (partsupp['P_COMMENT'] == 'o')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']]

partsupp[(partsupp['PS_SUPPKEY'] > 2536) & (partsupp['AVAILQTY'] <= 2953)][['AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 6640) | (partsupp['PS_SUPPKEY'] < 7152)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'the') & (partsupp['PS_PARTKEY'] >= 43) | (partsupp['PS_PARTKEY'] <= 40)].groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ';')][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'h') | (partsupp['AVAILQTY'] == 9599)][['P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'o') | (partsupp['SUPPLYCOST'] != 405.1327710772821) | (partsupp['P_COMMENT'] != 'y') & (partsupp['AVAILQTY'] < 4979) | (partsupp['AVAILQTY'] >= 6682)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']]

partsupp[(partsupp['SUPPLYCOST'] < 49.382980365332976) & (partsupp['PS_PARTKEY'] != 29) | (partsupp['PS_SUPPKEY'] <= 3026)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 328.47380283236396) & (partsupp['P_COMMENT'] == 'b') | (partsupp['PS_PARTKEY'] >= 47)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 221.66700862620144) | (partsupp['PS_PARTKEY'] == 23) & (partsupp['PS_PARTKEY'] >= 4)].merge(supplier[(supplier['S_NATIONKEY'] != 11) & (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'] != 'P')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 88.80434215955528) & (partsupp['AVAILQTY'] != 9112) | (partsupp['SUPPLYCOST'] < 759.5674605591333) | (partsupp['SUPPLYCOST'] <= 715.2031119201956)].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 123.98272948892442) | (partsupp['PS_PARTKEY'] > 9) & (partsupp['SUPPLYCOST'] > 697.4662975963297) | (partsupp['PS_SUPPKEY'] > 5032)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']]

partsupp[(partsupp['SUPPLYCOST'] >= 149.27022919631065) | (partsupp['AVAILQTY'] == 2735) | (partsupp['AVAILQTY'] == 3593)].groupby(by=['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']).agg('count')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('count')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']).agg('count')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] > -645.0860683698429)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] != 'f') | (part['P_NAME'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[(part['PT_COMMENT'] != 'y') & (part['RETAILPRICE'] < 929.4671506575094) | (part['CONTAINER'].str.startswith('WRAP'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].groupby(by=['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'STA') | (part['SIZE'] > 6) | (part['RETAILPRICE'] == 945.7941925305458) | (part['TYPE'] == 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 2) & (region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME']).agg('min', numeric_only=True)

region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_NAME'] != 'M') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'i')].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'U')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] != 19) & (nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] >= 20)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('y'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('l')) | (nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] <= 7)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != -155.92765724246976) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 80) | (supplier['S_SUPPKEY'] == 107) & (supplier['S_ACCTBAL'] <= 6868.924977539267) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= -938.9335977412761)][['S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_ACCTBAL'] != -485.85904113474345) | (supplier['S_ACCTBAL'] > 2050.789525579702) | (supplier['S_SUPPKEY'] == 43)][['S_NAME', 'S_COMMENT']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != -914.4529473906995)].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 1441.2182397909712) & (supplier['S_ACCTBAL'] != 7168.759451744336) | (supplier['S_PHONE'] == '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 4264.841067733795) | (supplier['S_SUPPKEY'] >= 67) & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] >= 5778.574670256872) & (supplier['S_PHONE'].str.startswith('2'))][['S_NAME', 'S_ACCTBAL', 'S_COMMENT']]

supplier[(supplier['S_ACCTBAL'] == 1341.807701139155) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'T')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 5602.684510352501) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 3)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= -761.1676565275382) & (supplier['S_SUPPKEY'] < 69) & (supplier['S_NATIONKEY'] < 4) | (supplier['S_ACCTBAL'] < 9872.884080145697)][['S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 4566.914168821745) & (supplier['S_ADDRESS'] == 'B') & (supplier['S_ACCTBAL'] >= 4034.676298659744) | (supplier['S_SUPPKEY'] != 84) | (supplier['S_ACCTBAL'] > 9405.51525678574) & (supplier['S_COMMENT'] != ',')][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'] != 'M') | (supplier['S_NATIONKEY'] >= 8)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'K')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('c')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] >= 18)].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'q') & (supplier['S_ACCTBAL'] == 1742.7601126577713) & (supplier['S_SUPPKEY'] > 31)].groupby(by=['S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('v')) & (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] != 'g') | (supplier['S_SUPPKEY'] == 71) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'k')].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] != '26-')][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] == 155)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] != 8655.547400254645) & (supplier['S_SUPPKEY'] >= 1) | (supplier['S_SUPPKEY'] <= 110) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 51)][['S_COMMENT', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_NATIONKEY'] != 1) & (supplier['S_COMMENT'] != 'o')].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] <= 21) | (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] == 'y')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 12) & (supplier['S_NATIONKEY'] <= 16) | (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'] != 't') & (supplier['S_PHONE'].str.startswith('14-'))].groupby(by=['S_PHONE', 'S_ADDRESS']).agg('count')

supplier[(supplier['S_NATIONKEY'] < 22) & (supplier['S_NATIONKEY'] <= 13)].merge(nation.merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 20) & (supplier['S_SUPPKEY'] < 27) & (supplier['S_ACCTBAL'] <= 4953.486178501887)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] == 4)][['S_ADDRESS', 'S_NAME', 'S_ACCTBAL']].groupby(by=['S_NAME', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 11) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_COMMENT'] != 'al ') & (supplier['S_NATIONKEY'] < 21) | (supplier['S_NATIONKEY'] >= 21) & (supplier['S_ACCTBAL'] <= -947.6864102685847)][['S_COMMENT', 'S_ADDRESS']]

supplier[(supplier['S_NATIONKEY'] >= 7) & (supplier['S_ADDRESS'] == '6') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 75) | (supplier['S_NAME'] != 'S')].groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] != 8704.899119542219) & (supplier['S_SUPPKEY'] <= 82) & (supplier['S_ADDRESS'].str.startswith('u'))][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] == 277.614107025689) | (supplier['S_SUPPKEY'] < 30) | (supplier['S_ADDRESS'] != 'X') & (supplier['S_ADDRESS'] == 'j')].groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_PHONE'] != '26-') & (supplier['S_NATIONKEY'] < 22) | (supplier['S_NATIONKEY'] > 15)][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_PHONE'] == '26-') & (supplier['S_ACCTBAL'] != 9651.394656778637)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']]

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_NATIONKEY'] == 11)].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] > 7) | (supplier['S_SUPPKEY'] > 164)][['S_PHONE', 'S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('count')

supplier[(supplier['S_SUPPKEY'] <= 117) | (supplier['S_SUPPKEY'] < 93) | (supplier['S_ACCTBAL'] == 585.6607161654342)].groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 48) | (supplier['S_NATIONKEY'] < 14)][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 57) & (supplier['S_ACCTBAL'] < 7546.162922085326) | (supplier['S_COMMENT'] != 'f') & (supplier['S_NATIONKEY'] >= 20) & (supplier['S_NATIONKEY'] != 7) & (supplier['S_NATIONKEY'] == 2) | (supplier['S_PHONE'] == '14-')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 122) | (supplier['S_PHONE'] != '17-') | (supplier['S_NATIONKEY'] <= 18) | (supplier['S_NATIONKEY'] >= 16) & (supplier['S_ADDRESS'] != 'x') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] <= 1932.898270696184)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 185) & (supplier['S_NATIONKEY'] > 22)][['S_NAME', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_COMMENT']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_PHONE']).agg('count')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']).agg('sum', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']).agg('count')

supplier[['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'p')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'M')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] != 23) & (nation['N_REGIONKEY'] >= 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('K'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 4)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 47.47094177279939) | (customer['C_ACCTBAL'] > 3985.037254047066) & (customer['C_ADDRESS'] != 'o') | (customer['C_NAME'].str.startswith('C'))].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 9110.973276324838) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 101.81331709701703) | (customer['C_CUSTKEY'] != 89) | (customer['C_ADDRESS'] != 'D') | (customer['C_ACCTBAL'] <= 6990.831899753118) & (customer['C_ADDRESS'] == 'l')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 4285.766486160748) | (customer['C_ACCTBAL'] != 7320.088866239288) | (customer['C_CUSTKEY'] >= 70) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'FURNITURE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_PHONE'] != '13-') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ACCTBAL'] < 3798.4027502578447)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 3973.1097453441726) & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 49) | (customer['C_NATIONKEY'] < 0) & (customer['C_ACCTBAL'] >= 975.3023102686652)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 9582.602472652676) & (customer['C_CUSTKEY'] != 44)][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']]

customer[(customer['C_ADDRESS'] != 'z') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '2') & (customer['C_COMMENT'] != '.') & (customer['C_ACCTBAL'] <= 2028.838201415716) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'D') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_COMMENT'] != 'd') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 's') | (customer['C_ACCTBAL'] == 1599.102603615912) & (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] < 22)][['C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_ADDRESS'] == 'p') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == '.') & (customer['C_PHONE'] != '2')].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_COMMENT', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('b')) | (customer['C_PHONE'] == '25-') | (customer['C_PHONE'] != '18-') | (customer['C_PHONE'] == '3') | (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']]

customer[(customer['C_ADDRESS'].str.startswith('u')) & (customer['C_PHONE'] != '2') | (customer['C_CUSTKEY'] <= 4)][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT']]

customer[(customer['C_ADDRESS'].str.startswith('w')) & (customer['C_ADDRESS'] == '6') & (customer['C_ADDRESS'] == 'w') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 10) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'n') & (customer['C_PHONE'] != '13-')].groupby(by=['C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('e')) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C')][['C_PHONE', 'C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'd')].merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] != 13)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 13) | (customer['C_ADDRESS'].str.startswith('x')) | (customer['C_CUSTKEY'] == 39) | (customer['C_COMMENT'] == 'c') | (customer['C_NATIONKEY'] <= 21) | (customer['C_ADDRESS'] != '4') | (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] < 72)][['C_PHONE', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] >= 21) | (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != 't') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] == 2983.64792916983) & (customer['C_CUSTKEY'] >= 11) & (customer['C_CUSTKEY'] <= 35)][['C_COMMENT', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] >= 26) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 4)][['C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 78) | (customer['C_ADDRESS'].str.startswith('K')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_PHONE'] == '13-') & (customer['C_CUSTKEY'] == 66) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']]

customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 40) | (customer['C_NATIONKEY'] <= 16) | (customer['C_ACCTBAL'] <= 7588.866333025115)][['MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '27-') & (customer['C_ACCTBAL'] <= 5578.821797018644)][['C_NAME', 'C_CUSTKEY', 'C_COMMENT']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 21) | (customer['C_COMMENT'].str.startswith('o')) | (customer['C_CUSTKEY'] > 56) & (customer['C_ACCTBAL'] < 2683.0795095793183) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ADDRESS'].str.startswith('M')) & (customer['C_COMMENT'] == 'o')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_ACCTBAL'] < 5814.273611966308) | (customer['C_PHONE'] != '3') | (customer['C_CUSTKEY'] > 40)].groupby(by=['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']).agg('count')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ADDRESS'].str.startswith('9'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 8) | (customer['C_ACCTBAL'] <= 6550.130196732366)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 18) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_CUSTKEY'] == 66) & (customer['C_CUSTKEY'] >= 44) | (customer['C_PHONE'] != '1') | (customer['C_ADDRESS'] != 'S') & (customer['C_ADDRESS'].str.startswith('U'))][['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] == 3) | (customer['C_ADDRESS'] == 's') | (customer['C_CUSTKEY'] != 85) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'l') | (customer['C_CUSTKEY'] <= 53) & (customer['C_NAME'] == 'C')].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 5) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_PHONE'] == '27-') | (customer['C_ACCTBAL'] <= 3197.957650578971)][['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_NATIONKEY'] > 4) & (customer['C_ACCTBAL'] == 6838.781060260649)][['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']]

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ADDRESS'].str.startswith('s')) & (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'] == 'r')].groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].groupby(by=['C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_NAME']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'F')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE']).agg('count')

lineitem.merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_ACCTBAL'] > 3621.372027926568)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4699) & (partsupp['SUPPLYCOST'] <= 86.52687594230534) & (partsupp['PS_PARTKEY'] < 39)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 10)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 4374) | (partsupp['P_COMMENT'].str.startswith('y'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 728.9300897327552)][['PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] == 959.6373614338781) | (part['BRAND'].isin(['Brand#32', 'Brand#15', 'Brand#24', 'Brand#52', 'Brand#45', 'Brand#55', 'Brand#22', 'Brand#53', 'Brand#51', 'Brand#42', 'Brand#44', 'Brand#11', 'Brand#23', 'Brand#43', 'Brand#54', 'Brand#25', 'Brand#21', 'Brand#14', 'Brand#41', 'Brand#12', 'Brand#33', 'Brand#13', 'Brand#34', 'Brand#35', 'Brand#31']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.06713331484964406) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_COMMENT'] != 't') | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['L_PARTKEY'] < 173350) & (lineitem['EXTENDEDPRICE'] > 83604.70990376282)].groupby(by=['L_ORDERKEY', 'SHIPDATE', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.031982564495422264) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['L_ORDERKEY'] > 5) & (lineitem['EXTENDEDPRICE'] > 63487.764715651436) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['L_PARTKEY'] < 7854)].groupby(by=['SHIPMODE', 'TAX', 'LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['LINENUMBER'] < 3) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['LINESTATUS'] == 'O')][['COMMITDATE', 'RECEIPTDATE', 'SHIPDATE', 'QUANTITY']]

lineitem[(lineitem['L_PARTKEY'] > 25301) & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['COMMITDATE'] >= '1992-05-15')].groupby(by=['SHIPDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] == 8) & (lineitem['L_COMMENT'] != 'f') & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['L_ORDERKEY'] <= 165)].groupby(by=['SHIPMODE', 'L_COMMENT', 'SHIPINSTRUCT', 'DISCOUNT']).agg('min', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['EXTENDEDPRICE'] > 10010.306310497572) | (lineitem['LINENUMBER'] < 4)][['LINENUMBER', 'SHIPDATE', 'L_SUPPKEY', 'L_COMMENT', 'TAX', 'QUANTITY']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_COMMENT'] == 'l') | (lineitem['L_PARTKEY'] == 25057)].groupby(by=['LINENUMBER', 'TAX', 'EXTENDEDPRICE', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'FOB') & (lineitem['EXTENDEDPRICE'] == 2733.8994080541893) | (lineitem['SHIPMODE'] == 'AIR') & (lineitem['L_PARTKEY'] <= 191906) | (lineitem['DISCOUNT'] >= 0.018650143542715002) | (lineitem['L_PARTKEY'] <= 161538) | (lineitem['QUANTITY'] == 33) & (lineitem['L_ORDERKEY'] < 101) & (lineitem['LINENUMBER'] != 4)][['EXTENDEDPRICE']]

lineitem[(lineitem['TAX'] == 0.05115880737423562) | (lineitem['L_SUPPKEY'] != 2517) & (lineitem['TAX'] != 0.043913624205654936)][['EXTENDEDPRICE', 'SHIPMODE', 'SHIPDATE', 'COMMITDATE', 'L_SUPPKEY', 'L_COMMENT', 'DISCOUNT']]

lineitem[['COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'RECEIPTDATE']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'COMMITDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 36) & (partsupp['PS_SUPPKEY'] != 7097)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'QUANTITY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_ORDERKEY']].groupby(by=['L_SUPPKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'L_PARTKEY', 'COMMITDATE', 'L_COMMENT']].merge(partsupp[(partsupp['PS_PARTKEY'] == 2) | (partsupp['PS_PARTKEY'] != 14) & (partsupp['PS_SUPPKEY'] != 681)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[(region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] >= 22) | (nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == ' ')][['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'a') | (nation['N_NATIONKEY'] <= 20) & (nation['N_NATIONKEY'] < 10) | (nation['N_REGIONKEY'] >= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'] != 'K')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('count')

nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'].str.startswith(' ')) & (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'E') | (nation['N_COMMENT'] == 'p') | (nation['N_NAME'] == 'E') | (nation['N_NATIONKEY'] == 18)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'A')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'C') | (nation['N_COMMENT'] != 'o')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] != 0)][['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'F')][['N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'I')][['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NATIONKEY'] >= 21) & (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] == 19)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] < 19) & (nation['N_COMMENT'].str.startswith('y'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] > 18) | (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] != 'n') & (nation['N_COMMENT'] == 'u')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 14) | (nation['N_NAME'] == 'B')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] < 13) & (nation['N_NAME'] == 'P')].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 14)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 12)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_COMMENT'].str.startswith('h'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 17) & (nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] != 'I') | (nation['N_COMMENT'] == 'r')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_NAME'] == 'J')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 7)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 9) & (nation['N_NATIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] != 15)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 14) & (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] < 2)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 12) & (nation['N_NATIONKEY'] != 19) & (nation['N_NAME'] != 'J')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_NATIONKEY']].groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] != 'R') | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 15) | (nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] == 18)][['N_NAME', 'N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] > 16)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_NATIONKEY']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'] != 'n') | (nation['N_NATIONKEY'] <= 10)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] == 5)].merge(region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'I') & (nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'].str.startswith('S')) | (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('n'))][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'h') & (customer['C_ACCTBAL'] <= 7141.09172032978) | (customer['C_COMMENT'] == 'l') & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'm') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('O')) & (customer['C_CUSTKEY'] == 3) | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] >= -502.7646014277523) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 7)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('count')

orders.merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'] != 'C')][['ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']]

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] < 778) & (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] >= 220203.1347732763) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM'])) | (orders['O_COMMENT'] != 'f') & (orders['CLERK'] != 'C')][['O_ORDERKEY']]

orders[(orders['CLERK'].str.startswith('C'))][['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1998-07-21')][['O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] < 32108.312816660044) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '2-HIGH']))][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE']].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] == 14341) & (orders['O_COMMENT'].str.startswith('f'))][['TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] == 362) & (orders['ORDERSTATUS'] != 'O') & (orders['O_CUSTKEY'] >= 99384) & (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT') | (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] < 72861.646858206) | (orders['ORDERDATE'] != '1998-07-21')][['O_ORDERKEY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']]

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_COMMENT'] != 'f') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '2-HIGH', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['O_COMMENT'] != 'u') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] >= 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '5-LOW')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) | (orders['O_CUSTKEY'] <= 97932) | (orders['TOTALPRICE'] == 41213.298856194764) & (orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1992-01-13')].groupby(by=['TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('count')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] != 93898.63777329579) | (orders['TOTALPRICE'] == 179859.27930703427) | (orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] == 92792) | (orders['O_ORDERKEY'] >= 180) & (orders['ORDERSTATUS'] == 'P')][['CLERK']]

orders[(orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != 'n') & (orders['TOTALPRICE'] != 112450.17453898709) & (orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'].str.startswith('e')) & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] > 341)][['CLERK']]

orders[(orders['O_COMMENT'] != 'f') & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] >= 124196) & (orders['ORDERDATE'] != '1992-01-13')][['ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']]

orders[(orders['O_COMMENT'].str.startswith(' ')) & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] == 'C')].merge(customer.merge(nation[(nation['N_REGIONKEY'] < 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('j')) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] != 483) & (orders['CLERK'] == 'C')][['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']]

orders[(orders['O_COMMENT'].str.startswith('n')) | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] != 13098) & (orders['SHIPPRIORITY'] <= 0)].groupby(by=['ORDERSTATUS', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('uri')) | (orders['O_ORDERKEY'] < 752) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_COMMENT'].str.startswith('.')) | (orders['O_CUSTKEY'] != 27887) & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '5-LOW')][['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']]

orders[(orders['O_CUSTKEY'] != 56378) & (orders['O_COMMENT'] == '-')][['O_COMMENT', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 62458) & (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('e')) & (orders['TOTALPRICE'] <= 134849.87686699032) & (orders['O_COMMENT'] != ',') | (orders['ORDERDATE'] >= '1992-01-13')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']]

orders[(orders['O_CUSTKEY'] > 43795) | (orders['O_CUSTKEY'] == 30150) & (orders['O_ORDERKEY'] < 583) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['SHIPPRIORITY'] != 0)][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] != 696) & (orders['O_COMMENT'] != 'z') & (orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 314) | (orders['O_COMMENT'] != 'h') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'].str.startswith('.')) & (orders['O_ORDERKEY'] != 480)][['O_COMMENT']].groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 40) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'].str.startswith(' re')) | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] != 'd')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 773) | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['O_CUSTKEY'] <= 96813) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] == '1992-01-13')].merge(customer[(customer['C_CUSTKEY'] != 11) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] <= 135) & (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0)][['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] < 291603.3706202004)][['TOTALPRICE', 'O_COMMENT', 'CLERK', 'ORDERSTATUS']].groupby(by=['O_COMMENT', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 314472.35556889884) | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT'])) & (orders['O_ORDERKEY'] > 562) | (orders['O_COMMENT'] == 'the') | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13') | (orders['TOTALPRICE'] > 160828.44644717622) | (orders['CLERK'] != 'C')][['CLERK', 'SHIPPRIORITY']]

orders[(orders['TOTALPRICE'] >= 167337.52712709148) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_ORDERKEY'] >= 420) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_CUSTKEY'] == 13389) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'CLERK']].groupby(by=['SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY']].merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE']).agg('count')

orders[['O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] == 'Brand#43') | (part['RETAILPRICE'] <= 929.8345999873103) & (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] == 971.6109681095822) & (part['P_PARTKEY'] <= 100) & (part['TYPE'] == 'STA')].groupby(by=['P_PARTKEY', 'CONTAINER', 'TYPE']).agg('count')

part[(part['BRAND'] == 'Brand#51') & (part['TYPE'] == 'L') | (part['P_NAME'] == 'i') | (part['P_PARTKEY'] == 78) & (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] > 22)].groupby(by=['MFGR', 'P_NAME', 'TYPE']).agg('mean', numeric_only=True)

part[(part['BRAND'] == 'Brand#54') & (part['RETAILPRICE'] >= 1070.1775424691368) | (part['RETAILPRICE'] < 1035.643007357459)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'SIZE']]

part[(part['CONTAINER'] != 'JUMBO')][['TYPE', 'BRAND', 'P_PARTKEY']].groupby(by=['TYPE', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') | (part['SIZE'] > 9) | (part['TYPE'] != 'M')][['P_PARTKEY', 'P_NAME', 'TYPE']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'WRAP') | (part['TYPE'] == 'SMA') & (part['CONTAINER'] == 'JUMBO') & (part['SIZE'] > 2) & (part['RETAILPRICE'] < 994.95456715887) & (part['BRAND'] != 'Brand#33')][['SIZE', 'TYPE', 'BRAND', 'CONTAINER']]

part[(part['CONTAINER'] == 'JUMBO') | (part['TYPE'] == 'STA') & (part['RETAILPRICE'] != 997.455794561647) & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#5']))][['P_PARTKEY', 'SIZE']].groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'MED') & (part['CONTAINER'] != 'JUMBO') & (part['P_NAME'] != 'cor') | (part['PT_COMMENT'] == 'ly ') & (part['TYPE'] == 'SMA') | (part['BRAND'].isin(['Brand#24', 'Brand#35', 'Brand#13', 'Brand#51', 'Brand#12', 'Brand#22', 'Brand#34', 'Brand#41', 'Brand#25', 'Brand#55', 'Brand#31', 'Brand#33']))].groupby(by=['P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'] == 'Brand#11') | (part['MFGR'] != 'Manufacturer#2') & (part['RETAILPRICE'] == 1074.329342626293) & (part['P_NAME'].str.startswith('lem')) & (part['PT_COMMENT'].str.startswith('l'))][['PT_COMMENT', 'BRAND', 'MFGR', 'TYPE']]

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#32') | (part['P_NAME'] != 'g') | (part['SIZE'] < 33)].groupby(by=['MFGR', 'BRAND', 'P_NAME', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#1') & (part['SIZE'] != 34) & (part['P_NAME'] != 'a') | (part['CONTAINER'] != 'LG') & (part['P_NAME'] != 'i')].groupby(by=['PT_COMMENT', 'BRAND', 'RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] < 6) & (part['SIZE'] > 37)][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']]

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1'])) | (part['BRAND'].isin(['Brand#12', 'Brand#33', 'Brand#42', 'Brand#23', 'Brand#32', 'Brand#15', 'Brand#25', 'Brand#44'])) | (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('e')) & (part['TYPE'].str.startswith('SMA')) & (part['TYPE'] == 'P') & (part['P_PARTKEY'] != 166)][['P_NAME', 'P_PARTKEY', 'PT_COMMENT']]

part[(part['P_NAME'] == 'i')][['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

part[(part['P_NAME'] == 'k') & (part['CONTAINER'] == 'WRAP') & (part['TYPE'] != 'L') & (part['PT_COMMENT'].str.startswith('a'))].groupby(by=['TYPE', 'CONTAINER', 'BRAND', 'MFGR', 'SIZE']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] <= 127) | (part['P_NAME'] != 'k') | (part['MFGR'] == 'Manufacturer#2')][['P_NAME', 'MFGR', 'RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']]

part[(part['P_PARTKEY'] <= 134) | (part['PT_COMMENT'] != 'd') | (part['P_NAME'] != 'd') | (part['MFGR'] == 'Manufacturer#5') | (part['TYPE'] == 'SMA') & (part['P_PARTKEY'] > 26) & (part['RETAILPRICE'] > 1034.914604047599) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5'])) & (part['P_PARTKEY'] >= 58)][['MFGR']]

part[(part['P_PARTKEY'] > 184) | (part['RETAILPRICE'] == 1066.2066708327716) | (part['PT_COMMENT'] == 'p') | (part['TYPE'] != 'L')].groupby(by=['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 12) | (part['PT_COMMENT'].str.startswith('d'))][['TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']]

part[(part['P_PARTKEY'] >= 139) | (part['CONTAINER'].str.startswith('WRAP')) | (part['PT_COMMENT'].str.startswith('n'))][['MFGR', 'P_PARTKEY', 'RETAILPRICE']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] != 1020.642977470933) & (part['P_NAME'].str.startswith('cor')) & (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] == 17) & (part['CONTAINER'].str.startswith('SM'))][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'SIZE']]

part[(part['RETAILPRICE'] <= 1036.2355713526968) | (part['TYPE'] == 'M') | (part['PT_COMMENT'] != 'y') & (part['P_NAME'].str.startswith('p')) | (part['SIZE'] <= 30) & (part['BRAND'] == 'Brand#55')][['RETAILPRICE', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[(part['RETAILPRICE'] <= 911.0426563295256) & (part['MFGR'].isin(['Manufacturer#4'])) & (part['P_PARTKEY'] != 100) & (part['PT_COMMENT'] == ' ') | (part['PT_COMMENT'] == 'f')][['SIZE']].groupby(by=['SIZE']).agg('max', numeric_only=True)

part[(part['SIZE'] != 48)][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[(part['TYPE'] != 'E') & (part['RETAILPRICE'] > 978.5714723685428) | (part['TYPE'].str.startswith('E')) | (part['CONTAINER'] != 'WRAP') | (part['TYPE'].str.startswith('E')) | (part['TYPE'].str.startswith('M'))].groupby(by=['SIZE', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'P') | (part['MFGR'] != 'Manufacturer#5') | (part['TYPE'] != 'P') & (part['P_PARTKEY'] > 116) & (part['MFGR'] != 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4'])) & (part['PT_COMMENT'].str.startswith(' ')) | (part['BRAND'].isin(['Brand#11', 'Brand#43', 'Brand#44', 'Brand#23', 'Brand#42', 'Brand#32', 'Brand#15', 'Brand#34', 'Brand#45', 'Brand#35', 'Brand#21', 'Brand#31', 'Brand#14', 'Brand#24', 'Brand#33', 'Brand#52', 'Brand#12', 'Brand#51']))].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'P') | (part['RETAILPRICE'] >= 1086.4575750461054) & (part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] != 174)][['P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

part[(part['TYPE'] != 'S') & (part['BRAND'].isin(['Brand#43', 'Brand#44', 'Brand#22', 'Brand#14', 'Brand#34', 'Brand#13', 'Brand#35'])) & (part['BRAND'] == 'Brand#41') | (part['CONTAINER'] != 'WRAP')].groupby(by=['P_NAME', 'TYPE', 'MFGR', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'SMA') | (part['P_PARTKEY'] < 5) | (part['TYPE'] == 'S') & (part['TYPE'] != 'S')][['P_NAME', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']]

part[(part['TYPE'] == 'STA') & (part['TYPE'] == 'S') & (part['P_NAME'] == 'l') | (part['PT_COMMENT'] == 'ly ') & (part['TYPE'] == 'S') | (part['TYPE'].str.startswith('S'))].groupby(by=['TYPE', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('S')) | (part['TYPE'].str.startswith('STA')) & (part['SIZE'] < 21) | (part['RETAILPRICE'] != 912.4477936413044) & (part['SIZE'] <= 31) & (part['MFGR'].isin(['Manufacturer#1'])) | (part['PT_COMMENT'] != 'x')].groupby(by=['TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] < 1012.3833941824549) | (part['SIZE'] > 13) & (part['SIZE'] == 27)].groupby(by=['P_PARTKEY', 'P_NAME', 'SIZE', 'RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']].groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['PT_COMMENT', 'CONTAINER', 'TYPE', 'MFGR']).agg('count')

part[['MFGR', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']].groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

part[['MFGR', 'TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['BRAND']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']].groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']].groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] == 'SM') & (part['P_NAME'] == 'm') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['BRAND'].isin(['Brand#33', 'Brand#12', 'Brand#52', 'Brand#22', 'Brand#23', 'Brand#45', 'Brand#21', 'Brand#41', 'Brand#42', 'Brand#44', 'Brand#35', 'Brand#13', 'Brand#11', 'Brand#55', 'Brand#34', 'Brand#14', 'Brand#32'])) | (part['P_NAME'].str.startswith('c')) & (part['CONTAINER'] == 'JUMBO') | (part['SIZE'] < 11) & (part['RETAILPRICE'] > 942.0014584824805) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#3')][['MFGR', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] <= 5) | (part['P_NAME'] == 'v') & (part['CONTAINER'] != 'LG')][['RETAILPRICE', 'TYPE', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['TYPE'] != 'S') & (part['TYPE'] != 'E') & (part['RETAILPRICE'] >= 936.7822647794353)][['P_PARTKEY', 'TYPE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'BRAND', 'RETAILPRICE', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 1642.3395486999786) & (supplier['S_ACCTBAL'] <= 3037.2278313225897) & (supplier['S_SUPPKEY'] == 182)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 19) | (supplier['S_PHONE'] != '17-')].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('U')) | (nation['N_NATIONKEY'] >= 14)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 8214) | (partsupp['PS_PARTKEY'] != 11) | (partsupp['SUPPLYCOST'] > 871.3844595934888) & (partsupp['PS_PARTKEY'] != 8) & (partsupp['PS_SUPPKEY'] <= 7060)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']]

partsupp[(partsupp['AVAILQTY'] == 2163) | (partsupp['SUPPLYCOST'] <= 595.5776080350922) & (partsupp['PS_SUPPKEY'] >= 4046) & (partsupp['PS_PARTKEY'] >= 27) | (partsupp['SUPPLYCOST'] == 716.3768431390258)].merge(part[(part['P_PARTKEY'] >= 127) | (part['PT_COMMENT'] == 'n')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 2225) & (partsupp['SUPPLYCOST'] == 523.0679428650157)].merge(supplier[(supplier['S_NATIONKEY'] != 7) | (supplier['S_NATIONKEY'] == 20) | (supplier['S_ADDRESS'] == ' ') | (supplier['S_ACCTBAL'] == 5330.43212044219) | (supplier['S_SUPPKEY'] == 87)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 396)].merge(part[(part['CONTAINER'].str.startswith('LG'))][['P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 3) & (partsupp['SUPPLYCOST'] <= 751.8344387121587) | (partsupp['SUPPLYCOST'] >= 370.7089569304703)].merge(part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 33) & (partsupp['AVAILQTY'] >= 4510) & (partsupp['AVAILQTY'] > 2640) | (partsupp['AVAILQTY'] <= 513)].merge(part[(part['RETAILPRICE'] != 958.0369447439784) | (part['P_PARTKEY'] >= 66) | (part['RETAILPRICE'] != 1011.6752593110597)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 34) | (partsupp['PS_SUPPKEY'] < 4044) & (partsupp['AVAILQTY'] > 3667) | (partsupp['PS_SUPPKEY'] >= 1290) | (partsupp['P_COMMENT'] != '.')][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']]

partsupp[(partsupp['PS_PARTKEY'] < 41) & (partsupp['PS_PARTKEY'] >= 23)].merge(supplier[(supplier['S_COMMENT'] == 'the')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 43) | (partsupp['SUPPLYCOST'] <= 183.02958623547218) & (partsupp['P_COMMENT'] != 'u') & (partsupp['PS_SUPPKEY'] >= 4453) | (partsupp['P_COMMENT'] != 'k')].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 18) | (partsupp['PS_SUPPKEY'] >= 1648) & (partsupp['AVAILQTY'] >= 9273) & (partsupp['AVAILQTY'] != 9717) | (partsupp['SUPPLYCOST'] > 559.5561505637818)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 42) | (partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['AVAILQTY'] < 7314)].merge(part[(part['RETAILPRICE'] <= 1012.0553617124068) & (part['PT_COMMENT'] == 'm') & (part['RETAILPRICE'] == 1077.0285189739307) | (part['RETAILPRICE'] >= 1067.0739642339515)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 4722) & (partsupp['PS_SUPPKEY'] <= 2075)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['P_COMMENT', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 1078) & (partsupp['PS_PARTKEY'] > 17) & (partsupp['P_COMMENT'] != 'k')][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].groupby(by=['PS_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2468)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2922) & (partsupp['SUPPLYCOST'] != 247.01781731233038) & (partsupp['AVAILQTY'] == 7735) & (partsupp['PS_PARTKEY'] == 12) | (partsupp['SUPPLYCOST'] == 874.7935230720394)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 5262) | (partsupp['P_COMMENT'] == 'j')].merge(part[(part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] >= 18) & (part['RETAILPRICE'] > 920.8849822862933) & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] != 'Brand#32')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 4671) & (partsupp['PS_SUPPKEY'] != 5138) & (partsupp['P_COMMENT'] == 'y') | (partsupp['AVAILQTY'] <= 5989)][['SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 7295)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 1639) | (partsupp['PS_PARTKEY'] < 26) | (partsupp['PS_PARTKEY'] != 15) | (partsupp['SUPPLYCOST'] >= 858.2750591582519) | (partsupp['SUPPLYCOST'] == 678.8736530866214)][['P_COMMENT']].groupby(by=['P_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 2170) | (partsupp['SUPPLYCOST'] >= 263.8775587751873)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'e') | (partsupp['AVAILQTY'] >= 2152) & (partsupp['SUPPLYCOST'] > 394.68164772302435) & (partsupp['AVAILQTY'] > 4347) & (partsupp['SUPPLYCOST'] == 898.4847257870064)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'k') | (partsupp['PS_PARTKEY'] >= 27) & (partsupp['PS_PARTKEY'] > 4) & (partsupp['P_COMMENT'].str.startswith('are'))].merge(supplier[(supplier['S_COMMENT'] == 'u') & (supplier['S_NATIONKEY'] > 23) & (supplier['S_NATIONKEY'] < 19)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'v') & (partsupp['PS_SUPPKEY'] != 922) | (partsupp['PS_SUPPKEY'] < 81) | (partsupp['SUPPLYCOST'] > 960.6732008082497)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'j') & (partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['PS_PARTKEY'] == 4) | (partsupp['PS_SUPPKEY'] < 795) & (partsupp['PS_SUPPKEY'] == 6487)][['SUPPLYCOST']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'v') & (partsupp['PS_SUPPKEY'] < 2617)].merge(part[(part['BRAND'] != 'Brand#55') & (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'] != 'ly ') | (part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'].str.startswith('e'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['PS_PARTKEY'] <= 17) & (partsupp['P_COMMENT'] == ';')].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 693.0585135325591) & (partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['SUPPLYCOST'] > 182.64384436453955) | (partsupp['PS_PARTKEY'] >= 12) & (partsupp['PS_SUPPKEY'] != 4820)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 764.3068577818124) | (partsupp['PS_SUPPKEY'] < 2838) & (partsupp['PS_PARTKEY'] > 33)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 220.31915411924913)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 847.1405345486717) | (partsupp['PS_PARTKEY'] == 3) & (partsupp['SUPPLYCOST'] == 95.22937041802176)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 909.5586478160093)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 674.3014519154782) & (partsupp['PS_SUPPKEY'] > 7066) & (partsupp['AVAILQTY'] == 1069) & (partsupp['AVAILQTY'] != 8550) | (partsupp['AVAILQTY'] < 8891)][['AVAILQTY']].groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'b')][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'n') | (supplier['S_PHONE'] == '2') & (supplier['S_ADDRESS'] != 'y') | (supplier['S_SUPPKEY'] == 118) & (supplier['S_NATIONKEY'] >= 19) | (supplier['S_PHONE'] == '1')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 3) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] != 'E') & (region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] != 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] < 1) & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 3) | (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

region[(region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] < 2)][['R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'].str.startswith('r'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] < 18) & (nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] != 's')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 21)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 5061.844444595209)][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].groupby(by=['S_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 5288.974929529669)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 7666.298257546855)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 965.3064884067232)][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_ACCTBAL'] <= 1499.497847405151)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 1802.3439778671293) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] == 9196.999936219254)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']]

supplier[(supplier['S_ADDRESS'] != '1') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'] != 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'r') & (supplier['S_ADDRESS'] == '9')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('C')) & (supplier['S_ADDRESS'].str.startswith('M')) | (supplier['S_ACCTBAL'] >= 7410.6948987690075) & (supplier['S_SUPPKEY'] > 92) & (supplier['S_ADDRESS'] != 'B')][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('I')) | (supplier['S_NATIONKEY'] < 7) | (supplier['S_ACCTBAL'] <= 1726.9590635229426) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'l')][['S_PHONE']].groupby(by=['S_PHONE']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('O'))][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_SUPPKEY'] == 159) | (supplier['S_NATIONKEY'] < 8) | (supplier['S_ACCTBAL'] > 7983.4921650745955) | (supplier['S_COMMENT'].str.startswith('f'))].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 23)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('q')) | (supplier['S_ACCTBAL'] != -252.74158816827844) | (supplier['S_ADDRESS'] != 'X')][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('0'))][['S_PHONE']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_SUPPKEY'] >= 159) | (supplier['S_ACCTBAL'] <= 3871.472165785981) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 7)][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_COMMENT'] != ' sl') | (supplier['S_COMMENT'] != 'c')][['S_PHONE']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 1885.9117843689576) & (supplier['S_ADDRESS'] != '3') & (supplier['S_SUPPKEY'] >= 172) | (supplier['S_ADDRESS'] != 'P') & (supplier['S_SUPPKEY'] < 90) | (supplier['S_COMMENT'].str.startswith('es '))][['S_ADDRESS', 'S_NAME', 'S_PHONE']]

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_SUPPKEY'] <= 170)][['S_COMMENT', 'S_PHONE', 'S_NAME']].groupby(by=['S_NAME', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 123) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] != 72)][['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']]

supplier[(supplier['S_SUPPKEY'] == 111) & (supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] < 5640.437581151373) & (supplier['S_ADDRESS'] != ',') & (supplier['S_ADDRESS'] != 'L') | (supplier['S_SUPPKEY'] > 13)].groupby(by=['S_NATIONKEY', 'S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 101) | (supplier['S_ACCTBAL'] != 4147.816855277561) | (supplier['S_SUPPKEY'] >= 110) & (supplier['S_NATIONKEY'] >= 9) | (supplier['S_ACCTBAL'] > 9491.491844285521) | (supplier['S_PHONE'] != '28-') & (supplier['S_ADDRESS'] != 'l')].groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 6) | (supplier['S_ACCTBAL'] >= 1239.0808913524158) & (supplier['S_SUPPKEY'] >= 182) & (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_ACCTBAL'] <= 6593.010192943413)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] >= 52) & (supplier['S_SUPPKEY'] <= 102) | (supplier['S_ACCTBAL'] >= 4496.115045019225) | (supplier['S_ADDRESS'].str.startswith('i')) | (supplier['S_NATIONKEY'] <= 3)].merge(nation[(nation['N_NATIONKEY'] <= 6) & (nation['N_COMMENT'] == 'v')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']].groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_PHONE']].groupby(by=['S_PHONE', 'S_NAME', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']].groupby(by=['S_NAME', 'S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_PHONE', 'S_COMMENT', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] == 2) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'u')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_COMMENT'].str.startswith('r')) & (nation['N_COMMENT'] != 'a')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] != 5) & (nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] <= 17) | (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] <= 8) & (nation['N_NATIONKEY'] >= 17)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] >= 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'].str.startswith('n'))].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] > 5) | (nation['N_COMMENT'] == 'p')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] < 14) | (nation['N_NATIONKEY'] <= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 9959.873963140839) | (customer['C_NATIONKEY'] <= 16) | (customer['C_ACCTBAL'] != 1992.13138978209) & (customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 2652.0893242308216) & (customer['C_NATIONKEY'] == 20)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'p')].merge(nation[(nation['N_NATIONKEY'] <= 11) | (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] > 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 's') | (customer['C_PHONE'] == '3')][['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']).agg('count')

customer[(customer['C_COMMENT'] != 'k') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_PHONE'] != '3') & (customer['C_COMMENT'] != 'n') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] >= 22) & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 87)][['MKTSEGMENT', 'C_PHONE', 'C_ADDRESS']]

customer[(customer['C_COMMENT'] == 'r') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_CUSTKEY'] < 69) | (customer['C_CUSTKEY'] == 53) | (customer['C_ADDRESS'] == 'B')].groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('u'))][['MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_NAME'].str.startswith('A'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 52) | (customer['C_COMMENT'] == 'n') & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ADDRESS'].str.startswith('X'))][['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']]

customer[(customer['C_CUSTKEY'] < 19) & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ADDRESS'] == 'j') | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'F') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'] != '9')][['C_PHONE', 'C_ACCTBAL', 'C_NAME']]

customer[(customer['C_CUSTKEY'] == 15) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] != 7)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 78) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_CUSTKEY'] == 89) | (customer['C_ADDRESS'] == 'u') & (customer['C_ACCTBAL'] > 1005.4324177331521) & (customer['C_CUSTKEY'] <= 35) & (customer['C_PHONE'] == '27-') | (customer['C_PHONE'] != '13-')][['C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']]

customer[(customer['C_CUSTKEY'] > 72) | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] != 84) | (customer['C_CUSTKEY'] < 51) | (customer['C_CUSTKEY'] != 84) | (customer['C_NATIONKEY'] == 12) | (customer['C_ACCTBAL'] <= 7356.579766040597)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']]

customer[(customer['C_CUSTKEY'] >= 6) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] > 139.27527408223386) | (customer['C_ACCTBAL'] > -882.2767429515516) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 17)][['C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']]

customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] >= 44) & (customer['C_ACCTBAL'] > 8455.468860367973) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] != 'c') | (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']]

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 2079.4626845381354) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] > 14) & (customer['C_PHONE'] != '13-') & (customer['C_NATIONKEY'] > 10) | (customer['C_ADDRESS'] == 'e')][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS']]

customer[(customer['C_NAME'].str.startswith('C'))][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('count')

customer[(customer['C_NATIONKEY'] < 21) | (customer['C_ACCTBAL'] > 3724.189120036439) & (customer['C_CUSTKEY'] <= 12) & (customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] == 11) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] != '22-') & (customer['C_COMMENT'] == 'p')][['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL']]

customer[(customer['C_PHONE'] != '13-') | (customer['C_CUSTKEY'] > 2) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'e') & (customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'MACHINERY']))][['C_NAME']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') | (customer['C_ACCTBAL'] > 6610.3034836374845) & (customer['C_PHONE'] != '22-') | (customer['C_NATIONKEY'] < 4) | (customer['C_PHONE'] == '3') | (customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] != 'J')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] < 18)][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] == 49) & (customer['C_COMMENT'] == 'n')].merge(nation[(nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 14)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_COMMENT'] == 'n')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL']].groupby(by=['C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME', 'C_ACCTBAL']).agg('count')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] < 21) & (nation['N_NATIONKEY'] > 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] >= 4903.14833159322) | (customer['C_NATIONKEY'] >= 14)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 9) & (customer['C_COMMENT'] == 'y')][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['O_CUSTKEY'] != 109928) & (orders['O_CUSTKEY'] == 114880) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['O_CUSTKEY'] > 131078) | (orders['SHIPPRIORITY'] == 0)][['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['SIZE'] < 39)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'BRAND', 'SIZE']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 4786) & (partsupp['AVAILQTY'] == 8290) & (partsupp['SUPPLYCOST'] > 595.9539918612908) & (partsupp['PS_PARTKEY'] == 6)].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 8299) | (partsupp['SUPPLYCOST'] <= 147.17425836070987) & (partsupp['AVAILQTY'] < 5853) | (partsupp['AVAILQTY'] >= 6253) & (partsupp['SUPPLYCOST'] >= 721.4417793323001)].merge(part[(part['P_PARTKEY'] == 191)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 7286) & (partsupp['SUPPLYCOST'] > 95.14058854117235) | (partsupp['SUPPLYCOST'] > 234.2172246299948) | (partsupp['PS_SUPPKEY'] <= 1842)][['PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'e') & (partsupp['PS_PARTKEY'] <= 42) & (partsupp['AVAILQTY'] != 9980)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 102.11315468770425) | (partsupp['AVAILQTY'] == 3489) & (partsupp['SUPPLYCOST'] >= 363.3868499046933) & (partsupp['PS_SUPPKEY'] <= 6643) | (partsupp['PS_SUPPKEY'] <= 5184)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 531.1317980011121)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] != 'Brand#41')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] != 0.06448005471637505) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['RECEIPTDATE'] == '1992-05-02')][['RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 31948.672586756224) & (lineitem['DISCOUNT'] < 0.001892478302163736) & (lineitem['L_PARTKEY'] >= 49312) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['RETURNFLAG'] != 'A') & (lineitem['LINENUMBER'] > 3)][['LINENUMBER', 'TAX', 'QUANTITY', 'L_COMMENT', 'COMMITDATE']]

lineitem[(lineitem['EXTENDEDPRICE'] > 16647.77049020637) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['LINESTATUS'] == 'O') & (lineitem['DISCOUNT'] <= 0.03774686447322038) | (lineitem['L_SUPPKEY'] > 8893) & (lineitem['L_ORDERKEY'] < 50)].groupby(by=['SHIPDATE', 'L_PARTKEY', 'L_SUPPKEY', 'TAX']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 4) | (lineitem['L_SUPPKEY'] < 7649) | (lineitem['L_COMMENT'] == ' ca') | (lineitem['L_SUPPKEY'] >= 70) & (lineitem['LINENUMBER'] < 3) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_PARTKEY'] >= 75035) & (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['TAX'] >= 0.03315760226021107)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['LINENUMBER'] <= 5) | (lineitem['LINESTATUS'] == 'F') & (lineitem['EXTENDEDPRICE'] != 26358.55755485798) | (lineitem['SHIPDATE'] != '1998-10-30')][['L_PARTKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'QUANTITY']]

lineitem[(lineitem['LINESTATUS'] != 'O')][['SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'RECEIPTDATE', 'TAX', 'LINESTATUS', 'QUANTITY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']]

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['L_SUPPKEY'] == 4443) | (lineitem['LINENUMBER'] > 4) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_ORDERKEY'] <= 63) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD']))][['L_COMMENT']].groupby(by=['L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['EXTENDEDPRICE'] != 45966.606938424506) & (lineitem['TAX'] != 0.04308926803010878) & (lineitem['L_COMMENT'] == 'r') & (lineitem['DISCOUNT'] <= 0.05077015191906609) | (lineitem['L_ORDERKEY'] > 154) & (lineitem['SHIPMODE'].isin(['FOB', 'RAIL']))][['LINENUMBER', 'SHIPMODE', 'SHIPDATE', 'TAX']]

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['SHIPMODE'] != 'AIR') & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['L_ORDERKEY'] < 125)][['LINESTATUS', 'SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE', 'EXTENDEDPRICE']]

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] > 159) & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['LINENUMBER'] != 4) & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['L_COMMENT'] == 'ly ') | (lineitem['LINENUMBER'] > 5) | (lineitem['L_ORDERKEY'] < 52) | (lineitem['TAX'] >= 0.05916498264574838) | (lineitem['DISCOUNT'] >= 0.061435155094822946)][['RETURNFLAG']]

lineitem[(lineitem['L_COMMENT'] != 'y')].merge(orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 'h') | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['TAX'] > 0.014163517399375963)][['TAX', 'LINENUMBER']].groupby(by=['LINENUMBER', 'TAX']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('c'))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] == 51) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['L_ORDERKEY'] <= 79) | (lineitem['L_PARTKEY'] > 73444) & (lineitem['LINESTATUS'].isin(['F']))].groupby(by=['SHIPDATE', 'L_PARTKEY', 'LINESTATUS', 'LINENUMBER', 'RETURNFLAG']).agg('count')

lineitem[(lineitem['L_PARTKEY'] < 100393) | (lineitem['TAX'] < 0.0187975089208084) | (lineitem['L_SUPPKEY'] != 7259) | (lineitem['LINENUMBER'] == 5) | (lineitem['LINENUMBER'] < 5) | (lineitem['L_COMMENT'].str.startswith('y'))].groupby(by=['RETURNFLAG', 'EXTENDEDPRICE', 'SHIPMODE', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 172160) | (lineitem['LINENUMBER'] <= 1) | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['DISCOUNT'] <= 0.06018620327323196)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 32289) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['QUANTITY'] > 32) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['QUANTITY'] > 11) & (lineitem['QUANTITY'] > 36)].groupby(by=['RETURNFLAG', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 37331) & (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['EXTENDEDPRICE'] > 15945.896671631224) | (lineitem['EXTENDEDPRICE'] > 71784.02768127747) | (lineitem['L_ORDERKEY'] != 173)][['L_SUPPKEY', 'RECEIPTDATE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['TAX'] <= 0.04536239633610194) & (lineitem['TAX'] <= 0.033003899355550266) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['LINENUMBER'] == 1) | (lineitem['L_PARTKEY'] != 190217) & (lineitem['EXTENDEDPRICE'] != 20819.764421530337) & (lineitem['DISCOUNT'] <= 0.07407462474425795)][['L_COMMENT']]

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['DISCOUNT'] == 0.09662743838675969)][['SHIPDATE', 'SHIPMODE', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'DISCOUNT', 'LINESTATUS', 'QUANTITY', 'SHIPINSTRUCT']]

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPMODE'].isin(['FOB', 'SHIP'])) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['TAX'] != 0.027440918443423463) & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['SHIPMODE'].isin(['AIR', 'FOB']))].merge(partsupp[(partsupp['PS_SUPPKEY'] == 2422) | (partsupp['PS_SUPPKEY'] > 4343)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['LINENUMBER'] >= 1) | (lineitem['L_SUPPKEY'] < 6786) & (lineitem['L_SUPPKEY'] == 9053) | (lineitem['LINENUMBER'] > 3) & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_PARTKEY'] > 88386) | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['DISCOUNT'] != 0.038274872866348154)][['RECEIPTDATE']]

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINENUMBER'] > 4) | (lineitem['L_SUPPKEY'] >= 3654) | (lineitem['QUANTITY'] < 37) | (lineitem['QUANTITY'] > 42) & (lineitem['L_COMMENT'].str.startswith('f')) & (lineitem['TAX'] > 0.013691829430188207) | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['EXTENDEDPRICE'] < 24511.47374033248) & (lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL']))][['LINENUMBER']]

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_PARTKEY'] >= 19750) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['COMMITDATE'] == '1992-05-15')].merge(partsupp[(partsupp['SUPPLYCOST'] == 593.0460041109478) | (partsupp['AVAILQTY'] > 3647) & (partsupp['AVAILQTY'] < 7030)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) | (lineitem['LINENUMBER'] != 5) & (lineitem['L_ORDERKEY'] < 152) & (lineitem['EXTENDEDPRICE'] <= 21945.824386107557) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['TAX'] > 0.011071333796973377) | (lineitem['L_COMMENT'] != 'u') | (lineitem['EXTENDEDPRICE'] < 33506.36718347619) & (lineitem['QUANTITY'] > 27)][['DISCOUNT']]

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_SUPPKEY'] <= 9919) & (lineitem['LINENUMBER'] <= 1) | (lineitem['QUANTITY'] >= 43) & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_SUPPKEY'] <= 6417) | (lineitem['L_PARTKEY'] < 156098) | (lineitem['RETURNFLAG'] == 'A') & (lineitem['LINENUMBER'] < 1) & (lineitem['L_ORDERKEY'] < 169)][['DISCOUNT']]

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINENUMBER'] >= 3)][['EXTENDEDPRICE', 'RETURNFLAG', 'QUANTITY']].groupby(by=['QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.06837322195020946) | (lineitem['L_PARTKEY'] >= 171979) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['L_SUPPKEY'] == 4089) & (lineitem['RECEIPTDATE'] >= '1998-11-06')][['L_COMMENT', 'RECEIPTDATE']].groupby(by=['L_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.052033416029193764) & (lineitem['QUANTITY'] < 46) & (lineitem['L_ORDERKEY'] < 85) | (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['SHIPMODE'].isin(['MAIL']))][['DISCOUNT', 'LINESTATUS', 'RETURNFLAG', 'L_SUPPKEY']]

lineitem[(lineitem['TAX'] >= 0.003339972035371863) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_SUPPKEY'] != 8275) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['L_ORDERKEY'] >= 192) & (lineitem['QUANTITY'] > 19) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['L_ORDERKEY'] != 17)].groupby(by=['QUANTITY']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'QUANTITY', 'LINESTATUS', 'RETURNFLAG', 'TAX']].groupby(by=['TAX', 'LINENUMBER', 'RETURNFLAG', 'QUANTITY']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'TAX', 'RETURNFLAG', 'COMMITDATE', 'SHIPDATE', 'LINENUMBER', 'DISCOUNT', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'TAX', 'COMMITDATE', 'SHIPMODE', 'LINENUMBER', 'EXTENDEDPRICE', 'DISCOUNT', 'RECEIPTDATE']].groupby(by=['EXTENDEDPRICE', 'TAX']).agg('max', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPDATE', 'RECEIPTDATE', 'TAX', 'SHIPMODE', 'RETURNFLAG']].merge(orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] >= 60469)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'SHIPMODE', 'COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE', 'SHIPMODE', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPDATE']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'AME') & (region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation.merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation.merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'n') | (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'c') & (nation['N_COMMENT'] != ' ') & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('h'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'S')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] == 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_NATIONKEY'] < 9)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] == 'P') | (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_COMMENT'] != 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] != 22)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] >= 23)].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'G') & (nation['N_COMMENT'] != 's')].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] < 2)].merge(region[(region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] <= 7) & (nation['N_COMMENT'] == 'i')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'] == 'E')].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 12) & (nation['N_COMMENT'] != 't') | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 0) & (nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] != 0)][['N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 19) & (nation['N_NATIONKEY'] <= 2) | (nation['N_NAME'] != 'I') | (nation['N_NAME'] != 'K')][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 10)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 23) & (nation['N_NATIONKEY'] != 23) & (nation['N_COMMENT'] != 'p') & (nation['N_COMMENT'] != 'y')].merge(region[(region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 4)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 0) | (nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] < 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 23) | (nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 18) & (nation['N_COMMENT'] != 'a')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 19)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 5) | (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 7)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] != 3)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] > 3) | (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] == 'o') | (nation['N_NAME'].str.startswith('R'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] >= 22)][['N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] == 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] == 'U') & (nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'n') | (nation['N_NAME'] == 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 10) | (nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] <= 1) & (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] == 1317.2716595902784) | (customer['C_CUSTKEY'] != 72) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'HOUSEHOLD'])) & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != '8') | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] != 'd') & (customer['C_ADDRESS'] != 'd') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] != 56)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('0'))][['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'e') | (customer['C_CUSTKEY'] <= 56) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'BUILDING']))][['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'y') | (customer['C_PHONE'] != '13-') | (customer['C_COMMENT'] == '.') | (customer['C_CUSTKEY'] > 63)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'MKTSEGMENT', 'C_ADDRESS']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('i')) & (customer['MKTSEGMENT'] != 'BUILDING')][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] < 81) | (customer['C_ADDRESS'].str.startswith('B')) | (customer['C_COMMENT'] != 'k') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE'])) & (customer['C_ADDRESS'] != 'M')][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] <= 97)][['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] < 8) & (customer['C_PHONE'].str.startswith('18-'))][['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ADDRESS']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] == '3') & (customer['C_COMMENT'] != 'f') & (customer['C_CUSTKEY'] > 38) | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'] == 'n') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] < 41) | (customer['C_ADDRESS'].str.startswith('0'))][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '3-MEDIUM')][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_COMMENT', 'ORDERDATE']]

orders[(orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '2-HIGH', '1-URGENT'])) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] == '1998-07-21')][['O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE']]

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_CUSTKEY'] > 147314) | (orders['TOTALPRICE'] > 164169.8794524178) & (orders['O_CUSTKEY'] == 129121) | (orders['O_COMMENT'].str.startswith('c'))].groupby(by=['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_NATIONKEY'] >= 17) & (customer['C_CUSTKEY'] >= 83) & (customer['C_ADDRESS'] == 'p') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] != 'FURNITURE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] > 667) | (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['ORDERPRIORITY'] != '1-URGENT')].groupby(by=['ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] <= 63201.11583327813) | (orders['TOTALPRICE'] > 247234.03945377297) & (orders['O_CUSTKEY'] > 52228) & (orders['O_CUSTKEY'] == 146349) | (orders['O_ORDERKEY'] != 414)].groupby(by=['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] <= 67859.7776832126) | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] < 83555) & (orders['ORDERSTATUS'].isin(['P']))][['ORDERPRIORITY', 'CLERK']].groupby(by=['CLERK']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] > 600) | (orders['TOTALPRICE'] > 43012.62534399703) & (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] == 'C')][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] == 427) | (orders['ORDERDATE'] != '1998-07-21')].merge(customer[['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('l')) | (orders['O_CUSTKEY'] <= 22026) & (orders['TOTALPRICE'] >= 4530.528787245061) | (orders['O_COMMENT'] == 'z')][['CLERK', 'ORDERDATE']].groupby(by=['ORDERDATE', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 77218) | (orders['O_COMMENT'].str.startswith('u')) | (orders['O_COMMENT'] == 'i') | (orders['TOTALPRICE'] == 84402.03608317318) | (orders['O_CUSTKEY'] != 35535) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['TOTALPRICE'] <= 87953.08277152634)][['ORDERPRIORITY', 'CLERK', 'ORDERDATE']]

orders[(orders['O_CUSTKEY'] <= 105722) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['TOTALPRICE'] == 64857.58114685687)].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 63317) & (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] > 365) & (orders['O_COMMENT'] == 'd') | (orders['O_COMMENT'].str.startswith(',')) | (orders['TOTALPRICE'] == 69588.64740492261) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['O_ORDERKEY'] >= 184)][['O_COMMENT', 'CLERK']]

orders[(orders['O_CUSTKEY'] == 149474)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT']).agg('count')

orders[(orders['O_CUSTKEY'] > 137586) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '3-MEDIUM'])) & (orders['O_ORDERKEY'] < 201) | (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] < 21768) | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERSTATUS'] == 'P')][['CLERK', 'ORDERPRIORITY', 'O_ORDERKEY']]

orders[(orders['O_CUSTKEY'] >= 9941) | (orders['O_COMMENT'] != 'ly ') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_ORDERKEY'] > 216) | (orders['SHIPPRIORITY'] >= 0)][['O_COMMENT', 'ORDERDATE']].groupby(by=['ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 397) & (orders['TOTALPRICE'] < 280772.4127901551) & (orders['TOTALPRICE'] <= 265033.2463827277)].merge(customer[['C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 101304.50499783721) & (orders['O_CUSTKEY'] >= 51103) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED']))][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY']]

orders[(orders['TOTALPRICE'] < 241462.07976446304) | (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] != 83171) | (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] == 321313.47361017554) & (orders['O_COMMENT'].str.startswith('c')) | (orders['ORDERDATE'] == '1998-07-21')].groupby(by=['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY']).agg('count')

orders[(orders['TOTALPRICE'] <= 25880.76216664479) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] != ' ') & (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[['C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 135086.92297046634) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '2-HIGH', '3-MEDIUM'])) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_COMMENT'].str.startswith('l')) & (orders['O_COMMENT'] != 'egu') | (orders['CLERK'] == 'C') & (orders['CLERK'] != 'C')][['ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']]

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'O_ORDERKEY']).agg('sum', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERDATE', 'O_COMMENT']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#12') & (part['P_PARTKEY'] > 19) & (part['P_NAME'] == 'c') & (part['TYPE'] != 'SMA') & (part['CONTAINER'] != 'JUMBO')][['MFGR', 'SIZE']].groupby(by=['SIZE']).agg('count')

part[(part['BRAND'] == 'Brand#15') | (part['RETAILPRICE'] >= 931.6865446760303) & (part['SIZE'] >= 8) & (part['RETAILPRICE'] <= 1040.4445687635368) & (part['P_NAME'].str.startswith('w')) | (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] <= 115)][['P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT']]

part[(part['BRAND'] == 'Brand#33') | (part['PT_COMMENT'].str.startswith('kag')) & (part['CONTAINER'] == 'JUMBO') | (part['P_PARTKEY'] != 52) & (part['MFGR'] == 'Manufacturer#5') | (part['P_NAME'] != 'f')].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'BRAND']).agg('min', numeric_only=True)

part[(part['BRAND'] == 'Brand#43') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1'])) & (part['P_PARTKEY'] < 75) | (part['CONTAINER'] == 'LG') & (part['P_NAME'].str.startswith('lin')) | (part['PT_COMMENT'] != ' ') | (part['BRAND'] != 'Brand#15')].groupby(by=['TYPE', 'CONTAINER', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['BRAND'] == 'Brand#44') | (part['CONTAINER'] == 'JUMBO') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5'])) | (part['SIZE'] < 46) | (part['P_PARTKEY'] < 60) | (part['SIZE'] > 7) | (part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] != 'c') & (part['SIZE'] <= 24)][['CONTAINER', 'RETAILPRICE']]

part[(part['CONTAINER'] != 'SM') | (part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#52', 'Brand#35', 'Brand#31', 'Brand#25', 'Brand#33', 'Brand#43', 'Brand#44', 'Brand#55', 'Brand#13', 'Brand#21', 'Brand#14', 'Brand#23', 'Brand#32', 'Brand#42', 'Brand#45', 'Brand#51', 'Brand#15', 'Brand#11', 'Brand#24', 'Brand#34', 'Brand#12', 'Brand#53', 'Brand#22', 'Brand#54', 'Brand#41'])) | (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] == 1048.962896791207)][['CONTAINER', 'RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] == 1033.8958875584815)][['P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'TYPE']].groupby(by=['MFGR']).agg('count')

part[(part['CONTAINER'].str.startswith('SM')) | (part['BRAND'].isin(['Brand#51', 'Brand#24', 'Brand#23', 'Brand#22', 'Brand#55', 'Brand#41', 'Brand#34', 'Brand#25', 'Brand#33', 'Brand#42', 'Brand#11', 'Brand#45', 'Brand#12', 'Brand#32', 'Brand#35', 'Brand#21', 'Brand#15', 'Brand#54', 'Brand#52', 'Brand#13', 'Brand#14', 'Brand#53', 'Brand#31', 'Brand#43'])) & (part['RETAILPRICE'] != 976.364337807998) | (part['PT_COMMENT'].str.startswith('ss ')) | (part['CONTAINER'] != 'SM')].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'BRAND', 'CONTAINER', 'P_NAME']).agg('count')

part[(part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] > 43) | (part['TYPE'] != 'P') | (part['CONTAINER'] != 'LG') | (part['P_NAME'].str.startswith('l')) | (part['PT_COMMENT'] != 'n')][['PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']]

part[(part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'] != ' fi') | (part['CONTAINER'] == 'WRAP') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2'])) | (part['BRAND'] == 'Brand#41') & (part['MFGR'] == 'Manufacturer#3')][['BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#5') & (part['PT_COMMENT'] == ' fi') | (part['RETAILPRICE'] > 949.1410389294037) | (part['PT_COMMENT'] == 'r')][['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND']]

part[(part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] != 35) | (part['P_PARTKEY'] <= 131) | (part['MFGR'] != 'Manufacturer#5') | (part['RETAILPRICE'] >= 1023.2208671267506) & (part['P_PARTKEY'] > 72)].groupby(by=['PT_COMMENT', 'MFGR', 'TYPE', 'SIZE']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1'])) & (part['PT_COMMENT'] != 'k') & (part['SIZE'] > 20) | (part['PT_COMMENT'].str.startswith('m')) | (part['BRAND'].isin(['Brand#55', 'Brand#13', 'Brand#24', 'Brand#41', 'Brand#14', 'Brand#35', 'Brand#51', 'Brand#52', 'Brand#12', 'Brand#54', 'Brand#22', 'Brand#44', 'Brand#31', 'Brand#45', 'Brand#32', 'Brand#43', 'Brand#42', 'Brand#21', 'Brand#23', 'Brand#33', 'Brand#53', 'Brand#15', 'Brand#25'])) | (part['PT_COMMENT'] != ' fi') & (part['PT_COMMENT'] != 'b') | (part['CONTAINER'].str.startswith('MED'))].groupby(by=['P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4'])) & (part['RETAILPRICE'] < 981.0998789491293) | (part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] > 151) & (part['RETAILPRICE'] == 1078.9772153907236) | (part['TYPE'] == 'P') & (part['PT_COMMENT'].str.startswith('x'))].groupby(by=['P_PARTKEY', 'BRAND', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] != '!')][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'TYPE']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] == 'f') & (part['P_NAME'] != 'bis') & (part['PT_COMMENT'] != 'x') | (part['P_PARTKEY'] == 77)][['RETAILPRICE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'BRAND']]

part[(part['PT_COMMENT'] == 'f') & (part['SIZE'] < 35) & (part['P_PARTKEY'] < 173) & (part['MFGR'] != 'Manufacturer#4')][['MFGR', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']]

part[(part['PT_COMMENT'].str.startswith(' ')) & (part['P_NAME'].str.startswith('b')) | (part['P_NAME'] == 'l') & (part['PT_COMMENT'] == 'm') & (part['RETAILPRICE'] != 966.4512562444564) | (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'P') | (part['BRAND'] == 'Brand#35') & (part['P_NAME'] != 'w')].groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 'b') | (part['CONTAINER'] != 'JUMBO') | (part['BRAND'] == 'Brand#45') | (part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] == '!') & (part['TYPE'] != 'SMA')].groupby(by=['RETAILPRICE', 'MFGR', 'P_PARTKEY', 'SIZE']).agg('count')

part[(part['P_NAME'] != 'y') & (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] != 'bis') & (part['MFGR'] == 'Manufacturer#5') & (part['CONTAINER'] == 'JUMBO') & (part['BRAND'].isin(['Brand#41', 'Brand#22', 'Brand#25', 'Brand#43', 'Brand#31', 'Brand#42', 'Brand#54', 'Brand#24', 'Brand#55', 'Brand#12', 'Brand#13', 'Brand#21', 'Brand#33', 'Brand#15', 'Brand#35', 'Brand#34', 'Brand#53', 'Brand#44', 'Brand#23', 'Brand#52', 'Brand#11', 'Brand#14', 'Brand#51', 'Brand#32']))][['TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']]

part[(part['P_NAME'] == 't') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) & (part['MFGR'] == 'Manufacturer#3') | (part['TYPE'].str.startswith('S'))][['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_NAME', 'PT_COMMENT', 'BRAND']]

part[(part['P_NAME'].str.startswith('i')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5'])) & (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] > 50) | (part['P_NAME'] != 'f') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3']))].groupby(by=['BRAND', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] != 189) & (part['RETAILPRICE'] != 902.4661282435646) | (part['MFGR'].isin(['Manufacturer#1'])) & (part['PT_COMMENT'] != 'u')][['P_NAME', 'CONTAINER']].groupby(by=['P_NAME', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 73) | (part['P_NAME'].str.startswith('s')) | (part['SIZE'] >= 15) | (part['MFGR'] == 'Manufacturer#2')][['P_NAME', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[(part['P_PARTKEY'] > 131) | (part['TYPE'] != 'E') | (part['PT_COMMENT'] != 'i') | (part['BRAND'] != 'Brand#21')][['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'TYPE']]

part[(part['P_PARTKEY'] >= 144) & (part['BRAND'] == 'Brand#54') & (part['RETAILPRICE'] >= 952.791763153905) & (part['RETAILPRICE'] > 971.3917676079207) | (part['CONTAINER'].str.startswith('MED')) & (part['TYPE'].str.startswith('E')) & (part['P_PARTKEY'] > 99)].groupby(by=['CONTAINER', 'SIZE', 'RETAILPRICE']).agg('count')

part[(part['RETAILPRICE'] != 1084.8305498451523) | (part['PT_COMMENT'] == 'ly ') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) | (part['TYPE'].str.startswith('L')) | (part['MFGR'] == 'Manufacturer#5') | (part['P_PARTKEY'] < 39) | (part['RETAILPRICE'] < 923.5547127813691) | (part['CONTAINER'] != 'MED')][['SIZE', 'P_NAME', 'RETAILPRICE']]

part[(part['RETAILPRICE'] != 932.9957428513094) & (part['P_NAME'] != 'i') & (part['SIZE'] <= 14) | (part['PT_COMMENT'] != 'q') | (part['SIZE'] > 39) | (part['P_PARTKEY'] >= 39)][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['RETAILPRICE'] < 1074.8962000666465) | (part['P_NAME'] != 'a') & (part['MFGR'] == 'Manufacturer#4') & (part['SIZE'] > 47) & (part['RETAILPRICE'] > 961.5795027166288) | (part['PT_COMMENT'] != 'the')].groupby(by=['CONTAINER', 'P_NAME', 'TYPE', 'RETAILPRICE']).agg('count')

part[(part['RETAILPRICE'] <= 1049.0228354841115) & (part['BRAND'].isin(['Brand#14', 'Brand#41', 'Brand#12', 'Brand#21', 'Brand#45', 'Brand#42', 'Brand#24', 'Brand#35', 'Brand#11', 'Brand#34', 'Brand#25', 'Brand#15', 'Brand#51', 'Brand#22', 'Brand#32', 'Brand#43'])) | (part['BRAND'].isin(['Brand#44', 'Brand#13', 'Brand#42', 'Brand#34', 'Brand#54', 'Brand#45'])) & (part['BRAND'].isin(['Brand#23', 'Brand#13', 'Brand#34', 'Brand#44', 'Brand#22', 'Brand#45', 'Brand#12', 'Brand#11', 'Brand#24', 'Brand#52', 'Brand#32', 'Brand#42', 'Brand#43', 'Brand#31', 'Brand#15', 'Brand#35', 'Brand#33', 'Brand#51', 'Brand#41', 'Brand#14', 'Brand#54'])) & (part['BRAND'].isin(['Brand#52', 'Brand#42', 'Brand#34', 'Brand#32', 'Brand#44', 'Brand#35', 'Brand#33', 'Brand#51', 'Brand#54', 'Brand#55', 'Brand#23', 'Brand#43', 'Brand#13', 'Brand#21', 'Brand#11', 'Brand#53', 'Brand#22', 'Brand#31', 'Brand#41', 'Brand#24', 'Brand#14', 'Brand#15', 'Brand#45'])) | (part['CONTAINER'] != 'WRAP') | (part['PT_COMMENT'] == 'u') | (part['BRAND'] == 'Brand#35')].groupby(by=['BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 923.4482550534402) | (part['P_PARTKEY'] != 172) | (part['RETAILPRICE'] >= 954.7806753181289) & (part['P_NAME'] == 's') & (part['TYPE'] != 'M') | (part['TYPE'] != 'M') | (part['SIZE'] != 43) | (part['P_NAME'] != 't')].groupby(by=['P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 933.1544529510604) | (part['SIZE'] <= 12) | (part['PT_COMMENT'].str.startswith('x')) & (part['SIZE'] == 44) & (part['SIZE'] >= 29) & (part['P_PARTKEY'] == 124) & (part['P_NAME'] == 'cor') | (part['P_NAME'] != 'd') & (part['P_NAME'].str.startswith('i'))][['RETAILPRICE', 'MFGR']]

part[(part['RETAILPRICE'] == 1000.3718486574801) & (part['PT_COMMENT'] != 'a') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1']))][['P_PARTKEY', 'TYPE', 'BRAND']].groupby(by=['P_PARTKEY', 'TYPE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] > 956.1388575166313) & (part['RETAILPRICE'] != 958.3917553669265) | (part['TYPE'].str.startswith('S')) | (part['SIZE'] > 15) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#4'])) | (part['BRAND'] != 'Brand#14')].groupby(by=['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

part[(part['SIZE'] != 36) | (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'c') | (part['TYPE'] == 'SMA') | (part['PT_COMMENT'] == 'x') | (part['P_NAME'] != 'lem')][['P_NAME', 'BRAND', 'MFGR', 'PT_COMMENT', 'TYPE']]

part[(part['SIZE'] > 17) | (part['SIZE'] == 46) | (part['P_PARTKEY'] != 170) & (part['PT_COMMENT'] == '!') | (part['CONTAINER'] == 'SM')].groupby(by=['CONTAINER', 'TYPE', 'P_NAME', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[(part['SIZE'] > 37) & (part['PT_COMMENT'] != 'g') & (part['BRAND'] == 'Brand#25') | (part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] > 47) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) & (part['CONTAINER'].str.startswith('MED'))].groupby(by=['SIZE', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part[(part['SIZE'] > 48) & (part['P_NAME'] != 'n') & (part['CONTAINER'] != 'WRAP') & (part['BRAND'].isin(['Brand#14', 'Brand#54', 'Brand#42', 'Brand#11', 'Brand#44', 'Brand#13'])) | (part['BRAND'] == 'Brand#23') | (part['CONTAINER'] != 'WRAP')][['BRAND', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_NAME']]

part[(part['TYPE'] != 'E') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3'])) | (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] == 'd') | (part['TYPE'] != 'STA') & (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] > 949.0070428883548) & (part['CONTAINER'].str.startswith('JUMBO'))].groupby(by=['SIZE', 'BRAND']).agg('count')

part[(part['TYPE'] != 'SMA') | (part['SIZE'] <= 7)][['PT_COMMENT', 'TYPE', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'STA') & (part['PT_COMMENT'] != 'i') | (part['SIZE'] >= 11) | (part['P_PARTKEY'] >= 62) | (part['CONTAINER'].str.startswith('WRAP'))][['MFGR', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']]

part[(part['TYPE'] == 'M') | (part['TYPE'] == 'S') | (part['BRAND'] != 'Brand#42') & (part['RETAILPRICE'] > 1038.854812822847) | (part['MFGR'] == 'Manufacturer#3')].groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY', 'BRAND', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['TYPE'] == 'P') & (part['BRAND'] != 'Brand#15')][['P_PARTKEY', 'RETAILPRICE', 'MFGR']].groupby(by=['RETAILPRICE', 'P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['CONTAINER']).agg('count')

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['BRAND', 'TYPE', 'PT_COMMENT', 'MFGR', 'SIZE']].groupby(by=['SIZE', 'BRAND', 'PT_COMMENT', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['TYPE']).agg('count')

part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['P_PARTKEY', 'BRAND']).agg('count')

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']].groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['MFGR', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['CONTAINER', 'RETAILPRICE', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']].groupby(by=['SIZE', 'MFGR', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'TYPE', 'MFGR', 'PT_COMMENT']].groupby(by=['TYPE', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR', 'BRAND']].groupby(by=['BRAND', 'TYPE', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'MFGR']].groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']].groupby(by=['CONTAINER', 'RETAILPRICE', 'PT_COMMENT', 'P_NAME']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']].groupby(by=['BRAND', 'PT_COMMENT', 'MFGR']).agg('count')

part[['TYPE', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'BRAND']].groupby(by=['MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'BRAND']).agg('mean', numeric_only=True)

part[['TYPE', 'RETAILPRICE', 'P_NAME', 'SIZE', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'SM') | (part['TYPE'] == 'L') & (part['BRAND'] != 'Brand#35') | (part['PT_COMMENT'] == 'r')][['TYPE', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 17) & (part['BRAND'] == 'Brand#42') | (part['BRAND'] != 'Brand#32') | (part['RETAILPRICE'] >= 925.6872921857713) & (part['SIZE'] == 2)][['P_NAME', 'SIZE', 'TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] >= 19) & (part['RETAILPRICE'] <= 903.4810113129239) | (part['TYPE'] == 'STA') & (part['P_PARTKEY'] < 123)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] >= 12) & (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'L') | (supplier['S_ADDRESS'] == 's') & (supplier['S_NATIONKEY'] != 21) | (supplier['S_COMMENT'] != ' ') | (supplier['S_SUPPKEY'] >= 39) | (supplier['S_ADDRESS'].str.startswith('O')) | (supplier['S_ADDRESS'] == 'R')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'q')].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_ACCTBAL'] != 3361.022721681362) & (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] != 'a')][['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 14)].merge(nation.merge(region[(region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] == '1') | (supplier['S_ACCTBAL'] <= 2891.9513399062644) & (supplier['S_ACCTBAL'] != 9278.20503558891) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '26-') | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] == '2') | (supplier['S_COMMENT'] != 'i') | (supplier['S_ADDRESS'] == '6')][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 14)][['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 143) & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'p') | (supplier['S_PHONE'] != '32-') & (supplier['S_PHONE'].str.startswith('3'))][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 2775) | (partsupp['PS_SUPPKEY'] != 6369)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5605) | (partsupp['AVAILQTY'] <= 3147)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 1206)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'CONTAINER', 'TYPE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 4823) & (partsupp['P_COMMENT'] == ';') & (partsupp['PS_SUPPKEY'] <= 7368)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 7501)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '3')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 12) | (partsupp['AVAILQTY'] > 3508)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 46) | (partsupp['P_COMMENT'] != 'r') & (partsupp['PS_SUPPKEY'] < 2717) | (partsupp['PS_PARTKEY'] != 5) & (partsupp['AVAILQTY'] < 8879)].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 21)].merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 45) & (partsupp['PS_PARTKEY'] < 14) & (partsupp['SUPPLYCOST'] != 337.69285981469375) | (partsupp['PS_SUPPKEY'] < 3788)][['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 917) & (partsupp['AVAILQTY'] <= 3664) & (partsupp['P_COMMENT'] == 'ly ')].merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != ' th') | (partsupp['P_COMMENT'] != ',')].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != '.') | (partsupp['AVAILQTY'] < 105) & (partsupp['SUPPLYCOST'] < 108.49582385896295)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'j') & (partsupp['AVAILQTY'] <= 3232)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'a') & (partsupp['P_COMMENT'] != 'c') & (partsupp['SUPPLYCOST'] <= 198.68506919651222) & (partsupp['SUPPLYCOST'] >= 343.9708725045431) & (partsupp['SUPPLYCOST'] > 675.4069345042354)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 976.3494717693064) & (partsupp['PS_PARTKEY'] == 16) & (partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] <= 2469)].merge(part[['P_NAME', 'TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 33.509809185688134) & (partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['PS_SUPPKEY'] < 6520) | (partsupp['SUPPLYCOST'] == 68.2617634458997) & (partsupp['AVAILQTY'] < 7625)][['P_COMMENT', 'AVAILQTY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 33.068087085100494) & (partsupp['P_COMMENT'] == 'r') | (partsupp['PS_SUPPKEY'] < 1845) | (partsupp['SUPPLYCOST'] <= 255.22091070033795) & (partsupp['PS_SUPPKEY'] >= 7336)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 486.6463213870767) & (partsupp['P_COMMENT'].str.startswith('y')) | (partsupp['SUPPLYCOST'] <= 63.15056023507183) & (partsupp['PS_PARTKEY'] != 15)].merge(part[['SIZE', 'TYPE', 'P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'r') | (part['PT_COMMENT'] != 'h') | (part['RETAILPRICE'] < 1031.5573823472628)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['SIZE'] < 32)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'BRAND']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].groupby(by=['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'E') & (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation.merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'].str.startswith('a'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'R')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'V') | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NATIONKEY'] > 3)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 'y') | (nation['N_REGIONKEY'] < 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 8) & (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_NAME'] != 'I') | (nation['N_NAME'] == 'P')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 21)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] >= 13) | (nation['N_NATIONKEY'] <= 7)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'M') | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 125.82169456067595)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 4080.4408584855055) | (supplier['S_SUPPKEY'] < 171) & (supplier['S_NATIONKEY'] >= 3) & (supplier['S_NATIONKEY'] == 12) & (supplier['S_ACCTBAL'] == 5168.842259894025) | (supplier['S_ADDRESS'].str.startswith('e'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 2177.100175029611) | (supplier['S_SUPPKEY'] != 132)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 1726.032821169905) & (supplier['S_PHONE'].str.startswith('14-'))][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 3048.1056964760355) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 15) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_ACCTBAL'] >= 7431.310218756497)][['S_ADDRESS']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 5138.850894748552) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('n')) & (supplier['S_PHONE'].str.startswith('17-'))][['S_ACCTBAL', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'S') | (supplier['S_NATIONKEY'] == 13) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_NAME']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == '7') & (supplier['S_NATIONKEY'] != 9) & (supplier['S_NATIONKEY'] > 13) | (supplier['S_PHONE'] == '17-')][['S_COMMENT', 'S_NAME']].groupby(by=['S_COMMENT', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'W') | (supplier['S_COMMENT'] == 'x')][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_COMMENT']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'b') & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_SUPPKEY'] >= 55) & (supplier['S_PHONE'] != '14-')][['S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_ADDRESS'].str.startswith('n')) | (supplier['S_ACCTBAL'] >= 2944.9924509210905)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_NAME', 'S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != ' ') & (supplier['S_ADDRESS'].str.startswith('M'))][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']].groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'e') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != '1') & (supplier['S_SUPPKEY'] > 27) & (supplier['S_NATIONKEY'] <= 8)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']]

supplier[(supplier['S_COMMENT'] != 'es ')].merge(nation[(nation['N_NATIONKEY'] == 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'] != 'j') | (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] == 'b') & (supplier['S_SUPPKEY'] >= 148)].merge(nation.merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'i') & (supplier['S_NATIONKEY'] > 1) & (supplier['S_ACCTBAL'] >= 4235.040746201658) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] == 5284.357860229954)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'j') | (supplier['S_SUPPKEY'] == 141) & (supplier['S_NATIONKEY'] <= 17) | (supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_PHONE'].str.startswith('14-'))][['S_COMMENT', 'S_PHONE']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_PHONE'] != '3') | (supplier['S_ADDRESS'] != 'w') & (supplier['S_PHONE'] == '26-') | (supplier['S_ACCTBAL'] <= 9896.664578228847)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] == 28)].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 6) & (supplier['S_ADDRESS'] != 'N') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] <= 57)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] == 3260.0185049505417) & (supplier['S_NATIONKEY'] != 5)].merge(nation[(nation['N_REGIONKEY'] <= 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 19)][['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 10) & (supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '14-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 83) | (supplier['S_ACCTBAL'] < 3929.2367404967445) | (supplier['S_SUPPKEY'] >= 94) & (supplier['S_PHONE'] != '3') | (supplier['S_SUPPKEY'] <= 82)][['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']]

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_ADDRESS'] != 'G')].merge(nation[(nation['N_REGIONKEY'] >= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NATIONKEY'] > 4)][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].groupby(by=['S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_SUPPKEY'] <= 46) | (supplier['S_ADDRESS'] == 'H') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] > 18)].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] == 3) & (nation['N_COMMENT'].str.startswith('l'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] <= 107) & (supplier['S_ADDRESS'].str.startswith('i'))].merge(nation[(nation['N_NATIONKEY'] != 6) | (nation['N_NAME'] == 'K')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 87) | (supplier['S_NATIONKEY'] <= 4) | (supplier['S_COMMENT'] == 'j') | (supplier['S_COMMENT'] != '.') & (supplier['S_ADDRESS'] != 's') & (supplier['S_ADDRESS'].str.startswith('2')) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] > 94)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_ADDRESS']).agg('count')

supplier[['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] == 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] < 16) | (nation['N_COMMENT'] == 'n') & (nation['N_NAME'] == 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 20)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] == 22) & (nation['N_COMMENT'].str.startswith('y'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] >= 14) | (nation['N_NATIONKEY'] <= 21) | (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] > 18) & (nation['N_NAME'] == 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] != 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] == 'i') & (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 's') & (nation['N_NAME'] != 'S')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] != 'a') | (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 5871.078811665755) | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_CUSTKEY'] != 28) | (customer['C_PHONE'] == '27-') | (customer['C_CUSTKEY'] == 43) | (customer['C_ACCTBAL'] >= 5916.854475624122) | (customer['C_ACCTBAL'] != 3366.988109657227)].groupby(by=['C_PHONE', 'C_NAME', 'C_ACCTBAL']).agg('count')

customer[(customer['C_ACCTBAL'] < 6262.045963380437) & (customer['C_NATIONKEY'] == 18) | (customer['C_ADDRESS'] == 'K') & (customer['C_COMMENT'] == 'f')][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']]

customer[(customer['C_ACCTBAL'] <= 5970.659877145742) | (customer['C_ADDRESS'].str.startswith('F')) | (customer['C_ADDRESS'] != 'i') | (customer['C_ACCTBAL'] <= 926.5224059069169) | (customer['C_PHONE'] != '18-')][['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('count')

customer[(customer['C_ACCTBAL'] > 1441.4251413491447) | (customer['C_PHONE'] != '13-')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 636.7236872674541) | (customer['C_NATIONKEY'] != 16) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_COMMENT'] != 'k') & (customer['C_CUSTKEY'] >= 3) & (customer['C_NATIONKEY'] == 0) & (customer['C_COMMENT'] == ',')][['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']]

customer[(customer['C_ADDRESS'] == 'R') | (customer['C_NATIONKEY'] >= 8) | (customer['C_CUSTKEY'] <= 5) & (customer['C_NATIONKEY'] > 14) | (customer['C_ADDRESS'] != 'x') & (customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('9')) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == '4') | (customer['C_NATIONKEY'] <= 15) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'] == 'y')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != '.') | (customer['C_ACCTBAL'] >= 3219.2741955710235)][['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_COMMENT', 'C_NAME']).agg('count')

customer[(customer['C_COMMENT'] == 'l') | (customer['C_ADDRESS'] != '7') & (customer['C_COMMENT'] == 't')].merge(nation[(nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') & (customer['C_NAME'] != 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] != -592.2305539193285) & (customer['C_CUSTKEY'] >= 23) | (customer['C_NATIONKEY'] != 3) & (customer['C_PHONE'] == '2') | (customer['C_COMMENT'].str.startswith('k'))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('y')) | (customer['C_PHONE'] == '3') | (customer['C_ACCTBAL'] < 3411.715136317386)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 69)].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'R') & (nation['N_COMMENT'] == 'y') | (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 84) & (customer['C_CUSTKEY'] != 24)].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('U')) & (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 10) | (customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] > 25)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C')].merge(nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] > 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] >= 169.36082811714755)].merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'] != 'n') | (nation['N_NATIONKEY'] > 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

customer[(customer['C_NAME'] == 'C')].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'q') & (customer['C_PHONE'] == '27-')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '13-') & (customer['C_NATIONKEY'] <= 18) & (customer['C_ADDRESS'] == 'a') | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'] != 't') | (customer['C_COMMENT'].str.startswith('e')) | (customer['C_PHONE'].str.startswith('18-'))].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 14) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'BUILDING'])) | (customer['C_ADDRESS'].str.startswith('H')) & (customer['C_PHONE'] == '1') | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 55)][['MKTSEGMENT']].groupby(by=['MKTSEGMENT']).agg('count')

customer[(customer['C_NATIONKEY'] < 0) & (customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] >= 28) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] > 1)][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']]

customer[(customer['C_NATIONKEY'] <= 11) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] != 'C')][['C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 21) | (customer['C_CUSTKEY'] <= 75) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_COMMENT'] != '.') | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '13-') | (customer['C_PHONE'] != '27-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 13)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] == 15)].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NAME'] == 'A')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '2')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '27-') & (customer['C_NATIONKEY'] < 19) | (customer['C_NATIONKEY'] < 14) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'c')].merge(nation[(nation['N_COMMENT'] != 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] < 4355.264370889376)][['C_NAME', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('2'))].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('3')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY']))].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'h') & (customer['C_CUSTKEY'] >= 13)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'] == 'O') | (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] > 4480.204039178751) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_CUSTKEY'] <= 67) & (customer['C_CUSTKEY'] > 64)][['C_NAME']].groupby(by=['C_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'].str.startswith('8')) & (customer['C_COMMENT'] == 'a') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] < 64)].merge(nation[(nation['N_NATIONKEY'] != 20)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_CUSTKEY'] > 43)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'MACHINERY']))][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_NATIONKEY'] == 1) & (customer['C_ACCTBAL'] < 7855.727526030963)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'] == 'r')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] == 133176) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 18) | (supplier['S_SUPPKEY'] >= 104) | (supplier['S_SUPPKEY'] < 10)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1467) & (partsupp['P_COMMENT'] != 'a') & (partsupp['PS_SUPPKEY'] > 4007)][['PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 864) & (partsupp['P_COMMENT'] != 'g') | (partsupp['P_COMMENT'] != 'o') | (partsupp['PS_PARTKEY'] > 41) & (partsupp['PS_SUPPKEY'] >= 3360)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'MFGR', 'P_NAME']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.07172311822623392) | (lineitem['QUANTITY'] >= 24) | (lineitem['RECEIPTDATE'] != '1992-05-02')][['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'RETURNFLAG', 'LINESTATUS', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'TAX']]

lineitem[(lineitem['EXTENDEDPRICE'] >= 85078.77245563865) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_ORDERKEY'] > 45) | (lineitem['EXTENDEDPRICE'] > 60254.155300969716) & (lineitem['QUANTITY'] > 40) | (lineitem['LINENUMBER'] == 1) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['SHIPMODE'] != 'FOB') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RETURNFLAG'].isin(['N']))][['COMMITDATE', 'LINESTATUS']]

lineitem[(lineitem['LINENUMBER'] != 1) & (lineitem['L_PARTKEY'] > 193942) & (lineitem['RECEIPTDATE'] == '1998-11-06')][['RETURNFLAG', 'TAX', 'SHIPMODE', 'L_COMMENT', 'SHIPDATE', 'LINENUMBER', 'QUANTITY', 'DISCOUNT', 'RECEIPTDATE']]

lineitem[(lineitem['LINENUMBER'] > 5) & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['L_SUPPKEY'] < 6060) | (lineitem['EXTENDEDPRICE'] >= 16417.20588281753) & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['LINENUMBER'] != 4) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['LINESTATUS'] == 'F')][['SHIPDATE', 'SHIPMODE']]

lineitem[(lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['TAX'] < 0.041961018586247664) & (lineitem['L_PARTKEY'] <= 169053)][['SHIPINSTRUCT', 'DISCOUNT']].groupby(by=['SHIPINSTRUCT', 'DISCOUNT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('-'))].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] >= 109501) | (lineitem['L_ORDERKEY'] >= 2) & (lineitem['L_COMMENT'].str.startswith('p')) | (lineitem['L_PARTKEY'] <= 177659) & (lineitem['L_PARTKEY'] > 173661) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_COMMENT'].str.startswith('t'))][['QUANTITY']].groupby(by=['QUANTITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 8408)].merge(partsupp[(partsupp['AVAILQTY'] > 7185) & (partsupp['SUPPLYCOST'] <= 581.5519866766812) & (partsupp['PS_SUPPKEY'] >= 4219) | (partsupp['PS_SUPPKEY'] < 1809) | (partsupp['P_COMMENT'] != 'p')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['QUANTITY'] != 13) | (lineitem['SHIPDATE'] > '1998-10-30')].merge(orders[(orders['O_CUSTKEY'] <= 42008) | (orders['O_CUSTKEY'] > 49863) & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] > 300937.3683704992) & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] > 80766.29050183194) & (orders['O_COMMENT'] == 't')], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] <= 33) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['DISCOUNT'] != 0.056097337462608976) & (lineitem['RETURNFLAG'] == 'N')].merge(partsupp[(partsupp['PS_PARTKEY'] > 40) & (partsupp['PS_PARTKEY'] <= 33)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['QUANTITY'] <= 40) | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_PARTKEY'] < 1307) & (lineitem['L_ORDERKEY'] <= 189) & (lineitem['L_ORDERKEY'] >= 11) | (lineitem['L_ORDERKEY'] >= 82)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['L_COMMENT'] != 'p') | (lineitem['L_ORDERKEY'] > 76) & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_COMMENT'] == 'r')][['LINESTATUS', 'L_COMMENT', 'EXTENDEDPRICE', 'SHIPMODE', 'RETURNFLAG', 'RECEIPTDATE']]

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')].merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['SHIPMODE'].isin(['TRUCK'])) & (lineitem['L_ORDERKEY'] < 146) | (lineitem['L_COMMENT'] == 'ly ') & (lineitem['SHIPMODE'] != 'AIR') & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['L_ORDERKEY'] > 29) & (lineitem['RETURNFLAG'].isin(['A']))][['LINENUMBER', 'RECEIPTDATE', 'SHIPDATE']]

lineitem[(lineitem['RETURNFLAG'] == 'A')].merge(partsupp[(partsupp['SUPPLYCOST'] > 360.094451802624) | (partsupp['P_COMMENT'] != 'f') | (partsupp['PS_PARTKEY'] != 22) | (partsupp['P_COMMENT'] != 'y') | (partsupp['PS_SUPPKEY'] == 6927)][['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['DISCOUNT'] == 0.06351938651485843) | (lineitem['L_SUPPKEY'] >= 6075) & (lineitem['EXTENDEDPRICE'] > 10400.184050865082)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_PARTKEY'] != 126344) | (lineitem['L_PARTKEY'] != 154230)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_PARTKEY'] == 191275) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['TAX'] > 0.023456664649189822) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['L_ORDERKEY'] >= 64) | (lineitem['QUANTITY'] > 10) & (lineitem['RETURNFLAG'].isin(['R', 'N'])) & (lineitem['QUANTITY'] <= 42)][['TAX', 'EXTENDEDPRICE', 'RECEIPTDATE']]

lineitem[(lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_SUPPKEY'] <= 2886) & (lineitem['EXTENDEDPRICE'] < 23576.240574725376) & (lineitem['SHIPMODE'].isin(['SHIP', 'TRUCK', 'MAIL', 'FOB', 'REG AIR', 'RAIL', 'AIR'])) | (lineitem['TAX'] == 0.012977381212777256) | (lineitem['TAX'] < 0.001365528513488279) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['L_ORDERKEY'] < 37)][['SHIPINSTRUCT', 'L_COMMENT', 'LINESTATUS']]

lineitem[(lineitem['SHIPMODE'] == 'MAIL') & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['LINENUMBER'] >= 5)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] != 0.04120564089475653)].merge(partsupp[(partsupp['P_COMMENT'] != 'p') & (partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['AVAILQTY'] < 4566) | (partsupp['AVAILQTY'] > 6962)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.05876037209982166) & (lineitem['L_PARTKEY'] <= 133409) & (lineitem['EXTENDEDPRICE'] != 39077.36497243734) & (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['LINENUMBER'] == 4)][['RETURNFLAG', 'SHIPINSTRUCT', 'TAX', 'SHIPMODE', 'EXTENDEDPRICE', 'RECEIPTDATE']]

lineitem[['COMMITDATE', 'LINENUMBER', 'L_SUPPKEY', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 8949)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'L_ORDERKEY', 'L_COMMENT', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'TAX', 'LINENUMBER']].groupby(by=['RETURNFLAG', 'TAX']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPMODE', 'RETURNFLAG', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT']].groupby(by=['COMMITDATE', 'DISCOUNT', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'LINENUMBER', 'TAX']].merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '1-URGENT', '5-LOW'])) & (orders['CLERK'] == 'C')][['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'L_COMMENT', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 17) & (supplier['S_NATIONKEY'] >= 16) | (supplier['S_NATIONKEY'] != 8)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['RETURNFLAG', 'QUANTITY', 'DISCOUNT', 'LINENUMBER', 'LINESTATUS', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'SHIPDATE']].groupby(by=['RETURNFLAG', 'SHIPMODE']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation.merge(region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') & (nation['N_NAME'] == 'S')].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] < 12) | (nation['N_COMMENT'] != 's')].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 'r') & (nation['N_REGIONKEY'] != 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] == 'h') | (nation['N_COMMENT'] == 'u')].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'a') | (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] < 16) & (nation['N_NAME'] != 'I')].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] <= 7) & (nation['N_REGIONKEY'] < 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'l') & (nation['N_COMMENT'] == 'y')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] <= 15)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') | (nation['N_COMMENT'] != ' ')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a'))].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'I') & (nation['N_NATIONKEY'] < 9) & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] == 'R')].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 21) & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] <= 16) | (nation['N_COMMENT'] != 'r')].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 15) & (nation['N_NAME'].str.startswith('S')) | (nation['N_NATIONKEY'] > 4) | (nation['N_NAME'].str.startswith('P'))][['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_NAME'] == 'A')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] <= 19) & (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] < 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'] == 'a') & (nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 10) & (nation['N_COMMENT'] == 't')].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] > 1) | (nation['N_NAME'] == 'U') & (nation['N_NAME'] != 'I')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 5) & (nation['N_NATIONKEY'] < 11) & (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] > 21) | (nation['N_NAME'] == 'K') | (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] != 'G') & (nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] >= 9)].merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] == 'E') & (nation['N_NATIONKEY'] > 6)].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'] == 'u') | (nation['N_NATIONKEY'] != 18)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] != 17)].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] < -189.380894394635) & (customer['C_PHONE'] != '3') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] < 5018.127236522495) | (customer['C_ADDRESS'].str.startswith('v')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] == '18-') | (customer['MKTSEGMENT'] != 'FURNITURE')][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 1260.097341355066) & (customer['C_CUSTKEY'] >= 5) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] != 4050.210917647796)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 5685.640249331276) & (customer['C_COMMENT'] != '.') | (customer['C_ACCTBAL'] <= 5708.772974870487) | (customer['C_CUSTKEY'] == 45)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'w') & (customer['C_ACCTBAL'] == 8.545608091712438) | (customer['C_PHONE'].str.startswith('2')) | (customer['C_NATIONKEY'] < 5) | (customer['C_ACCTBAL'] > 336.3896037470083) & (customer['C_NATIONKEY'] >= 10) | (customer['C_CUSTKEY'] != 10)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'r') | (customer['C_NATIONKEY'] != 22) | (customer['C_PHONE'] == '27-') | (customer['C_NATIONKEY'] >= 15) & (customer['C_COMMENT'] != 'o') | (customer['C_CUSTKEY'] < 79) & (customer['C_ACCTBAL'] > -426.3237879094718)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] != 21) | (customer['C_ACCTBAL'] == 4728.451937306529) | (customer['C_ADDRESS'] == '0')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] <= 39) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 3) | (customer['C_CUSTKEY'] >= 82)][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'j') | (customer['C_NATIONKEY'] >= 1) | (customer['C_ADDRESS'].str.startswith('4')) | (customer['C_CUSTKEY'] > 99) | (customer['C_ACCTBAL'] <= 5409.02920088947) | (customer['C_COMMENT'] == 'i')][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] != 318)].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['ORDERDATE'] != '1998-07-21')][['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['ORDERSTATUS', 'TOTALPRICE', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '5-LOW', '2-HIGH', '3-MEDIUM'])) | (orders['O_ORDERKEY'] > 212) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['O_COMMENT'] != 'q') & (orders['O_ORDERKEY'] > 617) | (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['SHIPPRIORITY'] <= 0)].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 3) & (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] < 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['O', 'F', 'P']))][['ORDERSTATUS', 'O_COMMENT', 'SHIPPRIORITY']].groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] < 708) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT'])) & (orders['TOTALPRICE'] >= 179233.35125709977) | (orders['O_COMMENT'] != ',') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'F')][['TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] != 70736.46327599684) & (orders['CLERK'] == 'C')][['CLERK']].groupby(by=['CLERK']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer[(customer['C_PHONE'] == '2') | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '3-MEDIUM'])) | (orders['O_ORDERKEY'] >= 10) | (orders['TOTALPRICE'] <= 160847.39123866596)][['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']].groupby(by=['ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'] != '.') & (orders['TOTALPRICE'] != 139049.56504750496) & (orders['O_CUSTKEY'] > 62388) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] != 87646)][['ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[(orders['O_COMMENT'] != 'ly ') & (orders['O_ORDERKEY'] != 32) & (orders['O_CUSTKEY'] < 87411) | (orders['TOTALPRICE'] <= 42449.02883783162) & (orders['O_ORDERKEY'] < 153)][['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']]

orders[(orders['O_CUSTKEY'] <= 3842) & (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] == 'F')][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 7946) & (orders['O_CUSTKEY'] <= 5053) & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 64197) & (orders['O_COMMENT'] != 'y') | (orders['O_CUSTKEY'] < 12272) & (orders['TOTALPRICE'] != 50121.07243176378) | (orders['CLERK'] != 'C')].groupby(by=['O_COMMENT', 'ORDERDATE', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 20315) & (orders['ORDERDATE'] > '1998-07-21') | (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] <= 359) | (orders['TOTALPRICE'] >= 273443.40026269335)].merge(customer[(customer['C_PHONE'] == '22-') & (customer['C_PHONE'] != '2') & (customer['C_PHONE'] != '2') & (customer['C_PHONE'].str.startswith('2'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 82088)].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] <= 292316.1281764863) & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '5-LOW')][['ORDERPRIORITY', 'ORDERDATE']].groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0)][['ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'CLERK']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 419)][['CLERK', 'TOTALPRICE']].groupby(by=['TOTALPRICE', 'CLERK']).agg('count')

orders[(orders['TOTALPRICE'] < 27755.727437277914) & (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] <= 794) | (orders['O_ORDERKEY'] <= 479) & (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW']))][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK']]

orders[(orders['TOTALPRICE'] <= 166286.7003350047) & (orders['O_CUSTKEY'] != 105186) & (orders['TOTALPRICE'] != 324239.0235712264) | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'P')][['ORDERDATE', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY']]

orders[(orders['TOTALPRICE'] == 300114.2499900856) | (orders['O_CUSTKEY'] == 96363) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] != 342) | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] != 'C')][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']]

orders[(orders['TOTALPRICE'] == 84441.80289337237) | (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NAME', 'C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] > 143635.01168195778) & (orders['O_COMMENT'].str.startswith('uri'))].merge(customer.merge(nation[(nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']).agg('sum', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE']].groupby(by=['ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] == '25-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_COMMENT', 'ORDERDATE']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#22') & (part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] != 'r') & (part['PT_COMMENT'] == 'p') & (part['MFGR'] != 'Manufacturer#1') | (part['MFGR'] != 'Manufacturer#3')].groupby(by=['P_PARTKEY', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#34') | (part['P_NAME'].str.startswith('i')) & (part['P_NAME'] != 'p') & (part['P_NAME'].str.startswith('n')) & (part['PT_COMMENT'] != ' fi') & (part['SIZE'] >= 17) | (part['BRAND'] == 'Brand#15')].groupby(by=['MFGR', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['BRAND'] == 'Brand#31') | (part['SIZE'] >= 1) | (part['MFGR'].isin(['Manufacturer#4'])) | (part['MFGR'] != 'Manufacturer#3')][['MFGR', 'BRAND', 'TYPE']].groupby(by=['TYPE', 'BRAND']).agg('count')

part[(part['CONTAINER'] != 'MED') & (part['SIZE'] > 6) | (part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] != 20) | (part['BRAND'].isin(['Brand#25', 'Brand#35', 'Brand#12', 'Brand#41', 'Brand#23', 'Brand#44', 'Brand#32', 'Brand#31', 'Brand#53', 'Brand#13', 'Brand#14', 'Brand#34', 'Brand#52', 'Brand#21', 'Brand#54', 'Brand#43', 'Brand#42'])) | (part['SIZE'] >= 8) & (part['P_NAME'] == 'w') & (part['TYPE'].str.startswith('S'))].groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] <= 55) & (part['SIZE'] != 38) | (part['RETAILPRICE'] != 1044.5581783154712) & (part['CONTAINER'].str.startswith('MED')) | (part['P_NAME'] == 'lin') | (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] == 1087.017127393949)].groupby(by=['P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'SM') | (part['SIZE'] == 9) & (part['SIZE'] == 31) | (part['MFGR'] == 'Manufacturer#4') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2'])) & (part['SIZE'] != 48) | (part['P_NAME'].str.startswith('s')) | (part['MFGR'] != 'Manufacturer#1')].groupby(by=['BRAND', 'PT_COMMENT', 'CONTAINER']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'] != 'a') & (part['PT_COMMENT'] != 'y') | (part['TYPE'] != 'M')].groupby(by=['MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'] != 'L') | (part['RETAILPRICE'] < 1070.7401706767225) | (part['MFGR'] != 'Manufacturer#5') & (part['SIZE'] > 4) & (part['P_NAME'].str.startswith('w')) & (part['P_NAME'] == 'bis')].groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY']).agg('count')

part[(part['MFGR'] != 'Manufacturer#2') & (part['BRAND'] != 'Brand#32') | (part['P_NAME'] != 'v') & (part['TYPE'] != 'S') | (part['P_NAME'] != 'o') & (part['P_NAME'].str.startswith('cor')) | (part['P_NAME'].str.startswith('blu'))][['BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE']]

part[(part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'].str.startswith('y')) & (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] <= 103) | (part['P_NAME'] != 'blu')][['CONTAINER', 'P_NAME', 'P_PARTKEY', 'BRAND', 'SIZE', 'TYPE', 'PT_COMMENT']]

part[(part['MFGR'] == 'Manufacturer#2') & (part['TYPE'].str.startswith('P')) | (part['P_PARTKEY'] != 82) | (part['RETAILPRICE'] > 960.6922704027239) & (part['P_PARTKEY'] > 34) | (part['PT_COMMENT'] == 'm') | (part['SIZE'] != 32)][['PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['P_NAME'] == 'd') | (part['P_NAME'].str.startswith('d')) & (part['TYPE'] != 'STA') | (part['PT_COMMENT'] == 'g') | (part['TYPE'] == 'E') | (part['CONTAINER'] != 'SM')][['TYPE']].groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] != 'L') & (part['BRAND'].isin(['Brand#51', 'Brand#45', 'Brand#23', 'Brand#13', 'Brand#41', 'Brand#11', 'Brand#32', 'Brand#55', 'Brand#21', 'Brand#33', 'Brand#42', 'Brand#12', 'Brand#22', 'Brand#43', 'Brand#44', 'Brand#54', 'Brand#34', 'Brand#14', 'Brand#15', 'Brand#31', 'Brand#35'])) | (part['TYPE'].str.startswith('STA')) & (part['PT_COMMENT'].str.startswith('o')) & (part['RETAILPRICE'] == 954.3077172893023)][['BRAND', 'MFGR', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']]

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3'])) & (part['PT_COMMENT'].str.startswith('a')) | (part['SIZE'] > 33) & (part['BRAND'] != 'Brand#24') | (part['CONTAINER'] == 'WRAP') | (part['RETAILPRICE'] >= 1060.9028087172974)][['CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']]

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5'])) | (part['TYPE'] != 'P') | (part['PT_COMMENT'] == 'm')][['P_PARTKEY', 'SIZE', 'P_NAME', 'CONTAINER']].groupby(by=['CONTAINER', 'SIZE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'a') & (part['PT_COMMENT'].str.startswith('c')) & (part['P_PARTKEY'] < 30) | (part['CONTAINER'].str.startswith('MED')) & (part['RETAILPRICE'] < 966.1271413579843) & (part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] < 928.8796824428299) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4']))][['P_PARTKEY', 'P_NAME', 'SIZE', 'PT_COMMENT']]

part[(part['PT_COMMENT'] != 'd') | (part['RETAILPRICE'] == 902.2949939759612) | (part['RETAILPRICE'] <= 1069.4313268444403) | (part['SIZE'] == 46) | (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] > 972.1027414363147) & (part['RETAILPRICE'] != 1027.8370615054164) & (part['MFGR'] != 'Manufacturer#1')].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'P_NAME']).agg('count')

part[(part['PT_COMMENT'] != 's') & (part['CONTAINER'] != 'SM') & (part['SIZE'] > 46) & (part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'] != 'JUMBO')][['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'P_NAME', 'CONTAINER']]

part[(part['PT_COMMENT'] == 'l') | (part['RETAILPRICE'] < 997.6454648449051) | (part['BRAND'].isin(['Brand#21', 'Brand#34', 'Brand#22', 'Brand#45', 'Brand#44', 'Brand#35', 'Brand#52'])) | (part['BRAND'] == 'Brand#31') & (part['SIZE'] < 41) & (part['PT_COMMENT'] != 'g') | (part['P_PARTKEY'] <= 87) | (part['BRAND'] == 'Brand#42') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2']))].groupby(by=['CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('l')) & (part['SIZE'] < 30) | (part['BRAND'] != 'Brand#33') | (part['MFGR'].isin(['Manufacturer#3'])) | (part['P_PARTKEY'] < 142) & (part['CONTAINER'] == 'MED') | (part['SIZE'] == 6)][['CONTAINER', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE']]

part[(part['P_NAME'] != 'a') & (part['SIZE'] > 15) | (part['PT_COMMENT'] == 'c') | (part['PT_COMMENT'] != 'n') & (part['P_NAME'].str.startswith('l')) | (part['PT_COMMENT'] != 't')][['P_PARTKEY', 'TYPE', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE']]

part[(part['P_NAME'] == 'o') & (part['PT_COMMENT'].str.startswith('ss ')) & (part['TYPE'] != 'SMA') & (part['BRAND'].isin(['Brand#22', 'Brand#33', 'Brand#23', 'Brand#41', 'Brand#43', 'Brand#55', 'Brand#52', 'Brand#15', 'Brand#11', 'Brand#45', 'Brand#34', 'Brand#44', 'Brand#12', 'Brand#54', 'Brand#21', 'Brand#13', 'Brand#14', 'Brand#25', 'Brand#24', 'Brand#42', 'Brand#35']))][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']]

part[(part['P_NAME'].str.startswith('d')) & (part['BRAND'] == 'Brand#35') & (part['PT_COMMENT'] != 'x') & (part['CONTAINER'] == 'LG') & (part['TYPE'] == 'STA') | (part['P_PARTKEY'] >= 110) | (part['PT_COMMENT'].str.startswith('r')) & (part['BRAND'] == 'Brand#32')].groupby(by=['SIZE', 'PT_COMMENT', 'MFGR']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] < 91) & (part['SIZE'] != 19) | (part['PT_COMMENT'] == 'q')][['BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'P_NAME']]

part[(part['P_PARTKEY'] == 132) & (part['CONTAINER'] != 'JUMBO') & (part['PT_COMMENT'] == 'x') & (part['RETAILPRICE'] <= 1054.1562899009577) | (part['TYPE'] == 'L') | (part['SIZE'] > 1) | (part['CONTAINER'] != 'LG') & (part['CONTAINER'] == 'SM') | (part['P_NAME'].str.startswith('s'))][['MFGR', 'P_PARTKEY', 'BRAND']]

part[(part['P_PARTKEY'] == 99) & (part['MFGR'] == 'Manufacturer#4') | (part['SIZE'] <= 11) | (part['TYPE'] != 'M') & (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] < 27)].groupby(by=['P_PARTKEY', 'MFGR', 'BRAND', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] > 77) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['BRAND'].isin(['Brand#44', 'Brand#14', 'Brand#12', 'Brand#15', 'Brand#21', 'Brand#35', 'Brand#24', 'Brand#45', 'Brand#33', 'Brand#31', 'Brand#34', 'Brand#32', 'Brand#42', 'Brand#41', 'Brand#55', 'Brand#22', 'Brand#51', 'Brand#43', 'Brand#11', 'Brand#54', 'Brand#25'])) | (part['BRAND'] != 'Brand#15') | (part['MFGR'] != 'Manufacturer#5') & (part['BRAND'].isin(['Brand#55', 'Brand#25', 'Brand#42', 'Brand#44', 'Brand#41', 'Brand#24', 'Brand#51', 'Brand#33', 'Brand#23', 'Brand#45', 'Brand#34', 'Brand#13', 'Brand#53'])) | (part['RETAILPRICE'] <= 1092.9212659449117) | (part['BRAND'].isin(['Brand#32', 'Brand#21', 'Brand#34', 'Brand#35', 'Brand#51', 'Brand#52', 'Brand#15', 'Brand#22', 'Brand#41', 'Brand#14', 'Brand#42', 'Brand#31', 'Brand#13', 'Brand#23', 'Brand#25', 'Brand#44', 'Brand#54', 'Brand#11'])) | (part['BRAND'] == 'Brand#21')].groupby(by=['P_PARTKEY', 'BRAND']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] >= 149)][['P_PARTKEY', 'PT_COMMENT', 'MFGR', 'CONTAINER', 'SIZE']].groupby(by=['CONTAINER', 'SIZE', 'MFGR']).agg('count')

part[(part['RETAILPRICE'] != 982.0887420635532) & (part['BRAND'].isin(['Brand#52', 'Brand#25', 'Brand#31'])) | (part['PT_COMMENT'].str.startswith('k')) | (part['BRAND'] == 'Brand#32') | (part['SIZE'] <= 42) | (part['P_NAME'] != 'r') | (part['CONTAINER'] == 'SM')].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] != 997.6851154853559) | (part['BRAND'] != 'Brand#14')][['P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']].groupby(by=['SIZE']).agg('count')

part[(part['RETAILPRICE'] <= 1012.1469029805426) | (part['CONTAINER'].str.startswith('MED')) | (part['TYPE'] != 'STA')][['MFGR', 'P_NAME', 'CONTAINER', 'P_PARTKEY']].groupby(by=['MFGR', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] == 1004.3607799421125) & (part['MFGR'] == 'Manufacturer#3') & (part['SIZE'] > 36) | (part['SIZE'] != 31)][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']]

part[(part['RETAILPRICE'] > 999.9711732979) & (part['TYPE'] != 'STA') & (part['P_NAME'] != 'blu') & (part['RETAILPRICE'] > 1046.9631373605605) | (part['RETAILPRICE'] == 1058.0652125526462) & (part['RETAILPRICE'] != 977.768915021508) | (part['BRAND'].isin(['Brand#11', 'Brand#31', 'Brand#42', 'Brand#13', 'Brand#23', 'Brand#54', 'Brand#21', 'Brand#34', 'Brand#52', 'Brand#55', 'Brand#24', 'Brand#45', 'Brand#25', 'Brand#43', 'Brand#51', 'Brand#41', 'Brand#44']))].groupby(by=['TYPE', 'P_PARTKEY', 'SIZE', 'BRAND']).agg('count')

part[(part['RETAILPRICE'] >= 986.0587192336515) | (part['BRAND'] == 'Brand#41') & (part['SIZE'] > 38) & (part['SIZE'] != 36) & (part['BRAND'] == 'Brand#55')][['P_NAME', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['SIZE'] != 45) & (part['TYPE'] != 'P') & (part['P_NAME'] == 'h') | (part['P_NAME'].str.startswith('v')) & (part['TYPE'] != 'P') | (part['MFGR'] != 'Manufacturer#4') & (part['TYPE'] == 'S') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4'])) | (part['P_NAME'] != 'h')].groupby(by=['P_PARTKEY', 'BRAND']).agg('mean', numeric_only=True)

part[(part['SIZE'] > 43) & (part['BRAND'] != 'Brand#55') & (part['SIZE'] == 39) | (part['SIZE'] >= 36) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1'])) | (part['SIZE'] >= 6)][['P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['TYPE'] != 'M') | (part['RETAILPRICE'] >= 1000.5432498316691) | (part['TYPE'].str.startswith('S'))][['MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'TYPE']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[(part['TYPE'] != 'S') & (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] <= 74) & (part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] > 70) & (part['PT_COMMENT'] != 'c') | (part['SIZE'] > 42) & (part['RETAILPRICE'] >= 995.1067444427929) | (part['RETAILPRICE'] > 1023.9740447988027)][['TYPE', 'CONTAINER', 'PT_COMMENT']]

part[(part['TYPE'] != 'STA') & (part['P_PARTKEY'] != 45) | (part['P_NAME'].str.startswith('k')) & (part['RETAILPRICE'] >= 965.9717299381866) | (part['RETAILPRICE'] == 987.1095436088474) & (part['RETAILPRICE'] >= 1089.6099505154111) & (part['RETAILPRICE'] <= 967.0921475431487) & (part['P_NAME'].str.startswith('y')) | (part['P_PARTKEY'] >= 127)].groupby(by=['BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'STA') | (part['RETAILPRICE'] != 1054.7260774414758) & (part['RETAILPRICE'] < 1098.9919503724047) | (part['RETAILPRICE'] == 1000.2935650047948) & (part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] != 'n')][['BRAND', 'MFGR', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['P_NAME', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'SIZE']].groupby(by=['CONTAINER', 'BRAND', 'P_NAME', 'RETAILPRICE']).agg('count')

part[['BRAND', 'TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']].groupby(by=['MFGR', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND']].groupby(by=['BRAND', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'SIZE', 'RETAILPRICE']].groupby(by=['MFGR', 'TYPE', 'P_PARTKEY', 'SIZE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']].groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

part[['MFGR', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['TYPE', 'CONTAINER', 'RETAILPRICE']).agg('sum', numeric_only=True)

part[['P_NAME', 'BRAND', 'SIZE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'RETAILPRICE', 'P_NAME', 'SIZE', 'BRAND']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['CONTAINER', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'MFGR', 'BRAND']].groupby(by=['BRAND', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']].groupby(by=['RETAILPRICE', 'SIZE']).agg('count')

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']].groupby(by=['CONTAINER', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'MFGR']).agg('count')

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'TYPE']].groupby(by=['BRAND', 'P_NAME', 'TYPE']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']].groupby(by=['MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['RETAILPRICE', 'P_NAME']).agg('count')

part[['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']].groupby(by=['MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']].groupby(by=['SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith('i')) | (part['TYPE'].str.startswith('STA')) | (part['SIZE'] > 43) & (part['MFGR'] != 'Manufacturer#4') & (part['PT_COMMENT'].str.startswith('g')) & (part['PT_COMMENT'] != 'l') & (part['RETAILPRICE'] > 927.1542470316274) & (part['MFGR'] == 'Manufacturer#5')][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['P_NAME', 'TYPE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'P_PARTKEY', 'TYPE']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] > 3) | (nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] != 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] > -274.679067278537) & (supplier['S_COMMENT'] != 's') & (supplier['S_SUPPKEY'] <= 115) | (supplier['S_SUPPKEY'] == 102) & (supplier['S_ACCTBAL'] < 9180.840870703276) & (supplier['S_PHONE'].str.startswith('32-'))][['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'g') | (supplier['S_SUPPKEY'] >= 125)].merge(nation[(nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'k') & (supplier['S_ADDRESS'] == 'r') | (supplier['S_ADDRESS'].str.startswith('3')) & (supplier['S_NATIONKEY'] <= 14) & (supplier['S_COMMENT'] != 'l')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] != '2') | (supplier['S_COMMENT'] != 'al ') & (supplier['S_ACCTBAL'] != 9694.842549608424) & (supplier['S_ADDRESS'] != '7') & (supplier['S_ADDRESS'].str.startswith('H'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 14) & (supplier['S_PHONE'] == '2') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] == 0) & (supplier['S_SUPPKEY'] >= 127)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NAME']).agg('count')

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8194) & (partsupp['AVAILQTY'] == 4922) & (partsupp['PS_PARTKEY'] != 18)].merge(supplier[['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 3149) & (partsupp['PS_SUPPKEY'] >= 5054)].merge(part[['MFGR', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 3404) & (partsupp['SUPPLYCOST'] <= 695.0054920804714)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5925) & (partsupp['SUPPLYCOST'] <= 856.5916919056966) | (partsupp['SUPPLYCOST'] < 278.11750207155563)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 4868) & (partsupp['SUPPLYCOST'] > 415.4294623842982) | (partsupp['AVAILQTY'] != 168) | (partsupp['PS_SUPPKEY'] != 3910)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'CONTAINER']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 5602)].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 3650) & (partsupp['PS_SUPPKEY'] > 6242) & (partsupp['P_COMMENT'] != 'v') | (partsupp['PS_SUPPKEY'] >= 3647) | (partsupp['AVAILQTY'] <= 9779)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 8007) & (partsupp['PS_SUPPKEY'] != 176) | (partsupp['SUPPLYCOST'] != 627.6826653028879) | (partsupp['AVAILQTY'] > 3492) | (partsupp['PS_PARTKEY'] != 30)].merge(supplier[(supplier['S_NATIONKEY'] <= 4)][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 1236) & (partsupp['AVAILQTY'] == 116) | (partsupp['PS_PARTKEY'] <= 15) | (partsupp['PS_SUPPKEY'] != 7064)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 9151) & (partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['P_COMMENT'].str.startswith('v')) | (partsupp['AVAILQTY'] < 8424) | (partsupp['P_COMMENT'] == 'r')].merge(part[(part['CONTAINER'] != 'SM') | (part['CONTAINER'] == 'JUMBO') | (part['TYPE'] == 'P') & (part['P_PARTKEY'] == 49)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 33) & (partsupp['PS_SUPPKEY'] != 5494) | (partsupp['PS_PARTKEY'] != 4) & (partsupp['AVAILQTY'] < 1048) | (partsupp['PS_SUPPKEY'] <= 1701)].merge(part[['SIZE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 40) | (partsupp['P_COMMENT'] != ' ') | (partsupp['PS_SUPPKEY'] <= 6200) | (partsupp['PS_SUPPKEY'] != 5225) | (partsupp['P_COMMENT'].str.startswith('f'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 34) | (partsupp['PS_PARTKEY'] <= 15)].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 38) & (partsupp['PS_PARTKEY'] > 3)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 27)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 20) | (partsupp['P_COMMENT'] == 'y')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 39) & (partsupp['P_COMMENT'] == 'u') & (partsupp['AVAILQTY'] != 4703)].merge(part[['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 5829) | (partsupp['P_COMMENT'] != ',') | (partsupp['AVAILQTY'] > 8137) & (partsupp['PS_SUPPKEY'] > 819)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'P_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 7257) | (partsupp['SUPPLYCOST'] == 566.0945642415577) | (partsupp['P_COMMENT'] != '.')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 3119)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6413) & (partsupp['P_COMMENT'].str.startswith(';'))].merge(part[(part['P_NAME'] == 'p') & (part['RETAILPRICE'] != 1094.4802903138957) | (part['BRAND'] != 'Brand#25') & (part['SIZE'] == 22) | (part['TYPE'] == 'M') | (part['SIZE'] < 33) | (part['P_PARTKEY'] != 49)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 7432) | (partsupp['PS_SUPPKEY'] == 4069) & (partsupp['PS_SUPPKEY'] < 2695)].merge(part[['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 3224) & (partsupp['SUPPLYCOST'] != 588.0579842886473)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'y') | (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['PS_PARTKEY'] == 1) | (partsupp['SUPPLYCOST'] < 215.91682776319846)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 968.345276004592) | (partsupp['SUPPLYCOST'] == 351.19675542849455) | (partsupp['PS_SUPPKEY'] > 6805)].merge(part[['P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 469.49298626468527) & (partsupp['SUPPLYCOST'] != 141.7976203865812) | (partsupp['SUPPLYCOST'] == 133.48552538402313) & (partsupp['PS_SUPPKEY'] != 1686)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ACCTBAL', 'S_ADDRESS']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'MFGR']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['CONTAINER'] != 'WRAP')][['P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY', 'CONTAINER', 'BRAND']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith(',')) & (supplier['S_SUPPKEY'] == 160) & (supplier['S_NATIONKEY'] == 7) | (supplier['S_SUPPKEY'] > 82)][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] <= 51) | (supplier['S_ADDRESS'] == '5') | (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'b') | (supplier['S_COMMENT'].str.startswith('.')) & (supplier['S_NATIONKEY'] == 8)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'] == 'Brand#25') | (part['P_NAME'] != 'g')][['P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'] == 'h') & (supplier['S_ACCTBAL'] != 4843.400350941507)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] <= 2) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] != 'A') & (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('U'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NATIONKEY'] > 14)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] == 3) | (nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] < 5) & (nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] != 13) & (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] <= 10) & (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] < 6)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] == 2) | (nation['N_NATIONKEY'] == 19) & (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'n') | (nation['N_REGIONKEY'] != 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'] != 'B')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 2258.321376253076) & (supplier['S_ACCTBAL'] < 453.13721675941656) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] >= 148)].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4147.100496981107) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ADDRESS'] != 'L') | (supplier['S_COMMENT'] != 'e') | (supplier['S_NATIONKEY'] == 18) & (supplier['S_ADDRESS'] == ' ')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == -922.9338914848112) | (supplier['S_PHONE'] == '17-') | (supplier['S_SUPPKEY'] == 62) & (supplier['S_COMMENT'] != 'h') | (supplier['S_ACCTBAL'] < 6714.378499158084) & (supplier['S_COMMENT'] == 'j') & (supplier['S_ADDRESS'] != 'C')][['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 6629.13099755789) & (supplier['S_ACCTBAL'] == 8368.84749095897) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 2114.9425630987316) & (supplier['S_ADDRESS'] == 'H')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 8071.896487687699) | (supplier['S_PHONE'] != '32-') | (supplier['S_ACCTBAL'] > 1355.2075495230144) & (supplier['S_COMMENT'] != 'o') & (supplier['S_NATIONKEY'] <= 6) | (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_SUPPKEY'] != 49)][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != '1')].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'L') | (supplier['S_ACCTBAL'] != -358.8124697389669) | (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'z') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'q') & (supplier['S_SUPPKEY'] > 68) | (supplier['S_NATIONKEY'] < 23) & (supplier['S_COMMENT'] == 't') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 649.4134994968938)].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_PHONE']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'H') | (supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] != 20)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'Q') & (supplier['S_ADDRESS'].str.startswith('R'))][['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'g') & (supplier['S_COMMENT'].str.startswith('u')) & (supplier['S_ADDRESS'] != 'a')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'n')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_ADDRESS'] == 'b') | (supplier['S_ADDRESS'] != 's') & (supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_SUPPKEY'] != 31) | (supplier['S_ADDRESS'] == 'R')][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']]

supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_NATIONKEY'] != 22) & (supplier['S_PHONE'] != '3') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 45)].merge(nation.merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] >= 9160.773301915122) | (supplier['S_SUPPKEY'] != 196) | (supplier['S_COMMENT'] == 'bli') | (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] > 37) | (supplier['S_PHONE'] == '14-') | (supplier['S_SUPPKEY'] <= 143) | (supplier['S_ADDRESS'].str.startswith('2'))][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[(supplier['S_NATIONKEY'] < 18) & (supplier['S_SUPPKEY'] <= 8) | (supplier['S_ACCTBAL'] == 8942.023589314113) | (supplier['S_NATIONKEY'] <= 23) & (supplier['S_SUPPKEY'] == 23) | (supplier['S_COMMENT'] == 'bli') | (supplier['S_NATIONKEY'] != 22)][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']]

supplier[(supplier['S_NATIONKEY'] <= 16) | (supplier['S_SUPPKEY'] >= 76) & (supplier['S_NATIONKEY'] != 10) & (supplier['S_NATIONKEY'] == 18) | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 80)][['S_NAME', 'S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 16) | (supplier['S_NATIONKEY'] != 9)][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_PHONE', 'S_NAME', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 17) | (supplier['S_PHONE'] == '26-') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 16) | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'].str.startswith('26-'))][['S_PHONE']].groupby(by=['S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 6) & (supplier['S_NAME'] == 'S')][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '1') | (supplier['S_PHONE'] == '2') & (supplier['S_ACCTBAL'] < 4015.1406479752904) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NATIONKEY'] > 1) & (supplier['S_ACCTBAL'] < 6586.894396076409) | (supplier['S_NATIONKEY'] < 2)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '1')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '14-') & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_COMMENT'] != 'j') | (supplier['S_SUPPKEY'] < 116)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] <= 111) | (supplier['S_ACCTBAL'] != 6110.539510273866) & (supplier['S_ACCTBAL'] <= 9321.803106508622) | (supplier['S_ACCTBAL'] < 9235.467073003967) | (supplier['S_SUPPKEY'] < 175) | (supplier['S_ACCTBAL'] > 1425.2336201213673)].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'].str.startswith('n'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'] != 'e') & (supplier['S_ACCTBAL'] > 3539.8143412655345) | (supplier['S_ACCTBAL'] >= -104.42826158612695) & (supplier['S_SUPPKEY'] == 87)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 133) & (supplier['S_SUPPKEY'] > 14) & (supplier['S_ADDRESS'] != 'v') & (supplier['S_COMMENT'] == 'q') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 0) & (supplier['S_SUPPKEY'] < 47)][['S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 196)].merge(nation[(nation['N_NATIONKEY'] < 13) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 142) | (supplier['S_ACCTBAL'] != 792.2381544381337) & (supplier['S_NATIONKEY'] < 8) & (supplier['S_COMMENT'] != 'i') & (supplier['S_ADDRESS'] == 's')][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']].groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] != 'U') & (nation['N_COMMENT'] != 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] < 10)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] != 17) & (nation['N_NATIONKEY'] != 22) | (nation['N_COMMENT'] != 'e')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 's')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] == 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] >= 11) | (nation['N_NATIONKEY'] == 8)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'].str.startswith('r'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'C') & (nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'C') | (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'].str.startswith('A'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 18) | (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'].str.startswith('p'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] != 5) | (nation['N_COMMENT'] == 'y') | (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] != 7) | (nation['N_NATIONKEY'] != 16) | (nation['N_NATIONKEY'] >= 7) & (nation['N_NATIONKEY'] != 10)].merge(region[(region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 7) | (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'] != 'I')].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 9) & (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] >= 11)].merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] == 6) & (nation['N_NATIONKEY'] <= 16)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'] != 'G')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 9082.492134482913) & (customer['C_COMMENT'] != ' ') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'HOUSEHOLD']))][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'P') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] != 3809.3546656273193) & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'e')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'd') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'] != 'U')].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'M') | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_NATIONKEY'] != 0) & (customer['C_ACCTBAL'] < 7308.085438876922) | (customer['C_ACCTBAL'] != 6297.094853141223) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('g')) | (customer['C_NATIONKEY'] < 12)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'j') | (customer['C_ACCTBAL'] <= 3199.9454209043633) | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_CUSTKEY', 'C_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('E')) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ADDRESS'] != 'g') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NATIONKEY'] < 2) | (customer['C_CUSTKEY'] < 73)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('f')) | (customer['C_COMMENT'] == 'k')][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 'g') | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_ACCTBAL'] >= 1095.2351576365447) & (customer['C_ADDRESS'] == 'R') & (customer['C_CUSTKEY'] <= 62) | (customer['C_CUSTKEY'] == 73)][['C_COMMENT', 'C_CUSTKEY', 'C_PHONE']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_COMMENT'] != 'h') | (customer['C_ACCTBAL'] == 1428.2296832732295) & (customer['C_NAME'] == 'C')][['C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'f') | (customer['C_ADDRESS'] == 'n') & (customer['C_CUSTKEY'] <= 2) & (customer['C_ACCTBAL'] == 7515.736884532271) & (customer['C_PHONE'] == '13-') & (customer['C_CUSTKEY'] <= 95) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_COMMENT'] == 'p')][['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']]

customer[(customer['C_COMMENT'] == 'g') & (customer['C_ACCTBAL'] != 5061.757752867824)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE'])) & (customer['C_ADDRESS'] != 'R') | (customer['C_ACCTBAL'] != 4391.881233483911) & (customer['C_NATIONKEY'] != 16) & (customer['C_CUSTKEY'] >= 34) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('h')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != 'k') | (customer['C_NATIONKEY'] <= 22)].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('k')) & (customer['C_CUSTKEY'] < 27) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'g') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('3')) & (customer['C_ADDRESS'].str.startswith('X'))][['C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ADDRESS']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['C_PHONE'] == '13-') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '25-') | (customer['C_COMMENT'] == 'e') | (customer['C_COMMENT'] == 'h')][['C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 24)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] != 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 32) & (customer['C_CUSTKEY'] >= 53)].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] < 20)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 39) | (customer['C_NATIONKEY'] >= 19) | (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] > 43) & (customer['C_CUSTKEY'] != 81) & (customer['C_NATIONKEY'] >= 1) | (customer['C_ACCTBAL'] != 5408.96413803094)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT']]

customer[(customer['C_CUSTKEY'] > 32) | (customer['C_NATIONKEY'] >= 4)][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 63)][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'q')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['C_NATIONKEY'] != 20) & (customer['C_ADDRESS'] != 'E') & (customer['C_COMMENT'] == 'k') | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'P') | (customer['C_PHONE'].str.startswith('18-'))][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY']).agg('count')

customer[(customer['C_NATIONKEY'] <= 5) & (customer['C_NATIONKEY'] == 5) | (customer['C_CUSTKEY'] == 86) | (customer['C_CUSTKEY'] < 36) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_PHONE'] == '27-') & (customer['C_PHONE'] == '3') | (customer['C_ACCTBAL'] != 2992.454505780891)][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']]

customer[(customer['C_PHONE'] != '13-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 8) | (customer['C_CUSTKEY'] <= 94) & (customer['C_COMMENT'] == 'l') | (customer['C_NATIONKEY'] >= 15) | (customer['C_CUSTKEY'] == 68)][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']]

customer[(customer['C_PHONE'] != '13-')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].groupby(by=['C_PHONE', 'C_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] != 7) | (customer['C_COMMENT'] == 'p') | (customer['C_NATIONKEY'] >= 3) & (customer['C_ACCTBAL'] < 8817.807801995956) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 22) | (customer['C_NATIONKEY'] >= 17)][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']]

customer[(customer['C_PHONE'] == '2') | (customer['C_CUSTKEY'] < 12) & (customer['C_ADDRESS'].str.startswith('B')) & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_COMMENT'].str.startswith(' '))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] >= 1177.3408655502935) | (customer['C_COMMENT'] != 'c')][['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ACCTBAL'] >= 879.9977790426613) | (customer['C_CUSTKEY'] != 71) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 6)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] > 19) & (customer['C_CUSTKEY'] >= 99) | (customer['C_COMMENT'] != 'a') | (customer['C_NATIONKEY'] < 6) | (customer['C_NATIONKEY'] == 17) & (customer['C_CUSTKEY'] < 41) | (customer['C_PHONE'] != '1')][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']]

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE'])) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_COMMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ACCTBAL', 'C_NAME', 'C_PHONE']).agg('count')

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[['C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('count')

customer[['C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('A'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'CLERK', 'TOTALPRICE']).agg('sum', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['P_NAME'].str.startswith('i')) | (part['P_NAME'].str.startswith('p')) & (part['RETAILPRICE'] >= 1010.8789265678535) | (part['P_PARTKEY'] != 15) | (part['RETAILPRICE'] != 1017.2775926745541) | (part['RETAILPRICE'] > 949.2256544040149)][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'are') & (partsupp['AVAILQTY'] <= 2433) & (partsupp['AVAILQTY'] == 9451) | (partsupp['PS_SUPPKEY'] >= 1515)].merge(part[['SIZE', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'bli') | (partsupp['P_COMMENT'].str.startswith('v')) | (partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['SUPPLYCOST'] <= 215.47230520965704)].merge(part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 566.6989466681277) | (partsupp['AVAILQTY'] == 3419) & (partsupp['PS_SUPPKEY'] == 5135) | (partsupp['PS_SUPPKEY'] <= 2831) | (partsupp['AVAILQTY'] < 5182)].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 408.9337265065664) | (partsupp['AVAILQTY'] < 7611) & (partsupp['AVAILQTY'] != 4593) | (partsupp['P_COMMENT'].str.startswith('q'))][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] > '1998-10-16')][['SHIPMODE', 'COMMITDATE', 'DISCOUNT', 'TAX', 'L_PARTKEY', 'QUANTITY', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.07226150960486614) | (lineitem['L_SUPPKEY'] != 4417) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['LINENUMBER'] >= 5) | (lineitem['LINESTATUS'].isin(['O', 'F']))][['TAX', 'EXTENDEDPRICE', 'DISCOUNT']].groupby(by=['DISCOUNT', 'TAX']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 1) & (lineitem['DISCOUNT'] > 0.00754999375164962) & (lineitem['L_PARTKEY'] > 30443) | (lineitem['L_SUPPKEY'] >= 3329) & (lineitem['LINENUMBER'] <= 1)][['SHIPDATE', 'COMMITDATE', 'TAX', 'L_COMMENT']].groupby(by=['TAX']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] > 5) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['QUANTITY'] != 4) | (lineitem['DISCOUNT'] < 0.0820943646274805) | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['LINENUMBER'] > 1)][['COMMITDATE', 'SHIPDATE', 'TAX', 'EXTENDEDPRICE', 'QUANTITY']]

lineitem[(lineitem['L_COMMENT'] == ' ') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE'])) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['LINENUMBER'] != 5) & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['TAX'] > 0.05681866755777243)][['RECEIPTDATE', 'SHIPMODE']].groupby(by=['SHIPMODE', 'RECEIPTDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 63) & (lineitem['L_COMMENT'] == ' ') | (lineitem['LINENUMBER'] >= 6) | (lineitem['L_ORDERKEY'] >= 76) & (lineitem['L_ORDERKEY'] > 51) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['L_COMMENT'].str.startswith('j')) | (lineitem['RETURNFLAG'].isin(['A']))].merge(orders[['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 150703) & (lineitem['L_ORDERKEY'] < 122) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_SUPPKEY'] >= 8211) & (lineitem['L_COMMENT'].str.startswith('u'))][['RECEIPTDATE', 'DISCOUNT', 'LINENUMBER', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] > 2730) & (lineitem['EXTENDEDPRICE'] > 53851.290509334496) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['RETURNFLAG'] != 'R') & (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['TAX'] > 0.06915662572594393) | (lineitem['L_ORDERKEY'] >= 148)][['L_SUPPKEY', 'L_COMMENT']].groupby(by=['L_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['RETURNFLAG'] != 'A') & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_ORDERKEY'] < 156) | (lineitem['L_PARTKEY'] <= 76397) & (lineitem['TAX'] == 0.032745435768236186)][['L_COMMENT', 'LINENUMBER']].groupby(by=['L_COMMENT', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['L_PARTKEY'] != 155361) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['TAX'] > 0.07177900866962804)][['SHIPDATE', 'RECEIPTDATE', 'LINESTATUS', 'RETURNFLAG', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'TAX']]

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['EXTENDEDPRICE'] <= 24979.88568803303) | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['QUANTITY'] > 41) & (lineitem['L_PARTKEY'] == 78079)][['LINESTATUS', 'RECEIPTDATE', 'QUANTITY']]

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINENUMBER'] < 1) | (lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['LINESTATUS'] == 'O') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['RETURNFLAG'] == 'N')][['LINENUMBER', 'RETURNFLAG', 'SHIPINSTRUCT', 'COMMITDATE', 'QUANTITY', 'RECEIPTDATE', 'SHIPMODE']]

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['DISCOUNT'] > 0.06000043971437135) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['EXTENDEDPRICE'] <= 2326.556426843208)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['AIR', 'SHIP', 'FOB', 'REG AIR', 'TRUCK']))].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('count')

lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'FOB', 'AIR', 'REG AIR', 'MAIL', 'SHIP', 'RAIL'])) & (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_ORDERKEY'] <= 193) & (lineitem['DISCOUNT'] > 0.03264453970286054) | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['L_COMMENT'] == 'n') | (lineitem['L_SUPPKEY'] > 289)].groupby(by=['DISCOUNT', 'L_SUPPKEY', 'RECEIPTDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['TAX'] == 0.02208482379001234) & (lineitem['L_ORDERKEY'] > 30) | (lineitem['LINENUMBER'] > 5) | (lineitem['L_SUPPKEY'] > 268) & (lineitem['L_ORDERKEY'] != 143) & (lineitem['L_ORDERKEY'] > 123) & (lineitem['DISCOUNT'] < 0.07896578213246414) | (lineitem['RECEIPTDATE'] != '1992-05-02')][['SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'SHIPMODE', 'L_COMMENT']]

lineitem[(lineitem['TAX'] > 0.02906678974586187) & (lineitem['EXTENDEDPRICE'] > 84927.39496515087) & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RETURNFLAG'] == 'R') & (lineitem['L_ORDERKEY'] <= 145) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['EXTENDEDPRICE'] < 48858.38486584017) | (lineitem['EXTENDEDPRICE'] <= 81434.19261283091) & (lineitem['RETURNFLAG'] == 'A')][['COMMITDATE', 'L_PARTKEY', 'RECEIPTDATE']]

lineitem[['DISCOUNT', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 'a')][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT']].merge(partsupp[(partsupp['SUPPLYCOST'] == 966.0227530415808) & (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['AVAILQTY'] >= 961) | (partsupp['AVAILQTY'] >= 745) | (partsupp['P_COMMENT'] != ' th')], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['EXTENDEDPRICE', 'RETURNFLAG', 'SHIPDATE', 'COMMITDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'RECEIPTDATE', 'L_COMMENT', 'TAX']].groupby(by=['RECEIPTDATE', 'RETURNFLAG']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_ORDERKEY']].merge(orders[['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'L_PARTKEY', 'RETURNFLAG', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'QUANTITY']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'QUANTITY', 'SHIPMODE', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['L_COMMENT', 'COMMITDATE', 'L_SUPPKEY', 'SHIPMODE']).agg('count')

lineitem[['QUANTITY', 'SHIPDATE', 'L_COMMENT', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT', 'SHIPMODE']].groupby(by=['L_COMMENT', 'SHIPMODE', 'QUANTITY', 'DISCOUNT', 'LINESTATUS']).agg('count')

lineitem[['SHIPDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'LINESTATUS', 'QUANTITY', 'RETURNFLAG']].groupby(by=['EXTENDEDPRICE', 'LINESTATUS', 'SHIPMODE']).agg('count')

nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n')].merge(region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_COMMENT'] != 'r') | (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] <= 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] != 't') | (nation['N_NAME'] != 'V')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] != 'I') | (nation['N_NAME'] == 'G')].merge(region[(region['R_COMMENT'] != 'u') | (region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'p') & (nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] == 23)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') | (nation['N_NATIONKEY'] <= 21) | (nation['N_NATIONKEY'] < 11) | (nation['N_COMMENT'] == 'h')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] != 0)].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] != 'u')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] == 0) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'P') & (nation['N_NATIONKEY'] <= 7)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'r')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] == 'a')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'B')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'C') | (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] == 15) | (nation['N_NATIONKEY'] != 12)].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] <= 22) | (nation['N_NATIONKEY'] == 21) & (nation['N_NAME'] == 'B')][['N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'].str.startswith('A')) | (nation['N_COMMENT'] == 'e')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] != 21) | (nation['N_REGIONKEY'] == 0)][['N_REGIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] != 10) | (nation['N_NATIONKEY'] >= 0) | (nation['N_REGIONKEY'] == 1)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] < 14)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 14) & (nation['N_NAME'].str.startswith('E'))].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 7) & (nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'].str.startswith('I'))].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 21) | (nation['N_REGIONKEY'] >= 1) & (nation['N_NAME'] == 'M') & (nation['N_NAME'] == 'K')].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 5) & (nation['N_NATIONKEY'] > 4)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 7) & (nation['N_NATIONKEY'] > 19)].merge(region[(region['R_NAME'] == 'E') | (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] != 'I') & (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A') & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NATIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] <= 17) & (nation['N_NATIONKEY'] == 15)].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'g')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] == 10)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] <= 2) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] > 21)].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] != -529.3172839905245) & (customer['C_PHONE'] == '18-') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_NATIONKEY'] == 6) | (customer['C_ACCTBAL'] >= 8937.541601042552) & (customer['C_ACCTBAL'] < -199.35407353971914) & (customer['C_ACCTBAL'] == 8606.607223357429) & (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == '3') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] != 2032.7242845417059)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'u') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'r') & (customer['C_ACCTBAL'] < 7787.022072903832)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] >= 21) | (customer['C_NATIONKEY'] == 4)].merge(nation.merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] != '3') & (customer['C_ADDRESS'] != 'p')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] <= 35) & (customer['C_COMMENT'] != 'q') & (customer['C_ADDRESS'] == 'O') | (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_NAME']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == 'b') & (orders['O_ORDERKEY'] <= 610) | (orders['O_ORDERKEY'] >= 746) | (orders['O_CUSTKEY'] < 12283)].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 730) | (orders['TOTALPRICE'] <= 59620.631566413686) | (orders['ORDERSTATUS'] == 'O')].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] != 'l')][['O_COMMENT', 'ORDERDATE', 'CLERK', 'TOTALPRICE']].groupby(by=['ORDERDATE', 'O_COMMENT', 'CLERK', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'k') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] == 48318.87891570862) | (orders['ORDERSTATUS'] == 'F')].groupby(by=['CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] >= 324761.9299914535) | (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] > 319384.95804997656) | (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 23) & (nation['N_COMMENT'].str.startswith('l'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERSTATUS'] == 'P') & (orders['O_ORDERKEY'] > 573) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_ORDERKEY'] >= 798)][['O_CUSTKEY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'O_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] < 137811) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 263833.43801380997) | (orders['ORDERSTATUS'].isin(['P']))][['TOTALPRICE', 'CLERK']].groupby(by=['TOTALPRICE', 'CLERK']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] != 334) | (orders['TOTALPRICE'] != 18962.955873453473)].merge(customer[(customer['C_COMMENT'] == 'q') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] < 47)][['C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['CLERK'] != 'C')].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('j')) | (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['TOTALPRICE'] >= 83422.9337532604)][['CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 119921) & (orders['TOTALPRICE'] > 51998.65384501628) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] == '1998-07-21')][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']]

orders[(orders['O_CUSTKEY'] > 120687)].merge(customer[(customer['C_ADDRESS'].str.startswith('u')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 74471) | (orders['O_CUSTKEY'] >= 41192) | (orders['O_COMMENT'] == 'a') & (orders['TOTALPRICE'] > 122238.72002758489) & (orders['O_CUSTKEY'] != 54693)][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']]

orders[(orders['O_CUSTKEY'] >= 131296) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '1-URGENT', '2-HIGH'])) | (orders['TOTALPRICE'] < 80771.80503500128) & (orders['O_COMMENT'] != 'g') | (orders['O_ORDERKEY'] > 32) & (orders['O_COMMENT'] == 's') | (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 53759)].merge(customer.merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 194) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['CLERK'] != 'C')].merge(customer[(customer['C_ADDRESS'] == 'a') & (customer['C_PHONE'] != '25-') | (customer['C_PHONE'] == '27-') | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_CUSTKEY'] >= 1) & (customer['C_ACCTBAL'] <= 3962.0260361801647)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_ORDERKEY'] >= 587) | (orders['O_ORDERKEY'] == 465) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '5-LOW', '2-HIGH'])) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] <= 0)][['ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] == 'the') | (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['ORDERDATE'] >= '1992-01-13')][['ORDERSTATUS', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_CUSTKEY'] == 63206) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1998-07-21')][['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY']].groupby(by=['CLERK', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['TOTALPRICE'] < 8500.025700866734) | (orders['TOTALPRICE'] <= 328156.5204128571) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['CLERK'] == 'C')][['SHIPPRIORITY', 'O_COMMENT']].groupby(by=['O_COMMENT', 'SHIPPRIORITY']).agg('count')

orders[(orders['TOTALPRICE'] < 349621.42930820666) & (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 222875.872806675) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] == 84462) & (orders['O_CUSTKEY'] != 38383) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('a')) & (orders['O_COMMENT'] != 'egu') & (orders['ORDERSTATUS'].isin(['O', 'P'])) | (orders['ORDERDATE'] > '1992-01-13')][['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']]

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].groupby(by=['ORDERDATE', 'O_COMMENT', 'CLERK', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_ADDRESS'] == 'u')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#34') | (part['TYPE'] == 'P') | (part['BRAND'] == 'Brand#31') | (part['P_NAME'].str.startswith('m'))][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['BRAND'] == 'Brand#55') | (part['RETAILPRICE'] >= 954.3110937704032) & (part['RETAILPRICE'] <= 1053.8197497979022) & (part['P_PARTKEY'] == 101) & (part['CONTAINER'] == 'LG') | (part['P_PARTKEY'] < 102)][['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']]

part[(part['BRAND'].isin(['Brand#53', 'Brand#24', 'Brand#52', 'Brand#55', 'Brand#15', 'Brand#12', 'Brand#25', 'Brand#42', 'Brand#33', 'Brand#13', 'Brand#23', 'Brand#45'])) | (part['TYPE'].str.startswith('P'))][['BRAND', 'MFGR', 'RETAILPRICE', 'TYPE', 'SIZE']].groupby(by=['TYPE', 'RETAILPRICE', 'MFGR']).agg('count')

part[(part['CONTAINER'] != 'LG') | (part['CONTAINER'] == 'SM') | (part['SIZE'] >= 35) & (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'].isin(['Brand#24', 'Brand#45', 'Brand#11', 'Brand#14', 'Brand#12', 'Brand#32', 'Brand#25', 'Brand#41', 'Brand#15', 'Brand#43', 'Brand#23', 'Brand#51', 'Brand#53', 'Brand#52', 'Brand#22', 'Brand#35', 'Brand#21', 'Brand#55', 'Brand#34', 'Brand#33', 'Brand#42', 'Brand#54', 'Brand#31', 'Brand#13', 'Brand#44'])) & (part['P_PARTKEY'] != 109) | (part['MFGR'].isin(['Manufacturer#5'])) | (part['PT_COMMENT'] != 'i')].groupby(by=['MFGR', 'P_NAME', 'CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

part[(part['CONTAINER'] == 'JUMBO') | (part['BRAND'].isin(['Brand#53', 'Brand#14', 'Brand#32', 'Brand#23', 'Brand#55', 'Brand#15', 'Brand#24', 'Brand#45', 'Brand#11', 'Brand#42', 'Brand#43', 'Brand#51', 'Brand#52', 'Brand#13', 'Brand#41', 'Brand#25', 'Brand#22', 'Brand#12', 'Brand#54', 'Brand#21', 'Brand#44', 'Brand#31', 'Brand#33'])) | (part['RETAILPRICE'] == 1099.816014161787) | (part['TYPE'].str.startswith('SMA'))][['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']]

part[(part['CONTAINER'].str.startswith('LG')) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4'])) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5'])) | (part['CONTAINER'] != 'LG') & (part['P_NAME'] != 'c') | (part['SIZE'] < 28) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#5'])) & (part['P_NAME'] != 'k')][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#1') | (part['SIZE'] != 21) & (part['PT_COMMENT'].str.startswith('!')) & (part['SIZE'] <= 4) & (part['P_PARTKEY'] == 84) | (part['P_PARTKEY'] != 149)][['PT_COMMENT', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'TYPE']]

part[(part['MFGR'] == 'Manufacturer#1') | (part['PT_COMMENT'] != '!') & (part['TYPE'] != 'E') | (part['SIZE'] == 22) | (part['BRAND'] != 'Brand#14') | (part['SIZE'] != 42) & (part['RETAILPRICE'] == 944.1701899254651)].groupby(by=['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'TYPE', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2'])) | (part['CONTAINER'] == 'MED') & (part['PT_COMMENT'] == 'g') & (part['BRAND'] != 'Brand#51') & (part['P_PARTKEY'] != 103) & (part['SIZE'] == 48)][['MFGR', 'PT_COMMENT', 'SIZE']].groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'u') | (part['BRAND'].isin(['Brand#21', 'Brand#33', 'Brand#25', 'Brand#34', 'Brand#24', 'Brand#15', 'Brand#55', 'Brand#13', 'Brand#53', 'Brand#54', 'Brand#11', 'Brand#35', 'Brand#43', 'Brand#45', 'Brand#31', 'Brand#52'])) & (part['RETAILPRICE'] != 975.8239501635081) & (part['P_NAME'] != 'blu') | (part['PT_COMMENT'] != 'q') & (part['P_PARTKEY'] == 7)][['MFGR', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND', 'P_PARTKEY', 'TYPE']]

part[(part['PT_COMMENT'] == 'd') | (part['P_PARTKEY'] >= 178) & (part['TYPE'] == 'S') | (part['RETAILPRICE'] == 1013.1981506651136) | (part['SIZE'] >= 20) | (part['BRAND'] == 'Brand#31') | (part['BRAND'] == 'Brand#55') | (part['TYPE'] == 'SMA')].groupby(by=['MFGR', 'TYPE', 'RETAILPRICE', 'P_NAME']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] == 'y')][['P_PARTKEY', 'SIZE', 'BRAND', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']].groupby(by=['CONTAINER', 'SIZE']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('u')) | (part['PT_COMMENT'].str.startswith('l')) | (part['TYPE'].str.startswith('S')) | (part['P_PARTKEY'] == 114) & (part['PT_COMMENT'] == 'm') & (part['BRAND'] == 'Brand#22')][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE', 'BRAND']]

part[(part['P_NAME'] != 'lin') | (part['P_NAME'] != 'd') & (part['RETAILPRICE'] != 1066.5378586690977) & (part['P_NAME'].str.startswith('b')) | (part['CONTAINER'] != 'LG') & (part['TYPE'] != 'P')][['P_NAME', 'CONTAINER', 'BRAND', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']]

part[(part['P_NAME'].str.startswith('f')) & (part['CONTAINER'].str.startswith('LG')) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) | (part['CONTAINER'].str.startswith('WRAP')) | (part['P_PARTKEY'] > 11) & (part['P_PARTKEY'] >= 36) | (part['SIZE'] < 18) & (part['P_PARTKEY'] >= 125)][['CONTAINER', 'SIZE', 'RETAILPRICE', 'MFGR', 'BRAND']]

part[(part['P_PARTKEY'] <= 132) | (part['SIZE'] == 46) | (part['MFGR'] == 'Manufacturer#1') | (part['TYPE'] == 'E') & (part['BRAND'] != 'Brand#13') & (part['P_PARTKEY'] < 168) & (part['PT_COMMENT'].str.startswith('x'))][['P_NAME', 'CONTAINER']].groupby(by=['CONTAINER']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] == 139) & (part['PT_COMMENT'] == 'h') | (part['P_NAME'] != 'g') | (part['TYPE'] == 'SMA') | (part['TYPE'] == 'L') & (part['TYPE'] == 'L') & (part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] >= 180) | (part['RETAILPRICE'] >= 1007.1715366504442)][['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'TYPE']]

part[(part['P_PARTKEY'] > 70) & (part['SIZE'] > 11) & (part['BRAND'].isin(['Brand#41', 'Brand#25', 'Brand#42', 'Brand#11', 'Brand#22', 'Brand#15', 'Brand#34', 'Brand#45', 'Brand#14', 'Brand#53', 'Brand#43', 'Brand#55', 'Brand#54', 'Brand#51', 'Brand#33', 'Brand#24', 'Brand#31', 'Brand#23'])) & (part['CONTAINER'] != 'JUMBO')][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['RETAILPRICE'] <= 933.801372805433) & (part['BRAND'].isin(['Brand#25', 'Brand#14', 'Brand#15', 'Brand#43', 'Brand#52', 'Brand#51', 'Brand#24', 'Brand#34', 'Brand#42', 'Brand#45', 'Brand#12', 'Brand#41', 'Brand#32', 'Brand#21', 'Brand#22', 'Brand#55'])) | (part['TYPE'] == 'STA') | (part['RETAILPRICE'] < 1031.4227702188666) | (part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] == 'Brand#35')][['P_PARTKEY', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] == 1081.3015558346929) | (part['BRAND'] != 'Brand#25') & (part['P_NAME'] == 'k') | (part['P_NAME'] != 'n') | (part['SIZE'] < 44) & (part['P_NAME'] != 'k') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3'])) | (part['RETAILPRICE'] >= 1045.4560096141608)][['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'BRAND']]

part[(part['RETAILPRICE'] > 901.4688550577542) & (part['TYPE'] == 'L') | (part['SIZE'] != 25) | (part['P_PARTKEY'] == 140) | (part['PT_COMMENT'] != 'x') & (part['P_NAME'] != 'p') | (part['BRAND'] != 'Brand#22')].groupby(by=['SIZE', 'PT_COMMENT', 'BRAND', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part[(part['SIZE'] < 12) | (part['P_PARTKEY'] <= 5) | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#4') | (part['PT_COMMENT'] == 'x') & (part['CONTAINER'] == 'SM') | (part['P_NAME'] == 'w')].groupby(by=['CONTAINER', 'PT_COMMENT', 'BRAND', 'RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

part[(part['SIZE'] < 38) & (part['RETAILPRICE'] > 978.8292064146561) | (part['P_NAME'] != 'm') | (part['CONTAINER'] != 'WRAP')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[(part['SIZE'] <= 26) & (part['P_PARTKEY'] <= 56) & (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] == 162) & (part['P_PARTKEY'] != 91) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1'])) | (part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'] == 'ly ')][['MFGR']].groupby(by=['MFGR']).agg('mean', numeric_only=True)

part[(part['SIZE'] <= 39) & (part['CONTAINER'] != 'MED') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#2'])) & (part['BRAND'] != 'Brand#25') & (part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] != 'MED')][['P_PARTKEY', 'TYPE', 'P_NAME']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['SIZE'] > 29) & (part['BRAND'] == 'Brand#53') | (part['BRAND'].isin(['Brand#44', 'Brand#42', 'Brand#23', 'Brand#12', 'Brand#51', 'Brand#45', 'Brand#14', 'Brand#15', 'Brand#53', 'Brand#25', 'Brand#41', 'Brand#31', 'Brand#13', 'Brand#32', 'Brand#54', 'Brand#24', 'Brand#33', 'Brand#11', 'Brand#35'])) | (part['CONTAINER'] == 'SM') | (part['P_NAME'] != 'h') | (part['P_PARTKEY'] <= 118) | (part['P_NAME'] != 'b') | (part['TYPE'].str.startswith('STA'))].groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

part[(part['SIZE'] >= 27) | (part['SIZE'] > 43) & (part['RETAILPRICE'] >= 932.7373966812744) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'] == 'Brand#42') | (part['P_NAME'] != 'p') & (part['P_PARTKEY'] <= 13) | (part['BRAND'] != 'Brand#44')].groupby(by=['P_PARTKEY', 'SIZE', 'P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[(part['TYPE'] != 'SMA') | (part['P_PARTKEY'] == 3) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5'])) | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2']))][['BRAND', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'CONTAINER']]

part[(part['TYPE'] != 'STA') & (part['CONTAINER'] != 'WRAP') & (part['TYPE'] == 'P') & (part['MFGR'] != 'Manufacturer#3') & (part['SIZE'] < 23)][['MFGR', 'PT_COMMENT', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

part[(part['TYPE'] == 'E') & (part['BRAND'].isin(['Brand#54', 'Brand#55', 'Brand#53', 'Brand#24', 'Brand#42', 'Brand#14', 'Brand#11', 'Brand#25', 'Brand#52', 'Brand#33', 'Brand#51', 'Brand#21', 'Brand#15', 'Brand#44', 'Brand#31', 'Brand#32', 'Brand#35', 'Brand#43', 'Brand#13', 'Brand#34'])) & (part['SIZE'] <= 45) & (part['BRAND'] != 'Brand#13') | (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] <= 44) | (part['RETAILPRICE'] > 939.9647947829549) & (part['P_NAME'].str.startswith('c'))].groupby(by=['P_PARTKEY', 'MFGR', 'BRAND', 'SIZE']).agg('count')

part[(part['TYPE'] == 'M') | (part['SIZE'] > 10) | (part['PT_COMMENT'] != 'u') | (part['P_NAME'] != 'b') & (part['SIZE'] > 26) & (part['MFGR'] == 'Manufacturer#3') & (part['SIZE'] == 11) | (part['BRAND'].isin(['Brand#31', 'Brand#21', 'Brand#45', 'Brand#24', 'Brand#53', 'Brand#14', 'Brand#42', 'Brand#25', 'Brand#11', 'Brand#52', 'Brand#13', 'Brand#23'])) & (part['P_NAME'].str.startswith('cor'))].groupby(by=['TYPE', 'PT_COMMENT', 'P_PARTKEY']).agg('max', numeric_only=True)

part[(part['TYPE'] == 'SMA') | (part['RETAILPRICE'] != 982.2351862357497) | (part['RETAILPRICE'] < 1091.6208178029306) | (part['TYPE'] != 'S') | (part['MFGR'] == 'Manufacturer#1') | (part['TYPE'].str.startswith('E')) | (part['P_NAME'].str.startswith('n')) & (part['CONTAINER'] != 'LG') | (part['BRAND'].isin(['Brand#21', 'Brand#42', 'Brand#22', 'Brand#14', 'Brand#33', 'Brand#44', 'Brand#43', 'Brand#45', 'Brand#54', 'Brand#24', 'Brand#31', 'Brand#23', 'Brand#41', 'Brand#35', 'Brand#12', 'Brand#25', 'Brand#34', 'Brand#55', 'Brand#32', 'Brand#51', 'Brand#52', 'Brand#15']))].groupby(by=['CONTAINER', 'P_NAME', 'BRAND']).agg('count')

part[(part['TYPE'].str.startswith('L')) | (part['SIZE'] > 40) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['MFGR'] != 'Manufacturer#4') | (part['P_NAME'] != 'blu') & (part['CONTAINER'].str.startswith('JUMBO'))][['MFGR', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'TYPE', 'CONTAINER']]

part[(part['TYPE'].str.startswith('STA')) & (part['SIZE'] < 2) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1'])) & (part['PT_COMMENT'] != 'l')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']]

part[['BRAND', 'MFGR', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['P_NAME', 'CONTAINER', 'TYPE', 'SIZE']).agg('count')

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'TYPE']].groupby(by=['PT_COMMENT', 'MFGR', 'BRAND', 'TYPE', 'SIZE']).agg('mean', numeric_only=True)

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

part[['BRAND', 'RETAILPRICE', 'MFGR', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']].groupby(by=['SIZE', 'RETAILPRICE', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'BRAND', 'SIZE', 'PT_COMMENT', 'P_NAME']).agg('mean', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['TYPE', 'RETAILPRICE', 'CONTAINER']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']].groupby(by=['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER']).agg('count')

part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'TYPE']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'CONTAINER', 'RETAILPRICE']).agg('count')

part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#1') & (part['TYPE'].str.startswith('M')) | (part['RETAILPRICE'] > 901.5489923384039) & (part['P_PARTKEY'] >= 125) | (part['SIZE'] > 18) & (part['TYPE'] == 'S')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND']).agg('count')

partsupp.merge(part[(part['PT_COMMENT'] != ' ') & (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'] == 'STA') | (part['PT_COMMENT'] == ' fi') & (part['P_NAME'].str.startswith('cor'))][['MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] != 'c') & (part['CONTAINER'].str.startswith('LG')) | (part['RETAILPRICE'] >= 1002.2277544356175) | (part['BRAND'] != 'Brand#51') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) & (part['MFGR'] == 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'BRAND']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['RETAILPRICE'] > 1028.0425838306014) & (part['TYPE'].str.startswith('STA')) & (part['BRAND'] == 'Brand#25') & (part['TYPE'] == 'SMA') | (part['BRAND'] == 'Brand#21')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'CONTAINER', 'P_PARTKEY']).agg('count')

partsupp.merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'g') | (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 23) & (nation['N_NATIONKEY'] > 12)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 3970.8219418646295) & (supplier['S_ADDRESS'].str.startswith('s')) | (supplier['S_COMMENT'] == 'c') & (supplier['S_COMMENT'] != 'h') & (supplier['S_NATIONKEY'] != 13)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != ' ') | (supplier['S_COMMENT'] != 'x') & (supplier['S_ACCTBAL'] < 6095.530435505021) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('S')) & (nation['N_NATIONKEY'] > 16)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_NATIONKEY'] <= 15) & (supplier['S_ADDRESS'] == 'F') | (supplier['S_ACCTBAL'] < 8291.907086429543) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'] != '17-') | (supplier['S_PHONE'] != '1')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('f')) | (supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] >= 5482.481599968316) & (supplier['S_ADDRESS'] != 'j') | (supplier['S_ACCTBAL'] >= 8985.335625393338) & (supplier['S_ADDRESS'] == 'k') | (supplier['S_NATIONKEY'] >= 18) & (supplier['S_ADDRESS'].str.startswith('j'))][['S_NAME', 'S_ADDRESS', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 799)].merge(part[(part['TYPE'].str.startswith('P')) | (part['CONTAINER'] == 'WRAP') | (part['SIZE'] == 24) & (part['TYPE'] != 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 7261) & (partsupp['AVAILQTY'] == 5461) | (partsupp['AVAILQTY'] != 8877) | (partsupp['AVAILQTY'] != 9054) & (partsupp['PS_PARTKEY'] < 16)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 4504) | (partsupp['PS_PARTKEY'] >= 4) & (partsupp['SUPPLYCOST'] == 692.2654087418715) & (partsupp['AVAILQTY'] != 3398) & (partsupp['SUPPLYCOST'] < 787.6372096420561)].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 4866)].merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_PHONE'] != '14-') & (supplier['S_PHONE'] != '3')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_NATIONKEY', 'S_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 19) & (partsupp['PS_SUPPKEY'] < 582)].merge(part[(part['BRAND'] != 'Brand#51') & (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] != 962.0006245434012) | (part['RETAILPRICE'] == 976.775908451449) | (part['TYPE'] != 'SMA') & (part['CONTAINER'] != 'LG') | (part['PT_COMMENT'] == 'h') & (part['P_PARTKEY'] != 190)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 3) | (partsupp['PS_PARTKEY'] <= 32) | (partsupp['PS_SUPPKEY'] == 4382)].merge(part[['MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 13) & (partsupp['PS_PARTKEY'] >= 27) & (partsupp['AVAILQTY'] > 2210) | (partsupp['AVAILQTY'] == 4221)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 1129) | (partsupp['PS_PARTKEY'] <= 18) & (partsupp['AVAILQTY'] <= 7950)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4848) | (partsupp['AVAILQTY'] == 5022) & (partsupp['AVAILQTY'] >= 2249)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('g'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 2290) | (partsupp['P_COMMENT'] == 'j') | (partsupp['PS_SUPPKEY'] > 4141) | (partsupp['PS_SUPPKEY'] != 6183)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6019) | (partsupp['P_COMMENT'] != 'e') & (partsupp['PS_SUPPKEY'] <= 5375)].merge(part[['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != ',') | (partsupp['SUPPLYCOST'] <= 954.1602419272716) & (partsupp['P_COMMENT'].str.startswith('p')) | (partsupp['SUPPLYCOST'] >= 595.3264671338648)].merge(part[(part['MFGR'] != 'Manufacturer#1') & (part['P_PARTKEY'] < 84) & (part['BRAND'] == 'Brand#25') & (part['P_NAME'].str.startswith('y')) & (part['CONTAINER'] != 'WRAP') | (part['P_NAME'] == 'o')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('h')) & (partsupp['PS_PARTKEY'] <= 35) & (partsupp['AVAILQTY'] >= 4606) | (partsupp['PS_SUPPKEY'] != 2427) | (partsupp['PS_SUPPKEY'] != 1773)][['PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 890.0769832433118) | (partsupp['P_COMMENT'].str.startswith('e')) | (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['AVAILQTY'] != 5439) | (partsupp['AVAILQTY'] <= 6686)].merge(part[['CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 946.9182728847268)].merge(part[(part['P_PARTKEY'] >= 1) | (part['RETAILPRICE'] <= 976.3055084063026) & (part['P_NAME'].str.startswith('h')) | (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'].isin(['Brand#24', 'Brand#44', 'Brand#12', 'Brand#45', 'Brand#33', 'Brand#35', 'Brand#51'])) & (part['BRAND'] == 'Brand#43') & (part['MFGR'] != 'Manufacturer#5') | (part['BRAND'] != 'Brand#51') & (part['MFGR'] != 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 64.04123929479802) & (partsupp['P_COMMENT'] != 'u') & (partsupp['PS_PARTKEY'] > 33) | (partsupp['PS_SUPPKEY'] <= 7020) & (partsupp['PS_SUPPKEY'] <= 2649)].merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#21') | (part['PT_COMMENT'].str.startswith('k')) & (part['CONTAINER'] == 'MED') & (part['BRAND'] != 'Brand#41')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'RETAILPRICE', 'TYPE']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[['CONTAINER', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'] != 'Brand#24') | (part['PT_COMMENT'].str.startswith('g')) | (part['SIZE'] == 32) & (part['BRAND'] == 'Brand#41') & (part['SIZE'] < 18)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] == 'j')][['S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 0) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_NAME'].str.startswith('s'))][['TYPE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] != 174) & (part['P_NAME'] != 'h') | (part['P_NAME'].str.startswith('cor')) | (part['PT_COMMENT'] == 'g') & (part['BRAND'].isin(['Brand#14', 'Brand#13', 'Brand#35', 'Brand#55', 'Brand#25', 'Brand#52', 'Brand#12', 'Brand#15', 'Brand#11', 'Brand#22', 'Brand#41', 'Brand#43', 'Brand#32', 'Brand#33', 'Brand#23', 'Brand#44', 'Brand#31', 'Brand#45', 'Brand#24', 'Brand#51', 'Brand#53', 'Brand#42', 'Brand#34'])) | (part['CONTAINER'].str.startswith('LG')) & (part['TYPE'].str.startswith('E'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('SM'))][['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] != 'l') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'S') | (nation['N_NATIONKEY'] < 8) & (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] == 18) & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 22)].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] >= 8) | (nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] == 4) & (nation['N_COMMENT'] != 'i')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 2)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] <= 7) & (nation['N_COMMENT'] == 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] < 1)].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 2525.1459912408664) & (supplier['S_NATIONKEY'] <= 10)].merge(nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_COMMENT'] == ' ') | (nation['N_NAME'] != 'R') & (nation['N_NATIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 5980.77339428808) & (supplier['S_PHONE'] == '17-')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 5181.967952079743) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('c'))].merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'] == 'e')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 9465.42776287193) | (supplier['S_SUPPKEY'] > 189) | (supplier['S_NATIONKEY'] > 13) & (supplier['S_ADDRESS'] == 'g') & (supplier['S_NATIONKEY'] < 20) | (supplier['S_ADDRESS'] == 'U') & (supplier['S_PHONE'] == '32-')].groupby(by=['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 1464.0569484386076)].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'n') | (supplier['S_NATIONKEY'] > 23)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('G')) & (supplier['S_ADDRESS'] != 'Z') & (supplier['S_ACCTBAL'] > 5725.7620003136435) | (supplier['S_SUPPKEY'] != 48)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_NATIONKEY'] <= 13) & (supplier['S_COMMENT'] != 'd') & (supplier['S_ADDRESS'] == 'L') & (supplier['S_SUPPKEY'] == 141) & (supplier['S_NATIONKEY'] == 13) | (supplier['S_NAME'] == 'S')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'v') & (supplier['S_NATIONKEY'] < 18) | (supplier['S_ACCTBAL'] < 8715.511194681598) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 't') & (supplier['S_PHONE'] != '2')][['S_COMMENT', 'S_NAME']].groupby(by=['S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'k')].merge(nation[(nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'the')].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] > 17)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_SUPPKEY'] <= 73)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ACCTBAL']].groupby(by=['S_PHONE', 'S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('h')) & (supplier['S_ADDRESS'] == 's') & (supplier['S_ADDRESS'] == 'O') & (supplier['S_SUPPKEY'] >= 35) & (supplier['S_ADDRESS'] != 'm') | (supplier['S_COMMENT'].str.startswith(' sl'))].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] != 127) | (supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] < -196.6759049536157) | (supplier['S_NATIONKEY'] < 5) | (supplier['S_PHONE'].str.startswith('17-'))][['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'n') | (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 1) & (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] != 'c')].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] == 19) & (nation['N_NAME'] != 'R')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_SUPPKEY'] >= 55) & (supplier['S_ADDRESS'] == 'o') | (supplier['S_ACCTBAL'] >= 9085.45876371364) & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_COMMENT'] != 'd') | (supplier['S_SUPPKEY'] <= 66)].merge(nation[(nation['N_NATIONKEY'] == 14) | (nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '2') | (supplier['S_ACCTBAL'] > 5307.457496429874) | (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_COMMENT'] == 'q') | (supplier['S_ACCTBAL'] == 5066.32088108385) & (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_NATIONKEY'] > 8)][['S_PHONE', 'S_SUPPKEY']].groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 101) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('n'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NATIONKEY'] == 9) | (supplier['S_SUPPKEY'] != 126)].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] <= 23) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 150) & (supplier['S_ACCTBAL'] > 4145.486136887782) | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_PHONE'] == '26-') & (supplier['S_ADDRESS'].str.startswith('p')) | (supplier['S_ADDRESS'] == 'x') | (supplier['S_NATIONKEY'] == 19)][['S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 12) & (nation['N_COMMENT'] != 'v') | (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] == 9)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('count')

supplier[['S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'E') & (nation['N_COMMENT'] != 'i') & (nation['N_REGIONKEY'] <= 1)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'] != 'c') | (nation['N_COMMENT'] == 'l')].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] < 18)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] <= 19)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] > 12) & (nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] == 21)].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != -202.27209952194596)].merge(nation[(nation['N_COMMENT'] != 'n')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] != 9602.187706979143) | (customer['C_CUSTKEY'] > 30)].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 4465.275900298714)][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] < 9569.771853852078) | (customer['C_CUSTKEY'] < 9)][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']).agg('count')

customer[(customer['C_ACCTBAL'] >= 9297.089274335916) | (customer['C_ACCTBAL'] < 6836.545733265076)].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'L') & (customer['C_ADDRESS'] == 'O') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_REGIONKEY'] <= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('H')) | (customer['C_ACCTBAL'] > 5333.366091198468) | (customer['C_NATIONKEY'] == 20) | (customer['C_NAME'] == 'C')][['C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('K')) | (customer['C_ADDRESS'] != 'z')][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] != 'e') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'MACHINERY'])) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_NATIONKEY'] != 15) | (customer['C_CUSTKEY'] == 51)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'l')].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 0) | (nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 4) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] > 9431.264935776271) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 91) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_CUSTKEY'] < 2) | (customer['C_COMMENT'].str.startswith('u')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] == 'v') | (customer['C_NATIONKEY'] == 9) | (customer['C_COMMENT'] != 'w') & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_NAME', 'C_COMMENT']].groupby(by=['C_NAME', 'C_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] < 71) & (customer['C_NATIONKEY'] == 11) & (customer['C_NATIONKEY'] != 13) & (customer['C_PHONE'] != '18-')][['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME']].groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 54)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 77)].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 20) & (customer['C_CUSTKEY'] == 36) & (customer['C_ACCTBAL'] == 9449.187254259654) | (customer['C_COMMENT'].str.startswith('g'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 38)].merge(nation[(nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] > 7) | (customer['C_COMMENT'].str.startswith('c'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('a'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 14) & (customer['C_COMMENT'] == 'f') | (customer['C_ACCTBAL'] != 8737.846772075589) & (customer['C_NATIONKEY'] <= 7)].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'].str.startswith('R'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 20) | (customer['C_NATIONKEY'] >= 20) & (customer['C_NATIONKEY'] >= 7) & (customer['C_ADDRESS'].str.startswith('n')) | (customer['C_NATIONKEY'] <= 8) & (customer['C_CUSTKEY'] == 24)][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS']].groupby(by=['C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 13) & (customer['C_NATIONKEY'] != 17) | (customer['C_CUSTKEY'] < 18) & (customer['C_ADDRESS'] == '0') & (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].groupby(by=['C_PHONE']).agg('count')

customer[(customer['C_NATIONKEY'] == 4) | (customer['C_COMMENT'] == 'i') | (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] != 19) | (customer['C_ACCTBAL'] > 2254.210079132554) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 36) | (customer['C_COMMENT'].str.startswith('e'))][['C_COMMENT', 'C_NAME']].groupby(by=['C_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '2') & (customer['C_CUSTKEY'] > 24) & (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] < 45) & (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_ADDRESS'] != 'L') & (customer['C_ADDRESS'] == '6')].merge(nation[(nation['N_COMMENT'] == 't')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '2')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'] == 'AFR') & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_NATIONKEY'] < 5)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'y')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 'n') & (nation['N_NAME'] != 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 21)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'E')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] < 23)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] == 'uri') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] >= 5216.643087606453) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERDATE'] != '1998-07-21')][['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 3530) | (partsupp['SUPPLYCOST'] != 514.3181184132847)].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 915.822363299887)].merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ADDRESS'].str.startswith('X'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('n'))][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] == 41644.82467937796) & (lineitem['TAX'] <= 0.07419111319945834) & (lineitem['EXTENDEDPRICE'] != 77217.10196828008) | (lineitem['LINENUMBER'] != 1) & (lineitem['L_SUPPKEY'] <= 9115) | (lineitem['DISCOUNT'] > 0.09226883103201045)][['EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT']].groupby(by=['SHIPDATE', 'EXTENDEDPRICE']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 18019.4982225403) | (lineitem['L_ORDERKEY'] >= 16) & (lineitem['TAX'] > 0.055984962921651296) & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['LINESTATUS'] != 'F') | (lineitem['EXTENDEDPRICE'] <= 32404.03959226295) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD')][['LINESTATUS', 'SHIPINSTRUCT', 'RECEIPTDATE', 'SHIPMODE', 'TAX', 'EXTENDEDPRICE']]

lineitem[(lineitem['LINENUMBER'] > 4) | (lineitem['L_PARTKEY'] == 129144) & (lineitem['L_ORDERKEY'] < 45) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'].isin(['TRUCK', 'AIR'])) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(orders[['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') | (lineitem['L_ORDERKEY'] > 19)][['DISCOUNT', 'LINENUMBER', 'LINESTATUS', 'TAX', 'SHIPDATE']].groupby(by=['SHIPDATE', 'LINESTATUS', 'TAX', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 135)][['LINESTATUS', 'COMMITDATE', 'SHIPDATE', 'SHIPMODE', 'EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE', 'LINESTATUS', 'COMMITDATE', 'SHIPMODE', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] < 33) | (lineitem['L_ORDERKEY'] == 141) & (lineitem['L_COMMENT'] != 'k') | (lineitem['L_SUPPKEY'] > 87) & (lineitem['SHIPMODE'] == 'AIR') | (lineitem['DISCOUNT'] == 0.04570310022888083) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['QUANTITY'] != 49)][['EXTENDEDPRICE', 'L_COMMENT']].groupby(by=['L_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 8) | (lineitem['EXTENDEDPRICE'] <= 60432.691326946806) | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_ORDERKEY'] > 137) | (lineitem['L_ORDERKEY'] == 29) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['SHIPINSTRUCT'] == 'NONE')][['L_ORDERKEY']].groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'A')][['L_PARTKEY', 'TAX', 'RETURNFLAG', 'COMMITDATE', 'QUANTITY', 'RECEIPTDATE']].groupby(by=['COMMITDATE', 'RECEIPTDATE', 'TAX', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['DISCOUNT'] == 0.06477267998114691) | (lineitem['L_PARTKEY'] < 187521) | (lineitem['L_ORDERKEY'] <= 122)].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL')].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']).agg('count')

lineitem[(lineitem['TAX'] == 0.017654942784072727) & (lineitem['LINENUMBER'] > 4) | (lineitem['EXTENDEDPRICE'] != 40790.56972345152) | (lineitem['L_PARTKEY'] <= 172234) | (lineitem['TAX'] <= 0.04814699285506757) & (lineitem['LINESTATUS'] != 'F') | (lineitem['L_COMMENT'] == 'g')][['EXTENDEDPRICE', 'QUANTITY']].groupby(by=['EXTENDEDPRICE', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[['DISCOUNT', 'LINESTATUS', 'RECEIPTDATE', 'L_COMMENT', 'EXTENDEDPRICE', 'COMMITDATE', 'SHIPDATE', 'QUANTITY']].groupby(by=['L_COMMENT', 'LINESTATUS', 'SHIPDATE', 'COMMITDATE', 'QUANTITY']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'DISCOUNT', 'QUANTITY', 'SHIPMODE', 'L_PARTKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['DISCOUNT', 'LINENUMBER', 'L_PARTKEY', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[['L_ORDERKEY', 'DISCOUNT', 'RECEIPTDATE', 'TAX', 'SHIPINSTRUCT', 'QUANTITY']].merge(orders[['ORDERDATE', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'TAX', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] != 40) | (partsupp['AVAILQTY'] > 1805)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPMODE']].groupby(by=['RECEIPTDATE', 'SHIPMODE', 'RETURNFLAG', 'LINESTATUS', 'DISCOUNT']).agg('mean', numeric_only=True)

lineitem[['RECEIPTDATE', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['TAX', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'COMMITDATE']].merge(orders[(orders['O_ORDERKEY'] != 589) & (orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] == 194983.09848099324)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['TAX', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'] != 'h') | (nation['N_COMMENT'] == 'c')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] > 7) | (nation['N_REGIONKEY'] < 1)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'P')].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'R') | (nation['N_NAME'] != 'C') & (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'I')].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'] == 's') | (nation['N_COMMENT'] != 'a')][['N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('i'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] == 'l')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 18) & (nation['N_NATIONKEY'] != 0) & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] <= 13)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NATIONKEY'] >= 23)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 12)].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 9)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 8) & (nation['N_NATIONKEY'] != 2)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 0) | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] >= 14) | (nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == ' ')].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'] != 'E') | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] > 9)].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] != 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] > 5)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] == 22)].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'].str.startswith('v')) | (nation['N_NAME'].str.startswith('E'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] != 23) & (nation['N_NATIONKEY'] != 7)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'O')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'g') | (customer['C_ACCTBAL'] < 7864.742101202506) & (customer['C_NATIONKEY'] < 9)][['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_NAME'].str.startswith('R'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_CUSTKEY'] >= 10) & (customer['C_PHONE'] == '22-') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['TOTALPRICE'] >= 254025.35904281013) | (orders['O_ORDERKEY'] >= 684) | (orders['TOTALPRICE'] >= 94389.26408539835) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 65791)][['ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING', 'FURNITURE'])) & (customer['C_ACCTBAL'] > 8981.239853017321) & (customer['C_NATIONKEY'] < 17) & (customer['MKTSEGMENT'] != 'FURNITURE')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] > '1998-07-21') & (orders['O_CUSTKEY'] == 50147) & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] == 104627) | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERSTATUS'] == 'F') & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1992-01-13')][['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'ORDERDATE']]

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] < 297)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY']).agg('count')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] > 120357) | (orders['O_ORDERKEY'] < 123) | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] < 34242) & (orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != 'e')].groupby(by=['O_COMMENT', 'CLERK', 'O_CUSTKEY', 'ORDERDATE']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['O_ORDERKEY'] >= 413) | (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_COMMENT'] != 'c')][['C_NAME', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED'])) & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] == 199270.4960670768) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'].str.startswith('d')) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_ORDERKEY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW'])) & (orders['TOTALPRICE'] > 210884.7512708108) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_COMMENT'] == 'n') & (orders['O_COMMENT'].str.startswith('t')) & (orders['O_COMMENT'] == 'w') & (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_CUSTKEY'] > 121929) | (orders['SHIPPRIORITY'] <= 0)][['O_COMMENT', 'ORDERDATE', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK']]

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '3-MEDIUM'])) | (orders['O_COMMENT'].str.startswith('o')) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'].str.startswith('i'))].merge(customer[(customer['C_ADDRESS'] == 'c') | (customer['C_NATIONKEY'] == 15)][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['O_ORDERKEY'] < 110) & (orders['O_CUSTKEY'] <= 112104) & (orders['O_COMMENT'] == 'b') | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] >= 293821.68492435396) & (orders['TOTALPRICE'] < 278041.84564926004)][['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']]

orders[(orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'] == ' re') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_ORDERKEY'] < 288) | (orders['O_COMMENT'] == 'j') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] <= '1998-07-21')][['SHIPPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] < 179) & (orders['O_ORDERKEY'] != 443) | (orders['TOTALPRICE'] < 133095.3723022712) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] != 68590)][['O_COMMENT', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O')][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith('the')) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) | (orders['O_ORDERKEY'] >= 560)].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'c')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['ORDERSTATUS'] != 'O')].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD']))][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'w') & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_COMMENT'].str.startswith('uri')) | (orders['O_ORDERKEY'] == 577) | (orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] < 219249.3119170802)][['ORDERSTATUS', 'O_COMMENT']].groupby(by=['ORDERSTATUS', 'O_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith(' ')) & (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] <= 202248.8316342016) | (orders['O_CUSTKEY'] >= 75200) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] >= 155) & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_NATIONKEY'] < 4) | (customer['C_ADDRESS'].str.startswith('c'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 83927) & (orders['O_COMMENT'] == 'd') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'] != '1-URGENT')].merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_CUSTKEY'] != 83) & (customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 108393) | (orders['O_COMMENT'] == 't')][['O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERDATE']].groupby(by=['CLERK', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 88152) | (orders['ORDERSTATUS'].isin(['F', 'O'])) | (orders['O_COMMENT'] != ' ') & (orders['O_ORDERKEY'] < 203) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] > 29627.167383728884) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) | (orders['ORDERDATE'] < '1992-01-13')][['ORDERSTATUS']].groupby(by=['ORDERSTATUS']).agg('count')

orders[(orders['O_CUSTKEY'] > 141343) | (orders['O_CUSTKEY'] > 60425) & (orders['TOTALPRICE'] != 223386.19489896737) & (orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'] == 'P')].merge(customer[['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 396) | (orders['O_CUSTKEY'] == 12691) & (orders['TOTALPRICE'] != 133357.10526531894) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] == 0)][['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 182) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'].str.startswith('e')) & (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']]

orders[(orders['O_ORDERKEY'] == 116) | (orders['O_CUSTKEY'] >= 101232) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] < 413) | (orders['O_CUSTKEY'] >= 137408) & (orders['O_CUSTKEY'] <= 102109) & (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] < 50466)][['SHIPPRIORITY']].groupby(by=['SHIPPRIORITY']).agg('count')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] >= 131360) | (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('ly ')) & (orders['ORDERSTATUS'] == 'F') | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] > 146113) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] > 144296)][['O_ORDERKEY']].groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] < 162112.9712077257) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'].str.startswith('n')) & (orders['O_COMMENT'].str.startswith('o')) | (orders['SHIPPRIORITY'] == 0)].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 52679.34941012607) | (orders['O_ORDERKEY'] != 669) | (orders['O_CUSTKEY'] >= 92066) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1998-07-21') | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '2-HIGH'])) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'] == 'P')][['ORDERDATE']].groupby(by=['ORDERDATE']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 64278.655959257085) & (orders['O_ORDERKEY'] != 742) & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM'])) | (orders['ORDERSTATUS'] != 'P') & (orders['O_ORDERKEY'] > 741) | (orders['O_COMMENT'] == 'i')][['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK']].groupby(by=['O_ORDERKEY']).agg('count')

orders[(orders['TOTALPRICE'] <= 299272.6043368364)][['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 320825.03150834196) & (orders['O_COMMENT'] == 'w') | (orders['O_COMMENT'].str.startswith('l')) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 58077.12782737213) | (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('f')) | (orders['TOTALPRICE'] < 261216.32834248868) | (orders['TOTALPRICE'] <= 217917.71464291294) | (orders['TOTALPRICE'] <= 66659.35334023557) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] <= 139925) & (orders['SHIPPRIORITY'] > 0)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']]

orders[(orders['TOTALPRICE'] >= 79913.65164163578) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] != 'l')].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('sum', numeric_only=True)

part[(part['BRAND'] != 'Brand#42') & (part['CONTAINER'].str.startswith('WRAP')) & (part['TYPE'] == 'SMA') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['CONTAINER'].str.startswith('SM'))][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']]

part[(part['BRAND'] != 'Brand#52') & (part['TYPE'] != 'P') & (part['P_NAME'] != 'o') | (part['TYPE'] == 'SMA') | (part['TYPE'] != 'E') & (part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] >= 998.270610845682)][['P_NAME', 'CONTAINER', 'TYPE']].groupby(by=['P_NAME']).agg('min', numeric_only=True)

part[(part['BRAND'].isin(['Brand#33', 'Brand#54', 'Brand#15', 'Brand#34', 'Brand#44', 'Brand#23', 'Brand#11', 'Brand#53', 'Brand#22', 'Brand#41', 'Brand#25', 'Brand#14', 'Brand#32', 'Brand#51', 'Brand#31', 'Brand#43', 'Brand#35', 'Brand#55', 'Brand#45', 'Brand#24', 'Brand#21'])) | (part['P_PARTKEY'] > 37) & (part['PT_COMMENT'].str.startswith('a')) & (part['CONTAINER'].str.startswith('SM')) & (part['BRAND'].isin(['Brand#14', 'Brand#54', 'Brand#22', 'Brand#53', 'Brand#32']))][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['BRAND'].isin(['Brand#41', 'Brand#24', 'Brand#32', 'Brand#55', 'Brand#23', 'Brand#25', 'Brand#22', 'Brand#12', 'Brand#43', 'Brand#42', 'Brand#15', 'Brand#21', 'Brand#45', 'Brand#53', 'Brand#52', 'Brand#33', 'Brand#11', 'Brand#54'])) & (part['RETAILPRICE'] >= 950.0723466222013) & (part['MFGR'].isin(['Manufacturer#5'])) | (part['TYPE'] != 'L') & (part['TYPE'].str.startswith('L'))][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['CONTAINER'] != 'JUMBO') | (part['SIZE'] <= 34) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#4'])) & (part['TYPE'].str.startswith('M')) & (part['SIZE'] != 25) & (part['P_NAME'] == 'bis') | (part['TYPE'] == 'SMA') & (part['BRAND'] == 'Brand#12')].groupby(by=['P_NAME', 'TYPE', 'SIZE', 'CONTAINER', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] != 'Brand#23') | (part['PT_COMMENT'] == 'x') & (part['TYPE'] == 'E') & (part['CONTAINER'].str.startswith('MED')) | (part['SIZE'] >= 5) & (part['TYPE'] != 'E') & (part['PT_COMMENT'] == ' ')][['P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR', 'PT_COMMENT', 'TYPE']]

part[(part['MFGR'] == 'Manufacturer#4') | (part['TYPE'] == 'S') & (part['PT_COMMENT'] != ' ')][['P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'P_PARTKEY', 'MFGR']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) | (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] > 918.7277940381736) & (part['P_NAME'].str.startswith('cor')) | (part['CONTAINER'] == 'WRAP') | (part['BRAND'] != 'Brand#45') | (part['P_NAME'] == 't') | (part['RETAILPRICE'] < 917.8344431720641) & (part['MFGR'] == 'Manufacturer#3')].groupby(by=['SIZE', 'PT_COMMENT', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['P_NAME'] != 's') | (part['TYPE'].str.startswith('P')) | (part['PT_COMMENT'].str.startswith('r')) | (part['SIZE'] < 21) & (part['P_PARTKEY'] != 81) | (part['P_PARTKEY'] <= 121)][['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[(part['P_NAME'] == 'g') | (part['P_PARTKEY'] < 71) & (part['RETAILPRICE'] <= 1029.136501390466) & (part['BRAND'].isin(['Brand#11', 'Brand#14', 'Brand#23', 'Brand#25', 'Brand#54', 'Brand#51', 'Brand#35', 'Brand#24', 'Brand#15', 'Brand#32', 'Brand#45', 'Brand#33'])) & (part['RETAILPRICE'] == 1074.9876207627062) | (part['SIZE'] < 13) & (part['MFGR'] == 'Manufacturer#5') & (part['RETAILPRICE'] < 1049.1552445413513)][['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'MFGR', 'SIZE', 'P_PARTKEY']]

part[(part['P_NAME'].str.startswith('f')) & (part['RETAILPRICE'] < 932.0340965281001) & (part['TYPE'] == 'E')][['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']].groupby(by=['CONTAINER', 'MFGR']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] < 16) & (part['PT_COMMENT'].str.startswith('h')) | (part['P_PARTKEY'] >= 83) | (part['P_PARTKEY'] > 99) | (part['P_NAME'].str.startswith('n')) & (part['TYPE'] != 'SMA')][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'SIZE']].groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] <= 132) & (part['MFGR'] != 'Manufacturer#3') | (part['BRAND'] != 'Brand#42') | (part['CONTAINER'] != 'WRAP') & (part['P_PARTKEY'] >= 104) | (part['MFGR'] != 'Manufacturer#3') & (part['P_NAME'] != 'r') & (part['TYPE'] != 'P')].groupby(by=['TYPE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 17) & (part['CONTAINER'] != 'SM') & (part['BRAND'].isin(['Brand#22', 'Brand#33', 'Brand#53', 'Brand#13', 'Brand#52', 'Brand#41', 'Brand#35', 'Brand#12', 'Brand#23', 'Brand#45', 'Brand#15', 'Brand#43', 'Brand#34', 'Brand#32', 'Brand#55', 'Brand#21', 'Brand#31', 'Brand#11', 'Brand#14', 'Brand#25', 'Brand#42', 'Brand#24'])) | (part['RETAILPRICE'] != 1003.0693159607997) & (part['RETAILPRICE'] != 988.0669561754154) & (part['MFGR'] != 'Manufacturer#2') & (part['SIZE'] >= 28) | (part['CONTAINER'] == 'SM') | (part['BRAND'] == 'Brand#33')][['MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND', 'P_PARTKEY']]

part[(part['P_PARTKEY'] >= 36) & (part['TYPE'].str.startswith('M')) & (part['P_PARTKEY'] > 23) & (part['P_NAME'].str.startswith('o')) & (part['BRAND'] != 'Brand#52') & (part['RETAILPRICE'] <= 916.8634464729299) & (part['P_NAME'].str.startswith('cor')) & (part['TYPE'] == 'S') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5']))][['MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND', 'SIZE']]

part[(part['SIZE'] < 44) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_NAME'].str.startswith('l')) | (part['P_PARTKEY'] == 182) | (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'].str.startswith('MED')) & (part['MFGR'] == 'Manufacturer#3') & (part['MFGR'] == 'Manufacturer#3') | (part['CONTAINER'] == 'SM')].groupby(by=['MFGR', 'PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['SIZE'] > 35) & (part['P_NAME'] != 'v') & (part['TYPE'].str.startswith('SMA')) | (part['P_PARTKEY'] < 77)][['CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['SIZE'] > 41) & (part['TYPE'].str.startswith('M')) | (part['RETAILPRICE'] > 905.3505106307875) | (part['BRAND'].isin(['Brand#21', 'Brand#55', 'Brand#31', 'Brand#45', 'Brand#51', 'Brand#43', 'Brand#24', 'Brand#14', 'Brand#13', 'Brand#23', 'Brand#11'])) | (part['TYPE'] == 'STA') | (part['P_PARTKEY'] == 20) | (part['PT_COMMENT'] == 'ss ') & (part['P_PARTKEY'] <= 29) | (part['P_PARTKEY'] == 52)][['CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

part[(part['SIZE'] >= 9) & (part['BRAND'].isin(['Brand#54', 'Brand#52', 'Brand#53', 'Brand#22', 'Brand#11', 'Brand#13', 'Brand#33', 'Brand#23', 'Brand#21', 'Brand#35', 'Brand#44', 'Brand#45', 'Brand#31', 'Brand#42', 'Brand#43', 'Brand#51', 'Brand#14', 'Brand#41', 'Brand#32', 'Brand#15', 'Brand#25', 'Brand#55', 'Brand#34'])) | (part['CONTAINER'] == 'LG') & (part['CONTAINER'].str.startswith('SM')) & (part['CONTAINER'] != 'JUMBO') | (part['TYPE'] == 'S')][['P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']]

part[(part['TYPE'].str.startswith('S')) | (part['BRAND'] == 'Brand#45') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) | (part['SIZE'] > 45) | (part['CONTAINER'].str.startswith('LG')) & (part['PT_COMMENT'] != 'kag')][['CONTAINER', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']]

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE']).agg('count')

part[['BRAND', 'RETAILPRICE', 'SIZE', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME']].groupby(by=['TYPE', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[['CONTAINER', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['SIZE', 'TYPE', 'BRAND', 'PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME']].groupby(by=['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'TYPE']).agg('max', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['SIZE', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'BRAND']).agg('count')

part[['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'TYPE', 'BRAND', 'PT_COMMENT']].groupby(by=['CONTAINER', 'MFGR', 'P_NAME', 'BRAND', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'TYPE', 'MFGR', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['PT_COMMENT', 'P_NAME', 'TYPE', 'RETAILPRICE', 'SIZE']).agg('max', numeric_only=True)

part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']].groupby(by=['TYPE', 'MFGR', 'SIZE', 'P_PARTKEY']).agg('count')

partsupp.merge(part[(part['BRAND'] != 'Brand#43') | (part['TYPE'] == 'P') | (part['BRAND'].isin(['Brand#21', 'Brand#11', 'Brand#42'])) | (part['CONTAINER'] != 'MED') & (part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] < 30)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#35') & (part['SIZE'] < 8) & (part['MFGR'] != 'Manufacturer#2') | (part['P_PARTKEY'] < 10) & (part['SIZE'] != 2) | (part['BRAND'] == 'Brand#54') & (part['TYPE'] != 'E') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#53') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2'])) & (part['RETAILPRICE'] < 942.5998007728471) & (part['SIZE'] == 47) | (part['MFGR'] == 'Manufacturer#5') & (part['RETAILPRICE'] != 1094.3812900195903) & (part['CONTAINER'] != 'SM') & (part['PT_COMMENT'] != 'q')][['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['CONTAINER'] == 'JUMBO') | (part['MFGR'] != 'Manufacturer#1') & (part['MFGR'] == 'Manufacturer#3') & (part['P_PARTKEY'] != 28) | (part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] > 20)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'MFGR', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['RETAILPRICE'] < 922.4558963881551) | (part['P_PARTKEY'] < 144) | (part['PT_COMMENT'].str.startswith(' fi')) & (part['P_PARTKEY'] < 24) | (part['P_PARTKEY'] <= 33) | (part['BRAND'] == 'Brand#35') | (part['BRAND'] != 'Brand#44')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'].str.startswith(' ')) & (part['CONTAINER'] == 'MED') | (part['PT_COMMENT'] == 'd') & (part['MFGR'] == 'Manufacturer#5') | (part['CONTAINER'] == 'WRAP') & (part['RETAILPRICE'] < 912.8239717673177)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] < 187) & (part['CONTAINER'] != 'SM') & (part['TYPE'] == 'S') & (part['P_PARTKEY'] >= 43) | (part['BRAND'].isin(['Brand#25', 'Brand#14', 'Brand#51', 'Brand#22', 'Brand#23', 'Brand#55', 'Brand#52', 'Brand#24', 'Brand#15', 'Brand#44', 'Brand#12', 'Brand#11', 'Brand#41', 'Brand#31', 'Brand#33', 'Brand#35', 'Brand#32', 'Brand#42'])) & (part['MFGR'] != 'Manufacturer#5') & (part['PT_COMMENT'] == 'd') & (part['PT_COMMENT'] != 'l') & (part['PT_COMMENT'] != 'k')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('count')

partsupp.merge(part[(part['RETAILPRICE'] > 1032.2383615784772) | (part['P_PARTKEY'] <= 189) | (part['BRAND'] != 'Brand#34') & (part['P_PARTKEY'] > 171) | (part['PT_COMMENT'].str.startswith('n')) | (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'] != 'a') & (part['BRAND'].isin(['Brand#22', 'Brand#53', 'Brand#13', 'Brand#21', 'Brand#51', 'Brand#11', 'Brand#15', 'Brand#44', 'Brand#31', 'Brand#42', 'Brand#34', 'Brand#35', 'Brand#23', 'Brand#12', 'Brand#43', 'Brand#14', 'Brand#55', 'Brand#33', 'Brand#52', 'Brand#41']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['TYPE'].str.startswith('SMA')) | (part['PT_COMMENT'] != 'n') | (part['TYPE'] != 'E') | (part['RETAILPRICE'] == 930.7882202002131) | (part['RETAILPRICE'] != 1059.8224551751864)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'TYPE', 'CONTAINER', 'BRAND']).agg('min', numeric_only=True)

partsupp.merge(part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR']).agg('count')

partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('count')

partsupp.merge(part[['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'TYPE', 'P_NAME']).agg('count')

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] == '9') | (supplier['S_SUPPKEY'] != 42) & (supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_ACCTBAL'] < -940.6229416598054)][['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_SUPPKEY'] >= 59) & (supplier['S_NATIONKEY'] == 8)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 2808) | (partsupp['AVAILQTY'] > 1590) & (partsupp['PS_PARTKEY'] != 8) & (partsupp['PS_PARTKEY'] != 42)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].groupby(by=['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 3075) | (partsupp['PS_SUPPKEY'] < 5270) | (partsupp['PS_SUPPKEY'] != 387) & (partsupp['PS_SUPPKEY'] < 4813) & (partsupp['PS_PARTKEY'] > 38)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].groupby(by=['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8240) | (partsupp['PS_PARTKEY'] == 24)].merge(part[(part['P_PARTKEY'] >= 130)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'TYPE']).agg('count')

partsupp[(partsupp['AVAILQTY'] <= 1286) & (partsupp['AVAILQTY'] <= 7591)].merge(supplier.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 1803) & (partsupp['SUPPLYCOST'] != 705.1048421169212) | (partsupp['SUPPLYCOST'] <= 815.0361542114667) & (partsupp['AVAILQTY'] <= 7872) & (partsupp['P_COMMENT'] != 'x')].merge(part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 1437) | (partsupp['SUPPLYCOST'] == 705.8918987471058)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('R')) | (supplier['S_SUPPKEY'] >= 24) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] > 1890.7299842654627)][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 35) & (partsupp['P_COMMENT'] != 'r') | (partsupp['PS_PARTKEY'] >= 18) | (partsupp['PS_PARTKEY'] >= 3) & (partsupp['P_COMMENT'] != 'y')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].groupby(by=['P_COMMENT', 'PS_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 30) & (partsupp['AVAILQTY'] <= 8074) | (partsupp['SUPPLYCOST'] == 294.4754000067126)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 47) | (partsupp['SUPPLYCOST'] == 433.78929336437585) | (partsupp['PS_SUPPKEY'] != 6445) | (partsupp['SUPPLYCOST'] != 152.30024006937674) & (partsupp['P_COMMENT'].str.startswith('d'))].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 13) & (partsupp['PS_PARTKEY'] == 32) & (partsupp['SUPPLYCOST'] != 310.04037910497664)].merge(part[(part['TYPE'] == 'SMA') & (part['SIZE'] != 4) | (part['RETAILPRICE'] >= 941.2473910416109)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 3229) & (partsupp['PS_SUPPKEY'] < 1375) & (partsupp['PS_SUPPKEY'] == 1365)].merge(part[['MFGR', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1770) | (partsupp['P_COMMENT'] != 't') | (partsupp['P_COMMENT'] == 'o')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2961) & (partsupp['PS_SUPPKEY'] <= 2495) | (partsupp['PS_PARTKEY'] != 17)].merge(part[['BRAND', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 38)].merge(supplier[(supplier['S_NATIONKEY'] <= 12) & (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2029) & (partsupp['AVAILQTY'] > 4664)].merge(part[(part['PT_COMMENT'] == 'ly ') | (part['CONTAINER'] == 'WRAP')][['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 1715)].merge(part[(part['TYPE'] != 'P') & (part['PT_COMMENT'] == 'f') | (part['PT_COMMENT'] != ' fi')][['TYPE', 'P_PARTKEY', 'CONTAINER', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 2113) & (partsupp['AVAILQTY'] >= 8916) & (partsupp['P_COMMENT'] == 'n') | (partsupp['SUPPLYCOST'] <= 357.43281994354487) & (partsupp['SUPPLYCOST'] != 821.856367998354)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ';') | (partsupp['PS_SUPPKEY'] <= 2511) & (partsupp['P_COMMENT'] == 'bli') & (partsupp['PS_PARTKEY'] == 41) | (partsupp['SUPPLYCOST'] >= 436.63893033559145)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'n') & (partsupp['PS_SUPPKEY'] < 4256) & (partsupp['AVAILQTY'] <= 6187) & (partsupp['AVAILQTY'] >= 8415)].merge(part[['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['AVAILQTY'] >= 289) | (partsupp['SUPPLYCOST'] == 59.61317500607577) & (partsupp['PS_PARTKEY'] <= 24) & (partsupp['PS_SUPPKEY'] <= 5773)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'o') & (partsupp['SUPPLYCOST'] == 714.8753931094516) & (partsupp['SUPPLYCOST'] >= 852.1415549239294)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['MFGR'] == 'Manufacturer#2') | (part['PT_COMMENT'] == 'h') | (part['PT_COMMENT'].str.startswith('b'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['PS_SUPPKEY'] != 854)].merge(part[(part['RETAILPRICE'] == 1075.9236141141107) & (part['P_PARTKEY'] <= 47) & (part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'].str.startswith('bis')) | (part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] >= 23) | (part['BRAND'].isin(['Brand#43', 'Brand#31', 'Brand#51', 'Brand#44', 'Brand#34', 'Brand#21', 'Brand#54', 'Brand#12', 'Brand#23', 'Brand#42', 'Brand#15', 'Brand#14', 'Brand#11', 'Brand#24', 'Brand#25', 'Brand#13', 'Brand#52'])) & (part['CONTAINER'] != 'MED') & (part['PT_COMMENT'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['P_COMMENT'].str.startswith('d'))].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('the'))].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] == 'O') | (supplier['S_ADDRESS'] == '3') & (supplier['S_ADDRESS'] != 'P') | (supplier['S_ACCTBAL'] > 6577.021159973693) & (supplier['S_NATIONKEY'] > 2)][['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['AVAILQTY'] <= 127) & (partsupp['PS_SUPPKEY'] < 6102)].merge(supplier[(supplier['S_ADDRESS'] == 'Q') | (supplier['S_NATIONKEY'] <= 7)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 668.7929238141836) & (partsupp['SUPPLYCOST'] != 28.078309756276056) | (partsupp['AVAILQTY'] >= 1341)].merge(part[(part['TYPE'] != 'SMA') & (part['PT_COMMENT'] == 'g') | (part['SIZE'] != 5) & (part['CONTAINER'] == 'LG') & (part['BRAND'] == 'Brand#11') & (part['RETAILPRICE'] < 1068.883089542552) | (part['BRAND'] != 'Brand#52') & (part['BRAND'].isin(['Brand#25', 'Brand#55', 'Brand#22', 'Brand#24', 'Brand#42', 'Brand#21', 'Brand#51', 'Brand#52', 'Brand#45']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 917.9219779834175) | (partsupp['AVAILQTY'] > 2595) & (partsupp['PS_PARTKEY'] < 30) & (partsupp['AVAILQTY'] < 4399)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'MFGR']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 517.028712115017) & (partsupp['AVAILQTY'] > 3957) | (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_SUPPKEY'] < 2127)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE', 'P_NAME', 'BRAND', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 587.9200775571526) | (partsupp['PS_SUPPKEY'] <= 6482) & (partsupp['PS_PARTKEY'] != 14)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].groupby(by=['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE', 'SIZE']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['SIZE'] != 13) & (part['P_PARTKEY'] <= 73) | (part['P_PARTKEY'] < 180) & (part['RETAILPRICE'] < 1074.206761348969) & (part['BRAND'] == 'Brand#52') | (part['P_NAME'] == 'blu') & (part['MFGR'] == 'Manufacturer#5')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'x') | (supplier['S_ACCTBAL'] == 640.8142533648813) & (supplier['S_PHONE'] != '26-')][['S_SUPPKEY', 'S_ADDRESS', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 10) | (supplier['S_NATIONKEY'] <= 20)][['S_SUPPKEY', 'S_NAME', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] < 168) & (part['TYPE'] == 'L') | (part['TYPE'] != 'SMA') | (part['TYPE'] == 'E') & (part['TYPE'] != 'P') | (part['SIZE'] != 12) | (part['TYPE'].str.startswith('S'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] > 9) | (part['P_PARTKEY'] != 58)][['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['SIZE'] <= 35) | (part['RETAILPRICE'] == 968.9055501782815) | (part['SIZE'] <= 20) & (part['PT_COMMENT'] == 'y') | (part['RETAILPRICE'] != 934.3623354434665) & (part['BRAND'] != 'Brand#54')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'MFGR', 'SIZE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('8'))][['S_COMMENT', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE', 'CONTAINER', 'RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g') | (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('c'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] != 15) | (nation['N_REGIONKEY'] < 0) & (nation['N_NAME'] != 'M')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] <= 10) & (nation['N_COMMENT'] == 'v')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NATIONKEY'] >= 17) | (nation['N_COMMENT'].str.startswith('a'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] < 10) | (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 13) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'I')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_NATIONKEY'] > 9) & (nation['N_NAME'] == 'M') & (nation['N_COMMENT'] == 'y') & (nation['N_NAME'] == 'F')].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] >= 19)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] == 'R') | (nation['N_COMMENT'] == 'e') & (nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 6733.972189586963) | (supplier['S_COMMENT'] != 'x') | (supplier['S_ADDRESS'] != 'z') & (supplier['S_NATIONKEY'] < 9) | (supplier['S_ACCTBAL'] == 8942.353110213464) & (supplier['S_COMMENT'] != 'c') | (supplier['S_COMMENT'] == 'y')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 8261.953916623565) | (supplier['S_NATIONKEY'] < 18) | (supplier['S_COMMENT'].str.startswith('y'))].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > -641.6292793792682) | (supplier['S_NATIONKEY'] <= 5) & (supplier['S_NATIONKEY'] != 12)].merge(nation[(nation['N_NAME'] == 'F')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] >= 8522.322612606125) & (supplier['S_ADDRESS'].str.startswith('S')) & (supplier['S_SUPPKEY'] > 101) | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NATIONKEY'] >= 8)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'd') & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('N')) | (supplier['S_ADDRESS'] != 'H') | (supplier['S_SUPPKEY'] <= 37) | (supplier['S_ACCTBAL'] >= 6318.985377699128) | (supplier['S_ADDRESS'] == '7')].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] > 20)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'N') | (supplier['S_ACCTBAL'] > 253.72113591112588) | (supplier['S_ADDRESS'].str.startswith('Z')) | (supplier['S_ACCTBAL'] == 9204.955962616557) | (supplier['S_ADDRESS'].str.startswith('W')) | (supplier['S_SUPPKEY'] != 44)].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'V') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 152) | (supplier['S_SUPPKEY'] > 41) | (supplier['S_SUPPKEY'] >= 23) | (supplier['S_ACCTBAL'] < 660.7320109583627)][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_COMMENT'] == 'the')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('Q'))].merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_NATIONKEY'] >= 21) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'M')].merge(nation.merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'k') | (supplier['S_SUPPKEY'] <= 14) & (supplier['S_PHONE'] == '2')][['S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_NATIONKEY'] > 9) | (supplier['S_SUPPKEY'] == 63) | (supplier['S_SUPPKEY'] > 161) & (supplier['S_COMMENT'].str.startswith('k'))].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('n')) | (supplier['S_SUPPKEY'] <= 103) | (supplier['S_COMMENT'] != '.')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != 8071.153345475327) & (supplier['S_NATIONKEY'] != 21)].merge(nation[(nation['N_NAME'] != 'F')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'o') & (supplier['S_ADDRESS'] != 'S') & (supplier['S_ACCTBAL'] > 9187.364134035259) | (supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 8) & (supplier['S_NATIONKEY'] <= 21) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] <= 17) | (supplier['S_NATIONKEY'] >= 3) & (supplier['S_SUPPKEY'] != 199)][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME']].groupby(by=['S_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 17) | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 38) & (supplier['S_NATIONKEY'] <= 2) & (supplier['S_NATIONKEY'] != 16)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']].groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 5) | (supplier['S_ACCTBAL'] > 6200.576422081822) | (supplier['S_SUPPKEY'] >= 195) | (supplier['S_COMMENT'].str.startswith('bli'))][['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 8) | (supplier['S_ADDRESS'] == 'p')].merge(nation[(nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] >= 4) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'].str.startswith('G')) & (nation['N_NATIONKEY'] > 16)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] <= 3236.2218048474915) | (supplier['S_ACCTBAL'] == 2398.282362799431) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] > 136)].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] > 20) | (nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_SUPPKEY'] == 57) | (supplier['S_NATIONKEY'] > 13)].merge(nation[(nation['N_NAME'].str.startswith('J'))].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] != 1) & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_NATIONKEY'] < 14) & (supplier['S_SUPPKEY'] != 163) | (supplier['S_NATIONKEY'] != 11) | (supplier['S_ACCTBAL'] > 5131.408128300822) & (supplier['S_ADDRESS'].str.startswith('o')) | (supplier['S_NATIONKEY'] > 1)][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']]

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NATIONKEY'] == 23) | (supplier['S_NATIONKEY'] >= 19)].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] > 10) | (nation['N_NATIONKEY'] >= 2)].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('3')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith(',')) & (supplier['S_ADDRESS'] == 'y') & (supplier['S_ADDRESS'] == 'P') & (supplier['S_SUPPKEY'] != 178) | (supplier['S_NATIONKEY'] == 17)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 93)].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 142) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'x') & (supplier['S_NATIONKEY'] > 22) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 89)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 113) & (supplier['S_PHONE'] == '2') & (supplier['S_NATIONKEY'] < 21) | (supplier['S_PHONE'] == '3') & (supplier['S_PHONE'] == '1') | (supplier['S_ACCTBAL'] == 4381.119524372936) | (supplier['S_ACCTBAL'] < 6681.006550898645)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']]

supplier[(supplier['S_SUPPKEY'] == 176) & (supplier['S_PHONE'] != '28-')][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] <= 19)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 11) & (nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] > 4)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] >= 15) & (nation['N_NATIONKEY'] <= 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('C'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] < 3) & (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 2)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 15)].merge(region[(region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation.merge(region[(region['R_NAME'] != 'M')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 8)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'n') | (nation['N_NATIONKEY'] == 16)].merge(region[(region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] != 'u')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_NATIONKEY'] < 11) | (nation['N_NATIONKEY'] != 10) | (nation['N_NATIONKEY'] == 21)].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'E') | (nation['N_COMMENT'].str.startswith(' '))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 9424.982044309681) | (customer['C_PHONE'] != '3')][['C_NATIONKEY', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 3962.6456890830923) & (customer['C_ACCTBAL'] <= 9237.379344440516) & (customer['C_COMMENT'].str.startswith('t')) & (customer['C_NAME'] == 'C')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 4246.5448944011905) & (customer['C_NATIONKEY'] > 12) | (customer['C_PHONE'].str.startswith('2')) & (customer['C_PHONE'].str.startswith('2'))][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'MKTSEGMENT']].groupby(by=['MKTSEGMENT', 'C_NAME', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 5412.671422623186) | (customer['C_ACCTBAL'] <= 9975.302075948095) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 12) | (customer['C_ACCTBAL'] <= 6907.27661147202) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] == 'd') & (customer['C_CUSTKEY'] != 64)][['C_NATIONKEY', 'C_NAME']].groupby(by=['C_NAME', 'C_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 3761.290784560322) & (customer['C_ADDRESS'] == 'H') & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_ACCTBAL'] < 1005.079554692179)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_ADDRESS'] != 'T') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 4520.7467044284185) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_ADDRESS'] != 'o') & (customer['C_NATIONKEY'] != 3) & (customer['C_CUSTKEY'] != 4) | (customer['C_COMMENT'].str.startswith('.'))][['C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'H') & (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] <= 60)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'U') & (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] > 17) | (customer['C_ACCTBAL'] >= 9974.270869245174) | (customer['C_COMMENT'] != 'g') | (customer['C_COMMENT'] == 'o')][['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('count')

customer[(customer['C_ADDRESS'] == 'g') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_CUSTKEY'] == 69) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 7512.693299698925) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD']))][['C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 's') & (customer['C_ADDRESS'] != '4') & (customer['C_CUSTKEY'] >= 9) & (customer['C_COMMENT'].str.startswith('.')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'n') | (customer['C_COMMENT'].str.startswith('d'))][['C_PHONE', 'C_NAME']].groupby(by=['C_NAME', 'C_PHONE']).agg('count')

customer[(customer['C_ADDRESS'] == 'v') | (customer['C_NATIONKEY'] > 13) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE', 'BUILDING'])) & (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] < 8187.532220440973) & (customer['C_COMMENT'] != ' ') & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_NATIONKEY'] <= 7)][['MKTSEGMENT', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('4')) | (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_COMMENT'].str.startswith('o')) & (customer['C_ACCTBAL'] == 3313.53746975785)][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']].groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('b')) | (customer['C_NATIONKEY'] == 5) & (customer['C_ADDRESS'].str.startswith('l')) | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '3') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == '7') | (customer['C_CUSTKEY'] != 76)][['C_PHONE', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 50) | (customer['C_ADDRESS'] != '4') & (customer['C_ACCTBAL'] != 6718.982512573306) & (customer['C_CUSTKEY'] != 55) & (customer['C_COMMENT'] != 'y') | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 23)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 85) & (customer['C_CUSTKEY'] >= 16) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 93) | (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] >= 38) & (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation[(nation['N_NATIONKEY'] == 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 80) & (customer['C_COMMENT'] == 'q') & (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_COMMENT'] != 'o')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'] == 'R')].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C')][['C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] <= 3823.7303673203223) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_ACCTBAL'] == 6936.414510311328) | (customer['C_ACCTBAL'] >= 6660.191128085793) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('e'))][['C_NAME', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_COMMENT', 'C_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 19) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] < 2) | (customer['C_CUSTKEY'] == 96) & (customer['C_PHONE'].str.startswith('1'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] >= 20) & (customer['C_CUSTKEY'] > 59) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] != 10) | (nation['N_NAME'] == 'P')].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] < 2) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 76)][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['C_ADDRESS'] == 'q') | (customer['C_CUSTKEY'] >= 26) | (customer['C_PHONE'] != '2') & (customer['C_ADDRESS'] != 'J')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE']))][['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'] != 'E')].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] != 's') | (customer['C_COMMENT'] != 'e') & (customer['C_ACCTBAL'] >= 5884.66267926356) | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] > 9839.42880274737) & (customer['C_NATIONKEY'] != 15) & (customer['C_CUSTKEY'] <= 2)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_COMMENT'] == 's')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']).agg('max', numeric_only=True)

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] != 17)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] >= 7)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

customer[['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_REGIONKEY'] >= 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] == 1) & (region['R_NAME'] == 'A') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'e')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] == '1998-07-21') & (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'b')][['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] <= 734) | (orders['O_ORDERKEY'] < 395)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 675) & (partsupp['AVAILQTY'] >= 8709) & (partsupp['PS_PARTKEY'] < 40)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 6303) & (partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['SUPPLYCOST'] > 211.0233384726698)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] > 7803) | (partsupp['PS_SUPPKEY'] <= 3063) | (partsupp['SUPPLYCOST'] == 886.2928694627631)].merge(part[['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 3846) | (partsupp['P_COMMENT'] != 'd') & (partsupp['P_COMMENT'].str.startswith(' th'))].merge(part[(part['MFGR'] != 'Manufacturer#3') | (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] == 'Brand#22')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 29) | (partsupp['SUPPLYCOST'] != 273.9472395858488) & (partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['PS_SUPPKEY'] != 2185) | (partsupp['PS_PARTKEY'] > 4)].merge(part[(part['P_NAME'] != 'w') & (part['TYPE'] == 'L') | (part['BRAND'] == 'Brand#34') | (part['BRAND'] == 'Brand#11') | (part['TYPE'] == 'P')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 18) & (partsupp['SUPPLYCOST'] == 974.0618488080814) | (partsupp['SUPPLYCOST'] == 610.3149580135781)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 839)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != ' ') | (partsupp['P_COMMENT'] == 'ly ') | (partsupp['P_COMMENT'].str.startswith('ly ')) | (partsupp['PS_PARTKEY'] > 14) & (partsupp['SUPPLYCOST'] != 343.0189473100018)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'p') | (partsupp['PS_PARTKEY'] > 36) & (partsupp['AVAILQTY'] != 495) | (partsupp['AVAILQTY'] > 2002)].merge(part[['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 656.2306248554141)].merge(supplier[(supplier['S_NATIONKEY'] < 0) | (supplier['S_PHONE'] != '14-') | (supplier['S_PHONE'] != '1') & (supplier['S_ACCTBAL'] >= 3403.2442625991443)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPMODE'].isin(['REG AIR', 'SHIP', 'FOB', 'TRUCK', 'RAIL', 'AIR', 'MAIL'])) & (lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['DISCOUNT'] == 0.0853957778557025) & (lineitem['QUANTITY'] == 26) | (lineitem['L_SUPPKEY'] < 4527) & (lineitem['SHIPMODE'].isin(['RAIL', 'FOB', 'MAIL'])) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['EXTENDEDPRICE'] != 46032.75446259621)].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 50608.77781549671) | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['DISCOUNT'] == 0.09254616174433314) | (lineitem['QUANTITY'] <= 14) | (lineitem['TAX'] < 0.02357172982390951) & (lineitem['TAX'] >= 0.03057345822921804) & (lineitem['LINENUMBER'] <= 6) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['TAX'] >= 0.05316299040430231)][['EXTENDEDPRICE']].groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 13964.30351630755)].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 6)][['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 20233.588762992014) | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['DISCOUNT'] != 0.018830130261494073) & (lineitem['TAX'] <= 0.05576573910766475) & (lineitem['QUANTITY'] >= 9) | (lineitem['L_COMMENT'].str.startswith('n')) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['LINENUMBER'] > 1) | (lineitem['DISCOUNT'] >= 0.06256471985457245)].groupby(by=['DISCOUNT', 'RETURNFLAG', 'LINESTATUS', 'QUANTITY', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 6) | (lineitem['SHIPMODE'].isin(['SHIP', 'FOB', 'AIR', 'RAIL', 'TRUCK']))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'SIZE', 'BRAND', 'P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['L_COMMENT'] == '-') & (lineitem['L_SUPPKEY'] != 6664) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['DISCOUNT'] >= 0.03074432417769124)][['DISCOUNT', 'SHIPMODE', 'SHIPINSTRUCT', 'TAX', 'LINENUMBER']].groupby(by=['SHIPINSTRUCT', 'DISCOUNT']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('t')) & (lineitem['L_COMMENT'] == 'h') & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPDATE'] < '1992-04-27')][['EXTENDEDPRICE', 'DISCOUNT', 'SHIPMODE', 'L_COMMENT', 'QUANTITY', 'L_SUPPKEY', 'RETURNFLAG']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] >= 119090) | (lineitem['LINENUMBER'] <= 4) & (lineitem['L_SUPPKEY'] != 3414)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'BRAND', 'TYPE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] >= 80368) & (lineitem['TAX'] != 0.0731104947507972) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['SHIPMODE'] != 'FOB') & (lineitem['L_SUPPKEY'] < 2147) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['LINENUMBER'] > 4) & (lineitem['L_SUPPKEY'] <= 9618) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')][['SHIPDATE', 'L_COMMENT', 'DISCOUNT', 'COMMITDATE', 'QUANTITY', 'SHIPMODE']]

lineitem[(lineitem['L_SUPPKEY'] == 1783)][['QUANTITY', 'SHIPDATE', 'RECEIPTDATE', 'LINESTATUS', 'COMMITDATE', 'L_COMMENT']].groupby(by=['QUANTITY', 'COMMITDATE', 'RECEIPTDATE', 'L_COMMENT', 'LINESTATUS']).agg('count')

lineitem[(lineitem['QUANTITY'] != 5) | (lineitem['TAX'] != 0.07554580299592428) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN'])) & (lineitem['SHIPMODE'] != 'REG AIR')].merge(orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_ORDERKEY'] > 680)][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_ORDERKEY'] > 97) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['EXTENDEDPRICE'] <= 31413.79602822863) & (lineitem['RETURNFLAG'].isin(['N', 'R']))].merge(orders[['O_ORDERKEY', 'O_COMMENT', 'ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['DISCOUNT'] >= 0.023171170806888342) | (lineitem['TAX'] > 0.05876410378726732)].merge(partsupp.merge(part[['TYPE', 'BRAND', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'LINESTATUS', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'EXTENDEDPRICE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem[['LINENUMBER', 'TAX', 'EXTENDEDPRICE', 'LINESTATUS', 'QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE', 'RECEIPTDATE']].groupby(by=['LINESTATUS', 'SHIPDATE', 'SHIPINSTRUCT', 'LINENUMBER']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'DISCOUNT', 'COMMITDATE', 'SHIPDATE', 'TAX', 'SHIPINSTRUCT', 'LINESTATUS', 'L_PARTKEY', 'QUANTITY']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_PARTKEY', 'COMMITDATE', 'SHIPMODE', 'TAX', 'L_COMMENT', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPDATE', 'SHIPINSTRUCT', 'QUANTITY']].merge(orders[['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'SHIPDATE', 'LINENUMBER', 'LINESTATUS', 'TAX', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'L_SUPPKEY', 'LINENUMBER', 'COMMITDATE', 'EXTENDEDPRICE', 'SHIPMODE']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('count')

lineitem[['TAX', 'SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'RETURNFLAG', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] <= 15) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'u') | (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] >= 1) & (nation['N_COMMENT'] == 'v')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'p') & (nation['N_NAME'].str.startswith('C')) | (nation['N_NAME'] != 'I') | (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'] != 'G') & (nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] != 11)][['N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'V')][['N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] >= 7) | (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'E') & (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] == 'P') | (nation['N_NAME'] == 'A') & (nation['N_NAME'] == 'E') & (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] == 'S') | (nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] == 3) & (nation['N_COMMENT'].str.startswith('u'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 10)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] <= 15) | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == 'h')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] <= 9) | (nation['N_NATIONKEY'] >= 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] == 'I') & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] == 'B')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] == 'U') & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 14)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 4)][['N_REGIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] == 'C') & (nation['N_NAME'] != 'J')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] > 18) & (nation['N_NAME'] == 'M')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 6) | (nation['N_COMMENT'] == 'c') & (nation['N_COMMENT'].str.startswith('a'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] == 's') | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] <= 23) & (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'].str.startswith('F')) | (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] >= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] <= 0)].merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] <= 19)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] > 9) & (nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] < 21)].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'] == 'M') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith(' '))][['N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] <= 11) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'] == 'e')].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] < 5) | (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] < 4893.375766192542) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_CUSTKEY'] != 85) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_CUSTKEY'] != 14) & (customer['C_ACCTBAL'] >= -156.7654335758359)].merge(nation[(nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'M') & (customer['C_NATIONKEY'] <= 4) & (customer['MKTSEGMENT'] != 'BUILDING')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 92) & (customer['C_ACCTBAL'] != 5576.58870408065)].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] != 12) & (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_PHONE'] != '3') | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] == 18) | (customer['C_PHONE'] == '27-') & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'Y')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] == 'r')].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_ACCTBAL'] < 8081.434579381954) | (customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] < 3272.400304621755) | (customer['C_COMMENT'].str.startswith('i')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY', 'BUILDING'])) | (customer['C_NATIONKEY'] > 12) & (customer['C_ACCTBAL'] > -551.3877525366381) | (customer['C_ACCTBAL'] >= -51.67761288174029) & (customer['C_CUSTKEY'] <= 83)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders.merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'] != 'y') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] >= '1998-07-21')][['ORDERDATE', 'SHIPPRIORITY']].groupby(by=['SHIPPRIORITY', 'ORDERDATE']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] > 589) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] != 247572.52799255194) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] <= '1992-01-13')][['TOTALPRICE', 'ORDERPRIORITY', 'CLERK']].groupby(by=['CLERK', 'TOTALPRICE', 'ORDERPRIORITY']).agg('count')

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) & (orders['O_CUSTKEY'] == 119674)][['SHIPPRIORITY', 'CLERK', 'O_ORDERKEY']].groupby(by=['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['O_CUSTKEY'] >= 30850) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '1-URGENT', '3-MEDIUM', '5-LOW']))].merge(customer[(customer['C_ADDRESS'] == 'l') | (customer['C_PHONE'] == '2') & (customer['C_COMMENT'].str.startswith('i')) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERSTATUS'].isin(['F', 'O']))].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] <= 52657.53867683535)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] == 256579.89701710874) | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW'])) & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] <= 144674) | (orders['O_ORDERKEY'] <= 652)].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] > 103) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] <= 776) | (orders['O_COMMENT'].str.startswith('uri')) | (orders['TOTALPRICE'] == 339084.57101778884) | (orders['O_CUSTKEY'] > 134521) | (orders['SHIPPRIORITY'] <= 0)][['O_ORDERKEY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'TOTALPRICE']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] < 331743.98457790306) & (orders['O_ORDERKEY'] == 392) | (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] == 'c') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '2-HIGH'])) | (orders['TOTALPRICE'] < 155935.9928968403) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['ORDERSTATUS'].isin(['F']))][['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERDATE']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['TOTALPRICE'] != 170898.77412822156) & (orders['O_ORDERKEY'] <= 97) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] >= 180825.6331215566) | (orders['TOTALPRICE'] == 352857.68149726867)][['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']]

orders[(orders['O_COMMENT'] != 'egu') | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] == 286) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] <= 112694) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '2-HIGH', '5-LOW']))][['CLERK', 'O_COMMENT', 'TOTALPRICE']].groupby(by=['CLERK', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] == 't') & (orders['O_ORDERKEY'] == 198) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] < 65367) | (orders['O_COMMENT'] != 't')].merge(customer[['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('k')) & (orders['O_CUSTKEY'] == 67376) | (orders['TOTALPRICE'] <= 19600.554481353436) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'a') | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERDATE'] > '1998-07-21')][['ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS']]

orders[(orders['O_CUSTKEY'] < 87319) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_CUSTKEY'] > 77) | (customer['C_COMMENT'] != 'r') & (customer['C_ACCTBAL'] == 2804.6182705661104) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('n')) & (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 31453) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['O_CUSTKEY'] == 145870)].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == ' ') | (customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] < 3468.320584585107) | (customer['C_PHONE'] == '22-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'c')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 100785) & (orders['O_CUSTKEY'] > 123609) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] >= 43659) | (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] == 'egu')].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 24639)].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 41711)][['O_CUSTKEY', 'SHIPPRIORITY', 'CLERK', 'ORDERDATE']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 124) | (orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] == 250) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_CUSTKEY'] >= 127202) & (orders['TOTALPRICE'] != 305098.7401840912)][['O_COMMENT', 'ORDERPRIORITY']].groupby(by=['ORDERPRIORITY', 'O_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 230) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '5-LOW', '1-URGENT'])) | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] == 105719) | (orders['O_COMMENT'] != 'the') | (orders['O_CUSTKEY'] < 15732) | (orders['ORDERDATE'] == '1998-07-21')][['CLERK', 'O_COMMENT', 'O_ORDERKEY']].groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 720)].merge(customer[(customer['C_COMMENT'].str.startswith('d')) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] > 14) | (customer['C_ADDRESS'] == 'E') & (customer['C_ACCTBAL'] != -9.376962927761952) | (customer['C_ACCTBAL'] == 2976.432050407319) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ADDRESS'].str.startswith('D'))][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 71) | (orders['O_COMMENT'] != 'egu') & (orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'].str.startswith('r')) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].groupby(by=['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 739)][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS']).agg('count')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED']))].merge(customer[(customer['C_CUSTKEY'] != 82) & (customer['C_PHONE'] == '1')].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] >= 1) | (nation['N_NATIONKEY'] != 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 66934.54823749831) & (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] >= 728) & (orders['O_ORDERKEY'] != 279) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['TOTALPRICE'] != 131498.9411316314) | (orders['ORDERPRIORITY'] == '2-HIGH')][['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']]

orders[(orders['TOTALPRICE'] == 277088.35297785624) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] == '1998-07-21')][['ORDERPRIORITY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].groupby(by=['ORDERPRIORITY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 342220.9443404307) | (orders['O_CUSTKEY'] > 147877) | (orders['O_ORDERKEY'] < 790) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] > 14503)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] >= 296113.14906638) & (orders['O_CUSTKEY'] == 34381) | (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] == 85026) & (orders['O_COMMENT'] != 'u') | (orders['TOTALPRICE'] > 85088.30003849423)][['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS']].groupby(by=['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].groupby(by=['ORDERSTATUS', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].groupby(by=['SHIPPRIORITY', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_CUSTKEY']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] != 6)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] != 'x') | (customer['MKTSEGMENT'].isin(['BUILDING'])) & (customer['C_COMMENT'].str.startswith('w')) & (customer['C_NATIONKEY'] != 4) & (customer['C_ACCTBAL'] != 4175.575084876174) | (customer['C_NAME'] != 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'] != 'Brand#12') | (part['CONTAINER'] == 'SM') | (part['BRAND'] != 'Brand#14') | (part['P_NAME'] != 'b') & (part['P_NAME'] == 'lem') & (part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'].str.startswith('WRAP'))][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'CONTAINER']]

part[(part['BRAND'] != 'Brand#33') & (part['PT_COMMENT'].str.startswith('c')) & (part['RETAILPRICE'] <= 929.8467513483904) & (part['P_NAME'] == 'lin') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1'])) | (part['P_PARTKEY'] > 155) | (part['PT_COMMENT'] == 'q') | (part['BRAND'] != 'Brand#41')][['MFGR', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']]

part[(part['BRAND'] != 'Brand#51') & (part['TYPE'].str.startswith('SMA')) & (part['PT_COMMENT'] != 'f') | (part['PT_COMMENT'] != 'kag') | (part['TYPE'] == 'S') & (part['BRAND'].isin(['Brand#42', 'Brand#45', 'Brand#33', 'Brand#24', 'Brand#25'])) | (part['BRAND'].isin(['Brand#35', 'Brand#52', 'Brand#23', 'Brand#53', 'Brand#13', 'Brand#12', 'Brand#43', 'Brand#31', 'Brand#54', 'Brand#24', 'Brand#14', 'Brand#32', 'Brand#15', 'Brand#42', 'Brand#51', 'Brand#33', 'Brand#34', 'Brand#11', 'Brand#45', 'Brand#25', 'Brand#21', 'Brand#55', 'Brand#22'])) & (part['PT_COMMENT'].str.startswith('o')) | (part['TYPE'].str.startswith('M'))].groupby(by=['TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['BRAND'].isin(['Brand#13', 'Brand#23', 'Brand#53', 'Brand#22', 'Brand#11', 'Brand#41', 'Brand#52', 'Brand#45', 'Brand#31', 'Brand#54', 'Brand#32', 'Brand#55', 'Brand#44', 'Brand#34', 'Brand#43', 'Brand#33', 'Brand#12', 'Brand#24', 'Brand#35', 'Brand#42', 'Brand#25'])) | (part['MFGR'] == 'Manufacturer#5') & (part['SIZE'] <= 9) & (part['RETAILPRICE'] == 1062.4077129482228)][['P_NAME', 'TYPE', 'MFGR', 'RETAILPRICE']].groupby(by=['RETAILPRICE', 'P_NAME', 'MFGR', 'TYPE']).agg('count')

part[(part['CONTAINER'] != 'LG') & (part['SIZE'] > 15) & (part['PT_COMMENT'] == ' ') & (part['BRAND'] == 'Brand#21') | (part['TYPE'].str.startswith('S')) | (part['P_PARTKEY'] != 8)][['BRAND', 'P_NAME', 'MFGR', 'TYPE', 'PT_COMMENT']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['CONTAINER'] != 'SM') & (part['SIZE'] <= 17) | (part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] == 'e') | (part['P_NAME'] == 'n') & (part['BRAND'].isin(['Brand#31', 'Brand#44', 'Brand#55', 'Brand#35', 'Brand#33', 'Brand#23', 'Brand#42', 'Brand#32', 'Brand#21', 'Brand#34', 'Brand#11', 'Brand#54', 'Brand#41', 'Brand#15'])) | (part['CONTAINER'].str.startswith('SM')) | (part['TYPE'] != 'E')][['TYPE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['CONTAINER'] != 'WRAP') & (part['TYPE'].str.startswith('S')) | (part['RETAILPRICE'] <= 1068.084685015575) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2']))][['MFGR', 'P_NAME', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']].groupby(by=['MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['BRAND'] != 'Brand#51') & (part['SIZE'] <= 13) & (part['RETAILPRICE'] != 970.9085489776257) & (part['BRAND'] != 'Brand#42') & (part['PT_COMMENT'].str.startswith('k')) & (part['BRAND'] != 'Brand#22') & (part['BRAND'].isin(['Brand#55', 'Brand#54', 'Brand#42', 'Brand#11', 'Brand#52', 'Brand#24', 'Brand#45', 'Brand#53', 'Brand#44', 'Brand#22', 'Brand#15', 'Brand#33', 'Brand#34'])) & (part['RETAILPRICE'] == 992.7883065891511)].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'WRAP') | (part['PT_COMMENT'].str.startswith('b')) & (part['PT_COMMENT'].str.startswith('g')) & (part['BRAND'] != 'Brand#45') & (part['BRAND'] == 'Brand#35') | (part['MFGR'] == 'Manufacturer#3') | (part['RETAILPRICE'] >= 1062.4577797066675) & (part['P_PARTKEY'] == 104) & (part['MFGR'] == 'Manufacturer#2')][['BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR', 'RETAILPRICE', 'TYPE']]

part[(part['MFGR'] != 'Manufacturer#4') | (part['SIZE'] < 43) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['CONTAINER'].str.startswith('MED')) & (part['PT_COMMENT'] == 'h') & (part['RETAILPRICE'] < 1048.8276857377243) | (part['RETAILPRICE'] == 974.1098864221095) & (part['P_NAME'] != 't') | (part['MFGR'] != 'Manufacturer#2')][['SIZE', 'P_NAME']].groupby(by=['SIZE']).agg('min', numeric_only=True)

part[(part['P_NAME'] == 'cor') & (part['P_NAME'].str.startswith('bis')) | (part['P_NAME'] != 'r') & (part['P_PARTKEY'] <= 129) & (part['BRAND'].isin(['Brand#43', 'Brand#25', 'Brand#54', 'Brand#12', 'Brand#41', 'Brand#15', 'Brand#34', 'Brand#31', 'Brand#44', 'Brand#42', 'Brand#33', 'Brand#51', 'Brand#53', 'Brand#55', 'Brand#52', 'Brand#45', 'Brand#11', 'Brand#14'])) & (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] != 'm') | (part['BRAND'] == 'Brand#53') & (part['RETAILPRICE'] <= 1059.9106137316155)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY']]

part[(part['P_NAME'] == 'o')][['BRAND', 'P_NAME', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'TYPE', 'SIZE', 'P_PARTKEY']].groupby(by=['MFGR', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] < 117) | (part['RETAILPRICE'] >= 1035.0974032595982)][['BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] < 119) & (part['BRAND'] == 'Brand#42') | (part['MFGR'] == 'Manufacturer#1') & (part['P_PARTKEY'] < 98) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['RETAILPRICE'] != 960.8661164428322) | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'].isin(['Brand#31']))].groupby(by=['P_PARTKEY', 'SIZE', 'BRAND', 'MFGR', 'P_NAME']).agg('count')

part[(part['P_PARTKEY'] < 18) | (part['TYPE'] != 'M') & (part['P_PARTKEY'] > 46) & (part['RETAILPRICE'] == 946.9421059203028) & (part['PT_COMMENT'] != 's') & (part['PT_COMMENT'] == 'p')][['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']]

part[(part['RETAILPRICE'] < 960.7769568424764)][['MFGR', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']].groupby(by=['RETAILPRICE', 'BRAND', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] < 989.674768151796) | (part['TYPE'] == 'P') | (part['MFGR'] == 'Manufacturer#3')][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] > 1094.3742278957345) | (part['SIZE'] > 7) & (part['SIZE'] > 28) & (part['CONTAINER'].str.startswith('SM'))][['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE']].groupby(by=['BRAND', 'TYPE']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] > 1097.2414817352287) & (part['BRAND'].isin(['Brand#43', 'Brand#55', 'Brand#13', 'Brand#23', 'Brand#25', 'Brand#34', 'Brand#32', 'Brand#21', 'Brand#31', 'Brand#15', 'Brand#22', 'Brand#24', 'Brand#54', 'Brand#41', 'Brand#42'])) | (part['P_PARTKEY'] < 196) & (part['CONTAINER'] == 'MED') & (part['P_NAME'].str.startswith('lem')) | (part['SIZE'] != 45) | (part['TYPE'].str.startswith('L')) | (part['BRAND'].isin(['Brand#51', 'Brand#35', 'Brand#25', 'Brand#32', 'Brand#12', 'Brand#13', 'Brand#45', 'Brand#15', 'Brand#31', 'Brand#41', 'Brand#53', 'Brand#55', 'Brand#23', 'Brand#22', 'Brand#54', 'Brand#33', 'Brand#42', 'Brand#21', 'Brand#11', 'Brand#34', 'Brand#24', 'Brand#14', 'Brand#44', 'Brand#52']))][['BRAND', 'TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR', 'SIZE', 'P_PARTKEY']]

part[(part['SIZE'] > 1) & (part['P_PARTKEY'] != 107) & (part['TYPE'].str.startswith('E')) & (part['RETAILPRICE'] < 1002.8836592464395) | (part['PT_COMMENT'].str.startswith(' fi')) & (part['RETAILPRICE'] <= 910.2655392688853)][['RETAILPRICE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['TYPE'] != 'S') & (part['BRAND'] == 'Brand#52') | (part['P_NAME'] == 'n') & (part['P_PARTKEY'] <= 91) & (part['MFGR'] == 'Manufacturer#2') & (part['PT_COMMENT'] == 'the') | (part['PT_COMMENT'].str.startswith('l')) & (part['BRAND'].isin(['Brand#31', 'Brand#51', 'Brand#21', 'Brand#35', 'Brand#25', 'Brand#12', 'Brand#44', 'Brand#22', 'Brand#23', 'Brand#45', 'Brand#15', 'Brand#33'])) | (part['PT_COMMENT'] == 'i')].groupby(by=['BRAND', 'TYPE', 'MFGR', 'RETAILPRICE', 'CONTAINER']).agg('count')

part[(part['TYPE'] == 'E') | (part['TYPE'].str.startswith('P')) | (part['TYPE'] != 'E') | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) | (part['PT_COMMENT'].str.startswith('d'))][['BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']].groupby(by=['MFGR']).agg('count')

part[(part['TYPE'] == 'P') | (part['P_NAME'] == 'f') | (part['P_PARTKEY'] == 48) | (part['CONTAINER'] != 'SM') | (part['SIZE'] >= 21) & (part['RETAILPRICE'] >= 1062.3445548654329) | (part['RETAILPRICE'] != 914.6765107811314) & (part['P_PARTKEY'] != 152) & (part['P_NAME'].str.startswith('f'))][['P_NAME', 'BRAND']].groupby(by=['BRAND']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) | (part['SIZE'] > 34)][['CONTAINER', 'RETAILPRICE', 'MFGR', 'P_NAME', 'PT_COMMENT']].groupby(by=['MFGR', 'CONTAINER', 'P_NAME', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']].groupby(by=['BRAND', 'MFGR', 'RETAILPRICE', 'P_NAME', 'CONTAINER']).agg('mean', numeric_only=True)

part[['CONTAINER', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']].groupby(by=['PT_COMMENT', 'MFGR', 'BRAND', 'P_NAME', 'SIZE']).agg('min', numeric_only=True)

part[['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['SIZE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']].groupby(by=['SIZE', 'RETAILPRICE', 'CONTAINER', 'P_NAME', 'MFGR']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']].groupby(by=['RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != 'l') | (part['P_NAME'] == 'i') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'] == 'MED') | (part['RETAILPRICE'] != 1062.625286576806) | (part['P_PARTKEY'] >= 35)][['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['P_PARTKEY'] > 153) | (part['SIZE'] < 12) & (part['RETAILPRICE'] <= 1091.6925403293594) | (part['PT_COMMENT'] != 'd') | (part['P_NAME'].str.startswith('f')) & (part['P_NAME'].str.startswith('t'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'RETAILPRICE', 'CONTAINER', 'MFGR']).agg('count')

partsupp.merge(part[(part['TYPE'].str.startswith('E')) | (part['MFGR'] == 'Manufacturer#3') | (part['P_PARTKEY'] != 195) | (part['MFGR'] != 'Manufacturer#3') | (part['CONTAINER'] == 'LG') | (part['BRAND'] == 'Brand#31') | (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'].str.startswith('SM'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(part[['BRAND', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('h')) | (supplier['S_PHONE'] != '28-') | (supplier['S_NATIONKEY'] == 3) | (supplier['S_PHONE'] == '14-') & (supplier['S_ADDRESS'].str.startswith('t')) & (supplier['S_PHONE'].str.startswith('2'))][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'h') | (supplier['S_ADDRESS'] != 'D') & (supplier['S_ACCTBAL'] <= 8869.018670018932) & (supplier['S_SUPPKEY'] >= 10)][['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS']).agg('count')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 5) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('t')) | (supplier['S_NATIONKEY'] >= 0)][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 7183)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'MFGR', 'P_NAME', 'BRAND']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 7186) | (partsupp['AVAILQTY'] >= 924) | (partsupp['P_COMMENT'] != 's')][['PS_SUPPKEY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 3566) & (partsupp['AVAILQTY'] >= 2478) | (partsupp['AVAILQTY'] <= 3743) & (partsupp['SUPPLYCOST'] > 649.7852653723993) & (partsupp['PS_PARTKEY'] < 19)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 30)].merge(part[(part['MFGR'] == 'Manufacturer#2') | (part['PT_COMMENT'] != '!')][['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 19) | (partsupp['SUPPLYCOST'] != 415.13327536483393) & (partsupp['P_COMMENT'] != 'v') & (partsupp['PS_PARTKEY'] != 22)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] <= 6) & (partsupp['PS_SUPPKEY'] != 674)][['PS_PARTKEY']].merge(part[['BRAND', 'TYPE', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 6) | (partsupp['PS_PARTKEY'] <= 16) | (partsupp['SUPPLYCOST'] < 729.4814481912115) & (partsupp['PS_PARTKEY'] < 11)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 37) | (partsupp['SUPPLYCOST'] > 413.6232675932126)][['PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 32) & (partsupp['PS_PARTKEY'] <= 5)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'].str.startswith('LG'))][['PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 4) & (partsupp['P_COMMENT'] == 's') & (partsupp['SUPPLYCOST'] > 591.1235197792888) & (partsupp['SUPPLYCOST'] == 156.52304085939173)].merge(part[['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 6087) & (partsupp['SUPPLYCOST'] != 219.44558467551823) | (partsupp['SUPPLYCOST'] <= 530.0780271693459) | (partsupp['AVAILQTY'] > 1001)].merge(part[(part['BRAND'] == 'Brand#52') | (part['RETAILPRICE'] < 1069.1389926186894) | (part['P_NAME'] == 'lin') | (part['P_PARTKEY'] == 151) | (part['CONTAINER'] != 'LG') | (part['RETAILPRICE'] < 1072.231498993925) & (part['P_PARTKEY'] <= 46) | (part['P_NAME'] != 'blu')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 6962) | (partsupp['SUPPLYCOST'] > 917.039634608193) & (partsupp['P_COMMENT'] == 'bli')][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 5275) & (partsupp['P_COMMENT'] == 'f') & (partsupp['SUPPLYCOST'] == 711.0040361754294)][['AVAILQTY', 'PS_PARTKEY']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == ' ') & (partsupp['PS_PARTKEY'] == 7)].merge(supplier.merge(nation[(nation['N_NAME'] == 'A')].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['AVAILQTY'] <= 7733) | (partsupp['PS_SUPPKEY'] < 6238) | (partsupp['PS_PARTKEY'] < 45) | (partsupp['AVAILQTY'] >= 7014)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 276.63795081289925)].merge(part[(part['BRAND'] == 'Brand#34') | (part['PT_COMMENT'].str.startswith('u')) & (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'] != 'SM') | (part['PT_COMMENT'].str.startswith(' fi')) & (part['P_PARTKEY'] >= 69)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 64.10904412003988) | (partsupp['AVAILQTY'] <= 4761) | (partsupp['PS_SUPPKEY'] >= 2743)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['P_NAME', 'TYPE', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 394.26704349660696)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 584.022396496824) | (partsupp['PS_SUPPKEY'] <= 6357) | (partsupp['SUPPLYCOST'] >= 961.7111138878236) | (partsupp['AVAILQTY'] >= 9787) | (partsupp['SUPPLYCOST'] < 340.6763014460774)].merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] == 2) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] >= 15)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['TYPE'] == 'S') | (part['SIZE'] != 47) & (part['P_PARTKEY'] < 191) | (part['BRAND'].isin(['Brand#15', 'Brand#14', 'Brand#41', 'Brand#24', 'Brand#43', 'Brand#33', 'Brand#25', 'Brand#44', 'Brand#13', 'Brand#23', 'Brand#45', 'Brand#42', 'Brand#55', 'Brand#53', 'Brand#32', 'Brand#54', 'Brand#11', 'Brand#52', 'Brand#51'])) & (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'].str.startswith('JUMBO')) & (part['PT_COMMENT'] != 's') | (part['PT_COMMENT'] != 't')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] != 114) | (part['CONTAINER'] != 'LG') | (part['CONTAINER'] != 'JUMBO') | (part['BRAND'] == 'Brand#51') | (part['SIZE'] <= 3) | (part['PT_COMMENT'] == 'i')][['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'z') & (supplier['S_NATIONKEY'] >= 8) | (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'].isin(['Brand#55', 'Brand#31', 'Brand#22', 'Brand#25', 'Brand#44', 'Brand#24', 'Brand#54', 'Brand#45', 'Brand#43', 'Brand#35', 'Brand#42', 'Brand#12', 'Brand#51', 'Brand#23', 'Brand#21', 'Brand#34', 'Brand#11', 'Brand#41'])) & (part['P_NAME'].str.startswith('r'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'd') | (part['TYPE'] == 'P') & (part['BRAND'] == 'Brand#22') & (part['RETAILPRICE'] >= 993.731442058712) | (part['SIZE'] > 30) | (part['P_NAME'].str.startswith('o')) & (part['BRAND'].isin(['Brand#11', 'Brand#45', 'Brand#54', 'Brand#42', 'Brand#44', 'Brand#32', 'Brand#22', 'Brand#51', 'Brand#43', 'Brand#34', 'Brand#12', 'Brand#21', 'Brand#55', 'Brand#14', 'Brand#33', 'Brand#24', 'Brand#25', 'Brand#53', 'Brand#15', 'Brand#13']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] != 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('E')) & (part['PT_COMMENT'].str.startswith('k')) | (part['TYPE'].str.startswith('L')) | (part['MFGR'] != 'Manufacturer#5') & (part['SIZE'] != 42) & (part['P_NAME'] != 'bis') & (part['BRAND'] == 'Brand#12') | (part['CONTAINER'].str.startswith('LG')) | (part['CONTAINER'] == 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == ' fi') & (part['BRAND'] != 'Brand#21') & (part['SIZE'] > 16)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 90) & (supplier['S_SUPPKEY'] == 183) & (supplier['S_ADDRESS'] != 'o')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] <= 3) & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(nation.merge(region[(region['R_REGIONKEY'] < 2) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NATIONKEY'] != 21) | (nation['N_NATIONKEY'] < 0) & (nation['N_REGIONKEY'] != 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_COMMENT'] != 'c')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 2) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_REGIONKEY'] < 1) & (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_COMMENT'] == 'l')].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] >= 2)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] >= 15) & (nation['N_COMMENT'] != 's') & (nation['N_NATIONKEY'] <= 14)].merge(region[(region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'I') & (nation['N_NATIONKEY'] > 10)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] == 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 4801.176688643305) & (supplier['S_ACCTBAL'] == 8375.730233027605) & (supplier['S_SUPPKEY'] == 188) | (supplier['S_ACCTBAL'] == 2401.23384990207)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 2929.987576072247) | (supplier['S_SUPPKEY'] == 150) & (supplier['S_ACCTBAL'] > 6696.274496916691)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 4189.389012254242) & (supplier['S_SUPPKEY'] == 199) | (supplier['S_NATIONKEY'] >= 14) | (supplier['S_SUPPKEY'] <= 120) & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 18)].merge(nation[(nation['N_NATIONKEY'] < 17) & (nation['N_NATIONKEY'] < 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'B') & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'm') & (supplier['S_ACCTBAL'] != 1612.7302178393809) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'].str.startswith('l')) | (supplier['S_SUPPKEY'] < 137)].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] == 'l') | (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('q')) | (supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_SUPPKEY'] > 152) | (supplier['S_ACCTBAL'] > 4566.050913428411) | (supplier['S_SUPPKEY'] <= 69) & (supplier['S_SUPPKEY'] == 184)].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] > 12)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'j') & (supplier['S_COMMENT'] != '!')].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 't') | (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_PHONE'] != '26-')].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] == 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] < 14) | (supplier['S_ADDRESS'] != 'c') | (supplier['S_ACCTBAL'] == 4640.778962874027) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'j')].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_NAME'] == 'E') & (nation['N_NAME'] == 'C') & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 0) | (supplier['S_ADDRESS'] != '7') & (supplier['S_ACCTBAL'] > 1243.1616995667748) & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_SUPPKEY'] == 14) & (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NATIONKEY'] < 8)][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 0)][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 12) & (supplier['S_COMMENT'].str.startswith('q')) & (supplier['S_SUPPKEY'] <= 24) | (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] != 'v') & (supplier['S_ACCTBAL'] < 2329.581744302037) & (supplier['S_ADDRESS'].str.startswith('c'))][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_PHONE']].groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 19) | (supplier['S_COMMENT'].str.startswith('c')) | (supplier['S_NAME'] == 'S')].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'v')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '17-') | (supplier['S_ACCTBAL'] == 7866.107123657274) | (supplier['S_COMMENT'] == 'f') | (supplier['S_PHONE'] != '26-') | (supplier['S_SUPPKEY'] <= 117) & (supplier['S_COMMENT'].str.startswith('w'))].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '2') | (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 5) & (supplier['S_ADDRESS'] == 'E')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_PHONE'] != '28-') & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 10) | (supplier['S_NATIONKEY'] >= 18)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_ADDRESS']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 185) & (supplier['S_COMMENT'] == 'the') | (supplier['S_PHONE'] == '26-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'].str.startswith('S'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 77) & (supplier['S_ACCTBAL'] != 3578.478554048669) | (supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] != 'v') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'] != 'o')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'G')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] != 'R')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NAME'].str.startswith('M')) | (nation['N_NAME'].str.startswith('A')) & (nation['N_NATIONKEY'] >= 19)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'y')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 0) | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] <= 4) | (nation['N_NATIONKEY'] != 16)].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NATIONKEY'] == 18)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'p')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NATIONKEY'] < 11) & (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] == 't')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'] != 'S')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7695.0462296133355) | (customer['C_ADDRESS'].str.startswith('v'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != '0')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'K') | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'y') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_CUSTKEY'] <= 62) | (customer['C_ACCTBAL'] == 2103.0443853349007) & (customer['C_NATIONKEY'] > 1) & (customer['C_ADDRESS'] != ',')].merge(nation[(nation['N_NATIONKEY'] < 14)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'i') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 4)].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] == 16) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] != 'G')].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'm') & (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'L') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('2')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] != 86) | (customer['C_CUSTKEY'] == 71)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'f') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_COMMENT'] != 'y') & (customer['C_PHONE'] != '3') & (customer['C_PHONE'] == '27-') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'] == 'K')][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'd')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'q')].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] >= 21) & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('o')) & (customer['MKTSEGMENT'] != 'MACHINERY')][['C_COMMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] < 2) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 88) & (customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] < 20) | (customer['C_NATIONKEY'] <= 9) & (customer['C_ACCTBAL'] >= 9536.639624676596) | (customer['C_ADDRESS'] == 'B') | (customer['MKTSEGMENT'] != 'FURNITURE')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 31) & (customer['C_CUSTKEY'] == 58) & (customer['C_PHONE'] == '18-')][['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 75) | (customer['C_CUSTKEY'] == 93) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '1') | (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 91)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 65)].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] == 'K') & (nation['N_COMMENT'] != 'e') | (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 88) & (customer['C_ACCTBAL'] > -460.9098535587799) & (customer['C_NAME'] != 'C')].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'S') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ADDRESS'].str.startswith('U')) & (customer['C_COMMENT'] != 'n') | (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] >= 14) & (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 17) | (customer['C_CUSTKEY'] > 4)].merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 14) | (nation['N_NAME'] == 'R')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 4) | (customer['C_CUSTKEY'] > 83) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'].str.startswith(' ')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_NAME'].str.startswith('P')) | (nation['N_COMMENT'] == 'o') | (nation['N_COMMENT'].str.startswith('s'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 13)].merge(nation[(nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 7) | (customer['C_ADDRESS'] != 'v') & (customer['C_COMMENT'].str.startswith('s')) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] <= 4)].merge(nation[(nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 2) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 2) | (customer['C_CUSTKEY'] < 31) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'BUILDING', 'FURNITURE'])) | (customer['C_CUSTKEY'] > 29)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 5) | (customer['C_CUSTKEY'] != 23)].merge(nation[(nation['N_NATIONKEY'] >= 5) & (nation['N_NATIONKEY'] != 1) | (nation['N_NATIONKEY'] < 22) & (nation['N_NAME'].str.startswith('E'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_CUSTKEY'] >= 70) | (customer['C_CUSTKEY'] <= 85) | (customer['C_COMMENT'] != 'q') & (customer['C_ADDRESS'] != 'Q')][['C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].groupby(by=['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] < 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ADDRESS'] == 'z') | (customer['C_PHONE'] != '3') & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation.merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 50) & (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].groupby(by=['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT']).agg('count')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] != 3) & (customer['C_COMMENT'] == 'w') | (customer['C_PHONE'] == '22-')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_PHONE']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_PHONE'] == '2') & (customer['C_NATIONKEY'] != 6) & (customer['C_NAME'] == 'C')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'V')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 0) & (nation['N_COMMENT'] == 'l')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

customer[['C_NAME', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 11) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'h') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] >= 9)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] >= 5) | (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 7)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NAME'] != 'V') | (nation['N_NATIONKEY'] == 5)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NAME'] != 'S')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'i')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] != 1)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] > 93) & (customer['C_PHONE'] != '25-') | (customer['C_NATIONKEY'] < 22) & (customer['C_ADDRESS'] != 'v') & (customer['C_CUSTKEY'] <= 9) | (customer['C_PHONE'] == '25-') & (customer['C_ADDRESS'].str.startswith('s'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 1697) & (partsupp['PS_PARTKEY'] > 1) & (partsupp['SUPPLYCOST'] > 630.0393529503975) & (partsupp['PS_SUPPKEY'] < 3824)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['P_NAME'].str.startswith('g'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 718) | (partsupp['AVAILQTY'] <= 1523)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] == 'MED') | (part['P_PARTKEY'] >= 25) | (part['TYPE'].str.startswith('L')) & (part['BRAND'] == 'Brand#51') & (part['RETAILPRICE'] < 1041.3257869915976) | (part['TYPE'] != 'SMA')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'j') & (partsupp['P_COMMENT'] == 's')].merge(part[(part['TYPE'].str.startswith('P')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) & (part['CONTAINER'] != 'JUMBO')][['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 239.13009594000064) | (partsupp['SUPPLYCOST'] == 936.2509658049009) | (partsupp['AVAILQTY'] < 4067) & (partsupp['PS_SUPPKEY'] > 7201) | (partsupp['AVAILQTY'] != 5421)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['TAX'] >= 0.022259620578498493) & (lineitem['L_SUPPKEY'] > 9145) | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_SUPPKEY'] > 8080)].merge(orders[(orders['ORDERSTATUS'] != 'F') | (orders['O_COMMENT'].str.startswith('e'))][['O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['LINESTATUS'] != 'O') | (lineitem['LINENUMBER'] != 2) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['L_PARTKEY'] != 78977) | (lineitem['LINENUMBER'] < 4) | (lineitem['DISCOUNT'] < 0.002462806559199393) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_SUPPKEY'] > 5573) & (lineitem['L_COMMENT'] == 'v') | (lineitem['LINENUMBER'] > 2)].merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.04873112125703191) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) & (lineitem['L_SUPPKEY'] == 7832) & (lineitem['SHIPMODE'] == 'AIR') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPDATE'] != '1998-10-30')][['L_ORDERKEY', 'L_SUPPKEY', 'L_PARTKEY', 'TAX']].groupby(by=['L_PARTKEY', 'L_SUPPKEY', 'L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.07181614047716328) & (lineitem['L_PARTKEY'] != 139111) | (lineitem['L_ORDERKEY'] == 128) | (lineitem['TAX'] >= 0.04038268380520615) | (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.0627952871322947) | (lineitem['EXTENDEDPRICE'] <= 26621.34301865588) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['L_PARTKEY'] <= 115121) | (lineitem['L_ORDERKEY'] != 44)].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 61400.4362996045) & (lineitem['L_COMMENT'] == ' re') & (lineitem['LINESTATUS'] == 'O') | (lineitem['TAX'] > 0.06662228433765063) & (lineitem['L_PARTKEY'] >= 91434) | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['L_ORDERKEY'] <= 162)][['SHIPDATE', 'LINESTATUS', 'LINENUMBER']].groupby(by=['LINENUMBER', 'LINESTATUS', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['DISCOUNT'] < 0.02875785130966766)][['SHIPDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'DISCOUNT', 'TAX', 'SHIPINSTRUCT', 'RETURNFLAG']].groupby(by=['RETURNFLAG', 'SHIPINSTRUCT', 'TAX']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 168965) | (lineitem['SHIPMODE'] == 'AIR') | (lineitem['TAX'] <= 0.07871814953777367) | (lineitem['DISCOUNT'] >= 0.05341777619395676) | (lineitem['L_PARTKEY'] == 104415) & (lineitem['EXTENDEDPRICE'] <= 45526.67149231015) & (lineitem['EXTENDEDPRICE'] == 29526.13017673328) & (lineitem['L_COMMENT'] != 'c') | (lineitem['L_COMMENT'] == 'n')][['COMMITDATE', 'EXTENDEDPRICE']].groupby(by=['COMMITDATE', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] <= 5461) | (lineitem['RETURNFLAG'] == 'R') & (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['QUANTITY'] < 44) & (lineitem['TAX'] > 0.005279354506285685) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'].isin(['TRUCK', 'FOB', 'REG AIR', 'AIR', 'RAIL', 'SHIP'])) | (lineitem['L_ORDERKEY'] > 142) | (lineitem['TAX'] == 0.0446680833019021)][['QUANTITY', 'LINENUMBER']].groupby(by=['LINENUMBER', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RETURNFLAG'] == 'N')][['L_ORDERKEY']].merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'R')][['RETURNFLAG', 'COMMITDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT']].groupby(by=['RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['L_SUPPKEY'] != 2749) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'MAIL', 'FOB', 'SHIP'])) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['QUANTITY'] <= 12) & (lineitem['DISCOUNT'] <= 0.00881515282862374)].merge(partsupp[(partsupp['SUPPLYCOST'] < 847.7533145535109) | (partsupp['P_COMMENT'] == 'o') & (partsupp['P_COMMENT'] == 'ly ') | (partsupp['P_COMMENT'] == 'g') | (partsupp['PS_PARTKEY'] < 4)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['COMMITDATE', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'L_ORDERKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY']].groupby(by=['L_ORDERKEY', 'QUANTITY', 'SHIPMODE', 'L_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE'])) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['EXTENDEDPRICE'] <= 75311.36174599284) | (lineitem['EXTENDEDPRICE'] < 57261.159833342266) & (lineitem['L_COMMENT'] == 'p')][['L_PARTKEY', 'SHIPMODE', 'SHIPDATE', 'LINENUMBER']].groupby(by=['SHIPMODE', 'LINENUMBER', 'L_PARTKEY', 'SHIPDATE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON'])) & (lineitem['EXTENDEDPRICE'] >= 3803.8082244854613) & (lineitem['EXTENDEDPRICE'] > 60480.50437002251) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] <= 0.01481028562958946) | (lineitem['TAX'] != 0.07129996144950242)][['TAX', 'SHIPDATE', 'L_COMMENT', 'DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPMODE']]

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'AIR'])) | (lineitem['L_COMMENT'] == 'd') | (lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['TAX'] != 0.05491287951025763) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['LINESTATUS'] == 'O') & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['DISCOUNT'] <= 0.055122969362799736) | (lineitem['EXTENDEDPRICE'] != 12425.643582337978)].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'RETURNFLAG', 'DISCOUNT', 'L_COMMENT', 'L_PARTKEY', 'SHIPDATE', 'RECEIPTDATE', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE']].groupby(by=['SHIPDATE', 'DISCOUNT', 'L_PARTKEY', 'SHIPMODE', 'RECEIPTDATE']).agg('max', numeric_only=True)

lineitem[['DISCOUNT', 'LINESTATUS', 'QUANTITY', 'L_COMMENT', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 16372) | (orders['CLERK'].str.startswith('C'))][['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'EXTENDEDPRICE', 'SHIPDATE', 'L_ORDERKEY']].merge(orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'ORDERSTATUS']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'L_ORDERKEY', 'QUANTITY']].merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']).agg('count')

lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 103) | (partsupp['PS_PARTKEY'] == 10) & (partsupp['SUPPLYCOST'] == 875.1226657165886) & (partsupp['PS_PARTKEY'] >= 1) | (partsupp['PS_SUPPKEY'] <= 4696)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'SHIPDATE', 'TAX', 'LINESTATUS', 'L_PARTKEY', 'COMMITDATE', 'EXTENDEDPRICE']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_COMMENT'] != 'c') & (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] != 2) | (nation['N_NAME'].str.startswith('U'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] != 'V') & (nation['N_REGIONKEY'] < 1) | (nation['N_REGIONKEY'] > 1)].merge(region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] != 'r')].merge(region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NATIONKEY'] >= 13)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_NAME'] != 'A') & (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_COMMENT'] == 'e') | (nation['N_NAME'].str.startswith('K'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] == 9) & (nation['N_NATIONKEY'] <= 10) & (nation['N_NATIONKEY'] == 12)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'] != 'n')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] <= 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'E') | (nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] <= 7)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] == 'E')].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('R'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_NATIONKEY'] == 13)].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) & (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] >= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'] == 'U')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] > 14) | (nation['N_NAME'] != 'U') | (nation['N_NATIONKEY'] == 16)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'M')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'E') & (region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'].str.startswith('p'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] < 3) & (nation['N_NATIONKEY'] == 8)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] != 'P')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('s')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 20) | (customer['C_PHONE'].str.startswith('18-')) & (customer['MKTSEGMENT'] == 'MACHINERY')].merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_NATIONKEY'] >= 2) | (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] != 55) | (customer['C_PHONE'] != '18-') | (customer['C_ACCTBAL'] >= 4181.769726778009) | (customer['C_NATIONKEY'] > 2) | (customer['C_ACCTBAL'] >= 2803.2544108916404)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 18) & (customer['C_ADDRESS'] != 'd') & (customer['C_COMMENT'] == 'd') | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_COMMENT'] == 'i') | (customer['C_COMMENT'] != 's') | (customer['C_ADDRESS'] == 'U')].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] != '1')].merge(nation[(nation['N_NAME'] == 'C')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'i') | (customer['C_ACCTBAL'] != 6496.763450385154) | (customer['C_NATIONKEY'] > 20) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD']))].merge(nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_NATIONKEY'] < 23)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) & (customer['C_ACCTBAL'] != -761.7296029703537) | (customer['C_ACCTBAL'] == -412.2071200790313) | (customer['C_ACCTBAL'] >= 2976.6116104061275) & (customer['C_ACCTBAL'] == 3615.331884628681) | (customer['C_ACCTBAL'] <= 5923.144091963775)].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] < 20)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] < 26372) & (orders['O_ORDERKEY'] < 735)][['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY']].groupby(by=['CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C')].merge(customer[(customer['C_CUSTKEY'] != 2) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] <= 6) & (customer['C_ACCTBAL'] <= 5481.938618024778) | (customer['C_NATIONKEY'] <= 18)][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] == 379) & (orders['ORDERDATE'] == '1992-01-13')].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] >= 1726.8569079831254) & (customer['C_ACCTBAL'] <= 6095.463144534537) & (customer['C_COMMENT'] != 's')][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] >= 142166) | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERDATE'] <= '1998-07-21')][['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_PHONE'] == '25-') & (customer['C_ACCTBAL'] > 6499.086017858278)][['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] != 75712.40329567458) | (orders['O_COMMENT'] == 'y') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['TOTALPRICE'] >= 260618.29038151883)][['TOTALPRICE', 'ORDERSTATUS']].groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('count')

orders[(orders['ORDERSTATUS'].isin(['O', 'F']))].merge(customer[(customer['C_CUSTKEY'] > 74) & (customer['C_CUSTKEY'] < 17) & (customer['C_ADDRESS'] != 'v') | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] != 3412.268183135785) & (customer['C_ACCTBAL'] > 9958.546501594978) & (customer['C_CUSTKEY'] > 19)][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'o') & (orders['SHIPPRIORITY'] != 0) & (orders['O_ORDERKEY'] != 798) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'].str.startswith('l'))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 96604) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] != '5-LOW')][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK']].groupby(by=['TOTALPRICE', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 3854) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_CUSTKEY'] == 148087)][['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']].groupby(by=['CLERK', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 219)].merge(customer[(customer['C_COMMENT'].str.startswith('g')) | (customer['C_ACCTBAL'] >= 3878.077926347032) & (customer['C_PHONE'].str.startswith('2')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY'])) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] == 2577.2281723914352)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 684) & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] == 66) | (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_ORDERKEY'] >= 478) & (orders['O_ORDERKEY'] >= 585) & (orders['SHIPPRIORITY'] >= 0)][['ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 427) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['TOTALPRICE'] <= 12432.850155995706) | (orders['TOTALPRICE'] >= 31226.49808102726) | (orders['ORDERDATE'] < '1992-01-13')].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 228) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT']))][['ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] >= 762) | (orders['TOTALPRICE'] > 186951.61880528321) & (orders['TOTALPRICE'] <= 79782.0133702298) | (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERSTATUS'] == 'O') & (orders['O_ORDERKEY'] < 108)][['O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'O_COMMENT']].groupby(by=['O_CUSTKEY', 'O_ORDERKEY', 'CLERK']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'].str.startswith('g')) | (orders['O_ORDERKEY'] >= 294) | (orders['O_COMMENT'] != 'r')].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] < 0)][['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].groupby(by=['CLERK', 'O_COMMENT']).agg('count')

orders[(orders['TOTALPRICE'] <= 61526.42043371852) | (orders['O_COMMENT'] != ',')].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] == 8151.223750703928) | (customer['C_NATIONKEY'] != 9)][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 352745.4089595053) | (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] != 'C') | (orders['O_COMMENT'] == '.')].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] != 1027.4942027845448) | (customer['C_PHONE'].str.startswith('2')) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] < 18) & (customer['C_ADDRESS'].str.startswith('u'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 60769.94812256034) & (orders['O_COMMENT'] != 'u') | (orders['TOTALPRICE'] <= 305221.3000488918) | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'].str.startswith('r'))].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) & (customer['C_ADDRESS'] != 'S') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith('k')) | (customer['C_ACCTBAL'] >= 1222.4472104726724) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 94) | (customer['C_PHONE'] != '1')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != 'u') & (customer['C_COMMENT'].str.startswith('c')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '27-')][['C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#22', 'Brand#15', 'Brand#52', 'Brand#33', 'Brand#55', 'Brand#25', 'Brand#23', 'Brand#43', 'Brand#53', 'Brand#44', 'Brand#14', 'Brand#34', 'Brand#12', 'Brand#41', 'Brand#51', 'Brand#32', 'Brand#45', 'Brand#35', 'Brand#31', 'Brand#24', 'Brand#21', 'Brand#54', 'Brand#42'])) & (part['TYPE'].str.startswith('SMA')) | (part['BRAND'] == 'Brand#23') | (part['MFGR'] == 'Manufacturer#1') & (part['TYPE'].str.startswith('SMA')) | (part['CONTAINER'] == 'MED')][['P_NAME', 'BRAND', 'MFGR', 'P_PARTKEY']].groupby(by=['MFGR', 'P_NAME', 'P_PARTKEY']).agg('count')

part[(part['BRAND'].isin(['Brand#53', 'Brand#45', 'Brand#41', 'Brand#23', 'Brand#43', 'Brand#54', 'Brand#35', 'Brand#25', 'Brand#34', 'Brand#52', 'Brand#12', 'Brand#55'])) & (part['P_NAME'].str.startswith('d')) | (part['P_NAME'] == 'blu')][['P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['PT_COMMENT', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] >= 180) & (part['P_PARTKEY'] == 181) | (part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#4') & (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] >= 37)][['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'MFGR']].groupby(by=['P_PARTKEY']).agg('count')

part[(part['CONTAINER'].str.startswith('MED')) & (part['CONTAINER'] != 'JUMBO') & (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'].str.startswith('s')) | (part['SIZE'] != 8)][['P_NAME', 'PT_COMMENT', 'SIZE', 'TYPE']].groupby(by=['TYPE', 'SIZE', 'PT_COMMENT', 'P_NAME']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] == 'Manufacturer#2') & (part['P_PARTKEY'] < 9) | (part['P_NAME'] == 'a') | (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] >= 127) & (part['SIZE'] >= 6) | (part['SIZE'] != 42) & (part['SIZE'] <= 6)][['P_PARTKEY', 'BRAND', 'MFGR']].groupby(by=['MFGR']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('!')) & (part['RETAILPRICE'] == 1085.3233367981052) & (part['TYPE'] == 'S') | (part['RETAILPRICE'] < 910.5956249856379) & (part['TYPE'] == 'SMA') | (part['P_NAME'].str.startswith('lem')) & (part['RETAILPRICE'] != 989.8685721696736) & (part['P_PARTKEY'] != 141) & (part['CONTAINER'] == 'SM')][['P_PARTKEY', 'TYPE', 'BRAND']].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['P_NAME'] == 'h') | (part['SIZE'] != 37) & (part['SIZE'] != 18) | (part['P_NAME'] != 'i')][['P_NAME', 'MFGR', 'SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'RETAILPRICE']).agg('count')

part[(part['P_NAME'].str.startswith('cor')) & (part['MFGR'] == 'Manufacturer#4') & (part['CONTAINER'] != 'JUMBO') & (part['RETAILPRICE'] != 916.0341927605831) & (part['P_NAME'] != 'w') & (part['PT_COMMENT'].str.startswith('w')) & (part['BRAND'] != 'Brand#41')][['RETAILPRICE', 'CONTAINER', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['P_NAME'].str.startswith('h')) | (part['BRAND'].isin(['Brand#43', 'Brand#24', 'Brand#22', 'Brand#13', 'Brand#42', 'Brand#25', 'Brand#35', 'Brand#15', 'Brand#32'])) | (part['PT_COMMENT'].str.startswith('n')) & (part['BRAND'] != 'Brand#12') | (part['TYPE'].str.startswith('L')) | (part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'].str.startswith('c')) | (part['MFGR'].isin(['Manufacturer#4'])) | (part['SIZE'] != 8)][['BRAND', 'MFGR', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'TYPE']]

part[(part['P_PARTKEY'] < 173) & (part['RETAILPRICE'] <= 1034.587997134065) & (part['RETAILPRICE'] == 1090.4588051327516) | (part['BRAND'] != 'Brand#21') | (part['SIZE'] != 20) | (part['BRAND'] != 'Brand#52') | (part['P_PARTKEY'] <= 2) & (part['TYPE'] != 'L') & (part['RETAILPRICE'] == 1066.9316092901208)][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER']]

part[(part['P_PARTKEY'] <= 71) | (part['CONTAINER'] == 'WRAP') & (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] < 962.4317431016157) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] == 'k') | (part['SIZE'] != 19)][['P_NAME', 'BRAND', 'CONTAINER', 'RETAILPRICE']].groupby(by=['P_NAME', 'BRAND']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] > 61)][['P_PARTKEY', 'TYPE', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND']].groupby(by=['P_NAME', 'BRAND', 'SIZE', 'RETAILPRICE', 'MFGR']).agg('count')

part[(part['P_PARTKEY'] >= 92) & (part['SIZE'] == 5) | (part['RETAILPRICE'] > 942.8345563964606) | (part['BRAND'].isin(['Brand#43', 'Brand#53', 'Brand#42', 'Brand#25', 'Brand#41', 'Brand#15', 'Brand#24', 'Brand#21', 'Brand#22', 'Brand#55', 'Brand#44', 'Brand#54', 'Brand#13', 'Brand#31', 'Brand#23', 'Brand#34', 'Brand#11'])) & (part['PT_COMMENT'] != '!') | (part['P_NAME'] != 'd') | (part['P_NAME'] != 'lem') & (part['TYPE'] != 'S') | (part['PT_COMMENT'] != 'a')][['P_NAME', 'CONTAINER', 'MFGR', 'SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']]

part[(part['RETAILPRICE'] != 1020.3380812871732) | (part['MFGR'] == 'Manufacturer#2') | (part['TYPE'].str.startswith('L')) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3'])) & (part['SIZE'] <= 8) | (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] > 102) & (part['P_NAME'].str.startswith('cor')) & (part['PT_COMMENT'] != 'u')][['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']]

part[(part['RETAILPRICE'] != 1031.3767658471515) & (part['MFGR'] == 'Manufacturer#3') & (part['BRAND'] != 'Brand#33') & (part['BRAND'] == 'Brand#21') & (part['P_NAME'].str.startswith('s')) | (part['SIZE'] == 23) | (part['P_NAME'] == 'm') & (part['PT_COMMENT'].str.startswith('b')) | (part['CONTAINER'] == 'MED')][['BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR', 'RETAILPRICE', 'SIZE', 'TYPE']]

part[(part['RETAILPRICE'] >= 914.3727439373075) & (part['TYPE'] != 'M') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1'])) & (part['TYPE'] == 'SMA') & (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'].str.startswith('LG')) | (part['MFGR'] == 'Manufacturer#2') | (part['MFGR'] == 'Manufacturer#3') & (part['RETAILPRICE'] == 984.8628626456598)][['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR']]

part[(part['TYPE'] == 'L') & (part['TYPE'] != 'L') | (part['BRAND'] == 'Brand#12') & (part['SIZE'] <= 9) & (part['RETAILPRICE'] < 1053.1262105860533) | (part['RETAILPRICE'] < 1010.7089645475362) | (part['SIZE'] != 22) & (part['P_NAME'] != 'y')][['MFGR', 'TYPE', 'CONTAINER']].groupby(by=['CONTAINER', 'MFGR']).agg('max', numeric_only=True)

part[(part['TYPE'].str.startswith('M')) | (part['P_NAME'] == 'p') | (part['P_NAME'] != 'w') & (part['PT_COMMENT'].str.startswith('f'))][['BRAND', 'MFGR', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('S'))][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['PT_COMMENT', 'CONTAINER', 'P_NAME']).agg('max', numeric_only=True)

partsupp.merge(part[(part['BRAND'].isin(['Brand#55', 'Brand#14', 'Brand#45', 'Brand#31'])) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) | (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'].str.startswith('r')) | (part['PT_COMMENT'] != 'q')][['BRAND', 'TYPE', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('count')

partsupp.merge(part[(part['P_PARTKEY'] == 17) | (part['BRAND'] == 'Brand#55')][['BRAND', 'MFGR', 'P_PARTKEY', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'SIZE', 'MFGR']).agg('max', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] > 17) & (part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] <= 27) | (part['RETAILPRICE'] != 990.5462745004702) | (part['BRAND'] == 'Brand#11') & (part['P_NAME'].str.startswith('b'))][['P_PARTKEY', 'SIZE', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['RETAILPRICE'] < 1004.4492447642433) & (part['TYPE'] == 'M') & (part['P_NAME'] == 'm') | (part['RETAILPRICE'] < 1079.191278066482)][['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'CONTAINER']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 16) | (supplier['S_PHONE'] == '26-') | (supplier['S_ACCTBAL'] == 3630.976512206482) & (supplier['S_ADDRESS'] == 'D') & (supplier['S_NATIONKEY'] == 5)][['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 1035)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 9935) & (partsupp['PS_SUPPKEY'] <= 2816) | (partsupp['SUPPLYCOST'] < 548.4209472296197) & (partsupp['PS_PARTKEY'] < 6)].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 3722) & (partsupp['SUPPLYCOST'] < 173.8419699637495) | (partsupp['AVAILQTY'] != 6421) | (partsupp['P_COMMENT'].str.startswith(' '))][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].groupby(by=['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 8301) | (partsupp['PS_PARTKEY'] < 41) & (partsupp['PS_PARTKEY'] != 15)].merge(part[(part['PT_COMMENT'] != ' ') & (part['MFGR'] == 'Manufacturer#1') | (part['P_NAME'] == 'lin') & (part['BRAND'] == 'Brand#34') & (part['RETAILPRICE'] > 1081.3296667818333) & (part['SIZE'] <= 48) & (part['BRAND'].isin(['Brand#12', 'Brand#44', 'Brand#33', 'Brand#51', 'Brand#53']))][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 4795) | (partsupp['PS_SUPPKEY'] > 5756) | (partsupp['AVAILQTY'] <= 4531) & (partsupp['PS_SUPPKEY'] <= 3872)].merge(part[['CONTAINER', 'P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 9711)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 9819.093745997125) & (supplier['S_ADDRESS'] == 't') & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_PHONE'].str.startswith('2'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 2665) & (partsupp['PS_PARTKEY'] <= 49) & (partsupp['AVAILQTY'] < 5377) & (partsupp['P_COMMENT'].str.startswith('v'))].merge(part[(part['BRAND'] != 'Brand#51') | (part['BRAND'] == 'Brand#34') & (part['P_PARTKEY'] >= 145) | (part['CONTAINER'] != 'JUMBO') | (part['BRAND'] == 'Brand#54') & (part['SIZE'] != 16) & (part['P_NAME'] == 'b') & (part['TYPE'] != 'P') & (part['P_PARTKEY'] >= 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 32) | (partsupp['SUPPLYCOST'] >= 163.11165743286438) | (partsupp['PS_SUPPKEY'] >= 3014)].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 16)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] > 110) & (supplier['S_SUPPKEY'] > 112)][['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 7) & (partsupp['AVAILQTY'] > 2319)][['PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 2)].merge(part[(part['P_NAME'] == 'o') & (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'L') & (part['BRAND'] != 'Brand#54') & (part['PT_COMMENT'].str.startswith('m')) & (part['MFGR'] == 'Manufacturer#3') | (part['BRAND'] == 'Brand#11') & (part['P_NAME'] == 'g') & (part['P_PARTKEY'] >= 103)][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 24)].merge(part[(part['BRAND'] != 'Brand#53') | (part['P_NAME'].str.startswith('w')) | (part['BRAND'] != 'Brand#21') | (part['P_PARTKEY'] < 168) & (part['SIZE'] >= 32)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'P_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 5704) & (partsupp['SUPPLYCOST'] > 495.68957788577114)].merge(part[['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'BRAND']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4252) | (partsupp['PS_PARTKEY'] == 17) & (partsupp['SUPPLYCOST'] >= 39.931942616807646) | (partsupp['SUPPLYCOST'] >= 573.5152872975443) & (partsupp['PS_PARTKEY'] <= 15)][['PS_PARTKEY']].merge(part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 6409)].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 2350) & (partsupp['PS_SUPPKEY'] != 5342) & (partsupp['SUPPLYCOST'] < 19.023474368114073) & (partsupp['SUPPLYCOST'] >= 904.3969430472443)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 7426)].merge(part[['P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ',') & (partsupp['PS_SUPPKEY'] != 2530) & (partsupp['AVAILQTY'] == 5635) & (partsupp['PS_SUPPKEY'] == 1596)].merge(part[(part['P_NAME'].str.startswith('lin')) & (part['CONTAINER'] == 'SM') & (part['BRAND'] == 'Brand#11') | (part['BRAND'] != 'Brand#22') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) | (part['P_PARTKEY'] < 122) & (part['TYPE'] == 'STA') | (part['BRAND'].isin(['Brand#45', 'Brand#44', 'Brand#25', 'Brand#15'])) & (part['P_PARTKEY'] >= 8)], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'are') | (partsupp['AVAILQTY'] != 5777) & (partsupp['P_COMMENT'] == 'f') | (partsupp['SUPPLYCOST'] >= 83.70637216718646) | (partsupp['PS_SUPPKEY'] > 2595)].merge(part[(part['PT_COMMENT'] == 'q') | (part['RETAILPRICE'] < 948.1569019329924) | (part['BRAND'] == 'Brand#12') | (part['PT_COMMENT'].str.startswith(' ')) | (part['MFGR'] == 'Manufacturer#1') | (part['CONTAINER'] == 'WRAP') | (part['SIZE'] == 32) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3']))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'p') | (partsupp['PS_PARTKEY'] > 30) | (partsupp['PS_SUPPKEY'] >= 4863) & (partsupp['P_COMMENT'].str.startswith('k')) | (partsupp['SUPPLYCOST'] != 470.9766086032087)].merge(part[['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != 'q') & (partsupp['PS_SUPPKEY'] < 3478)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'x') & (partsupp['P_COMMENT'] != 'g')][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['SUPPLYCOST'] != 600.7340240822485) & (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['P_COMMENT'] != '.') | (partsupp['PS_PARTKEY'] < 12)].merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 223.9737823151449) | (partsupp['P_COMMENT'] != 'p') | (partsupp['PS_PARTKEY'] < 7)].merge(part[(part['BRAND'].isin(['Brand#41', 'Brand#23', 'Brand#45'])) & (part['CONTAINER'] == 'SM') & (part['P_PARTKEY'] != 54)][['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 600.7600876514869) | (partsupp['P_COMMENT'] != 'bli') & (partsupp['SUPPLYCOST'] <= 117.41046317690711) | (partsupp['PS_PARTKEY'] != 9)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] != 'kag') & (part['BRAND'] == 'Brand#35') & (part['P_NAME'] != 'g')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] == 380.20610732948484) & (partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['PS_PARTKEY'] != 11) | (partsupp['P_COMMENT'].str.startswith('d'))].merge(part[(part['BRAND'].isin(['Brand#15', 'Brand#24', 'Brand#33', 'Brand#42', 'Brand#14', 'Brand#41', 'Brand#35', 'Brand#44', 'Brand#13', 'Brand#12', 'Brand#31', 'Brand#51', 'Brand#54', 'Brand#52', 'Brand#34', 'Brand#45', 'Brand#43', 'Brand#23', 'Brand#21', 'Brand#55', 'Brand#22', 'Brand#25', 'Brand#32', 'Brand#11'])) | (part['TYPE'] != 'SMA') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['P_PARTKEY'] >= 55)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 804.5913292432291) & (partsupp['PS_SUPPKEY'] > 37) & (partsupp['SUPPLYCOST'] != 504.0970655047803) & (partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['P_COMMENT'].str.startswith('c'))].merge(supplier.merge(nation[(nation['N_NAME'] == 'P') | (nation['N_NATIONKEY'] >= 13)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 157.04909483708363) | (partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['AVAILQTY'] <= 6537) | (partsupp['AVAILQTY'] <= 4772) & (partsupp['SUPPLYCOST'] > 667.2691756806172)][['PS_PARTKEY']].merge(part[(part['TYPE'] != 'M') & (part['P_NAME'] != 'p') & (part['P_NAME'] != 'v') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#2')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] < 2) & (part['SIZE'] == 6) | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] == 91) & (part['P_PARTKEY'] < 78) | (part['P_PARTKEY'] <= 80)][['P_PARTKEY', 'BRAND', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'G')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= -204.17893657474042) & (supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'] != 'C') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != '0') | (supplier['S_ADDRESS'].str.startswith('C'))][['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] <= 964.1591835572688) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['BRAND'].isin(['Brand#45', 'Brand#54', 'Brand#25']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('f')) | (part['P_NAME'] != 'k') & (part['MFGR'] != 'Manufacturer#5')][['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'RETAILPRICE']).agg('count')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] < 8) | (supplier['S_COMMENT'] != 'al ') | (supplier['S_SUPPKEY'] <= 121) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('M'))][['S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 9) & (nation['N_NATIONKEY'] <= 15)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] != 14) & (nation['N_NAME'] != 'I') & (nation['N_COMMENT'] != 'l')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NAME'] != 'P') & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] >= 1)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] == 0) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] < 836.8916013653252) | (supplier['S_NATIONKEY'] != 5) & (supplier['S_ADDRESS'] != 'I') | (supplier['S_ADDRESS'].str.startswith('O')) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('Z'))].merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 5900.142660123732) | (supplier['S_ACCTBAL'] < 1099.257900755684) & (supplier['S_ADDRESS'] == 'q') & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'L')][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 1400.3664087135737) | (supplier['S_PHONE'] == '2') | (supplier['S_COMMENT'].str.startswith('k'))][['S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'H') | (supplier['S_COMMENT'] != 'i') & (supplier['S_NATIONKEY'] != 5) & (supplier['S_ADDRESS'].str.startswith('J'))].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] >= 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] != 'e') | (supplier['S_PHONE'] != '2') | (supplier['S_NATIONKEY'] == 18) & (supplier['S_ACCTBAL'] < 9009.775498940739) & (supplier['S_ACCTBAL'] != 9325.07516031702)][['S_COMMENT', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'al ') | (supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] != 'g')][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'u') | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'r') | (supplier['S_ADDRESS'] != 'R') & (supplier['S_NATIONKEY'] >= 0) | (supplier['S_ACCTBAL'] <= 6885.474529294339) | (supplier['S_NAME'] != 'S')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] == 'a') & (supplier['S_SUPPKEY'] >= 119) | (supplier['S_COMMENT'] == 'e') & (supplier['S_ADDRESS'] != 'J')][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('k'))].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'V')].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('the')) | (supplier['S_COMMENT'] != 'y') | (supplier['S_NATIONKEY'] >= 11) | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('17-'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('x')) & (supplier['S_SUPPKEY'] <= 26) & (supplier['S_ACCTBAL'] <= -773.302410272866) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 178) | (supplier['S_PHONE'] != '32-') | (supplier['S_COMMENT'] != 'e')].merge(nation[(nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 4) & (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_NATIONKEY'] <= 14)].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] > 0) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 1) & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] == 6144.988463020746) & (supplier['S_ACCTBAL'] != 5467.334321577044) & (supplier['S_ADDRESS'] == 'r')][['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].groupby(by=['S_NAME', 'S_PHONE', 'S_ADDRESS']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 10) | (supplier['S_COMMENT'] != 'e') & (supplier['S_COMMENT'] == 'c')].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'A') | (nation['N_NAME'] != 'M')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'] == 'x') & (supplier['S_COMMENT'] == 'j') | (supplier['S_COMMENT'] != ' ')].merge(nation[(nation['N_REGIONKEY'] >= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '3') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '32-')].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_COMMENT'] != ' ') & (nation['N_NAME'] == 'P')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_ACCTBAL'] != 3738.419185166341) & (supplier['S_ACCTBAL'] > 8597.173389574344)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] == '17-')][['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT']].groupby(by=['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '32-') | (supplier['S_ACCTBAL'] < 7604.42219785086) & (supplier['S_SUPPKEY'] > 9) & (supplier['S_SUPPKEY'] != 195) & (supplier['S_ADDRESS'] == '9')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'] == '1')].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] <= 23) & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_SUPPKEY'] != 194) | (supplier['S_COMMENT'].str.startswith('s')) & (supplier['S_ADDRESS'] != 'W')].merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_NAME'] == 'U')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 164) | (supplier['S_NATIONKEY'] == 13) | (supplier['S_SUPPKEY'] != 48) & (supplier['S_COMMENT'] == 't') | (supplier['S_COMMENT'] != 'al ')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 135) | (supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'].str.startswith('z'))][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 160) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 100) & (supplier['S_ACCTBAL'] <= 5143.361039157102) & (supplier['S_NATIONKEY'] != 10) & (supplier['S_ADDRESS'] != 'u') & (supplier['S_ACCTBAL'] >= 771.2426552759409) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].groupby(by=['S_SUPPKEY']).agg('count')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 6)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] == 22)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] > 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'E') | (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] > 3)].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'l')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'h')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 10)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] > 14)].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 13) | (nation['N_NAME'].str.startswith('U')) | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] == ' ') | (nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] <= 2)].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_ACCTBAL'] != 5487.98610397961) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'c') | (customer['C_PHONE'] == '18-') & (customer['C_NATIONKEY'] == 15) & (customer['C_ADDRESS'] == 'H') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_ADDRESS'] == 'T')].merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < 8549.232434201414) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'n') | (customer['C_COMMENT'] != 'y') | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_PHONE'] == '2')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] <= 8715.5972945684) & (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] <= 9148.500623135546) & (customer['C_NATIONKEY'] != 1) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] >= 8) & (customer['C_NATIONKEY'] == 9) | (customer['C_CUSTKEY'] < 92) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] > 1643.649988999793)].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] == 23)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'P') | (customer['C_NATIONKEY'] != 6) | (customer['C_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] > 18)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('T')) & (customer['C_NATIONKEY'] <= 8) | (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 8536.361512187113) | (customer['C_CUSTKEY'] != 67)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].groupby(by=['C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] == 'a') | (customer['C_ADDRESS'].str.startswith('6')) & (customer['C_COMMENT'] == 'g') | (customer['C_ACCTBAL'] < 6897.532371672185)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_NAME', 'C_COMMENT', 'C_PHONE', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['C_COMMENT'] == 'k') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_ADDRESS'].str.startswith('H')) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ACCTBAL'] > 8759.319063023477) | (customer['C_PHONE'] != '3')].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'].str.startswith('F'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'w') | (customer['C_ADDRESS'] != 'w') | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_CUSTKEY'] != 16) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] == 4) | (nation['N_NAME'] != 'G')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('q')) & (customer['C_NATIONKEY'] < 16)].merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] == 2) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 6) | (customer['C_ADDRESS'].str.startswith('x')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_PHONE'] == '2') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 8995.222356084147) & (customer['C_NATIONKEY'] <= 21) & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 39) & (customer['C_ADDRESS'].str.startswith('9')) | (customer['C_COMMENT'] == 'q')].merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 65) & (customer['C_PHONE'] != '18-')].merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] > 2) | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] <= 66) & (customer['C_ACCTBAL'] >= 8528.330484162992) | (customer['C_ADDRESS'].str.startswith('6')) | (customer['C_NATIONKEY'] < 22)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 20) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] > 12)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 64) | (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] > 46) & (customer['C_NATIONKEY'] < 18) & (customer['C_COMMENT'] != 'c')].merge(nation[(nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] == 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'k') | (customer['C_ADDRESS'] != 'M') | (customer['C_ADDRESS'] != 'z')][['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('c')) & (customer['C_PHONE'].str.startswith('25-')) & (customer['C_COMMENT'] != 'y') & (customer['C_ACCTBAL'] <= -339.9740266291251)].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] != 10) | (nation['N_NAME'] != 'R')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] == 18) & (customer['C_CUSTKEY'] == 63)].merge(nation[(nation['N_NATIONKEY'] > 6) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith('t')) & (customer['C_CUSTKEY'] >= 31) & (customer['C_COMMENT'].str.startswith('.'))].merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] < 10)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 4) & (customer['C_NATIONKEY'] >= 6) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 5169.24256052371) | (customer['C_NATIONKEY'] <= 12) | (customer['C_PHONE'].str.startswith('2'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']].groupby(by=['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 11) & (customer['C_NATIONKEY'] <= 21) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] == 'r') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'] == '2') | (customer['C_COMMENT'] == 'd') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 11) | (customer['C_PHONE'] == '3') | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 19)].merge(nation[(nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 5) & (customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] < 930.5678487487783) & (customer['C_ADDRESS'] != 'M') | (customer['C_ADDRESS'].str.startswith('c'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] <= 19) & (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '3') | (customer['C_CUSTKEY'] < 92) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_ADDRESS'] == 'K') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] < 6) & (customer['C_ACCTBAL'] == 925.4057084032811)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] <= 3)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_ADDRESS'] == 'p') | (customer['C_ACCTBAL'] >= 6090.144389688847) & (customer['C_COMMENT'].str.startswith('t')) & (customer['C_ADDRESS'].str.startswith('E')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ACCTBAL'] != 4315.15143088754)].merge(nation[(nation['N_COMMENT'] == 's')].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_ADDRESS'].str.startswith('q')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_NAME'] == 'C')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == '.') | (customer['C_ACCTBAL'] < 604.5573575396286) | (customer['C_ADDRESS'].str.startswith('q'))].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING'])) | (customer['C_COMMENT'].str.startswith('a')) & (customer['C_CUSTKEY'] < 94) | (customer['C_NATIONKEY'] >= 1)].merge(nation[(nation['N_NAME'] != 'R')].merge(region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'l')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

customer[['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] >= 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'].str.startswith('K'))].merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] <= 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer.merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'r') & (customer['C_NATIONKEY'] >= 17) & (customer['C_COMMENT'] == 'g') & (customer['C_NATIONKEY'] <= 11) | (customer['C_ACCTBAL'] == 4939.7931448781055)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '2') | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_ACCTBAL'] != 8363.39060540661)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 101334.6750906995)][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 185) & (supplier['S_COMMENT'] == 'h') | (supplier['S_SUPPKEY'] <= 107) | (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'l')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 176) | (supplier['S_COMMENT'] != 's') | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] != 0) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1475)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('g')) | (supplier['S_PHONE'] != '28-') | (supplier['S_COMMENT'] != 'a')][['S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 4297) | (partsupp['PS_PARTKEY'] > 42)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#21') | (part['CONTAINER'].str.startswith('JUMBO'))][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'STA') & (part['TYPE'].str.startswith('S')) | (part['MFGR'] == 'Manufacturer#5') | (part['BRAND'] == 'Brand#34')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1998-10-16')][['EXTENDEDPRICE', 'LINENUMBER', 'L_SUPPKEY', 'TAX']].merge(partsupp.merge(part[['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_PARTKEY'] <= 66571) & (lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'MAIL', 'REG AIR'])) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['DISCOUNT'] > 0.01145617452641653) | (lineitem['L_SUPPKEY'] == 7454)].merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['O'])) & (orders['O_ORDERKEY'] <= 270) & (orders['TOTALPRICE'] == 296793.16229467397) | (orders['ORDERSTATUS'] == 'F') | (orders['O_CUSTKEY'] > 43823) | (orders['O_ORDERKEY'] == 615)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] != 3) | (lineitem['L_COMMENT'] != 't')][['LINESTATUS', 'COMMITDATE', 'SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'TAX', 'EXTENDEDPRICE']].groupby(by=['SHIPDATE', 'EXTENDEDPRICE', 'COMMITDATE', 'SHIPMODE', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 6) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['DISCOUNT'] >= 0.09864342833455016) & (lineitem['DISCOUNT'] != 0.003169024829296707) & (lineitem['L_COMMENT'] != 'u') & (lineitem['L_ORDERKEY'] > 186) | (lineitem['TAX'] >= 0.07732988296033785)][['EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'SHIPDATE', 'COMMITDATE', 'LINENUMBER', 'SHIPMODE', 'L_SUPPKEY', 'L_COMMENT', 'TAX']]

lineitem[(lineitem['LINENUMBER'] >= 6) | (lineitem['L_COMMENT'] != 'y') & (lineitem['LINENUMBER'] <= 4) | (lineitem['L_PARTKEY'] <= 15930) | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['LINENUMBER'] < 6) | (lineitem['QUANTITY'] != 46)][['RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'L_PARTKEY', 'TAX']].groupby(by=['DISCOUNT']).agg('count')

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['L_COMMENT'].str.startswith('n')) & (lineitem['EXTENDEDPRICE'] == 61825.51028417278) | (lineitem['EXTENDEDPRICE'] == 68104.3523844455)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 460.57612646239954) & (partsupp['PS_PARTKEY'] != 42) & (partsupp['PS_SUPPKEY'] > 1408) | (partsupp['AVAILQTY'] <= 6605)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] != 'k')][['DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'QUANTITY']].merge(orders[['TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 'b') & (lineitem['LINENUMBER'] != 6)][['COMMITDATE', 'DISCOUNT', 'L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'LINENUMBER']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 39) & (lineitem['L_SUPPKEY'] >= 467) & (lineitem['L_PARTKEY'] != 30003) & (lineitem['LINENUMBER'] > 1) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) & (lineitem['QUANTITY'] >= 48)].merge(partsupp[(partsupp['PS_SUPPKEY'] == 4432) | (partsupp['AVAILQTY'] <= 3897) | (partsupp['AVAILQTY'] == 397) & (partsupp['PS_SUPPKEY'] < 5644) & (partsupp['P_COMMENT'].str.startswith('v'))].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] > 109) & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['L_COMMENT'] == 't')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 14)].merge(part[(part['P_NAME'] != 'o') | (part['SIZE'] != 40) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3'])) | (part['PT_COMMENT'].str.startswith('h'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] <= 193341)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 62.004817901596596) & (partsupp['PS_PARTKEY'] >= 45) & (partsupp['PS_PARTKEY'] <= 41) | (partsupp['PS_PARTKEY'] > 5) & (partsupp['PS_PARTKEY'] == 13)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] == 145359) | (lineitem['LINESTATUS'] == 'O') | (lineitem['DISCOUNT'] == 0.08559054223801787) | (lineitem['L_PARTKEY'] != 122032) | (lineitem['TAX'] == 0.020606251835543272) | (lineitem['DISCOUNT'] == 0.0147473693590778)][['QUANTITY', 'SHIPDATE', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['L_COMMENT', 'SHIPDATE', 'QUANTITY', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] > 106567) & (lineitem['L_ORDERKEY'] > 149)].merge(partsupp.merge(supplier.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['QUANTITY'] != 7) & (lineitem['EXTENDEDPRICE'] != 67656.92367947349)].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_SUPPKEY'] != 9322) | (lineitem['QUANTITY'] == 13) & (lineitem['SHIPMODE'].isin(['AIR', 'MAIL', 'FOB', 'RAIL', 'SHIP', 'REG AIR', 'TRUCK']))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'SIZE']).agg('count')

lineitem[(lineitem['RETURNFLAG'] != 'R')][['QUANTITY', 'LINENUMBER', 'TAX', 'DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPMODE']].groupby(by=['QUANTITY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'LINENUMBER']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['L_COMMENT'].str.startswith('i')) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_SUPPKEY'] > 2716)].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R')].merge(orders[(orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] < 0)][['TOTALPRICE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['SHIPMODE'].isin(['SHIP', 'RAIL', 'TRUCK', 'AIR', 'REG AIR', 'MAIL', 'FOB'])) | (lineitem['TAX'] <= 0.0017143603021361642) & (lineitem['QUANTITY'] > 2) | (lineitem['QUANTITY'] < 4) & (lineitem['DISCOUNT'] > 0.004845220271158213) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_SUPPKEY'] != 5659)].merge(orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['BRAND'] == 'Brand#54') & (part['SIZE'] == 24) & (part['BRAND'] != 'Brand#24') & (part['MFGR'] != 'Manufacturer#3') & (part['P_PARTKEY'] == 141) | (part['SIZE'] == 20)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['EXTENDEDPRICE'] > 66646.74996026493) | (lineitem['L_PARTKEY'] == 61069) | (lineitem['LINENUMBER'] == 2) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['EXTENDEDPRICE'] > 37783.76091597741) & (lineitem['L_PARTKEY'] >= 119319) | (lineitem['L_PARTKEY'] >= 58470) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['SHIPDATE'] < '1992-04-27')][['EXTENDEDPRICE', 'COMMITDATE']].groupby(by=['COMMITDATE', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['SHIPMODE'] != 'RAIL') | (lineitem['L_SUPPKEY'] >= 7431) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD', 'DELIVER IN PERSON'])) & (lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['QUANTITY'] <= 15) & (lineitem['TAX'] == 0.054125002579064704) & (lineitem['L_ORDERKEY'] > 189) | (lineitem['EXTENDEDPRICE'] >= 63944.14917063769) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['EXTENDEDPRICE'] < 38227.71885428536) | (lineitem['LINENUMBER'] < 5) | (lineitem['RETURNFLAG'] == 'N')][['LINESTATUS', 'LINENUMBER', 'SHIPMODE']].groupby(by=['LINENUMBER', 'LINESTATUS']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['L_COMMENT'] != 'q')].merge(partsupp[(partsupp['SUPPLYCOST'] > 207.79930658525598) & (partsupp['SUPPLYCOST'] <= 594.8111199124302) & (partsupp['PS_PARTKEY'] != 20)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'RETAILPRICE', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.0645938678881558) | (lineitem['TAX'] < 0.05190625942204126) | (lineitem['L_SUPPKEY'] == 5208) | (lineitem['EXTENDEDPRICE'] == 56845.62350016864)][['LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE']].groupby(by=['TAX', 'EXTENDEDPRICE', 'LINESTATUS', 'L_SUPPKEY', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['TAX'] == 0.05771634348035841) & (lineitem['DISCOUNT'] > 0.0850238703772889) | (lineitem['DISCOUNT'] >= 0.0106339488895002)][['QUANTITY', 'COMMITDATE', 'LINENUMBER', 'SHIPDATE', 'RETURNFLAG', 'SHIPMODE']].groupby(by=['SHIPDATE', 'LINENUMBER', 'QUANTITY', 'SHIPMODE', 'COMMITDATE']).agg('max', numeric_only=True)

lineitem[['COMMITDATE', 'LINENUMBER', 'SHIPMODE', 'L_SUPPKEY', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['SUPPLYCOST'] != 420.8392773528557) | (partsupp['PS_PARTKEY'] >= 19)].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders[(orders['CLERK'].str.startswith('C'))].merge(customer[['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'TAX', 'L_PARTKEY', 'L_ORDERKEY', 'QUANTITY', 'L_SUPPKEY']].merge(orders[['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('p')) & (partsupp['PS_PARTKEY'] > 3)].merge(supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] < 152)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'COMMITDATE', 'L_ORDERKEY', 'SHIPDATE']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY']).agg('count')

lineitem[['L_COMMENT', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_SUPPKEY', 'L_ORDERKEY', 'DISCOUNT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'TAX', 'L_PARTKEY', 'RECEIPTDATE', 'COMMITDATE', 'L_COMMENT', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] == 49)].merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] != 17)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY', 'TAX', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(orders[(orders['O_COMMENT'].str.startswith('ly '))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('count')

nation[(nation['N_COMMENT'] != 'l') | (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] > 10)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] > 16) | (nation['N_NATIONKEY'] != 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'] != ' ')].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 'v') | (nation['N_NAME'] == 'K') | (nation['N_COMMENT'] != 'r')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_NAME'] != 'C')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] != 1)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] >= 1) | (nation['N_COMMENT'] != 'r') | (nation['N_COMMENT'] != 'l')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'E') & (nation['N_COMMENT'] == 'n') & (nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] == 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_NAME'].str.startswith('A'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] >= 7) & (nation['N_NAME'] == 'V')].merge(region[(region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'G')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] == 'P') & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] <= 6)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'] == 'V') | (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] >= 22) & (nation['N_NATIONKEY'] <= 12) & (nation['N_COMMENT'] == 'i')].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] != 'i')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NATIONKEY'] >= 21) & (nation['N_COMMENT'] == 'n')].merge(region[(region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 3) | (nation['N_COMMENT'].str.startswith('p'))].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NATIONKEY'] == 15) | (nation['N_NATIONKEY'] != 9) | (nation['N_NAME'] == 'U')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] == 20) & (nation['N_NATIONKEY'] >= 23) & (nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] == 6)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 1) & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != 't') & (nation['N_NAME'] != 'P')].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 11) | (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_REGIONKEY'] >= 1) | (region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_NATIONKEY'] >= 23) & (nation['N_NAME'] != 'S')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] < 3) | (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] == 'E') | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] != 2) | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('M')) | (region['R_NAME'] == 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders.merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 20) & (nation['N_COMMENT'] == 'a') | (nation['N_NATIONKEY'] <= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 21) & (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] < 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] < 4705.112476951734) | (customer['C_COMMENT'] == 'l') | (customer['C_ADDRESS'] != 'M') & (customer['C_ADDRESS'].str.startswith('D')) | (customer['C_ACCTBAL'] <= 4371.061469830302) & (customer['C_ACCTBAL'] != 4510.059525216044) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'BUILDING']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] < 5918.016172251513) | (customer['C_ADDRESS'] != 'a') | (customer['C_ADDRESS'] == 'o')][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 9446.300042794324) & (customer['C_NATIONKEY'] >= 21) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'HOUSEHOLD'])) | (customer['C_PHONE'] != '3') | (customer['C_PHONE'] != '18-')].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] < 22) | (customer['C_COMMENT'] != 'r') | (customer['C_ADDRESS'] == 'J') | (customer['C_CUSTKEY'] < 12) & (customer['C_NATIONKEY'] <= 3) & (customer['C_CUSTKEY'] != 28) | (customer['C_ADDRESS'] != 'F') & (customer['C_CUSTKEY'] != 15)].merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 7) & (customer['C_CUSTKEY'] != 11) | (customer['C_NATIONKEY'] >= 21) | (customer['C_ADDRESS'] == 'i') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'].str.startswith('o')) | (customer['C_COMMENT'] != 'q') | (customer['C_ADDRESS'] != 's') | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] != 'S') | (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] != '2') | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] == 5036.675703883354) | (customer['C_ACCTBAL'] == 9070.116872715784) & (customer['C_ACCTBAL'] >= -204.64440042710964) & (customer['C_ADDRESS'] == 'l') & (customer['MKTSEGMENT'] == 'BUILDING')][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'].str.startswith('B'))][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] > 88725) & (orders['TOTALPRICE'] != 33899.24354633421) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['ORDERDATE'] > '1998-07-21') & (orders['O_CUSTKEY'] < 61235) | (orders['CLERK'] != 'C')].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'O')][['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].groupby(by=['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) | (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'].str.startswith('h')) & (orders['O_CUSTKEY'] > 76044) & (orders['O_ORDERKEY'] != 49) | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERSTATUS'].isin(['F']))][['TOTALPRICE', 'CLERK', 'O_COMMENT']].groupby(by=['O_COMMENT', 'CLERK', 'TOTALPRICE']).agg('count')

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('b')) & (orders['TOTALPRICE'] == 225329.64837231717) | (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] == 'C')].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] != 116899)].merge(customer[(customer['C_ADDRESS'] == 'U') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 11) | (customer['C_NATIONKEY'] <= 14) | (customer['C_ACCTBAL'] != 3623.3518661551143) & (customer['C_ACCTBAL'] < 6326.596530262841) | (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] != 140864) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] <= 100648) | (orders['SHIPPRIORITY'] == 0)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'f') & (orders['O_CUSTKEY'] <= 17782) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] >= 737) | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] == '1992-01-13') | (orders['O_CUSTKEY'] < 10361)][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY']].groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'i') | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERSTATUS'] != 'F') & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'q') | (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'l') | (customer['C_CUSTKEY'] < 50) | (customer['C_COMMENT'].str.startswith('p')) & (customer['C_COMMENT'] == 'i') & (customer['C_ADDRESS'] != 'c') & (customer['C_COMMENT'].str.startswith('c'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('-')) & (orders['O_CUSTKEY'] <= 64473) & (orders['ORDERDATE'] != '1992-01-13')][['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 641) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'h')].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_NATIONKEY'] < 19)].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 76213) & (orders['ORDERSTATUS'] == 'O') | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_NATIONKEY'] != 5) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] == 10)][['C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 78852) | (orders['O_ORDERKEY'] >= 307) & (orders['O_ORDERKEY'] > 496) | (orders['CLERK'] == 'C')][['SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 100330) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERSTATUS'] != 'O') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_ORDERKEY'] >= 278) & (orders['O_COMMENT'] != 'i') & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED']))][['O_ORDERKEY', 'CLERK', 'ORDERDATE']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'CLERK']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 426) | (orders['O_COMMENT'] == 'u') & (orders['O_CUSTKEY'] >= 92459) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED']))][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']].groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'O_CUSTKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT']))].merge(customer[(customer['C_CUSTKEY'] < 19) | (customer['C_CUSTKEY'] == 3) & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0)].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'g') & (orders['O_COMMENT'] == 'ly ') | (orders['TOTALPRICE'] <= 63454.85541484656)].merge(customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 134192.1635958517) & (orders['SHIPPRIORITY'] < 0) & (orders['TOTALPRICE'] < 77557.2405162318) & (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED'])) & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['C_PHONE'] != '13-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != ' ') & (customer['C_CUSTKEY'] > 22)][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 62138.00399795871) & (orders['O_ORDERKEY'] != 366) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'] == 'uri') & (orders['ORDERSTATUS'] == 'P') | (orders['O_CUSTKEY'] == 37002) | (orders['O_CUSTKEY'] <= 138740)][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']]

orders[(orders['TOTALPRICE'] >= 79800.06221417621)].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] > 99) & (customer['C_NATIONKEY'] != 15) | (customer['C_ACCTBAL'] >= 469.7504316732534) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] < 4) & (customer['C_ACCTBAL'] > 3478.9455608569824)][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'] != 'H') & (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'a')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'].isin(['Brand#13', 'Brand#21', 'Brand#54', 'Brand#32', 'Brand#34', 'Brand#11', 'Brand#52', 'Brand#51', 'Brand#14', 'Brand#24', 'Brand#41'])) & (part['P_NAME'].str.startswith('h')) & (part['TYPE'] != 'M') & (part['BRAND'].isin(['Brand#24', 'Brand#14', 'Brand#51'])) & (part['BRAND'] != 'Brand#51')][['TYPE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'PT_COMMENT', 'CONTAINER']).agg('count')

part[(part['CONTAINER'] != 'LG') | (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'].str.startswith('SMA')) & (part['TYPE'] != 'SMA') | (part['BRAND'] != 'Brand#31') & (part['BRAND'] == 'Brand#34') | (part['P_NAME'] == 'bis') & (part['CONTAINER'] != 'SM')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']]

part[(part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] != 3) & (part['BRAND'] != 'Brand#42') & (part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] == 'w') | (part['CONTAINER'] == 'JUMBO') & (part['TYPE'] != 'S') & (part['PT_COMMENT'] != 'w')][['RETAILPRICE', 'MFGR', 'TYPE', 'CONTAINER']].groupby(by=['RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#1'])) & (part['RETAILPRICE'] > 1096.4593955381608) & (part['MFGR'].isin(['Manufacturer#3'])) | (part['P_NAME'].str.startswith('n')) | (part['CONTAINER'] == 'JUMBO')][['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']].groupby(by=['P_NAME', 'TYPE']).agg('max', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) | (part['P_PARTKEY'] == 192) & (part['PT_COMMENT'] == 'f') & (part['BRAND'] == 'Brand#34') | (part['CONTAINER'] != 'WRAP') & (part['RETAILPRICE'] > 1091.3617009975055) | (part['CONTAINER'].str.startswith('LG')) | (part['BRAND'] != 'Brand#24')][['BRAND', 'PT_COMMENT', 'TYPE', 'P_NAME']].groupby(by=['P_NAME', 'BRAND']).agg('min', numeric_only=True)

part[(part['P_NAME'] != 's') | (part['P_PARTKEY'] == 103) | (part['BRAND'].isin(['Brand#21', 'Brand#52', 'Brand#22', 'Brand#42', 'Brand#13', 'Brand#24', 'Brand#15', 'Brand#41', 'Brand#53', 'Brand#14', 'Brand#35', 'Brand#23', 'Brand#11', 'Brand#44', 'Brand#32', 'Brand#25', 'Brand#43', 'Brand#31', 'Brand#34', 'Brand#12', 'Brand#51', 'Brand#33', 'Brand#54', 'Brand#45'])) & (part['P_NAME'] != 'm') | (part['RETAILPRICE'] >= 959.4507853099765) & (part['RETAILPRICE'] != 1021.4882258899522) & (part['TYPE'].str.startswith('E')) & (part['MFGR'] == 'Manufacturer#1') & (part['SIZE'] < 32)][['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']]

part[(part['P_NAME'] == 'k') & (part['SIZE'] > 43) | (part['BRAND'] == 'Brand#52') | (part['TYPE'] == 'P') | (part['P_PARTKEY'] > 171) | (part['TYPE'] == 'M') | (part['SIZE'] <= 6) & (part['BRAND'] != 'Brand#13')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']]

part[(part['P_NAME'] == 'm') & (part['P_NAME'].str.startswith('lin')) | (part['BRAND'] != 'Brand#42') | (part['SIZE'] <= 31)][['P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT']].groupby(by=['P_NAME', 'MFGR', 'PT_COMMENT', 'SIZE', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['P_NAME'].str.startswith('bis')) & (part['TYPE'].str.startswith('SMA'))][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']].groupby(by=['MFGR', 'PT_COMMENT', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] < 977.3015978685198) & (part['PT_COMMENT'] == 'd') & (part['P_PARTKEY'] < 54) | (part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] >= 905.6859134604897) & (part['BRAND'] != 'Brand#31') & (part['PT_COMMENT'] != 'w')][['BRAND', 'P_PARTKEY', 'P_NAME', 'CONTAINER']].groupby(by=['CONTAINER', 'BRAND']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] >= 959.4941939348598) & (part['BRAND'] != 'Brand#25') & (part['PT_COMMENT'] == 'a') | (part['TYPE'].str.startswith('M')) & (part['P_NAME'] != 'w') | (part['MFGR'] != 'Manufacturer#5') & (part['CONTAINER'] == 'JUMBO') | (part['BRAND'] != 'Brand#25') & (part['TYPE'].str.startswith('STA'))][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']]

part[(part['SIZE'] != 3) & (part['P_PARTKEY'] > 65) & (part['PT_COMMENT'] == 'n') & (part['SIZE'] > 27)][['TYPE', 'CONTAINER', 'SIZE', 'P_NAME', 'PT_COMMENT']].groupby(by=['CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['SIZE'] == 33) | (part['TYPE'] == 'SMA') | (part['P_NAME'].str.startswith('w')) & (part['BRAND'].isin(['Brand#51', 'Brand#43', 'Brand#55', 'Brand#35', 'Brand#33', 'Brand#24', 'Brand#41', 'Brand#15', 'Brand#54', 'Brand#13', 'Brand#22', 'Brand#11', 'Brand#45', 'Brand#21'])) & (part['PT_COMMENT'] == 'u') & (part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] == 'c') & (part['PT_COMMENT'] != 'm') | (part['P_NAME'].str.startswith('blu'))][['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'MFGR', 'BRAND']]

part[(part['TYPE'] != 'M')][['P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'MFGR', 'P_NAME', 'BRAND']].groupby(by=['SIZE', 'PT_COMMENT', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'].isin(['Brand#23', 'Brand#14', 'Brand#13', 'Brand#54'])) & (part['RETAILPRICE'] != 1049.4687001334803) & (part['CONTAINER'] == 'MED') | (part['RETAILPRICE'] > 960.3642726139045) & (part['BRAND'] != 'Brand#54') & (part['P_PARTKEY'] > 107) | (part['MFGR'] == 'Manufacturer#3')][['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] == ' fi') | (part['TYPE'].str.startswith('E')) | (part['BRAND'] == 'Brand#15') & (part['SIZE'] > 6) & (part['P_PARTKEY'] <= 139) & (part['SIZE'] == 25) | (part['PT_COMMENT'] != 'c') & (part['P_PARTKEY'] == 47)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'SIZE', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['P_NAME'].str.startswith('y')) | (part['P_NAME'] != 'f') | (part['PT_COMMENT'] != 'y') | (part['BRAND'] == 'Brand#24') | (part['MFGR'].isin(['Manufacturer#1'])) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#3'])) | (part['CONTAINER'] == 'MED') & (part['RETAILPRICE'] < 1082.743245135809)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE', 'TYPE', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

partsupp.merge(part[['P_NAME', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'CONTAINER', 'SIZE']).agg('mean', numeric_only=True)

partsupp.merge(part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'RETAILPRICE', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 2836)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] != 6033)].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 4182) | (partsupp['PS_PARTKEY'] == 6) & (partsupp['SUPPLYCOST'] != 198.16372342411208)].merge(part[(part['SIZE'] >= 36) & (part['RETAILPRICE'] <= 940.7258138355211)][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] <= 4838) | (partsupp['PS_SUPPKEY'] <= 770)].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] <= 10)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 3612) | (partsupp['PS_SUPPKEY'] <= 2102) | (partsupp['SUPPLYCOST'] == 889.1395417141304) | (partsupp['AVAILQTY'] != 5876)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] == 570) | (partsupp['P_COMMENT'] != 'p')][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 5548) & (partsupp['PS_SUPPKEY'] <= 5432) | (partsupp['SUPPLYCOST'] == 43.86995029810523) & (partsupp['AVAILQTY'] > 1174) & (partsupp['PS_SUPPKEY'] < 1597)][['PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 33) & (partsupp['P_COMMENT'].str.startswith('j')) & (partsupp['P_COMMENT'] != ' th')].merge(part[(part['PT_COMMENT'].str.startswith('x'))][['CONTAINER', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 8) & (partsupp['PS_PARTKEY'] == 6) | (partsupp['SUPPLYCOST'] == 209.9201223311536) | (partsupp['PS_PARTKEY'] > 26)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 32)].merge(part[(part['P_NAME'] != 'cor') | (part['RETAILPRICE'] > 1095.9474456449825) | (part['BRAND'] != 'Brand#43')][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 39)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 2) & (part['BRAND'] != 'Brand#23') & (part['RETAILPRICE'] >= 1047.9983098355892) & (part['P_NAME'].str.startswith('v'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 31) | (partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['AVAILQTY'] < 5234) | (partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['PS_SUPPKEY'] != 618)].merge(part[(part['TYPE'] != 'S') & (part['P_PARTKEY'] == 92) | (part['PT_COMMENT'] != 'b') & (part['PT_COMMENT'] == 'i') | (part['TYPE'] == 'L')][['P_NAME', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 16) | (partsupp['AVAILQTY'] >= 2365) & (partsupp['SUPPLYCOST'] != 315.0259974276974)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 23) & (partsupp['PS_SUPPKEY'] != 5882) & (partsupp['SUPPLYCOST'] < 560.2307440879442)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 7342) | (partsupp['SUPPLYCOST'] == 697.7887933328105) & (partsupp['PS_SUPPKEY'] > 449)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 2187) | (partsupp['PS_PARTKEY'] != 46) | (partsupp['PS_SUPPKEY'] != 2254) | (partsupp['AVAILQTY'] == 2437) & (partsupp['PS_PARTKEY'] != 38)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('0')) | (supplier['S_SUPPKEY'] >= 73)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'h') | (partsupp['P_COMMENT'] == 'p') & (partsupp['PS_SUPPKEY'] >= 282) & (partsupp['P_COMMENT'] == 'g') & (partsupp['PS_SUPPKEY'] >= 7104)].merge(part[['BRAND', 'P_PARTKEY', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('c')) | (partsupp['P_COMMENT'] != 'v')][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('f'))][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'].str.startswith('l')) & (part['TYPE'].str.startswith('E')) & (part['PT_COMMENT'].str.startswith('d')) | (part['SIZE'] < 6) | (part['P_NAME'] != 'w') | (part['MFGR'] != 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) & (partsupp['PS_SUPPKEY'] >= 6043) | (partsupp['SUPPLYCOST'] < 537.9813820659674) & (partsupp['PS_PARTKEY'] > 8) | (partsupp['PS_PARTKEY'] != 48)].merge(part[['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['SUPPLYCOST'] < 170.84640929374484) | (partsupp['PS_PARTKEY'] <= 40)].merge(supplier[(supplier['S_COMMENT'] == 'v') & (supplier['S_PHONE'] == '26-') & (supplier['S_ADDRESS'].str.startswith('j')) & (supplier['S_ADDRESS'] != 'S') | (supplier['S_SUPPKEY'] >= 92)].merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NAME'].str.startswith('E'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] != 652.4417485087685) | (partsupp['PS_PARTKEY'] <= 26) & (partsupp['PS_PARTKEY'] > 15) | (partsupp['PS_SUPPKEY'] == 4543)].merge(supplier[(supplier['S_SUPPKEY'] >= 86) | (supplier['S_ACCTBAL'] != 3994.168695813566) | (supplier['S_ACCTBAL'] == 2630.173741534274) | (supplier['S_ACCTBAL'] != 380.54341240220856) | (supplier['S_COMMENT'] != '!') | (supplier['S_COMMENT'] != 'v')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 79.27615095343322) & (partsupp['P_COMMENT'] == ';')].merge(supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] <= 23) & (supplier['S_NATIONKEY'] <= 15) | (supplier['S_PHONE'] == '32-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_COMMENT', 'S_NAME']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['TYPE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['P_NAME'] != 'r') | (part['BRAND'].isin(['Brand#41', 'Brand#14', 'Brand#13'])) & (part['TYPE'].str.startswith('E'))][['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['TYPE', 'P_PARTKEY', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'TYPE', 'BRAND', 'P_PARTKEY']).agg('count')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] != 957.9707173046093) & (part['MFGR'] == 'Manufacturer#2') | (part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] > 155) | (part['TYPE'] != 'E') | (part['RETAILPRICE'] > 950.9034816283001)][['MFGR', 'P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#15', 'Brand#35', 'Brand#43', 'Brand#41', 'Brand#25', 'Brand#55', 'Brand#33', 'Brand#11', 'Brand#23', 'Brand#53', 'Brand#34', 'Brand#13'])) | (part['BRAND'] == 'Brand#22') & (part['SIZE'] == 12) & (part['SIZE'] > 5) & (part['TYPE'] != 'SMA') & (part['SIZE'] != 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'].str.startswith('n'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_NATIONKEY'] >= 1) | (nation['N_COMMENT'] == 'o')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'K')].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 0) & (region['R_NAME'] == 'ASI')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] <= 18) & (nation['N_COMMENT'] != 'u') & (nation['N_COMMENT'] == 'u')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] > 4) | (nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 2)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] != 0)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'] == 'c')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'al ') & (supplier['S_SUPPKEY'] == 184) | (supplier['S_ADDRESS'] == 'g')].merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_NAME'] == 'A')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'f') | (supplier['S_SUPPKEY'] != 119) | (supplier['S_ADDRESS'] == 'r') & (supplier['S_PHONE'] == '2') | (supplier['S_ACCTBAL'] < 8959.021708974886) & (supplier['S_ADDRESS'] == 'k')][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'q') & (supplier['S_ACCTBAL'] > 201.58841811310526) | (supplier['S_NATIONKEY'] <= 8) & (supplier['S_ADDRESS'] != 'b') | (supplier['S_NATIONKEY'] == 15) & (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] != 'c')].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'G') & (nation['N_NAME'] == 'U')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'r')][['S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'x') | (supplier['S_ACCTBAL'] <= 962.1770898775326) | (supplier['S_ACCTBAL'] < 7831.367701572041)].merge(nation[(nation['N_NATIONKEY'] >= 10) & (nation['N_COMMENT'] == 'c')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_ADDRESS'].str.startswith('e'))].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] == 'AFR') | (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('y')) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 3) & (supplier['S_ACCTBAL'] == 8473.070175708992) | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] != 5687.484303506188)][['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] != 18) & (supplier['S_SUPPKEY'] == 17) & (supplier['S_SUPPKEY'] == 183)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'bli')][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_PHONE', 'S_NAME', 'S_NATIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != ',') | (supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_ACCTBAL'] < 2855.3141585064823) & (supplier['S_ADDRESS'] != 'l')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] >= 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] != 12) | (supplier['S_PHONE'] != '2') & (supplier['S_ACCTBAL'] < 2406.1746263832574) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 190)].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 4) | (supplier['S_NAME'] == 'S')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 22) & (supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'] != 'u')].merge(nation[(nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] != 'i') & (nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] >= 6)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 9)][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_ADDRESS'] != 'T')][['S_COMMENT', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] != 10) & (supplier['S_SUPPKEY'] > 12) | (supplier['S_NATIONKEY'] >= 18) & (supplier['S_SUPPKEY'] >= 124) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'I')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 18) & (supplier['S_NATIONKEY'] > 20) | (supplier['S_COMMENT'] != 'n') | (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_PHONE'] != '1') & (supplier['S_ACCTBAL'] <= -62.80217249439329)][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 85) | (supplier['S_ACCTBAL'] == 6202.455825745987)].merge(nation[(nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 6) & (nation['N_REGIONKEY'] != 1)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'].str.startswith('t'))].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'] != ' ')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_NATIONKEY'] < 5) & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('P'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] < 0)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] > 16)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] > 3)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] != 'a') | (nation['N_COMMENT'].str.startswith('a'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_COMMENT'] != 'i')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NATIONKEY'] == 18)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] > 18) & (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 15)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] == 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 9945.277475368317) | (customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] > 14) & (customer['C_PHONE'] == '2') & (customer['C_COMMENT'].str.startswith('p')) | (customer['C_ADDRESS'] != 'P') | (customer['C_ACCTBAL'] >= 3025.338187077669) | (customer['C_COMMENT'] == 't')].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] <= 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 7223.4457069130485) & (customer['C_PHONE'] == '22-') & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 3013.7216697827334) & (customer['C_COMMENT'] != 'k') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 1968.735194351858) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '2') & (customer['C_COMMENT'].str.startswith('y')) | (customer['C_CUSTKEY'] <= 38)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 6780.452404984293) & (customer['C_PHONE'] == '13-') & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_ADDRESS'].str.startswith('Y')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) & (customer['C_CUSTKEY'] != 68)][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'i') & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] >= 58) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_COMMENT'].str.startswith('r')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 's') & (customer['C_ADDRESS'].str.startswith('T')) | (customer['C_CUSTKEY'] < 64) | (customer['C_CUSTKEY'] == 20) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'].str.startswith('3')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE'])) & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ADDRESS', 'C_NAME', 'C_PHONE', 'C_COMMENT']].groupby(by=['C_PHONE', 'C_ADDRESS', 'C_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'E') | (customer['C_CUSTKEY'] >= 46) & (customer['C_NATIONKEY'] < 4) & (customer['C_PHONE'] == '3') | (customer['C_ACCTBAL'] != 9418.30915233061)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'j') | (customer['C_PHONE'] != '18-') | (customer['C_COMMENT'] != 'y') & (customer['C_PHONE'].str.startswith('22-')) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_PHONE'].str.startswith('27-'))][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']].groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'n') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE'])) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] <= 2124.4464811818684) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 9) & (customer['C_ADDRESS'] == 'J') | (customer['C_NAME'] != 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('4')) | (customer['C_ACCTBAL'] == 9386.941088596488) & (customer['C_ADDRESS'].str.startswith('a')) | (customer['C_COMMENT'].str.startswith('g')) & (customer['C_PHONE'] == '13-')][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('8')) | (customer['C_COMMENT'].str.startswith('r')) | (customer['C_ADDRESS'].str.startswith('z')) & (customer['C_PHONE'] == '27-') & (customer['C_COMMENT'] == 'd') | (customer['C_ACCTBAL'] >= 5115.639535909948) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'e')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('s'))].merge(nation[(nation['N_NATIONKEY'] >= 10) | (nation['N_COMMENT'] != 'i') & (nation['N_NATIONKEY'] > 10)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 28) & (customer['C_PHONE'] == '1') & (customer['C_CUSTKEY'] >= 20) & (customer['C_PHONE'].str.startswith('3'))][['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 65)].merge(nation[(nation['N_NATIONKEY'] != 16)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 82) | (customer['C_CUSTKEY'] == 62) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] > 0) | (customer['C_NATIONKEY'] <= 1) | (customer['C_CUSTKEY'] >= 18)].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] != 'o')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 9564.662551214069) | (customer['C_ACCTBAL'] > 6913.478614898746) & (customer['C_CUSTKEY'] <= 16) | (customer['C_ADDRESS'] != '4') & (customer['C_ACCTBAL'] <= 9686.072106805434)].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NATIONKEY'] != 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '3') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 16) & (customer['C_COMMENT'].str.startswith('i'))].merge(nation[(nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '2') & (customer['C_CUSTKEY'] != 30) & (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] < 59) & (customer['C_NATIONKEY'] <= 12)].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_REGIONKEY'] >= 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 13) | (customer['C_CUSTKEY'] > 62) | (customer['C_COMMENT'] != 'y') | (customer['C_COMMENT'] != ' ') & (customer['C_PHONE'] != '13-')][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 7)].merge(nation[(nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] == 11) | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] == 'o') | (customer['C_CUSTKEY'] >= 2)].merge(nation[(nation['N_NATIONKEY'] >= 6)].merge(region[(region['R_NAME'] != 'AME') | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 2) | (customer['C_CUSTKEY'] < 81) | (customer['C_CUSTKEY'] >= 78) & (customer['C_PHONE'] != '3') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'] == '.')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 22) & (customer['C_PHONE'] != '1')][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 7) | (customer['C_CUSTKEY'] > 23) & (customer['C_ACCTBAL'] >= 8391.310424571035) | (customer['C_ADDRESS'].str.startswith('K')) | (customer['C_NATIONKEY'] == 20) | (customer['C_CUSTKEY'] != 24) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE']))].merge(nation[(nation['N_NAME'] == 'J')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 7) | (customer['C_NATIONKEY'] <= 9) & (customer['C_ACCTBAL'] != -96.38956170594099)].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '25-') | (customer['C_CUSTKEY'] != 53) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'].str.startswith('i'))][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['C_CUSTKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_PHONE']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') | (customer['C_COMMENT'].str.startswith(',')) & (customer['C_CUSTKEY'] == 99) | (customer['C_ACCTBAL'] > 2759.7150924513635)].merge(nation[(nation['N_NATIONKEY'] >= 18) & (nation['N_NATIONKEY'] != 21) & (nation['N_REGIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_PHONE'] != '1') | (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] != 84) | (customer['C_NATIONKEY'] <= 14) | (customer['C_ADDRESS'] != 'K')][['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY'])) | (customer['C_NATIONKEY'] < 22) | (customer['C_NATIONKEY'] > 15) & (customer['C_COMMENT'] != 'c') | (customer['C_ADDRESS'] != 'a') & (customer['C_PHONE'] != '18-') & (customer['C_NATIONKEY'] < 16)][['C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['C_PHONE'] == '27-') | (customer['C_ACCTBAL'] != 6659.825178015817) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] > 2)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('3')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 7) & (customer['C_COMMENT'] == 'p')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('d')) & (customer['C_PHONE'] != '13-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'E') & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'j') & (customer['C_ADDRESS'] != 'D')].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_ADDRESS'].str.startswith('i')) & (customer['C_NATIONKEY'] <= 1)].merge(nation[(nation['N_NATIONKEY'] != 8) | (nation['N_NATIONKEY'] == 0) & (nation['N_NATIONKEY'] >= 7) | (nation['N_COMMENT'] == ' ')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_ADDRESS'] != 'I')].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'] != 'P')].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] == 'M')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_NAME'] != 'R')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith('n')) | (orders['O_ORDERKEY'] != 659) | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERDATE'] < '1992-01-13')].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] == 103377)].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_COMMENT'] == 'u') | (customer['C_ACCTBAL'] != 7635.081847195752) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_PHONE'].str.startswith('2'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] != 110196.16057704236)][['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] != 5) | (nation['N_COMMENT'].str.startswith('t')) & (nation['N_NAME'] != 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'BRAND', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] > 2793)].merge(supplier[(supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 7066)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] <= 1998.1676804382812)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'n') | (partsupp['PS_PARTKEY'] <= 46)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] == 10) & (supplier['S_NATIONKEY'] == 2)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'd') & (partsupp['AVAILQTY'] <= 2636)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'a') & (part['SIZE'] == 25) & (part['P_NAME'] == 'i')][['BRAND', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' '))][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME']).agg('count')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['QUANTITY'] != 48) | (lineitem['TAX'] > 0.0022990884498592214) & (lineitem['QUANTITY'] != 40) & (lineitem['RECEIPTDATE'] < '1992-05-02')][['L_SUPPKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'COMMITDATE', 'L_ORDERKEY']].merge(orders[['ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 31392.8149914418) & (lineitem['L_PARTKEY'] >= 18199)][['L_COMMENT', 'EXTENDEDPRICE', 'L_ORDERKEY', 'QUANTITY']].merge(orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] < 1) | (lineitem['QUANTITY'] == 13) | (lineitem['QUANTITY'] <= 31) & (lineitem['TAX'] <= 0.038626142562346824) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['L_PARTKEY'] > 185586) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['TAX'] >= 0.07234879343829176) | (lineitem['EXTENDEDPRICE'] != 33392.26239467486) | (lineitem['DISCOUNT'] >= 0.03192260843360787)].merge(orders.merge(customer[(customer['C_NATIONKEY'] > 6) & (customer['C_PHONE'].str.startswith('18-'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['DISCOUNT'] >= 0.04214228916564949) | (lineitem['EXTENDEDPRICE'] <= 47139.91487840054)].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] == 'C') & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_ORDERKEY'] >= 578) & (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] >= 13)][['O_ORDERKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != 't') | (lineitem['LINENUMBER'] < 6) & (lineitem['LINENUMBER'] != 2) | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(partsupp[(partsupp['SUPPLYCOST'] < 760.9577517408405) & (partsupp['AVAILQTY'] != 6614) | (partsupp['AVAILQTY'] == 7949) | (partsupp['AVAILQTY'] != 2673) | (partsupp['P_COMMENT'].str.startswith('bli'))], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 114) & (lineitem['LINENUMBER'] == 3) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['QUANTITY'] < 5) | (lineitem['LINENUMBER'] == 1) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['SHIPMODE'].isin(['SHIP']))][['LINESTATUS', 'EXTENDEDPRICE', 'QUANTITY']].groupby(by=['EXTENDEDPRICE', 'QUANTITY', 'LINESTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 143) | (lineitem['TAX'] < 0.0646441352611628) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['L_PARTKEY'] == 27870) & (lineitem['L_COMMENT'] != 't')][['SHIPINSTRUCT', 'LINENUMBER', 'SHIPMODE', 'LINESTATUS', 'TAX']].groupby(by=['SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER', 'SHIPMODE', 'TAX']).agg('count')

lineitem[(lineitem['L_PARTKEY'] <= 23617)].merge(partsupp[(partsupp['PS_PARTKEY'] < 7) | (partsupp['SUPPLYCOST'] == 628.8064346963663) & (partsupp['PS_PARTKEY'] >= 34) | (partsupp['SUPPLYCOST'] < 325.4485408466741) & (partsupp['P_COMMENT'] != 'n')].merge(part[['P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 1202) | (lineitem['L_PARTKEY'] != 45887) | (lineitem['L_PARTKEY'] > 112457)][['SHIPDATE', 'SHIPMODE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY', 'LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] == 7317) | (lineitem['TAX'] < 0.007304900549317628) | (lineitem['LINESTATUS'] == 'F') | (lineitem['TAX'] == 0.039554572554905756) | (lineitem['L_PARTKEY'] == 59983)].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'PT_COMMENT', 'P_NAME', 'BRAND', 'SIZE']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] > 5355) | (lineitem['DISCOUNT'] > 0.09974784771020356) | (lineitem['L_SUPPKEY'] > 8820) & (lineitem['RETURNFLAG'] != 'N') | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['L_SUPPKEY'] < 3491) | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_PARTKEY'] < 172569)].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 8672) | (lineitem['LINENUMBER'] != 1) & (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['L_SUPPKEY'] != 67) | (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['QUANTITY'] > 29) | (lineitem['SHIPDATE'] != '1992-04-27')][['QUANTITY', 'L_COMMENT', 'COMMITDATE', 'SHIPINSTRUCT']].groupby(by=['L_COMMENT', 'SHIPINSTRUCT', 'QUANTITY']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 48)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['QUANTITY'] != 41) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_SUPPKEY'] <= 6521) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD', 'NONE'])) & (lineitem['L_PARTKEY'] != 24923) | (lineitem['L_COMMENT'].str.startswith('a')) | (lineitem['LINESTATUS'] != 'F')][['COMMITDATE', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPMODE', 'EXTENDEDPRICE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['LINENUMBER'] <= 5) | (lineitem['DISCOUNT'] > 0.002490531227671844) | (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['L_COMMENT'] != 'p') & (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['L_PARTKEY'] > 110382) & (lineitem['L_ORDERKEY'] != 96) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON']))].merge(orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE')].merge(partsupp[(partsupp['AVAILQTY'] >= 3961) | (partsupp['AVAILQTY'] >= 8139) | (partsupp['PS_PARTKEY'] < 11)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('MED')) | (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] > 1099.6415609214885)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'RAIL') & (lineitem['SHIPDATE'] > '1992-04-27')][['QUANTITY', 'SHIPDATE', 'L_PARTKEY', 'RECEIPTDATE', 'RETURNFLAG', 'DISCOUNT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'LINESTATUS']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] > 0.04583904654882827) | (lineitem['EXTENDEDPRICE'] >= 69417.96641007724) & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['EXTENDEDPRICE'] == 82066.9849974878)][['EXTENDEDPRICE', 'LINENUMBER', 'SHIPINSTRUCT', 'SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT']].groupby(by=['SHIPINSTRUCT', 'L_COMMENT', 'EXTENDEDPRICE']).agg('count')

lineitem[['COMMITDATE', 'QUANTITY', 'DISCOUNT', 'L_COMMENT', 'L_PARTKEY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'] != 'h')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'RETURNFLAG', 'L_COMMENT', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] <= 9) & (customer['C_ADDRESS'] == 'P') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] != 6021.403568812897)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_PARTKEY', 'TAX']].merge(partsupp.merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_ORDERKEY', 'RETURNFLAG']].merge(orders.merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'EXTENDEDPRICE', 'COMMITDATE', 'LINESTATUS', 'L_PARTKEY', 'TAX']].merge(partsupp.merge(part[['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'LINENUMBER', 'SHIPDATE']].merge(orders.merge(customer[['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_ACCTBAL']).agg('count')

nation[(nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] > 17) | (nation['N_NATIONKEY'] > 14)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] == ' ') | (nation['N_NATIONKEY'] > 11)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NATIONKEY'] < 5)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] != 4) & (nation['N_NAME'].str.startswith('R'))].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] != 'M')].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] > 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_NATIONKEY'] > 13)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'].str.startswith('v')) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('P'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] > 8) | (nation['N_NAME'].str.startswith('F')) & (nation['N_NAME'] == 'S')].merge(region[(region['R_REGIONKEY'] < 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

nation[(nation['N_NAME'].str.startswith('S'))][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NATIONKEY'] > 10) & (nation['N_NATIONKEY'] != 20) & (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] >= 11)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'c')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 0) | (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] != 17)][['N_REGIONKEY']].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_COMMENT'] != 'a')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] != 20)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_NAME'] != 'A')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_NATIONKEY'] == 20)].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] != 7832.391765061635) & (customer['C_COMMENT'].str.startswith('t')) | (customer['C_CUSTKEY'] != 84) & (customer['C_NATIONKEY'] >= 21)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'b') & (customer['C_ACCTBAL'] != 4968.406525672806) | (customer['C_NATIONKEY'] > 4) & (customer['C_ACCTBAL'] >= 2020.432106764756) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 32) | (customer['C_CUSTKEY'] > 28) & (customer['C_ADDRESS'] != 'U')][['C_PHONE', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'c') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_COMMENT'].str.startswith('s')) & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE'])) & (customer['C_CUSTKEY'] != 30) & (customer['C_NATIONKEY'] < 4) & (customer['C_NATIONKEY'] <= 18)][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] >= 10) | (customer['C_ADDRESS'] == 'p') & (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_CUSTKEY'] >= 40) & (customer['C_COMMENT'] == 'h')].merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] != 't') | (nation['N_NAME'].str.startswith('I'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'] != 'C')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] > 5) & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'].str.startswith('1'))].merge(nation.merge(region[(region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] <= 21) | (customer['C_ACCTBAL'] > 8657.07425587905) | (customer['C_COMMENT'] == 'c') & (customer['C_PHONE'].str.startswith('1')) & (customer['C_ACCTBAL'] == 933.1177354105469)].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 15) & (nation['N_COMMENT'] == ' ')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('count')

orders[(orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_ORDERKEY'] <= 755) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'] != 'C')].merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'BUILDING')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] > 97290)].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] >= 95374) | (orders['ORDERDATE'] == '1992-01-13')][['O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['TOTALPRICE'] <= 160775.91439806033) | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['O_ORDERKEY'] > 108) | (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'] != 'C')][['O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['O_ORDERKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '2-HIGH'])) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'P') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '2-HIGH', '1-URGENT'])) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED']))].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['O_COMMENT'].str.startswith('g')) | (orders['ORDERSTATUS'] != 'F') | (orders['SHIPPRIORITY'] < 0)][['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERDATE'] == '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] >= 774) & (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_CUSTKEY'] == 99) & (customer['C_NATIONKEY'] >= 11) | (customer['C_ACCTBAL'] < 7935.377041560669) & (customer['C_COMMENT'] == 'g') | (customer['C_ACCTBAL'] == 5950.767833424984) & (customer['C_NATIONKEY'] != 9) & (customer['C_COMMENT'] != 'a')][['C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O'])) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW'])) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] != 523) | (orders['O_CUSTKEY'] == 40659) | (orders['O_COMMENT'] == 'c') & (orders['SHIPPRIORITY'] <= 0)].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] == 'i') & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] == 285) | (orders['O_COMMENT'] != 'u') & (orders['O_COMMENT'].str.startswith(' '))][['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']].groupby(by=['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'n') & (orders['O_COMMENT'] == 'k') & (orders['ORDERSTATUS'].isin(['P'])) | (orders['O_ORDERKEY'] != 265) | (orders['TOTALPRICE'] <= 202952.21698354027) | (orders['O_CUSTKEY'] < 23203) & (orders['O_CUSTKEY'] <= 54248) & (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING'])) & (customer['C_PHONE'].str.startswith('3'))][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('.'))][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('n')) | (orders['O_COMMENT'] != '.') | (orders['O_CUSTKEY'] != 9051) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] == 135019) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] != 31090) & (orders['O_CUSTKEY'] != 715)].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 11) & (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] != 11)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 105110) | (orders['ORDERDATE'] != '1992-01-13')].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 45905) | (orders['TOTALPRICE'] != 325137.5484530521) & (orders['O_COMMENT'] == 'e') | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['P'])) & (orders['O_COMMENT'].str.startswith('h')) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_COMMENT'].str.startswith('w'))].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 295) & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] != 50) & (customer['C_CUSTKEY'] != 89) & (customer['C_CUSTKEY'] <= 74) & (customer['C_CUSTKEY'] == 63) & (customer['C_PHONE'] != '1') & (customer['C_PHONE'].str.startswith('25-'))][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 797) & (orders['TOTALPRICE'] > 106398.91020204818) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['O_CUSTKEY'] >= 38751) & (orders['O_ORDERKEY'] >= 493) | (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 577) & (orders['O_COMMENT'].str.startswith('n')) & (orders['O_ORDERKEY'] < 528) & (orders['O_COMMENT'].str.startswith('n'))].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 385) | (orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_ORDERKEY'] > 678) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] == 235)][['O_COMMENT', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0)][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_CUSTKEY'] == 32) | (customer['C_PHONE'] == '25-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] <= 28943) & (orders['O_ORDERKEY'] <= 403) & (orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'] != 'k') | (orders['O_ORDERKEY'] == 738) & (orders['TOTALPRICE'] >= 227695.09367911366) | (orders['TOTALPRICE'] > 215085.8146292286) & (orders['SHIPPRIORITY'] == 0)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] < 177293.3806677256) | (orders['CLERK'].str.startswith('C'))][['ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] >= 53) | (customer['C_NATIONKEY'] != 11) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_ADDRESS'].str.startswith('w'))][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 185358.8044389146) & (orders['O_CUSTKEY'] <= 17324) & (orders['SHIPPRIORITY'] < 0)][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('count')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_ADDRESS'].str.startswith('w'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'] == 'f') | (customer['C_ADDRESS'].str.startswith('U')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#4') & (part['P_NAME'].str.startswith('s')) & (part['CONTAINER'].str.startswith('MED')) | (part['P_PARTKEY'] > 3) | (part['SIZE'] != 41) & (part['P_NAME'] != 'w') | (part['TYPE'] == 'STA') & (part['TYPE'].str.startswith('E')) | (part['P_PARTKEY'] <= 29)][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']]

part[(part['P_NAME'].str.startswith('c')) & (part['CONTAINER'].str.startswith('SM')) | (part['MFGR'].isin(['Manufacturer#1'])) | (part['RETAILPRICE'] < 1094.7955052854848) & (part['P_PARTKEY'] > 52) & (part['PT_COMMENT'].str.startswith('l')) | (part['SIZE'] < 3) & (part['BRAND'] != 'Brand#32') | (part['P_NAME'].str.startswith('g'))][['MFGR', 'SIZE', 'TYPE']].groupby(by=['TYPE', 'MFGR', 'SIZE']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] < 105) | (part['BRAND'] != 'Brand#45') | (part['MFGR'] != 'Manufacturer#4') & (part['TYPE'] != 'STA') | (part['TYPE'] == 'SMA') | (part['SIZE'] >= 9) | (part['MFGR'] != 'Manufacturer#4') | (part['PT_COMMENT'] == 'm') | (part['PT_COMMENT'] != 'the')][['P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']]

part[(part['P_PARTKEY'] == 170) & (part['TYPE'].str.startswith('P')) & (part['CONTAINER'].str.startswith('SM')) & (part['P_PARTKEY'] > 27) & (part['P_PARTKEY'] < 181) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4'])) | (part['BRAND'] != 'Brand#22') | (part['P_PARTKEY'] <= 2)][['MFGR', 'RETAILPRICE', 'TYPE', 'CONTAINER', 'SIZE']].groupby(by=['TYPE', 'MFGR']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] > 149) | (part['SIZE'] <= 20) | (part['P_NAME'] == 'r') | (part['P_PARTKEY'] >= 153) & (part['P_PARTKEY'] >= 46) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) | (part['PT_COMMENT'].str.startswith('r'))][['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']].groupby(by=['SIZE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] >= 68) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) & (part['MFGR'] != 'Manufacturer#5') | (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] != 1039.0758397079067)][['P_PARTKEY', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'TYPE']].groupby(by=['CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'BRAND']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] == 1027.0336916401984) | (part['P_PARTKEY'] > 186) | (part['CONTAINER'] != 'MED') | (part['PT_COMMENT'] != 'a') & (part['MFGR'] != 'Manufacturer#4')][['TYPE', 'CONTAINER', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['TYPE', 'MFGR', 'BRAND', 'PT_COMMENT', 'CONTAINER']).agg('mean', numeric_only=True)

part[(part['TYPE'] != 'E') | (part['RETAILPRICE'] < 1042.8563685256433) | (part['SIZE'] < 10)][['MFGR', 'P_PARTKEY', 'TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']].groupby(by=['SIZE', 'MFGR', 'TYPE', 'RETAILPRICE', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('S'))][['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'RETAILPRICE', 'BRAND']].groupby(by=['TYPE', 'BRAND', 'MFGR', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

part[(part['TYPE'].str.startswith('STA')) | (part['BRAND'] != 'Brand#51') & (part['P_NAME'] != 'c')][['BRAND', 'TYPE', 'P_NAME', 'MFGR', 'P_PARTKEY', 'SIZE', 'CONTAINER']].groupby(by=['TYPE', 'BRAND', 'SIZE', 'MFGR', 'P_PARTKEY']).agg('count')

partsupp.merge(part[(part['BRAND'] != 'Brand#25') | (part['SIZE'] > 29) | (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] < 74) & (part['P_NAME'].str.startswith('lem')) | (part['PT_COMMENT'].str.startswith(' ')) | (part['MFGR'] != 'Manufacturer#2') | (part['SIZE'] >= 48) | (part['CONTAINER'] == 'MED')][['P_PARTKEY', 'CONTAINER', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['BRAND'] == 'Brand#44') & (part['BRAND'] != 'Brand#51') | (part['RETAILPRICE'] > 901.2855249966397) | (part['BRAND'].isin(['Brand#43', 'Brand#12', 'Brand#35', 'Brand#51', 'Brand#42', 'Brand#13', 'Brand#24', 'Brand#44', 'Brand#45', 'Brand#15', 'Brand#31', 'Brand#22', 'Brand#11', 'Brand#55', 'Brand#21', 'Brand#54'])) & (part['TYPE'].str.startswith('M'))][['P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#52') | (part['BRAND'] == 'Brand#33') & (part['PT_COMMENT'] != 'kag') & (part['SIZE'] <= 25) | (part['P_NAME'] == 'h') & (part['P_NAME'].str.startswith('g'))][['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'P_NAME']).agg('min', numeric_only=True)

partsupp.merge(part[(part['BRAND'] == 'Brand#54') & (part['TYPE'] == 'L') | (part['BRAND'].isin(['Brand#32', 'Brand#41', 'Brand#45', 'Brand#14', 'Brand#54', 'Brand#51', 'Brand#22', 'Brand#53', 'Brand#43', 'Brand#52', 'Brand#15', 'Brand#55', 'Brand#31', 'Brand#12', 'Brand#34', 'Brand#13', 'Brand#33', 'Brand#35', 'Brand#21', 'Brand#11', 'Brand#25', 'Brand#23', 'Brand#24', 'Brand#42', 'Brand#44'])) | (part['SIZE'] == 4) & (part['CONTAINER'] == 'SM') | (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] == 966.1927632252048)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['PT_COMMENT'] == '!') & (part['BRAND'] != 'Brand#35') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5'])) & (part['BRAND'].isin(['Brand#32', 'Brand#24', 'Brand#13', 'Brand#53', 'Brand#55', 'Brand#11', 'Brand#54', 'Brand#45', 'Brand#41', 'Brand#44', 'Brand#35', 'Brand#51', 'Brand#15', 'Brand#23', 'Brand#52', 'Brand#43', 'Brand#21', 'Brand#31', 'Brand#14', 'Brand#22', 'Brand#33', 'Brand#25', 'Brand#34'])) & (part['P_NAME'].str.startswith('w')) | (part['MFGR'] != 'Manufacturer#5') | (part['P_PARTKEY'] != 185) & (part['MFGR'] != 'Manufacturer#4')][['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('count')

partsupp.merge(part[(part['RETAILPRICE'] >= 978.142626472526) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) & (part['RETAILPRICE'] == 957.2394230558007) | (part['CONTAINER'] == 'JUMBO') & (part['MFGR'] != 'Manufacturer#2') & (part['CONTAINER'].str.startswith('SM')) | (part['MFGR'] == 'Manufacturer#5') | (part['TYPE'] != 'SMA')][['BRAND', 'TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] <= 26) | (part['RETAILPRICE'] >= 982.3574814974427) | (part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'] != 'LG') & (part['RETAILPRICE'] != 947.1156138107144) | (part['P_PARTKEY'] > 40) | (part['RETAILPRICE'] <= 972.0826796298325)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] > 11) | (part['SIZE'] > 28) & (part['CONTAINER'].str.startswith('JUMBO')) & (part['P_PARTKEY'] <= 82) | (part['BRAND'].isin(['Brand#52', 'Brand#15', 'Brand#44', 'Brand#33', 'Brand#34', 'Brand#43', 'Brand#53', 'Brand#41'])) | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) & (part['BRAND'] == 'Brand#14') | (part['BRAND'].isin(['Brand#31', 'Brand#35', 'Brand#33', 'Brand#25', 'Brand#13', 'Brand#42', 'Brand#21', 'Brand#15', 'Brand#12']))][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] >= 37) & (part['BRAND'].isin(['Brand#14', 'Brand#42', 'Brand#15', 'Brand#41', 'Brand#52', 'Brand#12', 'Brand#55', 'Brand#31', 'Brand#34', 'Brand#54', 'Brand#23', 'Brand#43', 'Brand#32', 'Brand#44', 'Brand#53', 'Brand#25', 'Brand#13', 'Brand#33'])) & (part['SIZE'] >= 45) & (part['RETAILPRICE'] >= 978.8727507024813) & (part['TYPE'] == 'S') | (part['MFGR'] != 'Manufacturer#3') & (part['CONTAINER'] != 'WRAP') | (part['P_PARTKEY'] > 87) | (part['TYPE'].str.startswith('S'))][['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'BRAND', 'SIZE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] != 23) | (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 2) & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 2740.472868930341) & (supplier['S_ADDRESS'] != 'w')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 3816.1846314994245) | (supplier['S_ACCTBAL'] <= 2415.995499936509) & (supplier['S_ADDRESS'].str.startswith('G'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 11) & (supplier['S_ADDRESS'] == 'T') | (supplier['S_ADDRESS'].str.startswith('R'))].merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 154) | (supplier['S_ACCTBAL'] != 2150.2978337845943) & (supplier['S_ACCTBAL'] != 2206.1784134147556) | (supplier['S_COMMENT'].str.startswith('g'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 2396) | (partsupp['PS_PARTKEY'] >= 22)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_PHONE', 'S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 3966)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 32) | (supplier['S_NATIONKEY'] == 21) | (supplier['S_SUPPKEY'] > 168) | (supplier['S_ADDRESS'] == 'k')][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5265) | (partsupp['PS_PARTKEY'] < 6) & (partsupp['P_COMMENT'] != ';') & (partsupp['PS_SUPPKEY'] <= 2350) | (partsupp['P_COMMENT'].str.startswith('y'))][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] == '2') & (supplier['S_ACCTBAL'] >= 4022.03231520191) & (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 6843)].merge(supplier.merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9630) & (partsupp['PS_PARTKEY'] > 17) | (partsupp['PS_PARTKEY'] != 48) & (partsupp['SUPPLYCOST'] >= 543.6574250398008) & (partsupp['PS_PARTKEY'] < 26)].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 8214) & (partsupp['PS_PARTKEY'] != 32) | (partsupp['SUPPLYCOST'] <= 244.26231048387342) | (partsupp['SUPPLYCOST'] <= 988.7662824073626) & (partsupp['P_COMMENT'] != 'ly ')][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'P_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 1826) | (partsupp['PS_PARTKEY'] < 36) & (partsupp['AVAILQTY'] <= 5277) | (partsupp['SUPPLYCOST'] >= 29.328858799989284) & (partsupp['SUPPLYCOST'] == 733.3613164485666)].merge(supplier.merge(nation[(nation['N_NAME'] == 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 18) | (partsupp['PS_PARTKEY'] > 25) | (partsupp['PS_PARTKEY'] <= 2) & (partsupp['PS_PARTKEY'] < 31)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 27) | (partsupp['SUPPLYCOST'] >= 69.8718633645149)].merge(supplier[(supplier['S_PHONE'] != '1') | (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_SUPPKEY'] <= 59) & (supplier['S_COMMENT'] != 't') & (supplier['S_COMMENT'] != 'i')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 34) & (partsupp['SUPPLYCOST'] >= 590.8484729412681)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] != 'Brand#24') & (part['PT_COMMENT'] == 't') & (part['RETAILPRICE'] >= 922.4892968686981) | (part['P_NAME'] != 'd') | (part['TYPE'] == 'L') | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 20) & (partsupp['AVAILQTY'] != 5028) | (partsupp['AVAILQTY'] >= 683) & (partsupp['PS_PARTKEY'] == 47)].merge(supplier.merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'] != 'S')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 39) | (partsupp['SUPPLYCOST'] >= 220.2558358884966) | (partsupp['SUPPLYCOST'] > 350.80956037288496)].merge(part[['P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 39) & (partsupp['AVAILQTY'] >= 1941) | (partsupp['AVAILQTY'] <= 8607) | (partsupp['PS_PARTKEY'] >= 27) | (partsupp['PS_PARTKEY'] < 14)].merge(part[['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 23) | (partsupp['SUPPLYCOST'] == 643.1531836531848)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['P_NAME'] == 'h') | (part['SIZE'] >= 32) & (part['P_PARTKEY'] != 12) | (part['P_NAME'].str.startswith('g')) & (part['RETAILPRICE'] == 941.2220662840265) & (part['P_NAME'] == 'h') & (part['P_PARTKEY'] <= 131) & (part['PT_COMMENT'] != 'i') & (part['P_NAME'] == 's')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 34)].merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 6077) & (partsupp['AVAILQTY'] >= 5155)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Q')) | (supplier['S_ADDRESS'] != 'p') & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NATIONKEY'] == 9)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 7515) & (partsupp['AVAILQTY'] >= 7963) | (partsupp['SUPPLYCOST'] == 532.2059189546694)].merge(part[(part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'].str.startswith('o')) & (part['RETAILPRICE'] > 1051.3370083126435) | (part['RETAILPRICE'] != 959.2548258659303) | (part['P_PARTKEY'] < 119) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'RETAILPRICE']).agg('count')

partsupp[(partsupp['P_COMMENT'] != 'j') & (partsupp['SUPPLYCOST'] >= 633.5862495943257)].merge(supplier[(supplier['S_ACCTBAL'] >= 1786.6835017689502) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] < 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ';') & (partsupp['PS_PARTKEY'] != 37) & (partsupp['PS_PARTKEY'] < 10)].merge(part[(part['RETAILPRICE'] > 1069.4015239965822) & (part['RETAILPRICE'] >= 991.3927382977923) & (part['TYPE'] != 'L') & (part['PT_COMMENT'] == 'n') | (part['SIZE'] < 47) | (part['P_PARTKEY'] != 135)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'MFGR']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'b') | (partsupp['P_COMMENT'] == 'o') | (partsupp['PS_PARTKEY'] > 16) & (partsupp['AVAILQTY'] < 2398) | (partsupp['SUPPLYCOST'] < 693.2377306278784)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'CONTAINER', 'P_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith(';'))].merge(part[(part['TYPE'] == 'STA') & (part['SIZE'] != 36) | (part['RETAILPRICE'] == 998.0623583276674) & (part['P_PARTKEY'] < 174) | (part['PT_COMMENT'] == 's') & (part['P_PARTKEY'] <= 103) | (part['CONTAINER'] != 'SM') | (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] < 155)][['MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('e')) & (partsupp['P_COMMENT'] != 'o')].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('f'))][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'SM') & (part['P_NAME'] == 'y') & (part['PT_COMMENT'] != '!')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('j')) | (partsupp['SUPPLYCOST'] != 769.0351216166201)].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 479.65247862718525) | (partsupp['P_COMMENT'] == 'are')].merge(supplier.merge(nation[(nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 618.1819353983835) | (partsupp['SUPPLYCOST'] != 125.90139789302906) & (partsupp['PS_PARTKEY'] > 6)].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 390.76672318265446) | (partsupp['PS_SUPPKEY'] != 2496)].merge(supplier[(supplier['S_ACCTBAL'] == 7923.9584007217845) & (supplier['S_ACCTBAL'] != -527.7409026758282) & (supplier['S_NATIONKEY'] == 7) | (supplier['S_NATIONKEY'] != 7) & (supplier['S_ADDRESS'] != 'f') | (supplier['S_ACCTBAL'] <= 6331.681609297998) | (supplier['S_COMMENT'] == 'f')][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 29.060669875469628) | (partsupp['P_COMMENT'] != 'j') | (partsupp['PS_SUPPKEY'] != 6596)].merge(part[['P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('P')) & (part['P_NAME'].str.startswith('d')) | (part['TYPE'] == 'S') | (part['CONTAINER'] != 'SM') & (part['BRAND'] != 'Brand#21')][['P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 331.08957027623455) | (supplier['S_COMMENT'].str.startswith('y'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] != 86) | (part['SIZE'] >= 30) & (part['RETAILPRICE'] == 1040.2290916900836)][['RETAILPRICE', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'].str.startswith('SM')) | (part['PT_COMMENT'].str.startswith('!')) & (part['TYPE'].str.startswith('E')) | (part['TYPE'] != 'E') & (part['SIZE'] >= 22) | (part['PT_COMMENT'] == 'm')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'PT_COMMENT', 'MFGR']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['BRAND'].isin(['Brand#21', 'Brand#31', 'Brand#22', 'Brand#32', 'Brand#35', 'Brand#25', 'Brand#41'])) | (part['RETAILPRICE'] > 956.5552600749934) | (part['SIZE'] >= 5) | (part['P_NAME'].str.startswith('lin')) | (part['TYPE'] != 'E') & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] <= 1031.271790366288) & (part['SIZE'] > 44)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'] != 'r') | (part['SIZE'] != 42) | (part['P_PARTKEY'] > 42) & (part['CONTAINER'].str.startswith('WRAP')) | (part['RETAILPRICE'] != 1088.2066216259489) & (part['MFGR'] == 'Manufacturer#4')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'PT_COMMENT', 'SIZE', 'P_NAME']).agg('count')

partsupp[['PS_PARTKEY']].merge(part[['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'].str.startswith('a')) & (part['MFGR'] == 'Manufacturer#2') & (part['CONTAINER'] == 'MED')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE', 'MFGR']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'].isin(['Brand#43', 'Brand#12', 'Brand#13', 'Brand#32', 'Brand#24', 'Brand#34', 'Brand#52', 'Brand#53', 'Brand#44', 'Brand#41', 'Brand#15', 'Brand#55', 'Brand#33', 'Brand#14', 'Brand#51'])) | (part['TYPE'] == 'STA') & (part['CONTAINER'].str.startswith('WRAP')) | (part['CONTAINER'].str.startswith('MED')) & (part['P_NAME'] != 'v')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 14) & (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] >= 23) | (nation['N_REGIONKEY'] < 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['SIZE'] > 45) | (part['RETAILPRICE'] < 1075.9640739851154) | (part['PT_COMMENT'].str.startswith('f')) & (part['RETAILPRICE'] >= 1086.6229405471522)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE', 'MFGR', 'P_PARTKEY', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'a') | (supplier['S_ADDRESS'].str.startswith('F')) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'] != 'S') | (supplier['S_ADDRESS'].str.startswith('I'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] > 2) | (supplier['S_ADDRESS'].str.startswith('q'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier.merge(nation[(nation['N_COMMENT'] != 'h')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_COMMENT'].str.startswith('v'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NAME'] != 'G') & (nation['N_COMMENT'] != 'y')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] > 17) & (nation['N_NATIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('F')) | (nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 1249.5786460387847) | (supplier['S_COMMENT'].str.startswith('u')) | (supplier['S_ADDRESS'] != '8') | (supplier['S_NATIONKEY'] > 2) | (supplier['S_ACCTBAL'] == 8051.458403640229) & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_SUPPKEY'] >= 8)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 65.73189855900728) & (supplier['S_NATIONKEY'] == 12) | (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'] == '2')].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'M')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] >= 927.9358811011045) | (supplier['S_ACCTBAL'] <= 7810.405065676682) & (supplier['S_SUPPKEY'] == 123) | (supplier['S_NATIONKEY'] < 0)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 't') & (supplier['S_ACCTBAL'] > 7824.611638158988)].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'y') & (supplier['S_SUPPKEY'] == 6) | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] != 'l')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('6')) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 6) | (supplier['S_PHONE'] == '32-') | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ADDRESS'].str.startswith('H'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('6')) | (supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] > 179) & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_NAME'].str.startswith('U')) | (nation['N_NATIONKEY'] <= 5)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('Q')) & (supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_NATIONKEY'] >= 15) & (supplier['S_SUPPKEY'] == 143) | (supplier['S_ACCTBAL'] <= 6625.321731969637) | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'al ') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_PHONE'] == '17-') & (supplier['S_COMMENT'].str.startswith('s'))].merge(nation[(nation['N_COMMENT'] == 'l')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_ADDRESS'] == '9') | (supplier['S_PHONE'] != '3')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'l') | (supplier['S_ADDRESS'] == 'O') | (supplier['S_ADDRESS'].str.startswith('1')) | (supplier['S_ADDRESS'] != 'I') & (supplier['S_ADDRESS'].str.startswith('7'))][['S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].groupby(by=['S_NAME', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 18)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_PHONE'] != '2') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ADDRESS'] != 't') & (supplier['S_NATIONKEY'] == 6)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 12) & (supplier['S_COMMENT'] == 't')].merge(nation[(nation['N_COMMENT'].str.startswith('n')) | (nation['N_NAME'] != 'E') & (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 7)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 8) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 4780.148950813228) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] >= 14) & (supplier['S_ACCTBAL'] <= 7446.341467876085) | (supplier['S_PHONE'] != '1') | (supplier['S_ACCTBAL'] <= 4658.8513099158945) | (supplier['S_SUPPKEY'] > 122)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] <= 56) & (supplier['S_NATIONKEY'] >= 21) & (supplier['S_ADDRESS'] == '3') | (supplier['S_ADDRESS'].str.startswith('S'))].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 176) & (supplier['S_NATIONKEY'] >= 0) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] >= 2167.887182465005) & (supplier['S_ACCTBAL'] <= 7154.516895989245)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].groupby(by=['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 19)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

supplier[['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 19)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'AFR') & (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_COMMENT'] == 'y')].merge(region[(region['R_NAME'] != 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'h') & (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] == 23) & (nation['N_COMMENT'].str.startswith('i'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 15) & (nation['N_COMMENT'] == 'e')].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 7) & (nation['N_NAME'] == 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 23)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_COMMENT'] != 'c')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] < 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 1135.8017335012373) & (customer['C_PHONE'] != '2') | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] <= 5072.0103412294675) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'P')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] <= 3) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] < -645.8196334810268) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] != 7347.32194650989) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] < 12)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 6864.732167632766) & (customer['C_COMMENT'] != 'e') & (customer['C_NATIONKEY'] < 6) | (customer['C_ACCTBAL'] <= 5983.779910224936) & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_CUSTKEY'] < 38) | (customer['C_NATIONKEY'] < 16)].merge(nation.merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 9646.567059600322) | (customer['C_CUSTKEY'] != 34) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] <= 88) | (customer['C_NATIONKEY'] > 2)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 3474.959612574072) | (customer['C_ACCTBAL'] == 1295.5669341385906) & (customer['C_COMMENT'].str.startswith('f')) | (customer['C_COMMENT'] != 'c')].merge(nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_NATIONKEY'] > 4)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != ',') | (customer['C_ADDRESS'] == 'T') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] != 9679.739433020264) | (customer['C_ADDRESS'] == 'h') & (customer['C_ACCTBAL'] != 1592.7335555165037)].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != 'n')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'O') & (customer['C_PHONE'].str.startswith('2')) & (customer['C_NATIONKEY'] != 5) & (customer['C_ACCTBAL'] > 8063.50278061634) & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] > 75) & (customer['C_CUSTKEY'] <= 82)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 'r') & (customer['C_COMMENT'].str.startswith('g')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'q') & (customer['C_NATIONKEY'] > 5) & (customer['C_CUSTKEY'] == 43)].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'] != 'y')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == ' ') | (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'] == 'c') & (customer['C_NATIONKEY'] < 10) & (customer['C_NATIONKEY'] == 3) & (customer['C_ADDRESS'] == 'w') & (customer['C_COMMENT'] != 'y') | (customer['C_PHONE'] == '3')][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']].groupby(by=['C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_COMMENT'] == 'a') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'MACHINERY', 'FURNITURE'])) | (customer['C_PHONE'] == '1') & (customer['C_NATIONKEY'] >= 7) & (customer['C_CUSTKEY'] <= 6) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('h'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'i') | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] <= 3154.3005446356437) & (customer['C_NATIONKEY'] >= 9) & (customer['C_COMMENT'].str.startswith('d'))][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith(' ')) & (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_COMMENT'] == 'y') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING'])) & (customer['C_ADDRESS'] != 'e') | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_ADDRESS'] == 'o')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_COMMENT', 'C_ACCTBAL', 'C_NAME']).agg('count')

customer[(customer['C_CUSTKEY'] != 26) & (customer['C_ADDRESS'] != '7') & (customer['C_NATIONKEY'] <= 1) & (customer['C_ADDRESS'] == 'B') | (customer['C_PHONE'] != '27-') & (customer['C_CUSTKEY'] >= 27)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 23)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 38) | (customer['C_CUSTKEY'] == 39) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] > 17) | (customer['C_ADDRESS'] == 'i') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_NAME'] == 'U')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 7) | (customer['C_CUSTKEY'] > 85)].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] >= 7836.199942904921) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '13-')].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'].str.startswith('F'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 12) | (customer['C_ADDRESS'] == 'f') | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '13-')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 10.84772160313662) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'] != 'H')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= -566.2476583680648)].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'f') | (customer['C_COMMENT'] == 'l') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_PHONE'] != '1')].merge(nation[(nation['N_NATIONKEY'] == 23) & (nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('A')) | (nation['N_NAME'] == 'R')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_COMMENT'].str.startswith('a')) & (customer['C_ACCTBAL'] >= 8970.113852927141)][['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] <= -713.4301501768457) & (customer['C_COMMENT'].str.startswith('i')) | (customer['C_ACCTBAL'] == 8303.938099074976)][['C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 0) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NAME'].str.startswith('I'))][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 19) | (customer['C_ADDRESS'] != 'w') | (customer['C_ACCTBAL'] == 6838.929241697182) | (customer['C_ADDRESS'].str.startswith('Y'))].merge(nation[(nation['N_NATIONKEY'] != 16) & (nation['N_NATIONKEY'] >= 17)].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] != 9) | (customer['C_CUSTKEY'] <= 18) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD', 'FURNITURE'])) & (customer['C_COMMENT'] != 's') & (customer['C_CUSTKEY'] == 2) | (customer['C_CUSTKEY'] != 5)][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 9) | (customer['C_NATIONKEY'] < 14) & (customer['C_PHONE'] == '3') & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('2')) & (customer['C_COMMENT'] != ',') | (customer['C_ACCTBAL'] > 6634.0679726321605) | (customer['C_ADDRESS'] == 'u')].merge(nation[(nation['N_NAME'] != 'R')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] != '1') | (customer['C_ADDRESS'] == 'f') | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NATIONKEY'] >= 9)][['C_NAME', 'C_NATIONKEY', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '3') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] >= 14)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 20) & (customer['C_NATIONKEY'] == 3) & (customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] != 5) & (customer['C_ACCTBAL'] >= 8705.403604341232)][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ACCTBAL', 'C_ADDRESS']].groupby(by=['C_PHONE', 'C_COMMENT', 'C_ACCTBAL']).agg('count')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] <= 5)].merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_CUSTKEY'] != 72) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == ',') & (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_CUSTKEY'] > 9) | (customer['C_PHONE'].str.startswith('2')) & (customer['C_CUSTKEY'] > 42)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 2) | (region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) | (customer['C_COMMENT'] == '.') | (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 53) | (customer['C_COMMENT'] != 'e') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] != 'y') & (customer['C_ADDRESS'] != 'E')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 0) & (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'] != 'M')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 2) | (nation['N_NATIONKEY'] > 3) & (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] < 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[['C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] <= 11)].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] <= 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 18)].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 3) & (nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] == 15) & (nation['N_COMMENT'] != 'r')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] <= 4)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] != 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 6597.999250118095) | (customer['C_PHONE'] == '22-') | (customer['C_NATIONKEY'] <= 7) & (customer['C_PHONE'] != '2') | (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_ADDRESS'].str.startswith('g')) | (customer['C_ADDRESS'].str.startswith('8')) & (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_ACCTBAL'] >= 7590.53911632929) | (customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] <= 2) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['C_COMMENT'] != 'l') | (customer['C_NATIONKEY'] == 17)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['BRAND'].isin(['Brand#22', 'Brand#55', 'Brand#43', 'Brand#13', 'Brand#12', 'Brand#11', 'Brand#31', 'Brand#33', 'Brand#41', 'Brand#54', 'Brand#44', 'Brand#52', 'Brand#32', 'Brand#24', 'Brand#45', 'Brand#23', 'Brand#51'])) & (part['CONTAINER'].str.startswith('MED')) | (part['BRAND'] != 'Brand#14') & (part['TYPE'] != 'E') | (part['TYPE'] != 'P') | (part['P_NAME'].str.startswith('f')) | (part['P_PARTKEY'] <= 48) | (part['SIZE'] != 32)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'TYPE', 'CONTAINER', 'RETAILPRICE']).agg('count')

lineitem.merge(partsupp.merge(part[(part['RETAILPRICE'] > 1041.0944063238187) & (part['TYPE'] != 'STA') & (part['RETAILPRICE'] < 950.3256731764453) & (part['PT_COMMENT'] == 'g') | (part['P_NAME'] != 'a') & (part['SIZE'] > 13) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5'])) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#5'])) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'SIZE', 'TYPE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(part[(part['SIZE'] == 24) | (part['P_PARTKEY'] <= 96) & (part['SIZE'] != 12) & (part['MFGR'] == 'Manufacturer#4') & (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'] == 'E') & (part['P_PARTKEY'] >= 75)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'SIZE', 'P_NAME', 'MFGR']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 1148) & (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['PS_SUPPKEY'] < 2711) | (partsupp['PS_PARTKEY'] != 17)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 41) | (partsupp['P_COMMENT'] != '.') & (partsupp['SUPPLYCOST'] <= 187.24372282223598) & (partsupp['SUPPLYCOST'] <= 584.0605472213789)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[['P_NAME', 'P_PARTKEY', 'MFGR', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'c')].merge(part[(part['CONTAINER'].str.startswith('SM')) & (part['P_NAME'].str.startswith('blu')) & (part['P_PARTKEY'] >= 24) & (part['TYPE'] != 'M') & (part['TYPE'].str.startswith('E')) & (part['PT_COMMENT'].str.startswith('n')) | (part['BRAND'] == 'Brand#45')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'CONTAINER', 'SIZE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 661.717036632237) & (partsupp['SUPPLYCOST'] < 555.5123227175372)].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'JUMBO') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1'])) & (part['CONTAINER'] == 'LG') | (part['BRAND'] == 'Brand#23') | (part['CONTAINER'] != 'LG') | (part['BRAND'] == 'Brand#44') | (part['PT_COMMENT'] != 'g') | (part['PT_COMMENT'] == 'o') & (part['P_PARTKEY'] > 159)][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['QUANTITY'] > 34) & (lineitem['L_SUPPKEY'] == 5616) | (lineitem['LINENUMBER'] >= 2)][['L_PARTKEY', 'RETURNFLAG', 'SHIPDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX']].groupby(by=['TAX', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['L_PARTKEY'] < 163668) | (lineitem['L_PARTKEY'] > 175545) | (lineitem['L_COMMENT'] == 'u') & (lineitem['DISCOUNT'] <= 0.0264423798509846) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'TAKE BACK RETURN', 'NONE', 'COLLECT COD'])) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['EXTENDEDPRICE'] != 25108.67114616291) & (lineitem['QUANTITY'] >= 45)][['QUANTITY', 'DISCOUNT', 'EXTENDEDPRICE']].groupby(by=['DISCOUNT', 'QUANTITY', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.07020518688590148) | (lineitem['L_SUPPKEY'] < 4763) | (lineitem['DISCOUNT'] <= 0.032011981216723155) | (lineitem['TAX'] == 0.020904698357258278) & (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['QUANTITY'] > 13)][['L_COMMENT', 'COMMITDATE', 'L_ORDERKEY', 'RETURNFLAG', 'LINENUMBER', 'SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 11148.082791411192) | (lineitem['DISCOUNT'] > 0.06508775387535078) | (lineitem['L_SUPPKEY'] != 7910) | (lineitem['L_ORDERKEY'] <= 115) & (lineitem['LINENUMBER'] > 3) & (lineitem['L_COMMENT'] != 'i') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['LINENUMBER'] < 4) & (lineitem['L_SUPPKEY'] > 1732) & (lineitem['L_PARTKEY'] != 41132)].merge(partsupp[(partsupp['SUPPLYCOST'] >= 663.4882107175227) | (partsupp['P_COMMENT'] == 'g') | (partsupp['P_COMMENT'] != '.')].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 55476.96140585231) | (lineitem['QUANTITY'] > 21) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['SHIPMODE'] != 'SHIP')].merge(partsupp[(partsupp['PS_PARTKEY'] != 28) | (partsupp['PS_PARTKEY'] < 17)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_SUPPKEY'] != 910) | (lineitem['L_COMMENT'].str.startswith('s')) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['TAX'] >= 0.062449664571570106) | (lineitem['L_SUPPKEY'] < 3151)].merge(partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['LINESTATUS'] != 'F') & (lineitem['L_PARTKEY'] >= 54650) & (lineitem['L_COMMENT'] == 'ly ') & (lineitem['SHIPMODE'].isin(['TRUCK', 'MAIL', 'REG AIR', 'FOB', 'AIR'])) & (lineitem['L_SUPPKEY'] == 6318) | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['TAX'] == 0.0784340793840482) & (lineitem['SHIPDATE'] > '1992-04-27')][['L_PARTKEY', 'COMMITDATE', 'SHIPMODE', 'LINENUMBER', 'TAX', 'L_COMMENT', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE', 'QUANTITY']]

lineitem[(lineitem['L_SUPPKEY'] < 2261) | (lineitem['L_COMMENT'].str.startswith('g')) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['EXTENDEDPRICE'] > 46489.34184071898) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['QUANTITY'] >= 12) | (lineitem['TAX'] >= 0.03340008887061036) & (lineitem['QUANTITY'] == 41) | (lineitem['LINESTATUS'].isin(['F', 'O']))][['EXTENDEDPRICE', 'SHIPMODE', 'QUANTITY', 'SHIPDATE']].groupby(by=['EXTENDEDPRICE', 'SHIPMODE', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 14) & (lineitem['QUANTITY'] != 44) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE'])) | (lineitem['L_SUPPKEY'] < 8478) & (lineitem['L_ORDERKEY'] > 169)][['EXTENDEDPRICE', 'SHIPDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'DISCOUNT', 'L_ORDERKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['R'])) & (lineitem['QUANTITY'] == 17) | (lineitem['L_COMMENT'] != 'l') | (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_ORDERKEY'] != 192) | (lineitem['LINENUMBER'] != 1)].merge(partsupp.merge(part[(part['PT_COMMENT'].str.startswith('a')) | (part['PT_COMMENT'] == 'k') & (part['RETAILPRICE'] == 977.3827948515649) & (part['SIZE'] == 3) | (part['PT_COMMENT'] == 'u') | (part['BRAND'] != 'Brand#35') | (part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_SUPPKEY'] > 7902) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['L_PARTKEY'] < 90829)][['SHIPDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPMODE', 'DISCOUNT']].groupby(by=['DISCOUNT', 'SHIPMODE', 'L_ORDERKEY', 'L_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] >= 143) | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_ORDERKEY'] == 104)][['SHIPDATE', 'TAX', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINESTATUS'] == 'F') | (lineitem['DISCOUNT'] == 0.003115884619919529) | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['EXTENDEDPRICE'] != 18882.368327368764) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['RETURNFLAG'] != 'R') | (lineitem['COMMITDATE'] >= '1998-10-16')][['L_PARTKEY', 'LINESTATUS', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('g')) | (partsupp['AVAILQTY'] >= 4646) | (partsupp['AVAILQTY'] > 7702) & (partsupp['PS_SUPPKEY'] < 3322)][['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 29) | (part['PT_COMMENT'].str.startswith('the')) & (part['P_PARTKEY'] != 10) | (part['P_NAME'] != 't')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['EXTENDEDPRICE'] > 74354.2112174772) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['COMMITDATE'] != '1992-05-15')][['RECEIPTDATE', 'DISCOUNT', 'SHIPMODE', 'LINENUMBER', 'TAX', 'L_COMMENT']].groupby(by=['L_COMMENT', 'RECEIPTDATE', 'LINENUMBER', 'DISCOUNT', 'SHIPMODE']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.06606371051581786) | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['TAX'] != 0.05045396843112746) & (lineitem['L_PARTKEY'] < 13458) & (lineitem['EXTENDEDPRICE'] == 64364.15269002314)].merge(orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'CLERK', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERDATE']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_ORDERKEY', 'L_COMMENT', 'L_SUPPKEY']].merge(orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] < 263820.58382495306) & (orders['TOTALPRICE'] < 39295.95048390116)][['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY']).agg('count')

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'LINENUMBER', 'RETURNFLAG']].merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_ADDRESS']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'RETURNFLAG']].merge(orders[(orders['TOTALPRICE'] < 29685.113911654436)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'u')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] < 440) & (partsupp['SUPPLYCOST'] < 855.5984001422382) & (partsupp['PS_SUPPKEY'] != 7371)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['L_SUPPKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'COMMITDATE', 'QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('g')) | (partsupp['P_COMMENT'] != 'g')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'COMMITDATE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPMODE', 'LINENUMBER', 'QUANTITY']].merge(orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPINSTRUCT', 'RECEIPTDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'l')].merge(part[['P_PARTKEY', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'P_NAME']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] == 't') & (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] == 'e')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'G') | (nation['N_NAME'].str.startswith('S'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('count')

nation[(nation['N_NAME'] != 'G') | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'M') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] != 3) & (nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] < 23)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] >= 6)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_REGIONKEY'] != 0) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

nation[(nation['N_NATIONKEY'] <= 22) | (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'B') & (nation['N_COMMENT'] == 'r')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] > 2) & (nation['N_NAME'] != 'J')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 23) & (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] <= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] <= 4) & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] == 'e')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

nation[(nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] > 4)][['N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] > 2) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] > 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= -842.9586262763024)][['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'MKTSEGMENT', 'C_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] <= 8905.338153424984) & (customer['C_COMMENT'] == 'q') | (customer['C_COMMENT'] == '.') | (customer['C_COMMENT'] == 'g') & (customer['C_CUSTKEY'] > 35) | (customer['C_COMMENT'].str.startswith('c')) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 14)][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] > 3986.56664306151) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 10) & (customer['C_PHONE'] != '18-') | (customer['C_CUSTKEY'] >= 28) | (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 40)][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_NAME', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('I')) & (customer['C_ACCTBAL'] == 6084.298121442733) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'] != '3')].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 0)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'h') | (customer['C_ADDRESS'] != '8') & (customer['C_ACCTBAL'] > 2833.0618762410922) & (customer['C_ACCTBAL'] >= 571.5041567696614) & (customer['C_ACCTBAL'] <= 827.1786902405283) & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_COMMENT'].str.startswith('o'))].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] >= 12)].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_NATIONKEY'] < 9) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] < 7670.9028881181475) & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD']))].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'] != 'n')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_CUSTKEY'] == 44) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ACCTBAL'] > 6300.091283118201) | (customer['C_ACCTBAL'] <= 2784.6494382314772) | (customer['C_COMMENT'] != ' ') & (customer['C_CUSTKEY'] < 3) & (customer['C_NATIONKEY'] != 9)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] <= 1943.0857899579069) & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] <= 3834.2449633609767) & (customer['C_NAME'] == 'C')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] == 14) | (nation['N_COMMENT'] == 'p') | (nation['N_NAME'].str.startswith('V')) & (nation['N_COMMENT'].str.startswith('a'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] != 'i') & (orders['O_CUSTKEY'] >= 24024) | (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_COMMENT'] == 'the') | (orders['O_CUSTKEY'] < 81266) & (orders['TOTALPRICE'] >= 45667.691792744794)][['ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE', 'TOTALPRICE']).agg('mean', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] == 93081.6177725956)][['O_COMMENT', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] > 0)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] != 14) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_REGIONKEY'] < 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] != 'o') | (orders['TOTALPRICE'] != 307513.08982792636) | (orders['O_ORDERKEY'] < 560) | (orders['TOTALPRICE'] == 260247.0607697265) | (orders['O_COMMENT'].str.startswith(','))].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_CUSTKEY'] == 113725) & (orders['ORDERSTATUS'] != 'F') | (orders['TOTALPRICE'] < 186661.12593220107) & (orders['O_COMMENT'] != 'd') | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'].str.startswith('s'))].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'ASI') & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] > 97356.28445026053)][['O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY'])) & (customer['C_PHONE'] == '25-') & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('t')) & (customer['C_ADDRESS'] == 'T') & (customer['C_ACCTBAL'] < 5628.673308688153)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT'])) & (orders['O_CUSTKEY'] < 72399) | (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_NATIONKEY'] == 14) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] < 10) & (customer['C_PHONE'] == '3') & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'g') | (customer['C_COMMENT'] != 'w')].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT'])) | (orders['ORDERDATE'] < '1992-01-13')].merge(customer[(customer['C_ACCTBAL'] > 6983.953024672543) & (customer['C_CUSTKEY'] == 18)][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_COMMENT'].str.startswith('j')) & (orders['TOTALPRICE'] < 169260.62764640248) & (orders['TOTALPRICE'] < 186429.00334871604) & (orders['TOTALPRICE'] >= 207317.88673436944) | (orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'] != 'C')].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'ly ') & (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_ADDRESS'].str.startswith('v')) | (customer['C_ADDRESS'] == 'Q') & (customer['C_COMMENT'] == ',') & (customer['C_PHONE'] != '27-')][['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('count')

orders[(orders['O_COMMENT'] != 'y') | (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] >= 350) & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['O_ORDERKEY'] != 441) | (orders['ORDERDATE'] > '1998-07-21')].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('A')) & (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('t')) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_NATIONKEY'] < 22) | (customer['C_NATIONKEY'] > 3) | (customer['C_ADDRESS'] != 'z') | (customer['C_ACCTBAL'] != 5518.298364896402) | (customer['C_CUSTKEY'] <= 58) | (customer['C_CUSTKEY'] != 17)][['C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 84694) | (orders['O_CUSTKEY'] <= 5399) & (orders['O_CUSTKEY'] < 71430) | (orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 218)].merge(customer[(customer['C_NATIONKEY'] >= 0)].merge(nation[(nation['N_REGIONKEY'] != 3)].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 494) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['TOTALPRICE'] == 18879.229112380075) | (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] != 'O') | (orders['O_CUSTKEY'] == 89015) & (orders['ORDERSTATUS'] != 'O')].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 147) & (orders['O_ORDERKEY'] >= 628) & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'].str.startswith('o')) & (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] == 607) | (orders['O_ORDERKEY'] == 667) & (orders['O_ORDERKEY'] <= 712)].merge(customer[(customer['C_CUSTKEY'] == 53) | (customer['C_CUSTKEY'] <= 9) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 2454.959343699069)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] == 118141) & (orders['O_ORDERKEY'] >= 87) | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_ADDRESS'] == '3') & (customer['C_NATIONKEY'] >= 8)][['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] > 143585)].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] > 0) | (orders['O_COMMENT'] != 'ly ') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NATIONKEY'] <= 0) & (customer['C_CUSTKEY'] == 36) | (customer['C_COMMENT'] == 'l') & (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 185892.09613594803) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['O_CUSTKEY'] == 77809) | (orders['O_ORDERKEY'] > 627) & (orders['O_COMMENT'] == 'n')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK']].groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] > 137262.85468340153) & (orders['O_COMMENT'].str.startswith('a')) & (orders['O_CUSTKEY'] == 35427) & (orders['O_COMMENT'] != 'uri') | (orders['O_CUSTKEY'] > 137385)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'] != 'p')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] == '18-')][['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] < 317.7082002268744) | (customer['C_PHONE'] != '1') | (customer['C_ACCTBAL'] < 9948.50764210739) | (customer['C_CUSTKEY'] == 53)][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] < 13) & (customer['C_ADDRESS'].str.startswith('i'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[(customer['C_CUSTKEY'] > 15) & (customer['C_NATIONKEY'] == 4) & (customer['C_CUSTKEY'] > 68) | (customer['C_ACCTBAL'] < 51.273586987151134) & (customer['C_COMMENT'].str.startswith('e'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] != 12) | (nation['N_NATIONKEY'] <= 11)].merge(region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] != 72)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != 'h') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '2') | (customer['C_COMMENT'] != ' ')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['BRAND'].isin(['Brand#53', 'Brand#23', 'Brand#32', 'Brand#54', 'Brand#52', 'Brand#35', 'Brand#44', 'Brand#21', 'Brand#42', 'Brand#25', 'Brand#34', 'Brand#45', 'Brand#11', 'Brand#22', 'Brand#33', 'Brand#43', 'Brand#14'])) | (part['P_NAME'] == 'lin') & (part['SIZE'] >= 31) | (part['SIZE'] > 10) | (part['PT_COMMENT'] != 'h') & (part['TYPE'].str.startswith('SMA')) & (part['RETAILPRICE'] > 998.9638773220078) & (part['PT_COMMENT'] == 'p')][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['PT_COMMENT', 'CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#2') | (part['PT_COMMENT'] == 'f') | (part['SIZE'] < 9) & (part['CONTAINER'] == 'LG') & (part['P_NAME'] == 'i') & (part['BRAND'] == 'Brand#52') & (part['MFGR'].isin(['Manufacturer#3'])) & (part['P_PARTKEY'] <= 156)][['BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'CONTAINER']].groupby(by=['TYPE']).agg('mean', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1'])) & (part['P_PARTKEY'] <= 76) & (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] == 1085.8799274183496)][['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']].groupby(by=['P_PARTKEY', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT']).agg('count')

part[(part['RETAILPRICE'] != 1023.9150673975442) & (part['BRAND'].isin(['Brand#14', 'Brand#11', 'Brand#15', 'Brand#55', 'Brand#43', 'Brand#13', 'Brand#23', 'Brand#42', 'Brand#35', 'Brand#53', 'Brand#52', 'Brand#41'])) | (part['BRAND'] != 'Brand#12') | (part['PT_COMMENT'].str.startswith('d')) | (part['P_NAME'] == 'lem') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#5'])) | (part['P_PARTKEY'] <= 67)][['PT_COMMENT', 'SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']].groupby(by=['SIZE', 'BRAND', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] > 1066.7943939427018) & (part['P_NAME'] != 'cor') & (part['CONTAINER'].str.startswith('MED')) | (part['P_PARTKEY'] >= 64) | (part['RETAILPRICE'] != 1054.7006927413845) | (part['TYPE'].str.startswith('M'))][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['CONTAINER', 'SIZE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] > 922.4538932650594) | (part['CONTAINER'] != 'WRAP') | (part['MFGR'].isin(['Manufacturer#1'])) & (part['PT_COMMENT'].str.startswith('t')) & (part['CONTAINER'] == 'SM') & (part['SIZE'] >= 34) | (part['RETAILPRICE'] == 935.7453600633903)][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'MFGR', 'BRAND']].groupby(by=['P_PARTKEY', 'BRAND', 'SIZE']).agg('count')

part[(part['SIZE'] <= 24) & (part['PT_COMMENT'] == 'e') | (part['PT_COMMENT'] != 't') | (part['P_PARTKEY'] >= 76) & (part['P_PARTKEY'] >= 116)][['MFGR', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'TYPE']].groupby(by=['P_PARTKEY', 'BRAND', 'SIZE', 'TYPE']).agg('mean', numeric_only=True)

part[(part['SIZE'] > 26) & (part['RETAILPRICE'] >= 966.3279519133143) & (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] >= 924.1633941107098) | (part['MFGR'].isin(['Manufacturer#1'])) | (part['BRAND'] == 'Brand#42') | (part['BRAND'] != 'Brand#11') | (part['SIZE'] == 46) & (part['P_PARTKEY'] >= 144)][['MFGR', 'RETAILPRICE', 'P_NAME', 'SIZE']].groupby(by=['MFGR', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['TYPE'] == 'STA') | (part['P_NAME'] != 'lem') & (part['RETAILPRICE'] <= 1041.756650036935) | (part['P_NAME'] == 'blu') | (part['P_PARTKEY'] < 75) | (part['MFGR'] != 'Manufacturer#2') & (part['P_NAME'] == 'n') & (part['MFGR'] == 'Manufacturer#5') & (part['P_PARTKEY'] <= 110)][['BRAND', 'P_NAME', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER']].groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] == 'JUMBO') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3'])) & (part['P_PARTKEY'] == 3) & (part['CONTAINER'] != 'MED')][['MFGR', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'PT_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#4'])) | (part['CONTAINER'] == 'SM') | (part['SIZE'] != 30)][['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'CONTAINER', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] != '!') | (part['P_NAME'] != 'p') & (part['SIZE'] >= 2) | (part['P_PARTKEY'] != 122) | (part['CONTAINER'] == 'LG') | (part['TYPE'].str.startswith('S')) | (part['P_NAME'] != 'h')][['PT_COMMENT', 'P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['PT_COMMENT'] == 'h') | (part['CONTAINER'] == 'MED') | (part['P_NAME'] != 'o') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) | (part['TYPE'] != 'S') | (part['SIZE'] >= 5) & (part['MFGR'] != 'Manufacturer#2')][['BRAND', 'MFGR', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'SIZE']).agg('min', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] >= 40) | (part['P_NAME'] != 'bis') & (part['RETAILPRICE'] < 948.9905806020328) | (part['P_NAME'] != 'r')][['P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'P_NAME']).agg('mean', numeric_only=True)

partsupp.merge(part[(part['SIZE'] <= 19) | (part['SIZE'] != 2) & (part['RETAILPRICE'] < 1050.0189183695593)][['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME']).agg('sum', numeric_only=True)

partsupp.merge(part[(part['SIZE'] >= 23) | (part['SIZE'] > 42)][['BRAND', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'SIZE']).agg('sum', numeric_only=True)

partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] != 'K') | (nation['N_COMMENT'] != 'a')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 'P') & (supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'] != '7')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 14) | (supplier['S_ACCTBAL'] <= 7284.83710606435)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 5138) & (partsupp['PS_SUPPKEY'] != 4412)].merge(supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 11) | (supplier['S_NATIONKEY'] <= 13) | (supplier['S_ADDRESS'] != 'N')].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] != 11) | (partsupp['P_COMMENT'] == 'k')][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'].str.startswith('LG')) | (part['MFGR'] == 'Manufacturer#1') & (part['P_NAME'] == 'n') & (part['P_PARTKEY'] <= 58) & (part['BRAND'].isin(['Brand#43', 'Brand#51', 'Brand#53', 'Brand#33', 'Brand#22', 'Brand#31', 'Brand#55', 'Brand#41', 'Brand#35', 'Brand#24', 'Brand#54', 'Brand#25', 'Brand#11', 'Brand#14', 'Brand#42', 'Brand#15', 'Brand#23', 'Brand#52', 'Brand#34', 'Brand#45', 'Brand#32', 'Brand#12']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 15) | (partsupp['PS_PARTKEY'] >= 22) | (partsupp['AVAILQTY'] >= 660) | (partsupp['PS_SUPPKEY'] <= 2239) | (partsupp['PS_SUPPKEY'] == 5013)].merge(part[['TYPE', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 28) & (partsupp['PS_PARTKEY'] == 36) | (partsupp['AVAILQTY'] >= 5130) | (partsupp['PS_SUPPKEY'] >= 5498) | (partsupp['PS_PARTKEY'] <= 10)].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 3) | (partsupp['PS_SUPPKEY'] == 5552) & (partsupp['P_COMMENT'] != 'q') | (partsupp['PS_SUPPKEY'] == 2516)].merge(part[(part['PT_COMMENT'] != 'c') & (part['MFGR'] != 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1'])) & (part['SIZE'] < 41) & (part['RETAILPRICE'] == 1016.6523580973017)][['MFGR', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 4) & (partsupp['P_COMMENT'] != 'the')][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'L') & (part['TYPE'] != 'P') | (part['SIZE'] < 27) & (part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] < 1094.4274826720452) & (part['SIZE'] <= 41) | (part['RETAILPRICE'] == 964.0409940591004) & (part['BRAND'].isin(['Brand#13', 'Brand#53', 'Brand#23', 'Brand#52', 'Brand#22', 'Brand#51', 'Brand#44', 'Brand#42', 'Brand#24', 'Brand#54', 'Brand#55', 'Brand#11', 'Brand#41', 'Brand#35'])) | (part['P_NAME'].str.startswith('lin'))], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 39) & (partsupp['P_COMMENT'] == 'b')][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['CONTAINER'] == 'MED') | (part['RETAILPRICE'] <= 1028.194023274362) | (part['TYPE'] == 'S') | (part['SIZE'] == 13) & (part['TYPE'] != 'E')][['BRAND', 'P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 11) & (partsupp['AVAILQTY'] == 365) & (partsupp['SUPPLYCOST'] == 965.9958731395616) & (partsupp['P_COMMENT'] != 'g')][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 28) & (partsupp['SUPPLYCOST'] <= 235.56261509162266) | (partsupp['SUPPLYCOST'] <= 151.08299854420144) | (partsupp['PS_PARTKEY'] <= 12) | (partsupp['SUPPLYCOST'] < 343.9622943858642)].merge(part[(part['SIZE'] != 32) | (part['P_NAME'].str.startswith('lin')) | (part['TYPE'] == 'SMA') & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) & (part['BRAND'] == 'Brand#52')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER', 'MFGR']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 4441) & (partsupp['PS_PARTKEY'] != 47) | (partsupp['PS_PARTKEY'] >= 31) | (partsupp['AVAILQTY'] <= 1957)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 11) & (nation['N_NAME'] == 'B')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 6492) | (partsupp['PS_PARTKEY'] > 24)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 734) | (partsupp['SUPPLYCOST'] >= 813.8738288077761) | (partsupp['AVAILQTY'] < 3308) & (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['AVAILQTY'] != 1653)].merge(part[(part['P_PARTKEY'] == 160) | (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] >= 18) & (part['SIZE'] > 40) | (part['SIZE'] == 27) & (part['CONTAINER'] != 'LG')][['P_PARTKEY', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 2828) & (partsupp['PS_SUPPKEY'] != 6984) & (partsupp['PS_PARTKEY'] <= 7)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] >= 14) & (supplier['S_COMMENT'].str.startswith('w'))][['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 6324) | (partsupp['AVAILQTY'] >= 8396)].merge(supplier[(supplier['S_ACCTBAL'] <= 7771.490468703577) & (supplier['S_PHONE'] != '32-') & (supplier['S_ACCTBAL'] != 772.3247727992721) & (supplier['S_PHONE'] == '14-') | (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] == 19) | (supplier['S_SUPPKEY'] != 43)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_ACCTBAL']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 944)].merge(part[(part['RETAILPRICE'] >= 1041.9513561449437) | (part['MFGR'] != 'Manufacturer#2') | (part['P_NAME'] == 'bis') | (part['P_PARTKEY'] > 195) & (part['TYPE'] == 'L') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#5'])) & (part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER', 'MFGR', 'SIZE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'e')][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'r') | (partsupp['P_COMMENT'] != ' th') & (partsupp['PS_SUPPKEY'] == 4657)][['PS_PARTKEY']].merge(part[['BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'are')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#3'])) & (part['P_NAME'] != 'p') & (part['P_NAME'].str.startswith('v')) | (part['BRAND'].isin(['Brand#23', 'Brand#53', 'Brand#55', 'Brand#13', 'Brand#11', 'Brand#54', 'Brand#41', 'Brand#22', 'Brand#52', 'Brand#43', 'Brand#33', 'Brand#25', 'Brand#35', 'Brand#44', 'Brand#42', 'Brand#51', 'Brand#31', 'Brand#34', 'Brand#14', 'Brand#45', 'Brand#15', 'Brand#24']))][['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) | (partsupp['AVAILQTY'] <= 9825) & (partsupp['PS_SUPPKEY'] < 2920)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 4) | (nation['N_NAME'] != 'I') | (nation['N_NAME'].str.startswith('M'))][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 426.93849676150757) & (partsupp['PS_PARTKEY'] == 42) | (partsupp['PS_SUPPKEY'] > 3822)].merge(part[(part['SIZE'] <= 16) | (part['P_NAME'].str.startswith('h')) & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4'])) & (part['TYPE'] == 'L') | (part['P_PARTKEY'] <= 59) & (part['BRAND'] != 'Brand#25')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 426.95334489679357) | (partsupp['PS_SUPPKEY'] != 5695) & (partsupp['PS_SUPPKEY'] == 3239) & (partsupp['P_COMMENT'] == 'p')].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] <= 111) | (part['P_PARTKEY'] == 153) & (part['P_NAME'] != 'cor') | (part['TYPE'] != 'E') | (part['P_PARTKEY'] > 79) & (part['TYPE'].str.startswith('M')) & (part['MFGR'] == 'Manufacturer#5')][['TYPE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] <= 5) & (nation['N_COMMENT'] == 'a')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'g') & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_COMMENT'] != 'c') | (nation['N_NAME'].str.startswith('P'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'M') | (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 9295.166071220105) & (supplier['S_COMMENT'].str.startswith('r')) & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] == 't') | (supplier['S_NATIONKEY'] > 13) | (supplier['S_COMMENT'] == ' ')].merge(nation[(nation['N_COMMENT'].str.startswith('o'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] <= 6157.387127192892) | (supplier['S_NATIONKEY'] == 3) | (supplier['S_SUPPKEY'] >= 175) & (supplier['S_PHONE'] != '26-') | (supplier['S_NATIONKEY'] != 12)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'] != 'A') | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 7211.230704338733)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '6') & (supplier['S_ACCTBAL'] >= 7738.698780418407) | (supplier['S_SUPPKEY'] >= 191) | (supplier['S_NATIONKEY'] < 5) | (supplier['S_NATIONKEY'] <= 13)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'R') & (supplier['S_NATIONKEY'] != 22)][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_COMMENT'].str.startswith('e')) & (nation['N_COMMENT'] == 'c')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == ',') | (supplier['S_SUPPKEY'] < 141)].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'f') | (supplier['S_ADDRESS'] != 'a') | (supplier['S_SUPPKEY'] == 52) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] >= 133) & (supplier['S_ACCTBAL'] <= -766.0640614868789) | (supplier['S_PHONE'] == '17-')].merge(nation[(nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == ' ')][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'f') & (supplier['S_COMMENT'] == 'g') & (supplier['S_ACCTBAL'] > -917.3916638686267) | (supplier['S_ACCTBAL'] < 7470.167155105745) | (supplier['S_SUPPKEY'] < 10) | (supplier['S_ACCTBAL'] > 706.0742454781794)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] == 3) & (supplier['S_ADDRESS'] != 'u') | (supplier['S_ACCTBAL'] > 9337.358244921748) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] <= 1) & (nation['N_COMMENT'] == 'e') & (nation['N_NAME'] != 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '28-') | (supplier['S_COMMENT'] != 'j') | (supplier['S_ADDRESS'] == 'o')].merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_COMMENT'] == 'y') & (nation['N_NAME'] != 'A') | (nation['N_NAME'] != 'I')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 13) | (supplier['S_SUPPKEY'] > 148)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 12) & (nation['N_COMMENT'] != 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 23) & (supplier['S_NATIONKEY'] >= 17) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] <= 23) & (supplier['S_COMMENT'] == 'k') | (supplier['S_SUPPKEY'] <= 130) & (supplier['S_COMMENT'].str.startswith('y'))].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'] != 's')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 4) & (supplier['S_SUPPKEY'] > 126) & (supplier['S_COMMENT'] == 'the') | (supplier['S_ACCTBAL'] < 1706.6795919690283)].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 4) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'v')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 11)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 12) | (supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_NATIONKEY'] < 17) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'n')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].groupby(by=['S_COMMENT', 'S_ACCTBAL', 'S_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] > 9)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'] == 'c') | (supplier['S_NATIONKEY'] > 7) | (supplier['S_PHONE'] != '17-') & (supplier['S_ADDRESS'] == 'W')].merge(nation[(nation['N_NATIONKEY'] > 2) & (nation['N_COMMENT'] != ' ') & (nation['N_COMMENT'].str.startswith('t')) | (nation['N_COMMENT'] == 'n')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NATIONKEY'] != 21) & (supplier['S_COMMENT'] == ' ') | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NATIONKEY'] <= 4) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('r'))].merge(nation[(nation['N_NATIONKEY'] >= 17)].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] > 105) | (supplier['S_SUPPKEY'] >= 40) & (supplier['S_PHONE'] == '14-') & (supplier['S_ADDRESS'] == 't') & (supplier['S_ADDRESS'] == 'J') | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3) | (nation['N_NATIONKEY'] != 10)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'U')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] <= 0) & (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] <= 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NATIONKEY'] == 5) & (nation['N_COMMENT'].str.startswith('i')) & (nation['N_NAME'] != 'M')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_NATIONKEY'] < 22) | (nation['N_NATIONKEY'] <= 8) & (nation['N_NATIONKEY'] < 5)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

customer.merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NAME'].str.startswith('I')) | (nation['N_NATIONKEY'] != 8) & (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] <= 14) & (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] <= 18)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] == 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 640.9952939338939) | (customer['C_COMMENT'] == 'e')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('ASI')) | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] == 9423.337591473535) & (customer['C_ACCTBAL'] < 6903.437120346234) | (customer['C_ACCTBAL'] <= 9369.001838744482) | (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'U')][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'J') | (customer['C_ADDRESS'] == 'z')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'h') & (customer['C_COMMENT'] != ',') & (customer['C_ADDRESS'] != 'P') | (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] <= 4) | (customer['C_NATIONKEY'] == 0)][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] < 3) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'r') & (customer['C_CUSTKEY'] > 24)][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('i')) & (customer['C_ACCTBAL'] >= 3983.2236772376646) & (customer['C_ACCTBAL'] <= 5816.383747876618) | (customer['C_ADDRESS'] == '9') & (customer['C_CUSTKEY'] != 6) & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] < 2) & (customer['C_ADDRESS'] != '3')].merge(nation.merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != '.') & (customer['C_CUSTKEY'] > 80) | (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] >= 5100.294174670403) | (customer['C_NATIONKEY'] == 21)].merge(nation[(nation['N_COMMENT'] == 'a') | (nation['N_NATIONKEY'] < 10)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'] != 't') & (customer['C_CUSTKEY'] == 91) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == '.')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] != 'M')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'u') | (customer['C_ADDRESS'] == 'e') & (customer['C_CUSTKEY'] > 99) | (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ACCTBAL'] > 3487.6715650072974)].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] != 0) & (nation['N_REGIONKEY'] == 0) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] != 17) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('u')) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] == 17) & (customer['C_CUSTKEY'] == 61)][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 5) | (customer['C_ACCTBAL'] != 8286.226286112254) | (customer['C_COMMENT'].str.startswith('h')) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_CUSTKEY'] == 32) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING']))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_REGIONKEY'] < 3) & (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] != 95)][['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'] != 'o')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 19) & (customer['C_NATIONKEY'] >= 14)].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 13) & (customer['C_NATIONKEY'] == 21) | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) | (customer['C_COMMENT'] == 'e') & (customer['C_NATIONKEY'] >= 8) | (customer['C_ACCTBAL'] < -655.3886186833312)].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] < 21)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '22-')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') | (customer['C_COMMENT'] != 'w') & (customer['C_CUSTKEY'] != 83) | (customer['C_CUSTKEY'] < 56) | (customer['C_CUSTKEY'] >= 49) | (customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].groupby(by=['C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'].str.startswith('j')) & (customer['C_ADDRESS'].str.startswith('3')) | (customer['C_NATIONKEY'] != 3) & (customer['C_CUSTKEY'] == 77) & (customer['C_ACCTBAL'] >= -253.24073080390065)].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] > 10) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'c') & (customer['C_PHONE'] != '1') | (customer['C_PHONE'] != '22-') & (customer['C_NATIONKEY'] >= 5) & (customer['C_CUSTKEY'] == 74)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] > 2)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != 'y') | (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] == 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] != 'M') | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'BUILDING')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY']))][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERDATE'] != '1998-07-21') & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERSTATUS'].isin(['F', 'O']))][['ORDERPRIORITY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'] == 'O') & (orders['ORDERDATE'] != '1998-07-21') & (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] > 189545.42442455213) & (orders['TOTALPRICE'] > 128758.12593795627) | (orders['O_ORDERKEY'] <= 540) | (orders['ORDERSTATUS'] == 'P') | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'CLERK']).agg('max', numeric_only=True)

lineitem.merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['MFGR'] != 'Manufacturer#5') | (part['PT_COMMENT'] == 'kag') & (part['BRAND'] != 'Brand#21') | (part['P_NAME'].str.startswith('s'))][['TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(part[['TYPE', 'RETAILPRICE', 'P_NAME', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 4517) | (partsupp['PS_PARTKEY'] != 12)].merge(supplier[(supplier['S_ACCTBAL'] == 8377.238058164574) | (supplier['S_NATIONKEY'] >= 6) & (supplier['S_SUPPKEY'] < 99) | (supplier['S_ADDRESS'] != 'k') | (supplier['S_NATIONKEY'] == 0)][['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 6416) & (partsupp['PS_SUPPKEY'] >= 1686)].merge(part[['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'P_PARTKEY', 'CONTAINER']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'bli')].merge(supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'L') | (supplier['S_COMMENT'] == 'y') | (supplier['S_ACCTBAL'] >= 4075.8500723987354)][['S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 448.3009515829655)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] == 'o')][['P_NAME', 'BRAND', 'P_PARTKEY', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 2580)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] != 6) & (supplier['S_NATIONKEY'] < 21) & (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'] == 'a') | (supplier['S_NAME'].str.startswith('S'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] < 0.03168352453746264) & (lineitem['L_PARTKEY'] >= 150478) & (lineitem['QUANTITY'] != 35) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_PARTKEY'] < 65228)][['COMMITDATE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'LINENUMBER', 'QUANTITY', 'RETURNFLAG', 'SHIPMODE']].groupby(by=['QUANTITY', 'RECEIPTDATE', 'COMMITDATE', 'RETURNFLAG', 'SHIPMODE']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] < 4) | (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['L_ORDERKEY'] == 42) & (lineitem['SHIPMODE'] != 'AIR') & (lineitem['SHIPMODE'].isin(['RAIL', 'SHIP', 'REG AIR'])) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['L_ORDERKEY'] >= 113)].merge(orders[['CLERK', 'O_COMMENT', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'CLERK', 'O_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 1) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_ORDERKEY'] >= 27) | (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_PARTKEY'] != 102956) | (lineitem['L_ORDERKEY'] != 160) & (lineitem['SHIPMODE'] == 'RAIL')].merge(partsupp[(partsupp['SUPPLYCOST'] != 53.78000727199574)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 5)][['L_PARTKEY', 'DISCOUNT', 'L_COMMENT', 'RETURNFLAG', 'L_ORDERKEY', 'EXTENDEDPRICE', 'RECEIPTDATE', 'SHIPDATE', 'QUANTITY']].merge(partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['L_PARTKEY'] == 192953) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_SUPPKEY'] > 6547) & (lineitem['TAX'] == 0.030632269284209493) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_SUPPKEY'] <= 808) & (lineitem['L_ORDERKEY'] == 27) | (lineitem['DISCOUNT'] == 0.058954205330705) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')].merge(partsupp[(partsupp['AVAILQTY'] <= 437)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] > 40) | (lineitem['DISCOUNT'] >= 0.021136320589926372) & (lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 1) & (partsupp['PS_PARTKEY'] < 44)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 69541) & (lineitem['EXTENDEDPRICE'] > 64373.38465423946) | (lineitem['L_PARTKEY'] == 133670)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4923)].merge(part[['P_PARTKEY', 'SIZE', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 131483) & (lineitem['SHIPMODE'].isin(['MAIL'])) & (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['EXTENDEDPRICE'] != 38015.763143402895) & (lineitem['EXTENDEDPRICE'] < 5855.961262299306)][['LINENUMBER', 'TAX', 'DISCOUNT', 'RETURNFLAG', 'SHIPDATE', 'SHIPINSTRUCT', 'L_COMMENT', 'RECEIPTDATE']].groupby(by=['TAX', 'DISCOUNT', 'L_COMMENT', 'SHIPDATE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 855) | (lineitem['EXTENDEDPRICE'] >= 32679.06615430082) | (lineitem['EXTENDEDPRICE'] < 33629.47376355104) & (lineitem['TAX'] <= 0.039397386086734015)].merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 8354) | (lineitem['LINENUMBER'] < 2) & (lineitem['L_SUPPKEY'] > 8549) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['L_COMMENT'] == 'k') & (lineitem['LINENUMBER'] >= 4) | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['LINENUMBER'] > 3) & (lineitem['TAX'] <= 0.0023855023548720756) & (lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'TRUCK']))][['L_COMMENT', 'RECEIPTDATE', 'COMMITDATE', 'L_ORDERKEY', 'TAX', 'SHIPDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'QUANTITY']]

lineitem[(lineitem['QUANTITY'] < 39) | (lineitem['DISCOUNT'] >= 0.09537770241280216) & (lineitem['QUANTITY'] >= 10)][['L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'n')].merge(part[(part['RETAILPRICE'] >= 1027.6383404927967) & (part['CONTAINER'] == 'SM')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_SUPPKEY'] < 9894)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 935.3837007967937)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'RETAILPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['TAX'] >= 0.04129550583240582) & (lineitem['L_ORDERKEY'] <= 175)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'C') | (nation['N_COMMENT'] != 'p') | (nation['N_REGIONKEY'] == 3)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') | (lineitem['L_SUPPKEY'] != 5473) & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['L_COMMENT'] != 'ly ') & (lineitem['EXTENDEDPRICE'] >= 54947.617492626894) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(orders.merge(customer[(customer['C_COMMENT'] != 'n') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_NATIONKEY'] < 4) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_CUSTKEY'] >= 43) | (customer['C_PHONE'] == '22-') | (customer['C_COMMENT'] != 'f')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] == 0.06427347262329192) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['L_COMMENT'] != 'a')].merge(orders[(orders['TOTALPRICE'] > 92979.40658539563) | (orders['O_ORDERKEY'] < 107) & (orders['O_ORDERKEY'] == 293) | (orders['O_ORDERKEY'] == 621) & (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] == 'g') | (orders['ORDERSTATUS'].isin(['P', 'O']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.03300620010791838) & (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['L_ORDERKEY'] > 165) & (lineitem['QUANTITY'] <= 21)].merge(partsupp.merge(supplier[['S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME']).agg('mean', numeric_only=True)

lineitem[['DISCOUNT', 'LINENUMBER', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPMODE', 'SHIPDATE', 'RETURNFLAG', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] == 23) & (partsupp['PS_PARTKEY'] < 3) | (partsupp['SUPPLYCOST'] != 623.0683527825591) & (partsupp['AVAILQTY'] <= 1938)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'L_ORDERKEY', 'QUANTITY']].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] == 'a')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'COMMITDATE', 'SHIPDATE', 'TAX', 'LINENUMBER', 'SHIPMODE', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 2680)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_SUPPKEY', 'LINENUMBER', 'COMMITDATE', 'SHIPINSTRUCT', 'SHIPMODE']].merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'].str.startswith('L')) | (part['TYPE'].str.startswith('M')) & (part['P_NAME'] != 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[['QUANTITY', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE']].merge(orders[(orders['O_COMMENT'].str.startswith('.')) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] == 0) | (orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] == 128) | (orders['O_CUSTKEY'] == 102907) | (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] >= 0)][['O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_PHONE', 'S_NAME']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] != 19) | (nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] <= 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == ' ') & (nation['N_NAME'].str.startswith('V')) | (nation['N_COMMENT'] == 'c') & (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 7) & (nation['N_NAME'] == 'E')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NAME'].str.startswith('R'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] != 'v') | (nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders.merge(customer.merge(nation[(nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 'p') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING'])) | (customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith('q')) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'].str.startswith('q')) & (customer['C_ADDRESS'] == '4') & (customer['C_NATIONKEY'] == 9) | (customer['C_COMMENT'] == 's')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] != 'u') | (customer['C_ADDRESS'] != 'j') | (customer['C_NATIONKEY'] == 0) | (customer['C_PHONE'] == '3')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] != 18) | (nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] >= 8) & (nation['N_NATIONKEY'] != 10)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 17) | (nation['N_NATIONKEY'] <= 15) | (nation['N_COMMENT'] == 'h')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 's') | (orders['O_COMMENT'].str.startswith('-')) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'].str.startswith(' ')) | (orders['O_COMMENT'] != 'e')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].groupby(by=['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] > 737) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['5-LOW'])) | (orders['ORDERPRIORITY'] != '1-URGENT')][['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_PHONE', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_ORDERKEY'] > 562) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] > 181)].merge(customer.merge(nation.merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] >= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != ' re') & (orders['O_CUSTKEY'] != 102461) & (orders['O_COMMENT'].str.startswith('x')) | (orders['TOTALPRICE'] <= 86509.16830849042) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['O_ORDERKEY'] == 409) | (orders['O_CUSTKEY'] >= 5066) | (orders['O_COMMENT'] != 'b') | (orders['ORDERDATE'] < '1998-07-21')][['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'ORDERDATE']].groupby(by=['ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'r') | (orders['TOTALPRICE'] >= 29917.78897886179) | (orders['TOTALPRICE'] <= 268814.9181610843) | (orders['ORDERDATE'] != '1998-07-21')][['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('i')) | (orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_ORDERKEY'] == 255) & (orders['O_COMMENT'] != '.') & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 87316) & (orders['O_ORDERKEY'] < 129) | (orders['TOTALPRICE'] > 306608.86560871877)][['SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT', 'O_CUSTKEY', 'ORDERDATE', 'TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 350) & (orders['O_CUSTKEY'] > 58136) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] > 298511.1371619968) | (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['O_CUSTKEY'] <= 143498)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v')].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] == 'g') & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 224) | (orders['O_ORDERKEY'] < 264) & (orders['ORDERDATE'] > '1998-07-21')].merge(customer[(customer['C_COMMENT'].str.startswith('g')) | (customer['C_NATIONKEY'] < 3) | (customer['C_PHONE'] != '2') & (customer['C_PHONE'] == '27-') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_ADDRESS'] == 'w') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] < 9370.868820443731)].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 7) | (orders['O_CUSTKEY'] != 25601) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] <= 21731.980449352166) | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] < 35092)].merge(customer[(customer['C_COMMENT'] != 'e') & (customer['C_CUSTKEY'] > 71) & (customer['C_CUSTKEY'] < 94) | (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_CUSTKEY'] >= 65)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] != 289438.23020169965) | (orders['TOTALPRICE'] == 146113.2255428092)].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] <= 23)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != 'l') & (orders['TOTALPRICE'] != 100101.97427044131) & (orders['TOTALPRICE'] < 235967.77122830474) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['SHIPPRIORITY'] > 0)][['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'] != 'egu') | (orders['O_ORDERKEY'] < 387)].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] < 25) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT']))][['O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 105782.38922916612) | (orders['O_COMMENT'] != 'w') | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] > 54388) & (orders['O_CUSTKEY'] == 123457)][['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] >= 4517.402261977329)][['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 210253.91200409344) & (orders['O_ORDERKEY'] == 621)][['ORDERDATE', 'O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('2')) | (customer['C_ACCTBAL'] == 47.44570982889775) | (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '25-') & (customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] > 6) & (customer['C_COMMENT'] == 'n') | (customer['C_ACCTBAL'] == 1246.372967021529) | (customer['MKTSEGMENT'] != 'AUTOMOBILE')].merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'a')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] < 12) | (customer['C_COMMENT'] != 'f') & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] > 20) | (customer['C_COMMENT'] != 'f') | (customer['C_ADDRESS'] == 'S') & (customer['C_COMMENT'] != 'e')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ADDRESS'].str.startswith('E')) & (customer['C_ACCTBAL'] > 5454.501627946615) | (customer['C_CUSTKEY'] >= 61)][['C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] <= 8) | (customer['C_NATIONKEY'] < 11) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != 'a') & (customer['C_CUSTKEY'] == 13)][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 1604.9968327758038) | (customer['C_NATIONKEY'] < 9) & (customer['C_NATIONKEY'] < 22) & (customer['C_ADDRESS'].str.startswith('R'))][['C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'MED') & (part['TYPE'].str.startswith('L')) & (part['P_PARTKEY'] > 28) & (part['MFGR'] == 'Manufacturer#5')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']].groupby(by=['RETAILPRICE', 'MFGR', 'TYPE', 'P_NAME']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] == 8) | (part['BRAND'] == 'Brand#44') | (part['P_PARTKEY'] >= 168) | (part['P_NAME'].str.startswith('c')) | (part['TYPE'] == 'SMA') & (part['CONTAINER'].str.startswith('SM')) | (part['RETAILPRICE'] <= 983.7588042954577) | (part['P_NAME'].str.startswith('f')) | (part['SIZE'] >= 43)][['TYPE', 'P_NAME', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['PT_COMMENT']).agg('count')

part[(part['RETAILPRICE'] == 1051.5041548689462) | (part['P_PARTKEY'] == 29) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3'])) | (part['RETAILPRICE'] <= 1011.1704563100539) & (part['P_PARTKEY'] < 25) | (part['TYPE'] != 'STA') | (part['P_PARTKEY'] > 170)][['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

part[(part['TYPE'].str.startswith('SMA')) & (part['CONTAINER'] == 'WRAP') & (part['PT_COMMENT'] != 'h') & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] > 1)][['P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE']).agg('count')

partsupp.merge(part[(part['P_PARTKEY'] == 16) & (part['RETAILPRICE'] > 936.8778429759135) & (part['BRAND'] != 'Brand#43') | (part['P_PARTKEY'] <= 26) & (part['RETAILPRICE'] < 950.9297561650538) & (part['CONTAINER'] == 'LG') | (part['P_PARTKEY'] <= 126) | (part['P_NAME'] == 'w') & (part['BRAND'] != 'Brand#22')][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp.merge(part[(part['SIZE'] != 25) & (part['RETAILPRICE'] <= 1065.9956289565805) | (part['P_NAME'] == 'bis')][['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] < 6566.669584450224) & (supplier['S_COMMENT'] == 's') & (supplier['S_COMMENT'] == 'al ') & (supplier['S_ACCTBAL'] >= 7312.59607672211) | (supplier['S_ADDRESS'] != 'Y') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_ADDRESS'] != ',') | (supplier['S_SUPPKEY'] != 13) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'q') | (supplier['S_ACCTBAL'] <= 1207.5975787853083) | (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != '!') & (supplier['S_COMMENT'] == 'g') | (supplier['S_ACCTBAL'] <= 6837.210280017134) | (supplier['S_ACCTBAL'] < 2956.8924425979612) & (supplier['S_NATIONKEY'] > 18)].merge(nation[(nation['N_REGIONKEY'] != 2)].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] > 12) | (supplier['S_SUPPKEY'] > 115) | (supplier['S_SUPPKEY'] != 12) & (supplier['S_ADDRESS'] != 'y')].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] <= 9) | (nation['N_COMMENT'] == 'r')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8292) & (partsupp['AVAILQTY'] < 5855) | (partsupp['AVAILQTY'] == 1528) | (partsupp['SUPPLYCOST'] < 593.082226712479)].merge(part[(part['CONTAINER'] != 'SM') & (part['CONTAINER'] == 'LG') & (part['CONTAINER'].str.startswith('MED')) | (part['PT_COMMENT'] != '!') | (part['BRAND'] != 'Brand#31') & (part['P_NAME'] != 'n')][['P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 9623) & (partsupp['SUPPLYCOST'] < 414.14540528557603) & (partsupp['PS_PARTKEY'] >= 43) & (partsupp['PS_PARTKEY'] >= 16)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 1366) | (partsupp['SUPPLYCOST'] > 606.3202435865652)].merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 9900) | (partsupp['PS_PARTKEY'] < 12) | (partsupp['PS_PARTKEY'] >= 49)].merge(supplier.merge(nation[(nation['N_NAME'] != 'V') & (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] != 'R') & (nation['N_NAME'] == 'V')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 2) & (partsupp['SUPPLYCOST'] > 694.1640456808747) & (partsupp['AVAILQTY'] > 2999)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] > 1065.1743958710538) | (part['MFGR'] == 'Manufacturer#2') | (part['SIZE'] > 33) | (part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] < 972.5265974775281)][['P_PARTKEY', 'P_NAME', 'SIZE', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 23)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_NAME'].str.startswith('G'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 5)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 10) | (partsupp['PS_SUPPKEY'] > 616) & (partsupp['P_COMMENT'] != 'r')][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'q') | (supplier['S_ADDRESS'] == 'T') & (supplier['S_PHONE'] != '3') & (supplier['S_SUPPKEY'] > 42)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 7) | (partsupp['AVAILQTY'] == 879)].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] <= 4675.159900429867) | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_SUPPKEY'] > 169) & (supplier['S_ACCTBAL'] > 6719.029094238717) & (supplier['S_ACCTBAL'] >= 3516.8671716091612)][['S_SUPPKEY', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 4105) & (partsupp['PS_PARTKEY'] >= 35) | (partsupp['AVAILQTY'] < 8399)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5807) | (partsupp['AVAILQTY'] != 86)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 3590) & (partsupp['AVAILQTY'] >= 9349) | (partsupp['SUPPLYCOST'] <= 210.33792346141064) & (partsupp['PS_SUPPKEY'] != 1875)].merge(part[(part['TYPE'] == 'SMA') & (part['MFGR'] == 'Manufacturer#1') & (part['P_NAME'] == 'l') | (part['RETAILPRICE'] != 1083.5930746138872) & (part['CONTAINER'] != 'SM') & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) | (part['P_NAME'] != 'y') & (part['P_PARTKEY'] != 173) | (part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 3831) & (partsupp['PS_PARTKEY'] < 1) & (partsupp['P_COMMENT'] == 'ly ') & (partsupp['SUPPLYCOST'] <= 760.0185049963061) & (partsupp['PS_PARTKEY'] > 48)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] != ' ') & (partsupp['PS_SUPPKEY'] != 742) | (partsupp['P_COMMENT'] != 'are') & (partsupp['PS_SUPPKEY'] > 1950)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'b') | (partsupp['SUPPLYCOST'] != 957.0659470288755) | (partsupp['PS_PARTKEY'] < 11) & (partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['PS_PARTKEY'] >= 5)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['SUPPLYCOST'] < 256.7140954173466) & (partsupp['SUPPLYCOST'] <= 937.2386186248056) & (partsupp['P_COMMENT'] != ' th')].merge(part[(part['CONTAINER'] != 'LG') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#5', 'Manufacturer#4'])) | (part['RETAILPRICE'] <= 910.6146506416693) & (part['TYPE'].str.startswith('S')) & (part['SIZE'] > 37)][['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'p') | (partsupp['P_COMMENT'] == 'the') | (partsupp['AVAILQTY'] >= 1674) | (partsupp['AVAILQTY'] < 8720)].merge(part[(part['P_PARTKEY'] < 117) & (part['TYPE'].str.startswith('P')) & (part['CONTAINER'].str.startswith('MED')) & (part['SIZE'] != 37) & (part['BRAND'] != 'Brand#51') | (part['MFGR'] != 'Manufacturer#4') | (part['MFGR'] != 'Manufacturer#3') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1', 'Manufacturer#5'])) & (part['SIZE'] < 7)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 859.4314902622563)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[['P_NAME', 'CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 303.58999106603045) | (partsupp['AVAILQTY'] < 3209) | (partsupp['PS_PARTKEY'] < 30)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_PHONE'] != '26-')][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 66.88650211059561)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] != 4) | (nation['N_COMMENT'].str.startswith('a'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'lem') | (part['P_NAME'] == 'g') & (part['P_PARTKEY'] >= 36)][['P_PARTKEY', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['SIZE'] >= 20) | (part['MFGR'] != 'Manufacturer#5') | (part['TYPE'] != 'E') | (part['CONTAINER'] == 'WRAP') | (part['SIZE'] <= 41)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'RETAILPRICE', 'MFGR']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] == 68) | (part['MFGR'] == 'Manufacturer#2') | (part['PT_COMMENT'] != 'i') | (part['SIZE'] <= 4) | (part['P_NAME'] == 'a') & (part['RETAILPRICE'] < 938.2786128431874) | (part['SIZE'] > 42) | (part['RETAILPRICE'] <= 943.6377902410073)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'CONTAINER', 'MFGR']).agg('count')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#24') | (part['P_PARTKEY'] < 57) & (part['P_NAME'] == 'a') | (part['BRAND'] != 'Brand#35') | (part['BRAND'].isin(['Brand#41', 'Brand#15', 'Brand#31', 'Brand#44'])) | (part['TYPE'] != 'E') & (part['SIZE'] < 21)][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] != 'L') & (part['RETAILPRICE'] == 932.7292316812304)][['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_PARTKEY'] == 46) & (part['P_PARTKEY'] >= 12) & (part['BRAND'] != 'Brand#13') & (part['TYPE'] == 'P') | (part['P_PARTKEY'] == 176) | (part['RETAILPRICE'] >= 1002.6811469095336) | (part['TYPE'] != 'P')][['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 4912.392190677926) & (supplier['S_COMMENT'] == ',') | (supplier['S_COMMENT'] == 'bli') & (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NATIONKEY'] != 7) & (supplier['S_PHONE'] == '28-') | (supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_PHONE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != '!') & (supplier['S_ACCTBAL'] == 6925.616181565324) | (supplier['S_COMMENT'] != 'g') | (supplier['S_ACCTBAL'] < 3392.849481472448) & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] > 18) & (supplier['S_PHONE'] == '26-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] != 's') | (supplier['S_SUPPKEY'] == 4) & (supplier['S_SUPPKEY'] <= 99) | (supplier['S_COMMENT'] == 'v') | (supplier['S_SUPPKEY'] == 35)].merge(nation[(nation['N_NATIONKEY'] < 18) | (nation['N_COMMENT'].str.startswith('s'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['TYPE'].str.startswith('STA')) & (part['TYPE'].str.startswith('P')) & (part['TYPE'] != 'P') & (part['TYPE'] == 'STA') & (part['P_PARTKEY'] != 30) | (part['CONTAINER'] == 'LG') | (part['RETAILPRICE'] >= 1051.121092684249) & (part['P_PARTKEY'] == 77) & (part['P_NAME'] == 's')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 5) & (nation['N_NATIONKEY'] > 10)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[['TYPE', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'F') & (nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'] != 'p') | (nation['N_NATIONKEY'] != 12)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'E') | (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] != 10) | (nation['N_NAME'] != 'A')].merge(region[(region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 2473.9791612217414) & (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_SUPPKEY'] < 158)][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 4054.64652436107) & (supplier['S_ADDRESS'] != 'H')].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != ' ')].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] == 535.5767620820163) | (supplier['S_NATIONKEY'] <= 23)].merge(nation[(nation['N_NATIONKEY'] != 3) | (nation['N_REGIONKEY'] == 0) | (nation['N_NATIONKEY'] >= 6) | (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != 'U') | (supplier['S_COMMENT'] != 'e') | (supplier['S_NATIONKEY'] == 16) & (supplier['S_PHONE'] != '32-') & (supplier['S_COMMENT'] == 'k') | (supplier['S_ACCTBAL'] != 4868.081833556413)][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

supplier[(supplier['S_ADDRESS'] != 'Y') & (supplier['S_NATIONKEY'] < 11) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] == '1') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 172)][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != 'k') & (supplier['S_COMMENT'] == 'i') & (supplier['S_PHONE'] == '3') & (supplier['S_ACCTBAL'] < 648.5245992166606)][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 199) | (supplier['S_SUPPKEY'] > 54) & (supplier['S_PHONE'] == '14-') & (supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] <= 10)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_PHONE']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] > 102)][['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] <= 12)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('B'))].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] < 16) | (nation['N_REGIONKEY'] != 1) & (nation['N_REGIONKEY'] > 1)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'] == 'n') | (supplier['S_SUPPKEY'] > 6) | (supplier['S_ACCTBAL'] <= 2341.3197558290894)].merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 0) & (supplier['S_ACCTBAL'] == 7624.643463954563) | (supplier['S_NATIONKEY'] < 12) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'R') & (nation['N_NAME'] == 'M')].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 0) | (supplier['S_COMMENT'] == 'bli') | (supplier['S_ACCTBAL'] >= 5446.402420930127) | (supplier['S_NATIONKEY'] != 4) | (supplier['S_ADDRESS'] == 'I') | (supplier['S_COMMENT'] != 'f')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] == 2) & (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != 'I') | (supplier['S_NATIONKEY'] == 17)].merge(nation[(nation['N_COMMENT'] == 'c')].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 11) | (supplier['S_COMMENT'].str.startswith('!')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] < 12) | (supplier['S_SUPPKEY'] <= 83)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_SUPPKEY'] >= 104) | (supplier['S_NATIONKEY'] > 23) & (supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_SUPPKEY'] > 64) & (supplier['S_PHONE'] != '2') | (supplier['S_COMMENT'] == 'w')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_COMMENT'].str.startswith('i')) & (supplier['S_NATIONKEY'] >= 21) & (supplier['S_NATIONKEY'] != 2) & (supplier['S_PHONE'] != '2') & (supplier['S_ACCTBAL'] != 1969.5263666309318)].merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] >= 8) | (nation['N_COMMENT'].str.startswith('l'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ACCTBAL'] != 6011.338245241667) | (supplier['S_PHONE'] == '17-') | (supplier['S_NATIONKEY'] > 2) & (supplier['S_COMMENT'] == 'n') | (supplier['S_ACCTBAL'] > 562.0374628391478)].merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'E') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 28) & (supplier['S_ACCTBAL'] <= 8315.052235093997) & (supplier['S_ACCTBAL'] != 5524.144280687534)][['S_NAME', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 70) & (supplier['S_SUPPKEY'] <= 19) | (supplier['S_SUPPKEY'] >= 36) | (supplier['S_PHONE'] == '17-') & (supplier['S_NATIONKEY'] == 18)].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'].str.startswith('p')) | (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] <= 22)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 11) & (supplier['S_PHONE'] != '2') | (supplier['S_SUPPKEY'] < 70) | (supplier['S_COMMENT'].str.startswith(' sl'))][['S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 76) & (supplier['S_ACCTBAL'] <= 1691.672100099098)].merge(nation[(nation['N_NAME'] == 'P')].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 199) | (supplier['S_ACCTBAL'] > 8952.498650940215) & (supplier['S_NATIONKEY'] != 7) & (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != 'i') | (supplier['S_NATIONKEY'] == 1)][['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] < 4) & (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] > 4) & (nation['N_COMMENT'] == 'c')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] >= 192) & (supplier['S_COMMENT'] != '.') | (supplier['S_NATIONKEY'] == 18) | (supplier['S_ADDRESS'] != 'h') | (supplier['S_ADDRESS'] == '1') & (supplier['S_NATIONKEY'] <= 20)][['S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'].str.startswith(' '))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) | (nation['N_NATIONKEY'] >= 5)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('count')

supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] == 'ASI')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NAME'] == 'I') | (nation['N_REGIONKEY'] < 2)].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'u') | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_NATIONKEY'] == 13) | (nation['N_NATIONKEY'] > 16) | (nation['N_REGIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer.merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] == 'e')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] == 'y')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_NAME'] == 'A') | (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 9364.908238632555)][['C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't') & (nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 'r')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] >= 3898.4935272001003) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] != 3064.81007230284) & (customer['C_ADDRESS'] != 'z') | (customer['C_PHONE'] != '22-') & (customer['C_CUSTKEY'] == 2) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] < 5)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'a') | (customer['C_ADDRESS'] != '4') | (customer['C_ACCTBAL'] <= 531.766484637431) | (customer['C_PHONE'] == '22-')].merge(nation.merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'b') & (customer['C_NATIONKEY'] != 15)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'B') | (customer['C_CUSTKEY'] <= 65) & (customer['C_NATIONKEY'] > 10)].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] == 'J') & (nation['N_NAME'].str.startswith('F')) | (nation['N_NATIONKEY'] <= 17)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'Q') & (customer['C_CUSTKEY'] >= 34) & (customer['C_PHONE'] != '1')][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'm') & (customer['C_CUSTKEY'] > 29) & (customer['C_ACCTBAL'] > 2055.0927563890073) | (customer['C_ACCTBAL'] >= 512.7665395681411) & (customer['C_PHONE'] != '25-') & (customer['C_COMMENT'] == 'q') & (customer['C_PHONE'] != '25-')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('H')) | (customer['C_ADDRESS'].str.startswith('J')) | (customer['C_ADDRESS'] == 'o') & (customer['C_COMMENT'].str.startswith('c'))].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_NATIONKEY'] <= 7) | (nation['N_NAME'] == 'J') | (nation['N_COMMENT'].str.startswith(' '))].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('s')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE']))].merge(nation[(nation['N_NATIONKEY'] <= 9) & (nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'o') & (customer['C_ADDRESS'] != 'B')][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'K')].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'e') | (customer['C_PHONE'] != '1') | (customer['C_ACCTBAL'] == 9240.26894466377) | (customer['C_COMMENT'].str.startswith('a')) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_ACCTBAL'] < 7836.0313679489755) & (customer['C_CUSTKEY'] != 79) | (customer['C_COMMENT'] != 'e')][['C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'i') & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('E')) & (nation['N_COMMENT'] != 'p')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 44)][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 20) & (customer['C_CUSTKEY'] > 91) & (customer['C_NATIONKEY'] > 19) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != '4') | (customer['MKTSEGMENT'].isin(['MACHINERY'])) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] != 2)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] <= 37) & (customer['C_PHONE'] == '3') | (customer['C_ADDRESS'].str.startswith(','))][['MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 26) & (customer['C_ADDRESS'] != 'F') | (customer['C_CUSTKEY'] >= 19) | (customer['C_ACCTBAL'] >= 2415.328393999442) & (customer['C_ACCTBAL'] <= -215.30887888976736) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('I'))].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_ACCTBAL'] >= 612.0451575119719) & (customer['C_ADDRESS'].str.startswith('T')) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] != 'B')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '25-') | (customer['C_ACCTBAL'] < 1129.2226243054731) & (customer['C_NATIONKEY'] < 20) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] != '18-')][['C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 3) & (customer['C_PHONE'].str.startswith('1')) | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '2') | (customer['C_ADDRESS'] != 'T') | (customer['C_ACCTBAL'] < -715.0436003847269)].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] >= 12)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] <= 5) | (customer['C_CUSTKEY'] > 44) | (customer['C_ACCTBAL'] == 3115.2136800631224) | (customer['C_NATIONKEY'] == 0)].merge(nation[(nation['N_NATIONKEY'] != 7)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] != 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 6) | (customer['C_COMMENT'] != 'q') & (customer['C_PHONE'].str.startswith('22-'))].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_REGIONKEY'] != 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 18) & (customer['C_CUSTKEY'] != 47) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] < -746.1448109248865)][['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_ADDRESS'].str.startswith('U')) | (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] >= 21) | (customer['C_ADDRESS'] != 'B') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 1249.6932655979003)][['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'e')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_ACCTBAL'] <= 5497.344077562443)].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] > 3) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_ACCTBAL'] > 8211.768949892257) | (customer['C_NATIONKEY'] == 16) & (customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] == '4') & (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_NATIONKEY'] == 18) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'q') & (customer['C_ADDRESS'] != 'i') & (customer['C_CUSTKEY'] >= 75) & (customer['MKTSEGMENT'] != 'FURNITURE')][['C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_PHONE'] == '13-') | (customer['C_NATIONKEY'] != 19) & (customer['C_ACCTBAL'] != 6513.0040121315005) & (customer['C_ADDRESS'] == '3') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] > 21) & (nation['N_NAME'] == 'U')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] == 70) & (customer['C_ACCTBAL'] >= 7434.1261537162045) | (customer['C_PHONE'] != '1') & (customer['C_CUSTKEY'] > 28) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_PHONE'] != '27-')][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY']))].merge(nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_NAME'] != 'E') | (region['R_REGIONKEY'] <= 3) | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING'])) | (customer['C_PHONE'] == '3') & (customer['C_PHONE'] != '22-')][['C_NAME', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 2) | (nation['N_NAME'] != 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] < 11) | (nation['N_REGIONKEY'] != 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('G'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'E') | (region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] > 9)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] <= 10) & (nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] != 'R')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != 'i') & (customer['C_COMMENT'] != 'o') | (customer['C_ACCTBAL'] >= -315.31117215222775) | (customer['C_ADDRESS'] == 's') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'r')][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']).agg('max', numeric_only=True)

lineitem.merge(orders[['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp.merge(part[(part['P_PARTKEY'] >= 31) | (part['CONTAINER'] != 'MED') & (part['CONTAINER'] == 'JUMBO') & (part['PT_COMMENT'] == 'k') & (part['PT_COMMENT'] != 's') | (part['CONTAINER'] != 'SM') | (part['PT_COMMENT'] != 's') & (part['SIZE'] >= 33) | (part['P_PARTKEY'] == 62)][['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_COMMENT'] != 'e')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_COMMENT'] != 'l') & (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp.merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 993)].merge(supplier[(supplier['S_SUPPKEY'] == 198) & (supplier['S_SUPPKEY'] != 53) | (supplier['S_ACCTBAL'] != 1011.0653247285222) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != 'j')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'x') | (partsupp['P_COMMENT'] != 'i')][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '2') | (supplier['S_NATIONKEY'] >= 8) | (supplier['S_NATIONKEY'] != 14)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('j')) | (partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['P_COMMENT'] == 'k') & (partsupp['AVAILQTY'] == 2218)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'TYPE', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 7) | (nation['N_COMMENT'] != 'p') & (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 29110.667167413678) & (lineitem['LINENUMBER'] < 2) & (lineitem['LINESTATUS'] != 'F') | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'RAIL', 'REG AIR'])) | (lineitem['EXTENDEDPRICE'] < 44740.067713717595) | (lineitem['L_SUPPKEY'] != 3353) & (lineitem['QUANTITY'] >= 35) | (lineitem['QUANTITY'] != 32) | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A']))].merge(orders[['TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O', 'F']))].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_NAME'].str.startswith('lem')) | (part['CONTAINER'] != 'JUMBO') | (part['PT_COMMENT'] == '!') & (part['TYPE'] != 'STA') | (part['P_PARTKEY'] >= 195)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'TYPE']).agg('count')

lineitem[(lineitem['L_COMMENT'] != 'e') & (lineitem['TAX'] >= 0.06196357842182773) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['LINENUMBER'] > 6) | (lineitem['SHIPMODE'] != 'AIR') & (lineitem['QUANTITY'] == 41)][['L_ORDERKEY', 'LINENUMBER', 'L_PARTKEY']].merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 's') & (lineitem['L_COMMENT'] == 'n') | (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['L_PARTKEY'] < 15361) | (lineitem['LINESTATUS'] == 'O') | (lineitem['L_PARTKEY'] == 87090) & (lineitem['LINENUMBER'] >= 3) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['LINENUMBER'] == 4) | (lineitem['SHIPINSTRUCT'].isin(['NONE']))].merge(orders[(orders['O_COMMENT'] != 'i') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] != '1-URGENT')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_ORDERKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['TAX'] < 0.06375734607784586) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['QUANTITY'] <= 42)].merge(orders.merge(customer.merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] > 4) | (nation['N_NAME'] == 'S')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 96) & (lineitem['TAX'] <= 0.03563359602784868) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['L_ORDERKEY'] < 151) & (lineitem['LINESTATUS'] != 'F') & (lineitem['QUANTITY'] >= 17) | (lineitem['L_ORDERKEY'] > 36) | (lineitem['L_COMMENT'] == 'ly ') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['LINESTATUS'].isin(['O']))][['L_COMMENT', 'SHIPDATE', 'DISCOUNT', 'RECEIPTDATE']].groupby(by=['DISCOUNT', 'SHIPDATE', 'L_COMMENT', 'RECEIPTDATE']).agg('count')

lineitem[(lineitem['L_PARTKEY'] < 130862) & (lineitem['EXTENDEDPRICE'] < 50887.20622162611) & (lineitem['TAX'] >= 0.021350728135559577)].merge(orders.merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 4149) | (lineitem['LINENUMBER'] <= 4) & (lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['LINESTATUS'] != 'F')].merge(partsupp[(partsupp['PS_PARTKEY'] < 35) | (partsupp['PS_SUPPKEY'] < 5260) | (partsupp['PS_SUPPKEY'] == 5095) | (partsupp['PS_SUPPKEY'] >= 4056) & (partsupp['PS_PARTKEY'] == 9)][['AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02')].merge(partsupp[(partsupp['AVAILQTY'] >= 9734) | (partsupp['PS_SUPPKEY'] == 4614) | (partsupp['PS_PARTKEY'] != 33) | (partsupp['AVAILQTY'] > 267)].merge(supplier[(supplier['S_ADDRESS'] != 'O') | (supplier['S_SUPPKEY'] <= 116) & (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_ORDERKEY'] != 166) | (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['L_ORDERKEY'] != 135) | (lineitem['LINENUMBER'] <= 4) & (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['EXTENDEDPRICE'] >= 68221.85700248697)][['L_ORDERKEY', 'COMMITDATE', 'DISCOUNT', 'EXTENDEDPRICE', 'L_COMMENT']].merge(orders[['O_ORDERKEY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['RETURNFLAG'] == 'N') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['LINESTATUS'] != 'O') & (lineitem['LINENUMBER'] <= 2) | (lineitem['SHIPMODE'].isin(['RAIL', 'FOB', 'AIR', 'SHIP'])) & (lineitem['LINENUMBER'] < 6) | (lineitem['L_ORDERKEY'] != 8)].merge(partsupp[(partsupp['SUPPLYCOST'] != 555.2609989359077) | (partsupp['AVAILQTY'] >= 1287)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) | (region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['DISCOUNT'] == 0.040602227431928296) | (lineitem['L_SUPPKEY'] > 5888) | (lineitem['L_COMMENT'] == 'a') & (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['TAX'] != 0.056869762242206905) | (lineitem['L_PARTKEY'] != 181428) & (lineitem['DISCOUNT'] == 0.04520388335056883)].merge(orders[['ORDERDATE', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['LINENUMBER'] >= 3) & (lineitem['COMMITDATE'] < '1992-05-15')].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NATIONKEY'] < 10)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON']))].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['ORDERDATE'] != '1992-01-13')][['O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.031319820036901654) | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_SUPPKEY'] <= 8764)].merge(partsupp.merge(part[(part['MFGR'] != 'Manufacturer#2')][['BRAND', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] >= 0.054446843113734544) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['QUANTITY'] == 38) | (lineitem['LINESTATUS'] != 'O')].merge(partsupp[(partsupp['P_COMMENT'] == 'k') & (partsupp['P_COMMENT'] == 'h') & (partsupp['PS_SUPPKEY'] == 6278) | (partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['PS_PARTKEY'] >= 7)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('min', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.05803427284534048) | (lineitem['SHIPMODE'] != 'REG AIR')][['L_PARTKEY', 'TAX', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPINSTRUCT', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp[(partsupp['AVAILQTY'] > 3156) | (partsupp['P_COMMENT'] != 'v') | (partsupp['AVAILQTY'] <= 5657)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'DISCOUNT', 'TAX', 'L_COMMENT', 'L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'L_ORDERKEY', 'RETURNFLAG']].merge(partsupp.merge(part[['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['COMMITDATE', 'RETURNFLAG', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'DISCOUNT', 'L_SUPPKEY', 'TAX', 'RECEIPTDATE', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 1)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'L_SUPPKEY']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY']).agg('count')

lineitem[['SHIPDATE', 'COMMITDATE', 'L_ORDERKEY', 'L_COMMENT', 'LINESTATUS', 'L_PARTKEY', 'TAX', 'QUANTITY']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'O_ORDERKEY', 'CLERK']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('C'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] != 'I')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'E') & (region['R_COMMENT'] == 'g') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] != ' ') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE', 'BUILDING'])) & (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] == 's') | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] == 55) & (customer['C_CUSTKEY'] == 60) & (customer['C_ADDRESS'] != 'R')].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_NAME'] == 'V')].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] > 5) | (customer['C_CUSTKEY'] > 75) & (customer['C_PHONE'] == '1') & (customer['C_PHONE'] != '2') | (customer['C_COMMENT'].str.startswith('a'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NATIONKEY'] < 13) & (customer['C_COMMENT'] == 'l') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] >= 96) & (customer['C_COMMENT'] != 's') | (customer['C_CUSTKEY'] < 9)].merge(nation[(nation['N_COMMENT'].str.startswith('y')) | (nation['N_NATIONKEY'] <= 16)].merge(region[(region['R_REGIONKEY'] < 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

orders.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'] != 'r') | (nation['N_NATIONKEY'] >= 5) | (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 11) & (nation['N_NATIONKEY'] != 10)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] > 87823) & (orders['O_COMMENT'] == 'the') & (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] <= 108545)].merge(customer[(customer['C_PHONE'] != '27-') | (customer['C_CUSTKEY'] != 90) | (customer['C_CUSTKEY'] >= 37) & (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NAME'].str.startswith('B'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'P') | (orders['O_ORDERKEY'] == 131)][['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['C_PHONE'] == '3')][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] >= 441) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] < 21381) & (orders['O_ORDERKEY'] == 416) | (orders['O_COMMENT'].str.startswith(' re')) & (orders['O_COMMENT'].str.startswith('z'))][['CLERK', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F')][['ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_PHONE'].str.startswith('22-')) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NATIONKEY'] <= 1) | (customer['C_ACCTBAL'] >= 3588.708970129959)][['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['O_ORDERKEY'] == 404) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation[(nation['N_NAME'] == 'P')].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('e')) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'].isin(['P']))].merge(customer[(customer['C_COMMENT'].str.startswith('t')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_ADDRESS'].str.startswith('R'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 145976) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['O_CUSTKEY'] >= 54370) & (orders['O_COMMENT'] == ' re')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'].str.startswith('f')) & (customer['C_ADDRESS'] == 's') | (customer['C_CUSTKEY'] > 7) & (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] < 6990.138711699714)][['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 138523) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERDATE'] > '1992-01-13')][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 90007) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['TOTALPRICE'] < 163880.97267312423) | (orders['TOTALPRICE'] < 317051.73942646774) | (orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 8) & (nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] < 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

orders[(orders['O_CUSTKEY'] >= 98643)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] == 'n') | (nation['N_NAME'].str.startswith('J'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 730) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] <= 218850.44727354194) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 159) | (orders['TOTALPRICE'] > 120741.59514976859)][['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 578) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] == '1992-01-13') | (orders['TOTALPRICE'] > 145483.6021914676)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 738) & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 111812) & (orders['O_CUSTKEY'] >= 41372) | (orders['TOTALPRICE'] < 282917.1376978464) | (orders['O_ORDERKEY'] >= 594)][['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].groupby(by=['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 317) & (orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] <= 241072.88565634424) | (orders['SHIPPRIORITY'] < 0) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT']))].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']).agg('count')

orders[(orders['O_ORDERKEY'] > 118) | (orders['TOTALPRICE'] >= 320407.9117038943) & (orders['O_CUSTKEY'] > 113681) & (orders['O_COMMENT'] == 'w') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH'])) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'c')].merge(customer.merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] != 0) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 283)].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] == 273453.71476384887) | (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] == 224) | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '2-HIGH'])) | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 35039.11115828111) | (orders['TOTALPRICE'] == 343237.7408157744) & (orders['ORDERDATE'] != '1998-07-21')][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0)][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] < 0) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 303657.7894035403) & (orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['C_ACCTBAL'] >= 7762.25169064595) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 6) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ACCTBAL'] == 1054.9144746812105)][['C_NATIONKEY', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['TOTALPRICE'] == 62130.65219795993)][['ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 182825.8577702055) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_CUSTKEY'] <= 76177)].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_REGIONKEY'] == 0)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_COMMENT'] == 'l') & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'c') | (customer['C_PHONE'] != '27-')][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'CLERK', 'O_CUSTKEY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '1') | (customer['C_CUSTKEY'] == 99) & (customer['C_ADDRESS'] != 'T') & (customer['C_ADDRESS'] != 'B') & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] != 1363.6674864460847) & (customer['MKTSEGMENT'] == 'MACHINERY')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] != 'f') & (customer['C_CUSTKEY'] <= 39) & (customer['C_ACCTBAL'] != 88.22893445386137) | (customer['C_NATIONKEY'] == 11) | (customer['C_PHONE'] != '2') & (customer['C_COMMENT'].str.startswith('f'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] == 80) & (customer['C_CUSTKEY'] != 41)][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] != 'i') | (customer['C_ACCTBAL'] < 4032.211001697894) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == 'n')][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['P_PARTKEY'] < 121) | (part['SIZE'] > 24) | (part['CONTAINER'] != 'MED') & (part['TYPE'] == 'M') & (part['BRAND'].isin(['Brand#21', 'Brand#14', 'Brand#33', 'Brand#13', 'Brand#22', 'Brand#45', 'Brand#23', 'Brand#53', 'Brand#25', 'Brand#12', 'Brand#11', 'Brand#55', 'Brand#32', 'Brand#42', 'Brand#43', 'Brand#31', 'Brand#51', 'Brand#34', 'Brand#24', 'Brand#41', 'Brand#35'])) | (part['SIZE'] == 36) & (part['P_PARTKEY'] >= 119) & (part['BRAND'].isin(['Brand#15', 'Brand#44', 'Brand#25', 'Brand#35', 'Brand#51', 'Brand#45', 'Brand#23', 'Brand#53', 'Brand#11', 'Brand#24', 'Brand#22', 'Brand#41', 'Brand#33', 'Brand#21', 'Brand#13', 'Brand#43', 'Brand#14', 'Brand#31', 'Brand#55', 'Brand#32', 'Brand#12', 'Brand#54', 'Brand#52', 'Brand#34'])) | (part['MFGR'] == 'Manufacturer#5')][['BRAND', 'RETAILPRICE', 'CONTAINER', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'P_NAME']].groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['P_PARTKEY'] < 54) & (part['MFGR'].isin(['Manufacturer#5'])) & (part['BRAND'].isin(['Brand#42', 'Brand#21', 'Brand#41', 'Brand#15', 'Brand#45', 'Brand#44', 'Brand#14', 'Brand#22', 'Brand#23', 'Brand#35', 'Brand#52', 'Brand#34', 'Brand#31', 'Brand#32', 'Brand#12', 'Brand#55', 'Brand#13', 'Brand#33', 'Brand#24', 'Brand#43', 'Brand#25', 'Brand#51', 'Brand#11', 'Brand#53', 'Brand#54'])) | (part['RETAILPRICE'] == 942.3798938931847)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']].groupby(by=['RETAILPRICE', 'BRAND', 'SIZE', 'PT_COMMENT', 'TYPE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] != 1049.4978728744668) & (part['P_NAME'] != 'n') | (part['SIZE'] != 5) | (part['P_NAME'] != 'k') | (part['P_PARTKEY'] >= 36) | (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#3'])) & (part['PT_COMMENT'] != 'i')][['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'P_NAME', 'BRAND']].groupby(by=['P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'SIZE', 'BRAND']).agg('count')

part[(part['RETAILPRICE'] == 995.1850806694453) | (part['TYPE'] != 'E') & (part['MFGR'] == 'Manufacturer#2') & (part['P_NAME'] != 'bis') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3'])) & (part['RETAILPRICE'] > 1012.3546168246306) | (part['P_PARTKEY'] > 119) | (part['PT_COMMENT'] != 'y')][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'PT_COMMENT', 'BRAND']].groupby(by=['MFGR', 'RETAILPRICE', 'CONTAINER', 'BRAND']).agg('count')

part[(part['SIZE'] < 34) & (part['P_NAME'].str.startswith('h')) | (part['PT_COMMENT'] != 'q') | (part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] != 'LG') | (part['TYPE'] == 'L') | (part['PT_COMMENT'].str.startswith('y')) | (part['RETAILPRICE'] != 975.0808018918021)][['P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE', 'TYPE', 'MFGR', 'BRAND']].groupby(by=['MFGR', 'P_PARTKEY', 'BRAND']).agg('min', numeric_only=True)

part[(part['SIZE'] <= 12) | (part['PT_COMMENT'] != 'q') & (part['SIZE'] < 39) | (part['TYPE'] != 'S') & (part['RETAILPRICE'] <= 977.285852584865) & (part['BRAND'] != 'Brand#32')][['TYPE', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND']].groupby(by=['RETAILPRICE', 'PT_COMMENT', 'BRAND', 'CONTAINER', 'MFGR']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= 5583.080696736712) & (supplier['S_ADDRESS'].str.startswith('j')) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 11) & (supplier['S_SUPPKEY'] == 131) | (supplier['S_SUPPKEY'] <= 49)][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 30) & (supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_PHONE'] == '1') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '14-') & (supplier['S_SUPPKEY'] <= 168) | (supplier['S_PHONE'].str.startswith('1'))][['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 5348) | (partsupp['PS_PARTKEY'] != 40) & (partsupp['PS_SUPPKEY'] < 7173) & (partsupp['AVAILQTY'] <= 9257) & (partsupp['AVAILQTY'] > 5741)].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 2464) & (partsupp['PS_SUPPKEY'] != 456) & (partsupp['AVAILQTY'] <= 3086) | (partsupp['SUPPLYCOST'] <= 798.0420481209042) | (partsupp['PS_PARTKEY'] >= 15)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['MFGR'].isin(['Manufacturer#1']))][['SIZE', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['AVAILQTY'] == 5892)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'd') & (part['PT_COMMENT'].str.startswith('s')) & (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] == 957.4965211116456) & (part['SIZE'] != 38) & (part['SIZE'] == 18) & (part['P_PARTKEY'] == 95)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 3104)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 3143) | (partsupp['PS_SUPPKEY'] <= 600) & (partsupp['AVAILQTY'] < 2786)].merge(supplier[(supplier['S_PHONE'] != '1')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 4016) | (partsupp['PS_SUPPKEY'] > 4873)].merge(part[['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'TYPE']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] != 47)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['MFGR'] != 'Manufacturer#1') & (part['SIZE'] < 45) | (part['P_NAME'] == 'a') | (part['MFGR'] != 'Manufacturer#1') & (part['PT_COMMENT'] == 'h') | (part['BRAND'] == 'Brand#43')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 34)].merge(supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_COMMENT'] != 'r')][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 1) & (partsupp['PS_PARTKEY'] == 33) | (partsupp['PS_SUPPKEY'] < 4930) | (partsupp['AVAILQTY'] >= 5261)].merge(part[(part['BRAND'] != 'Brand#52') | (part['BRAND'] != 'Brand#23') & (part['TYPE'].str.startswith('S')) & (part['P_PARTKEY'] == 182) & (part['SIZE'] < 29) | (part['PT_COMMENT'] == 'w') | (part['SIZE'] < 19) & (part['P_NAME'] != 'h')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'BRAND']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 4)].merge(supplier[(supplier['S_ACCTBAL'] != 2989.104267546113)].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 27) | (partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['AVAILQTY'] < 1374)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 't')].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] < 12)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 43) | (partsupp['AVAILQTY'] < 214) & (partsupp['SUPPLYCOST'] != 79.05116090763515) | (partsupp['PS_PARTKEY'] != 43) & (partsupp['PS_PARTKEY'] > 14)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 4949) | (partsupp['PS_SUPPKEY'] > 504) | (partsupp['PS_SUPPKEY'] >= 2203)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['TYPE'].str.startswith('L'))][['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 5647) & (partsupp['PS_SUPPKEY'] <= 1588) | (partsupp['P_COMMENT'] == 'r') | (partsupp['AVAILQTY'] <= 5366) | (partsupp['PS_PARTKEY'] != 38)].merge(part[(part['SIZE'] > 45) & (part['TYPE'] != 'L') & (part['TYPE'].str.startswith('L')) | (part['RETAILPRICE'] < 1043.3047349367655) & (part['BRAND'].isin(['Brand#51', 'Brand#23', 'Brand#54', 'Brand#14', 'Brand#15'])) & (part['PT_COMMENT'] == 'w')][['BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 2731) | (partsupp['PS_SUPPKEY'] <= 6518) | (partsupp['PS_PARTKEY'] != 32) & (partsupp['P_COMMENT'] == 'n') | (partsupp['SUPPLYCOST'] <= 825.709538215534)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] >= 3972) | (partsupp['P_COMMENT'] == ' th')][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] < 12) | (supplier['S_PHONE'] == '1') & (supplier['S_NATIONKEY'] != 2)][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'f') & (partsupp['PS_SUPPKEY'] <= 7478)].merge(part[['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR', 'P_PARTKEY', 'P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'i') | (partsupp['PS_SUPPKEY'] <= 5454) | (partsupp['SUPPLYCOST'] != 897.9424472138111) | (partsupp['P_COMMENT'] != 'the') & (partsupp['PS_PARTKEY'] <= 19)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['TYPE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'x') | (partsupp['PS_SUPPKEY'] > 1244) | (partsupp['SUPPLYCOST'] == 993.2164368540257) | (partsupp['SUPPLYCOST'] >= 804.5173385954407) & (partsupp['AVAILQTY'] != 2387)].merge(part[['P_NAME', 'MFGR', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_NAME', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' ') & (partsupp['P_COMMENT'] != 'r') & (partsupp['PS_PARTKEY'] <= 45)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] != 'S') & (part['CONTAINER'] == 'LG')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'SIZE']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ',') | (partsupp['AVAILQTY'] <= 6959) | (partsupp['SUPPLYCOST'] >= 293.92266838529815)].merge(part[(part['TYPE'] == 'S') | (part['P_PARTKEY'] == 35) & (part['BRAND'] != 'Brand#51') & (part['BRAND'].isin(['Brand#52', 'Brand#54', 'Brand#53', 'Brand#41', 'Brand#45', 'Brand#13', 'Brand#21', 'Brand#11', 'Brand#22', 'Brand#14', 'Brand#25', 'Brand#35', 'Brand#24', 'Brand#51', 'Brand#15', 'Brand#42', 'Brand#12', 'Brand#34', 'Brand#31', 'Brand#33', 'Brand#32', 'Brand#55', 'Brand#43', 'Brand#44', 'Brand#23'])) | (part['TYPE'] == 'E') & (part['MFGR'] != 'Manufacturer#1') & (part['BRAND'] == 'Brand#34')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == 'c') | (partsupp['PS_PARTKEY'] > 48)].merge(supplier[(supplier['S_ACCTBAL'] == 7230.968850486955) | (supplier['S_ADDRESS'] != 'a')][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'f') | (partsupp['PS_SUPPKEY'] >= 1923) & (partsupp['PS_PARTKEY'] != 4) | (partsupp['PS_SUPPKEY'] != 5906) | (partsupp['SUPPLYCOST'] == 212.54988043729455)].merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('g'))][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'] == 'M')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('j')) | (partsupp['AVAILQTY'] < 593)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['PS_SUPPKEY'] >= 1378) & (partsupp['SUPPLYCOST'] >= 112.48041316843081)].merge(part[(part['BRAND'].isin(['Brand#24', 'Brand#35', 'Brand#34', 'Brand#45', 'Brand#32', 'Brand#41', 'Brand#54', 'Brand#55', 'Brand#51', 'Brand#43', 'Brand#33', 'Brand#53', 'Brand#52', 'Brand#14', 'Brand#12', 'Brand#15', 'Brand#42', 'Brand#25', 'Brand#31', 'Brand#44', 'Brand#13'])) & (part['BRAND'].isin(['Brand#12', 'Brand#51', 'Brand#15', 'Brand#54', 'Brand#23', 'Brand#42', 'Brand#22', 'Brand#52', 'Brand#34', 'Brand#41', 'Brand#24', 'Brand#33', 'Brand#13'])) & (part['P_NAME'].str.startswith('bis')) & (part['CONTAINER'].str.startswith('SM')) | (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] <= 1036.2752943009434)][['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 298.53851474459674) | (partsupp['P_COMMENT'] == 'p') | (partsupp['PS_PARTKEY'] != 44)].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] == 618.0444360591989) & (partsupp['PS_SUPPKEY'] > 336)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_NAME'] != 'M') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] > 580.9015090360334)].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] > 40) | (part['BRAND'].isin(['Brand#24', 'Brand#22', 'Brand#34', 'Brand#31', 'Brand#32', 'Brand#52'])) & (part['SIZE'] < 44) | (part['SIZE'] == 16) | (part['TYPE'].str.startswith('STA')) | (part['P_NAME'] != 'lem') & (part['PT_COMMENT'] == 's') | (part['BRAND'].isin(['Brand#14', 'Brand#35', 'Brand#15']))][['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] != 1081.3101315737163) | (part['BRAND'] != 'Brand#35') & (part['CONTAINER'] != 'MED') & (part['CONTAINER'] != 'SM') & (part['CONTAINER'] != 'SM') & (part['BRAND'] == 'Brand#13')][['CONTAINER', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1034.3165010286164) | (part['P_NAME'].str.startswith('i')) | (part['MFGR'] != 'Manufacturer#2') & (part['P_PARTKEY'] != 164) & (part['MFGR'] == 'Manufacturer#4') & (part['RETAILPRICE'] < 998.9682353163554) & (part['CONTAINER'] != 'WRAP') & (part['P_NAME'].str.startswith('lin')) | (part['PT_COMMENT'].str.startswith(' fi'))][['CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != 'r') & (supplier['S_PHONE'] == '32-') & (supplier['S_ACCTBAL'] < 6681.384323914138) | (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('B'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] <= 5) | (supplier['S_COMMENT'] == 't')].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 6)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] > 109) & (supplier['S_NATIONKEY'] < 12) | (supplier['S_NATIONKEY'] < 23) | (supplier['S_SUPPKEY'] > 63) | (supplier['S_NATIONKEY'] < 16) | (supplier['S_PHONE'] != '14-') & (supplier['S_ACCTBAL'] != 8756.589369889658)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('S')) | (part['PT_COMMENT'] == 'r') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#1', 'Manufacturer#5'])) & (part['RETAILPRICE'] > 1053.2692827059511) | (part['P_NAME'] == 'bis')][['P_NAME', 'TYPE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY']).agg('count')

supplier.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'K')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] != 'E') | (nation['N_REGIONKEY'] <= 3)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 1409.6277659853101) & (supplier['S_SUPPKEY'] >= 119) & (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_PHONE'] != '14-') & (supplier['S_NATIONKEY'] >= 3) & (supplier['S_ADDRESS'] == '4')].merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] <= 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'O') & (supplier['S_NATIONKEY'] >= 20) & (supplier['S_COMMENT'] == 'e')].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'].str.startswith('H')) & (supplier['S_PHONE'] != '3') & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'].str.startswith('t'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'q') | (supplier['S_ADDRESS'] != 'x') & (supplier['S_NATIONKEY'] != 7) & (supplier['S_SUPPKEY'] >= 137) | (supplier['S_NAME'] == 'S') & (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_NATIONKEY'] <= 4)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith(','))][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 179) | (supplier['S_ADDRESS'].str.startswith('z')) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'] != 's') | (supplier['S_PHONE'] != '1')][['S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'Q') & (supplier['S_ACCTBAL'] >= 2097.449669078883) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'] == '14-')].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '14-')][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 2) & (supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] > 1) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 46)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 15) & (supplier['S_SUPPKEY'] == 139) & (supplier['S_NATIONKEY'] >= 12) & (supplier['S_ACCTBAL'] >= 9862.651865747226) & (supplier['S_ADDRESS'] != 'b') | (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 16) & (supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] == 'p') & (supplier['S_ACCTBAL'] >= 9868.836411839644) & (supplier['S_PHONE'] == '14-') | (supplier['S_SUPPKEY'] <= 28)][['S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u') | (nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 174) | (supplier['S_ACCTBAL'] > 3022.188029897894) | (supplier['S_SUPPKEY'] >= 134) & (supplier['S_SUPPKEY'] != 18) & (supplier['S_PHONE'] == '14-') & (supplier['S_ACCTBAL'] > 8160.590590606064)][['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] <= 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] != 84) & (supplier['S_ADDRESS'] != '6') & (supplier['S_SUPPKEY'] <= 146) & (supplier['S_ADDRESS'].str.startswith('g'))].merge(nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] > 20) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 1) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'a') | (supplier['S_ADDRESS'].str.startswith('t'))].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 187) | (supplier['S_NATIONKEY'] <= 9) & (supplier['S_ADDRESS'] != '8') & (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 7) & (supplier['S_SUPPKEY'] == 128) | (supplier['S_ACCTBAL'] <= 8418.508284126312) & (supplier['S_SUPPKEY'] == 118)].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ADDRESS', 'S_NAME', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_NAME'] != 'F') | (nation['N_NATIONKEY'] == 23) & (nation['N_REGIONKEY'] <= 2)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] < 17)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] <= 3) | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 14) | (nation['N_COMMENT'].str.startswith('s'))].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'E') & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('ASI')) | (region['R_NAME'] != 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NAME'] != 'B') & (nation['N_COMMENT'] != 's') | (nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] == 5) | (nation['N_NAME'] == 'G') | (nation['N_NATIONKEY'] < 15) | (nation['N_REGIONKEY'] < 2)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_NAME'].str.startswith('P'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'] != 'o') & (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NAME'] == 'E') | (nation['N_NAME'] != 'I')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'].str.startswith('ASI'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer.merge(nation[(nation['N_NAME'].str.startswith('R'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 5857.127346719346) | (customer['C_CUSTKEY'] < 26) | (customer['C_PHONE'] != '18-')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 6137.790655585188) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_NATIONKEY'] >= 17)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_ACCTBAL'] > 9450.68648519712) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_COMMENT'] != 'u')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'M') | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'I') & (customer['C_ADDRESS'].str.startswith('J')) & (customer['C_COMMENT'] == 's') & (customer['C_PHONE'] == '3')].merge(nation[(nation['N_NATIONKEY'] >= 13) & (nation['N_NATIONKEY'] <= 16) | (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != 'a') | (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '25-') & (customer['C_ADDRESS'].str.startswith('m'))][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'n') & (customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] > 77)][['C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'i') & (customer['C_CUSTKEY'] >= 5) & (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 3) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD']))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'p') | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'S') & (customer['C_COMMENT'] == 's') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'y') | (customer['C_ACCTBAL'] <= 3877.4386184786035) | (customer['C_COMMENT'] == '.')].merge(nation[(nation['N_NATIONKEY'] <= 8) & (nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] != 13)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'].str.startswith('l')) | (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] <= 13) & (customer['C_CUSTKEY'] < 23) | (customer['C_NATIONKEY'] > 1)][['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] < 18) & (nation['N_NAME'] == 'J') | (nation['N_NAME'].str.startswith('A'))][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 57) | (customer['C_ADDRESS'] == 'g') | (customer['C_COMMENT'] == 's') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] != 66) | (customer['C_NATIONKEY'] >= 18) & (customer['C_COMMENT'] != 'g') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD']))].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'r') & (customer['C_ADDRESS'].str.startswith('X')) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] == 8113.048682369106)].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'].str.startswith('u'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] == '9') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] != 3299.012916992594) | (customer['C_NATIONKEY'] <= 22) | (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_ACCTBAL'] <= 4517.996906776308) & (customer['C_ACCTBAL'] < 3426.7378480153684)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 20) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'] != 'f') | (customer['C_PHONE'] != '1')].merge(nation[(nation['N_NATIONKEY'] != 13) & (nation['N_NATIONKEY'] > 3) & (nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] <= 10)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 0) | (customer['C_CUSTKEY'] == 89)][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('o'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] <= 4) | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] >= 56) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] <= 6324.125619227309)].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'].str.startswith('u'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 11) | (customer['C_CUSTKEY'] > 2) | (customer['C_ACCTBAL'] < 4099.84063713759)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 5) | (customer['C_NATIONKEY'] != 18) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_CUSTKEY'] < 6)].merge(nation[(nation['N_NATIONKEY'] > 9) & (nation['N_NATIONKEY'] != 9) | (nation['N_NATIONKEY'] > 20) | (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '1') | (customer['C_NATIONKEY'] == 2) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == '8') | (customer['C_CUSTKEY'] >= 21) & (customer['C_NATIONKEY'] <= 5)].merge(nation[(nation['N_NATIONKEY'] == 18) | (nation['N_NATIONKEY'] > 22)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '3') | (customer['C_ACCTBAL'] == 1189.5209409879285)][['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '13-') | (customer['C_COMMENT'] == 'w') & (customer['C_ACCTBAL'] != 4911.336957508647) | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_PHONE'] == '27-') & (customer['C_COMMENT'] == 'n') & (customer['C_ADDRESS'] == '8')].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] < 21) & (customer['C_PHONE'] != '27-') & (customer['C_COMMENT'] == '.') | (customer['C_ADDRESS'] == 'l') & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_CUSTKEY'] <= 24)].merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != '4') | (customer['C_CUSTKEY'] > 99) | (customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'] != 'j')].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('AME'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] <= 8) | (customer['C_COMMENT'] == 'r') | (customer['C_COMMENT'] == '.') & (customer['C_ADDRESS'] == 'i') & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] <= 21) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_ACCTBAL'] == -122.09695687624458) & (customer['C_NATIONKEY'] >= 19)].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NATIONKEY'] > 23) | (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_PHONE'] != '13-') & (customer['MKTSEGMENT'].isin(['BUILDING']))].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] > 9)].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) | (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_COMMENT'].str.startswith('e'))].merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['C_ACCTBAL', 'C_PHONE', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_COMMENT'] == 'i') | (nation['N_COMMENT'] != 'a') & (nation['N_NATIONKEY'] < 7)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_NAME'] == 'G')].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] < 10) & (nation['N_NAME'] == 'M') & (nation['N_NAME'] == 'E')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM', '5-LOW']))].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['TOTALPRICE'] <= 239237.54034867423) & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED')].merge(customer[(customer['C_CUSTKEY'] <= 90)].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] <= 7)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

lineitem.merge(orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

lineitem.merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 17) | (nation['N_NAME'] == 'S') & (nation['N_NAME'] == 'C') | (nation['N_NAME'] != 'I')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp.merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_REGIONKEY'] == 3) & (nation['N_NAME'] == 'U')].merge(region[(region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] >= 3504) | (partsupp['PS_SUPPKEY'] < 3780) | (partsupp['PS_SUPPKEY'] < 2201) | (partsupp['PS_SUPPKEY'] >= 5369)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'SIZE', 'P_PARTKEY', 'P_NAME', 'MFGR']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 3769) & (partsupp['PS_PARTKEY'] < 11) | (partsupp['SUPPLYCOST'] != 320.69278915314595)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'LG') & (part['SIZE'] != 20) | (part['P_NAME'].str.startswith('w'))][['BRAND', 'MFGR', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == ' th') & (partsupp['P_COMMENT'].str.startswith('s')) & (partsupp['PS_PARTKEY'] != 38) & (partsupp['SUPPLYCOST'] >= 752.2425758238788) & (partsupp['AVAILQTY'] == 4927)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('b')) | (partsupp['PS_SUPPKEY'] != 838) | (partsupp['AVAILQTY'] > 7802)].merge(part[(part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'] == 'n') & (part['TYPE'] != 'P') | (part['RETAILPRICE'] != 1013.5167067971972)][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 915.4009921222225) | (partsupp['PS_SUPPKEY'] <= 7210) | (partsupp['P_COMMENT'].str.startswith('a')) & (partsupp['SUPPLYCOST'] < 48.788982847236895)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'o') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 7527.6950875926495) | (supplier['S_NATIONKEY'] != 11)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 750.6734790555365) | (partsupp['AVAILQTY'] < 9866) & (partsupp['PS_SUPPKEY'] > 6558) & (partsupp['AVAILQTY'] <= 8083)].merge(part[(part['RETAILPRICE'] >= 907.5796393596013) | (part['MFGR'] != 'Manufacturer#2') & (part['P_NAME'] != 'i') | (part['RETAILPRICE'] < 1099.7396578476546) & (part['RETAILPRICE'] < 933.2087190909212)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RECEIPTDATE'] > '1998-11-06') & (lineitem['L_SUPPKEY'] >= 3501) & (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['L_ORDERKEY'] != 9) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['EXTENDEDPRICE'] >= 41767.76017872883) | (lineitem['L_PARTKEY'] > 39315)].merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'l') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'O_CUSTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] >= 3) & (lineitem['LINESTATUS'] == 'F') | (lineitem['EXTENDEDPRICE'] > 51074.5633804036) | (lineitem['LINESTATUS'] == 'F') | (lineitem['EXTENDEDPRICE'] >= 33045.49133395049) & (lineitem['EXTENDEDPRICE'] == 31154.797503117068) | (lineitem['LINESTATUS'] != 'F') | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R'])) & (lineitem['DISCOUNT'] <= 0.08230774204755723)][['L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'QUANTITY', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'SHIPDATE']].groupby(by=['RETURNFLAG', 'EXTENDEDPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 37)].merge(partsupp[(partsupp['P_COMMENT'] == 'g') & (partsupp['P_COMMENT'] != 'ly ') & (partsupp['P_COMMENT'] == 'i')][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] == 7567) | (lineitem['EXTENDEDPRICE'] == 59466.467822406106) & (lineitem['EXTENDEDPRICE'] < 20719.02324787806) | (lineitem['L_PARTKEY'] >= 20699) | (lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['TAX'] >= 0.019078087619053125) | (lineitem['L_SUPPKEY'] <= 9804) | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['L_COMMENT'] == 'c')].merge(orders[(orders['ORDERSTATUS'] != 'P') & (orders['TOTALPRICE'] >= 138854.8857818654) & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'] == 'C')][['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['LINESTATUS'] != 'O') | (lineitem['L_PARTKEY'] > 123418) | (lineitem['EXTENDEDPRICE'] >= 66381.48100665356) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'COLLECT COD'])) & (lineitem['TAX'] != 0.028780184030664124) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPMODE'] != 'RAIL')].merge(orders[(orders['O_CUSTKEY'] >= 104025)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_SUPPKEY'] >= 3317) | (lineitem['DISCOUNT'] != 0.09453613769009493) & (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(orders[(orders['O_ORDERKEY'] > 797) | (orders['O_ORDERKEY'] <= 139) & (orders['O_CUSTKEY'] >= 127009) & (orders['ORDERSTATUS'] != 'O') | (orders['O_COMMENT'] == 't')][['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('count')

lineitem[(lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_PARTKEY'] >= 149158) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_ORDERKEY'] > 76) & (lineitem['EXTENDEDPRICE'] == 39140.61113817236) | (lineitem['L_COMMENT'] == 'e')][['SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'L_ORDERKEY', 'LINENUMBER', 'L_COMMENT']].merge(partsupp.merge(part[['P_PARTKEY', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['TAX'] < 0.013643614901296406) | (lineitem['LINESTATUS'] == 'F') | (lineitem['LINENUMBER'] < 5) & (lineitem['L_ORDERKEY'] == 14) & (lineitem['LINESTATUS'] != 'F')][['L_ORDERKEY', 'L_COMMENT', 'RETURNFLAG']].merge(orders[['ORDERDATE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_PARTKEY'] > 109279)].merge(partsupp[(partsupp['P_COMMENT'] != ' th') & (partsupp['P_COMMENT'] == 's') & (partsupp['SUPPLYCOST'] >= 75.19920408870267) | (partsupp['PS_SUPPKEY'] >= 6206)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['SHIPMODE'] != 'FOB')][['QUANTITY', 'EXTENDEDPRICE', 'SHIPDATE', 'LINESTATUS', 'L_PARTKEY']].merge(partsupp.merge(part[['P_PARTKEY', 'MFGR', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_PARTKEY'] > 55864) & (lineitem['EXTENDEDPRICE'] < 71094.40545113305) | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') | (lineitem['LINENUMBER'] > 4) & (lineitem['TAX'] == 0.039249410233785795) & (lineitem['LINENUMBER'] < 4)][['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'QUANTITY', 'COMMITDATE']].groupby(by=['LINESTATUS', 'L_SUPPKEY']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'DISCOUNT', 'SHIPDATE', 'L_SUPPKEY', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('JUMBO'))][['RETAILPRICE', 'TYPE', 'CONTAINER', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'EXTENDEDPRICE', 'TAX', 'QUANTITY', 'DISCOUNT']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_COMMENT']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'RECEIPTDATE', 'SHIPDATE', 'LINESTATUS', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'] != ' th')].merge(part[(part['TYPE'] != 'M') & (part['PT_COMMENT'] != 'i') | (part['RETAILPRICE'] < 962.5552405546498) | (part['RETAILPRICE'] > 1000.122317703453) | (part['BRAND'] != 'Brand#24') | (part['RETAILPRICE'] < 1049.3626309329577) | (part['MFGR'] == 'Manufacturer#3') & (part['PT_COMMENT'] == 'kag') | (part['CONTAINER'] != 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'TAX', 'QUANTITY', 'L_PARTKEY', 'RETURNFLAG', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE']].merge(partsupp[(partsupp['AVAILQTY'] < 3531) | (partsupp['P_COMMENT'].str.startswith('x')) | (partsupp['AVAILQTY'] <= 3827) & (partsupp['SUPPLYCOST'] == 474.01610043097327)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'COMMITDATE', 'LINENUMBER', 'SHIPINSTRUCT', 'DISCOUNT', 'TAX', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_NATIONKEY'] < 13) & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'MACHINERY']))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'SHIPMODE', 'EXTENDEDPRICE', 'SHIPDATE', 'L_COMMENT', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['P_COMMENT'] == 'd') | (partsupp['SUPPLYCOST'] > 430.09428899445174)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'L') | (part['TYPE'] != 'E')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['TAX', 'L_ORDERKEY', 'SHIPMODE']].merge(orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'a') | (nation['N_NAME'] != 'K') & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 1) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'c') | (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] > 7) & (nation['N_NATIONKEY'] >= 22)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'M')][['N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

nation[(nation['N_COMMENT'] != 'o') | (nation['N_REGIONKEY'] <= 3) | (nation['N_COMMENT'].str.startswith('t')) & (nation['N_COMMENT'] == 'c')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] != 1129.3329417769166) | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] < 1314.1861608255417) & (customer['C_NATIONKEY'] > 14) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING'])) & (customer['C_PHONE'].str.startswith('2'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ACCTBAL'] == 5082.24716828148) | (customer['C_PHONE'] != '27-')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == '9')].merge(nation[(nation['N_NATIONKEY'] > 20) | (nation['N_NATIONKEY'] <= 7) & (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] != 'p')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'l')].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 1) | (nation['N_NAME'].str.startswith('K'))].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] > 0)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] > 2) & (customer['C_ADDRESS'].str.startswith('4')) & (customer['C_NATIONKEY'] < 9) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_NATIONKEY'] > 19) & (customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '3')][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'] == 's') & (customer['C_ADDRESS'] != 'J') & (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 7606.5557784478115) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= 2793.8372407011284) | (customer['C_COMMENT'].str.startswith('e'))].merge(nation[(nation['N_COMMENT'] != ' ') | (nation['N_NATIONKEY'] <= 7)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_NATIONKEY'] == 10) | (customer['C_PHONE'].str.startswith('2')) & (customer['C_NATIONKEY'] != 21)][['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith('r'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] > 11) | (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] < 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['CLERK'] != 'C') | (orders['O_COMMENT'] != 'k') & (orders['O_CUSTKEY'] != 120464)].merge(customer[(customer['C_ACCTBAL'] > 5173.32724775896)].merge(nation[(nation['N_NAME'] == 'I')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1992-01-13') | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] > 792) & (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] == 168877.60299279337)].merge(customer[(customer['C_ACCTBAL'] >= 8517.08551864995)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['O_COMMENT'] == 'n')].merge(customer[(customer['C_PHONE'].str.startswith('27-'))].merge(nation[(nation['N_NATIONKEY'] < 7) | (nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'].str.startswith('f')) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'].str.startswith('s'))].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] <= 14)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['TOTALPRICE'] < 343415.63085620705) | (orders['O_CUSTKEY'] <= 119793) & (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['P']))].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['O_COMMENT'] == 'i')][['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[['C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] > 750) | (orders['TOTALPRICE'] < 301575.6351270097) | (orders['O_COMMENT'] != 't') | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] <= 0)][['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[(customer['C_CUSTKEY'] >= 86) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 10) | (customer['C_COMMENT'] != ' ') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] > 17)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '2-HIGH', '5-LOW', '3-MEDIUM'])) | (orders['SHIPPRIORITY'] == 0) | (orders['O_ORDERKEY'] <= 460) | (orders['O_CUSTKEY'] >= 22244)][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_NATIONKEY'] != 9) & (customer['C_NAME'] == 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW', '2-HIGH']))][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'F') & (orders['O_ORDERKEY'] >= 197) & (orders['CLERK'] != 'C') | (orders['O_CUSTKEY'] <= 42011) | (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] <= 10745) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_NATIONKEY'] > 0) & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] >= 5) & (customer['C_COMMENT'].str.startswith('p')) | (customer['C_CUSTKEY'] < 19) & (customer['C_CUSTKEY'] == 76) | (customer['C_NATIONKEY'] != 13) & (customer['C_COMMENT'].str.startswith('u'))][['C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] != 0) | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT'])) | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] <= 333978.9521772253) & (orders['TOTALPRICE'] <= 10529.552815359977) & (orders['ORDERSTATUS'] == 'O')][['O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] != '25-') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 8964.335537415043)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'n') & (orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] != 345365.7383344217) & (orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] < 636) & (orders['O_COMMENT'] != 'h')].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ' re') & (orders['SHIPPRIORITY'] > 0)][['TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] == 15) | (customer['C_PHONE'] == '22-') & (customer['C_NAME'].str.startswith('C')) & (customer['C_CUSTKEY'] != 84) & (customer['MKTSEGMENT'] == 'FURNITURE')][['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('k')) & (orders['TOTALPRICE'] == 127368.86543171131) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] <= 86322) & (orders['O_CUSTKEY'] >= 4771) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['TOTALPRICE'] > 168107.86247047276)][['ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].groupby(by=['O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']).agg('count')

orders[(orders['O_CUSTKEY'] <= 79143) & (orders['ORDERDATE'] == '1992-01-13')][['TOTALPRICE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] < '1998-07-21') & (orders['O_COMMENT'] != 'd') | (orders['CLERK'] == 'C') | (orders['TOTALPRICE'] <= 172086.70532628297) & (orders['O_ORDERKEY'] <= 661)][['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_CUSTKEY'] > 10) & (customer['C_NATIONKEY'] == 5) & (customer['C_COMMENT'].str.startswith('y')) & (customer['C_COMMENT'] == '.') & (customer['C_ACCTBAL'] < 3283.718368273743)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 282765.96334200515) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '2-HIGH']))].merge(customer[(customer['C_CUSTKEY'] == 84)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 160882.1715995536) & (orders['TOTALPRICE'] == 130242.30444853505) & (orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] <= 18783) | (orders['TOTALPRICE'] > 138539.70243452323) | (orders['O_CUSTKEY'] > 139651)][['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].groupby(by=['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_ADDRESS'].str.startswith('6')) & (customer['C_ADDRESS'] == 'S') & (customer['C_COMMENT'] == 'd') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[(customer['C_PHONE'] == '13-') & (customer['C_CUSTKEY'] != 55)][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

part[(part['BRAND'].isin(['Brand#11', 'Brand#53', 'Brand#14', 'Brand#24', 'Brand#21', 'Brand#54', 'Brand#35', 'Brand#55', 'Brand#34', 'Brand#51', 'Brand#31', 'Brand#13', 'Brand#15', 'Brand#12', 'Brand#41', 'Brand#45', 'Brand#44', 'Brand#43', 'Brand#25', 'Brand#22', 'Brand#42'])) | (part['BRAND'].isin(['Brand#14', 'Brand#15'])) | (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) & (part['SIZE'] != 31) & (part['RETAILPRICE'] > 1016.2941104319455) | (part['RETAILPRICE'] == 1057.7103489713113) & (part['TYPE'] != 'STA') | (part['MFGR'] == 'Manufacturer#3')][['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE', 'CONTAINER', 'P_NAME', 'TYPE']].groupby(by=['P_NAME']).agg('sum', numeric_only=True)

part[(part['CONTAINER'] != 'MED') & (part['P_PARTKEY'] != 102) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3', 'Manufacturer#1'])) | (part['PT_COMMENT'] != 'the') | (part['RETAILPRICE'] == 1088.7766067974608) | (part['P_PARTKEY'] != 72) | (part['P_PARTKEY'] != 122) | (part['SIZE'] > 10)][['BRAND', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']].groupby(by=['TYPE', 'PT_COMMENT', 'P_NAME']).agg('sum', numeric_only=True)

part[(part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] != 'Brand#41') | (part['RETAILPRICE'] != 1080.6656847552163) & (part['BRAND'] == 'Brand#11') & (part['RETAILPRICE'] != 1052.9572555684454) | (part['BRAND'] == 'Brand#55')][['RETAILPRICE', 'TYPE', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']].groupby(by=['RETAILPRICE', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_PARTKEY']).agg('min', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'] == 'y') & (part['TYPE'].str.startswith('L')) | (part['P_NAME'].str.startswith('s')) & (part['RETAILPRICE'] <= 968.8752468234746) & (part['TYPE'].str.startswith('S')) & (part['TYPE'] != 'P')][['BRAND', 'P_PARTKEY', 'P_NAME', 'MFGR', 'SIZE', 'TYPE', 'CONTAINER']].groupby(by=['CONTAINER', 'SIZE', 'BRAND', 'P_PARTKEY', 'MFGR']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] != 'f') & (part['P_PARTKEY'] >= 177) | (part['SIZE'] < 31) & (part['RETAILPRICE'] > 934.2168123623796) & (part['P_PARTKEY'] == 30) | (part['RETAILPRICE'] <= 993.4226527072856) | (part['TYPE'] != 'L') & (part['TYPE'] == 'E') & (part['MFGR'] != 'Manufacturer#1')][['TYPE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME']].groupby(by=['P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'] == 'kag') & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#3'])) | (part['P_NAME'] != 'h') | (part['TYPE'] == 'M') | (part['SIZE'] != 33) | (part['PT_COMMENT'] == 'kag') | (part['CONTAINER'] == 'JUMBO') & (part['P_PARTKEY'] == 188)][['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE']].groupby(by=['BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']).agg('count')

part[(part['P_NAME'].str.startswith('g')) | (part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] >= 186) & (part['PT_COMMENT'] == 'g') & (part['P_NAME'] != 'lin') | (part['P_NAME'].str.startswith('n')) & (part['CONTAINER'] == 'WRAP') & (part['P_NAME'].str.startswith('h'))][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']].groupby(by=['PT_COMMENT', 'RETAILPRICE']).agg('min', numeric_only=True)

part[(part['SIZE'] >= 25) | (part['CONTAINER'] != 'WRAP') | (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'].str.startswith('d')) | (part['SIZE'] == 44) & (part['TYPE'] != 'L') | (part['BRAND'] == 'Brand#15') & (part['P_PARTKEY'] >= 129)][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']].groupby(by=['P_PARTKEY', 'P_NAME', 'SIZE', 'BRAND']).agg('max', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'SM') | (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] == 'Brand#14') | (part['P_NAME'].str.startswith('d')) | (part['RETAILPRICE'] > 952.2050112270579) | (part['MFGR'] == 'Manufacturer#2') & (part['RETAILPRICE'] < 989.164726804994)][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'P_NAME', 'PT_COMMENT', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('max', numeric_only=True)

partsupp.merge(part[(part['MFGR'] == 'Manufacturer#3') & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] >= 945.34955579077) & (part['P_PARTKEY'] < 175) | (part['MFGR'] == 'Manufacturer#1')][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'TYPE', 'PT_COMMENT']).agg('count')

partsupp.merge(part[(part['P_PARTKEY'] >= 92) & (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'] == 'm') & (part['TYPE'].str.startswith('SMA')) & (part['BRAND'].isin(['Brand#14', 'Brand#32', 'Brand#25', 'Brand#43', 'Brand#55', 'Brand#22', 'Brand#44', 'Brand#11', 'Brand#41', 'Brand#52', 'Brand#12', 'Brand#31', 'Brand#35', 'Brand#13', 'Brand#15', 'Brand#53', 'Brand#33', 'Brand#54', 'Brand#23', 'Brand#21', 'Brand#51', 'Brand#45']))][['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'f') & (supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] == 'x') | (supplier['S_PHONE'] != '28-') | (supplier['S_SUPPKEY'] == 64) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('28-'))].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_NATIONKEY'] < 11) | (nation['N_COMMENT'].str.startswith('u'))][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'v')].merge(nation[(nation['N_COMMENT'] == 'e')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_PHONE'] != '26-') & (supplier['S_NATIONKEY'] == 13) & (supplier['S_ADDRESS'].str.startswith('r')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'Q')][['S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] < 0)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] <= 28) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'] == 'J') & (supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'] == '9') & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5613) & (partsupp['P_COMMENT'] == 'the')][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['SIZE'] >= 19) | (part['CONTAINER'] == 'LG') & (part['PT_COMMENT'] == 'm') | (part['CONTAINER'].str.startswith('WRAP')) | (part['MFGR'] != 'Manufacturer#3')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 8137) & (partsupp['AVAILQTY'] > 1729) | (partsupp['SUPPLYCOST'] != 762.7194393438213)].merge(part[['BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'SIZE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'MFGR', 'BRAND', 'RETAILPRICE', 'SIZE']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 7282) & (partsupp['P_COMMENT'] == ',') | (partsupp['AVAILQTY'] >= 7658) & (partsupp['SUPPLYCOST'] > 557.0243242332294) & (partsupp['P_COMMENT'] == 'bli')][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 37) & (partsupp['PS_PARTKEY'] < 15) | (partsupp['PS_SUPPKEY'] > 7379) | (partsupp['P_COMMENT'] != 'l')].merge(part[(part['PT_COMMENT'] != 'w') | (part['RETAILPRICE'] < 970.0782699053143) | (part['BRAND'] != 'Brand#41') | (part['P_PARTKEY'] != 44) & (part['SIZE'] < 2) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4']))][['BRAND', 'RETAILPRICE', 'P_NAME', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] != 5) | (partsupp['PS_SUPPKEY'] < 243) & (partsupp['PS_SUPPKEY'] <= 5090) & (partsupp['AVAILQTY'] != 6238)].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 7)].merge(supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 2) & (nation['N_NATIONKEY'] >= 22) & (nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'].str.startswith('e'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 15) | (partsupp['AVAILQTY'] > 2573) | (partsupp['P_COMMENT'] != 'e') | (partsupp['AVAILQTY'] > 2105)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] == 3)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 5)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ADDRESS'].str.startswith('r')) & (supplier['S_ADDRESS'] != 'P')].merge(nation[(nation['N_NATIONKEY'] < 12)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 31) & (partsupp['AVAILQTY'] > 6790) | (partsupp['PS_SUPPKEY'] > 6559) & (partsupp['PS_SUPPKEY'] >= 6388) & (partsupp['PS_PARTKEY'] == 41)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['P_NAME', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 1620) & (partsupp['SUPPLYCOST'] >= 509.8106122135222) | (partsupp['PS_SUPPKEY'] > 1883) & (partsupp['PS_SUPPKEY'] > 3672) & (partsupp['P_COMMENT'].str.startswith(' '))].merge(part[['BRAND', 'TYPE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'CONTAINER', 'TYPE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 694)].merge(part[(part['P_PARTKEY'] == 69) | (part['PT_COMMENT'] != 'w') & (part['SIZE'] != 8) & (part['SIZE'] <= 44) | (part['P_NAME'].str.startswith('h')) & (part['BRAND'].isin(['Brand#42'])) | (part['SIZE'] < 25) & (part['PT_COMMENT'] != ' fi')][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_SUPPKEY'] == 1782) & (partsupp['PS_SUPPKEY'] > 5604) | (partsupp['SUPPLYCOST'] != 934.94554824825) & (partsupp['SUPPLYCOST'] > 17.103833992580164) & (partsupp['PS_PARTKEY'] == 22)].merge(supplier[(supplier['S_ACCTBAL'] >= -557.9858390667805) | (supplier['S_NATIONKEY'] > 14)].merge(nation[(nation['N_NAME'] != 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'ly ') & (partsupp['SUPPLYCOST'] <= 554.7702252466761) & (partsupp['PS_SUPPKEY'] < 4482) | (partsupp['AVAILQTY'] >= 3284)].merge(part[(part['PT_COMMENT'] != 'x') | (part['SIZE'] <= 48) & (part['BRAND'] == 'Brand#33') | (part['CONTAINER'].str.startswith('JUMBO')) | (part['MFGR'].isin(['Manufacturer#4']))][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] == ' ') & (partsupp['AVAILQTY'] != 9182)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'h') & (partsupp['P_COMMENT'] != 'e')].merge(supplier[(supplier['S_SUPPKEY'] == 91) & (supplier['S_SUPPKEY'] == 60) & (supplier['S_COMMENT'] == 'l') & (supplier['S_ACCTBAL'] == 637.7906336460705) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] == 'S')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'h') | (partsupp['SUPPLYCOST'] <= 226.60439067137807) & (partsupp['SUPPLYCOST'] <= 397.07161898324154) & (partsupp['PS_PARTKEY'] == 26) | (partsupp['AVAILQTY'] > 7072)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] == 'e') & (part['P_PARTKEY'] != 154)][['P_NAME', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['PS_PARTKEY'] >= 48)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['AVAILQTY'] <= 9416)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 521.8379370053768) | (partsupp['P_COMMENT'] == 'b') & (partsupp['PS_PARTKEY'] < 18) | (partsupp['PS_PARTKEY'] >= 22)].merge(part[['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'BRAND', 'CONTAINER']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 694.670804330619) | (partsupp['SUPPLYCOST'] <= 194.5374688433335) | (partsupp['SUPPLYCOST'] > 832.6145383115277)].merge(part[(part['BRAND'] == 'Brand#53') | (part['CONTAINER'] != 'JUMBO') | (part['BRAND'] == 'Brand#43') | (part['P_PARTKEY'] >= 152) & (part['PT_COMMENT'].str.startswith('e')) | (part['TYPE'].str.startswith('S')) & (part['RETAILPRICE'] != 1049.761280832857)][['CONTAINER', 'P_NAME', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 199.67477032977897) & (partsupp['PS_PARTKEY'] <= 23) & (partsupp['AVAILQTY'] >= 4770) | (partsupp['P_COMMENT'].str.startswith('q'))][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_PHONE'] == '28-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 924.9526412430046) | (partsupp['PS_SUPPKEY'] <= 3599) & (partsupp['PS_PARTKEY'] != 3) & (partsupp['P_COMMENT'] != 'b')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_PHONE', 'S_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 969.7171538650588) & (partsupp['PS_PARTKEY'] == 28)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_NAME']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['BRAND'] != 'Brand#34') | (part['PT_COMMENT'] != 'o') & (part['P_NAME'].str.startswith('lin')) | (part['BRAND'] != 'Brand#11') & (part['BRAND'] == 'Brand#54') | (part['SIZE'] < 19) | (part['RETAILPRICE'] >= 1095.7440779313556) | (part['PT_COMMENT'] == ' ') & (part['PT_COMMENT'].str.startswith('b'))][['CONTAINER', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] != 17) | (nation['N_COMMENT'] == 't')].merge(region[(region['R_REGIONKEY'] > 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'] != 't')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_ADDRESS'] == 'R') | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'i') | (supplier['S_NATIONKEY'] != 16)][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] != 'y') | (supplier['S_NATIONKEY'] >= 6)].merge(nation[(nation['N_COMMENT'] != 'c') & (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 23) & (nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] >= 0) | (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_NATIONKEY'] != 4) | (nation['N_NATIONKEY'] < 19)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 6791.540438260141) & (supplier['S_ADDRESS'].str.startswith('f')) | (supplier['S_SUPPKEY'] < 142)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 6814.502839306534) & (supplier['S_SUPPKEY'] >= 112) & (supplier['S_PHONE'] == '28-')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 3) | (nation['N_COMMENT'] == 'n')].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_ACCTBAL'] < 9475.931959181451)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 7706.847695281261) & (supplier['S_ADDRESS'].str.startswith('6')) & (supplier['S_NATIONKEY'] != 0) | (supplier['S_ACCTBAL'] <= 6968.411314249743) | (supplier['S_ACCTBAL'] < 6572.066247810658) & (supplier['S_COMMENT'] != 'b')].merge(nation[(nation['N_COMMENT'] != 'e') | (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] >= 18)].merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 2779.58879572396) | (supplier['S_SUPPKEY'] >= 70) & (supplier['S_SUPPKEY'] < 87) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('h'))][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('r'))].merge(nation[(nation['N_NATIONKEY'] == 19) & (nation['N_NAME'] == 'K') | (nation['N_NATIONKEY'] < 15) & (nation['N_COMMENT'].str.startswith('o'))].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'l') | (supplier['S_NATIONKEY'] != 16) & (supplier['S_COMMENT'] != 'i') & (supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 9) & (supplier['S_NATIONKEY'] == 21)].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 't') | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_ACCTBAL'] <= 4883.2803003240115) & (supplier['S_NAME'] != 'S')][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] != 'M') & (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'the') & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] >= 8) & (supplier['S_NATIONKEY'] > 22) | (supplier['S_ACCTBAL'] > -211.80019580502665)].merge(nation[(nation['N_NATIONKEY'] < 20)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] == 'al ') | (supplier['S_PHONE'] == '1') & (supplier['S_COMMENT'] != 'i') & (supplier['S_ADDRESS'] != '4') | (supplier['S_ACCTBAL'] >= 2108.3656068577957) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '17-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'e') | (supplier['S_SUPPKEY'] > 143) & (supplier['S_ADDRESS'] == 'S') & (supplier['S_ACCTBAL'] < 9231.849812466067)].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'].str.startswith('E'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_SUPPKEY'] == 26) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 't')][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('a')) | (nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] != 1) | (nation['N_NATIONKEY'] >= 9)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '3') | (supplier['S_NAME'] != 'S')][['S_NAME', 'S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] != 4)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 3) & (supplier['S_ACCTBAL'] != 1545.9881289426396) & (supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] > 3151.614501124912)].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] <= 5)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] != 48.62465445091243) & (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_SUPPKEY'] > 168) | (supplier['S_PHONE'] == '17-')].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] != 2) & (nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] >= 602.5593860907993) | (supplier['S_ADDRESS'] != 'r')].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] < 10) & (supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_NAME'] == 'M') | (nation['N_COMMENT'] == ' ') & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 7)][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] < 8) | (nation['N_NAME'] != 'R') & (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] <= 6) & (supplier['S_COMMENT'] != 'q') & (supplier['S_COMMENT'] == 'i')][['S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NATIONKEY'] < 12) & (supplier['S_SUPPKEY'] == 187) | (supplier['S_PHONE'].str.startswith('2'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) | (region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] <= 52) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'a')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] != 104) & (supplier['S_ADDRESS'] == 'B') & (supplier['S_ADDRESS'] == 'N')][['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] < 1468.4024878255034) | (supplier['S_NATIONKEY'] <= 17) & (supplier['S_ADDRESS'] != 'p') & (supplier['S_SUPPKEY'] == 117)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] == '1') | (supplier['S_COMMENT'] == 'u') | (supplier['S_PHONE'] == '32-') & (supplier['S_ADDRESS'].str.startswith('a')) & (supplier['S_ADDRESS'].str.startswith('3'))].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 33) & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 2337.4960014168437) & (supplier['S_PHONE'] == '28-') | (supplier['S_SUPPKEY'] == 166) | (supplier['S_ACCTBAL'] > 6291.21762486172)].merge(nation[(nation['N_REGIONKEY'] > 0)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] < 77) & (supplier['S_ACCTBAL'] != -470.3397329753771) | (supplier['S_NATIONKEY'] != 10) & (supplier['S_COMMENT'].str.startswith('k')) & (supplier['S_ADDRESS'] != 'I') | (supplier['S_ADDRESS'].str.startswith('d')) | (supplier['S_COMMENT'] != 'a')][['S_ACCTBAL', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 15) | (nation['N_COMMENT'].str.startswith('t')) | (nation['N_NATIONKEY'] != 2)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] == 49) & (supplier['S_NATIONKEY'] != 18) | (supplier['S_PHONE'] != '1') | (supplier['S_COMMENT'] == 'o') & (supplier['S_ACCTBAL'] > 5834.443485049809) & (supplier['S_NATIONKEY'] == 1) & (supplier['S_SUPPKEY'] < 158)].merge(nation[(nation['N_NATIONKEY'] == 3) | (nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] < 4) & (nation['N_NAME'].str.startswith('K'))][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] >= 1)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] <= 16) & (nation['N_NATIONKEY'] == 0) & (nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'] == 'h')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

supplier[['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'] != 'E') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 10)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 18) & (nation['N_NAME'] != 'F') & (nation['N_NAME'] != 'A')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] != 0) & (nation['N_REGIONKEY'] >= 3)].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_NAME'].str.startswith('R')) | (nation['N_NAME'] != 'C')].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] >= 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_NATIONKEY'] <= 20) & (nation['N_NATIONKEY'] <= 8) & (nation['N_NAME'].str.startswith('P'))].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[['S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_NAME'].str.startswith('V')) | (nation['N_NAME'] != 'B')].merge(region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NAME'] == 'R') & (nation['N_REGIONKEY'] < 3)].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NAME'].str.startswith('A')) | (nation['N_NATIONKEY'] <= 5) | (nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != 'Y') & (customer['C_ACCTBAL'] <= 6159.735797623888) & (customer['C_COMMENT'] != 'o') | (customer['C_NATIONKEY'] != 16)].merge(nation[(nation['N_NATIONKEY'] > 5) & (nation['N_NATIONKEY'] < 20) | (nation['N_NAME'] == 'U')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('T')) & (customer['C_ACCTBAL'] > 2568.597545104099) | (customer['C_CUSTKEY'] <= 30) | (customer['MKTSEGMENT'] != 'BUILDING')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('U')) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_COMMENT'] == 'r') | (customer['C_CUSTKEY'] < 84)][['C_NAME', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] > 16)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'd') | (customer['C_NATIONKEY'] < 7) & (customer['C_ACCTBAL'] <= 9809.849415309367) | (customer['C_ADDRESS'] != 'p') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('27-'))].merge(nation[(nation['N_NAME'].str.startswith('B')) | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] > 5)].merge(region[(region['R_NAME'] == 'A') & (region['R_REGIONKEY'] < 3) & (region['R_NAME'].str.startswith('M'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'd') | (customer['MKTSEGMENT'].isin(['FURNITURE'])) | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_COMMENT'].str.startswith('g')) & (customer['C_ACCTBAL'] >= 6992.13189370989)].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] == 17) | (nation['N_NATIONKEY'] != 11)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 's') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_COMMENT'] != 's')][['C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 19) & (nation['N_COMMENT'] != 'l') & (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 22) & (customer['C_NATIONKEY'] >= 10) & (customer['C_ADDRESS'] != '7') | (customer['C_ADDRESS'] != 'h') | (customer['C_NATIONKEY'] == 10) | (customer['C_PHONE'] != '13-') | (customer['C_ACCTBAL'] > 1988.7181459930293) | (customer['C_COMMENT'] != 's')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 85) & (customer['C_CUSTKEY'] < 5) | (customer['C_ADDRESS'] != 'o') & (customer['C_CUSTKEY'] != 16) | (customer['C_CUSTKEY'] <= 17) | (customer['C_ACCTBAL'] <= 2207.2085940644906) | (customer['C_PHONE'] != '2') | (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == 3839.2545280646927) | (customer['C_CUSTKEY'] == 58) | (customer['C_NATIONKEY'] < 15) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != ' ')][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'v')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] != 19) | (customer['MKTSEGMENT'] != 'BUILDING')][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] < 12) & (customer['C_NATIONKEY'] <= 18) | (customer['C_NATIONKEY'] >= 22) | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == 5866.684267753673) | (customer['C_PHONE'].str.startswith('2')) | (customer['C_COMMENT'].str.startswith('q')) | (customer['C_PHONE'].str.startswith('22-'))][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].groupby(by=['MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 8) | (customer['C_PHONE'] != '13-') | (customer['C_CUSTKEY'] == 4) & (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'I') | (customer['C_NATIONKEY'] > 16)].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] < 11) & (nation['N_NAME'] != 'B')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'].str.startswith('AME')) & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] >= 4) | (customer['C_COMMENT'].str.startswith('q')) & (customer['C_CUSTKEY'] < 23) & (customer['C_ACCTBAL'] >= 3608.856690673725) | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-') & (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '13-') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('z')) & (customer['C_CUSTKEY'] == 24)][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '27-') & (customer['C_PHONE'].str.startswith('1')) & (customer['C_ACCTBAL'] != 6542.939745193951) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('n'))][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('1')) | (customer['C_COMMENT'].str.startswith('o'))].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] <= 23) & (nation['N_COMMENT'] == 't') & (nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_COMMENT'] == 'l') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] != 67.1938059448513) | (customer['C_NATIONKEY'] != 6)][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] <= 13) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'c') | (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING']))][['C_PHONE', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'MACHINERY', 'BUILDING'])) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] == 68) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD']))].merge(nation[(nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] <= 1) | (nation['N_NAME'] == 'C')].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

customer[['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'] == 's')].merge(region[(region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'n') | (nation['N_NAME'] != 'U') & (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'].str.startswith('A'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] != 'J')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM'])) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'P') & (orders['CLERK'] == 'C')].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'].str.startswith('e'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_ORDERKEY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] >= 69) | (customer['C_ACCTBAL'] > 2152.935467965366) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_CUSTKEY'] == 62) | (customer['C_COMMENT'].str.startswith('w'))].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 29) | (partsupp['P_COMMENT'] != 'e')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'MFGR', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'MFGR', 'BRAND', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] < 5908) & (partsupp['PS_PARTKEY'] >= 42) | (partsupp['AVAILQTY'] > 171) & (partsupp['PS_PARTKEY'] >= 36) & (partsupp['SUPPLYCOST'] == 833.978324369687)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6311) & (partsupp['PS_SUPPKEY'] < 4523) | (partsupp['AVAILQTY'] == 1516)].merge(supplier[(supplier['S_ACCTBAL'] <= 7151.896543692906)][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] != '28-') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] > 3445.2467208397193)][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT', 'S_NAME']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] > 11) | (supplier['S_COMMENT'] != 'h') & (supplier['S_COMMENT'] != 'h') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('17-'))][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 23) | (nation['N_NAME'] != 'E') & (nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] < 1)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#25', 'Brand#21', 'Brand#14', 'Brand#13', 'Brand#11', 'Brand#51', 'Brand#55', 'Brand#15', 'Brand#24', 'Brand#54', 'Brand#53', 'Brand#52', 'Brand#42', 'Brand#23', 'Brand#34', 'Brand#41', 'Brand#35', 'Brand#33', 'Brand#45', 'Brand#32'])) & (part['RETAILPRICE'] < 1037.1834969481683) | (part['SIZE'] > 27)][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['DISCOUNT'] == 0.0846529730777264) | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPMODE'].isin(['MAIL', 'AIR', 'TRUCK', 'SHIP'])) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['L_SUPPKEY'] <= 1768) | (lineitem['EXTENDEDPRICE'] <= 37861.305334615674)].merge(orders[['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['DISCOUNT'] > 0.003105053704245442) | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['LINENUMBER'] >= 3) & (lineitem['EXTENDEDPRICE'] < 20252.143201047464) | (lineitem['TAX'] >= 0.06496672689228392) & (lineitem['TAX'] == 0.007692719805412028)].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 2)][['L_PARTKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'COMMITDATE', 'SHIPMODE']].merge(partsupp[(partsupp['P_COMMENT'] == ';') & (partsupp['PS_SUPPKEY'] >= 3835) | (partsupp['SUPPLYCOST'] <= 592.8723799291588)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'q') | (lineitem['DISCOUNT'] >= 0.029453056958726166) & (lineitem['L_COMMENT'].str.startswith('d')) & (lineitem['LINENUMBER'] == 1)].merge(partsupp[(partsupp['AVAILQTY'] <= 3603) & (partsupp['AVAILQTY'] <= 1788)].merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'o') | (lineitem['L_SUPPKEY'] >= 368) & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['COMMITDATE'] < '1992-05-15')][['SHIPDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'QUANTITY']].merge(orders[['O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 26823) | (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['DISCOUNT'] != 0.005476043028254319)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 32) | (partsupp['PS_PARTKEY'] >= 11)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'MFGR']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 32738) | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_SUPPKEY'] > 7220) | (lineitem['L_SUPPKEY'] < 9860)][['SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'COMMITDATE', 'L_ORDERKEY', 'RECEIPTDATE']].merge(orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['DISCOUNT'] != 0.05286900850436314) & (lineitem['TAX'] == 0.04789954176978866) | (lineitem['TAX'] == 0.06766995223463802) & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N']))].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] >= 6126.871436982914) | (supplier['S_ACCTBAL'] != 3053.5076733131255) & (supplier['S_SUPPKEY'] <= 98)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['RECEIPTDATE'] != '1998-11-06')].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_ADDRESS'].str.startswith('p')) & (supplier['S_NATIONKEY'] == 20) | (supplier['S_NATIONKEY'] <= 11)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['SHIPMODE'] == 'AIR') & (lineitem['EXTENDEDPRICE'] < 84268.48666776837) | (lineitem['DISCOUNT'] <= 0.033064119864713706) & (lineitem['SHIPMODE'] != 'TRUCK')][['EXTENDEDPRICE', 'DISCOUNT', 'TAX', 'LINESTATUS', 'L_COMMENT', 'QUANTITY', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5013) & (partsupp['PS_SUPPKEY'] == 4248) | (partsupp['SUPPLYCOST'] != 252.23894592546347) | (partsupp['P_COMMENT'] != 't') & (partsupp['P_COMMENT'] == ';')], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] == 'RAIL') & (lineitem['RETURNFLAG'] == 'R') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N']))][['DISCOUNT', 'LINESTATUS', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'L_COMMENT', 'TAX', 'COMMITDATE', 'SHIPDATE', 'RETURNFLAG']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] <= 0.060630853161280744) | (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_COMMENT'] == 'h') & (lineitem['EXTENDEDPRICE'] <= 13429.971967911462) & (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'RAIL', 'AIR', 'SHIP', 'MAIL', 'REG AIR'])) & (lineitem['L_ORDERKEY'] > 40)].merge(partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('a')) & (nation['N_NAME'] != 'C')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] > 0.048691569991421935)][['SHIPDATE', 'L_PARTKEY', 'LINESTATUS', 'RETURNFLAG']].merge(partsupp.merge(part[(part['BRAND'] == 'Brand#12') & (part['P_NAME'] == 'f') & (part['P_NAME'] == 'r')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE', 'SIZE']).agg('count')

lineitem[['COMMITDATE', 'L_COMMENT', 'SHIPDATE', 'L_PARTKEY', 'RECEIPTDATE', 'TAX', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[(partsupp['SUPPLYCOST'] != 418.04577400353224) | (partsupp['SUPPLYCOST'] <= 649.8815178559524)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'L_SUPPKEY', 'L_COMMENT', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 6083)].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'TAX', 'RETURNFLAG', 'SHIPMODE', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 17) | (partsupp['PS_SUPPKEY'] != 5675)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'EXTENDEDPRICE', 'DISCOUNT', 'LINESTATUS', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] != 5129) & (partsupp['P_COMMENT'] == 'a') & (partsupp['PS_PARTKEY'] > 24)].merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPMODE']].merge(orders[(orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] > 108676) & (orders['O_ORDERKEY'] < 505) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] <= 0)][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'ORDERDATE']).agg('count')

nation[(nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] != 4) | (nation['N_NATIONKEY'] < 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 4) & (nation['N_REGIONKEY'] == 0) & (nation['N_NATIONKEY'] <= 13) & (nation['N_NATIONKEY'] > 10)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] != 'AME')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

orders.merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] == 8765.358144061653) | (customer['C_ADDRESS'] == 'x') | (customer['C_COMMENT'].str.startswith('d')) | (customer['C_PHONE'].str.startswith('25-'))].merge(nation[(nation['N_COMMENT'] == 'i')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_ADDRESS'] == 'n') | (customer['C_ADDRESS'] == 'p') | (customer['C_ADDRESS'].str.startswith('Y')) | (customer['C_CUSTKEY'] < 30) | (customer['C_COMMENT'].str.startswith('k'))].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] != 'w') | (customer['C_NATIONKEY'] == 14)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] > 0)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] <= 59) | (customer['C_ACCTBAL'] < 9208.516455374665) | (customer['C_ADDRESS'].str.startswith('s')) | (customer['C_ADDRESS'] != 'o') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] <= 1997.1329508116578)].merge(nation[(nation['N_NATIONKEY'] == 15) & (nation['N_NAME'] != 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == 'U') | (customer['C_NATIONKEY'] < 0) & (customer['C_CUSTKEY'] >= 49) & (customer['C_ADDRESS'].str.startswith('s'))][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] >= 277) & (orders['O_COMMENT'].str.startswith(' re')) | (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_CUSTKEY'] >= 136553) | (orders['O_CUSTKEY'] == 66916) | (orders['ORDERDATE'] < '1992-01-13') & (orders['O_CUSTKEY'] != 131898) & (orders['ORDERPRIORITY'] != '1-URGENT')].merge(customer.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 121245.38884437701) | (orders['O_ORDERKEY'] < 126) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_NATIONKEY'] >= 18) & (customer['C_COMMENT'].str.startswith('n')) | (customer['C_ADDRESS'] != 'Q') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'].str.startswith('3')) | (customer['C_PHONE'] == '27-') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'BUILDING'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'].str.startswith('z'))].merge(customer[(customer['C_CUSTKEY'] >= 71) | (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 8) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_COMMENT'].str.startswith('k')) & (customer['C_COMMENT'] == 'c')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_COMMENT'].str.startswith('egu')) & (orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] > 254460.06295790363)].merge(customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_PHONE']).agg('count')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] >= 73489) | (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].groupby(by=['ORDERSTATUS', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21')][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['TOTALPRICE'] == 11128.261584764256) & (orders['ORDERPRIORITY'] == '1-URGENT')][['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_COMMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] == 'y') & (orders['O_CUSTKEY'] == 68541) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('y'))][['O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '1-URGENT') | (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['O_CUSTKEY'] == 17212) & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_COMMENT'].str.startswith('d')) | (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] < 83272)].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM')][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] >= 22) | (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'] == 'U') & (customer['C_PHONE'] == '27-') & (customer['C_CUSTKEY'] == 71) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'] != 'u')][['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] < 32709) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'] != 'C')].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 131202)].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 9) | (nation['N_NATIONKEY'] == 18) | (nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] != 'C')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] >= 112592) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERPRIORITY'].isin(['2-HIGH'])) & (orders['TOTALPRICE'] >= 83552.64580021583) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C')][['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 120) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['TOTALPRICE'] <= 300707.99429062486) & (orders['O_ORDERKEY'] <= 734)].merge(customer.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 'l') & (nation['N_COMMENT'] != 'h')].merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 694) | (orders['ORDERSTATUS'] == 'F')].merge(customer[(customer['C_NATIONKEY'] == 3) | (customer['C_PHONE'] != '3') & (customer['C_ADDRESS'] == 'u') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] == 'l') & (customer['C_ACCTBAL'] != 7515.926069007943) | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'h')][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']).agg('count')

orders[(orders['O_ORDERKEY'] == 9) & (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERSTATUS'] == 'P') | (orders['O_COMMENT'] == 'i') & (orders['O_ORDERKEY'] == 494) & (orders['TOTALPRICE'] >= 262733.71408110246)][['SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 103337.69563595398)][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_PHONE']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] == 'P') | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_NATIONKEY'] > 21) | (customer['C_CUSTKEY'] == 43) | (customer['C_PHONE'] == '3') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NATIONKEY'] >= 18)][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NAME'] != 'B')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] != 3) | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 13) & (customer['C_NATIONKEY'] < 0) | (customer['C_ACCTBAL'] == 4748.114418920069)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'] == 'P') & (customer['C_ACCTBAL'] == 8437.614263441448) | (customer['C_COMMENT'] != 'r') | (customer['C_ADDRESS'] != 'w') & (customer['C_COMMENT'].str.startswith('e')) | (customer['C_ADDRESS'] != 'X') & (customer['C_CUSTKEY'] <= 15)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'] == 'Manufacturer#2') | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2', 'Manufacturer#3'])) & (part['P_PARTKEY'] < 129) & (part['P_NAME'].str.startswith('cor')) | (part['P_NAME'].str.startswith('lin')) | (part['SIZE'] > 33)][['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']].groupby(by=['SIZE', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'P_NAME']).agg('count')

part[(part['PT_COMMENT'] == 'the') & (part['MFGR'] == 'Manufacturer#5') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) & (part['P_PARTKEY'] <= 44) | (part['PT_COMMENT'] == 't') | (part['P_PARTKEY'] == 111) | (part['TYPE'] == 'E') | (part['P_PARTKEY'] == 57)][['P_NAME', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'BRAND']].groupby(by=['SIZE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'TYPE']).agg('count')

part[(part['PT_COMMENT'].str.startswith('r')) | (part['PT_COMMENT'].str.startswith('y')) & (part['MFGR'] != 'Manufacturer#3') & (part['PT_COMMENT'] != 'k') | (part['RETAILPRICE'] >= 1000.180152367478) | (part['TYPE'].str.startswith('STA')) & (part['MFGR'] != 'Manufacturer#1') | (part['BRAND'] == 'Brand#23') & (part['BRAND'] != 'Brand#32')][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'SIZE']].groupby(by=['SIZE', 'P_PARTKEY', 'P_NAME', 'TYPE']).agg('max', numeric_only=True)

partsupp.merge(part[(part['CONTAINER'] != 'MED') & (part['TYPE'] == 'STA') | (part['SIZE'] != 25) | (part['BRAND'].isin(['Brand#43', 'Brand#24', 'Brand#13', 'Brand#25', 'Brand#42', 'Brand#34', 'Brand#33', 'Brand#44', 'Brand#22', 'Brand#21', 'Brand#41', 'Brand#35', 'Brand#55', 'Brand#23', 'Brand#14'])) | (part['PT_COMMENT'] != 'the') & (part['RETAILPRICE'] < 1024.5339209491697) & (part['CONTAINER'].str.startswith('SM'))][['MFGR', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 654.5553826987259) & (supplier['S_SUPPKEY'] > 82) | (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_COMMENT'].str.startswith(' sl'))].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_COMMENT'] != 'a') | (nation['N_NAME'] != 'G') & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'y') | (supplier['S_COMMENT'].str.startswith('j'))][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] <= 15) | (nation['N_NATIONKEY'] >= 9)].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 8275)].merge(part[(part['MFGR'].isin(['Manufacturer#2'])) & (part['RETAILPRICE'] != 1082.298289387435) | (part['P_PARTKEY'] <= 74) & (part['SIZE'] == 31) | (part['TYPE'].str.startswith('STA'))][['CONTAINER', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 1668)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'i') | (part['CONTAINER'].str.startswith('WRAP')) & (part['MFGR'] != 'Manufacturer#2') & (part['BRAND'].isin(['Brand#22', 'Brand#52', 'Brand#11', 'Brand#45', 'Brand#13', 'Brand#12', 'Brand#34', 'Brand#31', 'Brand#33', 'Brand#14', 'Brand#21', 'Brand#51', 'Brand#23', 'Brand#32', 'Brand#53', 'Brand#35', 'Brand#54', 'Brand#44', 'Brand#24', 'Brand#43', 'Brand#42', 'Brand#25', 'Brand#41', 'Brand#15', 'Brand#55'])) | (part['MFGR'] != 'Manufacturer#1') & (part['TYPE'] != 'S') & (part['MFGR'] == 'Manufacturer#2') & (part['SIZE'] == 36) | (part['P_NAME'].str.startswith('b'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 38) | (partsupp['PS_SUPPKEY'] >= 3906) | (partsupp['PS_PARTKEY'] != 1)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S'))][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 47) & (partsupp['PS_PARTKEY'] >= 34)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'k') | (part['BRAND'].isin(['Brand#23', 'Brand#55', 'Brand#41', 'Brand#22', 'Brand#14', 'Brand#52', 'Brand#13', 'Brand#42', 'Brand#11', 'Brand#21', 'Brand#33', 'Brand#24', 'Brand#12', 'Brand#51'])) & (part['P_PARTKEY'] > 143) & (part['SIZE'] < 29) | (part['TYPE'] == 'L') & (part['TYPE'] != 'L') | (part['SIZE'] < 16)][['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 4)][['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NAME'].str.startswith('E')) & (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 31)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 5023) | (partsupp['PS_PARTKEY'] < 13) & (partsupp['PS_SUPPKEY'] >= 3246) & (partsupp['AVAILQTY'] == 5588)].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] >= 1)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 1699) | (partsupp['PS_SUPPKEY'] > 889) & (partsupp['SUPPLYCOST'] == 772.9053232035169) | (partsupp['PS_PARTKEY'] <= 27) & (partsupp['PS_SUPPKEY'] <= 1227)].merge(supplier[(supplier['S_COMMENT'] == 'n') & (supplier['S_NATIONKEY'] == 12) & (supplier['S_COMMENT'] == 'f')][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 1070) | (partsupp['SUPPLYCOST'] > 362.0112601714342) & (partsupp['PS_PARTKEY'] >= 44) | (partsupp['PS_PARTKEY'] <= 20)][['PS_PARTKEY']].merge(part[['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5082) & (partsupp['P_COMMENT'] == 'd') | (partsupp['SUPPLYCOST'] <= 931.448743738907) | (partsupp['PS_PARTKEY'] != 43)].merge(part[(part['MFGR'] == 'Manufacturer#2') & (part['TYPE'] == 'L') & (part['MFGR'] != 'Manufacturer#1') | (part['SIZE'] >= 32) & (part['MFGR'] != 'Manufacturer#3') & (part['RETAILPRICE'] >= 1027.4485027613339) & (part['MFGR'] == 'Manufacturer#4')][['CONTAINER', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['P_COMMENT'] != ';') & (partsupp['PS_PARTKEY'] <= 9) & (partsupp['PS_SUPPKEY'] != 4833) & (partsupp['PS_PARTKEY'] > 24)].merge(supplier[(supplier['S_COMMENT'].str.startswith('bli')) & (supplier['S_ADDRESS'] != 'F')].merge(nation[(nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'] == ' ') & (nation['N_COMMENT'] == 'v')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'q') | (partsupp['AVAILQTY'] >= 9196) & (partsupp['SUPPLYCOST'] <= 953.3712585409298) & (partsupp['P_COMMENT'].str.startswith('h'))].merge(supplier[(supplier['S_ADDRESS'] != 'P') | (supplier['S_SUPPKEY'] > 199) & (supplier['S_ADDRESS'] != 'r') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] == 'i') | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[(nation['N_COMMENT'] == 'y')].merge(region[(region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'r') & (partsupp['PS_SUPPKEY'] >= 1743) & (partsupp['PS_PARTKEY'] > 37)][['PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'r') | (partsupp['P_COMMENT'] != 'bli')][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['P_COMMENT'] != 'x') & (partsupp['P_COMMENT'] != ' th') | (partsupp['AVAILQTY'] < 510) | (partsupp['SUPPLYCOST'] > 264.3830507496487)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(part[['P_PARTKEY', 'CONTAINER', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 649.8245504732269) & (partsupp['PS_PARTKEY'] == 11) | (partsupp['PS_PARTKEY'] < 26) & (partsupp['AVAILQTY'] != 9410) | (partsupp['AVAILQTY'] >= 2624)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] <= 272.49381382363254) | (partsupp['AVAILQTY'] <= 1740) & (partsupp['PS_PARTKEY'] <= 8)].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'c')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 567.3481469680024) & (partsupp['PS_SUPPKEY'] < 5311) & (partsupp['PS_PARTKEY'] == 27) & (partsupp['P_COMMENT'] == 'g')].merge(part[(part['P_NAME'] == 'p') & (part['P_PARTKEY'] >= 96) | (part['SIZE'] <= 27)][['CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'TYPE', 'PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] > 791.3633140419048)].merge(part[(part['P_PARTKEY'] < 89) & (part['P_PARTKEY'] == 64) | (part['PT_COMMENT'] == 'r') | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1'])) & (part['MFGR'] != 'Manufacturer#4') | (part['BRAND'] != 'Brand#22') & (part['PT_COMMENT'] != 's')][['MFGR', 'TYPE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'MFGR', 'TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 443.17011230545717) | (partsupp['PS_PARTKEY'] == 13) | (partsupp['SUPPLYCOST'] >= 534.2406367726296) & (partsupp['PS_PARTKEY'] != 28) | (partsupp['P_COMMENT'] != 'a')].merge(part[(part['SIZE'] != 15) & (part['RETAILPRICE'] < 1065.479309439946)][['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'SIZE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 't') & (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] < 0)].merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'] != 'l') & (region['R_NAME'] != 'ASI')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] < 5)][['S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#23', 'Brand#12', 'Brand#54', 'Brand#25', 'Brand#21', 'Brand#42', 'Brand#33', 'Brand#24', 'Brand#32', 'Brand#22', 'Brand#43', 'Brand#31', 'Brand#45', 'Brand#55', 'Brand#44', 'Brand#11', 'Brand#15', 'Brand#53', 'Brand#14', 'Brand#35', 'Brand#51', 'Brand#41', 'Brand#34'])) | (part['BRAND'] == 'Brand#24') & (part['RETAILPRICE'] != 1080.6785947462097)][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 6) | (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_PHONE'] == '3') | (supplier['S_COMMENT'] == 'w') | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_NAME'] != 'S') & (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] > 23)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 5166.0097979564825) & (supplier['S_ACCTBAL'] >= 3976.374753668063) | (supplier['S_SUPPKEY'] < 93)][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

supplier.merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] < 6)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] != 2370.364471209079) | (supplier['S_ACCTBAL'] < 9058.32301973102) & (supplier['S_NATIONKEY'] > 19) & (supplier['S_ADDRESS'] != '8')][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_NATIONKEY'] > 17) & (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] < 3)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] != 5096.318366352672) & (supplier['S_ACCTBAL'] >= 5893.643444824883) & (supplier['S_COMMENT'] != 'es ') | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_PHONE'] == '1')][['S_ACCTBAL', 'S_COMMENT', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_REGIONKEY'] == 1)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] < 4810.252978010909) | (supplier['S_SUPPKEY'] <= 17) | (supplier['S_COMMENT'].str.startswith('c')) & (supplier['S_NATIONKEY'] == 5) | (supplier['S_ADDRESS'] != 'r')][['S_NAME', 'S_NATIONKEY', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'].str.startswith('F')) | (nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'].str.startswith('p'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_ACCTBAL'] <= 4030.3590540877585) & (supplier['S_COMMENT'] == 'o') | (supplier['S_NATIONKEY'] <= 9) & (supplier['S_NATIONKEY'] == 23) & (supplier['S_COMMENT'] != 'i')].merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] < 11)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] <= 7629.902498065026) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] != 56) & (supplier['S_NATIONKEY'] > 14) | (supplier['S_PHONE'] != '14-') | (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_COMMENT'].str.startswith('u'))].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_NATIONKEY'] < 20) & (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] == 8831.307934402495)][['S_PHONE', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ACCTBAL'] > 1524.0784407827202) & (supplier['S_ADDRESS'] == 'T')].merge(nation[(nation['N_COMMENT'].str.startswith('s'))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'z') & (supplier['S_NATIONKEY'] > 15) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] == 9010.746944867904) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_PHONE'] == '2') | (supplier['S_PHONE'] == '28-')][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('F')) & (supplier['S_SUPPKEY'] != 107) & (supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_NATIONKEY'] == 13) & (supplier['S_COMMENT'] == 'n')][['S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'y') | (nation['N_NATIONKEY'] < 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('V'))][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('o')) & (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('i')) & (supplier['S_ACCTBAL'] != 2336.2063924154454) & (supplier['S_ACCTBAL'] <= -190.44293762015207) | (supplier['S_SUPPKEY'] > 89)].merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] == 16) & (nation['N_NATIONKEY'] >= 10) | (nation['N_REGIONKEY'] <= 3)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'c') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('h')) & (supplier['S_COMMENT'] != 'the') & (supplier['S_COMMENT'].str.startswith('es ')) & (supplier['S_PHONE'] != '2')].merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] != 'es ') | (supplier['S_COMMENT'].str.startswith('b')) | (supplier['S_NATIONKEY'] == 23) & (supplier['S_NATIONKEY'] > 20) & (supplier['S_COMMENT'] != 'u')].merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 't') & (nation['N_NAME'] != 'C')][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_REGIONKEY'] < 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] != 'j') | (supplier['S_COMMENT'] != 'f') | (supplier['S_NATIONKEY'] > 19) & (supplier['S_SUPPKEY'] >= 83) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'].str.startswith('0'))].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'g') & (supplier['S_ACCTBAL'] >= 7863.182468386615) | (supplier['S_SUPPKEY'] == 58) & (supplier['S_PHONE'] != '14-') & (supplier['S_ACCTBAL'] > 4979.131116506394)].merge(nation[(nation['N_NATIONKEY'] >= 22) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'l') & (supplier['S_ACCTBAL'] <= 6638.561395275361) | (supplier['S_NATIONKEY'] != 12) & (supplier['S_NAME'] != 'S')][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 21)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 'r') | (supplier['S_ADDRESS'] != 'G') | (supplier['S_ACCTBAL'] >= 1352.6600862138991) | (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] < -123.87386051493672) & (supplier['S_SUPPKEY'] != 53) & (supplier['S_PHONE'] == '28-')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'].str.startswith('v')) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ACCTBAL'] >= 3743.912381378702) | (supplier['S_ACCTBAL'] < 9729.734761288157) | (supplier['S_ACCTBAL'] == 9753.64262148071) | (supplier['S_COMMENT'] == 'k') | (supplier['S_ADDRESS'] == 'b')][['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_NATIONKEY'] != 21)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 5104.065149980761) & (supplier['S_PHONE'] == '26-') | (supplier['S_ACCTBAL'] < 7214.616361050666) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] > 17)].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_NAME'] == 'P')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_ACCTBAL'] == -432.09879948138484) | (supplier['S_ACCTBAL'] == 9519.994769493722)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'] != 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 50) | (supplier['S_COMMENT'] != 'b') | (supplier['S_ADDRESS'].str.startswith('p')) & (supplier['S_NATIONKEY'] < 5) | (supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_SUPPKEY'] != 144)][['S_COMMENT', 'S_NATIONKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 13)].merge(region[(region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'].str.startswith('w')) & (supplier['S_ACCTBAL'] <= 414.7396118088186) & (supplier['S_SUPPKEY'] >= 82) & (supplier['S_ADDRESS'] != 'd') | (supplier['S_NATIONKEY'] < 3)][['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] != 19) & (supplier['S_SUPPKEY'] >= 154) & (supplier['S_NATIONKEY'] == 0) & (supplier['S_PHONE'].str.startswith('32-'))].merge(nation[(nation['N_NATIONKEY'] >= 19)].merge(region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 14) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == ' sl') | (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('C'))].merge(nation[(nation['N_NAME'].str.startswith('I')) & (nation['N_NATIONKEY'] == 5)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 17) & (supplier['S_ADDRESS'].str.startswith('3')) & (supplier['S_NATIONKEY'] != 7) & (supplier['S_ACCTBAL'] != 125.49905938136067)].merge(nation[(nation['N_NATIONKEY'] <= 20) | (nation['N_NATIONKEY'] > 5)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 19) | (supplier['S_ACCTBAL'] >= 5930.564897142948) | (supplier['S_NATIONKEY'] != 10) | (supplier['S_ADDRESS'].str.startswith('y'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 13) | (supplier['S_COMMENT'] == ' ')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('count')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_NATIONKEY'] == 2) | (supplier['S_PHONE'] != '14-') | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NATIONKEY'] < 20)][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('14-'))][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'J') & (nation['N_NATIONKEY'] < 10) | (nation['N_NAME'] != 'J')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier[['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] != 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer.merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] != 'n') & (nation['N_NAME'] == 'U') | (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == ',') & (customer['C_NATIONKEY'] < 14) | (customer['C_ADDRESS'].str.startswith('6')) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'F') & (nation['N_NAME'].str.startswith('G'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'c') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY']))].merge(nation[(nation['N_REGIONKEY'] <= 2) & (nation['N_NAME'].str.startswith('F')) & (nation['N_COMMENT'] != 'u')].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_COMMENT'] != 'q') | (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] >= 0) & (customer['C_ADDRESS'] != 'u') & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 21)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 29) & (customer['C_NATIONKEY'] < 11) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] <= 13) & (customer['C_NATIONKEY'] > 4) | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_NATIONKEY'] != 14) | (nation['N_NAME'] == 'I') | (nation['N_NAME'] != 'B')].merge(region[(region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] < 16) | (customer['C_PHONE'].str.startswith('13-'))].merge(nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] >= 12)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_CUSTKEY'] <= 43) | (customer['C_NATIONKEY'] == 7) | (customer['C_CUSTKEY'] != 17)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] > 67) & (customer['C_CUSTKEY'] > 78) & (customer['C_NATIONKEY'] < 1) | (customer['C_COMMENT'] == 'd') | (customer['MKTSEGMENT'] == 'BUILDING')][['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'c')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ACCTBAL'] != -315.69698042609525) & (customer['C_ACCTBAL'] != -315.58709992036245) & (customer['C_NATIONKEY'] < 14)].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] <= 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] != 'd') & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ACCTBAL'] >= 3627.5802545141387) & (customer['C_NATIONKEY'] > 13)][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'K') & (nation['N_NAME'] == 'I')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 17) | (customer['C_NATIONKEY'] < 3) & (customer['C_ADDRESS'] == 'F') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_ADDRESS'].str.startswith(',')) | (customer['C_NATIONKEY'] != 3) & (customer['C_NATIONKEY'] >= 10)].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] != 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NATIONKEY'] == 9) & (customer['C_NATIONKEY'] <= 2) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'].str.startswith('p')) | (customer['C_ACCTBAL'] >= 8252.393939209835) & (customer['C_NATIONKEY'] > 6) & (customer['C_ACCTBAL'] < 3786.0864728309007) | (customer['C_ACCTBAL'] < 19.959638197729873)].merge(nation[(nation['N_NAME'] != 'P') & (nation['N_NAME'].str.startswith('E'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_NATIONKEY'] >= 16) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] != 21) | (customer['C_CUSTKEY'] != 43) & (customer['C_ADDRESS'] != 's') | (customer['C_ACCTBAL'] > 9499.050775094787) & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_REGIONKEY'] == 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '18-') | (customer['C_ADDRESS'].str.startswith('E')) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ACCTBAL'] < 7237.599227124468) | (customer['C_ACCTBAL'] == 6499.788086409661)][['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] != 1124.1599140957353) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_COMMENT'].str.startswith('s')) | (customer['C_ACCTBAL'] <= 584.764308082147) | (customer['C_PHONE'] != '13-')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] >= 72) | (customer['C_NATIONKEY'] < 11) | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 16) & (nation['N_COMMENT'].str.startswith('t'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 0) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('y'))].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem.merge(orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] != 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_CUSTKEY'] < 4689) & (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['TOTALPRICE'] <= 275970.1935872555) | (orders['TOTALPRICE'] == 338166.7038521974) | (orders['CLERK'] == 'C')].merge(customer[(customer['C_NATIONKEY'] == 11) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 6765.243255076572) | (customer['C_COMMENT'] == 'k') & (customer['C_ACCTBAL'] > 7802.210269534062) | (customer['C_ACCTBAL'] >= 7927.015317284946) & (customer['C_ADDRESS'] == 'e') & (customer['C_PHONE'].str.startswith('13-'))].merge(nation[(nation['N_REGIONKEY'] < 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] > 80029) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_ORDERKEY'] == 261) | (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] <= 0) & (orders['O_COMMENT'] != '.')][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'].str.startswith('e')) & (customer['C_NAME'] == 'C')].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']].merge(customer[(customer['C_PHONE'] == '2') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_COMMENT'] == 'd') | (customer['C_ADDRESS'].str.startswith('Q')) & (customer['C_PHONE'] != '18-') & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith(',')) | (customer['C_CUSTKEY'] <= 3) & (customer['C_CUSTKEY'] != 34) | (customer['C_ACCTBAL'] <= 9087.515748469375) | (customer['C_CUSTKEY'] > 84)][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] != 28) | (supplier['S_SUPPKEY'] != 7) & (supplier['S_ADDRESS'].str.startswith('H')) | (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_ACCTBAL'] == 3324.27714053389) | (supplier['S_NATIONKEY'] >= 1)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'S')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 167) & (partsupp['PS_SUPPKEY'] > 7164) | (partsupp['PS_SUPPKEY'] != 1226)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#53'])) | (part['P_NAME'].str.startswith('d')) | (part['TYPE'].str.startswith('S')) | (part['BRAND'].isin(['Brand#44', 'Brand#21', 'Brand#41', 'Brand#15', 'Brand#14', 'Brand#32', 'Brand#31', 'Brand#24', 'Brand#55', 'Brand#53', 'Brand#45', 'Brand#12', 'Brand#33', 'Brand#43', 'Brand#35', 'Brand#34', 'Brand#13', 'Brand#52', 'Brand#22', 'Brand#51', 'Brand#42'])) | (part['PT_COMMENT'].str.startswith('x')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#5'])) | (part['SIZE'] != 28)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 42) | (partsupp['PS_PARTKEY'] < 44) & (partsupp['PS_SUPPKEY'] >= 1498)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'd') | (part['BRAND'].isin(['Brand#24', 'Brand#33', 'Brand#31', 'Brand#21', 'Brand#22', 'Brand#41', 'Brand#45', 'Brand#43', 'Brand#34', 'Brand#44', 'Brand#13', 'Brand#42', 'Brand#53', 'Brand#23', 'Brand#54', 'Brand#25', 'Brand#51', 'Brand#14'])) | (part['PT_COMMENT'] == 'the') | (part['PT_COMMENT'].str.startswith('ly '))][['MFGR', 'BRAND', 'P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 6159) | (partsupp['P_COMMENT'] == 'y')][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] != 'g') & (part['BRAND'] != 'Brand#34') & (part['CONTAINER'].str.startswith('WRAP')) & (part['CONTAINER'] == 'WRAP') & (part['BRAND'] != 'Brand#23')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'SIZE', 'RETAILPRICE', 'TYPE']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'c')][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'] == 'SMA') & (part['P_NAME'].str.startswith('m')) | (part['MFGR'] != 'Manufacturer#1') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#4'])) | (part['PT_COMMENT'].str.startswith('h')) & (part['BRAND'] == 'Brand#35') | (part['BRAND'].isin(['Brand#32', 'Brand#14', 'Brand#33', 'Brand#23', 'Brand#52', 'Brand#34', 'Brand#24', 'Brand#43', 'Brand#53', 'Brand#51', 'Brand#21', 'Brand#31', 'Brand#44', 'Brand#12', 'Brand#42', 'Brand#25', 'Brand#11', 'Brand#35', 'Brand#55', 'Brand#13']))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'SIZE', 'TYPE']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1021.2322314291166) | (part['BRAND'].isin(['Brand#15', 'Brand#25', 'Brand#31', 'Brand#41', 'Brand#14', 'Brand#35', 'Brand#43'])) | (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#3'])) & (part['SIZE'] >= 7) | (part['RETAILPRICE'] != 997.860925574315)][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['COMMITDATE'] >= '1998-10-16')].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[['BRAND', 'PT_COMMENT', 'P_PARTKEY', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 16696.88693826631) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['EXTENDEDPRICE'] < 17285.10921969352) | (lineitem['QUANTITY'] == 13) | (lineitem['L_PARTKEY'] != 178558)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4064) & (partsupp['PS_PARTKEY'] >= 27) & (partsupp['AVAILQTY'] == 4364) | (partsupp['PS_PARTKEY'] != 3) | (partsupp['PS_SUPPKEY'] >= 5269)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_COMMENT']).agg('count')

lineitem[(lineitem['LINESTATUS'] != 'O') & (lineitem['DISCOUNT'] == 0.08042475086124068) | (lineitem['EXTENDEDPRICE'] < 16359.379599978232) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['QUANTITY'] != 11) & (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp[(partsupp['PS_PARTKEY'] == 13)].merge(part[(part['P_NAME'] == 'h') & (part['BRAND'] == 'Brand#55') | (part['P_PARTKEY'] != 198) & (part['SIZE'] == 34) & (part['P_NAME'] != 'c') | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'n') | (lineitem['EXTENDEDPRICE'] == 59107.275173835995) & (lineitem['L_SUPPKEY'] == 1828) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['L_SUPPKEY'] <= 2362) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD', 'NONE'])) | (lineitem['L_COMMENT'] != 'k')][['COMMITDATE', 'RETURNFLAG', 'QUANTITY', 'SHIPDATE', 'L_PARTKEY', 'EXTENDEDPRICE', 'L_SUPPKEY', 'SHIPMODE', 'LINESTATUS']].groupby(by=['SHIPMODE', 'L_PARTKEY', 'QUANTITY', 'SHIPDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] != 'n') | (lineitem['TAX'] > 0.018275849391394337)].merge(partsupp[(partsupp['AVAILQTY'] != 2391) | (partsupp['SUPPLYCOST'] != 16.149934429626526) | (partsupp['SUPPLYCOST'] == 455.1624784722408) | (partsupp['AVAILQTY'] <= 8330) | (partsupp['SUPPLYCOST'] == 553.5546310554046)].merge(part[(part['CONTAINER'] == 'LG') | (part['PT_COMMENT'] != 'h') & (part['PT_COMMENT'] == 'y') & (part['CONTAINER'].str.startswith('LG')) & (part['BRAND'] == 'Brand#55')][['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_ORDERKEY'] != 121) | (lineitem['EXTENDEDPRICE'] < 65631.2264874249)].merge(orders[['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] <= 7) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_CUSTKEY'] >= 14) | (customer['C_NATIONKEY'] == 7) | (customer['C_COMMENT'] == 'u') & (customer['C_ACCTBAL'] >= 6591.02350615479) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_ADDRESS'] != 'h')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] < 151) & (lineitem['DISCOUNT'] == 0.09678977610419581) | (lineitem['LINESTATUS'].isin(['F']))].merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] == 'P') & (orders['ORDERDATE'] < '1998-07-21')].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING'])) & (customer['C_ACCTBAL'] == 1048.797289546084)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] <= 191889) & (lineitem['L_ORDERKEY'] > 115) | (lineitem['L_PARTKEY'] == 32402) | (lineitem['DISCOUNT'] <= 0.07407133794397854) | (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['L_SUPPKEY'] <= 2200)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 47) | (partsupp['PS_SUPPKEY'] >= 5383)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['QUANTITY'] != 23)].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['P_PARTKEY'] <= 128) & (part['BRAND'] != 'Brand#35') & (part['SIZE'] < 23)][['SIZE', 'PT_COMMENT', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['L_SUPPKEY'] > 2700) | (lineitem['L_COMMENT'].str.startswith('.')) & (lineitem['L_ORDERKEY'] == 184) & (lineitem['LINENUMBER'] != 5) | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] == '1998-11-06')].merge(orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_PARTKEY'] < 15086) | (lineitem['SHIPMODE'] == 'MAIL') | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['L_SUPPKEY'] < 3866)].merge(partsupp[(partsupp['PS_PARTKEY'] != 28) | (partsupp['SUPPLYCOST'] >= 353.1960835405423) | (partsupp['SUPPLYCOST'] == 313.800172149051)].merge(part[['P_PARTKEY', 'SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD'])) & (lineitem['DISCOUNT'] >= 0.054413586773921635) & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['L_PARTKEY'] != 121673) | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['EXTENDEDPRICE'] != 43049.02666710294)][['RETURNFLAG', 'L_COMMENT', 'EXTENDEDPRICE', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 3666) & (partsupp['AVAILQTY'] >= 4092)].merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['DISCOUNT'] == 0.07256671955860763) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['DISCOUNT'] >= 0.002103633772997249) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(orders.merge(customer[(customer['C_ADDRESS'] != '9') & (customer['C_ACCTBAL'] > 9767.111970884715) & (customer['C_ACCTBAL'] == 2137.2422332689735) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'MACHINERY'])) | (customer['C_PHONE'] != '27-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL') | (lineitem['L_COMMENT'] == 's')][['COMMITDATE', 'LINENUMBER', 'LINESTATUS', 'L_SUPPKEY', 'SHIPMODE']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] != 'j')][['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.0431151413915931) & (lineitem['L_COMMENT'] != ',') & (lineitem['DISCOUNT'] < 0.03636385324922357) | (lineitem['EXTENDEDPRICE'] < 68794.01026915517) | (lineitem['L_ORDERKEY'] != 149) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON']))].merge(orders[(orders['O_COMMENT'].str.startswith('egu'))].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 3) | (nation['N_NAME'].str.startswith('B')) | (nation['N_COMMENT'] != 'r') & (nation['N_NAME'].str.startswith('M'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] <= 0.056734254131103425) & (lineitem['L_COMMENT'] != ' ') & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['LINENUMBER'] <= 1) & (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_ORDERKEY'] >= 172) & (lineitem['L_ORDERKEY'] == 124) | (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['SHIPDATE'] != '1992-04-27')][['EXTENDEDPRICE', 'L_ORDERKEY', 'QUANTITY', 'SHIPINSTRUCT', 'SHIPDATE', 'LINESTATUS', 'TAX', 'RECEIPTDATE', 'COMMITDATE', 'RETURNFLAG']].groupby(by=['QUANTITY']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'SHIPDATE', 'LINENUMBER', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5600) & (partsupp['SUPPLYCOST'] != 381.5927369095392) | (partsupp['AVAILQTY'] != 1620) & (partsupp['AVAILQTY'] < 8721) | (partsupp['P_COMMENT'].str.startswith('.'))].merge(supplier[(supplier['S_ACCTBAL'] < 8287.604078966402) & (supplier['S_SUPPKEY'] <= 149) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] < 1)][['S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'LINENUMBER', 'L_COMMENT', 'RECEIPTDATE', 'TAX', 'SHIPMODE']].merge(partsupp[(partsupp['P_COMMENT'] != 'c')].merge(part[(part['P_NAME'] == 'l') & (part['RETAILPRICE'] == 1027.0699198679597) | (part['TYPE'].str.startswith('L')) & (part['MFGR'] != 'Manufacturer#5') & (part['RETAILPRICE'] <= 1089.8747878303982) & (part['SIZE'] > 31)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'RETURNFLAG', 'DISCOUNT', 'LINESTATUS']].merge(partsupp[(partsupp['SUPPLYCOST'] > 727.724377702092) & (partsupp['SUPPLYCOST'] >= 831.307696860474)][['PS_PARTKEY', 'AVAILQTY']].merge(part[['BRAND', 'TYPE', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'LINENUMBER', 'L_ORDERKEY', 'EXTENDEDPRICE', 'RECEIPTDATE']].merge(orders.merge(customer.merge(nation[(nation['N_NATIONKEY'] > 11)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'TAX', 'LINESTATUS', 'SHIPMODE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] <= 14)][['S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'g') & (partsupp['PS_PARTKEY'] < 26) & (partsupp['PS_SUPPKEY'] >= 3306) & (partsupp['PS_PARTKEY'] == 18)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[['MFGR', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'SHIPDATE', 'DISCOUNT', 'LINESTATUS', 'L_SUPPKEY', 'TAX', 'L_ORDERKEY']].merge(orders[(orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'] != 'a') | (orders['O_ORDERKEY'] >= 407) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT', '2-HIGH', '3-MEDIUM'])) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] <= 349499.55504791636)].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_NATIONKEY'] >= 1) & (nation['N_REGIONKEY'] < 0) & (nation['N_NATIONKEY'] == 15)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') | (region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] == 'S') | (customer['C_ACCTBAL'] > 7740.3634826806865) | (customer['C_ADDRESS'] != 'F') & (customer['C_NATIONKEY'] >= 5) & (customer['C_ACCTBAL'] < 1529.140871348468) | (customer['C_NATIONKEY'] == 21)][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'] != 'q') | (customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'].str.startswith('h')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING', 'FURNITURE'])) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'f')][['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'h') | (customer['C_NATIONKEY'] < 18) | (customer['C_CUSTKEY'] > 75)][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'r')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] < 16) & (customer['C_PHONE'] == '13-') & (customer['C_ACCTBAL'] == 6834.865382420847) | (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] == 14) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 28.722756901112803) & (customer['C_ADDRESS'] != '0') | (customer['C_ADDRESS'] == 'm') & (customer['C_NATIONKEY'] != 9) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING']))][['C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_ADDRESS']).agg('count')

orders.merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_COMMENT'] == '.') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING'])) & (customer['C_COMMENT'].str.startswith('r')) | (customer['C_PHONE'] != '1')].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] == 'S') & (nation['N_COMMENT'].str.startswith('s'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

orders.merge(customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 10)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] < 0) | (nation['N_NAME'] != 'F')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'] != 'f')].merge(customer.merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] < 14)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == '.') & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['O_COMMENT'] == 'g') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERDATE'] < '1998-07-21')].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_NAME'] == 'ASI') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['CLERK'].str.startswith('C'))].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'B')].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] == 4145.762802943603) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] != 6050.362988976933)][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 23) | (nation['N_COMMENT'].str.startswith('l'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] > '1992-01-13') & (orders['O_CUSTKEY'] <= 27731) & (orders['TOTALPRICE'] != 259353.52021198938)][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] <= 5) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) | (customer['C_PHONE'] == '2') & (customer['C_COMMENT'] == 'w') | (customer['C_CUSTKEY'] == 2) & (customer['C_ACCTBAL'] <= 5686.008474243365)], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_ORDERKEY'] < 556) & (orders['SHIPPRIORITY'] < 0) & (orders['O_CUSTKEY'] > 125519) & (orders['O_ORDERKEY'] >= 595) | (orders['O_ORDERKEY'] <= 663) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'].str.startswith('C'))].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'] != 'C') & (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 118530) | (orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'].str.startswith(' ')) | (orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].groupby(by=['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERDATE']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '5-LOW', '2-HIGH'])) | (orders['O_COMMENT'] != '.') | (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) | (orders['O_CUSTKEY'] == 5467)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '3-MEDIUM'])) | (orders['O_COMMENT'].str.startswith('l')) | (orders['O_COMMENT'] != 'x')][['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'].str.startswith('e')) & (orders['O_CUSTKEY'] <= 113422) & (orders['O_ORDERKEY'] != 5) & (orders['O_CUSTKEY'] >= 23636) & (orders['ORDERSTATUS'] != 'O')].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 44772) & (orders['ORDERSTATUS'] != 'O') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] == 95300) | (orders['ORDERDATE'] < '1992-01-13') | (orders['O_COMMENT'] == 'u') | (orders['ORDERPRIORITY'].isin(['2-HIGH'])) | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_CUSTKEY'] > 57898)].merge(customer[(customer['C_ACCTBAL'] <= 203.23670141047955) & (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ACCTBAL'] >= 3639.3319075739446) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_COMMENT'].str.startswith('a'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 783) | (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] > 331)].merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 3) | (nation['N_NAME'].str.startswith('V'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['O_ORDERKEY'] >= 336) | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] != 243) & (orders['TOTALPRICE'] > 162388.28977125318) | (orders['TOTALPRICE'] < 335422.15315512853) | (orders['O_COMMENT'] == 'u') & (orders['TOTALPRICE'] < 219410.5689642245) & (orders['ORDERPRIORITY'].isin(['5-LOW']))].merge(customer[(customer['C_ADDRESS'] != '0') & (customer['C_CUSTKEY'] <= 42) | (customer['C_ADDRESS'] == 'a') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_CUSTKEY'] != 2) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < 7072.431649338152) | (customer['C_COMMENT'] == 'q')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 778) & (orders['TOTALPRICE'] > 225952.64809327648)][['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] >= 5) | (nation['N_COMMENT'].str.startswith('a'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] == 717) | (orders['O_COMMENT'].str.startswith('q')) & (orders['ORDERDATE'] == '1998-07-21')].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] < 2) | (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 290564.0159951344) | (orders['O_ORDERKEY'] == 328) & (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] != 265)][['ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ADDRESS'] != 'f')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 286356.4966354517) | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] == 235632.01218916877) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '1-URGENT', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'].str.startswith('b')) | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] > 305843.9292411594) & (orders['ORDERSTATUS'] == 'O')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 's')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 200235.92246870435)][['TOTALPRICE', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'] != 'R') & (nation['N_COMMENT'].str.startswith('a')) | (nation['N_NAME'] == 'R') | (nation['N_NAME'] != 'A')].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'] != 'l') & (customer['C_ADDRESS'].str.startswith('q')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'] != 'H') & (customer['C_NATIONKEY'] < 10) & (customer['C_NATIONKEY'] >= 5) | (customer['C_PHONE'].str.startswith('13-'))][['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY']].merge(customer[(customer['C_ADDRESS'] == 'a') | (customer['C_COMMENT'] != 'g')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'] != 'i') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) | (customer['C_ADDRESS'].str.startswith('d')) & (customer['C_PHONE'].str.startswith('3'))][['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME']).agg('max', numeric_only=True)

part[(part['CONTAINER'] != 'SM') & (part['TYPE'].str.startswith('M')) | (part['TYPE'].str.startswith('SMA')) & (part['SIZE'] >= 29) & (part['P_NAME'] != 's') | (part['TYPE'] == 'E') & (part['P_PARTKEY'] <= 161) & (part['SIZE'] >= 14) & (part['SIZE'] > 1)][['BRAND', 'P_NAME', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER']].groupby(by=['TYPE', 'P_NAME', 'CONTAINER', 'MFGR', 'BRAND']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'y') & (part['PT_COMMENT'] != 'p') | (part['P_PARTKEY'] >= 77) & (part['P_PARTKEY'] != 106) | (part['P_NAME'] == 's') | (part['TYPE'] == 'L') | (part['TYPE'] == 'E') & (part['P_PARTKEY'] <= 159)][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']].groupby(by=['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'TYPE']).agg('count')

partsupp.merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] != 3)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'] != 'E') & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] != 15) | (supplier['S_NATIONKEY'] <= 22) & (supplier['S_PHONE'] != '26-') & (supplier['S_ADDRESS'] == 'W') & (supplier['S_ADDRESS'] == 'x') | (supplier['S_NATIONKEY'] == 6) | (supplier['S_COMMENT'].str.startswith('es '))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 20)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 23) & (supplier['S_ADDRESS'].str.startswith('B')) & (supplier['S_ADDRESS'] != '3') | (supplier['S_NATIONKEY'] <= 11) | (supplier['S_COMMENT'].str.startswith('j')) & (supplier['S_SUPPKEY'] != 106) | (supplier['S_NAME'] == 'S')].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] < 3) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] == 14)].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 124)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] <= 1) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 4191) & (partsupp['PS_SUPPKEY'] > 5418) & (partsupp['SUPPLYCOST'] == 144.66553205984684)].merge(part[(part['P_PARTKEY'] < 133) | (part['CONTAINER'] == 'LG') | (part['MFGR'] == 'Manufacturer#4') & (part['TYPE'] != 'S')][['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 5520) | (partsupp['PS_PARTKEY'] < 38) & (partsupp['SUPPLYCOST'] > 875.7338066718008) & (partsupp['AVAILQTY'] > 3711)].merge(supplier.merge(nation[(nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] < 9) & (nation['N_REGIONKEY'] == 0)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] > 6658) & (partsupp['PS_SUPPKEY'] == 3532) | (partsupp['SUPPLYCOST'] != 783.6511500438601) & (partsupp['AVAILQTY'] == 7062) | (partsupp['AVAILQTY'] > 3313)].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != ' sl') | (supplier['S_PHONE'] == '26-') | (supplier['S_ADDRESS'] != 'C') & (supplier['S_PHONE'] != '1') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] == 3268.668979907611)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 28) | (partsupp['P_COMMENT'] == ' th') & (partsupp['P_COMMENT'] == ';')][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] >= 102)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] <= 2) | (partsupp['PS_PARTKEY'] >= 15) & (partsupp['PS_PARTKEY'] >= 22) | (partsupp['SUPPLYCOST'] >= 414.0884536869205) & (partsupp['SUPPLYCOST'] == 199.63569843141588)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 40) & (partsupp['SUPPLYCOST'] == 572.5212910426325)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'TYPE', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 33) | (partsupp['PS_PARTKEY'] <= 9)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 2412) | (partsupp['PS_PARTKEY'] < 16) & (partsupp['SUPPLYCOST'] > 687.599081096123)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 1200) | (partsupp['AVAILQTY'] != 5453) & (partsupp['SUPPLYCOST'] != 481.16933174629304)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['BRAND'] != 'Brand#25') | (part['SIZE'] != 38) & (part['BRAND'].isin(['Brand#15', 'Brand#13', 'Brand#32', 'Brand#11', 'Brand#45', 'Brand#53', 'Brand#34', 'Brand#33', 'Brand#35', 'Brand#44', 'Brand#12', 'Brand#52', 'Brand#43', 'Brand#41', 'Brand#42', 'Brand#31'])) | (part['BRAND'] == 'Brand#32') | (part['TYPE'] != 'M') & (part['MFGR'] == 'Manufacturer#1') | (part['RETAILPRICE'] <= 1062.8827479737581)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 7540) | (partsupp['P_COMMENT'].str.startswith('b'))].merge(supplier[(supplier['S_ACCTBAL'] != 2816.8482725963486) | (supplier['S_SUPPKEY'] != 99) | (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] >= 16)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 5768) & (partsupp['SUPPLYCOST'] < 331.45652942422004) & (partsupp['AVAILQTY'] >= 5347) & (partsupp['PS_PARTKEY'] <= 13) | (partsupp['PS_SUPPKEY'] > 6793)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] > 2584.634620307338)].merge(nation.merge(region[(region['R_NAME'].str.startswith('A'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 3256) | (partsupp['PS_SUPPKEY'] > 3930) | (partsupp['PS_PARTKEY'] != 42) & (partsupp['PS_SUPPKEY'] != 5482) | (partsupp['SUPPLYCOST'] > 501.2127963343158)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 't') | (partsupp['PS_SUPPKEY'] != 6949)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[['BRAND', 'MFGR', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'BRAND', 'P_NAME', 'CONTAINER']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith(';')) & (partsupp['PS_PARTKEY'] == 20) & (partsupp['AVAILQTY'] < 4352) & (partsupp['SUPPLYCOST'] < 92.476295765254)].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('bli')) | (partsupp['AVAILQTY'] >= 4023) | (partsupp['SUPPLYCOST'] < 641.0110416623475)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 64.89183969726855) | (supplier['S_NATIONKEY'] >= 10) | (supplier['S_SUPPKEY'] >= 189) & (supplier['S_ACCTBAL'] > 8897.704968598258) | (supplier['S_SUPPKEY'] == 34) & (supplier['S_SUPPKEY'] >= 148)].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] >= 13) | (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] != 'n')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['P_COMMENT'] != 'g')].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] > 17) | (nation['N_NATIONKEY'] < 3)].merge(region[(region['R_REGIONKEY'] >= 3) | (region['R_NAME'].str.startswith('E'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('o'))][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] == 13) | (part['MFGR'] != 'Manufacturer#1') & (part['SIZE'] <= 25) | (part['BRAND'].isin(['Brand#41', 'Brand#25', 'Brand#53', 'Brand#42', 'Brand#15', 'Brand#21', 'Brand#43', 'Brand#44', 'Brand#24', 'Brand#51', 'Brand#45', 'Brand#13', 'Brand#14', 'Brand#35', 'Brand#52', 'Brand#22'])) | (part['RETAILPRICE'] == 936.3493025318589) | (part['SIZE'] > 3) | (part['P_PARTKEY'] == 161)][['BRAND', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 877.0634398635608)].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 324.2104720552125) | (partsupp['PS_SUPPKEY'] == 2090)].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('p')) | (supplier['S_ADDRESS'] != 'g')].merge(nation[(nation['N_REGIONKEY'] <= 3)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 113.05471848830616) & (partsupp['PS_SUPPKEY'] < 4562) & (partsupp['PS_SUPPKEY'] == 3441) | (partsupp['SUPPLYCOST'] < 963.9257793448294)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[['BRAND', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('j')) | (supplier['S_COMMENT'] != 'h') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] >= 5913.568136681619)][['S_ADDRESS', 'S_COMMENT', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NAME']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] != 20) & (supplier['S_PHONE'] == '26-') | (supplier['S_SUPPKEY'] >= 61) & (supplier['S_SUPPKEY'] < 122) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ADDRESS', 'S_SUPPKEY']).agg('sum', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['P_PARTKEY'] < 152) | (part['SIZE'] != 39) & (part['TYPE'] != 'L') | (part['MFGR'] == 'Manufacturer#5')][['TYPE', 'P_PARTKEY', 'CONTAINER', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('count')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'].str.startswith('E')) & (nation['N_NATIONKEY'] >= 15) | (nation['N_NAME'].str.startswith('U'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] < 8642.5642847618) & (supplier['S_SUPPKEY'] == 169) | (supplier['S_ACCTBAL'] >= 676.4973837941407) | (supplier['S_ACCTBAL'] >= 8994.736355981946) | (supplier['S_COMMENT'] != 'b') & (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] == 2) & (region['R_NAME'] != 'A') | (region['R_NAME'].str.startswith('M'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] == 'f') | (supplier['S_COMMENT'].str.startswith(' '))][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] == 0) | (nation['N_NAME'].str.startswith('F'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'm') | (supplier['S_SUPPKEY'] != 88) & (supplier['S_COMMENT'] != 'y') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] != '1') | (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '1')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'l') | (nation['N_NAME'] == 'J')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'n') | (supplier['S_SUPPKEY'] > 67) | (supplier['S_ACCTBAL'] < 4769.116768050971) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] > 2639.7113570214833) & (supplier['S_COMMENT'] == 's')].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_COMMENT'] == 'bli') & (supplier['S_COMMENT'] == 'h') & (supplier['S_ACCTBAL'] > 5420.73867243165) | (supplier['S_ACCTBAL'] != 8302.649413086905) & (supplier['S_COMMENT'] != 'r') & (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_NAME'].str.startswith('V'))].merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 1940.6016749156795) | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR') | (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'] != 'q') | (supplier['S_COMMENT'].str.startswith('g')) & (supplier['S_ACCTBAL'] < 7912.866608753174) | (supplier['S_NATIONKEY'] < 23)][['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] >= 191) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != 'u') | (supplier['S_PHONE'].str.startswith('3'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'AME') & (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 5) & (supplier['S_SUPPKEY'] >= 116) & (supplier['S_ADDRESS'].str.startswith('9'))][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 20) | (supplier['S_ACCTBAL'] >= 4968.701467263324) & (supplier['S_ACCTBAL'] == 1199.5500571385548)][['S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 16) | (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] >= 18)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 12)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] == 'u') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] >= 9)][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) | (region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] >= 181) | (supplier['S_ADDRESS'] == '4') & (supplier['S_PHONE'] != '14-') & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] == 116) & (supplier['S_ACCTBAL'] <= 1686.3411412155162)][['S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) & (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_NATIONKEY'] == 10) | (supplier['S_NATIONKEY'] > 21) & (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_PHONE'] == '1') & (supplier['S_ADDRESS'].str.startswith('a')) & (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_NATIONKEY'] != 7)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 4)][['S_NATIONKEY', 'S_NAME', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 12) & (nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] != 22) & (nation['N_COMMENT'].str.startswith('h'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] <= 7) | (supplier['S_PHONE'] == '32-') | (supplier['S_COMMENT'] != 'c') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'l') & (supplier['S_ADDRESS'].str.startswith('W'))].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] > 2) | (nation['N_REGIONKEY'] < 0) | (nation['N_NAME'].str.startswith('S'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] >= 0)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 9842.333499330385) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'] == 'y') & (customer['C_NATIONKEY'] > 6) & (customer['C_ADDRESS'] == 'j')].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] <= 3)].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] >= 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'z') & (customer['C_CUSTKEY'] < 67)].merge(nation[(nation['N_NATIONKEY'] > 0) & (nation['N_NATIONKEY'] >= 10) | (nation['N_NATIONKEY'] < 11) | (nation['N_NAME'].str.startswith('F'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('l')) & (customer['C_PHONE'] == '27-') | (customer['C_PHONE'] == '25-') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] != '18-') | (customer['C_CUSTKEY'] < 22) | (customer['C_CUSTKEY'] <= 38)].merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NATIONKEY'] >= 20) | (nation['N_NATIONKEY'] == 7) & (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 29) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 5158.086157438708) | (customer['C_COMMENT'].str.startswith('e')) | (customer['C_CUSTKEY'] >= 84) | (customer['C_ADDRESS'] == 'g') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('s'))].merge(nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_NAME'].str.startswith('U'))].merge(region[(region['R_NAME'] != 'AME') & (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != ',') & (customer['C_ACCTBAL'] <= 3124.8691847389696) | (customer['C_NATIONKEY'] == 18) | (customer['C_COMMENT'].str.startswith('q')) & (customer['C_COMMENT'].str.startswith('.'))][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 10) | (customer['C_NATIONKEY'] < 2) | (customer['C_ACCTBAL'] != 8490.579551133982) | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_PHONE'] != '27-')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '2') & (customer['C_CUSTKEY'] > 76) & (customer['C_ACCTBAL'] == 4688.621003783146) | (customer['C_CUSTKEY'] >= 29) | (customer['C_NATIONKEY'] >= 22) & (customer['C_NATIONKEY'] <= 3) & (customer['C_CUSTKEY'] < 45)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '25-') & (customer['C_ACCTBAL'] != 3027.3459898012597) | (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == ' ') | (customer['C_ADDRESS'] == 's') | (customer['C_ADDRESS'] == 'e') & (customer['C_NATIONKEY'] != 11) | (customer['C_ADDRESS'] != 'h')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('3')) | (customer['C_ACCTBAL'] != 9638.470327676005)][['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] != 18) & (nation['N_REGIONKEY'] != 3) & (nation['N_NAME'] != 'G')].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_NATIONKEY'] != 16) | (nation['N_REGIONKEY'] == 3)].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] != 0) & (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 'l') & (nation['N_NATIONKEY'] >= 20)].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('o'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NAME'] != 'J')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 24)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 98) | (supplier['S_ACCTBAL'] >= 9698.6228389873) | (supplier['S_SUPPKEY'] > 135) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] != 'b') & (partsupp['SUPPLYCOST'] == 178.97858599826685) | (partsupp['AVAILQTY'] != 5203) | (partsupp['AVAILQTY'] == 9909)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'o')].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['TAX'] >= 0.01664812965553159) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) & (lineitem['TAX'] > 0.06404372699623098) & (lineitem['L_PARTKEY'] == 8235)][['EXTENDEDPRICE', 'RECEIPTDATE', 'RETURNFLAG', 'L_SUPPKEY', 'COMMITDATE']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 518)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'i') | (lineitem['LINENUMBER'] == 2)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'e') | (lineitem['SHIPMODE'] == 'TRUCK')][['L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 360.599802016201)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('e')) | (lineitem['L_PARTKEY'] < 45095) & (lineitem['L_ORDERKEY'] >= 101) | (lineitem['SHIPDATE'] >= '1992-04-27') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['L_COMMENT'] == ',') | (lineitem['RETURNFLAG'] != 'N') | (lineitem['L_ORDERKEY'] == 174) | (lineitem['QUANTITY'] == 40) | (lineitem['EXTENDEDPRICE'] >= 46412.55087137076)].merge(partsupp[(partsupp['AVAILQTY'] <= 3980) | (partsupp['P_COMMENT'] != 't') | (partsupp['PS_SUPPKEY'] >= 4099) & (partsupp['AVAILQTY'] == 7605)].merge(part[(part['P_PARTKEY'] >= 149) & (part['PT_COMMENT'] == 'e') | (part['P_PARTKEY'] != 17) & (part['PT_COMMENT'] != 'k')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] < 120265) & (lineitem['DISCOUNT'] > 0.07007911358221007) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE'])) | (lineitem['LINENUMBER'] == 5)].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'].str.startswith('u'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] < 144941) | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['L_SUPPKEY'] >= 7877) | (lineitem['QUANTITY'] < 28) & (lineitem['DISCOUNT'] < 0.04102810898076248) & (lineitem['SHIPMODE'].isin(['REG AIR', 'TRUCK', 'RAIL', 'MAIL']))].merge(partsupp[(partsupp['PS_SUPPKEY'] == 4655) | (partsupp['P_COMMENT'] == 'c') | (partsupp['PS_PARTKEY'] > 14)].merge(part[(part['P_PARTKEY'] >= 63) & (part['SIZE'] <= 17) | (part['PT_COMMENT'] == 'b') & (part['TYPE'] != 'E') & (part['P_PARTKEY'] >= 109) | (part['CONTAINER'].str.startswith('JUMBO')) & (part['TYPE'] != 'SMA') & (part['MFGR'].isin(['Manufacturer#3'])) & (part['PT_COMMENT'] != 'i')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] != 3459)][['L_ORDERKEY', 'L_SUPPKEY', 'EXTENDEDPRICE']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 9195) | (lineitem['L_COMMENT'] == 's') | (lineitem['L_PARTKEY'] >= 27568) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] != 7) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['LINENUMBER'] != 3) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['RECEIPTDATE'] != '1998-11-06')][['L_PARTKEY', 'COMMITDATE', 'LINENUMBER', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_SUPPKEY'] == 9520)].merge(partsupp[(partsupp['P_COMMENT'] == ' th') & (partsupp['P_COMMENT'] != 'bli')][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['TYPE'] == 'P') & (part['SIZE'] < 10) & (part['SIZE'] < 13) & (part['PT_COMMENT'].str.startswith('ss ')) | (part['RETAILPRICE'] >= 950.2328789054297) & (part['RETAILPRICE'] == 1025.7568033578918)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 3600) | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['DISCOUNT'] < 0.07455906028424324) | (lineitem['EXTENDEDPRICE'] <= 30011.148798915056) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'TAKE BACK RETURN', 'DELIVER IN PERSON'])) & (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['LINENUMBER'] >= 2)].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 86) | (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NATIONKEY'] <= 4) | (supplier['S_NATIONKEY'] != 2) | (supplier['S_ACCTBAL'] != -709.180428736046)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] < '1998-11-06')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 841.6458585639459) & (partsupp['PS_PARTKEY'] > 45)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NAME', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS', 'S_NAME', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_ORDERKEY'] <= 4) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['QUANTITY'] >= 3) & (lineitem['L_SUPPKEY'] != 1148) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] <= 55638.06620709775) & (lineitem['QUANTITY'] <= 16)].merge(partsupp.merge(part[(part['CONTAINER'] != 'SM')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_SUPPKEY'] > 5981) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_PARTKEY'] >= 142816)].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5287) | (partsupp['PS_SUPPKEY'] <= 6135) | (partsupp['P_COMMENT'] == ';') & (partsupp['AVAILQTY'] > 4568) | (partsupp['SUPPLYCOST'] >= 166.29094311048158)].merge(part[(part['RETAILPRICE'] >= 911.0146751182109) | (part['P_PARTKEY'] == 46) & (part['PT_COMMENT'] != 'x')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PT_COMMENT', 'CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['LINESTATUS'] == 'O') & (lineitem['RECEIPTDATE'] >= '1992-05-02')][['L_PARTKEY', 'SHIPMODE', 'TAX', 'L_COMMENT', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp.merge(supplier.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] != '1992-04-27') & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['RETURNFLAG'] == 'N') | (lineitem['EXTENDEDPRICE'] > 49849.88995550673)][['SHIPDATE', 'L_COMMENT', 'LINESTATUS', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY']].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) & (supplier['S_ADDRESS'] == 't')].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['L_SUPPKEY'] != 8817)][['L_PARTKEY', 'LINENUMBER', 'TAX', 'SHIPINSTRUCT', 'SHIPMODE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 782.8447258568069) | (partsupp['AVAILQTY'] != 8250) | (partsupp['PS_SUPPKEY'] > 2007)][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] == 'c') & (part['BRAND'].isin(['Brand#15', 'Brand#42', 'Brand#33', 'Brand#13', 'Brand#22', 'Brand#52', 'Brand#41', 'Brand#12', 'Brand#11', 'Brand#54'])) & (part['SIZE'] < 16)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR') & (lineitem['QUANTITY'] >= 45)][['LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_ORDERKEY'] == 173) | (orders['ORDERDATE'] == '1992-01-13')][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'MAIL')][['RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'SHIPDATE', 'RETURNFLAG', 'SHIPMODE', 'EXTENDEDPRICE', 'QUANTITY']].merge(orders.merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] <= 0.025906249447313956) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_PARTKEY'] == 79197) | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['L_SUPPKEY'] == 4941)].merge(orders[['O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'L_SUPPKEY', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['DISCOUNT', 'L_SUPPKEY', 'L_PARTKEY', 'RETURNFLAG', 'SHIPMODE', 'QUANTITY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] == 'S')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'L_ORDERKEY', 'DISCOUNT', 'TAX', 'QUANTITY', 'COMMITDATE']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 41) & (supplier['S_COMMENT'] != 'w') & (supplier['S_ADDRESS'] == 'E') & (supplier['S_PHONE'] != '2') | (supplier['S_NATIONKEY'] < 10)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'SHIPDATE', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT']].merge(partsupp.merge(part[['P_PARTKEY', 'CONTAINER', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'BRAND', 'P_PARTKEY', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'QUANTITY', 'L_ORDERKEY', 'SHIPDATE', 'L_SUPPKEY', 'L_COMMENT']].merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_COMMENT'] == 'c')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'DISCOUNT', 'COMMITDATE', 'L_ORDERKEY', 'TAX', 'RETURNFLAG', 'SHIPMODE', 'SHIPINSTRUCT', 'L_PARTKEY', 'QUANTITY']].merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['O_CUSTKEY'] < 10877) | (orders['O_COMMENT'].str.startswith('w')) & (orders['O_COMMENT'] == 'k') | (orders['ORDERSTATUS'] == 'O') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1992-01-13')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY']].merge(orders[(orders['TOTALPRICE'] <= 15578.617735702379) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != 't') & (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'z') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['CLERK'].str.startswith('C'))].merge(customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[['L_PARTKEY', 'QUANTITY', 'L_ORDERKEY', 'RETURNFLAG', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp.merge(supplier.merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'LINENUMBER', 'SHIPDATE', 'RECEIPTDATE', 'LINESTATUS', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp.merge(part[(part['P_PARTKEY'] >= 118) | (part['RETAILPRICE'] != 1065.6776160496815) | (part['BRAND'] == 'Brand#34') & (part['PT_COMMENT'] == 'ss ') | (part['PT_COMMENT'] == 'w')][['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('max', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_ORDERKEY', 'DISCOUNT', 'SHIPMODE']].merge(orders.merge(customer[(customer['C_COMMENT'] != 'r') & (customer['C_COMMENT'] == 'p') | (customer['C_NATIONKEY'] == 2) & (customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'].str.startswith('s')) | (customer['C_COMMENT'].str.startswith('n')) & (customer['C_COMMENT'] != 'n')][['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[['SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE', 'TAX', 'LINESTATUS', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH')].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] == 'j') & (customer['C_PHONE'] != '18-') | (customer['C_NATIONKEY'] < 14) & (customer['C_ADDRESS'] != 'w') & (customer['C_CUSTKEY'] != 30)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] <= 11) & (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_ADDRESS'] == 'S') & (customer['C_ADDRESS'] == 'l') & (customer['C_NATIONKEY'] <= 20) | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_CUSTKEY'] != 50) & (customer['C_ACCTBAL'] > 8000.870673925041)][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] == 13) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'].str.startswith('M'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] > 2)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] == 680) | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] != 323) & (orders['TOTALPRICE'] == 177079.31038154013)][['O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 76265.83723068144) | (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['CLERK'] == 'C')][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] < 7)][['C_COMMENT', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1998-07-21')][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] > 8266.683882680447) | (customer['C_CUSTKEY'] > 5)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['SHIPPRIORITY'] > 0)].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERSTATUS'] == 'F') & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_CUSTKEY'] != 119053) | (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] < 0)].merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['O_ORDERKEY'] < 780) & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_ACCTBAL'] <= 4893.17245820302) & (customer['C_PHONE'] != '2') & (customer['C_NATIONKEY'] > 20) & (customer['C_ACCTBAL'] == 4585.904873923568) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] == 61) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_ADDRESS'].str.startswith('Y'))].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'] != 'r') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_CUSTKEY'] != 29646) & (orders['O_COMMENT'].str.startswith('.')) | (orders['CLERK'] != 'C')].merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ACCTBAL'] < 5018.647636387665)][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL']).agg('count')

orders[(orders['O_COMMENT'] == 'i') & (orders['O_CUSTKEY'] <= 112630) | (orders['TOTALPRICE'] != 329144.6116312592) & (orders['O_CUSTKEY'] > 88434) | (orders['O_COMMENT'].str.startswith('z')) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH'])) | (orders['TOTALPRICE'] >= 121763.85633165708) | (orders['O_ORDERKEY'] >= 499) & (orders['CLERK'] != 'C')].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] >= 60)].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_ORDERKEY'] >= 112)][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'CLERK']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] >= 208480.229397268) | (orders['O_CUSTKEY'] > 126942) | (orders['ORDERDATE'] == '1998-07-21')][['O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_NATIONKEY'] <= 1) | (customer['C_NATIONKEY'] >= 18) & (customer['C_NATIONKEY'] >= 3) & (customer['C_ADDRESS'].str.startswith('D')) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] >= 99)].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_ACCTBAL'] < 4743.2155958236945) | (customer['C_ADDRESS'] != 'm') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ADDRESS'].str.startswith('q')) | (customer['C_CUSTKEY'] > 65)][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] == 'u') | (customer['C_ACCTBAL'] != 2200.559471146227) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ADDRESS'] == 'E') | (customer['C_NATIONKEY'] == 7) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('3')) | (customer['C_ADDRESS'].str.startswith('b'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME']).agg('count')

part[(part['PT_COMMENT'] != ' ') | (part['CONTAINER'].str.startswith('SM')) | (part['P_NAME'] != 'lin') & (part['TYPE'] != 'L') & (part['PT_COMMENT'] == 'w') | (part['SIZE'] >= 43) | (part['P_NAME'] == 'h') | (part['TYPE'].str.startswith('SMA')) | (part['CONTAINER'] != 'JUMBO')][['P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']].groupby(by=['P_PARTKEY', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'e') & (part['CONTAINER'] != 'SM') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5', 'Manufacturer#2'])) | (part['TYPE'] == 'P') & (part['RETAILPRICE'] > 1016.8165926338434) & (part['CONTAINER'] == 'SM') & (part['RETAILPRICE'] < 1061.294212896226) & (part['MFGR'] != 'Manufacturer#2')][['MFGR', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY', 'P_NAME', 'SIZE', 'CONTAINER', 'BRAND', 'TYPE']].groupby(by=['CONTAINER', 'PT_COMMENT', 'MFGR', 'P_NAME', 'SIZE']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 316.2285110164353) | (supplier['S_ACCTBAL'] <= 8372.568779988193) & (supplier['S_PHONE'] == '26-') & (supplier['S_ADDRESS'] != '9') | (supplier['S_NATIONKEY'] < 18)].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] >= 8) | (nation['N_NATIONKEY'] < 19)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'o') & (supplier['S_ACCTBAL'] == 9556.441603348128) | (supplier['S_ADDRESS'] == 'O') | (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] != 'x') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] > 3090.9926631190874)].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

partsupp.merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] < 9) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] == 'f') | (supplier['S_ADDRESS'] != '3') | (supplier['S_PHONE'] != '1')].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 20)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

partsupp.merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] < 9028) | (partsupp['PS_SUPPKEY'] > 6840) | (partsupp['PS_SUPPKEY'] > 3742) | (partsupp['PS_PARTKEY'] >= 11) & (partsupp['AVAILQTY'] >= 8637)].merge(supplier[(supplier['S_ADDRESS'] != '5') | (supplier['S_ADDRESS'] == 'M') | (supplier['S_NATIONKEY'] > 12) & (supplier['S_SUPPKEY'] == 28) | (supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] > 64) | (supplier['S_ACCTBAL'] == 5969.752641695147)].merge(nation[(nation['N_REGIONKEY'] == 1)].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 9089) | (partsupp['AVAILQTY'] <= 885) & (partsupp['PS_SUPPKEY'] != 2773) | (partsupp['PS_PARTKEY'] > 42) | (partsupp['PS_SUPPKEY'] < 6500)][['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] == 3285) | (partsupp['PS_SUPPKEY'] > 1826) & (partsupp['PS_SUPPKEY'] > 813) & (partsupp['P_COMMENT'] == 'n') | (partsupp['P_COMMENT'] != 'bli')].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] >= 7991) & (partsupp['PS_PARTKEY'] > 10) | (partsupp['PS_SUPPKEY'] <= 4664) & (partsupp['P_COMMENT'] != 'q')].merge(supplier[(supplier['S_NATIONKEY'] >= 9) | (supplier['S_NATIONKEY'] >= 16) & (supplier['S_PHONE'] == '2') | (supplier['S_SUPPKEY'] == 76) | (supplier['S_PHONE'].str.startswith('2'))][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 43) | (partsupp['P_COMMENT'] != 'the') & (partsupp['PS_SUPPKEY'] > 4376)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'MFGR', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 5850) | (partsupp['PS_SUPPKEY'] >= 292) | (partsupp['PS_SUPPKEY'] <= 4224) | (partsupp['P_COMMENT'].str.startswith('a')) | (partsupp['SUPPLYCOST'] >= 953.2780023270942)][['PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] < 3)].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 961) & (partsupp['PS_PARTKEY'] < 1) | (partsupp['AVAILQTY'] > 7229) & (partsupp['AVAILQTY'] >= 4746)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] != 't') | (part['RETAILPRICE'] != 1023.8978442270327) & (part['PT_COMMENT'].str.startswith('n')) | (part['PT_COMMENT'] != 'e') | (part['PT_COMMENT'] == 'e') & (part['SIZE'] <= 47) & (part['P_NAME'].str.startswith('bis'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4452)].merge(supplier[(supplier['S_ACCTBAL'] == 4186.296930840103)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'o')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == ' th') & (partsupp['P_COMMENT'] == 'h')][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['BRAND'] == 'Brand#35') & (part['TYPE'].str.startswith('SMA')) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2'])) | (part['CONTAINER'] != 'JUMBO') | (part['RETAILPRICE'] > 910.6283332882658)][['SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_PARTKEY', 'SIZE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'i') | (partsupp['AVAILQTY'] > 7573) | (partsupp['SUPPLYCOST'] == 127.29008752151384)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'y') & (partsupp['PS_PARTKEY'] < 42)].merge(part[(part['BRAND'].isin(['Brand#14', 'Brand#52', 'Brand#51', 'Brand#32', 'Brand#22', 'Brand#25', 'Brand#53', 'Brand#35', 'Brand#33', 'Brand#11', 'Brand#15', 'Brand#12', 'Brand#21', 'Brand#23', 'Brand#31'])) & (part['TYPE'] == 'S') & (part['RETAILPRICE'] > 945.616008202038) | (part['BRAND'] == 'Brand#54') | (part['MFGR'] != 'Manufacturer#4') & (part['P_PARTKEY'] == 61) & (part['MFGR'].isin(['Manufacturer#4'])) | (part['P_NAME'] == 'y') | (part['PT_COMMENT'] == 'd')][['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'SIZE']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith(','))].merge(supplier[(supplier['S_ACCTBAL'] != 8826.074465327081) | (supplier['S_SUPPKEY'] > 103) | (supplier['S_SUPPKEY'] < 58) | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_PHONE'] != '17-') | (supplier['S_ACCTBAL'] <= 8070.770998283943)].merge(nation[(nation['N_NAME'] == 'I')].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('h')) & (partsupp['P_COMMENT'] != 'are') & (partsupp['SUPPLYCOST'] == 103.21180029668771)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'JUMBO') & (part['BRAND'].isin(['Brand#25', 'Brand#21', 'Brand#34', 'Brand#44', 'Brand#31', 'Brand#51', 'Brand#32'])) & (part['PT_COMMENT'].str.startswith('w')) & (part['P_NAME'].str.startswith('blu'))][['BRAND', 'TYPE', 'RETAILPRICE', 'PT_COMMENT', 'MFGR', 'SIZE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 675.8075558399827) & (partsupp['P_COMMENT'] == 'are') & (partsupp['PS_PARTKEY'] > 38) & (partsupp['PS_PARTKEY'] != 12)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['TYPE'] != 'P') & (part['BRAND'] == 'Brand#43') | (part['CONTAINER'] == 'LG') & (part['P_PARTKEY'] > 18) | (part['RETAILPRICE'] < 1092.6875991629938) | (part['RETAILPRICE'] >= 1029.7410845195864) | (part['P_PARTKEY'] == 101) | (part['P_NAME'].str.startswith('t')) | (part['P_NAME'] == 'p')][['P_PARTKEY', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] < 729.7987830390052) & (partsupp['P_COMMENT'] == 'c') | (partsupp['P_COMMENT'] == 'bli')].merge(part[(part['RETAILPRICE'] == 1008.1183613535148) & (part['P_NAME'] == 'o') | (part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] != 'b')][['TYPE', 'RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'BRAND', 'TYPE']).agg('min', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 'n') | (supplier['S_NATIONKEY'] <= 3) & (supplier['S_ACCTBAL'] < 6005.202006758154)][['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == ' ')].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'F')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_COMMENT'] != 'p') | (nation['N_COMMENT'] != 'l')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_NATIONKEY'] >= 11) & (supplier['S_NATIONKEY'] <= 18) & (supplier['S_PHONE'] != '14-') | (supplier['S_ACCTBAL'] == 4672.20329744641) | (supplier['S_NATIONKEY'] >= 11) | (supplier['S_NAME'].str.startswith('S'))].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] >= 7992.22721321359) & (supplier['S_PHONE'] == '17-') | (supplier['S_ADDRESS'].str.startswith('K')) | (supplier['S_NATIONKEY'] >= 0) | (supplier['S_COMMENT'] == '.') | (supplier['S_ACCTBAL'] != 7073.4429395722045)].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] != 3) | (nation['N_NATIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'y') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] > 12)].merge(nation[(nation['N_NATIONKEY'] < 0) & (nation['N_REGIONKEY'] > 0) & (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] == '!') | (supplier['S_NATIONKEY'] <= 4) & (supplier['S_SUPPKEY'] == 167) & (supplier['S_ADDRESS'] != 'N') & (supplier['S_ACCTBAL'] <= 9008.577523289221) | (supplier['S_NAME'] != 'S')][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 16) & (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] >= 20) & (nation['N_COMMENT'].str.startswith(' '))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'h') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != '9') & (supplier['S_ACCTBAL'] == 3392.660310711104)][['S_NATIONKEY', 'S_NAME', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] == 2) & (nation['N_NATIONKEY'] != 7)].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_NAME'] != 'AME') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'i') | (supplier['S_ADDRESS'].str.startswith('7')) | (supplier['S_COMMENT'].str.startswith(' ')) & (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 20)][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] != 18) & (supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_COMMENT'].str.startswith('al ')) & (supplier['S_NATIONKEY'] >= 12) & (supplier['S_PHONE'] == '3') & (supplier['S_PHONE'] != '3')][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 1242.7900063562254) & (supplier['S_ACCTBAL'] > 8104.729328381359) | (supplier['S_ADDRESS'] == 'B') | (supplier['S_ADDRESS'] != 'O') | (supplier['S_ADDRESS'].str.startswith('z'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '26-') | (supplier['S_ADDRESS'] != 'F') | (supplier['S_COMMENT'].str.startswith('al '))][['S_PHONE', 'S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NATIONKEY'] < 8) & (supplier['S_PHONE'] == '2')].merge(nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_NAME'].str.startswith('R')) & (nation['N_NAME'] == 'G') & (nation['N_COMMENT'].str.startswith('t'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_NAME'] == 'ASI') | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

supplier[(supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] >= 23) & (supplier['S_SUPPKEY'] != 40) | (supplier['S_ADDRESS'] == 'G') & (supplier['S_NAME'] == 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('C')) | (nation['N_COMMENT'].str.startswith('n')) | (nation['N_COMMENT'].str.startswith('n'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'] != 's') | (nation['N_COMMENT'] == 'o')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] < 20) & (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] != 9)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier[['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] == 4) | (nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'].str.startswith('J')) & (nation['N_NAME'] == 'U')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] == 'B') | (nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('O')) | (customer['C_COMMENT'].str.startswith(' ')) & (customer['C_CUSTKEY'] > 39) | (customer['C_COMMENT'].str.startswith('u')) | (customer['C_ADDRESS'] != 'K')][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'o')][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 31) & (customer['C_ACCTBAL'] >= 1642.5907266271943) & (customer['C_COMMENT'].str.startswith('.')) & (customer['C_ADDRESS'] == 'U') | (customer['C_COMMENT'] != 'r') | (customer['C_NATIONKEY'] > 22) | (customer['C_CUSTKEY'] <= 97) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] >= 1) & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] == 47) | (customer['C_ADDRESS'] == 'F') | (customer['C_ADDRESS'] == 'O') | (customer['C_PHONE'] == '18-') | (customer['C_ADDRESS'] != '6') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_PHONE'] != '2')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 49) & (customer['C_ACCTBAL'] != 1403.32131218812) & (customer['C_NATIONKEY'] <= 3) | (customer['C_ACCTBAL'] <= 3124.016982756885)][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'].str.startswith('y'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 71) & (customer['C_CUSTKEY'] <= 30) & (customer['C_CUSTKEY'] <= 28) | (customer['C_PHONE'] == '22-') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE'])) | (customer['C_COMMENT'] == 'w') | (customer['C_ACCTBAL'] >= 7846.031578741218)].merge(nation[(nation['N_NAME'] != 'V') | (nation['N_NAME'] != 'R')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 8) & (customer['C_ADDRESS'].str.startswith('E')) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] != 18) | (customer['C_COMMENT'].str.startswith('h')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_PHONE'] != '1')][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 81) & (customer['C_CUSTKEY'] == 68) | (customer['C_NATIONKEY'] >= 0) & (customer['C_ADDRESS'] == 'S') | (customer['C_NATIONKEY'] > 13) & (customer['C_NATIONKEY'] != 14)][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'C') & (nation['N_COMMENT'] == 'i')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '25-') | (customer['C_PHONE'] != '2') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_PHONE'] == '3') & (customer['C_NATIONKEY'] < 9) & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_ACCTBAL'] > 4320.572294055414)][['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 17) & (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '27-')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') | (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_NATIONKEY'] > 7) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 'y') | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '27-') & (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] != 85) | (customer['C_COMMENT'].str.startswith('w'))].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] != '1') & (customer['C_NATIONKEY'] != 13) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] <= 10) | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NATIONKEY'] != 15)][['MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') | (customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'] == '8') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_ADDRESS', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] == 6) | (nation['N_COMMENT'].str.startswith('y')) & (nation['N_NATIONKEY'] < 19)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] < 13) | (customer['C_ADDRESS'] != 'c')][['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_NAME'] == 'J') | (nation['N_REGIONKEY'] == 2)].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'A') | (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_CUSTKEY'] != 13)][['C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_NAME'] == 'F')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] == 'C')][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'n')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_COMMENT'].str.startswith('t')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] != 'S') | (nation['N_NAME'] != 'R')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_ACCTBAL'] == 131.6818464685598) | (customer['C_CUSTKEY'] <= 2)][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'M')].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] != 'h') | (region['R_REGIONKEY'] == 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_ADDRESS'] == 'p') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] != 712.0590030802314)][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY'])) | (customer['C_NAME'] == 'C') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] > 25) & (customer['C_COMMENT'] == 'n') | (customer['C_ACCTBAL'] >= 3302.9543839983126) | (customer['C_CUSTKEY'] < 64) & (customer['C_ACCTBAL'] == 9298.906356149362)].merge(nation[(nation['N_NATIONKEY'] > 12) | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_COMMENT'] != 'e')].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_REGIONKEY'] <= 2)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[['C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] >= 23) & (nation['N_NATIONKEY'] >= 14) & (nation['N_NATIONKEY'] == 13)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'A')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 18) & (nation['N_COMMENT'] == 'v')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 5) & (nation['N_NATIONKEY'] < 15)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] == 335840.27359782765) | (orders['ORDERSTATUS'] != 'P')][['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE']].merge(customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == ' ')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_COMMENT']].merge(customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING']))][['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_REGIONKEY'] == 1) & (nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] < 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 806) & (partsupp['SUPPLYCOST'] == 258.2451810659969) & (partsupp['PS_SUPPKEY'] != 5159)].merge(part[(part['CONTAINER'] != 'WRAP') & (part['PT_COMMENT'] != 'b') & (part['CONTAINER'] != 'SM') & (part['P_PARTKEY'] >= 155) & (part['P_PARTKEY'] < 42) & (part['P_PARTKEY'] < 180) | (part['RETAILPRICE'] != 1037.5021565723036) | (part['RETAILPRICE'] >= 1041.8759338321358) | (part['SIZE'] < 25)][['TYPE', 'RETAILPRICE', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 158) & (partsupp['AVAILQTY'] <= 9603) | (partsupp['AVAILQTY'] > 1654) | (partsupp['PS_SUPPKEY'] == 5666) & (partsupp['AVAILQTY'] >= 608)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[['P_PARTKEY', 'TYPE', 'CONTAINER', 'RETAILPRICE', 'MFGR', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['PS_PARTKEY'] != 28) & (partsupp['SUPPLYCOST'] != 597.1757838887634)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 867.8886386603626) | (partsupp['PS_SUPPKEY'] <= 584) | (partsupp['SUPPLYCOST'] != 405.94293357723956) | (partsupp['PS_SUPPKEY'] >= 3729)].merge(part[(part['CONTAINER'] == 'MED') | (part['P_PARTKEY'] >= 185) | (part['RETAILPRICE'] != 1086.9791117588452) & (part['P_NAME'] == 'c')][['BRAND', 'P_NAME', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'PT_COMMENT', 'CONTAINER', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 729.3095160154671) & (partsupp['SUPPLYCOST'] <= 597.9906937607286) & (partsupp['PS_SUPPKEY'] >= 3371) & (partsupp['AVAILQTY'] >= 2651)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_NAME'] != 'R') & (nation['N_COMMENT'] != 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_COMMENT'] != 't') | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'u') & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.08642982666865395) & (lineitem['LINENUMBER'] > 2) & (lineitem['L_SUPPKEY'] >= 9384) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_PARTKEY'] == 1940) & (lineitem['QUANTITY'] < 48) & (lineitem['L_ORDERKEY'] <= 127) & (lineitem['SHIPMODE'] == 'AIR')][['EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'LINESTATUS', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'SHIPINSTRUCT', 'L_COMMENT', 'TAX']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 43) & (partsupp['PS_SUPPKEY'] <= 6397) & (partsupp['PS_SUPPKEY'] <= 3036)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['EXTENDEDPRICE'] != 87410.32595493564) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['QUANTITY'] >= 14) & (lineitem['COMMITDATE'] > '1998-10-16') | (lineitem['L_ORDERKEY'] >= 102) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN'])) & (lineitem['LINENUMBER'] <= 6)].merge(orders.merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 22545.50998103434) & (lineitem['LINESTATUS'] == 'F') & (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['EXTENDEDPRICE'] >= 29514.815818723622) | (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'r')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 71238.1221671128) & (lineitem['LINENUMBER'] != 4) & (lineitem['EXTENDEDPRICE'] > 13864.002437352863) | (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['LINENUMBER'] <= 6) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD'])) & (lineitem['QUANTITY'] != 32) & (lineitem['EXTENDEDPRICE'] == 32437.1969906131) & (lineitem['RETURNFLAG'] == 'N') | (lineitem['L_SUPPKEY'] != 8003)][['COMMITDATE', 'TAX', 'LINESTATUS', 'LINENUMBER', 'RETURNFLAG', 'L_ORDERKEY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPDATE']].groupby(by=['TAX', 'SHIPDATE', 'COMMITDATE', 'L_ORDERKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 93)].merge(partsupp[(partsupp['AVAILQTY'] > 4318)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'e') & (part['RETAILPRICE'] > 1097.8674654455795) & (part['RETAILPRICE'] == 1059.2970355983914) & (part['CONTAINER'] != 'JUMBO') | (part['TYPE'] == 'S') & (part['SIZE'] != 4) | (part['P_NAME'] == 'n') | (part['SIZE'] != 5)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_NAME', 'MFGR']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['RETURNFLAG'].isin(['R', 'N'])) | (lineitem['TAX'] == 0.037803076675486304) | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['TAX'] == 0.02228375059005007) | (lineitem['SHIPMODE'] != 'SHIP')][['EXTENDEDPRICE', 'QUANTITY', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'SHIPDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 243) | (partsupp['PS_SUPPKEY'] <= 4443) & (partsupp['SUPPLYCOST'] < 584.0427874611353)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'] != 'AIR')][['QUANTITY', 'TAX', 'SHIPDATE', 'L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] <= 4895)].merge(part[(part['P_NAME'] == 'k') | (part['BRAND'].isin(['Brand#11', 'Brand#55', 'Brand#13', 'Brand#22', 'Brand#21', 'Brand#23', 'Brand#32', 'Brand#41', 'Brand#45', 'Brand#44', 'Brand#54', 'Brand#12', 'Brand#34', 'Brand#14', 'Brand#43', 'Brand#25', 'Brand#33', 'Brand#52', 'Brand#35', 'Brand#53', 'Brand#51', 'Brand#31', 'Brand#42']))][['P_PARTKEY', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'RAIL') | (lineitem['TAX'] <= 0.045442297905510486) | (lineitem['QUANTITY'] != 43) & (lineitem['QUANTITY'] >= 21)][['L_ORDERKEY', 'DISCOUNT']].merge(orders[(orders['O_CUSTKEY'] == 97584) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) & (orders['O_ORDERKEY'] <= 608) | (orders['ORDERDATE'] < '1992-01-13')].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] != 0.05294947609487027) & (lineitem['SHIPMODE'] != 'MAIL') & (lineitem['LINENUMBER'] == 5) | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['TAX'] != 0.0496743166583143) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['EXTENDEDPRICE'] != 48508.71688680695)].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part[(part['PT_COMMENT'] == 't') | (part['P_NAME'] == 'y') & (part['TYPE'] == 'S') | (part['TYPE'] != 'SMA') & (part['P_PARTKEY'] == 173) & (part['TYPE'].str.startswith('S')) | (part['MFGR'] == 'Manufacturer#3') & (part['CONTAINER'].str.startswith('MED'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['TAX'] < 0.06844712013248475) & (lineitem['L_PARTKEY'] >= 161993) & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['SHIPDATE'] != '1998-10-30')][['LINENUMBER', 'LINESTATUS', 'TAX', 'L_COMMENT', 'RETURNFLAG', 'RECEIPTDATE', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPDATE', 'L_SUPPKEY', 'LINENUMBER', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 31.97963115990479) & (partsupp['PS_SUPPKEY'] != 4762) & (partsupp['AVAILQTY'] != 723) & (partsupp['P_COMMENT'] != 'p')].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'L_PARTKEY', 'SHIPMODE', 'SHIPDATE', 'RECEIPTDATE', 'TAX']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_PHONE', 'S_NAME']).agg('sum', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'RETURNFLAG', 'TAX', 'SHIPMODE', 'L_COMMENT', 'SHIPDATE', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['SUPPLYCOST'] < 396.92992743268) & (partsupp['P_COMMENT'] == 'q')][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPMODE']].merge(orders[(orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'L_SUPPKEY', 'DISCOUNT', 'L_PARTKEY', 'L_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['PS_SUPPKEY'] <= 7474) & (partsupp['AVAILQTY'] == 1556) | (partsupp['PS_PARTKEY'] >= 19) | (partsupp['PS_PARTKEY'] == 38)].merge(supplier.merge(nation[(nation['N_NAME'] != 'P') | (nation['N_COMMENT'] != 'c') | (nation['N_NATIONKEY'] < 5)][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'SHIPMODE', 'COMMITDATE', 'RECEIPTDATE', 'DISCOUNT', 'LINENUMBER', 'TAX', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_ADDRESS'].str.startswith('z')) & (customer['C_ADDRESS'] != 'x') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] <= 8972.911660763226) & (customer['C_COMMENT'] == ',') | (customer['C_NATIONKEY'] != 22)][['C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_ACCTBAL'] >= 9014.03610461303) | (customer['C_ACCTBAL'] >= 717.8657517307836) & (customer['C_PHONE'] == '2') | (customer['C_COMMENT'].str.startswith('d')) & (customer['C_ACCTBAL'] != -576.6944517744473)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_ACCTBAL', 'C_NAME']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'] != 'L') & (customer['C_COMMENT'] != 'p') & (customer['C_NATIONKEY'] <= 4) | (customer['C_ADDRESS'] != 'h') & (customer['C_ACCTBAL'] == 4525.933982320549) | (customer['MKTSEGMENT'].isin(['MACHINERY']))].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] >= 0) & (nation['N_NATIONKEY'] > 18)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] != 17) & (customer['C_ADDRESS'] == 'w')][['MKTSEGMENT', 'C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'] == 'p') & (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 23) & (nation['N_NAME'].str.startswith('J')) & (nation['N_NATIONKEY'] == 7) | (nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] >= 16) | (nation['N_COMMENT'].str.startswith('l')) & (nation['N_REGIONKEY'] != 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] != 'AME') & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] != 4) & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NAME'] != 'V')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 11) & (nation['N_COMMENT'] != 'l') | (nation['N_NATIONKEY'] == 19)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['O_COMMENT'] != 'w')].merge(customer[(customer['C_PHONE'] != '22-') & (customer['C_NAME'] != 'C')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['TOTALPRICE'] <= 66272.95352960381) & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] <= 17112.75457756239) & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_NATIONKEY'] == 5) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] >= 21)][['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] >= 3) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'] != 'F') & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_COMMENT'] != 'j') & (orders['O_COMMENT'].str.startswith('r')) & (orders['SHIPPRIORITY'] <= 0)].merge(customer[(customer['C_ADDRESS'] == 'l') & (customer['C_PHONE'] == '25-') & (customer['C_COMMENT'] != 'd') & (customer['C_NATIONKEY'] >= 6) | (customer['C_CUSTKEY'] < 46)][['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERSTATUS'].isin(['P'])) | (orders['CLERK'] == 'C') | (orders['O_COMMENT'] != 'e') | (orders['ORDERSTATUS'] != 'O') | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '1-URGENT', '2-HIGH'])) & (orders['O_CUSTKEY'] != 126079) | (orders['CLERK'] != 'C') | (orders['O_COMMENT'].str.startswith('b'))].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_CUSTKEY'] >= 60) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 194.14495878692605)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 59952) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_COMMENT'].str.startswith('z')) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] > 296) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_COMMENT'].str.startswith('d')) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P']))][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'C_PHONE']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 287) | (orders['O_COMMENT'] != 'uri') | (orders['O_ORDERKEY'] >= 781) | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['O_CUSTKEY'] > 116596) & (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] >= 4175)].merge(customer[(customer['C_ACCTBAL'] >= 9911.213647415869)][['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'].str.startswith('S'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] == 317833.24022540764) | (orders['O_ORDERKEY'] == 600) | (orders['O_CUSTKEY'] <= 110642) & (orders['TOTALPRICE'] < 250970.45756571667) & (orders['TOTALPRICE'] <= 131571.98654193716)].merge(customer[(customer['C_ACCTBAL'] < 8383.80778292705) & (customer['C_NATIONKEY'] <= 14) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_NATIONKEY'] >= 17) | (customer['C_COMMENT'].str.startswith('w'))].merge(nation[(nation['N_NATIONKEY'] != 7) & (nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] != 14)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] != 27480.75951020004)].merge(customer[(customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'FURNITURE', 'MACHINERY'])) & (customer['C_NATIONKEY'] < 22)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['TOTALPRICE'] == 211399.49228122065) & (orders['O_COMMENT'].str.startswith('f')) | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] >= 134022.34228111082) | (orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] == 190046.8977291777)].merge(customer[(customer['C_ACCTBAL'] < 7120.506855987456) | (customer['C_ACCTBAL'] == 2396.8186610006114)][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] >= 233264.41269739342) & (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] == 535) & (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] == 334)][['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] != 1) & (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] <= 11) | (customer['C_ACCTBAL'] >= 6743.867604901589)][['C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] != 12) & (customer['C_NATIONKEY'] != 20) & (customer['C_ACCTBAL'] >= 9859.41560548188)].merge(nation[(nation['N_NATIONKEY'] != 15)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] < 18) | (nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] != 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] <= 8732.562220157775) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('0')) | (customer['C_CUSTKEY'] <= 50) & (customer['C_ACCTBAL'] > 2786.9418655913514) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY'])) | (customer['C_PHONE'].str.startswith('27-'))][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'MKTSEGMENT']).agg('count')

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_NATIONKEY'] == 18)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 16) & (supplier['S_ADDRESS'].str.startswith('M')) & (supplier['S_ACCTBAL'] < 9577.57152512253)][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'K') | (nation['N_NATIONKEY'] != 19)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 149) | (supplier['S_ADDRESS'].str.startswith('t')) & (supplier['S_SUPPKEY'] != 2) | (supplier['S_ADDRESS'] == 'F') & (supplier['S_ADDRESS'] == 'N')][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp.merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] == 1) | (nation['N_NAME'] == 'U')].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 4156) & (partsupp['AVAILQTY'] < 2322) & (partsupp['PS_SUPPKEY'] > 1340)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 1686) & (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['PS_PARTKEY'] >= 27)].merge(part[(part['P_NAME'] == 'p') | (part['SIZE'] > 46) | (part['P_PARTKEY'] == 63) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['TYPE'] != 'P') | (part['SIZE'] >= 16) & (part['SIZE'] >= 42) & (part['BRAND'] == 'Brand#41') | (part['BRAND'] != 'Brand#21')][['P_NAME', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 9372) & (partsupp['PS_SUPPKEY'] != 5546) | (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['P_COMMENT'] == 'g')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['MFGR'] == 'Manufacturer#4') | (part['BRAND'].isin(['Brand#54', 'Brand#14', 'Brand#51', 'Brand#25', 'Brand#52', 'Brand#33', 'Brand#44', 'Brand#31', 'Brand#45', 'Brand#15', 'Brand#23', 'Brand#12', 'Brand#34', 'Brand#22', 'Brand#53', 'Brand#43', 'Brand#32', 'Brand#11'])) & (part['BRAND'] == 'Brand#44') & (part['RETAILPRICE'] >= 926.3331783360044) & (part['P_PARTKEY'] > 180)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 5) & (partsupp['PS_SUPPKEY'] == 3514)].merge(supplier[(supplier['S_ACCTBAL'] != -905.7889183314993) | (supplier['S_ADDRESS'] == 'e') | (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] != '2')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] == 11) | (partsupp['AVAILQTY'] == 7797) & (partsupp['PS_SUPPKEY'] == 529) | (partsupp['PS_SUPPKEY'] > 5967) | (partsupp['AVAILQTY'] <= 4059)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 26) | (partsupp['P_COMMENT'] == 'k') & (partsupp['SUPPLYCOST'] != 983.3694032956766)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] == 27) & (part['BRAND'] != 'Brand#21') | (part['BRAND'].isin(['Brand#25', 'Brand#54', 'Brand#23', 'Brand#14', 'Brand#53', 'Brand#55', 'Brand#13', 'Brand#15', 'Brand#43', 'Brand#35', 'Brand#32', 'Brand#22', 'Brand#21', 'Brand#44', 'Brand#45', 'Brand#52', 'Brand#33', 'Brand#11', 'Brand#41', 'Brand#42', 'Brand#31', 'Brand#51', 'Brand#12'])) & (part['BRAND'].isin(['Brand#32', 'Brand#21', 'Brand#15', 'Brand#42', 'Brand#11'])) & (part['BRAND'] != 'Brand#21') | (part['P_PARTKEY'] > 64) | (part['MFGR'] == 'Manufacturer#5') & (part['P_PARTKEY'] == 199) | (part['TYPE'] != 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'P_NAME', 'RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 26)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_PARTKEY'] != 130) & (part['RETAILPRICE'] != 977.6552844952723) | (part['BRAND'] == 'Brand#11')][['CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'BRAND', 'CONTAINER', 'SIZE']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 35)].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] == 4943.8671634427055) & (supplier['S_PHONE'] == '26-') | (supplier['S_ACCTBAL'] <= 9361.129043718021) | (supplier['S_PHONE'] != '17-') | (supplier['S_NATIONKEY'] < 21)][['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('c'))].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 2617)].merge(part[(part['RETAILPRICE'] != 1050.0911268529783) & (part['CONTAINER'] != 'JUMBO') | (part['BRAND'] == 'Brand#14') & (part['BRAND'] != 'Brand#53') & (part['RETAILPRICE'] >= 1084.164880367295) | (part['P_NAME'] == 't') & (part['RETAILPRICE'] != 958.3019125617703)][['P_PARTKEY', 'CONTAINER', 'MFGR', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'PT_COMMENT', 'CONTAINER', 'BRAND', 'MFGR']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] <= 3740) | (partsupp['PS_PARTKEY'] < 4) | (partsupp['PS_SUPPKEY'] != 3546) & (partsupp['PS_SUPPKEY'] <= 669) | (partsupp['SUPPLYCOST'] == 331.84850107430606)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] < 2) & (nation['N_NATIONKEY'] == 21) & (nation['N_NATIONKEY'] >= 20)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] > 5431)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 3144) | (partsupp['PS_PARTKEY'] != 44) & (partsupp['PS_SUPPKEY'] <= 2839) & (partsupp['PS_PARTKEY'] != 21) | (partsupp['PS_SUPPKEY'] != 2807)][['PS_PARTKEY']].merge(part[['BRAND', 'RETAILPRICE', 'P_NAME', 'MFGR', 'PT_COMMENT', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR', 'P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != ';') & (partsupp['PS_SUPPKEY'] > 2287) | (partsupp['AVAILQTY'] == 4335)].merge(supplier[(supplier['S_SUPPKEY'] == 13) & (supplier['S_ACCTBAL'] == 6062.745404413382)][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] < 750.1093878362539) & (partsupp['SUPPLYCOST'] <= 993.8977021211982) & (partsupp['P_COMMENT'] == 's') | (partsupp['AVAILQTY'] < 6992) & (partsupp['AVAILQTY'] < 1397)].merge(supplier[(supplier['S_NATIONKEY'] != 0) | (supplier['S_PHONE'] == '2')].merge(nation[(nation['N_COMMENT'] == 'v')].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 702.1131775613352) | (partsupp['PS_PARTKEY'] <= 5) & (partsupp['PS_PARTKEY'] != 46) | (partsupp['P_COMMENT'] != ';')][['PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] >= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 858.9607160166307) & (partsupp['SUPPLYCOST'] > 958.0804637037592) | (partsupp['SUPPLYCOST'] < 537.6699845077916) | (partsupp['P_COMMENT'] != ' th') & (partsupp['PS_SUPPKEY'] >= 5208)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('x')) & (supplier['S_NATIONKEY'] > 13) | (supplier['S_ADDRESS'] == 'j') & (supplier['S_SUPPKEY'] == 74) & (supplier['S_SUPPKEY'] > 14) & (supplier['S_COMMENT'] == 'k') | (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_NATIONKEY'] > 11) | (nation['N_NAME'] != 'I')].merge(region[(region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 876.066510485841) | (partsupp['SUPPLYCOST'] > 633.9424561863465) | (partsupp['P_COMMENT'] == 'g') & (partsupp['AVAILQTY'] >= 2918) & (partsupp['P_COMMENT'] == 'h')].merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'].str.startswith('1'))].merge(nation[(nation['N_NATIONKEY'] < 6)].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('d')) | (part['SIZE'] < 47) & (part['MFGR'] != 'Manufacturer#1')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'CONTAINER']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 1335.5145087511294) & (supplier['S_NATIONKEY'] == 8) & (supplier['S_ADDRESS'] == 'q') | (supplier['S_NATIONKEY'] != 10) | (supplier['S_SUPPKEY'] != 96) | (supplier['S_COMMENT'] != 'e') & (supplier['S_ADDRESS'].str.startswith('i'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] != 's') | (supplier['S_ACCTBAL'] >= 5516.373747050152)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] == 20) & (supplier['S_NAME'].str.startswith('S'))].merge(nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] >= 12) | (supplier['S_COMMENT'] == ' ')][['S_NATIONKEY', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 5)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] == 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_ACCTBAL'] <= 1657.2720503271728) | (supplier['S_ACCTBAL'] < 9669.617724784423) | (supplier['S_ADDRESS'] != 'c') | (supplier['S_ACCTBAL'] < 5848.2978586551835) & (supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_PHONE'].str.startswith('17-'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '3') | (supplier['S_ADDRESS'] != 'k') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('es ')) & (supplier['S_COMMENT'] == ',')].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NAME'] == 'R') | (nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('s')) | (supplier['S_ADDRESS'] == 'E')][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

supplier[(supplier['S_COMMENT'] != 'h') & (supplier['S_SUPPKEY'] < 76) & (supplier['S_PHONE'] == '14-') | (supplier['S_COMMENT'].str.startswith(',')) | (supplier['S_ACCTBAL'] == 4198.834275025624) & (supplier['S_PHONE'] == '2') | (supplier['S_NATIONKEY'] <= 3)][['S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 2) & (nation['N_REGIONKEY'] == 2) & (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

supplier[(supplier['S_COMMENT'] != 'i') | (supplier['S_ACCTBAL'] >= 7219.444918730972) & (supplier['S_COMMENT'] == 'l') & (supplier['S_ACCTBAL'] >= 1959.5325079295237) & (supplier['S_ACCTBAL'] <= 5164.962577743854) & (supplier['S_NAME'].str.startswith('S'))].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] > 1) | (nation['N_COMMENT'].str.startswith('s')) & (nation['N_NAME'] == 'G')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 7526.87710652286) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('a')) | (supplier['S_COMMENT'].str.startswith(' '))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3) & (region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_PHONE'].str.startswith('1')) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] < 3) | (supplier['S_NATIONKEY'] <= 9) | (supplier['S_SUPPKEY'] <= 179)][['S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_NATIONKEY'] <= 21) | (nation['N_NATIONKEY'] <= 21) | (nation['N_COMMENT'].str.startswith(' '))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('32-'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 155) & (supplier['S_COMMENT'].str.startswith('o')) & (supplier['S_ADDRESS'] != 'P') | (supplier['S_ACCTBAL'] == 8282.663937784448) & (supplier['S_ADDRESS'] != 'a') | (supplier['S_COMMENT'] == 'i') | (supplier['S_PHONE'] == '32-')].merge(nation[(nation['N_NATIONKEY'] >= 15) & (nation['N_NAME'] != 'B')].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] != 'A') & (nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[['S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_COMMENT'] == 'c') | (nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'r') | (nation['N_NAME'] != 'V')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[['S_NATIONKEY', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] > 15)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'l') & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_CUSTKEY'] >= 11) | (customer['C_ADDRESS'] == 'I') & (customer['C_ADDRESS'] != 'h') & (customer['C_CUSTKEY'] >= 38) & (customer['C_COMMENT'] != 'q')][['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'].str.startswith('P')) & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == -527.5440455218313) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_PHONE'] == '25-') & (customer['C_NATIONKEY'] > 19) & (customer['C_COMMENT'] != 'o') & (customer['C_ACCTBAL'] >= 3806.812223266298)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'p') & (customer['C_ADDRESS'].str.startswith('7')) | (customer['C_CUSTKEY'] <= 93)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) & (nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] <= 18) & (customer['C_NATIONKEY'] > 22)].merge(nation[(nation['N_NATIONKEY'] < 8) & (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'].str.startswith('r'))][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 58) | (customer['C_PHONE'] == '3') | (customer['C_NAME'].str.startswith('C')) & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] <= 76) | (customer['C_COMMENT'] == 'a') | (customer['C_ACCTBAL'] <= 2520.11464589184) | (customer['C_COMMENT'] != ' ')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] < 18) & (nation['N_NATIONKEY'] <= 5) | (nation['N_NATIONKEY'] < 22)].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 4) & (customer['C_NAME'] != 'C') & (customer['C_CUSTKEY'] > 91) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] != 22)][['C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] == '3') | (customer['C_NAME'] == 'C') & (customer['C_PHONE'].str.startswith('2'))][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_REGIONKEY'] > 1) | (region['R_NAME'].str.startswith('A'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('18-')) & (customer['C_ADDRESS'] != 'f') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_ADDRESS'].str.startswith(',')) | (customer['C_CUSTKEY'] >= 96)][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_NATIONKEY'] == 15) | (customer['C_NATIONKEY'] <= 16) & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'] != 'n') | (customer['C_ACCTBAL'] >= 9633.957214035076) | (customer['C_NATIONKEY'] <= 7) | (customer['C_ACCTBAL'] == 3119.819868970166)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] < 9) | (nation['N_COMMENT'] == 'p')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('L')) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] >= 9303.924755723807) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] >= 9739.304971030406) | (customer['MKTSEGMENT'] != 'MACHINERY')][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['C_ACCTBAL'] < 95.51902515125835) & (customer['C_COMMENT'] == 's') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_COMMENT'] != 'i')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] == 17)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] == 395) | (partsupp['PS_PARTKEY'] > 37)].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_NAME'] != 'F') & (nation['N_NATIONKEY'] >= 17)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'r')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['L_ORDERKEY'] == 84) & (lineitem['SHIPMODE'] == 'MAIL') & (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['QUANTITY'] > 29) & (lineitem['L_COMMENT'] != 'n')][['SHIPINSTRUCT', 'L_SUPPKEY', 'RECEIPTDATE', 'EXTENDEDPRICE', 'RETURNFLAG', 'QUANTITY', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] < 9598)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.09348254012388846) & (lineitem['QUANTITY'] == 4) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['DISCOUNT'] > 0.04635328443080769) & (lineitem['RETURNFLAG'] == 'A') & (lineitem['EXTENDEDPRICE'] != 14486.620495346076)].merge(orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] != 'o') | (orders['TOTALPRICE'] == 244950.549393097) & (orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['O_CUSTKEY'] == 28312)][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'] == 'RAIL') | (lineitem['L_PARTKEY'] <= 1571) & (lineitem['DISCOUNT'] >= 0.020150734851903208) & (lineitem['L_COMMENT'] == 'v') | (lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] <= 18) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPMODE'] == 'SHIP')].merge(partsupp[(partsupp['PS_PARTKEY'] == 41) | (partsupp['PS_PARTKEY'] >= 28) & (partsupp['PS_SUPPKEY'] != 6147) & (partsupp['AVAILQTY'] == 5613)].merge(supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('a')) & (lineitem['COMMITDATE'] <= '1992-05-15')][['SHIPINSTRUCT', 'COMMITDATE', 'L_SUPPKEY', 'L_ORDERKEY']].merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED'])) & (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['O_CUSTKEY'] >= 13355) | (orders['O_COMMENT'] != '-') & (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_CUSTKEY'] < 70281)][['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('lit')) & (lineitem['L_ORDERKEY'] <= 118)].merge(orders[(orders['ORDERSTATUS'] != 'O')].merge(customer.merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] >= 23) | (nation['N_NAME'] != 'I') | (nation['N_COMMENT'] != ' ')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 39) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['L_SUPPKEY', 'SHIPMODE']].merge(partsupp[(partsupp['P_COMMENT'] != 'a') & (partsupp['SUPPLYCOST'] >= 622.5342408049859) & (partsupp['SUPPLYCOST'] <= 790.6691618778839)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] >= 114) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['TAX'] <= 0.06233193518691182) | (lineitem['TAX'] > 0.05377556787565745)][['L_ORDERKEY', 'DISCOUNT', 'TAX', 'LINENUMBER']].merge(orders[(orders['O_ORDERKEY'] > 645) & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'] == 'c') & (customer['C_ACCTBAL'] >= 9814.450743846131)][['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] <= 28) & (lineitem['TAX'] == 0.011941881667351373) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_SUPPKEY'] == 9030)].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL']].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] <= 4) & (lineitem['SHIPMODE'].isin(['AIR', 'SHIP', 'TRUCK', 'REG AIR', 'MAIL', 'RAIL', 'FOB'])) | (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['RETURNFLAG'] == 'N')][['COMMITDATE', 'DISCOUNT', 'L_COMMENT', 'RECEIPTDATE', 'L_ORDERKEY']].merge(orders[(orders['O_CUSTKEY'] != 67508) | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT']))][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02')][['SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'LINESTATUS', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != 'A') & (lineitem['L_SUPPKEY'] == 9517) & (lineitem['L_PARTKEY'] == 80587) & (lineitem['L_PARTKEY'] == 65449) & (lineitem['EXTENDEDPRICE'] <= 49623.09619273198)][['SHIPDATE', 'COMMITDATE', 'L_COMMENT', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'LINENUMBER', 'QUANTITY']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['TYPE'] == 'S') & (part['P_NAME'] != 't')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'R') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['QUANTITY'] <= 19)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 772) | (partsupp['P_COMMENT'] == 't')][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] == 'WRAP')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'P_NAME', 'MFGR', 'TYPE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['EXTENDEDPRICE'] != 61649.87373494744) & (lineitem['L_ORDERKEY'] <= 108) & (lineitem['QUANTITY'] == 13) | (lineitem['LINESTATUS'].isin(['F', 'O']))].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2870)].merge(part[['BRAND', 'MFGR', 'RETAILPRICE', 'P_PARTKEY', 'TYPE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] == 0.07415519195773128) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_COMMENT'].str.startswith('n')) & (lineitem['L_SUPPKEY'] > 1800) & (lineitem['LINESTATUS'] != 'O') & (lineitem['EXTENDEDPRICE'] < 37646.30514204767) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['COMMITDATE'] > '1998-10-16')][['L_PARTKEY', 'TAX', 'LINESTATUS', 'L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE', 'QUANTITY']].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'COMMITDATE', 'DISCOUNT', 'RECEIPTDATE', 'EXTENDEDPRICE', 'L_COMMENT']].merge(partsupp.merge(part[(part['TYPE'].str.startswith('E')) | (part['P_NAME'].str.startswith('w')) | (part['P_NAME'] != 'lin') | (part['RETAILPRICE'] <= 1060.2562856630161) & (part['P_PARTKEY'] == 170) & (part['P_NAME'] != 'g') | (part['P_PARTKEY'] == 13) | (part['BRAND'] == 'Brand#13') | (part['SIZE'] <= 3)][['P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['L_SUPPKEY', 'L_PARTKEY', 'SHIPMODE', 'COMMITDATE']].merge(partsupp.merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'l') & (supplier['S_SUPPKEY'] != 66)][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['TAX', 'SHIPMODE', 'L_COMMENT', 'LINENUMBER', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 3595) | (partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['AVAILQTY'] != 2684) & (partsupp['SUPPLYCOST'] != 868.6971915813111) | (partsupp['PS_SUPPKEY'] >= 562)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer[(customer['C_PHONE'] == '1') & (customer['C_CUSTKEY'] > 32) & (customer['C_ADDRESS'] != 'q') & (customer['C_NATIONKEY'] == 1) | (customer['C_ADDRESS'] != '0') & (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] < 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] > 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] > 111) & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_CUSTKEY'] == 140096) | (orders['ORDERSTATUS'].isin(['F']))].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'] == 'O') | (orders['O_COMMENT'] == 'b')][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_CUSTKEY'] <= 98) | (customer['C_NATIONKEY'] == 3) & (customer['C_NAME'] == 'C')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] != 122379) & (orders['TOTALPRICE'] != 348082.13193840295) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['P', 'F'])) & (orders['O_COMMENT'].str.startswith('j'))][['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ACCTBAL'] <= 5257.167251620475) & (customer['C_PHONE'].str.startswith('25-')) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'] != 'MACHINERY') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] > 59956)][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 17)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] <= '1998-07-21') & (orders['O_COMMENT'].str.startswith('r')) & (orders['O_CUSTKEY'] != 116811) & (orders['O_COMMENT'] != 'i') & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] <= 281655.04585569544)][['ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_ORDERKEY'] == 712) & (orders['TOTALPRICE'] > 234392.25804089903) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] >= 354) & (orders['O_COMMENT'] != 'w') & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] != 0)].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'] == 'c') | (nation['N_COMMENT'] == 't') & (nation['N_NAME'].str.startswith('C'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') | (orders['ORDERDATE'] != '1998-07-21') | (orders['TOTALPRICE'] == 61961.61714014814) | (orders['ORDERDATE'] == '1992-01-13') & (orders['O_CUSTKEY'] == 56218) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] >= 775)][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'i') & (orders['O_COMMENT'] != 'b')].merge(customer.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] != 'u')][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] == 'D') & (customer['C_ACCTBAL'] != 2007.4733257279645) & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] == 'U') & (customer['C_CUSTKEY'] > 21)][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS']).agg('count')

orders[(orders['O_COMMENT'].str.startswith('x')) & (orders['O_CUSTKEY'] <= 11891) & (orders['ORDERSTATUS'].isin(['O', 'F'])) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM'])) & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] < 299319.7152491532) | (orders['O_COMMENT'] != 'u') & (orders['CLERK'].str.startswith('C'))].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('E'))].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] != 143971) | (orders['O_CUSTKEY'] != 22549)].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 23) & (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 136084) & (orders['O_ORDERKEY'] > 766) & (orders['TOTALPRICE'] >= 61805.463187631234) | (orders['ORDERPRIORITY'] == '2-HIGH')].merge(customer[(customer['C_ACCTBAL'] < 5590.67691951904) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 3956.108405103272) | (customer['C_ACCTBAL'] != 7236.078484138419) | (customer['C_PHONE'].str.startswith('2'))][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] > 13514) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] < '1998-07-21')].merge(customer[(customer['C_ACCTBAL'] < 9444.600457787614) & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] < 2) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD']))][['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 65) | (orders['TOTALPRICE'] < 275427.65470278845)].merge(customer[(customer['C_COMMENT'] != 'y') & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] == 'r')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 15) | (nation['N_REGIONKEY'] != 2) | (nation['N_REGIONKEY'] > 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 264) & (orders['ORDERDATE'] == '1998-07-21') | (orders['O_COMMENT'].str.startswith('s')) & (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] < 0) | (orders['CLERK'].str.startswith('C'))].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C') & (orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH'])) & (orders['O_CUSTKEY'] == 9068) & (orders['TOTALPRICE'] != 24990.36312139772) | (orders['O_COMMENT'] == 'ly ') & (orders['ORDERDATE'] <= '1992-01-13')][['O_CUSTKEY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 179583.73145338031) & (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] > 132) | (orders['O_COMMENT'] != 'w')][['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 47897.111832800954) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'].str.startswith('k')) & (orders['SHIPPRIORITY'] <= 0) & (orders['O_CUSTKEY'] < 129861)].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_NATIONKEY'] >= 8)].merge(nation[(nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] < 23) & (nation['N_NAME'] != 'A') | (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] > 224998.01746832236) & (orders['TOTALPRICE'] < 324460.66998228896)].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['TOTALPRICE'] >= 132693.43190055192) & (orders['O_CUSTKEY'] < 19483)].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] > 11) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] != 3) & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] <= 5615.040126822313) & (customer['C_CUSTKEY'] == 64) | (customer['C_ACCTBAL'] <= 4745.496777594837)].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_NATIONKEY'] >= 10)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] != 'c') & (customer['C_CUSTKEY'] == 91) | (customer['C_ADDRESS'] == '9') | (customer['C_CUSTKEY'] != 5) | (customer['C_ACCTBAL'] <= 9619.265890208564) & (customer['C_PHONE'].str.startswith('25-'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] != 'n') & (customer['C_PHONE'] == '1') | (customer['C_ADDRESS'] != 'p') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 5) & (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] <= 50)].merge(nation[(nation['N_REGIONKEY'] == 1) & (nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] != 'l')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_ADDRESS'] != 'm') | (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '3')].merge(nation[(nation['N_NATIONKEY'] <= 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('n')) | (customer['C_NATIONKEY'] <= 15) & (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_NAME'].str.startswith('M'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] == 'v') & (supplier['S_ADDRESS'] == 'N') & (supplier['S_ADDRESS'].str.startswith('W')) & (supplier['S_ACCTBAL'] < 5495.849610009938) | (supplier['S_NATIONKEY'] > 21) | (supplier['S_ACCTBAL'] != 3514.3056591085906)].merge(nation[(nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] <= 1)].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 122) & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] > 9) & (supplier['S_PHONE'] == '32-') & (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] <= 14) | (supplier['S_ADDRESS'] != 'Z')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

partsupp[(partsupp['AVAILQTY'] != 2549) & (partsupp['PS_SUPPKEY'] != 2410) & (partsupp['SUPPLYCOST'] == 403.36616228964346) & (partsupp['SUPPLYCOST'] >= 559.1301081962971) & (partsupp['PS_PARTKEY'] == 40)][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] != 7245) | (partsupp['AVAILQTY'] <= 541) & (partsupp['PS_SUPPKEY'] > 3112) & (partsupp['SUPPLYCOST'] != 26.3450540375795) | (partsupp['PS_SUPPKEY'] >= 280)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 419) | (partsupp['AVAILQTY'] >= 7020) | (partsupp['PS_PARTKEY'] != 48) | (partsupp['SUPPLYCOST'] == 257.8696131437952) & (partsupp['P_COMMENT'].str.startswith('t'))].merge(supplier[(supplier['S_ACCTBAL'] >= 529.3418827043533) | (supplier['S_PHONE'] != '3') | (supplier['S_ADDRESS'].str.startswith('Q')) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] == 3905.4430273450716)].merge(nation[(nation['N_NAME'] != 'K')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 23) | (partsupp['PS_SUPPKEY'] != 4319)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_NATIONKEY'] <= 22) & (supplier['S_ADDRESS'] == 'Z') & (supplier['S_NATIONKEY'] > 12) | (supplier['S_SUPPKEY'] == 190) & (supplier['S_ACCTBAL'] < 7882.467152245642) | (supplier['S_ACCTBAL'] > 3512.644437927047)].merge(nation[(nation['N_NAME'] != 'U')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 9) & (partsupp['PS_PARTKEY'] > 19) & (partsupp['PS_SUPPKEY'] == 5780)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] != 'n') | (supplier['S_PHONE'] == '2') | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 154) | (supplier['S_SUPPKEY'] != 30)].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 26) & (partsupp['PS_PARTKEY'] < 34) & (partsupp['SUPPLYCOST'] == 337.3059216859421)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 7) & (partsupp['PS_SUPPKEY'] <= 228)].merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] != 2274) & (partsupp['PS_PARTKEY'] < 48) & (partsupp['P_COMMENT'] == ' ') | (partsupp['AVAILQTY'] != 7075)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_SUPPKEY'] == 152) & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_NAME'] == 'S')].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 4199) | (partsupp['PS_PARTKEY'] > 44)].merge(supplier[(supplier['S_NATIONKEY'] != 1) & (supplier['S_SUPPKEY'] != 194) | (supplier['S_ACCTBAL'] > 9723.197391695592) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] < 9) | (nation['N_REGIONKEY'] != 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] <= 1) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'a')].merge(supplier[(supplier['S_ACCTBAL'] < 495.79643224950655) & (supplier['S_ADDRESS'] != 'D') | (supplier['S_PHONE'] != '32-') | (supplier['S_ADDRESS'] == 'C') | (supplier['S_NATIONKEY'] == 9) | (supplier['S_ACCTBAL'] > -546.0379746612327)].merge(nation[(nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'r') | (partsupp['PS_SUPPKEY'] <= 6366) & (partsupp['P_COMMENT'] == 'bli') | (partsupp['PS_PARTKEY'] >= 33) & (partsupp['AVAILQTY'] >= 2431)].merge(supplier[['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 23)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['SUPPLYCOST'] == 488.2458796550171) | (partsupp['PS_PARTKEY'] == 19) | (partsupp['SUPPLYCOST'] > 469.8191989694168) | (partsupp['AVAILQTY'] >= 6966)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 939.6738121728839) & (partsupp['PS_PARTKEY'] > 34) | (partsupp['PS_SUPPKEY'] <= 1549) & (partsupp['AVAILQTY'] < 3485)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['PS_PARTKEY']].merge(part[(part['P_PARTKEY'] > 139) & (part['CONTAINER'] == 'JUMBO') | (part['RETAILPRICE'] != 1047.3554398929189) & (part['PT_COMMENT'] != 'x') | (part['P_PARTKEY'] >= 74) & (part['P_PARTKEY'] == 32)][['P_PARTKEY', 'MFGR', 'BRAND', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'RETAILPRICE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_NAME', 'RETAILPRICE', 'TYPE', 'SIZE']).agg('count')

partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('L')) & (supplier['S_SUPPKEY'] == 101) & (supplier['S_ACCTBAL'] < 7585.080556396232) & (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'].str.startswith('v')) | (supplier['S_NATIONKEY'] >= 3)][['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'F')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] <= 961.1840809655421) & (supplier['S_ADDRESS'] != 'a') & (supplier['S_NATIONKEY'] >= 8) & (supplier['S_ACCTBAL'] != 6623.990217935703) & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'e') & (supplier['S_ACCTBAL'] >= 967.5022421213823)][['S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'y') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] != 16) & (supplier['S_COMMENT'] == 'bli')].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'].str.startswith('t')) | (supplier['S_COMMENT'] != 'i') & (supplier['S_SUPPKEY'] < 153) & (supplier['S_SUPPKEY'] != 75) | (supplier['S_ADDRESS'] == 't') & (supplier['S_ACCTBAL'] <= 2645.8625353887155)][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_SUPPKEY']].merge(nation.merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 1)][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 11) | (supplier['S_SUPPKEY'] <= 197) | (supplier['S_SUPPKEY'] != 32) & (supplier['S_PHONE'] != '28-') | (supplier['S_ADDRESS'] != '5')].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'V')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'E') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] < 15) | (supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_NATIONKEY'] > 8) & (supplier['S_ADDRESS'] != '1') | (supplier['S_COMMENT'] == 'i') & (supplier['S_ADDRESS'].str.startswith('d'))].merge(nation[(nation['N_NATIONKEY'] != 21) & (nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] > 23)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] <= 1) & (supplier['S_COMMENT'] == 'the')][['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

supplier[(supplier['S_PHONE'] != '14-') | (supplier['S_COMMENT'] == 't') & (supplier['S_PHONE'] != '1')][['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '28-') & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'] != '!') & (supplier['S_NATIONKEY'] != 23) | (supplier['S_NATIONKEY'] <= 16) | (supplier['S_COMMENT'] == 'bli')].merge(nation[(nation['N_NATIONKEY'] >= 11)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 164) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 14) | (supplier['S_PHONE'] == '28-') | (supplier['S_NATIONKEY'] > 11) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_ADDRESS'] != 'a')].merge(nation[(nation['N_NAME'].str.startswith('B')) & (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 34) & (supplier['S_COMMENT'].str.startswith('d')) & (supplier['S_NATIONKEY'] >= 20) & (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ACCTBAL'] == 9047.627457295916) & (supplier['S_COMMENT'].str.startswith('es '))][['S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 14) & (nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

supplier[['S_NAME', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'u')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] >= 9902.171931356632) & (customer['C_ADDRESS'].str.startswith('e')) | (customer['C_ACCTBAL'] == 2259.98232287131) & (customer['C_CUSTKEY'] < 77) | (customer['C_CUSTKEY'] == 80) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] > 6)][['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'] != 't')][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 45) & (customer['C_ADDRESS'].str.startswith('0')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_ACCTBAL'] < 7438.304852677613) | (customer['C_ACCTBAL'] < 3239.9524776440194) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_COMMENT'] != 'r') & (customer['C_PHONE'].str.startswith('13-'))][['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 14) | (customer['C_NATIONKEY'] < 16) | (customer['C_COMMENT'] == 'u') | (customer['C_ACCTBAL'] >= 1577.0736701373612) & (customer['C_NATIONKEY'] != 0) & (customer['C_COMMENT'] == '.') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] > 23)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('l')) | (customer['C_PHONE'] == '3') | (customer['C_CUSTKEY'] != 87) | (customer['C_ADDRESS'].str.startswith('v')) & (customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] != 6) & (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] != '3') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] != 1) | (customer['C_NAME'] == 'C') | (customer['C_ADDRESS'] == 'd') & (customer['C_NATIONKEY'] <= 15) & (customer['C_COMMENT'] == 'o')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'A') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] == 8) | (customer['C_COMMENT'].str.startswith('l')) & (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C'))][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'] != '13-') | (customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'].str.startswith('P')) | (customer['C_CUSTKEY'] > 36)][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 't')].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] <= 1) & (region['R_REGIONKEY'] <= 2)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem.merge(orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['O_ORDERKEY'] < 190)].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) & (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] == 24137) | (orders['TOTALPRICE'] != 306854.7426223775)][['O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] < 38) & (partsupp['AVAILQTY'] <= 9628)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 970.8608978838301) | (part['CONTAINER'] == 'LG') & (part['TYPE'] != 'L') | (part['SIZE'] < 22) | (part['PT_COMMENT'] != 'q') & (part['P_PARTKEY'] < 114) | (part['PT_COMMENT'].str.startswith('d')) | (part['P_PARTKEY'] > 158)][['BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'are') & (partsupp['SUPPLYCOST'] >= 662.5155973025805) & (partsupp['PS_SUPPKEY'] != 970) & (partsupp['PS_SUPPKEY'] <= 3891)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] != 6552.427849359259) & (supplier['S_COMMENT'] == 'r') & (supplier['S_SUPPKEY'] >= 119) & (supplier['S_ACCTBAL'] >= 7809.771289527981) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '2')][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.0833386598916325) | (lineitem['QUANTITY'] < 3) & (lineitem['RETURNFLAG'] != 'R') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['SHIPINSTRUCT'].isin(['NONE'])) & (lineitem['L_SUPPKEY'] >= 8478)][['SHIPINSTRUCT', 'L_SUPPKEY', 'SHIPMODE', 'QUANTITY', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] < 85374.25027288136) & (lineitem['LINENUMBER'] >= 5) & (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['L_COMMENT'] != 'v') & (lineitem['L_COMMENT'] == 'n') & (lineitem['L_SUPPKEY'] != 9846) | (lineitem['EXTENDEDPRICE'] != 36967.46990251734) | (lineitem['L_SUPPKEY'] != 4232) & (lineitem['RETURNFLAG'] != 'A')][['LINENUMBER', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'RETURNFLAG', 'SHIPDATE', 'COMMITDATE', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 46)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 6) | (lineitem['QUANTITY'] > 34) | (lineitem['L_SUPPKEY'] != 9434) & (lineitem['DISCOUNT'] != 0.0418298117299771) & (lineitem['L_ORDERKEY'] == 160) & (lineitem['DISCOUNT'] == 0.08988335574134088) & (lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['LINENUMBER'] >= 6)][['RETURNFLAG', 'L_PARTKEY', 'TAX']].merge(partsupp[(partsupp['AVAILQTY'] > 6604) | (partsupp['P_COMMENT'] != 'n') | (partsupp['PS_SUPPKEY'] != 4534)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] == 1) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'] != 'a') & (lineitem['L_PARTKEY'] >= 145780) | (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['EXTENDEDPRICE'] > 32979.13892273342) & (lineitem['EXTENDEDPRICE'] > 49483.289996702064) & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['SHIPDATE'] != '1992-04-27')].merge(orders.merge(customer[(customer['C_CUSTKEY'] != 67) | (customer['C_PHONE'].str.startswith('25-')) | (customer['C_PHONE'] == '1') | (customer['C_COMMENT'].str.startswith('u')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_CUSTKEY'] > 75)][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('count')

lineitem[(lineitem['LINENUMBER'] == 3) & (lineitem['TAX'] >= 0.02091102474116246) & (lineitem['LINESTATUS'] == 'O') | (lineitem['LINENUMBER'] == 4) & (lineitem['LINESTATUS'] != 'O') | (lineitem['QUANTITY'] != 34) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_ORDERKEY'] <= 191) & (lineitem['TAX'] >= 0.04667142183235554) & (lineitem['L_PARTKEY'] == 142530)].merge(partsupp[(partsupp['SUPPLYCOST'] > 633.7582708913623) | (partsupp['AVAILQTY'] == 5610)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] >= 5) | (lineitem['L_ORDERKEY'] > 109) | (lineitem['QUANTITY'] < 23) | (lineitem['EXTENDEDPRICE'] <= 40697.833017481615) | (lineitem['DISCOUNT'] > 0.05878112002344358) | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON']))].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') & (lineitem['L_PARTKEY'] <= 53306) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['L_COMMENT'] != 'b') & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['L_SUPPKEY'] > 8094) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['L_SUPPKEY'] == 5798) & (lineitem['EXTENDEDPRICE'] > 50610.60033916022)][['L_PARTKEY', 'LINESTATUS']].merge(partsupp.merge(part[(part['SIZE'] == 40) & (part['SIZE'] < 37) & (part['RETAILPRICE'] == 1003.7723486510523) & (part['P_PARTKEY'] != 76) | (part['PT_COMMENT'].str.startswith('u')) & (part['P_PARTKEY'] <= 79) & (part['TYPE'] == 'P') & (part['P_PARTKEY'] == 47)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] != 57599) & (lineitem['LINESTATUS'] == 'O') | (lineitem['EXTENDEDPRICE'] <= 51049.801363812374) & (lineitem['LINENUMBER'] <= 4) & (lineitem['TAX'] != 0.06002027726017446) | (lineitem['L_PARTKEY'] > 109247) | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_PARTKEY'] <= 167435)].merge(orders[(orders['SHIPPRIORITY'] > 0) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_CUSTKEY'] <= 99) & (customer['C_NATIONKEY'] != 0)].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] < 198149) & (lineitem['LINESTATUS'] != 'F') & (lineitem['L_PARTKEY'] < 190852) & (lineitem['LINENUMBER'] != 3) & (lineitem['L_PARTKEY'] >= 25583)][['COMMITDATE', 'TAX', 'L_COMMENT', 'L_PARTKEY', 'RECEIPTDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['TOTALPRICE'] <= 351248.8955713701) | (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '2-HIGH'])) & (orders['O_ORDERKEY'] == 415) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] <= 24110) | (orders['CLERK'].str.startswith('C'))], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] > 4245) & (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['DISCOUNT'] >= 0.03434206724043764)][['RETURNFLAG', 'TAX', 'QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_COMMENT']].merge(orders[(orders['ORDERDATE'] >= '1992-01-13')].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 2873)].merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'] == 'w') & (orders['O_CUSTKEY'] < 32119) & (orders['O_COMMENT'] != 'r') | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] > 141)].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 7426.55086541375) & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_CUSTKEY'] == 44)][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] != 35) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['DISCOUNT'] <= 0.05380597445865564) | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['DISCOUNT'] < 0.043136202800833245) | (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['L_PARTKEY'] <= 53757)].merge(partsupp.merge(part[['MFGR', 'RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'BRAND', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'SIZE', 'MFGR', 'P_PARTKEY', 'PT_COMMENT']).agg('count')

lineitem[(lineitem['QUANTITY'] <= 6) & (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['DISCOUNT'] < 0.010041605260026266) | (lineitem['QUANTITY'] <= 2) & (lineitem['LINENUMBER'] > 5)].merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['EXTENDEDPRICE'] >= 12714.904653804624) & (lineitem['L_COMMENT'] == 'o')][['LINENUMBER', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE', 'LINESTATUS']].merge(orders[(orders['TOTALPRICE'] < 163145.95167799733) & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 25513) | (orders['TOTALPRICE'] <= 282818.20131974004) | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] > 139548)][['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'L_COMMENT', 'RECEIPTDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'QUANTITY', 'RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 0)].merge(region[(region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'L_SUPPKEY', 'TAX', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5867) & (partsupp['PS_PARTKEY'] >= 21) | (partsupp['PS_SUPPKEY'] != 5900)].merge(part[(part['PT_COMMENT'] != 'r') | (part['P_PARTKEY'] >= 72) | (part['MFGR'] == 'Manufacturer#2') | (part['BRAND'] != 'Brand#13') | (part['MFGR'] == 'Manufacturer#1') | (part['TYPE'] != 'S')][['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'TYPE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_COMMENT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'SHIPDATE']].merge(partsupp.merge(part[(part['PT_COMMENT'] != '!') & (part['BRAND'] != 'Brand#53') | (part['TYPE'].str.startswith('M')) | (part['CONTAINER'].str.startswith('WRAP')) & (part['MFGR'].isin(['Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['TYPE'] == 'P') | (part['PT_COMMENT'] != 'ly ') & (part['PT_COMMENT'].str.startswith('the')) | (part['BRAND'] != 'Brand#55')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'CONTAINER', 'SIZE', 'RETAILPRICE', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[['L_PARTKEY', 'COMMITDATE', 'TAX', 'LINESTATUS', 'L_COMMENT', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 37) | (partsupp['PS_SUPPKEY'] < 6453)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPINSTRUCT', 'SHIPDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 25) | (partsupp['PS_PARTKEY'] == 35) & (partsupp['P_COMMENT'] == 'are') | (partsupp['AVAILQTY'] >= 7630) | (partsupp['AVAILQTY'] < 9088)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

lineitem[['TAX', 'L_ORDERKEY', 'L_COMMENT']].merge(orders.merge(customer[(customer['C_NATIONKEY'] != 0) & (customer['C_CUSTKEY'] <= 14) & (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] == 11) & (customer['C_NATIONKEY'] < 1) & (customer['C_CUSTKEY'] > 38)].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders.merge(customer[(customer['C_ACCTBAL'] == 3773.625886660855) & (customer['C_CUSTKEY'] >= 48) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_NATIONKEY'] > 1) & (customer['C_CUSTKEY'] != 75)][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'] == 'A') | (region['R_REGIONKEY'] > 2) & (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['C_COMMENT'] == 'y') | (customer['C_ACCTBAL'] == 6365.8252483074775) & (customer['C_ACCTBAL'] != 1802.4313912454763) & (customer['C_COMMENT'].str.startswith(',')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] == '6') & (customer['C_NATIONKEY'] >= 9)].merge(nation.merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders.merge(customer[(customer['C_COMMENT'].str.startswith('t')) & (customer['C_COMMENT'] != 'p') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE']))][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['C_NATIONKEY'] >= 21) & (customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders.merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 't') | (nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] != 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] > 153)].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] == 's') & (customer['C_ADDRESS'] == 'L') | (customer['C_ACCTBAL'] == 2845.1381509563803) & (customer['C_PHONE'] != '1') | (customer['C_COMMENT'] != 'g')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] == 'C')].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('b')) | (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] != 3521.494571173275) | (orders['O_ORDERKEY'] == 9) & (orders['O_COMMENT'] != 'o')].merge(customer[(customer['C_ACCTBAL'] == 166.02923237270215) | (customer['C_ADDRESS'] == 'M') | (customer['C_PHONE'] != '1') & (customer['C_CUSTKEY'] > 20) | (customer['C_ADDRESS'].str.startswith('c')) & (customer['C_CUSTKEY'] < 19) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == 'm')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] > 79008.79133700817) | (orders['O_COMMENT'].str.startswith('s')) & (orders['O_ORDERKEY'] < 727) | (orders['O_ORDERKEY'] < 653)].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 15) | (customer['C_COMMENT'].str.startswith('i')) & (customer['C_NATIONKEY'] > 22)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] >= 97) | (customer['C_ACCTBAL'] > 8385.252730094544) & (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] == 15)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NATIONKEY', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '1-URGENT') & (orders['ORDERDATE'] < '1998-07-21') | (orders['TOTALPRICE'] > 118646.91420950471) & (orders['TOTALPRICE'] != 152726.77674482917) & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] >= 94826) & (orders['O_ORDERKEY'] >= 340) & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] == 'x') | (orders['O_ORDERKEY'] < 222) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_PHONE'] != '18-') | (customer['C_PHONE'] == '22-') | (customer['C_CUSTKEY'] > 17) & (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_CUSTKEY'] < 22)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'O') | (orders['TOTALPRICE'] > 175987.8042697978) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'].str.startswith('e')) | (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_NATIONKEY'] <= 12) | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] == '1') & (customer['C_NAME'] == 'C') | (customer['C_COMMENT'] != 'y')][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'n')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERPRIORITY'].isin(['1-URGENT'])) | (orders['O_CUSTKEY'] < 65765) & (orders['ORDERSTATUS'].isin(['O'])) & (orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'] == 'd') | (orders['O_COMMENT'] == 'b')].merge(customer[(customer['C_CUSTKEY'] < 34) | (customer['C_PHONE'].str.startswith('22-')) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'] != ' ') | (customer['C_ADDRESS'].str.startswith('a')) & (customer['C_ACCTBAL'] <= 3217.870115897559) | (customer['C_CUSTKEY'] != 82) | (customer['C_PHONE'].str.startswith('22-'))][['C_CUSTKEY', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F'])) | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] > 341051.84229759825)][['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] >= 6029.811097610058) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] == 16) & (customer['C_CUSTKEY'] != 67)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['TOTALPRICE'] > 315792.70897713566) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] != '5-LOW')][['O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] >= 19) | (nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] == 'G')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('count')

orders[(orders['O_COMMENT'] == 'egu') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_ORDERKEY'] == 405) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_NAME'] == 'K')].merge(region[(region['R_REGIONKEY'] != 2)][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 21205) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] < 575) & (orders['TOTALPRICE'] < 48363.54169415988) | (orders['ORDERDATE'] > '1998-07-21') | (orders['O_ORDERKEY'] <= 234) & (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_ACCTBAL'] < 2626.405089995193) & (customer['C_NATIONKEY'] < 6) | (customer['C_PHONE'] != '22-') | (customer['C_COMMENT'] != 'f')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] > 59580) & (orders['ORDERDATE'] > '1992-01-13') | (orders['O_ORDERKEY'] > 382) & (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_COMMENT'] != 'h') & (nation['N_NATIONKEY'] > 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_NAME'] == 'ASI') & (region['R_COMMENT'].str.startswith('l'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 139822)].merge(customer[(customer['C_ADDRESS'].str.startswith('T')) | (customer['C_CUSTKEY'] == 26) & (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] == 2) & (customer['C_ACCTBAL'] == 5647.639171565839) | (customer['C_ADDRESS'] == '3') & (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_NAME'].str.startswith('S')) | (nation['N_COMMENT'] != 'o')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['SHIPPRIORITY'] != 0) & (orders['O_CUSTKEY'] <= 140639) | (orders['TOTALPRICE'] < 256053.24056994703) & (orders['O_CUSTKEY'] == 21892) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH', '4-NOT SPECIFIED', '3-MEDIUM']))].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v') & (nation['N_COMMENT'] != 'u') & (nation['N_NATIONKEY'] < 12)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] < '1998-07-21') & (orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] == 141) & (orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] > 167368.681445058)][['O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] <= 84327.53922517743) | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'].str.startswith('g')) | (orders['TOTALPRICE'] > 183388.79103647044) & (orders['O_ORDERKEY'] > 91) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O']))][['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY', 'TOTALPRICE', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] == 107827.53189336845) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_CUSTKEY'] > 103533) & (orders['O_CUSTKEY'] > 95598) & (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] != 8277.897102170728) & (orders['ORDERPRIORITY'] != '2-HIGH')][['SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] > 21) & (customer['C_ADDRESS'] != '4') & (customer['C_ACCTBAL'] == 2352.5795400952397) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'b') & (customer['C_CUSTKEY'] == 71) & (customer['C_ADDRESS'] != 'i')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 350586.4184571007) | (orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] == 285457.5720119471) & (orders['O_ORDERKEY'] == 28) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'].str.startswith('l'))].merge(customer[(customer['C_CUSTKEY'] == 89) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ADDRESS'] != 'B') | (customer['C_PHONE'] == '13-') | (customer['C_CUSTKEY'] != 36) | (customer['C_NATIONKEY'] != 6) | (customer['C_CUSTKEY'] > 8) | (customer['MKTSEGMENT'] == 'MACHINERY')][['C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] > 142684.907477182) & (orders['SHIPPRIORITY'] == 0) & (orders['O_ORDERKEY'] >= 391) | (orders['SHIPPRIORITY'] <= 0)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[['CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'].str.startswith('q')) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY', 'BUILDING'])) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_CUSTKEY'] != 82) & (customer['C_PHONE'] != '18-') & (customer['C_CUSTKEY'] <= 19) & (customer['C_ACCTBAL'] < 1345.5971531561036)].merge(nation[(nation['N_NAME'] != 'E') & (nation['N_COMMENT'] == 'p')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'F') | (customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE'])) | (customer['C_ADDRESS'] == 'l')][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NAME'] == 'U') | (nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'] != 'K')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_NATIONKEY'] >= 15) & (customer['C_NATIONKEY'] >= 6) & (customer['C_ADDRESS'] != 'q') | (customer['C_ADDRESS'].str.startswith('6'))].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('count')

orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ADDRESS'].str.startswith(',')) & (customer['C_COMMENT'] != 'h') & (customer['C_PHONE'] == '18-')].merge(nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] > 0) | (nation['N_COMMENT'].str.startswith('t'))][['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'].str.startswith('k')) & (customer['C_COMMENT'] == 'k') | (customer['C_COMMENT'] != 'k') | (customer['C_ACCTBAL'] == 9230.060755476408) | (customer['C_ACCTBAL'] != 1753.155449247895) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) | (customer['C_ADDRESS'] == '9')].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'].str.startswith('d')) & (customer['C_ACCTBAL'] > 4958.275011823087) | (customer['C_CUSTKEY'] > 22) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_ADDRESS'] != '3') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] == 6721.116521718615)][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK']].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 7) & (nation['N_REGIONKEY'] != 1) | (nation['N_NAME'] == 'M') & (nation['N_NATIONKEY'] < 6)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'O_COMMENT']].merge(customer.merge(nation[(nation['N_NAME'] == 'B') | (nation['N_REGIONKEY'] < 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'e') & (customer['C_NATIONKEY'] < 6)].merge(nation[(nation['N_NATIONKEY'] <= 23) | (nation['N_NATIONKEY'] < 20) | (nation['N_NAME'] == 'A')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] >= 6359.571485856271) | (customer['C_NAME'] == 'C') & (customer['C_NATIONKEY'] > 2)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_NATIONKEY'] != 17) & (nation['N_NATIONKEY'] <= 17)].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 2) & (nation['N_NATIONKEY'] > 8) | (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] > 1) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] < 4422.508371993057) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 1271.7490498339762) | (customer['C_CUSTKEY'] == 41) | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_COMMENT'] == '.') | (customer['C_CUSTKEY'] < 6) & (customer['C_COMMENT'] == 'i')].merge(nation[(nation['N_COMMENT'].str.startswith('v')) & (nation['N_NATIONKEY'] >= 22) | (nation['N_NAME'] != 'V')][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[['C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] > 3)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] == 6) & (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 46) | (partsupp['AVAILQTY'] == 3823)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 64) | (supplier['S_PHONE'] == '3')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 19) | (partsupp['P_COMMENT'] != 'h') | (partsupp['SUPPLYCOST'] != 427.25308088859737) | (partsupp['AVAILQTY'] == 6977) & (partsupp['AVAILQTY'] >= 7611)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] != 16) | (supplier['S_SUPPKEY'] <= 81)][['S_COMMENT', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] >= 19)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] <= 14) | (supplier['S_ADDRESS'] == 'u') & (supplier['S_ACCTBAL'] > 9880.988753768377)][['S_SUPPKEY', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 501) & (partsupp['AVAILQTY'] > 5656) | (partsupp['PS_PARTKEY'] >= 35)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '2')].merge(nation.merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_NAME'].str.startswith('A')) | (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] >= 5160) | (partsupp['P_COMMENT'] != 'c')].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_REGIONKEY'] > 0) | (nation['N_NATIONKEY'] >= 1) | (nation['N_COMMENT'] != 'y')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['P_COMMENT'] != 'a') & (partsupp['PS_PARTKEY'] >= 46) | (partsupp['PS_PARTKEY'] > 13) & (partsupp['AVAILQTY'] >= 842)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_SUPPKEY'] == 7245) | (partsupp['AVAILQTY'] <= 1285)][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'M') & (part['BRAND'].isin(['Brand#14'])) & (part['TYPE'].str.startswith('M')) | (part['BRAND'].isin(['Brand#45', 'Brand#32', 'Brand#41', 'Brand#24', 'Brand#15']))][['PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('y')) & (partsupp['PS_PARTKEY'] == 2) & (partsupp['AVAILQTY'] <= 2595) | (partsupp['SUPPLYCOST'] < 49.48182934288312) | (partsupp['PS_SUPPKEY'] <= 1241)].merge(part[(part['CONTAINER'] == 'WRAP') & (part['MFGR'] != 'Manufacturer#2') | (part['TYPE'] == 'E') & (part['SIZE'] <= 30) | (part['SIZE'] > 37) & (part['TYPE'] == 'E')][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY', 'P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 72.32088721004472) | (partsupp['SUPPLYCOST'] != 698.4992393946479) & (partsupp['P_COMMENT'].str.startswith('u')) & (partsupp['PS_PARTKEY'] > 40)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] != 7901.128763940521)].merge(nation.merge(region[(region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 195.37301170288237) & (partsupp['SUPPLYCOST'] > 185.66027764859632) | (partsupp['PS_PARTKEY'] > 9) | (partsupp['SUPPLYCOST'] <= 986.82454834415)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 40) | (part['RETAILPRICE'] != 1016.6378737352072) | (part['P_PARTKEY'] >= 27) & (part['PT_COMMENT'] != 'g') & (part['RETAILPRICE'] >= 976.8039378168519) | (part['CONTAINER'] == 'LG') & (part['P_NAME'] != 'f') & (part['MFGR'] == 'Manufacturer#1')][['P_NAME', 'CONTAINER', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 524.236754149468) & (partsupp['SUPPLYCOST'] >= 91.63102678784949) & (partsupp['PS_SUPPKEY'] >= 7289) & (partsupp['AVAILQTY'] == 9252)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '26-')].merge(nation[(nation['N_NATIONKEY'] == 8) & (nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] > 14) & (nation['N_NAME'].str.startswith('A'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_COMMENT'] != 'a')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'] != 'u') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] != '1') | (supplier['S_NATIONKEY'] < 1) | (supplier['S_SUPPKEY'] < 104) | (supplier['S_ADDRESS'].str.startswith('N')) | (supplier['S_PHONE'] != '3') & (supplier['S_COMMENT'] == 'q')].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] != 22) & (nation['N_COMMENT'] == 'n')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'] != 'E') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] != 1933.7407449944596) & (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('c'))][['S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] <= 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'] != '6')][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'c') & (nation['N_NATIONKEY'] != 5)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'] != 'al ') & (supplier['S_COMMENT'].str.startswith('al '))][['S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'M') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'] == 'y') & (nation['N_NATIONKEY'] <= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] > 3) | (region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'o') | (supplier['S_ADDRESS'] != '4') & (supplier['S_SUPPKEY'] >= 113) & (supplier['S_ADDRESS'] != 'K') & (supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'].str.startswith('c')) & (nation['N_COMMENT'] != 'y')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'] == 't') | (supplier['S_COMMENT'] != 'f')][['S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_NATIONKEY'] != 20) | (nation['N_COMMENT'] == 'u') | (nation['N_NAME'].str.startswith('B'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_NAME'] == 'S') & (supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] < 5889.030469643682) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] != 1) | (supplier['S_NATIONKEY'] >= 22)].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_REGIONKEY'] != 2) & (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 619.3653030934809)][['S_COMMENT', 'S_PHONE', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'R')][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

supplier[(supplier['S_NATIONKEY'] > 7)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] > 11) & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] <= 20) | (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'].str.startswith('s')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '14-') | (supplier['S_SUPPKEY'] >= 109) | (supplier['S_PHONE'] != '1')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] > 3931.830030645803) | (customer['C_CUSTKEY'] < 30) | (customer['C_PHONE'] != '3') & (customer['C_ACCTBAL'] <= 7077.70494664344) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_ACCTBAL'] <= 2802.8226981063995) | (customer['C_ACCTBAL'] < 2259.3871374463074)][['C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('p'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] == 18) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_ADDRESS'] == 'P') | (customer['C_ACCTBAL'] < 5011.438976873316) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) | (customer['C_ADDRESS'].str.startswith('b')) & (customer['C_ACCTBAL'] >= -132.31226428854347)][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] > 16) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] > 6) | (customer['C_COMMENT'] != 'r') & (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] <= 0)][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '2') & (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 17) & (nation['N_NAME'] == 'G') & (nation['N_NAME'] == 'R') | (nation['N_COMMENT'] != 'p')].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'X') | (customer['C_CUSTKEY'] <= 76) | (customer['C_PHONE'] != '3') | (customer['C_COMMENT'] == 'r') & (customer['C_ACCTBAL'] == 2325.2514027092134) | (customer['C_NATIONKEY'] <= 15)][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NATIONKEY'] <= 4) & (customer['C_ACCTBAL'] >= 2874.1508998218214) & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_CUSTKEY'] == 82) & (customer['MKTSEGMENT'].isin(['FURNITURE']))][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_NATIONKEY'] < 4) | (customer['C_NATIONKEY'] == 6) | (customer['C_NATIONKEY'] > 12) & (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_ADDRESS'] != 'f') & (customer['C_NATIONKEY'] > 2) & (customer['C_ADDRESS'].str.startswith('z'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] < 7) & (nation['N_NATIONKEY'] != 20)][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_COMMENT'].str.startswith('k')) & (customer['C_NATIONKEY'] <= 16) | (customer['C_ADDRESS'] == 'u') & (customer['C_NATIONKEY'] <= 2) | (customer['C_CUSTKEY'] <= 3) | (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] >= 3) | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_REGIONKEY'] > 1) & (nation['N_NAME'] != 'V')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_COMMENT'] == 'a') & (nation['N_REGIONKEY'] <= 3) & (nation['N_REGIONKEY'] > 0)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'].str.startswith(' ')) | (orders['O_COMMENT'].str.startswith(' ')) | (orders['O_COMMENT'] == 'r')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 3) & (nation['N_REGIONKEY'] > 0)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 19) | (partsupp['PS_SUPPKEY'] != 6001) & (partsupp['P_COMMENT'] == 'g') | (partsupp['SUPPLYCOST'] == 577.1301983811834)].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] <= 38) | (partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_PARTKEY'] > 12) | (partsupp['PS_SUPPKEY'] <= 788) | (partsupp['PS_PARTKEY'] >= 31)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('N')) & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'] == 'x')].merge(nation[(nation['N_REGIONKEY'] > 1) | (nation['N_NATIONKEY'] == 11)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] == 5562)].merge(supplier[(supplier['S_ADDRESS'] != 't') | (supplier['S_PHONE'] == '1') & (supplier['S_ADDRESS'] == '8') | (supplier['S_PHONE'] != '17-') & (supplier['S_PHONE'] != '2')][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('x')) & (partsupp['PS_SUPPKEY'] >= 2071) & (partsupp['PS_PARTKEY'] == 43)].merge(part[(part['PT_COMMENT'] != 'l') & (part['CONTAINER'] == 'WRAP') | (part['P_PARTKEY'] == 181) & (part['PT_COMMENT'].str.startswith('i')) & (part['RETAILPRICE'] != 963.6336023919652) | (part['PT_COMMENT'].str.startswith('l')) | (part['BRAND'].isin(['Brand#51', 'Brand#41', 'Brand#42', 'Brand#15', 'Brand#23'])) | (part['SIZE'] > 1) | (part['PT_COMMENT'] == 'ss ')][['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE', 'MFGR', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] < 1093.147453618433) | (part['P_PARTKEY'] == 43) & (part['CONTAINER'].str.startswith('LG')) & (part['P_NAME'] == 'w') | (part['BRAND'] == 'Brand#25')][['P_PARTKEY', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME', 'PT_COMMENT', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'P_NAME', 'P_PARTKEY', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['RETURNFLAG'] == 'N') & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['LINESTATUS'] == 'O')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 987.6930371422139) | (partsupp['AVAILQTY'] < 1935) & (partsupp['AVAILQTY'] >= 5319) | (partsupp['PS_SUPPKEY'] == 1688) | (partsupp['AVAILQTY'] >= 3575)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'CONTAINER', 'PT_COMMENT', 'RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] <= 0.056880862791441916) & (lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['LINENUMBER'] >= 1) | (lineitem['DISCOUNT'] > 0.07632970036364141)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 33)].merge(supplier[(supplier['S_ACCTBAL'] == 9557.728027398458) & (supplier['S_ACCTBAL'] < 7067.861252499679) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_ACCTBAL'] == 6447.6604980194525) | (supplier['S_ADDRESS'] == '0') | (supplier['S_SUPPKEY'] >= 6) & (supplier['S_SUPPKEY'] < 169)].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_NAME'] != 'E') & (nation['N_COMMENT'] == 't')].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] == 0.06133033748989576) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['RETURNFLAG'] != 'R')][['DISCOUNT', 'L_PARTKEY', 'LINENUMBER', 'L_COMMENT', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 4834) | (partsupp['AVAILQTY'] >= 6082) | (partsupp['SUPPLYCOST'] == 890.9400661169673)][['AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'PT_COMMENT', 'MFGR', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.08053646876739994) & (lineitem['L_COMMENT'].str.startswith('j')) | (lineitem['L_ORDERKEY'] <= 50) | (lineitem['L_SUPPKEY'] < 1499)][['L_PARTKEY', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPINSTRUCT', 'QUANTITY']].merge(orders[(orders['O_CUSTKEY'] > 68565)].merge(customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ADDRESS']).agg('count')

lineitem[(lineitem['LINENUMBER'] > 5) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN'])) & (lineitem['RETURNFLAG'] == 'N') & (lineitem['TAX'] <= 0.07080405555296923) | (lineitem['SHIPMODE'] != 'AIR')][['LINENUMBER', 'EXTENDEDPRICE', 'SHIPMODE', 'COMMITDATE', 'L_ORDERKEY']].merge(orders[['O_COMMENT', 'ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'CLERK', 'O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['LINESTATUS'] != 'F') & (lineitem['TAX'] >= 0.041849513686537367) & (lineitem['QUANTITY'] != 45) & (lineitem['L_PARTKEY'] >= 48722) | (lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'FOB', 'MAIL', 'RAIL', 'TRUCK', 'SHIP']))][['SHIPMODE', 'L_COMMENT', 'SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3064)].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] < 1) | (supplier['S_COMMENT'].str.startswith('e'))], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] != 'F') & (lineitem['L_ORDERKEY'] == 71) | (lineitem['TAX'] <= 0.021373935174521765) & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_SUPPKEY'] <= 3039) | (lineitem['L_COMMENT'].str.startswith('u'))].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED']))][['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_PARTKEY'] != 43382)][['SHIPINSTRUCT', 'TAX', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 124) | (supplier['S_NATIONKEY'] > 13) & (supplier['S_ADDRESS'].str.startswith('P')) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F'])) | (lineitem['QUANTITY'] < 15) & (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'RAIL'])) | (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['DISCOUNT'] <= 0.08178699787771214) | (lineitem['SHIPDATE'] <= '1998-10-30')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'].str.startswith('WRAP')) | (part['BRAND'] == 'Brand#45') | (part['SIZE'] == 43) & (part['BRAND'] == 'Brand#43') | (part['PT_COMMENT'] != 'q') | (part['PT_COMMENT'].str.startswith('!'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] == 153778) & (lineitem['TAX'] == 0.01230226460532001) | (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['EXTENDEDPRICE'] != 31073.481773657444)][['L_PARTKEY', 'EXTENDEDPRICE', 'TAX', 'LINENUMBER', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 19) | (partsupp['PS_PARTKEY'] != 11) | (partsupp['PS_SUPPKEY'] < 7402) | (partsupp['PS_SUPPKEY'] < 3469) & (partsupp['AVAILQTY'] < 6955)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] != 43) & (lineitem['QUANTITY'] > 10) & (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['L_ORDERKEY'] == 157) | (lineitem['SHIPMODE'] == 'TRUCK') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['RECEIPTDATE'] >= '1998-11-06')].merge(orders.merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_ADDRESS'] != 'n') | (customer['C_ADDRESS'] == '0') & (customer['C_ACCTBAL'] > 116.36354056053779) | (customer['C_NATIONKEY'] < 1) & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_CUSTKEY'] != 22)][['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 39) | (lineitem['L_SUPPKEY'] < 4589) & (lineitem['L_COMMENT'].str.startswith('t')) & (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RETURNFLAG'] == 'A') & (lineitem['TAX'] == 0.05026820615090193)][['LINESTATUS', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'TAX', 'RETURNFLAG', 'QUANTITY']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['EXTENDEDPRICE'] >= 24380.724072026664)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5910) & (partsupp['AVAILQTY'] == 112) | (partsupp['PS_SUPPKEY'] <= 2280) | (partsupp['AVAILQTY'] > 8129) & (partsupp['PS_SUPPKEY'] <= 1580)][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_PARTKEY'] <= 36399) | (lineitem['L_COMMENT'] == 'n') & (lineitem['L_COMMENT'] != 'l') | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['EXTENDEDPRICE'] < 50422.02806316065) | (lineitem['L_ORDERKEY'] < 111) & (lineitem['EXTENDEDPRICE'] < 44958.42435248579)].merge(orders.merge(customer[(customer['C_CUSTKEY'] <= 10) & (customer['C_ACCTBAL'] <= 7525.774265073882)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['L_PARTKEY'] > 120453) & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') & (lineitem['L_COMMENT'] != '.') & (lineitem['L_ORDERKEY'] != 189) | (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['TAX'] != 0.06694110007605242) | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['TAX'] == 0.0664131584914138)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 282.7351004795042) & (partsupp['P_COMMENT'].str.startswith('d')) | (partsupp['PS_PARTKEY'] <= 14) & (partsupp['PS_PARTKEY'] <= 11) | (partsupp['PS_SUPPKEY'] < 1216)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'MFGR', 'P_NAME', 'PT_COMMENT', 'P_PARTKEY']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['LINENUMBER'] < 3) | (lineitem['SHIPMODE'].isin(['REG AIR', 'RAIL'])) | (lineitem['SHIPMODE'].isin(['AIR', 'MAIL', 'REG AIR'])) & (lineitem['EXTENDEDPRICE'] != 8609.001033236324) | (lineitem['TAX'] == 0.004504941538307668) & (lineitem['L_ORDERKEY'] >= 159)][['LINENUMBER', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('s')) | (partsupp['SUPPLYCOST'] < 674.4256841809) | (partsupp['SUPPLYCOST'] > 949.9345964641108)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.007182069071154711)][['DISCOUNT', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'SHIPMODE', 'RETURNFLAG']].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == 1881.7386567460119) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_COMMENT'] != 'k')].merge(nation.merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER', 'RECEIPTDATE', 'COMMITDATE', 'RETURNFLAG']].merge(orders[(orders['O_CUSTKEY'] >= 79062) | (orders['O_ORDERKEY'] == 721) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] > 527) & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['CLERK'] != 'C') | (orders['O_COMMENT'] != 'egu')][['SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']).agg('count')

lineitem[['EXTENDEDPRICE', 'L_ORDERKEY', 'SHIPMODE', 'RECEIPTDATE', 'LINESTATUS', 'COMMITDATE']].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_COMMENT'].str.startswith('.')) & (orders['TOTALPRICE'] <= 167535.32304093786) | (orders['TOTALPRICE'] >= 173514.367857442) & (orders['TOTALPRICE'] == 87002.18431711533)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']).agg('max', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'RECEIPTDATE', 'L_ORDERKEY']].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] == 321) | (orders['O_CUSTKEY'] <= 35097) | (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] != 141853) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['ORDERSTATUS'].isin(['F', 'P']))][['O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT', 'ORDERDATE', 'CLERK']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_ORDERKEY', 'SHIPMODE', 'L_COMMENT', 'TAX', 'L_PARTKEY', 'SHIPDATE', 'QUANTITY']].merge(orders[(orders['O_ORDERKEY'] != 297) & (orders['TOTALPRICE'] < 112721.60511490382) | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'] == 'j') & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['TOTALPRICE'] > 189876.48573653752) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'O')].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINESTATUS', 'L_SUPPKEY', 'LINENUMBER', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPINSTRUCT', 'L_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 78.14166403287474) | (partsupp['PS_SUPPKEY'] != 3815) | (partsupp['PS_SUPPKEY'] != 4079) & (partsupp['PS_PARTKEY'] > 41)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '32-') & (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '3') | (supplier['S_ACCTBAL'] < 887.0577277149384) | (supplier['S_ADDRESS'] != 'c') & (supplier['S_SUPPKEY'] < 38)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINESTATUS', 'RETURNFLAG', 'L_ORDERKEY', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPMODE']].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] == ',') | (orders['O_ORDERKEY'] <= 495) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] == 0)][['O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 31) | (partsupp['SUPPLYCOST'] < 391.5142027854352) & (partsupp['PS_PARTKEY'] != 21) & (partsupp['AVAILQTY'] != 8494) | (partsupp['AVAILQTY'] < 6397)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] == 22) & (nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] == 'V')].merge(region[(region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[['L_SUPPKEY', 'L_ORDERKEY']].merge(orders[(orders['O_CUSTKEY'] <= 9921) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['ORDERDATE'] < '1998-07-21') & (orders['SHIPPRIORITY'] <= 0) | (orders['O_COMMENT'] == 'l')][['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_SUPPKEY', 'SHIPDATE', 'SHIPMODE', 'LINESTATUS', 'L_PARTKEY', 'QUANTITY', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] != 519.3667526547699) & (partsupp['PS_PARTKEY'] > 44) | (partsupp['PS_PARTKEY'] >= 4)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 7) & (nation['N_NAME'].str.startswith('F'))].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('h'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'LINESTATUS', 'SHIPMODE', 'L_PARTKEY', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] > 8786.864644342728) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] > 197) & (supplier['S_SUPPKEY'] < 55)][['S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['SHIPMODE', 'RETURNFLAG', 'LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp.merge(part[(part['SIZE'] == 29) & (part['P_PARTKEY'] < 178) | (part['P_NAME'] == 's') | (part['BRAND'].isin(['Brand#41', 'Brand#52', 'Brand#33', 'Brand#12', 'Brand#13', 'Brand#42', 'Brand#21', 'Brand#51', 'Brand#22', 'Brand#23', 'Brand#35', 'Brand#31', 'Brand#55', 'Brand#11', 'Brand#24', 'Brand#25', 'Brand#34'])) | (part['BRAND'] != 'Brand#35') | (part['BRAND'] == 'Brand#41')][['P_PARTKEY', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('count')

orders.merge(customer[(customer['C_ADDRESS'] == 'K') & (customer['C_CUSTKEY'] != 16) & (customer['C_CUSTKEY'] <= 73) | (customer['C_CUSTKEY'] != 42) | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] == 'n') | (customer['C_ACCTBAL'] < 3949.7557008292197) & (customer['C_ACCTBAL'] > 9372.437235512152)].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] < 10)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] != 'E') & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] == 111080) & (orders['O_COMMENT'] != 'n') & (orders['SHIPPRIORITY'] == 0)].merge(customer[(customer['C_ACCTBAL'] > 8861.616803118566) | (customer['C_CUSTKEY'] <= 7) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'].str.startswith('w')) & (customer['C_NAME'] == 'C') & (customer['C_COMMENT'] != 'y') & (customer['MKTSEGMENT'] != 'HOUSEHOLD')].merge(nation.merge(region[(region['R_REGIONKEY'] >= 1) | (region['R_NAME'] != 'M') & (region['R_REGIONKEY'] <= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['O_CUSTKEY'] < 145669) | (orders['O_CUSTKEY'] < 29321)].merge(customer.merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] == 2) | (nation['N_REGIONKEY'] != 2)].merge(region[(region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('p')) & (nation['N_REGIONKEY'] < 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] < '1998-07-21') & (orders['TOTALPRICE'] < 294756.53123601683) | (orders['O_CUSTKEY'] <= 45631) | (orders['O_COMMENT'].str.startswith('k')) | (orders['O_CUSTKEY'] == 96045) & (orders['ORDERDATE'] == '1992-01-13')].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) & (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] >= 134174)][['O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 17) & (nation['N_NATIONKEY'] == 2) | (nation['N_REGIONKEY'] >= 3)][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('count')

orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['TOTALPRICE'] <= 94642.95196096164) | (orders['O_COMMENT'].str.startswith('egu')) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'e') & (orders['O_CUSTKEY'] == 37161)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A') | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] > '1998-07-21') | (orders['TOTALPRICE'] <= 47666.076109099035) & (orders['O_CUSTKEY'] > 12087) & (orders['O_COMMENT'] != 'n') | (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] == 136475) & (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] > 73132.36350393256) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_COMMENT'] == ' ') | (customer['C_COMMENT'] == 'h') | (customer['C_COMMENT'].str.startswith('n')) | (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != 'w')][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') & (orders['TOTALPRICE'] == 321741.94668655726) & (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != '.') & (orders['O_ORDERKEY'] != 82) | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] == 261)].merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_CUSTKEY'] != 91) | (customer['C_PHONE'] != '27-') & (customer['C_ADDRESS'] != 'M') | (customer['C_PHONE'] != '22-') & (customer['C_ADDRESS'] != 'a') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] < 4932.23111654319)][['MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] != 572) & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 133206) & (orders['O_COMMENT'] != 'u') & (orders['O_CUSTKEY'] > 100115) & (orders['O_ORDERKEY'] != 186) | (orders['ORDERSTATUS'] != 'P') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[(customer['C_COMMENT'].str.startswith('n'))].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'F') & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 'y') | (orders['SHIPPRIORITY'] < 0) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED')].merge(customer[(customer['C_CUSTKEY'] <= 87) | (customer['C_NAME'] != 'C') & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']).agg('count')

orders[(orders['ORDERSTATUS'] == 'O') & (orders['O_COMMENT'] != 'o') & (orders['O_COMMENT'] == 'x') & (orders['TOTALPRICE'] >= 89655.12543044206) | (orders['TOTALPRICE'] == 136705.95566168346) | (orders['TOTALPRICE'] < 264827.17962175014)].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'].str.startswith('h')) & (orders['TOTALPRICE'] < 24654.305352857802) | (orders['O_COMMENT'] == 'x') & (orders['ORDERDATE'] > '1992-01-13') | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 528) & (orders['ORDERDATE'] >= '1992-01-13')].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] == '7') & (customer['C_ACCTBAL'] < 6890.348441269846) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'] == 's') | (customer['C_COMMENT'].str.startswith('i'))][['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] < 122533) | (orders['O_CUSTKEY'] <= 142545) | (orders['ORDERDATE'] > '1998-07-21') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] != 342183.07177809544) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_COMMENT'] == 'z')].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_COMMENT'] == 'h') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_NATIONKEY'] <= 6) | (customer['C_CUSTKEY'] <= 80) | (customer['MKTSEGMENT'] == 'FURNITURE')].merge(nation[(nation['N_COMMENT'] == 'v') & (nation['N_COMMENT'] == 'a')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 54312) & (orders['O_ORDERKEY'] < 421) & (orders['O_CUSTKEY'] > 108995)][['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_ADDRESS'] == 'f') | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ACCTBAL'] != 3267.3905182826165) | (customer['C_CUSTKEY'] < 83)].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] != 790)][['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] != 312025.5713642984) | (orders['O_CUSTKEY'] == 8018) & (orders['TOTALPRICE'] > 215516.8130076758) & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERSTATUS'].isin(['F'])) & (orders['O_ORDERKEY'] <= 179) | (orders['TOTALPRICE'] == 36713.57889898472)].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] == 47048.179104901086)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'] != 'U')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'p') & (nation['N_NATIONKEY'] <= 5) & (nation['N_NATIONKEY'] < 13)].merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] > 0) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer.merge(nation[(nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] == 1)].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 21)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] >= 1) | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['C_CUSTKEY'] < 71)][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.merge(supplier[(supplier['S_SUPPKEY'] > 162) & (supplier['S_NATIONKEY'] <= 1) & (supplier['S_ADDRESS'].str.startswith('S'))].merge(nation[(nation['N_NAME'] != 'P') | (nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'B') | (nation['N_NATIONKEY'] == 17)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 6484) | (partsupp['PS_SUPPKEY'] >= 3136) & (partsupp['SUPPLYCOST'] >= 765.8262174145109) | (partsupp['AVAILQTY'] == 604)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Y')) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NATIONKEY'] == 14) & (supplier['S_COMMENT'] != 'es ') & (supplier['S_NATIONKEY'] >= 12) | (supplier['S_NATIONKEY'] > 21)][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 711) & (partsupp['AVAILQTY'] != 3047)].merge(supplier[(supplier['S_COMMENT'] != 'b')].merge(nation[(nation['N_NAME'] != 'M') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'] != 'F')][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 33) | (partsupp['PS_PARTKEY'] >= 10) & (partsupp['SUPPLYCOST'] < 490.94767398427086) | (partsupp['PS_PARTKEY'] < 9)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 41)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'M') & (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] > 24) | (partsupp['P_COMMENT'] == 'r') & (partsupp['PS_PARTKEY'] > 3) | (partsupp['PS_PARTKEY'] == 7) & (partsupp['SUPPLYCOST'] == 426.9086972097285)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 37) & (partsupp['SUPPLYCOST'] <= 265.07065364574123) & (partsupp['AVAILQTY'] > 5578) | (partsupp['AVAILQTY'] < 1108)].merge(part[(part['TYPE'] != 'SMA') & (part['P_PARTKEY'] < 163) | (part['PT_COMMENT'] != 'm') & (part['SIZE'] < 8) | (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#3', 'Manufacturer#2'])) & (part['TYPE'].str.startswith('P'))][['RETAILPRICE', 'TYPE', 'CONTAINER', 'P_NAME', 'BRAND', 'PT_COMMENT', 'SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2093) | (partsupp['PS_SUPPKEY'] != 2107)].merge(supplier[(supplier['S_ACCTBAL'] >= 9797.78417717538) | (supplier['S_COMMENT'] == 'u') & (supplier['S_ACCTBAL'] > 4782.639876022289) & (supplier['S_SUPPKEY'] > 84)][['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] <= 6046) | (partsupp['PS_SUPPKEY'] == 14) & (partsupp['PS_PARTKEY'] < 6) | (partsupp['SUPPLYCOST'] != 739.1506649096332)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 5341.135734192607) | (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_NAME'] != 'I') | (nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'] != 'P') & (nation['N_NAME'] == 'E')].merge(region[(region['R_NAME'] != 'AFR') | (region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == ',') & (partsupp['AVAILQTY'] <= 8983) | (partsupp['PS_SUPPKEY'] == 5714)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[['S_NAME', 'S_COMMENT', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('count')

partsupp[(partsupp['P_COMMENT'].str.startswith('are')) & (partsupp['PS_SUPPKEY'] >= 4042) | (partsupp['P_COMMENT'] == 'x')][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('r')) & (partsupp['PS_SUPPKEY'] == 6548) | (partsupp['AVAILQTY'] < 7990) & (partsupp['PS_SUPPKEY'] < 7093) & (partsupp['PS_SUPPKEY'] >= 6227)].merge(supplier[(supplier['S_SUPPKEY'] <= 155) & (supplier['S_COMMENT'].str.startswith('e')) & (supplier['S_ADDRESS'] != 'E') & (supplier['S_ADDRESS'].str.startswith('E')) | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'y') & (nation['N_NATIONKEY'] > 11)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 127.81672578329292)].merge(supplier[(supplier['S_ACCTBAL'] > 8503.682705598667) | (supplier['S_COMMENT'].str.startswith('al ')) | (supplier['S_COMMENT'] != 'w') & (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ADDRESS'].str.startswith('N'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] == 3) & (supplier['S_NATIONKEY'] == 15) | (supplier['S_NATIONKEY'] != 17) & (supplier['S_PHONE'] == '32-') | (supplier['S_NATIONKEY'] == 18)][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('count')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('7')) & (supplier['S_NATIONKEY'] > 22) & (supplier['S_SUPPKEY'] == 17) & (supplier['S_COMMENT'] != 'r') & (supplier['S_NAME'] != 'S') | (supplier['S_COMMENT'] == 'v')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('w')) | (supplier['S_PHONE'] == '26-') & (supplier['S_COMMENT'] == ' ') & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] > 190)][['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '32-') & (supplier['S_SUPPKEY'] <= 172) & (supplier['S_ACCTBAL'] > 2296.1398733331725) & (supplier['S_COMMENT'].str.startswith('a')) & (supplier['S_COMMENT'].str.startswith(','))].merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'] != 'v')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('count')

partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_COMMENT'].str.startswith('l')) | (nation['N_COMMENT'] == 'v') & (nation['N_NATIONKEY'] == 10)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_ADDRESS'] == 'K') & (supplier['S_NATIONKEY'] == 2) & (supplier['S_ADDRESS'] != ',') & (supplier['S_ADDRESS'].str.startswith('D')) & (supplier['S_ADDRESS'] != 'h') | (supplier['S_NATIONKEY'] > 5) | (supplier['S_NATIONKEY'] == 3)][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'S') | (nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] == 'o')].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 'e') & (supplier['S_SUPPKEY'] == 127) & (supplier['S_NATIONKEY'] == 14) | (supplier['S_PHONE'] == '1') | (supplier['S_PHONE'].str.startswith('3')) & (supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] != 'd')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] != 'J') | (nation['N_REGIONKEY'] <= 0) | (nation['N_NATIONKEY'] != 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_ADDRESS'] == 'P') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] == 'l') & (supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NAME'] == 'E') | (nation['N_COMMENT'].str.startswith('s'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] != '14-') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'] != '14-') & (supplier['S_COMMENT'].str.startswith('r'))][['S_SUPPKEY', 'S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_NAME'] != 'G') | (nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_ACCTBAL'] <= 352.05130913255493) & (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ADDRESS'].str.startswith('J')) | (supplier['S_ADDRESS'] == 'R') & (supplier['S_COMMENT'] != 'r') & (supplier['S_COMMENT'] != 'u')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 12) & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] != 2)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ACCTBAL'] == 3701.7416155529654) | (customer['C_NATIONKEY'] != 20) | (customer['C_ACCTBAL'] <= 4290.740815854438)][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_REGIONKEY'] <= 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'A') & (region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] != '9') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_COMMENT'].str.startswith('p')) | (customer['C_PHONE'] == '3')][['C_NATIONKEY', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] != 'u') | (nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'].str.startswith('E')) & (region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_ADDRESS'] == 'Q') | (customer['C_ACCTBAL'] > 2352.073309432235) | (customer['C_ACCTBAL'] != 2628.764113933937) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD']))][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_NATIONKEY'] >= 18)].merge(region[(region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 77) | (customer['C_ACCTBAL'] != 6856.159339104385) & (customer['C_CUSTKEY'] < 93) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('u')) | (customer['C_ACCTBAL'] > 7332.662305216236) & (customer['C_ADDRESS'].str.startswith('D'))][['C_ADDRESS', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] < 2) | (nation['N_COMMENT'] != 'p')].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_CUSTKEY'] == 73) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_NATIONKEY'] == 13) & (customer['C_CUSTKEY'] <= 85) | (customer['C_ACCTBAL'] >= 7035.165398883862) & (customer['C_CUSTKEY'] <= 27) & (customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('M'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_REGIONKEY'] < 1)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_CUSTKEY'] >= 85) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 88) | (customer['C_ACCTBAL'] == 9652.992658033967) | (customer['C_CUSTKEY'] <= 34)][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'] == 's') & (nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'].str.startswith('o'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] < 7) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] >= 19) & (customer['C_ADDRESS'] != 'P') & (customer['C_NAME'] == 'C') & (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] <= 51)][['C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] == 'w') | (customer['C_NATIONKEY'] != 5)][['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] < 0) & (nation['N_NAME'] == 'S')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] < 9) | (customer['C_NATIONKEY'] <= 7) | (customer['C_CUSTKEY'] >= 69) | (customer['C_CUSTKEY'] <= 55) & (customer['C_ADDRESS'] != 'h') | (customer['C_COMMENT'] == 'd') | (customer['C_NATIONKEY'] <= 0) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_NATIONKEY'] >= 14) | (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] == 6) & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'].str.startswith('3')) | (customer['C_CUSTKEY'] > 65) | (customer['C_CUSTKEY'] != 86) | (customer['C_NATIONKEY'] != 10) | (customer['C_ACCTBAL'] > 5578.8775561109705)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NATIONKEY'] < 12) | (nation['N_NAME'] != 'C') & (nation['N_NATIONKEY'] >= 11)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NATIONKEY'] > 5) | (customer['C_ACCTBAL'] > 6933.683771479329) | (customer['C_NATIONKEY'] > 17) & (customer['C_PHONE'] != '18-') & (customer['C_ADDRESS'] != 'q') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith(' '))][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 20) & (nation['N_NATIONKEY'] == 13) | (nation['N_REGIONKEY'] < 0)].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

lineitem.merge(orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED'])) | (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['P']))][['SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 2) & (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] > 16) | (nation['N_NATIONKEY'] > 21)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem.merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_ADDRESS', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 540) & (partsupp['PS_PARTKEY'] != 30)].merge(supplier[(supplier['S_NATIONKEY'] != 3) | (supplier['S_PHONE'] == '28-')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'S') & (nation['N_NAME'].str.startswith('I')) & (nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'u') & (partsupp['AVAILQTY'] != 4701)].merge(supplier[(supplier['S_PHONE'] == '28-') & (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] != 9357.949501136256) | (supplier['S_ADDRESS'] == 'z')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] > 18) | (nation['N_NAME'] != 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] <= 454.7587489973784)][['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] != 6461.2607724934305)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['QUANTITY'] < 17) & (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['L_COMMENT'].str.startswith('lit'))].merge(orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERSTATUS'] == 'P') & (orders['TOTALPRICE'] < 268709.73290211294) & (orders['O_COMMENT'] != 'x') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['TOTALPRICE'] == 74201.57542356136)][['ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 6)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 6) & (supplier['S_PHONE'] == '17-') | (supplier['S_NATIONKEY'] != 11) | (supplier['S_COMMENT'] == 'h') & (supplier['S_COMMENT'] == 'r')].merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'] == 'G') & (nation['N_COMMENT'] != 'p')][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F'])) | (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['L_ORDERKEY'] > 37) | (lineitem['L_ORDERKEY'] < 16) & (lineitem['EXTENDEDPRICE'] == 35349.83178284735) & (lineitem['L_ORDERKEY'] == 31) & (lineitem['LINESTATUS'] == 'O') & (lineitem['COMMITDATE'] > '1998-10-16')][['DISCOUNT', 'LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] >= 725) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED'])) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] <= 25299) & (orders['TOTALPRICE'] == 102568.476185204) & (orders['ORDERPRIORITY'] != '1-URGENT')][['O_ORDERKEY', 'TOTALPRICE', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == ' re') & (lineitem['SHIPMODE'] != 'REG AIR')][['EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'SHIPDATE', 'COMMITDATE', 'DISCOUNT', 'SHIPINSTRUCT', 'LINENUMBER', 'L_ORDERKEY']].merge(orders[(orders['TOTALPRICE'] >= 30038.9882068051) | (orders['O_ORDERKEY'] >= 618) & (orders['O_COMMENT'] != 'k') | (orders['ORDERDATE'] < '1992-01-13') & (orders['ORDERDATE'] != '1998-07-21')].merge(customer[(customer['C_NATIONKEY'] == 8) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NATIONKEY'] > 22) & (customer['C_PHONE'] != '2') & (customer['C_NATIONKEY'] == 4)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 174) | (lineitem['EXTENDEDPRICE'] > 33512.41249326169) | (lineitem['COMMITDATE'] <= '1998-10-16')][['COMMITDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 614) | (partsupp['PS_SUPPKEY'] == 2713)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] != 169) | (supplier['S_ACCTBAL'] <= 3698.3204846662984) | (supplier['S_ADDRESS'] != '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] <= 54074) | (lineitem['L_PARTKEY'] != 62432)][['TAX', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] != '2') | (customer['C_COMMENT'] == 'r') & (customer['C_ACCTBAL'] == 9114.031985884)][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['DISCOUNT'] >= 0.0792836991495029) | (lineitem['QUANTITY'] == 46)][['RECEIPTDATE', 'L_ORDERKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'L_COMMENT', 'L_SUPPKEY', 'RETURNFLAG']].merge(orders[(orders['TOTALPRICE'] <= 28295.22774189576) & (orders['ORDERDATE'] == '1998-07-21') | (orders['O_CUSTKEY'] <= 135261) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] <= 102415.8750927706)][['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_SUPPKEY'] == 8528) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_ORDERKEY'] > 185) & (lineitem['QUANTITY'] == 9) & (lineitem['L_COMMENT'] != 'o') & (lineitem['SHIPDATE'] >= '1998-10-30')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 876.5189003673744) | (partsupp['P_COMMENT'] != '.')].merge(part[(part['PT_COMMENT'] != 'g') | (part['CONTAINER'] != 'JUMBO') & (part['P_PARTKEY'] < 13) | (part['MFGR'] != 'Manufacturer#3') & (part['BRAND'] == 'Brand#44') | (part['SIZE'] < 26) | (part['SIZE'] == 40) & (part['P_NAME'].str.startswith('y'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_COMMENT'] == 'q') | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['SHIPMODE'].isin(['AIR', 'TRUCK', 'MAIL']))].merge(orders[(orders['TOTALPRICE'] > 276934.89777581964) | (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_ACCTBAL'] == 74.2521056295733) & (customer['C_COMMENT'].str.startswith('u')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] < 9280.264447916448)].merge(nation[(nation['N_NATIONKEY'] != 1) | (nation['N_NATIONKEY'] <= 14) | (nation['N_NAME'] == 'G')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE')][['RETURNFLAG', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPDATE']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_COMMENT'] != 'x')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['TAX'] > 0.002843780101335076) | (lineitem['LINENUMBER'] > 4) & (lineitem['SHIPMODE'] != 'FOB') | (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['LINESTATUS'] == 'O') & (lineitem['EXTENDEDPRICE'] >= 87775.50997286208) & (lineitem['L_PARTKEY'] < 33987)].merge(orders.merge(customer[(customer['C_CUSTKEY'] != 32) | (customer['C_PHONE'] == '18-') & (customer['C_NAME'] != 'C') | (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] > 499.7329052268367) & (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NATIONKEY'] != 16) & (nation['N_NATIONKEY'] == 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['LINENUMBER', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 287.47498531941216)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] == 8)].merge(nation[(nation['N_NATIONKEY'] != 21) & (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_NAME'].str.startswith('ASI'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPMODE', 'L_COMMENT', 'TAX', 'EXTENDEDPRICE', 'COMMITDATE', 'SHIPDATE']].merge(orders[(orders['ORDERDATE'] <= '1998-07-21') | (orders['O_ORDERKEY'] <= 308) | (orders['O_COMMENT'] == 'd') | (orders['O_COMMENT'] == 'a') & (orders['ORDERSTATUS'] == 'F') | (orders['O_COMMENT'].str.startswith('s')) | (orders['O_CUSTKEY'] < 121286) | (orders['O_ORDERKEY'] < 86) & (orders['TOTALPRICE'] == 279036.74481459626)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['O_COMMENT', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY']).agg('mean', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NATIONKEY'] > 22)][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'P') & (nation['N_NATIONKEY'] < 15)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'ASI')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE']))][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] < 1) | (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']).agg('count')

orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['O_COMMENT'].str.startswith('a')) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] != 166590.06332711838) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['TOTALPRICE'] <= 86758.25010197898)][['ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_ADDRESS'] != 'F') | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 7)].merge(nation[(nation['N_NATIONKEY'] >= 19)][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders[(orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'r') | (orders['TOTALPRICE'] == 300741.29147368716) | (orders['O_ORDERKEY'] >= 101) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] < 36901)][['O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation.merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] > 64193)][['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] == 60) & (customer['C_COMMENT'] == 'n')].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_NAME'].str.startswith('I'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 146267) & (orders['O_CUSTKEY'] <= 80545) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'] != 'i') | (orders['O_ORDERKEY'] != 665) & (orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERSTATUS'].isin(['F', 'P']))].merge(customer[(customer['C_ACCTBAL'] != -736.5116978587732) & (customer['C_PHONE'].str.startswith('3')) | (customer['C_NATIONKEY'] <= 4) & (customer['C_ACCTBAL'] != 2869.49678304022) & (customer['C_ACCTBAL'] <= 6495.911418447102)][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_ADDRESS', 'C_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 345) & (orders['ORDERSTATUS'] != 'P')].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 4780.2284120797585) & (customer['C_CUSTKEY'] > 23) & (customer['C_CUSTKEY'] != 54)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] != 1) & (region['R_NAME'] == 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 527) & (orders['O_COMMENT'].str.startswith('k')) & (orders['TOTALPRICE'] >= 138836.10998890907) | (orders['SHIPPRIORITY'] <= 0)][['O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation.merge(region[(region['R_NAME'] == 'E') & (region['R_NAME'] != 'M') & (region['R_NAME'] == 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['SHIPPRIORITY'] > 0) & (orders['O_ORDERKEY'] != 28) | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERPRIORITY'] == '5-LOW')].merge(customer[(customer['C_COMMENT'] == '.')][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] <= 154283.9531806915) & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_COMMENT'] != 's') & (orders['TOTALPRICE'] > 255503.50382639194) | (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'k')].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_NATIONKEY'] <= 21) & (nation['N_NAME'] == 'F') & (nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NATIONKEY'] >= 11) & (nation['N_NAME'].str.startswith('A'))].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] > 2) & (customer['C_CUSTKEY'] == 65) | (customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 31) & (customer['C_PHONE'] != '27-') & (customer['C_PHONE'] == '22-')].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] != 12)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] >= -631.4223932705708) | (customer['C_ADDRESS'].str.startswith('B')) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] < 6720.750984497351) | (customer['C_NATIONKEY'] != 18)].merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] <= 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_ADDRESS'].str.startswith('H')) | (customer['C_CUSTKEY'] < 37) & (customer['C_COMMENT'].str.startswith('g')) | (customer['C_PHONE'] != '13-') & (customer['C_CUSTKEY'] != 77) & (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('sum', numeric_only=True)

orders[['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'].str.startswith('Y')) | (customer['C_COMMENT'] != 'f') & (customer['C_CUSTKEY'] <= 94) | (customer['C_PHONE'] == '25-')].merge(nation[(nation['N_REGIONKEY'] > 1)].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'].str.startswith('g'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] <= 0) & (customer['C_ACCTBAL'] != 1363.4821560360933) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_NATIONKEY'] == 3) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NATIONKEY'] != 5) | (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp.merge(supplier[(supplier['S_ACCTBAL'] == 6131.597676770649) & (supplier['S_SUPPKEY'] > 151) & (supplier['S_ACCTBAL'] > -551.0494413194833) | (supplier['S_SUPPKEY'] < 1)][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('n'))].merge(region[(region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 5223) | (partsupp['PS_PARTKEY'] >= 34) | (partsupp['SUPPLYCOST'] <= 310.6057205167555)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] == 'l')][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] > 0) | (nation['N_NATIONKEY'] < 14) & (nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] > 18)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 2391) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_SUPPKEY'] == 2914) | (partsupp['P_COMMENT'] != 'h') | (partsupp['SUPPLYCOST'] < 387.8645857914947)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] != 985.3644257206838) | (part['P_PARTKEY'] != 151) | (part['TYPE'] == 'STA') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#3', 'Manufacturer#5', 'Manufacturer#1', 'Manufacturer#4'])) & (part['BRAND'] != 'Brand#23') | (part['P_PARTKEY'] <= 134) | (part['P_PARTKEY'] != 10) & (part['P_PARTKEY'] < 7)][['RETAILPRICE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] < 35) & (partsupp['PS_PARTKEY'] <= 12)].merge(supplier[(supplier['S_ADDRESS'] != 'X') & (supplier['S_SUPPKEY'] == 44) | (supplier['S_SUPPKEY'] < 54) | (supplier['S_NATIONKEY'] < 0) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 2) & (supplier['S_PHONE'] == '1')].merge(nation.merge(region[(region['R_NAME'].str.startswith('E'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 33) | (partsupp['PS_PARTKEY'] != 47)][['PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] < 5847) | (partsupp['AVAILQTY'] < 2860) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_SUPPKEY'] < 2751) & (partsupp['SUPPLYCOST'] < 557.7847000079116)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] <= 1233.3272461096878)].merge(nation.merge(region[(region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] < 198.67903259284296) | (partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['PS_PARTKEY'] != 15) | (partsupp['PS_PARTKEY'] > 30) | (partsupp['PS_PARTKEY'] > 48)].merge(part[(part['SIZE'] <= 45) & (part['SIZE'] != 3) & (part['MFGR'] == 'Manufacturer#5') | (part['SIZE'] < 30) & (part['PT_COMMENT'].str.startswith('s'))][['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'RETAILPRICE', 'P_PARTKEY', 'MFGR', 'TYPE']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 241.84856527171422) & (partsupp['SUPPLYCOST'] == 440.9191179705187) & (partsupp['AVAILQTY'] > 4031)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NAME'] != 'C')].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] <= 1) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 312.2534093644083)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] != 'WRAP') | (part['CONTAINER'].str.startswith('LG')) & (part['RETAILPRICE'] > 1076.0874616154651) & (part['MFGR'] == 'Manufacturer#4') & (part['P_PARTKEY'] > 70) | (part['CONTAINER'].str.startswith('WRAP')) | (part['TYPE'] != 'M') | (part['PT_COMMENT'].str.startswith('y')) & (part['CONTAINER'].str.startswith('JUMBO'))][['CONTAINER', 'P_PARTKEY', 'SIZE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] < 7177.151048653303) | (supplier['S_ADDRESS'] == '3') | (supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] == '.') | (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_ACCTBAL'] <= 2998.9115290765712)].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'R')].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_REGIONKEY'] < 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['PT_COMMENT'] == ' fi') | (part['BRAND'] == 'Brand#24') | (part['P_NAME'] != 'blu') & (part['MFGR'].isin(['Manufacturer#2', 'Manufacturer#4', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#5'])) | (part['BRAND'] == 'Brand#43') | (part['BRAND'] == 'Brand#21') | (part['TYPE'] != 'P') | (part['TYPE'] == 'STA')][['P_PARTKEY', 'BRAND', 'RETAILPRICE', 'MFGR', 'CONTAINER', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'TYPE', 'P_PARTKEY']).agg('count')

customer[(customer['C_ACCTBAL'] > 155.6661608026618) | (customer['C_COMMENT'] == '.') & (customer['C_CUSTKEY'] < 36) & (customer['C_ADDRESS'] != 'l') | (customer['C_COMMENT'].str.startswith(' ')) | (customer['C_PHONE'] != '1') & (customer['MKTSEGMENT'].isin(['HOUSEHOLD'])) & (customer['C_NATIONKEY'] >= 10)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 't') & (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] <= 1) & (nation['N_NAME'].str.startswith('C'))].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] == 0) & (region['R_COMMENT'] == 'u')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] != 'n') | (customer['C_CUSTKEY'] == 16) & (customer['C_ADDRESS'] != 'M') & (customer['C_PHONE'].str.startswith('13-')) | (customer['C_NATIONKEY'] == 9)][['MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 1)].merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] == 'c') | (customer['C_COMMENT'] == 't') | (customer['C_COMMENT'] != 'w')][['C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_NATIONKEY'] > 4) | (nation['N_NATIONKEY'] < 0) | (nation['N_COMMENT'].str.startswith('h'))][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME', 'N_COMMENT']).agg('count')

customer[(customer['C_COMMENT'] == 't') & (customer['C_CUSTKEY'] <= 64) & (customer['C_NATIONKEY'] <= 3) | (customer['C_PHONE'] == '3')][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '2') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING']))][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_COMMENT'].str.startswith(' ')) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_REGIONKEY'] == 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '22-') & (customer['C_CUSTKEY'] <= 23) | (customer['C_ADDRESS'] != 'X')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT']].merge(nation[(nation['N_NAME'] == 'U') | (nation['N_NAME'] != 'V')].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY'])) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NATIONKEY'] <= 1)][['C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'] == 'u')].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] != 'h') & (region['R_REGIONKEY'] != 3)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] == 't') | (orders['TOTALPRICE'] == 75205.42490139017) | (orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] != 'F') & (orders['O_ORDERKEY'] != 764) & (orders['O_COMMENT'].str.startswith('the')) & (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] >= 0)][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'].str.startswith('n')) & (customer['C_ACCTBAL'] <= 8732.580025173202) | (customer['C_ADDRESS'] == 'O') & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] > 5)][['C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] != 31164) | (orders['O_COMMENT'] != 't') & (orders['ORDERSTATUS'] != 'P') & (orders['O_COMMENT'].str.startswith('w')) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_CUSTKEY'] > 131109)][['ORDERDATE', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_ACCTBAL', 'C_NAME', 'MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'c') & (partsupp['PS_SUPPKEY'] >= 2562) | (partsupp['SUPPLYCOST'] > 554.7134637995049)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] <= 71) | (supplier['S_NATIONKEY'] != 16) & (supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_NAME'] == 'S') & (supplier['S_ACCTBAL'] <= 2296.5181539368796)].merge(nation[(nation['N_NATIONKEY'] >= 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('ly '))].merge(supplier[(supplier['S_COMMENT'].str.startswith('bli')) | (supplier['S_PHONE'].str.startswith('2')) | (supplier['S_PHONE'] == '2') & (supplier['S_ADDRESS'] != 'w')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'i') | (nation['N_NATIONKEY'] != 17) & (nation['N_REGIONKEY'] == 0) | (nation['N_NAME'].str.startswith('J'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] > 10) & (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.05610616292996859) | (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) & (lineitem['EXTENDEDPRICE'] >= 54590.308366766854) | (lineitem['LINENUMBER'] <= 4) & (lineitem['L_PARTKEY'] != 59063) & (lineitem['SHIPMODE'].isin(['TRUCK', 'MAIL', 'AIR', 'REG AIR', 'SHIP']))][['TAX', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 22.58260364504549) & (partsupp['PS_SUPPKEY'] < 4471) & (partsupp['SUPPLYCOST'] == 154.6449772188991) & (partsupp['PS_PARTKEY'] != 36) | (partsupp['PS_PARTKEY'] != 26)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NAME'] == 'E') | (nation['N_NAME'] == 'K')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 52172.74198911968) | (lineitem['L_SUPPKEY'] == 8983) | (lineitem['RETURNFLAG'].isin(['R', 'A'])) & (lineitem['LINENUMBER'] >= 4) & (lineitem['L_PARTKEY'] <= 126721) & (lineitem['SHIPMODE'] != 'MAIL')].merge(partsupp[(partsupp['P_COMMENT'] != ' ')][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(nation[(nation['N_COMMENT'] != ' ') & (nation['N_NATIONKEY'] > 1) | (nation['N_COMMENT'] != ' ') | (nation['N_NAME'].str.startswith('M'))].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] > 1) & (lineitem['L_PARTKEY'] >= 112621) & (lineitem['L_PARTKEY'] == 111549) & (lineitem['TAX'] <= 0.057041656550736265) & (lineitem['EXTENDEDPRICE'] >= 55269.371440853414) & (lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'MAIL', 'SHIP', 'TRUCK', 'FOB', 'RAIL'])) | (lineitem['LINESTATUS'] == 'F') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['TAX'] > 0.06190470075974076) | (lineitem['L_COMMENT'].str.startswith('.'))].merge(partsupp[(partsupp['PS_PARTKEY'] >= 17) | (partsupp['SUPPLYCOST'] <= 695.8537559226892) & (partsupp['AVAILQTY'] <= 4666) | (partsupp['PS_SUPPKEY'] >= 3342)].merge(part[(part['P_NAME'] == 'lin')][['P_PARTKEY', 'P_NAME', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['P_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['QUANTITY'] <= 22) | (lineitem['L_COMMENT'] == 'ly ')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 26) & (partsupp['PS_PARTKEY'] <= 35) & (partsupp['P_COMMENT'] != 'f') & (partsupp['P_COMMENT'] != 'r')][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(part[['P_NAME', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'TYPE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F'])) | (lineitem['DISCOUNT'] == 0.09048493951860041) & (lineitem['EXTENDEDPRICE'] >= 75687.09031675922) & (lineitem['L_ORDERKEY'] <= 16) | (lineitem['L_PARTKEY'] >= 17078) | (lineitem['LINENUMBER'] == 3) & (lineitem['L_PARTKEY'] < 46418) | (lineitem['SHIPDATE'] < '1992-04-27')].merge(orders[(orders['TOTALPRICE'] > 159514.35791887614) | (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT'])) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['ORDERSTATUS'] != 'P')][['O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY', 'C_COMMENT']).agg('count')

lineitem[(lineitem['L_ORDERKEY'] == 146) | (lineitem['TAX'] >= 0.045744736450872236)].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_COMMENT'].str.startswith('i')) | (orders['ORDERSTATUS'] != 'O') & (orders['TOTALPRICE'] != 351183.45560437127) | (orders['TOTALPRICE'] >= 317097.06325083366) & (orders['ORDERSTATUS'] == 'P')][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] >= 40) | (lineitem['LINENUMBER'] == 5) & (lineitem['L_PARTKEY'] == 152716) & (lineitem['TAX'] == 0.06201826838777832) | (lineitem['EXTENDEDPRICE'] > 83544.42844431529) & (lineitem['L_SUPPKEY'] > 3228) | (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON', 'NONE']))].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] != 'n') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] != 'S')].merge(nation.merge(region[(region['R_NAME'] != 'AFR') | (region['R_NAME'].str.startswith('AME'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['DISCOUNT'] != 0.027526827098735076) & (lineitem['RETURNFLAG'] == 'R')][['DISCOUNT', 'COMMITDATE', 'LINENUMBER', 'L_ORDERKEY', 'L_SUPPKEY', 'L_COMMENT', 'TAX']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('m')) | (part['CONTAINER'] != 'MED')][['TYPE', 'P_PARTKEY', 'SIZE', 'MFGR', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'R')].merge(partsupp[(partsupp['P_COMMENT'] != ' ') & (partsupp['PS_SUPPKEY'] >= 1846) & (partsupp['AVAILQTY'] <= 8975) | (partsupp['SUPPLYCOST'] == 24.760253260654437)][['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('l')) | (nation['N_COMMENT'] != 's') | (nation['N_COMMENT'] != 'i') & (nation['N_NAME'] != 'I')].merge(region[(region['R_REGIONKEY'] > 3)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['L_COMMENT'] == 'e') & (lineitem['QUANTITY'] >= 48) | (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'FOB'])) & (lineitem['EXTENDEDPRICE'] >= 22210.804052318577) | (lineitem['L_SUPPKEY'] < 6207) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINESTATUS'].isin(['O', 'F'])) | (lineitem['SHIPMODE'].isin(['RAIL', 'REG AIR', 'AIR', 'TRUCK', 'MAIL']))][['TAX', 'RECEIPTDATE', 'L_PARTKEY', 'DISCOUNT', 'COMMITDATE', 'SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER']].merge(partsupp.merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'REG AIR']))][['QUANTITY', 'L_COMMENT', 'L_PARTKEY', 'SHIPINSTRUCT', 'TAX', 'L_SUPPKEY', 'RETURNFLAG', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('t')) & (partsupp['SUPPLYCOST'] < 324.830641577385) | (partsupp['AVAILQTY'] < 4929)].merge(supplier[(supplier['S_NATIONKEY'] == 21) & (supplier['S_ACCTBAL'] <= 1330.733794452489) | (supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] == 'Y') | (supplier['S_COMMENT'] != 'w') & (supplier['S_PHONE'] == '2')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] < 0.029884878406816976) | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['SHIPMODE'] == 'RAIL') & (lineitem['DISCOUNT'] >= 0.09847259125605004) | (lineitem['TAX'] >= 0.006360060944566897) | (lineitem['L_COMMENT'] != 'v')].merge(partsupp.merge(supplier[(supplier['S_PHONE'] == '17-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'M') | (region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['TAX'] == 0.04639611436393112) | (lineitem['L_ORDERKEY'] >= 100) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['QUANTITY'] > 48) | (lineitem['LINENUMBER'] >= 3) | (lineitem['L_COMMENT'] == 'n') & (lineitem['L_ORDERKEY'] > 30) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN')].merge(partsupp[(partsupp['PS_PARTKEY'] == 49) | (partsupp['PS_PARTKEY'] != 17)].merge(part[(part['BRAND'] != 'Brand#11') & (part['BRAND'] == 'Brand#12') & (part['SIZE'] == 40) & (part['TYPE'].str.startswith('STA')) & (part['P_PARTKEY'] < 91) | (part['P_PARTKEY'] >= 148)][['P_PARTKEY', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'SHIPINSTRUCT', 'LINENUMBER', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPMODE', 'EXTENDEDPRICE']].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['TOTALPRICE'] < 107677.91264429156) & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] <= 340600.4836266395) & (orders['O_CUSTKEY'] <= 63594)].merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH'])) & (orders['O_CUSTKEY'] == 96626) & (orders['O_ORDERKEY'] == 736) | (orders['ORDERSTATUS'].isin(['P'])) | (orders['ORDERSTATUS'] == 'P') & (orders['SHIPPRIORITY'] != 0) | (orders['O_ORDERKEY'] == 616) & (orders['ORDERSTATUS'].isin(['P']))].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']).agg('sum', numeric_only=True)

lineitem[['L_PARTKEY', 'LINENUMBER', 'TAX', 'SHIPDATE', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 420.16148137223337)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ADDRESS'].str.startswith('p')) | (customer['C_PHONE'] != '3') | (customer['C_PHONE'] == '27-') & (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_NAME'].str.startswith('C')) & (customer['C_ACCTBAL'] < 3297.468800798257)][['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'] != 'r') | (orders['O_ORDERKEY'] != 749)].merge(customer[(customer['C_ADDRESS'].str.startswith('E'))][['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NATIONKEY'] >= 16) | (nation['N_REGIONKEY'] < 1)].merge(region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] >= 208954.12595609698) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['TOTALPRICE'] > 325931.00366806996) | (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['O_CUSTKEY'] > 32662) | (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] == 46558) | (orders['ORDERDATE'] != '1998-07-21')][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[(customer['C_PHONE'].str.startswith('13-'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_CUSTKEY'] != 30497) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] != 'P') | (orders['O_ORDERKEY'] > 116) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERSTATUS'] != 'O')][['O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] <= '1992-01-13')].merge(customer[['C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'l') & (region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] != 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['ORDERSTATUS'] != 'O') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] != 490) & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERSTATUS'].isin(['P']))].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_PHONE'].str.startswith('3'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] <= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] != 'y') & (orders['O_CUSTKEY'] <= 3531) | (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERSTATUS'] == 'O')].merge(customer[(customer['C_ADDRESS'] != 'n') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] <= 9138.922343440978) | (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_ADDRESS'] == 'v') | (customer['C_COMMENT'] == 'd') | (customer['C_ACCTBAL'] == 8770.958069835047)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != 'e') | (orders['ORDERSTATUS'] == 'P') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED', '5-LOW'])) & (orders['TOTALPRICE'] > 271038.596071215) & (orders['O_CUSTKEY'] < 45924) & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] == 'O') | (orders['O_ORDERKEY'] > 343)][['O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == '-') & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_ORDERKEY'] == 377) & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_CUSTKEY'] <= 132130) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] == 'x')][['O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_NAME', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 142914) & (orders['SHIPPRIORITY'] == 0) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] <= 733) & (orders['O_ORDERKEY'] == 340) | (orders['O_ORDERKEY'] != 520) & (orders['CLERK'] == 'C') | (orders['ORDERSTATUS'] != 'O') & (orders['CLERK'] != 'C')].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 225) & (orders['CLERK'] == 'C') | (orders['O_COMMENT'].str.startswith('the')) | (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['O_ORDERKEY'] == 715) | (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] >= 240904.1404616743) | (orders['ORDERPRIORITY'] != '3-MEDIUM')].merge(customer[(customer['C_ADDRESS'].str.startswith('u')) | (customer['MKTSEGMENT'] == 'BUILDING') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_COMMENT'] != 'w') & (customer['C_ACCTBAL'] == 6435.121285395339) | (customer['C_ACCTBAL'] >= -612.6611177041896) | (customer['C_ADDRESS'].str.startswith('c'))][['C_NAME', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NAME', 'MKTSEGMENT', 'C_ADDRESS']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 522) & (orders['O_ORDERKEY'] >= 101) | (orders['TOTALPRICE'] != 296454.3965472825)][['O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] <= 23) | (orders['O_ORDERKEY'] != 735) & (orders['TOTALPRICE'] == 346251.6373103235) & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['ORDERPRIORITY'].isin(['2-HIGH']))].merge(customer[['C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] > 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 557) & (orders['O_CUSTKEY'] < 65265) & (orders['O_ORDERKEY'] > 389) | (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] != '5-LOW')].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] == 0) | (nation['N_COMMENT'] != 'o')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] != 'l') | (orders['TOTALPRICE'] > 192577.81644297723) & (orders['ORDERDATE'] < '1992-01-13') | (orders['ORDERPRIORITY'] != '5-LOW') & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_ORDERKEY'] == 720) & (orders['ORDERDATE'] < '1998-07-21')].merge(customer.merge(nation[(nation['N_NATIONKEY'] >= 17) & (nation['N_NATIONKEY'] >= 8)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 103772.17197764743)].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] < 0) & (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

orders[['ORDERDATE', 'O_CUSTKEY', 'CLERK', 'SHIPPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_COMMENT'] == 'e') | (customer['C_COMMENT'].str.startswith('l')) | (customer['C_ADDRESS'] != 'T') & (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] != 83) | (customer['C_COMMENT'] != ',') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] != 'C')].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERPRIORITY', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['C_PHONE'].str.startswith('18-'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

orders[['O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_ACCTBAL'] >= 8352.174583066655) & (customer['C_ACCTBAL'] < 3190.0794864675627) & (customer['C_PHONE'] != '3') | (customer['C_COMMENT'].str.startswith(',')) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_NAME'] == 'G') & (nation['N_REGIONKEY'] >= 2)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] == '3') & (customer['C_COMMENT'] != 't') | (customer['C_NAME'] == 'C')][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] != 't')].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders[['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_COMMENT'] == 'n') & (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'] != 'w') & (customer['C_NATIONKEY'] > 20) | (customer['C_NATIONKEY'] > 1)].merge(nation[(nation['N_NATIONKEY'] == 11) & (nation['N_NAME'] == 'I') & (nation['N_REGIONKEY'] < 3) & (nation['N_NATIONKEY'] <= 15)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('count')

orders[['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] == '18-') & (customer['C_ADDRESS'] == 'a') & (customer['C_ADDRESS'] == 'D') | (customer['C_ADDRESS'] != '8') & (customer['C_NATIONKEY'] >= 2) | (customer['C_ACCTBAL'] <= -123.09104618634001) | (customer['C_COMMENT'].str.startswith('q')) & (customer['C_NATIONKEY'] < 12)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY']).agg('min', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ADDRESS'].str.startswith('1')) & (supplier['S_ADDRESS'] == 'L') & (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] == 'bli') | (supplier['S_NATIONKEY'] != 1) | (supplier['S_COMMENT'].str.startswith('the'))][['S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] >= 5) | (supplier['S_PHONE'] != '2') & (supplier['S_SUPPKEY'] >= 189) & (supplier['S_ADDRESS'].str.startswith('y')) | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] <= 20) & (supplier['S_COMMENT'].str.startswith('s'))][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] >= 12) | (nation['N_NAME'].str.startswith('B')) | (nation['N_NATIONKEY'] <= 13)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 2586)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['SIZE'] < 30) | (part['RETAILPRICE'] != 1037.9248082621884) & (part['PT_COMMENT'] != 'ss ')][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY', 'SIZE', 'PT_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] == 3686) & (partsupp['PS_SUPPKEY'] >= 7126) & (partsupp['PS_PARTKEY'] > 29) & (partsupp['P_COMMENT'] == 'j') & (partsupp['P_COMMENT'] == 'x')].merge(supplier[(supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_ACCTBAL'] <= 7691.870487343312) & (supplier['S_SUPPKEY'] == 168)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] >= 2003) | (partsupp['PS_SUPPKEY'] >= 1834) & (partsupp['AVAILQTY'] != 7092)][['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']].merge(nation[(nation['N_REGIONKEY'] != 1) & (nation['N_COMMENT'].str.startswith('r'))].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 2831) | (partsupp['SUPPLYCOST'] > 17.281094676047466)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] > 61) & (supplier['S_ADDRESS'] != 'm')][['S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'h')].merge(supplier[(supplier['S_SUPPKEY'] < 117) | (supplier['S_ACCTBAL'] > 1455.178808463241) | (supplier['S_ACCTBAL'] >= 4379.471370704313) | (supplier['S_PHONE'] == '3') & (supplier['S_NATIONKEY'] > 16) | (supplier['S_ACCTBAL'] <= -118.99980291018085)][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] == 'l') & (partsupp['SUPPLYCOST'] >= 820.4885842285349) & (partsupp['AVAILQTY'] >= 8810)].merge(supplier.merge(nation[(nation['N_NAME'] != 'V') | (nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('J'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] != 1) & (region['R_REGIONKEY'] > 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Q')) | (supplier['S_ACCTBAL'] > 3933.2031082750927) | (supplier['S_ADDRESS'] != 'J') | (supplier['S_SUPPKEY'] < 170)].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'].str.startswith('i'))][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 3) & (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] == 3)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] > 22) | (supplier['S_COMMENT'] == 'b') | (supplier['S_ACCTBAL'] != 3806.1790389968637)][['S_ADDRESS', 'S_PHONE', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 3) | (region['R_REGIONKEY'] == 3)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NATIONKEY'] == 18) | (supplier['S_COMMENT'] != 'the') & (supplier['S_PHONE'] == '17-') & (supplier['S_SUPPKEY'] <= 98)][['S_NAME', 'S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'] == 'K') | (nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] >= 1)].merge(region[(region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] <= 157) & (supplier['S_COMMENT'].str.startswith(' sl')) | (supplier['S_SUPPKEY'] > 104) | (supplier['S_PHONE'] == '32-') & (supplier['S_SUPPKEY'] < 77)][['S_NAME', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'] == 'R') | (nation['N_NATIONKEY'] == 18) & (nation['N_NAME'] == 'V')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] == 68) & (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'q') | (supplier['S_ADDRESS'].str.startswith('k'))][['S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_ACCTBAL', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] <= 1) & (nation['N_COMMENT'] != 'l') & (nation['N_NATIONKEY'] == 19)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 7682.75168484242) | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] < 69) | (customer['C_COMMENT'] != 'u') | (customer['C_ACCTBAL'] != 3055.036350353309) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'] == 'a') | (customer['C_COMMENT'] != 't')].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_NAME'] == 'S') | (nation['N_COMMENT'] == 'p') | (nation['N_REGIONKEY'] < 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 17) | (customer['C_ACCTBAL'] > 4581.31300379449) | (customer['C_ACCTBAL'] <= 6313.995153597573) & (customer['C_ADDRESS'] != 'i') & (customer['C_ADDRESS'].str.startswith('n')) & (customer['C_CUSTKEY'] == 17) & (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE'])) | (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NATIONKEY'] != 20)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '22-') & (customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'R') | (customer['C_NATIONKEY'] != 6)].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_COMMENT'].str.startswith('e')) & (nation['N_NAME'] != 'M')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] <= 0) & (nation['N_NATIONKEY'] == 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] == 2) & (region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] != '0') & (customer['C_ADDRESS'] != 'L') | (customer['C_CUSTKEY'] >= 82) & (customer['C_NATIONKEY'] <= 17) & (customer['C_NATIONKEY'] == 5) | (customer['C_ADDRESS'].str.startswith('w'))].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] == 639) | (orders['TOTALPRICE'] < 175240.56676691532) | (orders['O_ORDERKEY'] < 663) | (orders['O_CUSTKEY'] < 142875)].merge(customer[(customer['C_COMMENT'].str.startswith(' '))][['C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] != 's') | (nation['N_NATIONKEY'] < 6) | (nation['N_NATIONKEY'] < 22)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] > 36) | (partsupp['PS_PARTKEY'] <= 37) & (partsupp['AVAILQTY'] < 7551)].merge(supplier[(supplier['S_ADDRESS'] != 'r') & (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] == 'o')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 388.8586061496629) & (partsupp['PS_PARTKEY'] <= 1) & (partsupp['PS_PARTKEY'] == 20) | (partsupp['PS_SUPPKEY'] >= 3974) & (partsupp['SUPPLYCOST'] >= 433.1597853854001)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_ADDRESS'].str.startswith('b')) | (supplier['S_NATIONKEY'] > 17)][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_COMMENT', 'S_NATIONKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '26-') | (supplier['S_COMMENT'] == 'h') | (supplier['S_ACCTBAL'] < 8985.080153084573) | (supplier['S_ACCTBAL'] == 5015.797108951837) & (supplier['S_ACCTBAL'] == 3926.3856806248714)][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] == 7)].merge(region[(region['R_REGIONKEY'] <= 3) | (region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD']))][['L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPDATE', 'DISCOUNT']].merge(orders.merge(customer[(customer['C_ACCTBAL'] < 6729.680659091031) & (customer['C_NATIONKEY'] == 0) | (customer['C_ACCTBAL'] <= 1015.4605560359087) | (customer['C_NATIONKEY'] != 0) & (customer['C_COMMENT'] != 'e') | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] != 22) & (lineitem['LINESTATUS'] == 'O') & (lineitem['L_COMMENT'] != 'h') & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['L_ORDERKEY'] >= 193)].merge(orders[['SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] > 4698.026632106874) & (customer['C_PHONE'] == '25-') | (customer['C_NATIONKEY'] >= 11) | (customer['C_COMMENT'] != 'o') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_ADDRESS'] != 'n')].merge(nation[(nation['N_COMMENT'] != 'h') | (nation['N_NATIONKEY'] > 12) & (nation['N_COMMENT'] != 'h')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['QUANTITY'] < 37) & (lineitem['SHIPMODE'] == 'FOB') & (lineitem['L_ORDERKEY'] > 131) & (lineitem['L_SUPPKEY'] != 1789) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_ORDERKEY'] >= 167) | (lineitem['L_ORDERKEY'] >= 179) | (lineitem['L_ORDERKEY'] >= 59)].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '2') & (supplier['S_ADDRESS'] == '7') | (supplier['S_ACCTBAL'] != 348.78276285841)].merge(nation[(nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 23) & (lineitem['L_PARTKEY'] > 187665) & (lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['LINESTATUS'] == 'O')][['COMMITDATE', 'L_PARTKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'TAX']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] == 6551.08464116761) | (supplier['S_ADDRESS'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 1467.5908008792396)][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] != 'N') | (lineitem['L_ORDERKEY'] > 153)].merge(orders[(orders['O_ORDERKEY'] <= 786) & (orders['O_CUSTKEY'] >= 9345) | (orders['O_COMMENT'] == 'o') | (orders['ORDERDATE'] != '1992-01-13') & (orders['TOTALPRICE'] > 55703.56195211477) & (orders['TOTALPRICE'] != 79862.68482425199) & (orders['O_CUSTKEY'] != 110895)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] != 'a')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['R'])) & (lineitem['EXTENDEDPRICE'] > 52344.59772159023) & (lineitem['LINENUMBER'] < 4) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['EXTENDEDPRICE'] < 54471.90015749878) | (lineitem['EXTENDEDPRICE'] >= 18768.40520663005)][['L_PARTKEY', 'LINENUMBER', 'SHIPINSTRUCT', 'QUANTITY', 'LINESTATUS', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp.merge(part[['TYPE', 'P_PARTKEY', 'P_NAME', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') & (lineitem['L_SUPPKEY'] < 7793) & (lineitem['SHIPDATE'] < '1998-10-30')].merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 624) & (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'] != 'b')].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['QUANTITY'] >= 49) | (lineitem['L_SUPPKEY'] != 1790) & (lineitem['RECEIPTDATE'] < '1992-05-02') & (lineitem['EXTENDEDPRICE'] > 29640.461903272975) & (lineitem['TAX'] < 0.05238236863242081) | (lineitem['L_PARTKEY'] <= 43983) | (lineitem['SHIPMODE'] == 'AIR') | (lineitem['EXTENDEDPRICE'] > 59377.17606061002)].merge(orders[(orders['O_ORDERKEY'] == 4) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['O_CUSTKEY'] > 78960) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] != 'P') | (orders['ORDERSTATUS'] == 'O') & (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['ORDERSTATUS'].isin(['O', 'P', 'F']))].merge(customer[(customer['C_ACCTBAL'] >= 9202.81849885023) & (customer['C_ADDRESS'] != 'q') | (customer['C_ACCTBAL'] != 4920.928897832004) | (customer['C_CUSTKEY'] != 82) & (customer['C_ACCTBAL'] >= 1207.0633743055514) & (customer['C_COMMENT'] != 'f')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] == 0.06278582025408541) & (lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['EXTENDEDPRICE'] > 87260.95042003428) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['DISCOUNT'] >= 0.022420703770518483) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['L_SUPPKEY'] <= 5609) | (lineitem['LINENUMBER'] <= 3) & (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] > 177369.59741992448) & (orders['O_COMMENT'].str.startswith('y')) & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] <= '1998-07-21')].merge(customer[(customer['C_PHONE'] != '3') & (customer['C_PHONE'] == '1') | (customer['C_ACCTBAL'] < 2612.308136798232) | (customer['C_ADDRESS'] == 'a') | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ADDRESS'].str.startswith('j'))][['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['DISCOUNT', 'LINENUMBER', 'RECEIPTDATE', 'L_COMMENT', 'TAX', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'RETURNFLAG']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['CONTAINER'].str.startswith('LG')) & (part['TYPE'].str.startswith('E')) & (part['BRAND'].isin(['Brand#21', 'Brand#13', 'Brand#15', 'Brand#32', 'Brand#41', 'Brand#25', 'Brand#23', 'Brand#52', 'Brand#43', 'Brand#11', 'Brand#14', 'Brand#22', 'Brand#12', 'Brand#53', 'Brand#42', 'Brand#31', 'Brand#55', 'Brand#44', 'Brand#34'])) | (part['RETAILPRICE'] <= 1090.3381912198859) & (part['SIZE'] < 33)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']).agg('max', numeric_only=True)

lineitem[['DISCOUNT', 'RETURNFLAG', 'L_ORDERKEY', 'RECEIPTDATE', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'LINENUMBER', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 4851) | (partsupp['PS_SUPPKEY'] == 5474) & (partsupp['PS_SUPPKEY'] > 5729) | (partsupp['PS_SUPPKEY'] >= 1899)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'] != 'j')].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'DISCOUNT', 'L_ORDERKEY', 'TAX', 'SHIPDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] != 3701) | (partsupp['P_COMMENT'].str.startswith('h')) | (partsupp['SUPPLYCOST'] <= 505.55193541168416) | (partsupp['SUPPLYCOST'] < 975.0243304815895) | (partsupp['AVAILQTY'] < 5136)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] >= 10)][['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] > 7519) | (partsupp['SUPPLYCOST'] <= 778.4430673074446)].merge(supplier[(supplier['S_ADDRESS'] == '1') & (supplier['S_NAME'] != 'S') | (supplier['S_PHONE'].str.startswith('14-')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'] != 'J') & (supplier['S_COMMENT'] != 'j') & (supplier['S_ADDRESS'] != 'Z')].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem[['QUANTITY', 'COMMITDATE', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'SHIPMODE']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] == 0) & (region['R_REGIONKEY'] < 2) | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['QUANTITY', 'EXTENDEDPRICE', 'L_COMMENT', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp.merge(part[(part['BRAND'] != 'Brand#23') & (part['CONTAINER'] == 'WRAP') & (part['P_PARTKEY'] < 180) | (part['P_PARTKEY'] <= 16) & (part['P_PARTKEY'] > 178) & (part['RETAILPRICE'] > 1092.171629093292) | (part['P_NAME'] != 'blu') | (part['BRAND'] != 'Brand#21') & (part['TYPE'].str.startswith('SMA'))][['P_PARTKEY', 'TYPE', 'CONTAINER', 'SIZE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME', 'SIZE']).agg('max', numeric_only=True)

lineitem[['SHIPDATE', 'SHIPMODE', 'L_COMMENT', 'RECEIPTDATE', 'DISCOUNT', 'LINENUMBER', 'LINESTATUS', 'L_PARTKEY', 'RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] >= 21) | (supplier['S_COMMENT'] != '!')][['S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_ADDRESS', 'S_ACCTBAL']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'SHIPMODE', 'L_COMMENT', 'L_SUPPKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'QUANTITY']].merge(orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1998-07-21') & (orders['O_COMMENT'] == 'r') | (orders['O_ORDERKEY'] <= 677) & (orders['ORDERSTATUS'] != 'P') & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_COMMENT'] != ' re') | (orders['ORDERPRIORITY'] == '1-URGENT')].merge(customer[['C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE'])) & (customer['MKTSEGMENT'] == 'HOUSEHOLD') | (customer['C_NATIONKEY'] < 8) | (customer['C_COMMENT'] != 't')][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

orders.merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith('a')) & (customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != '9')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] > 5)].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'] == 'P')].merge(customer[['C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 1) | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] > 2)].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] > 712) | (orders['O_ORDERKEY'] > 66) | (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_CUSTKEY'] > 118395) & (orders['O_COMMENT'].str.startswith('x')) | (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERSTATUS'] == 'F')][['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'] != 'M') | (nation['N_NATIONKEY'] <= 12) & (nation['N_NATIONKEY'] == 18)].merge(region[(region['R_REGIONKEY'] != 0) | (region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['F'])) & (orders['ORDERDATE'] < '1992-01-13') & (orders['TOTALPRICE'] >= 28201.96231001831) & (orders['SHIPPRIORITY'] == 0) & (orders['ORDERSTATUS'].isin(['F'])) | (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] < 720) & (orders['O_ORDERKEY'] >= 143) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '4-NOT SPECIFIED']))].merge(customer.merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] >= 3) | (nation['N_NAME'] == 'B')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F'])) | (orders['O_COMMENT'] == '-') & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'].isin(['P', 'F'])) | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] < 0)].merge(customer[(customer['C_ACCTBAL'] != 3076.8997217460733) | (customer['C_PHONE'].str.startswith('1')) | (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] != 19) | (customer['C_NATIONKEY'] <= 17) | (customer['C_COMMENT'] != 'i') & (customer['C_ACCTBAL'] != 6545.864402927083)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 634) & (orders['TOTALPRICE'] != 318812.23971930007) & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] != 146071)][['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['C_COMMENT'] != ',') & (customer['C_COMMENT'] != 'y')][['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] > 253) & (orders['O_ORDERKEY'] > 119) & (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_ORDERKEY'] != 92) | (orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['ORDERDATE'] <= '1992-01-13') & (orders['ORDERSTATUS'].isin(['O']))].merge(customer[(customer['C_COMMENT'] == 'e') & (customer['C_NATIONKEY'] == 8) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING'])) & (customer['C_NAME'] != 'C') | (customer['C_COMMENT'].str.startswith('k')) | (customer['C_PHONE'].str.startswith('27-')) & (customer['C_CUSTKEY'] == 92) | (customer['C_ADDRESS'].str.startswith('f'))].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_NAME'] != 'A')][['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY', 'CLERK']].merge(customer[(customer['C_COMMENT'] == 'q')].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] <= 21) & (nation['N_NATIONKEY'] <= 8)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] != 8)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'f') & (customer['C_CUSTKEY'] != 23) & (customer['C_PHONE'] == '3')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NATIONKEY'] < 22) | (supplier['S_ADDRESS'] == 'H') & (supplier['S_NATIONKEY'] > 11) & (supplier['S_COMMENT'] == 'h') | (supplier['S_NATIONKEY'] > 6)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] <= 2661) | (partsupp['AVAILQTY'] >= 7802) | (partsupp['P_COMMENT'] == 'i') | (partsupp['P_COMMENT'].str.startswith('v'))][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] >= 54)].merge(nation[(nation['N_COMMENT'] == 'c') | (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'].str.startswith('I')) | (nation['N_COMMENT'] == 'o')].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 46) | (partsupp['P_COMMENT'] == 'h') & (partsupp['AVAILQTY'] < 130) & (partsupp['SUPPLYCOST'] == 438.54031237266844)].merge(supplier[(supplier['S_COMMENT'] != 'a') | (supplier['S_ACCTBAL'] < 5080.426295043781) & (supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] != '5') | (supplier['S_ADDRESS'].str.startswith('J'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_REGIONKEY'] != 1) | (nation['N_REGIONKEY'] > 1) | (nation['N_REGIONKEY'] != 1)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] > 42) | (partsupp['PS_PARTKEY'] == 43)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('l')) & (part['CONTAINER'] == 'MED') | (part['CONTAINER'] != 'LG') & (part['P_PARTKEY'] > 165) | (part['BRAND'].isin(['Brand#21', 'Brand#41', 'Brand#11', 'Brand#55', 'Brand#32', 'Brand#54', 'Brand#33', 'Brand#23', 'Brand#43', 'Brand#31', 'Brand#52', 'Brand#13', 'Brand#45', 'Brand#53', 'Brand#15'])) | (part['SIZE'] == 7) & (part['RETAILPRICE'] > 1030.3069259512154) | (part['PT_COMMENT'] != 'x') & (part['P_PARTKEY'] >= 27)][['CONTAINER', 'P_PARTKEY', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['TYPE', 'BRAND', 'CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 3348) & (partsupp['PS_SUPPKEY'] <= 7509) | (partsupp['PS_SUPPKEY'] < 3582) | (partsupp['AVAILQTY'] > 3657)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 14) & (supplier['S_PHONE'] != '14-')].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_REGIONKEY'] != 0) & (nation['N_COMMENT'] != 'u') & (nation['N_COMMENT'] == 'r')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 6539) & (partsupp['P_COMMENT'].str.startswith('n')) | (partsupp['SUPPLYCOST'] >= 160.77286003832293) | (partsupp['SUPPLYCOST'] != 90.60250603387063) & (partsupp['SUPPLYCOST'] != 504.0353644356087)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] >= 9) & (nation['N_NATIONKEY'] != 16) | (nation['N_COMMENT'].str.startswith('u')) | (nation['N_NAME'] == 'R')].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_NAME'].str.startswith('E'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 's') & (partsupp['SUPPLYCOST'] != 170.4333070536554) | (partsupp['AVAILQTY'] == 6771) | (partsupp['PS_SUPPKEY'] >= 7455)].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

partsupp[['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] < 114) | (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 7) & (supplier['S_ACCTBAL'] <= 4741.866252904435) & (supplier['S_PHONE'] != '2') & (supplier['S_NATIONKEY'] < 5)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 154) & (supplier['S_ACCTBAL'] == 7246.182560897584) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] == 'd')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation.merge(region[(region['R_COMMENT'] != 'l')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('b')) & (part['BRAND'].isin(['Brand#15', 'Brand#43', 'Brand#25', 'Brand#23', 'Brand#44', 'Brand#42'])) | (part['TYPE'] == 'S') & (part['MFGR'] != 'Manufacturer#4') & (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#2', 'Manufacturer#1'])) | (part['BRAND'] == 'Brand#25') & (part['P_PARTKEY'] >= 161)][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND', 'P_PARTKEY', 'TYPE', 'RETAILPRICE']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] >= 173) | (supplier['S_ADDRESS'] == 'm') | (supplier['S_NATIONKEY'] > 14) | (supplier['S_PHONE'].str.startswith('2'))].merge(nation[(nation['N_REGIONKEY'] < 1) & (nation['N_NATIONKEY'] != 12)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] == 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_ACCTBAL'] > 299.35913041170784) & (supplier['S_NATIONKEY'] != 22) & (supplier['S_ADDRESS'] == 'M') & (supplier['S_SUPPKEY'] != 108)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] >= 7) | (nation['N_REGIONKEY'] <= 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'M') & (customer['C_NATIONKEY'] != 8) | (customer['C_ACCTBAL'] < 2150.2072890297104) | (customer['C_CUSTKEY'] > 99) & (customer['C_NATIONKEY'] > 15) | (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'AUTOMOBILE')].merge(nation[(nation['N_REGIONKEY'] != 2) & (nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] != 's') & (nation['N_COMMENT'] != 'h')][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'l') | (region['R_NAME'] == 'AFR')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('count')

customer[(customer['C_ADDRESS'] == 'E') | (customer['C_ACCTBAL'] == 4843.893810266135) | (customer['C_ACCTBAL'] <= 5812.940107529573) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_CUSTKEY'] >= 89)][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] != 'c') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= 3114.7408666990887) | (customer['C_PHONE'] == '25-')][['MKTSEGMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'A') | (region['R_REGIONKEY'] == 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'] == 'a') & (customer['C_CUSTKEY'] >= 40) & (customer['C_NATIONKEY'] <= 3) | (customer['C_COMMENT'] != 'f') & (customer['C_ACCTBAL'] >= 2475.8577335403866)][['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'B') & (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'n')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_COMMENT'] == 'q') | (customer['C_ADDRESS'] == 'U') | (customer['C_NAME'] == 'C') | (customer['C_COMMENT'].str.startswith('g')) & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] <= 757.323199127221) | (customer['C_COMMENT'].str.startswith('d'))][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 89) | (customer['C_ACCTBAL'] >= 2220.298950815311) & (customer['C_ADDRESS'] != ',') | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_ACCTBAL'] != 6595.46256655957) & (customer['C_COMMENT'] != 'h') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') | (customer['C_NAME'] != 'C')][['C_CUSTKEY', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'].str.startswith('r')) & (nation['N_NATIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 0)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 4599.553409932865) & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD', 'MACHINERY']))][['C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'R') & (nation['N_COMMENT'] != 's')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

customer[(customer['C_NATIONKEY'] > 6) & (customer['C_NATIONKEY'] >= 15) & (customer['C_ACCTBAL'] >= 120.9443312599144) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_COMMENT'] != 'w') | (customer['C_ADDRESS'] != '0') & (customer['C_PHONE'] != '27-') | (customer['C_ACCTBAL'] > 3305.7942212980197)][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_REGIONKEY'] < 1) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] >= 54578) | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_CUSTKEY'] < 147366) | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERDATE'] < '1992-01-13')].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY'])) & (customer['C_NATIONKEY'] == 14) | (customer['C_CUSTKEY'] < 48) | (customer['C_PHONE'].str.startswith('2')) & (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('s'))].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'] != 't') & (nation['N_NAME'] != 'G') | (nation['N_NATIONKEY'] == 6)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] >= 130199) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH'])) | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'].str.startswith('k')) & (orders['O_CUSTKEY'] == 15878) | (orders['O_ORDERKEY'] == 206) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] > '1998-07-21')].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.05025085913370528) | (lineitem['LINENUMBER'] > 2) & (lineitem['SHIPMODE'] != 'REG AIR') | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_ORDERKEY'] >= 102) & (lineitem['TAX'] != 0.041270832472938446) & (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['L_ORDERKEY'] != 183) | (lineitem['DISCOUNT'] < 0.06757167541084334)].merge(partsupp[(partsupp['SUPPLYCOST'] > 66.46782486099659)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] == 134) | (supplier['S_NATIONKEY'] == 9) | (supplier['S_PHONE'].str.startswith('3'))][['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.002342777676972474) & (lineitem['LINESTATUS'] == 'F') & (lineitem['L_PARTKEY'] != 134267) | (lineitem['L_PARTKEY'] != 92482) | (lineitem['LINESTATUS'] != 'O') & (lineitem['L_ORDERKEY'] >= 105) & (lineitem['RETURNFLAG'].isin(['N'])) & (lineitem['L_PARTKEY'] < 126589) & (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['RECEIPTDATE'] >= '1992-05-02')].merge(partsupp[(partsupp['PS_PARTKEY'] != 24) | (partsupp['AVAILQTY'] == 6440) | (partsupp['PS_PARTKEY'] > 13) & (partsupp['AVAILQTY'] != 313) | (partsupp['AVAILQTY'] >= 7426)].merge(part[(part['PT_COMMENT'] != ' fi') & (part['P_PARTKEY'] > 112) | (part['SIZE'] == 18) | (part['TYPE'].str.startswith('S')) & (part['P_PARTKEY'] < 83) & (part['TYPE'].str.startswith('M')) | (part['PT_COMMENT'].str.startswith('u'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 34316.31111270029) & (lineitem['L_PARTKEY'] < 37076) & (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['L_ORDERKEY'] > 55) | (lineitem['DISCOUNT'] >= 0.055311792928963655) & (lineitem['TAX'] == 0.024831718899474532) & (lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') | (lineitem['SHIPDATE'] != '1998-10-30')].merge(partsupp.merge(supplier[['S_SUPPKEY', 'S_ADDRESS', 'S_PHONE', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'p') & (nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] > 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['L_SUPPKEY'] == 1300) & (lineitem['L_COMMENT'] != 'l') | (lineitem['SHIPDATE'] != '1992-04-27') | (lineitem['L_ORDERKEY'] < 146) & (lineitem['QUANTITY'] > 3) | (lineitem['QUANTITY'] > 46)][['L_ORDERKEY', 'L_COMMENT', 'RECEIPTDATE', 'DISCOUNT', 'COMMITDATE']].merge(orders[(orders['O_COMMENT'].str.startswith('q')) & (orders['O_CUSTKEY'] <= 80015) & (orders['SHIPPRIORITY'] == 0) | (orders['CLERK'] != 'C') | (orders['ORDERPRIORITY'] == '1-URGENT') & (orders['O_ORDERKEY'] != 634) | (orders['SHIPPRIORITY'] == 0) | (orders['SHIPPRIORITY'] <= 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['CLERK', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['DISCOUNT'] <= 0.05508473900548677) & (lineitem['QUANTITY'] < 47) | (lineitem['DISCOUNT'] > 0.07197186334655474) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'DELIVER IN PERSON', 'TAKE BACK RETURN', 'COLLECT COD'])) | (lineitem['L_COMMENT'] != 'lit') & (lineitem['RETURNFLAG'].isin(['R']))].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['SIZE'] == 37) | (part['BRAND'].isin(['Brand#24', 'Brand#53', 'Brand#22', 'Brand#54', 'Brand#25', 'Brand#14', 'Brand#44'])) & (part['P_NAME'].str.startswith('o')) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#2', 'Manufacturer#4'])) & (part['MFGR'] != 'Manufacturer#3') | (part['RETAILPRICE'] > 1021.2060228520863) | (part['MFGR'].isin(['Manufacturer#2'])) | (part['CONTAINER'] == 'JUMBO')][['P_PARTKEY', 'MFGR', 'CONTAINER', 'RETAILPRICE', 'SIZE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'] == 'A')].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'] != 'p') & (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINENUMBER'] < 1) & (lineitem['LINENUMBER'] > 3)][['L_PARTKEY', 'SHIPMODE', 'LINENUMBER', 'L_COMMENT', 'RETURNFLAG', 'EXTENDEDPRICE', 'SHIPDATE', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 1) | (partsupp['PS_SUPPKEY'] == 6985) & (partsupp['P_COMMENT'].str.startswith('r'))][['AVAILQTY', 'PS_PARTKEY']].merge(part[['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPMODE'] == 'FOB')][['SHIPDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['P_COMMENT'] != 'ly ') & (partsupp['SUPPLYCOST'] < 224.67415543136883) & (partsupp['PS_PARTKEY'] > 28)].merge(part[['P_PARTKEY', 'MFGR', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'P_NAME', 'BRAND', 'RETAILPRICE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['L_ORDERKEY'] > 44) & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['DISCOUNT'] <= 0.056944677191927195) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['TAX'] >= 0.0036297279330980013)][['QUANTITY', 'DISCOUNT', 'L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINENUMBER', 'L_SUPPKEY', 'LINESTATUS']].merge(partsupp[(partsupp['AVAILQTY'] < 2482) | (partsupp['PS_SUPPKEY'] < 1371) | (partsupp['PS_PARTKEY'] != 28) & (partsupp['PS_SUPPKEY'] != 5098)][['PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['PS_SUPPKEY', 'PS_PARTKEY']).agg('min', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPMODE', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'LINESTATUS', 'TAX']].merge(orders.merge(customer[(customer['C_ADDRESS'].str.startswith('6')) & (customer['C_CUSTKEY'] >= 18) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

lineitem[['LINESTATUS', 'SHIPMODE', 'SHIPINSTRUCT', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'RECEIPTDATE']].merge(orders[(orders['TOTALPRICE'] != 43348.22464420611) & (orders['O_COMMENT'] != ' ') & (orders['ORDERDATE'] <= '1992-01-13')][['O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NATIONKEY'] < 23) & (nation['N_NATIONKEY'] <= 7) & (nation['N_NATIONKEY'] != 13)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG', 'QUANTITY', 'COMMITDATE', 'LINESTATUS', 'RECEIPTDATE', 'TAX', 'SHIPDATE']].merge(orders[(orders['CLERK'] == 'C') | (orders['O_COMMENT'] == 'b') & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) & (orders['O_COMMENT'].str.startswith('f')) & (orders['O_CUSTKEY'] == 61389) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['F'])) | (orders['O_ORDERKEY'] != 152) & (orders['CLERK'] == 'C')].merge(customer[(customer['C_ADDRESS'] == 'v') | (customer['C_COMMENT'] != 'a') | (customer['C_ACCTBAL'] > -225.56833515444998) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_COMMENT'] == 'i') & (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '3') | (customer['C_ACCTBAL'] >= 492.2608197582747)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['SHIPDATE', 'COMMITDATE', 'RECEIPTDATE', 'L_COMMENT', 'LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(partsupp.merge(supplier.merge(nation[(nation['N_COMMENT'] == 'o') & (nation['N_REGIONKEY'] >= 0) & (nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('l'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '5-LOW', '4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED'])) | (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_COMMENT'].str.startswith('f')) | (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 59334.39720591078)][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer.merge(nation[(nation['N_NAME'] == 'A') & (nation['N_COMMENT'] != 'a') & (nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_NAME'].str.startswith('E'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT'])) | (orders['O_CUSTKEY'] > 122355) & (orders['O_COMMENT'].str.startswith('u')) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['TOTALPRICE'] >= 312613.000076885) & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_COMMENT'].str.startswith('l')) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_ADDRESS'] != '4') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'BUILDING', 'MACHINERY', 'AUTOMOBILE'])) | (customer['MKTSEGMENT'] == 'AUTOMOBILE')][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] < 8) | (nation['N_NATIONKEY'] >= 8) | (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] == '1992-01-13')][['SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']].merge(customer[(customer['C_NATIONKEY'] == 18) | (customer['C_COMMENT'] == ',') & (customer['C_PHONE'] == '3') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'MACHINERY']))].merge(nation[(nation['N_REGIONKEY'] > 1) & (nation['N_REGIONKEY'] >= 0) & (nation['N_NAME'] != 'K') & (nation['N_NATIONKEY'] < 3)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] <= 0) | (orders['O_ORDERKEY'] >= 645) | (orders['TOTALPRICE'] > 282341.55258426827)][['TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 365) | (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'].str.startswith('C')) & (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] > 0) & (orders['ORDERDATE'] <= '1992-01-13')][['O_COMMENT', 'O_CUSTKEY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE']].merge(customer.merge(nation[(nation['N_COMMENT'] != 'n')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 363) & (orders['O_COMMENT'] != ' ') | (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['SHIPPRIORITY'] >= 0)].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 17) | (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] != 7)].merge(region[(region['R_REGIONKEY'] == 2) | (region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['SHIPPRIORITY'] == 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM')][['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer[['C_NAME', 'C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] < 83292.55446882211) | (orders['O_CUSTKEY'] < 50130) & (orders['SHIPPRIORITY'] != 0)].merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] < 1) | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'BUILDING', 'FURNITURE'])) & (customer['C_ADDRESS'] != 'c') | (customer['C_CUSTKEY'] != 85)].merge(nation[(nation['N_NAME'] != 'U') | (nation['N_REGIONKEY'] < 0) & (nation['N_COMMENT'] == 'l') & (nation['N_NAME'] != 'P')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] == 2) | (nation['N_NATIONKEY'] <= 10)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] == 'HOUSEHOLD')].merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_NATIONKEY'] >= 22) | (nation['N_NATIONKEY'] < 17) | (nation['N_NAME'].str.startswith('G'))].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 39) | (partsupp['P_COMMENT'].str.startswith('d')) & (partsupp['SUPPLYCOST'] < 983.0121428216129) | (partsupp['AVAILQTY'] > 3483)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('s')) | (supplier['S_COMMENT'] != 'j')][['S_COMMENT', 'S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_NAME'] == 'P')].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] != 1695) | (partsupp['PS_PARTKEY'] > 1) | (partsupp['PS_SUPPKEY'] > 4766) | (partsupp['PS_SUPPKEY'] < 6711)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 16)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] != 7125) | (partsupp['AVAILQTY'] < 8691)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'LG') | (part['MFGR'] == 'Manufacturer#5') & (part['PT_COMMENT'] != 'h') | (part['P_PARTKEY'] > 46) | (part['P_PARTKEY'] < 191) | (part['TYPE'].str.startswith('SMA')) | (part['RETAILPRICE'] >= 1046.2919203195495) | (part['MFGR'] != 'Manufacturer#4')][['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'TYPE', 'CONTAINER']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['PS_PARTKEY'] >= 17) & (partsupp['PS_PARTKEY'] == 7) & (partsupp['PS_PARTKEY'] != 13)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(part[(part['TYPE'].str.startswith('L')) & (part['P_NAME'] == 'a') | (part['BRAND'] == 'Brand#12') | (part['SIZE'] > 25) & (part['P_PARTKEY'] >= 176)][['MFGR', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['MFGR', 'TYPE', 'RETAILPRICE', 'SIZE', 'P_PARTKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['P_COMMENT'].str.startswith('g')) & (partsupp['PS_SUPPKEY'] >= 2688)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] != 981.8498199663293) | (part['P_NAME'] == 'bis') & (part['TYPE'] == 'S') & (part['P_NAME'].str.startswith('cor')) | (part['RETAILPRICE'] >= 970.5228751084044)][['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY', 'SIZE', 'P_NAME', 'RETAILPRICE']).agg('count')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('B')) & (supplier['S_ACCTBAL'] > 5018.10505458844) | (supplier['S_ACCTBAL'] <= 8701.311666850263)].merge(nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] < 16)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('l'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] < 3) | (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] != -288.37603993387165) | (supplier['S_SUPPKEY'] <= 12) | (supplier['S_SUPPKEY'] == 177) & (supplier['S_NATIONKEY'] >= 20) | (supplier['S_ADDRESS'] == 'p') & (supplier['S_SUPPKEY'] <= 7) | (supplier['S_COMMENT'] != 'j')].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] != 8543.506440526693) | (supplier['S_NATIONKEY'] <= 13) | (supplier['S_PHONE'].str.startswith('3'))][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 2)].merge(region[(region['R_NAME'] != 'AME') | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_SUPPKEY'] == 29) | (supplier['S_PHONE'] != '32-') | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] >= 183) & (supplier['S_PHONE'].str.startswith('28-'))][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] < 1) & (nation['N_NATIONKEY'] != 22) | (nation['N_COMMENT'].str.startswith('l'))].merge(region[(region['R_NAME'] == 'A') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'm') | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_NATIONKEY', 'MKTSEGMENT', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] <= 2) | (nation['N_NATIONKEY'] != 10) | (nation['N_REGIONKEY'] != 3)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('O')) & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'].str.startswith('s'))][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'] != 'c') & (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NAME'] != 'C') & (customer['C_COMMENT'] == 's') & (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'BUILDING', 'HOUSEHOLD', 'FURNITURE']))][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] != 3) & (nation['N_REGIONKEY'] == 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'u') & (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == 'FURNITURE')][['C_ADDRESS', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] <= 3) | (nation['N_REGIONKEY'] > 2)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] != 17) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'HOUSEHOLD', 'FURNITURE', 'AUTOMOBILE'])) | (customer['C_COMMENT'] == ' ') | (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_NAME'] == 'S')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] != 'AFR')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem.merge(orders[(orders['ORDERSTATUS'] == 'O') | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] <= 765) & (orders['ORDERDATE'] < '1992-01-13') & (orders['TOTALPRICE'] == 7507.656388037071) & (orders['ORDERDATE'] <= '1992-01-13') | (orders['O_COMMENT'].str.startswith('ly ')) & (orders['O_CUSTKEY'] < 26810)][['O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_ADDRESS'].str.startswith('h'))].merge(nation[(nation['N_NATIONKEY'] < 20) | (nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] == 'B')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['O_COMMENT'] == 'n') & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_CUSTKEY'] != 73893) & (orders['ORDERDATE'] == '1998-07-21') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('n')) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERSTATUS'].isin(['F', 'P']))][['TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_ACCTBAL'] >= 1989.7288617112945) | (customer['C_ACCTBAL'] >= 463.7510329189722) | (customer['C_NAME'] == 'C')].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] <= 1031.6068353795922) & (part['MFGR'] != 'Manufacturer#3') | (part['PT_COMMENT'] != 'f') & (part['RETAILPRICE'] >= 1059.2742652748198) & (part['RETAILPRICE'] > 1067.721075695078) | (part['P_NAME'] != 'm') & (part['PT_COMMENT'].str.startswith('!')) & (part['BRAND'] != 'Brand#12')][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'P_NAME', 'CONTAINER', 'SIZE', 'TYPE', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'RETAILPRICE', 'SIZE', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['TAX'] >= 0.022363742372308915) | (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['L_ORDERKEY'] != 97) | (lineitem['TAX'] > 0.058707005745381256) & (lineitem['LINENUMBER'] <= 4) & (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['RETURNFLAG'] == 'A') & (lineitem['QUANTITY'] != 32)].merge(partsupp[(partsupp['PS_PARTKEY'] == 11) | (partsupp['PS_SUPPKEY'] >= 2142)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('es ')) | (supplier['S_ACCTBAL'] < 3885.8543030443743) & (supplier['S_COMMENT'] == 'es ') | (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] >= 0) | (supplier['S_ADDRESS'].str.startswith(','))][['S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['DISCOUNT'] <= 0.009016704234600282) & (lineitem['LINESTATUS'] == 'O') | (lineitem['LINESTATUS'] != 'O')][['LINENUMBER', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'QUANTITY', 'L_PARTKEY', 'L_ORDERKEY', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 183.8461754034018) & (partsupp['AVAILQTY'] > 143)].merge(supplier[(supplier['S_ADDRESS'] == '6') & (supplier['S_NAME'] != 'S') & (supplier['S_SUPPKEY'] < 74) & (supplier['S_PHONE'] != '1')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['S_NATIONKEY', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] > 86636.5353342582) & (lineitem['LINENUMBER'] >= 5) & (lineitem['EXTENDEDPRICE'] > 32128.377480744348)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['PS_SUPPKEY'] >= 2651)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] >= 1031.0408651376688) & (part['BRAND'].isin(['Brand#15', 'Brand#13', 'Brand#34', 'Brand#42', 'Brand#45', 'Brand#11', 'Brand#31', 'Brand#44', 'Brand#33', 'Brand#55', 'Brand#52', 'Brand#51', 'Brand#24', 'Brand#21', 'Brand#32', 'Brand#23', 'Brand#22', 'Brand#14', 'Brand#43', 'Brand#25', 'Brand#53', 'Brand#41', 'Brand#54', 'Brand#12'])) & (part['PT_COMMENT'] != 'ss ')][['MFGR', 'P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'PT_COMMENT', 'SIZE', 'RETAILPRICE', 'P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'BRAND', 'TYPE']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 64490.35432712319) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['L_SUPPKEY'] >= 6316) | (lineitem['RECEIPTDATE'] >= '1992-05-02')][['L_ORDERKEY', 'LINENUMBER']].merge(orders.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['QUANTITY'] < 46) | (lineitem['SHIPMODE'].isin(['AIR', 'REG AIR', 'SHIP'])) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['SHIPMODE'] != 'SHIP') & (lineitem['L_PARTKEY'] >= 17074) & (lineitem['L_ORDERKEY'] == 77)].merge(orders.merge(customer[(customer['C_COMMENT'] != '.') & (customer['C_ACCTBAL'] >= 7093.883544541813) & (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ADDRESS'] == 'l') & (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('d')) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_NATIONKEY'] < 7)].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'd') & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON'])) & (lineitem['L_ORDERKEY'] <= 59) & (lineitem['SHIPDATE'] > '1998-10-30')][['QUANTITY', 'SHIPMODE', 'EXTENDEDPRICE', 'SHIPDATE', 'L_PARTKEY', 'L_SUPPKEY', 'TAX']].merge(partsupp.merge(part[(part['RETAILPRICE'] == 1038.9969925412606) & (part['P_PARTKEY'] > 110) | (part['P_PARTKEY'] <= 1) & (part['TYPE'].str.startswith('P')) & (part['PT_COMMENT'].str.startswith('c'))][['P_PARTKEY', 'MFGR', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'TYPE', 'RETAILPRICE', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == 'y') | (lineitem['TAX'] >= 0.04521353243702619) & (lineitem['DISCOUNT'] < 0.04248983409333376) & (lineitem['TAX'] > 0.06683739736734168) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['LINENUMBER'] <= 5) | (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['L_SUPPKEY'] == 8864)][['RETURNFLAG', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_SUPPKEY', 'COMMITDATE', 'L_ORDERKEY', 'SHIPDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1000)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'] != '!')][['S_PHONE', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'].str.startswith('l')) & (lineitem['L_ORDERKEY'] >= 175) & (lineitem['LINENUMBER'] != 6) & (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] > 233) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) & (orders['TOTALPRICE'] >= 127402.34095035547) | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['ORDERDATE'] >= '1992-01-13')][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] == 'j') | (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'] != '.') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_NATIONKEY'] > 15)][['C_CUSTKEY', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] > 42711) | (lineitem['SHIPMODE'].isin(['TRUCK', 'SHIP', 'FOB', 'AIR'])) | (lineitem['L_ORDERKEY'] > 135) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['L_COMMENT'].str.startswith('q')) & (lineitem['L_COMMENT'].str.startswith('.')) & (lineitem['DISCOUNT'] < 0.02889695213724898)].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 19) | (nation['N_COMMENT'] != 'c') & (nation['N_NATIONKEY'] > 2) & (nation['N_COMMENT'] == 'p')].merge(region[(region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] != 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_PARTKEY'] > 94387) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['LINENUMBER'] >= 3) & (lineitem['COMMITDATE'] > '1992-05-15') & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['DISCOUNT'] <= 0.06165964262126013) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['LINENUMBER'] == 3)].merge(partsupp[(partsupp['PS_SUPPKEY'] != 7116) & (partsupp['SUPPLYCOST'] >= 57.75840113802115) & (partsupp['AVAILQTY'] < 5670) & (partsupp['PS_SUPPKEY'] > 4713) | (partsupp['SUPPLYCOST'] != 525.207430685885)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] > 1034.3579915730609) & (part['CONTAINER'] == 'SM') & (part['TYPE'] == 'L')][['P_PARTKEY', 'RETAILPRICE', 'BRAND', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 675) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['DISCOUNT'] == 0.06725860469439865) & (lineitem['EXTENDEDPRICE'] >= 57217.67658085568) & (lineitem['LINESTATUS'] == 'F')].merge(partsupp[(partsupp['SUPPLYCOST'] != 578.0058645818502) | (partsupp['P_COMMENT'].str.startswith(',')) | (partsupp['PS_PARTKEY'] <= 7) & (partsupp['P_COMMENT'] != 'bli')][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'].str.startswith('3')) | (supplier['S_COMMENT'] == 'q') | (supplier['S_NATIONKEY'] > 12) | (supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] == '2')][['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

lineitem[(lineitem['RETURNFLAG'] == 'A') & (lineitem['LINENUMBER'] != 5) & (lineitem['QUANTITY'] == 26) | (lineitem['TAX'] < 0.0722596015232932) | (lineitem['L_PARTKEY'] != 16717) | (lineitem['LINESTATUS'] == 'O') | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['L_ORDERKEY'] < 121) & (lineitem['LINENUMBER'] < 6)].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] > 7) | (nation['N_NATIONKEY'] < 20) | (nation['N_NATIONKEY'] >= 6)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON'])) | (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['L_PARTKEY'] < 39711) & (lineitem['SHIPMODE'] != 'REG AIR') & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_COMMENT'] != ' ') & (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['L_ORDERKEY'] == 126) | (lineitem['QUANTITY'] < 35) & (lineitem['TAX'] >= 0.03485559078744356)][['EXTENDEDPRICE', 'TAX', 'L_ORDERKEY', 'LINESTATUS', 'RETURNFLAG']].merge(orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['TOTALPRICE'] != 259701.38970428953) | (orders['O_CUSTKEY'] < 144123) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERSTATUS'] != 'F') | (orders['CLERK'] == 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != 'RAIL')][['L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] == 13)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['RETAILPRICE'] < 1072.275208751577) & (part['SIZE'] < 4) | (part['MFGR'] != 'Manufacturer#2') | (part['BRAND'] != 'Brand#13') & (part['P_NAME'].str.startswith('lem')) & (part['P_PARTKEY'] == 183) | (part['RETAILPRICE'] != 1032.7053159385648) | (part['P_NAME'] == 'c') & (part['RETAILPRICE'] <= 1033.9541114337812)][['P_PARTKEY', 'SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'] == 'FOB') | (lineitem['QUANTITY'] != 18) | (lineitem['QUANTITY'] != 27) | (lineitem['LINESTATUS'] == 'F') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['QUANTITY'] > 32) & (lineitem['L_SUPPKEY'] > 1413) & (lineitem['SHIPDATE'] < '1992-04-27')].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 4303.316868720784) & (supplier['S_SUPPKEY'] <= 6) & (supplier['S_ADDRESS'].str.startswith('U')) | (supplier['S_COMMENT'] != ' sl')].merge(nation.merge(region[(region['R_NAME'] != 'ASI') & (region['R_NAME'] != 'AFR') & (region['R_REGIONKEY'] == 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem[['COMMITDATE', 'L_COMMENT', 'LINESTATUS', 'L_SUPPKEY', 'SHIPMODE', 'RETURNFLAG']].merge(partsupp[(partsupp['SUPPLYCOST'] != 327.9925263007829) & (partsupp['P_COMMENT'] != 'g')][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 17) | (supplier['S_SUPPKEY'] == 51)].merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'V') & (nation['N_NAME'] != 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME', 'N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

lineitem[['DISCOUNT', 'L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] < 240) | (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] <= 542) | (orders['O_COMMENT'] != 'uri') & (orders['SHIPPRIORITY'] <= 0)].merge(customer[(customer['C_NATIONKEY'] < 10) & (customer['C_CUSTKEY'] > 95) & (customer['C_CUSTKEY'] <= 60) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].merge(orders[(orders['O_ORDERKEY'] == 152) & (orders['O_CUSTKEY'] < 141366) & (orders['ORDERDATE'] < '1992-01-13') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'].str.startswith('f')) & (orders['TOTALPRICE'] < 344648.0045218893)][['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY']).agg('count')

lineitem[['L_PARTKEY', 'DISCOUNT', 'COMMITDATE', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 28.275805326026145) | (partsupp['AVAILQTY'] == 2168) & (partsupp['PS_SUPPKEY'] > 6630) | (partsupp['PS_PARTKEY'] >= 37) | (partsupp['AVAILQTY'] < 3654)][['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] != 'MED') | (part['P_PARTKEY'] == 154) & (part['P_NAME'].str.startswith('g')) & (part['P_PARTKEY'] != 40) & (part['CONTAINER'] != 'LG')][['P_NAME', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPDATE', 'LINESTATUS', 'L_PARTKEY', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '2-HIGH') & (orders['TOTALPRICE'] <= 142751.64771414903) & (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] != 267) & (orders['ORDERSTATUS'] != 'O') & (orders['O_COMMENT'] == 'h') | (orders['O_COMMENT'] != ' ') & (orders['O_ORDERKEY'] != 681)][['O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['O_CUSTKEY'] > 12514) | (orders['ORDERDATE'] < '1992-01-13') & (orders['SHIPPRIORITY'] == 0) & (orders['O_CUSTKEY'] != 105599) | (orders['CLERK'].str.startswith('C')) & (orders['O_ORDERKEY'] >= 722)].merge(customer[(customer['C_COMMENT'].str.startswith('q')) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'FURNITURE', 'BUILDING', 'MACHINERY', 'HOUSEHOLD'])) | (customer['C_COMMENT'].str.startswith('u')) & (customer['C_NAME'] != 'C')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'O') | (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] <= 300118.80618591857) | (orders['O_CUSTKEY'] >= 11223) & (orders['ORDERPRIORITY'] == '1-URGENT')][['O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 6)].merge(region[(region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['O_ORDERKEY'] == 125)][['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ADDRESS'] != '9') & (customer['C_PHONE'] != '3') | (customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 93) | (customer['C_ADDRESS'].str.startswith('p'))].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 99367) & (orders['O_CUSTKEY'] != 6240) | (orders['O_ORDERKEY'] <= 167) & (orders['TOTALPRICE'] > 98909.57643506292) & (orders['CLERK'].str.startswith('C')) & (orders['O_CUSTKEY'] > 49431) & (orders['CLERK'] == 'C')].merge(customer[['C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'h')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] < 222)][['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY']].merge(customer[(customer['C_COMMENT'] == 'c') | (customer['C_ACCTBAL'] > 9098.966279662967)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] == 198) | (orders['O_COMMENT'] == 'x') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) & (orders['SHIPPRIORITY'] <= 0)][['SHIPPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] == '13-') & (customer['C_COMMENT'] != ',') | (customer['C_CUSTKEY'] == 51) | (customer['C_PHONE'] == '2') | (customer['C_NATIONKEY'] == 3) & (customer['C_ACCTBAL'] < 4335.883515967268)].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 705) & (orders['O_CUSTKEY'] == 112453) & (orders['O_CUSTKEY'] >= 144441) | (orders['CLERK'].str.startswith('C')) & (orders['O_COMMENT'] != 'l') | (orders['O_COMMENT'] == 'b') | (orders['ORDERPRIORITY'] != '2-HIGH') | (orders['TOTALPRICE'] <= 112048.23300557121) | (orders['O_ORDERKEY'] != 545)][['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] == 3421.594232565347) & (customer['C_NATIONKEY'] != 22) & (customer['C_CUSTKEY'] <= 23)][['C_COMMENT', 'C_CUSTKEY', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT', 'C_PHONE']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 104697) & (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] <= 59754) & (orders['SHIPPRIORITY'] >= 0) & (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] >= 145263.32781949625) & (orders['CLERK'] == 'C')][['O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] == 15) & (customer['C_CUSTKEY'] <= 21)].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_NATIONKEY'] >= 15) | (nation['N_NATIONKEY'] == 6)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] > 107911.77610251265) & (orders['O_ORDERKEY'] < 47) | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'].str.startswith('-')) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] == 766) | (orders['O_ORDERKEY'] >= 34) & (orders['O_COMMENT'] != 'g') | (orders['ORDERSTATUS'] != 'P')][['O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_REGIONKEY'] == 2) | (nation['N_COMMENT'] == 'o')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] <= 1) | (nation['N_NATIONKEY'] == 14)].merge(region[(region['R_COMMENT'] == 'h') & (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('J')) | (nation['N_NATIONKEY'] <= 14)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'] != 'BUILDING') & (customer['MKTSEGMENT'] != 'BUILDING')][['C_NATIONKEY', 'C_COMMENT', 'C_NAME', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_REGIONKEY'] > 3) | (nation['N_REGIONKEY'] >= 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h') & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[(customer['C_NATIONKEY'] != 15) & (customer['C_PHONE'].str.startswith('18-')) & (customer['C_ACCTBAL'] != 3484.858015880912) | (customer['C_PHONE'] != '13-') & (customer['C_ADDRESS'] == 'T')].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 't')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('max', numeric_only=True)

partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= -141.64588614340084) & (supplier['S_SUPPKEY'] < 164) | (supplier['S_ACCTBAL'] <= 9017.4900607248) & (supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_NATIONKEY'] >= 8) | (supplier['S_ADDRESS'] == 'd') & (supplier['S_COMMENT'] == 'n')][['S_SUPPKEY', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_PHONE'] == '17-') | (supplier['S_ADDRESS'] != ',') & (supplier['S_SUPPKEY'] == 63) | (supplier['S_COMMENT'] == 'bli') & (supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_COMMENT'] == 'bli')][['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] != 2) & (region['R_REGIONKEY'] >= 2) & (region['R_REGIONKEY'] <= 0)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 1349)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] <= 932.6003676573404) & (part['P_PARTKEY'] < 11) & (part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5'])) & (part['CONTAINER'] != 'JUMBO') & (part['CONTAINER'].str.startswith('JUMBO')) | (part['PT_COMMENT'].str.startswith('g')) | (part['MFGR'] != 'Manufacturer#4') | (part['RETAILPRICE'] != 1083.5525706166948)][['P_NAME', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'MFGR', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE', 'P_PARTKEY', 'P_NAME', 'MFGR']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 2)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] != 10) & (supplier['S_ADDRESS'].str.startswith('V')) & (supplier['S_COMMENT'] == ',') | (supplier['S_PHONE'] == '2') & (supplier['S_PHONE'] != '17-') & (supplier['S_COMMENT'].str.startswith('o')) | (supplier['S_ACCTBAL'] == 7867.484575904201)][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'u')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != ' th') & (partsupp['SUPPLYCOST'] == 470.8739496367845) | (partsupp['PS_PARTKEY'] != 36)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= 1599.4982693674194) | (supplier['S_ADDRESS'].str.startswith(','))][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 'a') & (nation['N_NATIONKEY'] == 17) | (nation['N_NATIONKEY'] <= 8)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['P_COMMENT'] == ';') & (partsupp['PS_SUPPKEY'] > 3626) | (partsupp['AVAILQTY'] == 3553)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_NAME'] != 'B') | (nation['N_COMMENT'] == 'r') | (nation['N_NATIONKEY'] != 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 697.2069253838894) & (partsupp['AVAILQTY'] > 8196) & (partsupp['AVAILQTY'] != 5563) & (partsupp['AVAILQTY'] > 1485) & (partsupp['PS_PARTKEY'] == 29)].merge(supplier[(supplier['S_SUPPKEY'] == 171) & (supplier['S_COMMENT'].str.startswith('b')) & (supplier['S_SUPPKEY'] >= 64)].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NATIONKEY'] != 1) | (nation['N_COMMENT'] != 'l')].merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] >= 380.2133979255839) & (partsupp['P_COMMENT'] == 'h') & (partsupp['SUPPLYCOST'] != 625.4812474053224) & (partsupp['P_COMMENT'].str.startswith('c')) & (partsupp['PS_SUPPKEY'] == 4679)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] >= 14) & (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 2)].merge(region[(region['R_NAME'].str.startswith('AFR')) | (region['R_REGIONKEY'] <= 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[(supplier['S_NATIONKEY'] <= 4) & (supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_ACCTBAL'] != 7702.071048602337) | (supplier['S_ACCTBAL'] == 5038.600228755892) & (supplier['S_ADDRESS'].str.startswith('k')) & (supplier['S_NATIONKEY'] < 2) & (supplier['S_SUPPKEY'] == 121)][['S_NAME', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'] != 'A') & (region['R_COMMENT'] != 'h')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_PHONE'] == '3') & (supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_COMMENT'] == 'j') & (supplier['S_NATIONKEY'] > 7) | (supplier['S_SUPPKEY'] == 28) | (supplier['S_NAME'] != 'S') | (supplier['S_NATIONKEY'] != 18)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] != 'y') | (nation['N_COMMENT'] != 'y') & (nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] >= 21)].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] != 8002.836340311103) | (customer['C_COMMENT'].str.startswith('w')) & (customer['C_COMMENT'].str.startswith('k')) | (customer['C_ADDRESS'] != 'j') & (customer['C_ADDRESS'] != 'i') | (customer['C_NAME'] == 'C') & (customer['C_NAME'] != 'C') & (customer['C_ACCTBAL'] == 887.8229229636329)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_NAME'] == 'C') | (customer['C_CUSTKEY'] <= 64) | (customer['C_CUSTKEY'] >= 95) & (customer['C_PHONE'] != '25-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] <= 15) | (customer['C_ACCTBAL'] > 8656.899169745133)][['MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_NAME'] != 'K')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] == 207) | (orders['O_COMMENT'] == 'a') & (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'] == 'C') | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != 'h')].merge(customer[['C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'F')].merge(region[(region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem.merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_COMMENT'] != 'u') & (customer['C_CUSTKEY'] > 75) | (customer['C_PHONE'] != '2') | (customer['C_NATIONKEY'] <= 16) | (customer['C_CUSTKEY'] >= 42) | (customer['MKTSEGMENT'].isin(['BUILDING'])) | (customer['C_NATIONKEY'] <= 0)].merge(nation[(nation['N_NATIONKEY'] == 12) | (nation['N_NAME'].str.startswith('G')) | (nation['N_NATIONKEY'] < 2) & (nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('count')

lineitem[(lineitem['DISCOUNT'] < 0.09866668167027931) | (lineitem['EXTENDEDPRICE'] >= 45991.72192382832) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['SHIPMODE'].isin(['FOB', 'SHIP', 'TRUCK', 'MAIL', 'AIR'])) & (lineitem['TAX'] != 0.06396910153085861) | (lineitem['L_SUPPKEY'] > 6380) & (lineitem['LINESTATUS'] != 'O')].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERSTATUS'].isin(['O'])) | (orders['O_COMMENT'] == 'b') | (orders['TOTALPRICE'] == 111888.78791520381) | (orders['O_CUSTKEY'] > 98007) & (orders['ORDERSTATUS'] != 'O')][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 5) & (lineitem['L_COMMENT'].str.startswith(',')) | (lineitem['L_COMMENT'].str.startswith('a')) & (lineitem['SHIPMODE'] != 'AIR') | (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_SUPPKEY'] > 44)][['LINENUMBER', 'SHIPMODE', 'L_SUPPKEY', 'DISCOUNT', 'L_ORDERKEY', 'L_PARTKEY', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 853.9139725264181) | (partsupp['PS_SUPPKEY'] < 3761)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_PHONE'] != '17-')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] > 5) & (lineitem['EXTENDEDPRICE'] == 5077.338233354147) | (lineitem['RETURNFLAG'] != 'N')][['SHIPDATE', 'DISCOUNT', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_COMMENT', 'L_SUPPKEY', 'SHIPINSTRUCT', 'LINENUMBER', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] <= 5936) & (partsupp['PS_SUPPKEY'] > 5379) | (partsupp['PS_PARTKEY'] != 17) | (partsupp['P_COMMENT'] != 'bli') | (partsupp['PS_PARTKEY'] > 49)].merge(part[['BRAND', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_SUPPKEY'] != 2464) | (lineitem['L_COMMENT'].str.startswith('j')) | (lineitem['TAX'] > 0.06713959410780218) | (lineitem['SHIPMODE'].isin(['AIR'])) & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_PARTKEY'] >= 5685) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['SHIPDATE'] == '1992-04-27')][['L_PARTKEY', 'SHIPINSTRUCT', 'DISCOUNT', 'L_SUPPKEY', 'TAX', 'QUANTITY', 'COMMITDATE', 'RETURNFLAG']].merge(partsupp.merge(part[['MFGR', 'TYPE', 'CONTAINER', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 36) | (lineitem['EXTENDEDPRICE'] > 58850.682631823984) | (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['L_SUPPKEY'] <= 5124) & (lineitem['L_PARTKEY'] >= 100254) & (lineitem['RETURNFLAG'] != 'N') & (lineitem['DISCOUNT'] > 0.09288068497336152) & (lineitem['L_SUPPKEY'] > 3662) & (lineitem['SHIPMODE'] == 'RAIL')][['EXTENDEDPRICE', 'SHIPMODE', 'L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'DISCOUNT', 'TAX', 'QUANTITY', 'COMMITDATE']].merge(orders[(orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_CUSTKEY'] > 22747) & (orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT']))][['SHIPPRIORITY', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('count')

lineitem[(lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) | (lineitem['L_SUPPKEY'] < 3874) & (lineitem['TAX'] >= 0.019831924234947104) | (lineitem['L_SUPPKEY'] < 6003) & (lineitem['L_PARTKEY'] >= 166335) & (lineitem['L_PARTKEY'] >= 90153) & (lineitem['LINENUMBER'] != 4) & (lineitem['LINENUMBER'] == 6) | (lineitem['COMMITDATE'] < '1992-05-15')][['SHIPMODE', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_PARTKEY', 'L_ORDERKEY']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'CONTAINER']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['LINENUMBER'] > 1) | (lineitem['EXTENDEDPRICE'] <= 16475.547871680094) & (lineitem['QUANTITY'] > 33)][['EXTENDEDPRICE', 'LINENUMBER', 'QUANTITY', 'L_PARTKEY', 'SHIPDATE', 'L_COMMENT']].merge(partsupp.merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['LINENUMBER'] == 3) & (lineitem['EXTENDEDPRICE'] >= 44871.75195480514) | (lineitem['RETURNFLAG'].isin(['N'])) | (lineitem['L_COMMENT'] == 'b') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['L_PARTKEY'] >= 34407) & (lineitem['L_SUPPKEY'] != 9230) | (lineitem['QUANTITY'] >= 49) | (lineitem['QUANTITY'] == 14)].merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['TOTALPRICE'] < 228927.52827175986) | (orders['ORDERDATE'] == '1992-01-13') & (orders['CLERK'] == 'C')][['O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['DISCOUNT'] != 0.08578715188481717) | (lineitem['SHIPINSTRUCT'] == 'NONE') | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['L_SUPPKEY'] == 4692) | (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['TAX'] != 0.07052848592374435) & (lineitem['EXTENDEDPRICE'] > 72737.2244406965)][['COMMITDATE', 'QUANTITY', 'DISCOUNT', 'L_COMMENT', 'L_PARTKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['ORDERDATE'] <= '1992-01-13') & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] == 0) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'] == 'F') & (orders['TOTALPRICE'] < 270318.1491662832) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT']))].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'RETURNFLAG', 'COMMITDATE', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'SHIPMODE', 'L_ORDERKEY']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 4279.841180174552) & (supplier['S_NATIONKEY'] <= 14) | (supplier['S_ADDRESS'] != 'M') & (supplier['S_COMMENT'].str.startswith('n')) | (supplier['S_COMMENT'] != 'n')][['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_COMMENT'] != ' ') | (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] == 'V')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_PARTKEY', 'SHIPDATE', 'RECEIPTDATE', 'LINENUMBER', 'QUANTITY', 'RETURNFLAG', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('q')) | (partsupp['PS_SUPPKEY'] > 7257) | (partsupp['PS_PARTKEY'] == 2)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(part[(part['RETAILPRICE'] > 943.8383101392799)][['RETAILPRICE', 'MFGR', 'P_PARTKEY', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'RETAILPRICE']).agg('mean', numeric_only=True)

lineitem[['L_PARTKEY', 'SHIPINSTRUCT', 'QUANTITY', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'] != ' th')].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] <= 17) & (nation['N_COMMENT'] != 't') & (nation['N_NATIONKEY'] >= 11) & (nation['N_COMMENT'] == 't')].merge(region[(region['R_REGIONKEY'] < 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_ACCTBAL'] == 5603.306983536414) & (customer['C_ADDRESS'] != '9') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE', 'BUILDING', 'MACHINERY'])) & (customer['C_NATIONKEY'] != 18) & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

orders.merge(customer[['MKTSEGMENT', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'p') | (nation['N_NAME'] != 'S') & (nation['N_NATIONKEY'] > 14) | (nation['N_NATIONKEY'] != 23)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 0) & (region['R_REGIONKEY'] > 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] >= 231483.61168497533) | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_CUSTKEY'] >= 15152)][['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NATIONKEY'] >= 17) & (customer['C_COMMENT'] != 'q') | (customer['C_ADDRESS'] != 'c') & (customer['C_NATIONKEY'] <= 8) & (customer['C_NATIONKEY'] > 0) & (customer['C_ADDRESS'].str.startswith('O')) & (customer['C_PHONE'] == '27-')][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] > 0) | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] > 0)].merge(customer[(customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_COMMENT'] != 'q') & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_CUSTKEY'] <= 2) | (customer['C_NATIONKEY'] <= 15) & (customer['C_NATIONKEY'] > 17) | (customer['MKTSEGMENT'] == 'BUILDING')].merge(nation[(nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] <= 15)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

orders[(orders['CLERK'] == 'C') | (orders['O_ORDERKEY'] != 540) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '4-NOT SPECIFIED', '2-HIGH'])) | (orders['O_CUSTKEY'] != 50590)].merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] >= 19) & (customer['C_NATIONKEY'] != 17) | (customer['C_CUSTKEY'] == 16)][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 109625) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '3-MEDIUM', '4-NOT SPECIFIED', '5-LOW'])) | (orders['CLERK'] != 'C') | (orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'] == 'F')][['O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'].str.startswith('27-')) & (customer['C_ACCTBAL'] >= 726.2912024591267)].merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 0) & (region['R_REGIONKEY'] <= 0)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 143633) & (orders['ORDERSTATUS'] == 'O') & (orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] == 37440) & (orders['ORDERDATE'] < '1992-01-13') & (orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1998-07-21') | (orders['O_COMMENT'] == 't') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['SHIPPRIORITY'] < 0) & (orders['CLERK'].str.startswith('C')) | (orders['TOTALPRICE'] != 52974.65422641201)][['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['TOTALPRICE'] != 348746.9357720834) & (orders['O_ORDERKEY'] >= 594) | (orders['O_ORDERKEY'] >= 596) | (orders['TOTALPRICE'] != 242077.80113001348) & (orders['O_COMMENT'] == ' ') & (orders['ORDERDATE'] == '1998-07-21') | (orders['SHIPPRIORITY'] <= 0) & (orders['ORDERSTATUS'] == 'P')].merge(customer[(customer['C_PHONE'].str.startswith('1'))].merge(nation[(nation['N_NAME'] != 'C') & (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 23) | (nation['N_COMMENT'] == 't')].merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_NAME'] == 'E') & (region['R_NAME'] != 'M')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] < 300636.8591372491) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['CLERK'].str.startswith('C'))].merge(customer[(customer['C_NATIONKEY'] <= 11) | (customer['C_ADDRESS'] != 's') | (customer['C_PHONE'] != '3') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_PHONE'] != '22-') & (customer['MKTSEGMENT'] != 'MACHINERY')].merge(nation[(nation['N_NATIONKEY'] != 7) & (nation['N_REGIONKEY'] == 1) & (nation['N_COMMENT'].str.startswith('u'))].merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'E') | (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] == 6662.760872251188) & (customer['C_CUSTKEY'] < 98)][['C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'].str.startswith('w')) | (customer['C_PHONE'].str.startswith('25-')) & (customer['C_ACCTBAL'] == -320.7127694887813) | (customer['C_NAME'] == 'C') & (customer['C_PHONE'] == '3') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] > 6940.894014486891) & (customer['C_NATIONKEY'] != 2)][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] < 5972) & (partsupp['PS_SUPPKEY'] == 5795) | (partsupp['PS_SUPPKEY'] == 1811) | (partsupp['SUPPLYCOST'] < 640.6499497671834) & (partsupp['SUPPLYCOST'] <= 954.4189289403932)].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 2968) | (partsupp['P_COMMENT'] == '.')][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] <= 1412.4320711454577) & (supplier['S_SUPPKEY'] != 166) | (supplier['S_ACCTBAL'] <= 5385.463105693575) | (supplier['S_COMMENT'] == 'k')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] != 14) & (partsupp['PS_PARTKEY'] >= 32) & (partsupp['SUPPLYCOST'] > 462.280143648116) & (partsupp['AVAILQTY'] <= 3996)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] >= 2) & (region['R_NAME'] == 'A')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 7) & (partsupp['SUPPLYCOST'] >= 647.1371006029437) & (partsupp['P_COMMENT'] != '.') | (partsupp['AVAILQTY'] != 6169)][['PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['SUPPLYCOST'] == 379.9172343324544) | (partsupp['AVAILQTY'] > 8196) & (partsupp['PS_PARTKEY'] < 11) & (partsupp['AVAILQTY'] > 6210)][['PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_ACCTBAL'] < 2771.381959828759) | (supplier['S_SUPPKEY'] >= 151) | (supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'] != 'o')][['S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] > 267.8674393140989) | (partsupp['AVAILQTY'] == 9913) | (partsupp['SUPPLYCOST'] <= 757.4210913794642) | (partsupp['AVAILQTY'] != 7182) & (partsupp['P_COMMENT'].str.startswith(' '))][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] == -700.7189688869413) | (supplier['S_NATIONKEY'] < 3) & (supplier['S_ADDRESS'].str.startswith('b')) & (supplier['S_PHONE'] == '32-') & (supplier['S_PHONE'] != '2') | (supplier['S_ADDRESS'] == 'm')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('count')

supplier[(supplier['S_ACCTBAL'] < 8308.082407746988) & (supplier['S_ACCTBAL'] < 8392.351194113278) & (supplier['S_NATIONKEY'] == 23) | (supplier['S_SUPPKEY'] == 32) & (supplier['S_SUPPKEY'] > 74) | (supplier['S_PHONE'] != '28-')][['S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NAME'] != 'V')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('3')) | (supplier['S_SUPPKEY'] < 54) & (supplier['S_NATIONKEY'] >= 15) & (supplier['S_NAME'] == 'S') & (supplier['S_PHONE'] == '17-')][['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_NAME'] != 'J')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 5) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 6291.434399941966)][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 'u') & (nation['N_REGIONKEY'] < 3)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'].str.startswith('f')) | (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] != 'j') & (customer['C_CUSTKEY'] != 30) & (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] != 1746.1345540932007) & (customer['C_ACCTBAL'] == 5913.437884548286)][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] == 'h') | (nation['N_NATIONKEY'] <= 4)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('count')

customer[(customer['C_COMMENT'].str.startswith('o')) | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE', 'BUILDING'])) | (customer['C_ACCTBAL'] > 8245.353629628735) & (customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] < 4)][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 1) | (nation['N_NATIONKEY'] <= 6)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'u') | (region['R_REGIONKEY'] < 3) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_CUSTKEY'] != 35) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') & (customer['C_ADDRESS'] == 'f') | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] > 7837.242381846099) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] <= 0) & (region['R_COMMENT'] != 'l') & (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERDATE'] == '1998-07-21') & (orders['O_CUSTKEY'] == 142948) & (orders['O_COMMENT'].str.startswith('s')) | (orders['ORDERSTATUS'] == 'P') | (orders['SHIPPRIORITY'] <= 0) & (orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 'k')][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_ORDERKEY'] < 391) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] == 'C')][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'CLERK']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'].str.startswith('U')) & (nation['N_COMMENT'].str.startswith('r')) | (nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['L_PARTKEY'] < 165503) | (lineitem['RETURNFLAG'] != 'R') & (lineitem['L_PARTKEY'] == 63543) | (lineitem['L_ORDERKEY'] <= 113) | (lineitem['DISCOUNT'] > 0.07499223783031092) | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['LINESTATUS'].isin(['O']))].merge(partsupp[(partsupp['PS_SUPPKEY'] < 5081) | (partsupp['SUPPLYCOST'] > 131.39795511330703) | (partsupp['PS_SUPPKEY'] > 1487) | (partsupp['PS_PARTKEY'] >= 36) | (partsupp['AVAILQTY'] < 6413)].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 43503.58662041406) | (lineitem['L_PARTKEY'] < 28180) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['TAX'] >= 0.03644541298765432) & (lineitem['QUANTITY'] > 49) | (lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['QUANTITY'] < 24)][['SHIPMODE', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'L_SUPPKEY', 'LINESTATUS', 'RETURNFLAG']].merge(partsupp.merge(part[['P_PARTKEY', 'PT_COMMENT', 'BRAND', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 51204.78752258588) & (lineitem['L_COMMENT'] == 'f') & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['LINESTATUS'].isin(['O'])) & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['L_SUPPKEY'] < 5079) | (lineitem['L_PARTKEY'] < 195565) | (lineitem['QUANTITY'] == 13) | (lineitem['TAX'] == 0.07567972628286124) | (lineitem['L_ORDERKEY'] == 45)].merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '17-') & (supplier['S_COMMENT'] == 'c') | (supplier['S_ACCTBAL'] <= -530.7111156986914) & (supplier['S_PHONE'].str.startswith('1')) | (supplier['S_COMMENT'].str.startswith('q')) | (supplier['S_COMMENT'].str.startswith('t')) | (supplier['S_COMMENT'] == 'r')].merge(nation[(nation['N_NAME'] != 'E') | (nation['N_NATIONKEY'] <= 13) & (nation['N_NAME'].str.startswith('A'))].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_REGIONKEY'] != 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] == 'O') | (lineitem['RETURNFLAG'] == 'R') & (lineitem['LINESTATUS'] != 'O')].merge(orders[(orders['O_ORDERKEY'] >= 125) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT', '3-MEDIUM', '5-LOW', '2-HIGH'])) | (orders['TOTALPRICE'] == 257209.34794543372) | (orders['TOTALPRICE'] != 26496.117411358668) | (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_COMMENT'] == ' ')][['TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 18)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'AME') & (region['R_NAME'] == 'A') | (region['R_REGIONKEY'] < 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 's. ') & (lineitem['L_SUPPKEY'] < 3446) & (lineitem['DISCOUNT'] >= 0.0019583066987819086) | (lineitem['L_ORDERKEY'] < 34) & (lineitem['L_COMMENT'].str.startswith('.')) | (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['DISCOUNT'] != 0.0018199673707392063)].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_PHONE', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] >= 138) | (lineitem['L_COMMENT'] != '.') & (lineitem['L_COMMENT'].str.startswith('l')) & (lineitem['L_SUPPKEY'] != 7739) | (lineitem['TAX'] <= 0.049064528755239714) | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['LINENUMBER'] > 2) & (lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['L_SUPPKEY'] != 3361)][['QUANTITY', 'RETURNFLAG', 'DISCOUNT', 'L_COMMENT', 'L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE', 'TAX', 'SHIPMODE']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY']].merge(part[['BRAND', 'TYPE', 'PT_COMMENT', 'P_PARTKEY', 'MFGR', 'SIZE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] > 138103) | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_COMMENT'].str.startswith('n')) & (lineitem['LINENUMBER'] < 4) | (lineitem['L_ORDERKEY'] <= 72) | (lineitem['L_ORDERKEY'] <= 124)].merge(partsupp[(partsupp['PS_PARTKEY'] <= 5) & (partsupp['AVAILQTY'] >= 8491) & (partsupp['PS_PARTKEY'] < 26)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(part[['TYPE', 'P_PARTKEY', 'CONTAINER', 'SIZE', 'PT_COMMENT', 'MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE', 'CONTAINER']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] > 4302) | (lineitem['L_SUPPKEY'] != 4427) | (lineitem['L_PARTKEY'] > 12668) | (lineitem['RETURNFLAG'] == 'R') | (lineitem['EXTENDEDPRICE'] < 64232.14883704383)].merge(partsupp[(partsupp['AVAILQTY'] >= 830) | (partsupp['AVAILQTY'] != 7074)].merge(supplier[(supplier['S_SUPPKEY'] >= 99) | (supplier['S_ACCTBAL'] >= 3733.4654572333848) & (supplier['S_ADDRESS'] == 'W') | (supplier['S_ACCTBAL'] != 8095.640479338305)][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_REGIONKEY']).agg('count')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['SHIPMODE'] == 'SHIP') | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') | (lineitem['L_PARTKEY'] < 92894) & (lineitem['QUANTITY'] != 29) | (lineitem['EXTENDEDPRICE'] >= 12306.267538194727) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['EXTENDEDPRICE'] != 45306.66601459911)][['QUANTITY', 'COMMITDATE', 'DISCOUNT', 'L_SUPPKEY', 'SHIPDATE', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] == 2) & (supplier['S_ADDRESS'].str.startswith('s')) | (supplier['S_PHONE'] != '26-') & (supplier['S_COMMENT'] != 'e') & (supplier['S_SUPPKEY'] < 140)].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['COMMITDATE', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] > 48)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] > 3) & (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['RECEIPTDATE', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPDATE', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'LINESTATUS', 'L_PARTKEY']].merge(orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] > 20) | (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) | (customer['C_COMMENT'].str.startswith('a'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME']).agg('min', numeric_only=True)

lineitem[['SHIPDATE', 'L_SUPPKEY', 'LINENUMBER', 'EXTENDEDPRICE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'L_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] == 'ly ') & (partsupp['AVAILQTY'] <= 2662) & (partsupp['P_COMMENT'].str.startswith('o')) | (partsupp['P_COMMENT'] != 'are')][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_NAME'].str.startswith('S'))].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']).agg('min', numeric_only=True)

lineitem[['TAX', 'QUANTITY', 'SHIPINSTRUCT', 'L_PARTKEY', 'SHIPMODE']].merge(partsupp[(partsupp['PS_PARTKEY'] < 9) | (partsupp['PS_SUPPKEY'] > 4542)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_ADDRESS'].str.startswith('0')) & (supplier['S_PHONE'] != '14-') & (supplier['S_SUPPKEY'] >= 6) | (supplier['S_NATIONKEY'] == 0)].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['O_ORDERKEY'] < 584) | (orders['SHIPPRIORITY'] > 0) | (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] < 0) & (orders['ORDERSTATUS'] != 'F') & (orders['O_COMMENT'] == 's')].merge(customer[(customer['C_ADDRESS'] == 'I') & (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_NAME'] == 'C') | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 2489.0698864017095) & (customer['C_PHONE'] != '27-')][['C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'AME')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_ORDERKEY'] > 110) & (orders['CLERK'] == 'C')].merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('h')) | (customer['C_PHONE'] == '18-') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) | (customer['C_ACCTBAL'] < 3352.379477855977) | (customer['C_COMMENT'].str.startswith('i')) | (customer['C_ADDRESS'] == '7') | (customer['C_ACCTBAL'] >= 5015.111089066197)][['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') & (orders['O_CUSTKEY'] <= 123474) & (orders['SHIPPRIORITY'] < 0) & (orders['O_ORDERKEY'] < 341) & (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') | (orders['O_ORDERKEY'] == 515) & (orders['O_CUSTKEY'] != 13792) | (orders['CLERK'] == 'C')][['ORDERSTATUS', 'CLERK', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer.merge(nation[(nation['N_NAME'] != 'F')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] < 134053) | (orders['TOTALPRICE'] == 53777.305599131534)][['ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_ADDRESS'] == '8') & (customer['C_ADDRESS'] == 'H') & (customer['MKTSEGMENT'] == 'HOUSEHOLD')][['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'] != '1-URGENT') & (orders['O_CUSTKEY'] < 15693) & (orders['ORDERSTATUS'] != 'P') & (orders['O_CUSTKEY'] <= 53516) | (orders['SHIPPRIORITY'] == 0) & (orders['O_COMMENT'] != 'n')].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_COMMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_NATIONKEY'] != 16)].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_COMMENT'] == 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] <= 257166.53860622577) & (orders['TOTALPRICE'] < 288610.6626728249) & (orders['O_ORDERKEY'] == 305) | (orders['TOTALPRICE'] <= 261319.79431442177) | (orders['SHIPPRIORITY'] > 0) | (orders['TOTALPRICE'] <= 169728.88026053234)][['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('h'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] != '-') | (orders['ORDERDATE'] < '1998-07-21') | (orders['O_ORDERKEY'] <= 28) | (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] >= '1998-07-21') & (orders['SHIPPRIORITY'] >= 0)][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_ADDRESS'] != 's') & (customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_COMMENT'] == 'f') | (customer['C_PHONE'].str.startswith('1')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'r') | (customer['C_PHONE'].str.startswith('2'))].merge(nation[['N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'g') & (orders['O_CUSTKEY'] == 111706) | (orders['TOTALPRICE'] <= 219771.14159513515) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] == '1998-07-21') & (orders['TOTALPRICE'] < 78267.87617257489) & (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] != 207141.3967864962)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 34) & (customer['C_COMMENT'] == 'a') | (customer['C_NATIONKEY'] > 20) & (customer['C_CUSTKEY'] <= 10) | (customer['C_COMMENT'].str.startswith('.'))][['C_ACCTBAL', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

orders[(orders['O_COMMENT'] == 'c')].merge(customer[(customer['C_ADDRESS'] == 'B') | (customer['C_PHONE'].str.startswith('22-')) | (customer['C_COMMENT'].str.startswith('e')) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NATIONKEY'] <= 0)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] >= 2) | (nation['N_REGIONKEY'] > 2) | (nation['N_NAME'].str.startswith('J'))].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 76353) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_COMMENT'] != 'a') | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] <= 167308.4515411616) & (orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] > 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM')][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] <= 200163.60402638026) & (orders['ORDERDATE'] <= '1998-07-21') | (orders['O_COMMENT'].str.startswith(' re'))].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] <= 13)][['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_REGIONKEY'] < 2) & (nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_NAME', 'N_COMMENT']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] == '1998-07-21') & (orders['ORDERSTATUS'].isin(['P', 'F', 'O'])) | (orders['CLERK'] != 'C') | (orders['ORDERDATE'] != '1992-01-13') & (orders['O_ORDERKEY'] < 655) | (orders['O_CUSTKEY'] <= 89093)].merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == 6890.150058961559) & (customer['C_ACCTBAL'] <= 3562.964126430944)][['C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'MKTSEGMENT']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] != 0) & (orders['SHIPPRIORITY'] == 0) & (orders['TOTALPRICE'] >= 175025.7299735906) | (orders['ORDERSTATUS'] != 'F') | (orders['O_CUSTKEY'] != 30372)][['ORDERDATE', 'CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['MKTSEGMENT'] == 'MACHINERY') | (customer['C_PHONE'] != '22-') | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_COMMENT'] == ' ')].merge(nation.merge(region[(region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] <= 135) & (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 226) | (orders['ORDERSTATUS'].isin(['F']))][['ORDERDATE', 'CLERK', 'ORDERSTATUS', 'O_COMMENT', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_ORDERKEY', 'SHIPPRIORITY']].merge(customer[['C_PHONE', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_NAME'].str.startswith('V'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0)][['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] > 89) & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('a')) | (customer['C_ADDRESS'] == 'g') & (customer['MKTSEGMENT'] != 'AUTOMOBILE') | (customer['C_ACCTBAL'] <= 9466.941063311675) & (customer['MKTSEGMENT'].isin(['BUILDING']))].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 2) | (region['R_NAME'] != 'ASI')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] == 292193.76862055296) | (orders['TOTALPRICE'] < 239121.0252874136) & (orders['O_ORDERKEY'] <= 6) & (orders['TOTALPRICE'] < 167572.78998004989) | (orders['O_ORDERKEY'] <= 413) & (orders['SHIPPRIORITY'] >= 0) & (orders['O_ORDERKEY'] < 533) | (orders['O_ORDERKEY'] == 668) | (orders['O_COMMENT'].str.startswith('j'))][['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[(customer['C_COMMENT'] == 'p') & (customer['MKTSEGMENT'] != 'BUILDING') | (customer['C_NATIONKEY'] != 13)][['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['AVAILQTY'] >= 9723) & (partsupp['PS_PARTKEY'] < 5) | (partsupp['PS_SUPPKEY'] >= 7538) & (partsupp['SUPPLYCOST'] >= 443.86131529490973) | (partsupp['PS_PARTKEY'] == 33)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('m')) & (supplier['S_SUPPKEY'] < 134) & (supplier['S_ADDRESS'] == 'Y') & (supplier['S_PHONE'] == '32-')][['S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 7) | (nation['N_NATIONKEY'] <= 6) & (nation['N_NATIONKEY'] != 22)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] > 2) & (region['R_NAME'].str.startswith('AFR'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'k') & (partsupp['P_COMMENT'] == 'the') & (partsupp['P_COMMENT'] != ' ') & (partsupp['AVAILQTY'] <= 633) | (partsupp['PS_SUPPKEY'] != 7037)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] < 26) & (supplier['S_NATIONKEY'] <= 18) | (supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] != 'the') & (supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_ADDRESS'].str.startswith('2'))].merge(nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_REGIONKEY'] == 3) | (nation['N_REGIONKEY'] < 3) | (nation['N_NAME'] == 'K')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] == 'l') | (partsupp['SUPPLYCOST'] >= 855.0129747445421) | (partsupp['P_COMMENT'] != 'j') & (partsupp['PS_PARTKEY'] < 17) | (partsupp['AVAILQTY'] >= 572)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_COMMENT'] == 'w') & (supplier['S_ACCTBAL'] != -816.631965447582) & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] <= 7793.221877847332)].merge(nation.merge(region[(region['R_REGIONKEY'] != 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('D')) & (customer['C_COMMENT'] == ',') & (customer['C_CUSTKEY'] > 65) | (customer['C_NATIONKEY'] == 9) | (customer['C_ADDRESS'] == 'w') | (customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['ORDERDATE'] == '1992-01-13') | (orders['SHIPPRIORITY'] < 0) | (orders['O_ORDERKEY'] != 580) & (orders['O_ORDERKEY'] == 378) | (orders['ORDERDATE'] == '1992-01-13')].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_ADDRESS'].str.startswith('E')) | (customer['C_ADDRESS'] != 'Y') | (customer['C_COMMENT'].str.startswith('.'))][['C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] < 0)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINENUMBER'] >= 5) | (lineitem['DISCOUNT'] >= 0.04567702405337422) & (lineitem['L_SUPPKEY'] != 1200) & (lineitem['LINENUMBER'] >= 1) & (lineitem['QUANTITY'] != 3)][['LINESTATUS', 'TAX', 'SHIPMODE', 'SHIPDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['P_COMMENT'] == 'l')][['AVAILQTY', 'PS_PARTKEY']].merge(part[(part['CONTAINER'] == 'LG') | (part['MFGR'] != 'Manufacturer#4') & (part['SIZE'] == 6) & (part['BRAND'] != 'Brand#25') | (part['BRAND'] == 'Brand#34') | (part['BRAND'] != 'Brand#13') & (part['P_NAME'].str.startswith('r')) | (part['PT_COMMENT'] == 'b') | (part['CONTAINER'] == 'JUMBO')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != '.') | (lineitem['QUANTITY'] == 17) | (lineitem['EXTENDEDPRICE'] <= 69774.59718121296) | (lineitem['L_ORDERKEY'] < 101) | (lineitem['RETURNFLAG'] == 'N') | (lineitem['RETURNFLAG'].isin(['A'])) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON')][['SHIPINSTRUCT', 'SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY']].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == 'U') | (supplier['S_ACCTBAL'] != 8655.02202041069) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S')][['S_ACCTBAL', 'S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']).agg('count')

lineitem[(lineitem['L_SUPPKEY'] != 9352) | (lineitem['LINENUMBER'] >= 5) | (lineitem['L_PARTKEY'] == 137221) & (lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['TAX'] > 0.017184339781380693) | (lineitem['L_SUPPKEY'] >= 481)][['DISCOUNT', 'COMMITDATE', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE']].merge(partsupp.merge(supplier.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N') | (lineitem['DISCOUNT'] != 0.0012163251803224307) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['L_COMMENT'].str.startswith('y')) & (lineitem['L_SUPPKEY'] <= 3245) & (lineitem['DISCOUNT'] <= 0.03209425070661379) & (lineitem['DISCOUNT'] == 0.08577660019151821) | (lineitem['RETURNFLAG'] != 'A')].merge(partsupp[(partsupp['PS_PARTKEY'] > 23) & (partsupp['AVAILQTY'] <= 1295)].merge(part[(part['PT_COMMENT'] != '!') & (part['PT_COMMENT'] != 'p') | (part['BRAND'] == 'Brand#23') & (part['MFGR'] == 'Manufacturer#5') | (part['PT_COMMENT'] == ' ')][['CONTAINER', 'P_NAME', 'TYPE', 'P_PARTKEY', 'PT_COMMENT', 'SIZE', 'MFGR', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'CONTAINER']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['SHIPINSTRUCT'] == 'COLLECT COD')].merge(partsupp[(partsupp['PS_PARTKEY'] == 36) & (partsupp['PS_SUPPKEY'] > 1586)].merge(supplier[(supplier['S_ADDRESS'].str.startswith('V'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'] == 'l') | (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem[(lineitem['SHIPMODE'].isin(['RAIL'])) & (lineitem['RETURNFLAG'].isin(['A'])) & (lineitem['L_ORDERKEY'] != 129) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_COMMENT'] != 's') & (lineitem['RETURNFLAG'] == 'N') | (lineitem['COMMITDATE'] > '1992-05-15')].merge(partsupp[(partsupp['AVAILQTY'] > 2653) & (partsupp['SUPPLYCOST'] <= 43.25451733016929) | (partsupp['PS_PARTKEY'] <= 45) & (partsupp['SUPPLYCOST'] < 303.36833648955263) | (partsupp['PS_SUPPKEY'] == 6939)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'] == 'E') & (nation['N_COMMENT'] != 'c') & (nation['N_NAME'] == 'I')][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] > 0.06225873473301107) & (lineitem['L_COMMENT'] != ',') | (lineitem['DISCOUNT'] == 0.06674791331504222) & (lineitem['LINESTATUS'] != 'O') & (lineitem['DISCOUNT'] < 0.03965336911911887) | (lineitem['TAX'] > 0.04907084276912493) & (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON') & (lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['QUANTITY'] != 40)][['L_SUPPKEY', 'TAX', 'L_ORDERKEY', 'SHIPDATE', 'LINESTATUS', 'DISCOUNT', 'SHIPINSTRUCT']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'RETURNFLAG', 'L_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 6162)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] != 9)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[['L_SUPPKEY', 'LINENUMBER', 'LINESTATUS', 'QUANTITY', 'L_COMMENT', 'SHIPINSTRUCT', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5750) | (partsupp['AVAILQTY'] <= 6662) | (partsupp['P_COMMENT'] != '.')][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(part[['P_PARTKEY', 'PT_COMMENT', 'P_NAME', 'BRAND', 'RETAILPRICE', 'MFGR', 'SIZE', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETAILPRICE', 'PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'TYPE']).agg('min', numeric_only=True)

lineitem[['RETURNFLAG', 'DISCOUNT', 'COMMITDATE', 'L_PARTKEY', 'SHIPDATE', 'TAX', 'QUANTITY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[['RETURNFLAG', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPDATE', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'] == 'p') & (partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'] != 'n')].merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_REGIONKEY'] == 3) | (nation['N_COMMENT'].str.startswith('h')) & (nation['N_NATIONKEY'] <= 4)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[['SHIPINSTRUCT', 'QUANTITY', 'COMMITDATE', 'SHIPDATE', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'L_SUPPKEY', 'L_ORDERKEY']].merge(orders.merge(customer[(customer['C_ADDRESS'] != 'v') & (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['MACHINERY']))][['C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[['TAX', 'RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'L_ORDERKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'the') & (partsupp['AVAILQTY'] != 4761) | (partsupp['P_COMMENT'] != 'k') | (partsupp['PS_SUPPKEY'] == 1042)].merge(supplier[(supplier['S_COMMENT'] == 'q') & (supplier['S_NAME'].str.startswith('S')) | (supplier['S_NATIONKEY'] >= 0) & (supplier['S_COMMENT'] != 'o')].merge(nation[(nation['N_NATIONKEY'] < 0) | (nation['N_NATIONKEY'] == 19) | (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('max', numeric_only=True)

orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['SHIPPRIORITY'] == 0) | (orders['O_CUSTKEY'] < 110104) | (orders['O_ORDERKEY'] != 126) & (orders['O_COMMENT'].str.startswith('egu')) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['O_COMMENT'] == 'n') & (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH', '5-LOW']))].merge(customer[(customer['C_ACCTBAL'] > 6487.545309849081) | (customer['C_NATIONKEY'] < 17) & (customer['C_NATIONKEY'] <= 18) & (customer['C_ACCTBAL'] >= 4247.2097208040805) | (customer['C_NAME'] == 'C') & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_NAME'].str.startswith('B'))].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'u') | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'f') & (orders['TOTALPRICE'] <= 21399.692299503113) & (orders['SHIPPRIORITY'] == 0) & (orders['SHIPPRIORITY'] != 0) & (orders['O_COMMENT'].str.startswith('h')) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERDATE'] >= '1998-07-21') & (orders['CLERK'] == 'C')].merge(customer[(customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_PHONE'] != '18-') | (customer['MKTSEGMENT'] == 'MACHINERY') & (customer['C_COMMENT'] != 'd') & (customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] == 'MACHINERY')][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_NATIONKEY'] == 3) | (nation['N_REGIONKEY'] >= 1) | (nation['N_NATIONKEY'] <= 13)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] <= 35255) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_COMMENT'] != 'n') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('y')) & (orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] > 503) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT'])) & (orders['ORDERDATE'] == '1992-01-13')][['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_ACCTBAL'] >= 5690.406172219471) & (customer['C_PHONE'] != '25-') | (customer['C_NAME'].str.startswith('C')) & (customer['C_PHONE'] != '22-')][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['C_COMMENT', 'C_PHONE', 'C_CUSTKEY']).agg('max', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 129433) & (orders['SHIPPRIORITY'] > 0) | (orders['ORDERDATE'] > '1998-07-21') & (orders['O_CUSTKEY'] != 54740)][['O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == 'k') | (customer['C_CUSTKEY'] != 59) | (customer['C_CUSTKEY'] > 21) & (customer['MKTSEGMENT'] != 'HOUSEHOLD')][['MKTSEGMENT', 'C_ACCTBAL', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_ORDERKEY'] <= 210) | (orders['O_ORDERKEY'] < 189) | (orders['TOTALPRICE'] == 289314.6902982852) | (orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['TOTALPRICE'] <= 344331.11915923166) | (orders['ORDERDATE'] == '1998-07-21')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] == 74) & (customer['C_PHONE'] == '18-') & (customer['C_ACCTBAL'] != 7072.010441874115) | (customer['C_ADDRESS'].str.startswith('M'))].merge(nation[(nation['N_COMMENT'] == 'c')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] > 508) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] <= 100353) | (orders['CLERK'].str.startswith('C')) & (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] <= 24244) | (orders['ORDERSTATUS'] == 'P') | (orders['TOTALPRICE'] < 100879.033521354)][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_COMMENT'] == 'p')][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] > 0) & (orders['O_COMMENT'] != 's') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '4-NOT SPECIFIED', '3-MEDIUM'])) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['ORDERDATE'] > '1992-01-13') & (orders['SHIPPRIORITY'] > 0)][['O_CUSTKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'ORDERPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_NATIONKEY'] != 21) | (customer['C_COMMENT'] != 't') | (customer['C_ADDRESS'] != 'c') & (customer['C_PHONE'] == '3') | (customer['C_COMMENT'] == ',') | (customer['C_ADDRESS'] != 'Q') & (customer['C_NAME'].str.startswith('C'))][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_NATIONKEY'] != 7)][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] <= 13) & (nation['N_NATIONKEY'] <= 8) | (nation['N_REGIONKEY'] == 3) & (nation['N_NATIONKEY'] < 19)][['N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] <= 3226.518195758843) | (customer['C_COMMENT'] != 'd') & (customer['C_ADDRESS'] == 'c') & (customer['C_ADDRESS'].str.startswith('R')) | (customer['C_PHONE'].str.startswith('2'))][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] <= 1387) & (partsupp['PS_SUPPKEY'] <= 7320)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != 'i') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_SUPPKEY'] > 48) | (supplier['S_COMMENT'] != 'i') | (supplier['S_PHONE'] == '2') & (supplier['S_SUPPKEY'] != 156)].merge(nation[(nation['N_REGIONKEY'] != 0) & (nation['N_NAME'] != 'A') | (nation['N_NAME'].str.startswith('V')) & (nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AFR')) & (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 3)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] != 4634.9169865855865) | (supplier['S_ACCTBAL'] == 7216.788568697507) | (supplier['S_COMMENT'].str.startswith('f')) & (supplier['S_NATIONKEY'] != 21) | (supplier['S_NAME'] == 'S') & (supplier['S_SUPPKEY'] <= 71)][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS', 'S_PHONE', 'S_NAME', 'S_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'].str.startswith('M'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] == 31) | (partsupp['SUPPLYCOST'] < 751.0842214358792) | (partsupp['AVAILQTY'] == 4328) & (partsupp['PS_SUPPKEY'] >= 2595)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith('i')) & (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'] == 'a')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'] == 'ASI') & (region['R_NAME'] == 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] == 'S') | (supplier['S_ADDRESS'].str.startswith('8')) & (supplier['S_COMMENT'] != 'r') & (supplier['S_PHONE'] != '2')][['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] == 'F') & (nation['N_NATIONKEY'] <= 0) | (nation['N_REGIONKEY'] <= 2) & (nation['N_NATIONKEY'] < 0)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'] != '5') | (supplier['S_ACCTBAL'] != 246.1603822554987) | (supplier['S_NATIONKEY'] >= 1) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] == 21)].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] > 0) & (region['R_COMMENT'].str.startswith('h'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS', 'S_ACCTBAL']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2) & (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('18-')) | (customer['MKTSEGMENT'] == 'AUTOMOBILE') & (customer['C_ADDRESS'] != 'E') & (customer['C_ACCTBAL'] > 3797.365190677202) | (customer['C_CUSTKEY'] == 62)][['C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] == 7) | (nation['N_COMMENT'] == ' ')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('A')) | (region['R_REGIONKEY'] >= 0) & (region['R_NAME'] != 'AFR')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 71047.86721607696) | (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 9) | (partsupp['PS_SUPPKEY'] != 5080) | (partsupp['AVAILQTY'] == 5099) & (partsupp['PS_PARTKEY'] == 34)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_NAME', 'S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('F'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == 'b') & (lineitem['L_ORDERKEY'] < 133) | (lineitem['SHIPDATE'] < '1992-04-27')][['L_PARTKEY', 'SHIPMODE', 'LINESTATUS', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['AVAILQTY'] > 9261) | (partsupp['AVAILQTY'] != 3857) & (partsupp['AVAILQTY'] <= 7428) | (partsupp['PS_SUPPKEY'] > 7015) & (partsupp['SUPPLYCOST'] <= 800.4004381003226)].merge(part[['CONTAINER', 'P_NAME', 'P_PARTKEY', 'SIZE', 'MFGR', 'PT_COMMENT', 'RETAILPRICE', 'TYPE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'TYPE', 'P_NAME', 'RETAILPRICE', 'CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('u'))][['L_PARTKEY', 'COMMITDATE', 'TAX', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RECEIPTDATE', 'SHIPINSTRUCT']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ACCTBAL'] > 1197.8981592411294) & (supplier['S_NATIONKEY'] >= 15) | (supplier['S_SUPPKEY'] != 88) & (supplier['S_ACCTBAL'] == 980.4074237357293) | (supplier['S_NATIONKEY'] == 5) | (supplier['S_NATIONKEY'] != 16)].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 92) | (lineitem['TAX'] >= 0.05263275388988187) & (lineitem['COMMITDATE'] <= '1992-05-15') & (lineitem['SHIPMODE'] == 'RAIL')][['L_ORDERKEY', 'COMMITDATE', 'RECEIPTDATE', 'SHIPINSTRUCT', 'QUANTITY']].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_CUSTKEY'] <= 91203) & (orders['ORDERPRIORITY'].isin(['5-LOW', '4-NOT SPECIFIED'])) & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] > 104989.38282283267)][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] >= 1067) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINESTATUS'] == 'O') | (lineitem['RECEIPTDATE'] <= '1998-11-06') | (lineitem['SHIPDATE'] <= '1998-10-30')].merge(orders[(orders['CLERK'] != 'C') | (orders['O_ORDERKEY'] != 115) | (orders['O_COMMENT'] == 'r') & (orders['O_COMMENT'].str.startswith('i'))].merge(customer[['C_NAME', 'C_ACCTBAL', 'C_PHONE', 'MKTSEGMENT', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0) | (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 17) | (lineitem['LINESTATUS'].isin(['F'])) & (lineitem['SHIPDATE'] >= '1992-04-27')][['SHIPDATE', 'DISCOUNT', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_COMMENT', 'LINENUMBER', 'QUANTITY']].merge(orders[(orders['O_ORDERKEY'] <= 462) | (orders['O_ORDERKEY'] == 597) | (orders['O_ORDERKEY'] != 215) | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['CLERK'] != 'C')].merge(customer[['C_COMMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_ACCTBAL']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') | (lineitem['L_SUPPKEY'] == 8253) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['QUANTITY'] < 27) & (lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) | (lineitem['L_SUPPKEY'] < 3308) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['L_COMMENT'].str.startswith('v'))][['LINESTATUS', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['ORDERDATE'] <= '1998-07-21') | (orders['ORDERSTATUS'] != 'P') & (orders['ORDERDATE'] < '1998-07-21') & (orders['O_ORDERKEY'] != 494)].merge(customer[(customer['C_ADDRESS'] != '3')].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_REGIONKEY'] != 0) | (nation['N_NATIONKEY'] != 22)][['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_PARTKEY'] >= 57784) & (lineitem['LINENUMBER'] < 2) & (lineitem['L_SUPPKEY'] == 6359)][['TAX', 'SHIPMODE', 'RECEIPTDATE', 'SHIPDATE', 'LINESTATUS', 'RETURNFLAG', 'L_SUPPKEY', 'COMMITDATE', 'L_PARTKEY', 'LINENUMBER']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] <= 4) | (supplier['S_COMMENT'] == 'al ')].merge(nation[(nation['N_NAME'] == 'V') & (nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPMODE'].isin(['TRUCK', 'AIR', 'SHIP'])) & (lineitem['L_PARTKEY'] > 124900) & (lineitem['TAX'] > 0.009169693188424581) & (lineitem['SHIPMODE'] == 'AIR')][['RECEIPTDATE', 'L_SUPPKEY', 'SHIPDATE', 'TAX', 'L_ORDERKEY', 'LINENUMBER', 'SHIPMODE', 'LINESTATUS', 'L_PARTKEY', 'QUANTITY']].merge(orders[(orders['O_COMMENT'].str.startswith('l')) | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] == 'q') | (orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'].str.startswith('q'))].merge(customer[(customer['C_NATIONKEY'] > 18) | (customer['C_ADDRESS'] != '7') | (customer['C_NATIONKEY'] <= 22) | (customer['C_ADDRESS'] != 'e') | (customer['C_ACCTBAL'] > 481.3164846741099) | (customer['C_ACCTBAL'] != 7443.00894123605)][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] == 0.040201114324944894) & (lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['EXTENDEDPRICE'] < 23326.312716588072) & (lineitem['L_COMMENT'].str.startswith('p')) & (lineitem['LINESTATUS'] == 'O') | (lineitem['L_PARTKEY'] >= 170323)][['L_PARTKEY']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['RETAILPRICE'] < 991.4803822974417) | (part['P_NAME'] != 'r') & (part['SIZE'] == 31) | (part['P_NAME'] != 'cor') & (part['BRAND'].isin(['Brand#24', 'Brand#55', 'Brand#21', 'Brand#33', 'Brand#51', 'Brand#32', 'Brand#42', 'Brand#31'])) & (part['TYPE'] != 'E') & (part['SIZE'] > 3)][['P_PARTKEY', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.06302384090879885) | (lineitem['QUANTITY'] >= 41) & (lineitem['L_PARTKEY'] >= 48253) & (lineitem['DISCOUNT'] > 0.0758781341923173) & (lineitem['L_ORDERKEY'] > 60) | (lineitem['L_ORDERKEY'] < 139) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['DISCOUNT'] <= 0.05932244297453755) | (lineitem['L_ORDERKEY'] <= 113) | (lineitem['LINENUMBER'] <= 5)][['QUANTITY', 'DISCOUNT', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE']].merge(orders.merge(customer[(customer['C_ADDRESS'] != 'E')].merge(nation.merge(region[(region['R_COMMENT'] != 'l') & (region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('u'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'QUANTITY', 'TAX', 'SHIPDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 376.9947212881771)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_REGIONKEY'] != 1) | (nation['N_COMMENT'] != 't') | (nation['N_NAME'] == 'G')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT']).agg('min', numeric_only=True)

lineitem[['QUANTITY', 'L_COMMENT', 'L_PARTKEY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'LINENUMBER', 'RECEIPTDATE']].merge(orders.merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] != 'J') & (nation['N_COMMENT'].str.startswith('n')) & (nation['N_NAME'] != 'P') | (nation['N_NATIONKEY'] != 0)].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['O_CUSTKEY'] == 137652) | (orders['O_COMMENT'] != 'x') & (orders['O_CUSTKEY'] > 142064) | (orders['SHIPPRIORITY'] <= 0) | (orders['TOTALPRICE'] != 118873.70068827443)][['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] <= 6488.858025106429) | (customer['C_ADDRESS'] == '4') | (customer['C_NATIONKEY'] >= 5)].merge(nation[(nation['N_NAME'] == 'J') & (nation['N_REGIONKEY'] >= 0) | (nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERDATE'] >= '1998-07-21') | (orders['O_CUSTKEY'] == 120371) | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERSTATUS'].isin(['F'])) & (orders['CLERK'] != 'C') & (orders['TOTALPRICE'] > 5553.534438482733)][['ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NAME'] != 'G') | (nation['N_REGIONKEY'] >= 3) & (nation['N_NATIONKEY'] == 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'u')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERSTATUS'] != 'O') | (orders['TOTALPRICE'] != 316813.04429822817) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] > 0) & (orders['TOTALPRICE'] != 59356.74732767372) & (orders['CLERK'] == 'C')].merge(customer[['C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_NAME'].str.startswith('U'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[(orders['ORDERPRIORITY'] != '5-LOW') & (orders['ORDERSTATUS'].isin(['F']))].merge(customer[(customer['C_NATIONKEY'] == 17) | (customer['C_PHONE'] == '18-') & (customer['C_CUSTKEY'] != 92) | (customer['C_ADDRESS'] != 'z') | (customer['C_CUSTKEY'] <= 18) & (customer['C_PHONE'] == '3')][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 14) & (nation['N_COMMENT'] != 'o') | (nation['N_COMMENT'] == 'p') & (nation['N_NAME'].str.startswith('I'))].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] != 592) & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] <= 128138) & (orders['O_COMMENT'].str.startswith('u')) | (orders['O_ORDERKEY'] != 636) | (orders['SHIPPRIORITY'] >= 0)][['SHIPPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] < 5059.687604620311) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_CUSTKEY'] <= 51) | (customer['C_COMMENT'] == 'u') & (customer['C_NAME'] != 'C') & (customer['C_PHONE'].str.startswith('22-')) | (customer['C_PHONE'] == '3')].merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'] != 'g')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_COMMENT'] == ' ') | (orders['O_CUSTKEY'] != 16954) & (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] == 510) & (orders['O_CUSTKEY'] != 76403) & (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] == '3-MEDIUM')].merge(customer[(customer['C_NATIONKEY'] == 13) | (customer['C_NAME'] == 'C') & (customer['C_CUSTKEY'] != 85) | (customer['C_ACCTBAL'] <= 1173.6789036142231) & (customer['C_ADDRESS'] != 'L') | (customer['C_ACCTBAL'] != 9613.520674917192) & (customer['C_ACCTBAL'] <= 6322.631668914905)][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY']].merge(nation.merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['TOTALPRICE'] >= 321841.32979718386) | (orders['CLERK'] != 'C') & (orders['O_COMMENT'] == 'l') & (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERSTATUS'].isin(['F', 'P', 'O'])) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM']))][['ORDERPRIORITY', 'ORDERSTATUS', 'O_CUSTKEY', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] == 7) | (customer['C_ADDRESS'].str.startswith('q')) | (customer['C_ACCTBAL'] == 3807.7401960032894) | (customer['C_ACCTBAL'] < 9744.649526409085) & (customer['C_ACCTBAL'] == 6718.981360722573) & (customer['C_PHONE'].str.startswith('2')) | (customer['C_ADDRESS'].str.startswith('z')) | (customer['C_COMMENT'] == 'e')].merge(nation[(nation['N_NATIONKEY'] <= 2) & (nation['N_COMMENT'].str.startswith('h'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_CUSTKEY', 'C_COMMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] <= 2) | (region['R_COMMENT'] == 'g') | (region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 9104) | (partsupp['PS_SUPPKEY'] < 4856) | (partsupp['PS_PARTKEY'] >= 35) & (partsupp['SUPPLYCOST'] <= 473.1461201336898)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1094.0991851526987) & (part['BRAND'] == 'Brand#54') & (part['TYPE'] != 'P') | (part['SIZE'] == 38) & (part['TYPE'] != 'L') & (part['CONTAINER'] != 'WRAP') | (part['RETAILPRICE'] <= 1063.7479028404002)][['BRAND', 'PT_COMMENT', 'P_NAME', 'P_PARTKEY', 'RETAILPRICE', 'SIZE', 'MFGR', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SIZE', 'MFGR', 'CONTAINER', 'PT_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 2119.930769527781) & (supplier['S_COMMENT'].str.startswith('the')) & (supplier['S_ACCTBAL'] > -269.6775005838274) | (supplier['S_ADDRESS'] == '6') | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_SUPPKEY'] != 151) & (supplier['S_COMMENT'] != 'i')][['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'].str.startswith(' ')) | (nation['N_NATIONKEY'] <= 23) | (nation['N_NAME'].str.startswith('S'))].merge(region[(region['R_NAME'] == 'M') & (region['R_REGIONKEY'] <= 0) & (region['R_REGIONKEY'] >= 3)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders[(orders['O_ORDERKEY'] == 412) | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '1-URGENT', '3-MEDIUM'])) | (orders['SHIPPRIORITY'] != 0) | (orders['O_CUSTKEY'] > 122617)][['ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != 'b') | (customer['C_PHONE'].str.startswith('13-'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] > 0.04665709976944715) & (lineitem['L_COMMENT'] == 's. ') | (lineitem['COMMITDATE'] != '1998-10-16') & (lineitem['LINENUMBER'] != 2) & (lineitem['DISCOUNT'] == 0.07675249922666921) & (lineitem['L_SUPPKEY'] > 4816) & (lineitem['L_ORDERKEY'] == 163) | (lineitem['TAX'] > 0.04340219323890555)].merge(orders[(orders['ORDERDATE'] == '1992-01-13') | (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'] == 'r') & (orders['ORDERDATE'] <= '1998-07-21')][['SHIPPRIORITY', 'O_COMMENT', 'CLERK', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer.merge(nation.merge(region[(region['R_NAME'].str.startswith('E')) | (region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] >= 3)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['EXTENDEDPRICE'] < 15947.745233424996) | (lineitem['L_SUPPKEY'] < 1632) | (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['LINESTATUS'] != 'O') & (lineitem['TAX'] >= 0.00024502976645292664)].merge(partsupp[(partsupp['SUPPLYCOST'] > 489.18489367366124) & (partsupp['PS_PARTKEY'] != 15) & (partsupp['PS_PARTKEY'] == 40) & (partsupp['AVAILQTY'] >= 8595)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier.merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 5) & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['SHIPMODE'].isin(['FOB', 'AIR', 'REG AIR'])) | (lineitem['LINENUMBER'] > 2) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] == 0.005039304040499704)][['LINENUMBER', 'L_SUPPKEY', 'TAX', 'EXTENDEDPRICE', 'DISCOUNT', 'SHIPMODE', 'L_PARTKEY', 'SHIPINSTRUCT', 'COMMITDATE', 'L_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'] != '17-') | (supplier['S_COMMENT'].str.startswith('j'))][['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_COMMENT'] == 'v') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['RECEIPTDATE'] <= '1992-05-02') | (lineitem['QUANTITY'] > 38) | (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['L_SUPPKEY'] != 624) | (lineitem['LINESTATUS'] == 'F') | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['DISCOUNT'] != 0.04151891111499139)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('T')) | (supplier['S_COMMENT'] == ',') & (supplier['S_NATIONKEY'] < 6) | (supplier['S_PHONE'] != '28-') | (supplier['S_PHONE'] == '2') & (supplier['S_NATIONKEY'] != 15)].merge(nation[(nation['N_REGIONKEY'] >= 2) | (nation['N_NATIONKEY'] > 4) & (nation['N_NATIONKEY'] > 7)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('count')

lineitem[(lineitem['L_COMMENT'].str.startswith('n')) & (lineitem['L_COMMENT'] == ',') | (lineitem['L_COMMENT'] != 'f') & (lineitem['TAX'] >= 0.07304761440158025) & (lineitem['QUANTITY'] >= 28) & (lineitem['SHIPMODE'] != 'TRUCK') | (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['EXTENDEDPRICE'] > 77581.49261813583) | (lineitem['TAX'] < 0.0369551368397701) & (lineitem['EXTENDEDPRICE'] != 59403.2515593758)][['SHIPINSTRUCT', 'QUANTITY', 'L_PARTKEY', 'SHIPMODE', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] >= 4973) & (partsupp['AVAILQTY'] <= 4639) & (partsupp['PS_SUPPKEY'] != 6301) | (partsupp['PS_SUPPKEY'] <= 6046)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part[['P_PARTKEY', 'SIZE', 'P_NAME', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_PARTKEY'] <= 140173) & (lineitem['TAX'] > 0.02949010683949309) | (lineitem['L_ORDERKEY'] == 103) | (lineitem['DISCOUNT'] != 0.0017529589561971594) & (lineitem['EXTENDEDPRICE'] >= 56487.4545714493) | (lineitem['EXTENDEDPRICE'] != 29816.458425153745) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['QUANTITY'] <= 45) | (lineitem['LINENUMBER'] < 4) | (lineitem['COMMITDATE'] <= '1998-10-16')].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['MFGR'] != 'Manufacturer#4') | (part['BRAND'] == 'Brand#31') & (part['PT_COMMENT'] == 'm') | (part['PT_COMMENT'] != 'b')][['BRAND', 'MFGR', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'SIZE']).agg('max', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] <= 196520) | (lineitem['DISCOUNT'] >= 0.06410812459781266) | (lineitem['RETURNFLAG'].isin(['A', 'N'])) | (lineitem['L_COMMENT'].str.startswith('f')) & (lineitem['TAX'] > 0.06063908904734816) | (lineitem['DISCOUNT'] >= 0.04332641847564237) & (lineitem['L_SUPPKEY'] != 540) & (lineitem['SHIPDATE'] >= '1992-04-27') & (lineitem['RECEIPTDATE'] != '1998-11-06')][['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'SHIPDATE', 'DISCOUNT', 'L_SUPPKEY', 'LINENUMBER', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 450.24474356153064)].merge(part[['MFGR', 'RETAILPRICE', 'TYPE', 'BRAND', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['BRAND', 'MFGR', 'TYPE']).agg('count')

lineitem[(lineitem['QUANTITY'] <= 1) & (lineitem['QUANTITY'] > 9) & (lineitem['LINESTATUS'] != 'O') & (lineitem['L_SUPPKEY'] < 2959) | (lineitem['EXTENDEDPRICE'] > 35398.86909093928) & (lineitem['RETURNFLAG'].isin(['A', 'R'])) & (lineitem['L_ORDERKEY'] != 135) | (lineitem['L_PARTKEY'] <= 68793)][['L_ORDERKEY', 'SHIPMODE', 'L_COMMENT']].merge(orders.merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['RETURNFLAG'] == 'R') & (lineitem['L_COMMENT'] != 't') | (lineitem['L_SUPPKEY'] >= 2182) | (lineitem['L_SUPPKEY'] == 8217) & (lineitem['L_COMMENT'].str.startswith('r')) & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['QUANTITY'] != 25) & (lineitem['COMMITDATE'] == '1998-10-16')][['L_PARTKEY', 'COMMITDATE', 'SHIPDATE', 'L_COMMENT', 'L_SUPPKEY']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part[(part['P_NAME'] != 'h') & (part['PT_COMMENT'].str.startswith('!')) | (part['SIZE'] <= 46) & (part['MFGR'] == 'Manufacturer#1')][['P_NAME', 'CONTAINER', 'P_PARTKEY', 'MFGR', 'TYPE', 'RETAILPRICE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] == 'NONE') & (lineitem['RETURNFLAG'] != 'R') | (lineitem['QUANTITY'] > 30) & (lineitem['L_SUPPKEY'] >= 2422) & (lineitem['L_ORDERKEY'] <= 25) | (lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['RETURNFLAG'].isin(['A', 'N', 'R']))][['SHIPDATE', 'DISCOUNT', 'RETURNFLAG', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 24) | (partsupp['P_COMMENT'] != ',')][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_ADDRESS'] == 'm') & (supplier['S_NATIONKEY'] != 1) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '28-')][['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPMODE'].isin(['FOB'])) | (lineitem['QUANTITY'] >= 12) | (lineitem['EXTENDEDPRICE'] > 85169.63801213854) & (lineitem['COMMITDATE'] >= '1992-05-15') | (lineitem['DISCOUNT'] < 0.059120837512033675) & (lineitem['DISCOUNT'] > 0.007475034158967864) & (lineitem['TAX'] == 0.0028061665527483906) & (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['TAX'] > 0.05766048353798509) | (lineitem['LINENUMBER'] != 3)][['L_PARTKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'DISCOUNT', 'L_SUPPKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['P_COMMENT'] == 'y') & (partsupp['SUPPLYCOST'] < 943.6534348330027) | (partsupp['AVAILQTY'] > 5717) | (partsupp['P_COMMENT'] == 's')][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'BRAND']).agg('max', numeric_only=True)

lineitem[['TAX', 'RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'L_ORDERKEY']].merge(orders[(orders['ORDERDATE'] != '1998-07-21') | (orders['SHIPPRIORITY'] != 0) & (orders['ORDERDATE'] > '1998-07-21') & (orders['TOTALPRICE'] >= 238133.49600797132) & (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] > 37164) | (orders['ORDERPRIORITY'] == '5-LOW') | (orders['ORDERSTATUS'] == 'P') & (orders['O_COMMENT'] == 'uri')][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'] != 's')].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] <= 126) | (orders['ORDERDATE'] == '1992-01-13')].merge(customer[(customer['C_CUSTKEY'] == 47) | (customer['C_CUSTKEY'] == 41) & (customer['C_CUSTKEY'] > 9) & (customer['C_ACCTBAL'] < 8498.898447293463) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY'])) | (customer['C_CUSTKEY'] != 62) & (customer['C_PHONE'].str.startswith('13-')) & (customer['C_ADDRESS'] == 'w')][['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'A')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 1) & (region['R_NAME'].str.startswith('E')) | (region['R_NAME'] == 'AME')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'] == 'F') | (orders['ORDERSTATUS'] == 'F') & (orders['CLERK'] != 'C') & (orders['ORDERSTATUS'] == 'O') & (orders['O_CUSTKEY'] != 134037) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] < 102484) | (orders['O_COMMENT'].str.startswith('x')) & (orders['O_COMMENT'] != 'y')].merge(customer.merge(nation[(nation['N_NATIONKEY'] > 23) & (nation['N_NATIONKEY'] >= 11) & (nation['N_COMMENT'].str.startswith('p'))][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] == 'l') & (region['R_COMMENT'] == 'h') | (region['R_NAME'] != 'E')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] != 33207) | (orders['O_COMMENT'] != 's') | (orders['ORDERDATE'] < '1998-07-21') & (orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['ORDERSTATUS'] != 'F') & (orders['TOTALPRICE'] < 142062.73432199328) | (orders['O_COMMENT'] != 't') | (orders['SHIPPRIORITY'] > 0)][['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer.merge(nation[(nation['N_COMMENT'] == 'e') & (nation['N_REGIONKEY'] > 2)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['TOTALPRICE'] < 277353.5357042906) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_ORDERKEY'] <= 158) & (orders['ORDERSTATUS'] == 'P') | (orders['ORDERDATE'] >= '1998-07-21')].merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_PHONE'] == '18-') | (customer['C_NATIONKEY'] <= 13) | (customer['C_NATIONKEY'] > 13) | (customer['C_COMMENT'] == 'k')][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[['ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[['C_ACCTBAL', 'C_PHONE', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] >= 0)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 362) | (partsupp['AVAILQTY'] != 4492) & (partsupp['PS_PARTKEY'] == 12) | (partsupp['PS_PARTKEY'] < 8)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '3') | (supplier['S_NATIONKEY'] == 18) & (supplier['S_COMMENT'] == '.')][['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] < 12) | (partsupp['AVAILQTY'] == 3524) & (partsupp['SUPPLYCOST'] < 141.63181414654179) | (partsupp['AVAILQTY'] == 7748) & (partsupp['P_COMMENT'] == 'n')].merge(supplier[(supplier['S_ADDRESS'].str.startswith('S')) | (supplier['S_SUPPKEY'] == 78) | (supplier['S_COMMENT'].str.startswith('s')) | (supplier['S_ACCTBAL'] != 8058.893861672442)][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'].str.startswith('AFR'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

lineitem.merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['O_ORDERKEY'] > 383) | (orders['O_CUSTKEY'] >= 32909) & (orders['TOTALPRICE'] != 186219.0240595624) | (orders['TOTALPRICE'] <= 296387.1931808915) | (orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'F') | (orders['TOTALPRICE'] != 94974.7815637993)].merge(customer[['C_CUSTKEY', 'C_NATIONKEY', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NAME'] == 'E') | (nation['N_REGIONKEY'] <= 0) | (nation['N_NAME'].str.startswith('I'))].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.049005631059846344) & (lineitem['EXTENDEDPRICE'] > 29954.216339497267) | (lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPDATE'] == '1992-04-27') & (lineitem['L_COMMENT'] == ',') & (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'MAIL', 'FOB', 'RAIL'])) | (lineitem['L_ORDERKEY'] == 122)][['L_PARTKEY', 'RECEIPTDATE', 'TAX', 'LINENUMBER', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['TYPE'].str.startswith('S')) & (part['PT_COMMENT'] != 'b') | (part['BRAND'].isin(['Brand#42', 'Brand#11', 'Brand#22', 'Brand#34'])) & (part['PT_COMMENT'].str.startswith('g')) | (part['P_PARTKEY'] >= 187) | (part['PT_COMMENT'] == ' fi') & (part['BRAND'] != 'Brand#23') | (part['PT_COMMENT'].str.startswith('o')) & (part['P_NAME'].str.startswith('m'))][['PT_COMMENT', 'P_PARTKEY', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] > 3) & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['EXTENDEDPRICE'] < 43963.32751767206) & (lineitem['RETURNFLAG'].isin(['R', 'N', 'A'])) & (lineitem['L_ORDERKEY'] == 76) & (lineitem['L_SUPPKEY'] != 3242) | (lineitem['L_SUPPKEY'] > 3610) & (lineitem['L_SUPPKEY'] >= 3972) & (lineitem['SHIPINSTRUCT'] == 'COLLECT COD') & (lineitem['EXTENDEDPRICE'] >= 36151.02013833773)][['L_COMMENT', 'COMMITDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['AVAILQTY'] > 3069) & (partsupp['PS_PARTKEY'] >= 17) & (partsupp['P_COMMENT'] != 'x') & (partsupp['SUPPLYCOST'] >= 464.06334428467824)][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 'B') | (supplier['S_PHONE'] != '14-')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['L_PARTKEY'] == 180373) & (lineitem['EXTENDEDPRICE'] == 42344.45839824149) & (lineitem['LINESTATUS'] != 'F') & (lineitem['RECEIPTDATE'] < '1992-05-02') | (lineitem['L_PARTKEY'] > 62823) & (lineitem['RETURNFLAG'] == 'A') | (lineitem['L_SUPPKEY'] >= 2977)][['L_PARTKEY', 'COMMITDATE', 'RECEIPTDATE', 'SHIPMODE', 'TAX', 'SHIPDATE']].merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(part[(part['P_NAME'] == 'o') | (part['TYPE'].str.startswith('L')) & (part['CONTAINER'] == 'LG') & (part['RETAILPRICE'] <= 976.5485154518135) | (part['PT_COMMENT'].str.startswith('w')) | (part['CONTAINER'].str.startswith('MED')) & (part['TYPE'].str.startswith('P'))][['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'CONTAINER', 'TYPE', 'MFGR', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F']))][['DISCOUNT', 'L_ORDERKEY']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['ORDERDATE'] < '1992-01-13')][['TOTALPRICE', 'CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME']].merge(nation.merge(region[(region['R_REGIONKEY'] == 0)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] != 's. ')][['RETURNFLAG', 'COMMITDATE', 'EXTENDEDPRICE', 'L_ORDERKEY', 'QUANTITY']].merge(orders[['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] != 93)][['MKTSEGMENT', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE', 'C_COMMENT']].merge(nation.merge(region[(region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] >= 51) | (lineitem['RETURNFLAG'] != 'N') & (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['L_ORDERKEY'] == 169) | (lineitem['RETURNFLAG'].isin(['N', 'R'])) | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') & (lineitem['L_SUPPKEY'] != 7228) & (lineitem['SHIPMODE'] != 'AIR')].merge(partsupp[(partsupp['PS_PARTKEY'] == 5) & (partsupp['PS_PARTKEY'] == 4)].merge(supplier[(supplier['S_PHONE'] != '1') & (supplier['S_COMMENT'] == ' ') | (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] < 7592.599700711245)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['QUANTITY'] > 26) & (lineitem['LINENUMBER'] < 4) & (lineitem['L_ORDERKEY'] > 187) | (lineitem['L_SUPPKEY'] >= 744) | (lineitem['DISCOUNT'] >= 0.041499756989506836)].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('u')) | (partsupp['PS_PARTKEY'] <= 6) | (partsupp['PS_PARTKEY'] > 21) & (partsupp['P_COMMENT'].str.startswith('y'))][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_PHONE', 'S_SUPPKEY', 'S_ADDRESS', 'S_NATIONKEY', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'B') & (nation['N_NATIONKEY'] > 16)].merge(region[(region['R_NAME'] == 'AFR')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['QUANTITY'] >= 39) | (lineitem['SHIPMODE'] != 'MAIL') | (lineitem['L_PARTKEY'] >= 83284) | (lineitem['QUANTITY'] >= 44) | (lineitem['LINENUMBER'] < 5) | (lineitem['L_COMMENT'] == 's') | (lineitem['RETURNFLAG'].isin(['N', 'R']))][['EXTENDEDPRICE', 'TAX', 'L_PARTKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] != 'E') & (part['P_NAME'].str.startswith('blu')) | (part['TYPE'] != 'P') & (part['PT_COMMENT'] == 'r') & (part['BRAND'] == 'Brand#13') | (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#2'])) | (part['P_NAME'] == 'cor') | (part['P_PARTKEY'] < 120)][['MFGR', 'RETAILPRICE', 'P_PARTKEY', 'BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['TAX'] > 0.0007363482253200893) & (lineitem['L_PARTKEY'] == 45798) | (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPDATE'] == '1992-04-27')][['QUANTITY', 'L_PARTKEY', 'LINESTATUS', 'COMMITDATE', 'LINENUMBER', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['TYPE'] == 'L') & (part['PT_COMMENT'] != 'f') | (part['BRAND'].isin(['Brand#25', 'Brand#41', 'Brand#11', 'Brand#14', 'Brand#13', 'Brand#34', 'Brand#22', 'Brand#51', 'Brand#35'])) | (part['TYPE'] != 'S') & (part['P_NAME'] != 'w') | (part['MFGR'] != 'Manufacturer#1')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['CONTAINER', 'RETAILPRICE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1992-04-27') | (lineitem['L_COMMENT'] != '-')].merge(orders[(orders['O_CUSTKEY'] > 60308)][['SHIPPRIORITY', 'O_COMMENT', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] >= 17) | (customer['C_CUSTKEY'] < 42) | (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'] != 'FURNITURE') & (customer['C_CUSTKEY'] >= 89)][['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 22) | (nation['N_NAME'] == 'K') & (nation['N_REGIONKEY'] < 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != 'the') | (orders['O_COMMENT'] != 'c') | (orders['O_COMMENT'] == 'i') & (orders['CLERK'] == 'C') & (orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] >= 0) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1992-01-13')][['O_CUSTKEY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'M') | (customer['MKTSEGMENT'] != 'MACHINERY') & (customer['C_NAME'] != 'C') | (customer['C_ADDRESS'] == 'c') & (customer['C_COMMENT'] != 'i') & (customer['C_ADDRESS'] == 'r') | (customer['C_CUSTKEY'] < 66)][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 2)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['O_CUSTKEY'] >= 41572) | (orders['O_COMMENT'] == ',')][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] != 39) | (customer['C_COMMENT'] == 'a') & (customer['C_ACCTBAL'] != 7679.378543985344) | (customer['C_ADDRESS'] != 'Q')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_ORDERKEY'] == 158) & (orders['CLERK'] != 'C') & (orders['CLERK'] != 'C') & (orders['O_ORDERKEY'] < 356) | (orders['O_CUSTKEY'] <= 99675) & (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['O_CUSTKEY'] <= 19451) | (orders['O_ORDERKEY'] > 720)].merge(customer[(customer['C_ADDRESS'].str.startswith('T')) | (customer['C_CUSTKEY'] == 23)][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 18) & (nation['N_COMMENT'] != 'u') | (nation['N_COMMENT'].str.startswith('o')) & (nation['N_REGIONKEY'] != 3)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

orders[['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] <= 20) & (customer['C_PHONE'] == '22-') & (customer['C_NATIONKEY'] == 3) & (customer['C_CUSTKEY'] == 6) | (customer['C_ACCTBAL'] <= 5253.2210170505505)][['C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

orders[['O_CUSTKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_NATIONKEY'] < 1) & (customer['C_PHONE'] == '1') | (customer['C_ADDRESS'] == '6') | (customer['C_PHONE'].str.startswith('13-')) | (customer['C_PHONE'] != '2') & (customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] != 22)].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] != 'v') | (nation['N_NAME'] == 'G')].merge(region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'E') | (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'CLERK', 'O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'] == 'a')][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_NATIONKEY', 'MKTSEGMENT', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('count')

partsupp[(partsupp['AVAILQTY'] > 2212) | (partsupp['P_COMMENT'] == '.') | (partsupp['PS_PARTKEY'] > 43) & (partsupp['SUPPLYCOST'] < 775.441107449717) & (partsupp['PS_PARTKEY'] > 20)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_PHONE'] != '32-')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'g')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 37) | (partsupp['PS_SUPPKEY'] != 7365) & (partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['AVAILQTY'] != 6442) | (partsupp['P_COMMENT'] == 't')][['AVAILQTY', 'PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NATIONKEY'] == 6) & (supplier['S_NATIONKEY'] <= 6) & (supplier['S_ADDRESS'] == 'W')].merge(nation[(nation['N_NATIONKEY'] != 4) | (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 'c') | (nation['N_NAME'].str.startswith('V'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] > 0) | (region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'] != 'q') | (partsupp['PS_PARTKEY'] > 40) & (partsupp['PS_PARTKEY'] >= 37)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] == 64101.966944318476) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['L_COMMENT'] == 'j') | (lineitem['L_SUPPKEY'] >= 3808) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['EXTENDEDPRICE'] != 40577.32060564246)].merge(orders[(orders['ORDERSTATUS'].isin(['P'])) & (orders['O_ORDERKEY'] < 378) & (orders['ORDERDATE'] <= '1998-07-21') & (orders['O_ORDERKEY'] >= 147) | (orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] != 150738.40133126517) | (orders['ORDERSTATUS'] == 'F')][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'ORDERSTATUS']].merge(customer[(customer['C_COMMENT'].str.startswith('s'))][['C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 157) | (lineitem['L_COMMENT'].str.startswith('lit')) & (lineitem['L_COMMENT'] == 'l') | (lineitem['TAX'] == 0.006871215424740172) & (lineitem['L_SUPPKEY'] != 6791) | (lineitem['COMMITDATE'] >= '1992-05-15')][['L_PARTKEY', 'COMMITDATE', 'EXTENDEDPRICE', 'SHIPMODE', 'SHIPDATE', 'L_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] != 838.6800230101808) & (partsupp['PS_PARTKEY'] != 21) | (partsupp['SUPPLYCOST'] <= 933.4576978997411) | (partsupp['P_COMMENT'] != ';') & (partsupp['SUPPLYCOST'] > 930.5941612254625)][['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[(supplier['S_PHONE'] != '1') & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] != 7) | (supplier['S_PHONE'] == '17-')][['S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['QUANTITY'] < 9) & (lineitem['DISCOUNT'] == 0.040114956923279814) | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['LINENUMBER'] < 5) | (lineitem['SHIPMODE'] != 'SHIP') | (lineitem['RECEIPTDATE'] < '1992-05-02')][['EXTENDEDPRICE', 'L_PARTKEY', 'SHIPDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'SHIPMODE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 4496) | (partsupp['AVAILQTY'] <= 9063) & (partsupp['P_COMMENT'].str.startswith('b'))][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['MFGR'] == 'Manufacturer#1') & (part['BRAND'] == 'Brand#15') & (part['P_PARTKEY'] < 151) | (part['BRAND'] != 'Brand#41')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1998-11-06') & (lineitem['L_COMMENT'] != 'v') & (lineitem['TAX'] == 0.06695684347281085) | (lineitem['QUANTITY'] != 22) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE'])) | (lineitem['DISCOUNT'] <= 0.005333911891722321) & (lineitem['LINESTATUS'].isin(['F']))].merge(partsupp[(partsupp['SUPPLYCOST'] != 974.4979241467132)][['PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'I') | (nation['N_NATIONKEY'] <= 17)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] == 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[['LINESTATUS', 'L_SUPPKEY', 'SHIPDATE', 'LINENUMBER', 'COMMITDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3007) & (partsupp['SUPPLYCOST'] > 500.46047542308884) & (partsupp['AVAILQTY'] < 6110) | (partsupp['PS_PARTKEY'] > 22) & (partsupp['AVAILQTY'] > 9402)].merge(supplier[['S_COMMENT', 'S_PHONE', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_NAME'] != 'S')].merge(region[(region['R_REGIONKEY'] > 3) | (region['R_REGIONKEY'] < 1)][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[['L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'COMMITDATE', 'L_ORDERKEY', 'TAX', 'RETURNFLAG', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] == 92) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_NATIONKEY'] != 3) & (supplier['S_SUPPKEY'] < 169) | (supplier['S_COMMENT'] == 'j') | (supplier['S_ADDRESS'] != 'a') | (supplier['S_ADDRESS'].str.startswith('r'))].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '1-URGENT'])) & (orders['TOTALPRICE'] <= 1646.8785990082288)].merge(customer[(customer['C_COMMENT'] != 'u') & (customer['C_NATIONKEY'] <= 15) & (customer['C_COMMENT'].str.startswith('w'))][['C_COMMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS']].merge(nation[(nation['N_NATIONKEY'] != 11) | (nation['N_NATIONKEY'] <= 7) | (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) | (orders['O_ORDERKEY'] < 51) & (orders['ORDERSTATUS'] != 'O') & (orders['ORDERDATE'] != '1992-01-13') | (orders['TOTALPRICE'] <= 71394.54319197472)][['O_COMMENT', 'ORDERPRIORITY', 'ORDERDATE', 'ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] < 9104.071350071208) | (customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] < 21) | (customer['C_COMMENT'] != 'k')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'n') & (nation['N_NATIONKEY'] > 18) & (nation['N_COMMENT'] != 't')].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['ORDERSTATUS'].isin(['O', 'P', 'F'])) & (orders['ORDERSTATUS'] != 'F') & (orders['ORDERDATE'] != '1998-07-21') | (orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] != 't') | (orders['O_CUSTKEY'] != 122828) & (orders['O_ORDERKEY'] != 22) | (orders['ORDERSTATUS'].isin(['O', 'F']))][['O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'B') & (nation['N_REGIONKEY'] == 2)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

orders[(orders['O_COMMENT'] == 'z') & (orders['CLERK'] == 'C') & (orders['O_ORDERKEY'] <= 168) | (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERSTATUS'] != 'P') | (orders['O_CUSTKEY'] >= 34031) | (orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] < 751) | (orders['O_CUSTKEY'] == 78566)].merge(customer[['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_REGIONKEY'] <= 1) | (nation['N_REGIONKEY'] > 3) | (nation['N_COMMENT'] == 's')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('count')

orders[(orders['SHIPPRIORITY'] < 0) & (orders['SHIPPRIORITY'] > 0) | (orders['O_CUSTKEY'] == 135360) & (orders['SHIPPRIORITY'] >= 0) | (orders['O_CUSTKEY'] > 28953) & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] < '1998-07-21') | (orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('f'))].merge(customer[(customer['C_PHONE'].str.startswith('2')) | (customer['C_NATIONKEY'] <= 9) & (customer['C_COMMENT'] == 'h') | (customer['MKTSEGMENT'] == 'MACHINERY') | (customer['MKTSEGMENT'] == 'FURNITURE')][['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'] == 'A') | (nation['N_NATIONKEY'] < 14)].merge(region[(region['R_NAME'] != 'AFR') & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 881.0791437822791) & (partsupp['PS_SUPPKEY'] >= 252)][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_PHONE'].str.startswith('32-')) & (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] >= 6) | (supplier['S_NATIONKEY'] > 15) & (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != 3970.6527215756596) | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'S')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[(supplier['S_NATIONKEY'] >= 3) & (supplier['S_SUPPKEY'] != 20) & (supplier['S_NAME'] != 'S') | (supplier['S_ACCTBAL'] <= 9302.66213962528) | (supplier['S_NAME'] != 'S') | (supplier['S_SUPPKEY'] <= 169) | (supplier['S_NAME'].str.startswith('S'))][['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 385.3076194990628) | (partsupp['PS_SUPPKEY'] != 3362) & (partsupp['PS_PARTKEY'] != 26)][['SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NATIONKEY'] < 14) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_NAME'] != 'S') & (supplier['S_NATIONKEY'] <= 2) | (supplier['S_NAME'] != 'S') | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_PHONE']].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['L_ORDERKEY'] >= 25) & (lineitem['TAX'] < 0.03528088000786017) & (lineitem['DISCOUNT'] >= 0.06775846182700489) & (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['L_SUPPKEY'] < 6126) & (lineitem['QUANTITY'] != 25)][['SHIPDATE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE', 'L_ORDERKEY', 'TAX', 'RECEIPTDATE', 'LINESTATUS', 'SHIPMODE', 'QUANTITY']].merge(orders[(orders['TOTALPRICE'] < 95077.3146714686) & (orders['ORDERPRIORITY'] != '5-LOW') | (orders['ORDERSTATUS'] != 'F') | (orders['ORDERPRIORITY'] != '4-NOT SPECIFIED') & (orders['ORDERSTATUS'] != 'F') & (orders['O_CUSTKEY'] > 119196)][['ORDERDATE', 'O_COMMENT', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['ORDERDATE', 'O_ORDERKEY', 'O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'R') & (lineitem['LINENUMBER'] <= 3) | (lineitem['COMMITDATE'] >= '1992-05-15') & (lineitem['L_SUPPKEY'] == 7631) & (lineitem['LINENUMBER'] < 2) & (lineitem['LINENUMBER'] > 5) | (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN')][['TAX', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE']].merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 14) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_NAME'].str.startswith('S')) & (supplier['S_PHONE'] != '32-') | (supplier['S_SUPPKEY'] > 136) | (supplier['S_ADDRESS'] != 'd')][['S_NAME', 'S_SUPPKEY', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) & (region['R_COMMENT'] != 'g')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != 'NONE') | (lineitem['QUANTITY'] >= 15) | (lineitem['L_COMMENT'] == 'v') | (lineitem['L_SUPPKEY'] != 5885) & (lineitem['LINESTATUS'] == 'O') | (lineitem['DISCOUNT'] == 0.020015381244041952) | (lineitem['DISCOUNT'] != 0.00725952850515218) & (lineitem['L_PARTKEY'] <= 40525) & (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['QUANTITY'] < 10)][['DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'COMMITDATE', 'SHIPDATE', 'QUANTITY']].merge(orders[(orders['ORDERSTATUS'] != 'O') | (orders['O_ORDERKEY'] < 166)].merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'].str.startswith('J')) & (nation['N_COMMENT'] == 'c')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['L_PARTKEY', 'DISCOUNT', 'SHIPMODE', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'SHIPDATE', 'QUANTITY']].merge(orders.merge(customer[(customer['C_NATIONKEY'] > 3) | (customer['C_ACCTBAL'] != 234.76213895462593) | (customer['C_ACCTBAL'] == 1626.2139109534032) & (customer['C_NATIONKEY'] != 9) | (customer['MKTSEGMENT'].isin(['FURNITURE', 'AUTOMOBILE'])) | (customer['C_ADDRESS'].str.startswith('S')) | (customer['C_NATIONKEY'] != 19) & (customer['C_COMMENT'] == 'g')][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NAME']).agg('count')

orders[(orders['ORDERDATE'] > '1992-01-13') & (orders['CLERK'] == 'C') & (orders['ORDERDATE'] == '1992-01-13')][['SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 9068.18073395538) | (customer['C_NATIONKEY'] >= 21) | (customer['C_PHONE'] != '25-') & (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] >= 7767.360713682043) & (customer['C_ADDRESS'] != '9') & (customer['C_NAME'].str.startswith('C')) | (customer['C_COMMENT'] != 'r')].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] != 248) | (orders['O_CUSTKEY'] != 74537) & (orders['TOTALPRICE'] != 152216.19557209886) | (orders['O_ORDERKEY'] < 524) & (orders['ORDERSTATUS'] == 'F') | (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] >= 72056) & (orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] != 0)].merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD'])) | (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'MACHINERY'])) & (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NATIONKEY'] >= 12) | (customer['MKTSEGMENT'] != 'AUTOMOBILE') & (customer['MKTSEGMENT'] != 'AUTOMOBILE')][['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'] == 'C') & (orders['O_COMMENT'] != 'ly ') & (orders['ORDERSTATUS'] != 'O') | (orders['ORDERSTATUS'].isin(['O'])) & (orders['O_ORDERKEY'] < 654) & (orders['CLERK'] != 'C') | (orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] != 88802.4265784157)][['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] > 51) | (customer['C_PHONE'].str.startswith('18-')) | (customer['C_ADDRESS'] != 'P') & (customer['MKTSEGMENT'] != 'BUILDING') & (customer['C_COMMENT'] != 'u') & (customer['MKTSEGMENT'] != 'BUILDING')][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 47) & (partsupp['PS_SUPPKEY'] != 2171) | (partsupp['PS_PARTKEY'] != 31) & (partsupp['PS_SUPPKEY'] == 5102) & (partsupp['PS_PARTKEY'] >= 7)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] < 4451.628058211829) & (supplier['S_ACCTBAL'] != 3306.1222696971) & (supplier['S_COMMENT'] == 'c') & (supplier['S_ACCTBAL'] > -739.1156460812019) & (supplier['S_ADDRESS'].str.startswith('P')) & (supplier['S_ADDRESS'] == 'y') & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] < 0) | (nation['N_NATIONKEY'] == 4)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem[(lineitem['EXTENDEDPRICE'] > 7725.611330459391) | (lineitem['COMMITDATE'] < '1992-05-15')][['L_COMMENT', 'RECEIPTDATE', 'DISCOUNT', 'L_SUPPKEY', 'LINENUMBER', 'TAX', 'L_ORDERKEY', 'RETURNFLAG']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'] != 'y')][['O_CUSTKEY', 'O_ORDERKEY', 'CLERK', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer.merge(nation[(nation['N_NATIONKEY'] != 22) | (nation['N_NATIONKEY'] == 14)].merge(region[(region['R_REGIONKEY'] == 1) | (region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] == 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] != 5)][['SHIPDATE', 'LINESTATUS', 'L_SUPPKEY', 'L_PARTKEY', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 28) & (partsupp['AVAILQTY'] <= 1817) & (partsupp['P_COMMENT'] != 't')][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_SUPPKEY'] > 130) | (supplier['S_ADDRESS'] == 'T') & (supplier['S_ACCTBAL'] != 1594.4946688674665) & (supplier['S_SUPPKEY'] < 137) & (supplier['S_SUPPKEY'] > 4) & (supplier['S_SUPPKEY'] == 103)].merge(nation.merge(region[(region['R_REGIONKEY'] < 0)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['LINENUMBER'] == 4) | (lineitem['EXTENDEDPRICE'] == 41738.0828165461) | (lineitem['L_SUPPKEY'] > 210) | (lineitem['LINESTATUS'] == 'F') | (lineitem['COMMITDATE'] > '1998-10-16') & (lineitem['L_PARTKEY'] > 61149) | (lineitem['L_ORDERKEY'] <= 111) | (lineitem['LINENUMBER'] != 3) | (lineitem['TAX'] > 0.07771740147081149)][['QUANTITY', 'LINENUMBER', 'SHIPDATE', 'RECEIPTDATE', 'L_COMMENT', 'LINESTATUS', 'COMMITDATE', 'L_PARTKEY', 'L_ORDERKEY']].merge(orders[['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != '7') & (customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE', 'FURNITURE'])) | (customer['C_PHONE'] == '18-') & (customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'FURNITURE'])) & (customer['C_NATIONKEY'] <= 11)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] != 'O') | (lineitem['L_PARTKEY'] != 9322) | (lineitem['L_ORDERKEY'] < 57) | (lineitem['L_COMMENT'] == '-') | (lineitem['SHIPDATE'] <= '1992-04-27') & (lineitem['DISCOUNT'] >= 0.008257047810031493) & (lineitem['QUANTITY'] > 48) & (lineitem['L_ORDERKEY'] == 60) & (lineitem['TAX'] == 0.01844917868924549)][['LINESTATUS', 'L_PARTKEY', 'LINENUMBER', 'TAX', 'EXTENDEDPRICE', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5561) & (partsupp['SUPPLYCOST'] < 31.68997130742192) | (partsupp['P_COMMENT'].str.startswith(' ')) & (partsupp['SUPPLYCOST'] >= 335.77483595437366) | (partsupp['SUPPLYCOST'] > 158.82963653379704)].merge(part[['RETAILPRICE', 'P_PARTKEY', 'SIZE', 'PT_COMMENT', 'MFGR', 'P_NAME', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE', 'BRAND', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 183) & (lineitem['TAX'] < 0.049183961127786946) & (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['L_SUPPKEY'] != 4912) & (lineitem['SHIPMODE'].isin(['RAIL', 'TRUCK', 'SHIP', 'REG AIR', 'FOB', 'MAIL'])) & (lineitem['SHIPINSTRUCT'] != 'NONE') & (lineitem['DISCOUNT'] != 0.08705334127266484) | (lineitem['RECEIPTDATE'] == '1998-11-06')].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(supplier[['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_PHONE']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] > 70) & (lineitem['SHIPINSTRUCT'] != 'NONE')][['SHIPDATE', 'RECEIPTDATE', 'LINENUMBER', 'L_ORDERKEY', 'SHIPMODE', 'TAX']].merge(orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_NATIONKEY'] < 10) | (nation['N_COMMENT'] != 's')].merge(region[(region['R_NAME'].str.startswith('M')) | (region['R_REGIONKEY'] >= 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 147261) | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_PARTKEY'] != 125643) | (lineitem['L_PARTKEY'] <= 53201) & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['L_COMMENT'].str.startswith('lit'))][['QUANTITY', 'L_SUPPKEY', 'SHIPDATE', 'SHIPINSTRUCT', 'TAX', 'EXTENDEDPRICE', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPMODE']].merge(orders[['ORDERDATE', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] == '.')].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 1) & (nation['N_NATIONKEY'] <= 9)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] >= 2322) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPMODE'].isin(['MAIL', 'REG AIR', 'RAIL', 'TRUCK', 'FOB', 'AIR', 'SHIP'])) | (lineitem['EXTENDEDPRICE'] > 61245.74907145647) | (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['LINENUMBER'] < 1) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['LINESTATUS'] == 'O') | (lineitem['RETURNFLAG'] != 'A') & (lineitem['LINENUMBER'] == 4)][['TAX', 'L_SUPPKEY', 'L_PARTKEY', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] < 5)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['PT_COMMENT', 'RETAILPRICE', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY', 'TYPE']).agg('mean', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['SHIPMODE'].isin(['FOB', 'TRUCK', 'AIR'])) | (lineitem['DISCOUNT'] <= 0.09576968305775772) & (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['L_COMMENT'].str.startswith('i')) | (lineitem['L_ORDERKEY'] > 16) & (lineitem['L_PARTKEY'] <= 166852)][['SHIPINSTRUCT', 'L_PARTKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] < 856.5241910015583) | (partsupp['PS_PARTKEY'] <= 49) | (partsupp['PS_PARTKEY'] > 15) & (partsupp['AVAILQTY'] == 9398) & (partsupp['P_COMMENT'] != 'f')].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

lineitem[['SHIPDATE', 'L_ORDERKEY', 'L_PARTKEY', 'RECEIPTDATE']].merge(orders[(orders['O_ORDERKEY'] <= 411) | (orders['ORDERPRIORITY'] == '4-NOT SPECIFIED') & (orders['SHIPPRIORITY'] > 0) & (orders['O_CUSTKEY'] == 18374) & (orders['CLERK'] == 'C')].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 6)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

orders[(orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['TOTALPRICE'] > 96180.77912128984) | (orders['TOTALPRICE'] <= 285503.6585033086) & (orders['ORDERDATE'] > '1998-07-21')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_PHONE'] != '25-') | (customer['C_ACCTBAL'] != 7782.691609215719)].merge(nation[(nation['N_NATIONKEY'] > 23) | (nation['N_COMMENT'].str.startswith('l'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] > 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('count')

orders[(orders['O_CUSTKEY'] != 81815) | (orders['ORDERPRIORITY'] == '2-HIGH') | (orders['O_COMMENT'] == 't') | (orders['ORDERPRIORITY'] == '1-URGENT') | (orders['SHIPPRIORITY'] != 0) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_CUSTKEY'] >= 40362)][['CLERK', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_COMMENT'] != 'c') & (customer['C_ADDRESS'] == 'e') & (customer['C_CUSTKEY'] > 8)][['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('U'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'] != '2-HIGH') & (orders['ORDERDATE'] == '1992-01-13') | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] == '1992-01-13') & (orders['ORDERSTATUS'] == 'F') & (orders['CLERK'] != 'C')][['TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] == 'HOUSEHOLD') & (customer['C_COMMENT'].str.startswith('d')) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] != -370.7829857230014) & (customer['C_NATIONKEY'] < 4) & (customer['C_CUSTKEY'] != 45) | (customer['C_PHONE'] == '18-')].merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_PHONE'] == '18-') | (customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] != 'u') & (customer['C_CUSTKEY'] == 95) & (customer['C_ADDRESS'] == 'g') & (customer['MKTSEGMENT'].isin(['AUTOMOBILE'])) & (customer['C_CUSTKEY'] != 73) & (customer['C_COMMENT'] == 'c')][['C_CUSTKEY', 'C_NATIONKEY', 'C_ADDRESS', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_ACCTBAL', 'C_NAME']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['PS_SUPPKEY'] > 5739) & (partsupp['P_COMMENT'] != 'v') & (partsupp['AVAILQTY'] != 3425) & (partsupp['SUPPLYCOST'] <= 15.164514299992032)][['P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_PHONE'] != '1') & (supplier['S_NATIONKEY'] >= 14) | (supplier['S_SUPPKEY'] > 54) & (supplier['S_ACCTBAL'] < -727.2002551645667) | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NATIONKEY'] == 13) | (nation['N_NAME'] == 'A') & (nation['N_NATIONKEY'] >= 20) | (nation['N_NAME'] != 'P')][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] != 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] > 5) & (lineitem['L_COMMENT'] != 's. ') | (lineitem['L_ORDERKEY'] == 50)][['L_COMMENT', 'RECEIPTDATE', 'TAX', 'QUANTITY', 'L_ORDERKEY', 'RETURNFLAG', 'DISCOUNT']].merge(orders[(orders['O_COMMENT'] == 'g') & (orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] != 112687) | (orders['O_ORDERKEY'] < 596) | (orders['ORDERSTATUS'] == 'F') | (orders['O_ORDERKEY'] < 494) & (orders['CLERK'] != 'C')].merge(customer[(customer['C_COMMENT'] != 't')][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_PHONE', 'C_NAME', 'C_NATIONKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('l'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] != 39592) | (lineitem['SHIPINSTRUCT'] == 'DELIVER IN PERSON') & (lineitem['DISCOUNT'] < 0.001911467817810586) & (lineitem['LINESTATUS'] == 'O') & (lineitem['EXTENDEDPRICE'] <= 10775.577126159144) | (lineitem['L_COMMENT'] != 'd') & (lineitem['L_ORDERKEY'] == 35)][['EXTENDEDPRICE', 'L_ORDERKEY', 'L_COMMENT', 'SHIPINSTRUCT', 'SHIPDATE']].merge(orders.merge(customer[(customer['C_PHONE'].str.startswith('13-')) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE'])) | (customer['C_CUSTKEY'] > 43) | (customer['C_COMMENT'].str.startswith('h')) & (customer['C_ACCTBAL'] > 3553.1395347453163) & (customer['C_NATIONKEY'] > 2) & (customer['MKTSEGMENT'].isin(['FURNITURE']))].merge(nation[(nation['N_NATIONKEY'] >= 11) & (nation['N_NATIONKEY'] > 14)].merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] < 9120) | (lineitem['L_SUPPKEY'] <= 9541) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_SUPPKEY'] <= 9492) & (lineitem['RECEIPTDATE'] >= '1992-05-02') & (lineitem['L_COMMENT'] == ' re') & (lineitem['L_SUPPKEY'] != 990) & (lineitem['LINENUMBER'] > 1) & (lineitem['COMMITDATE'] != '1998-10-16')].merge(partsupp[(partsupp['SUPPLYCOST'] != 220.77355657892375) | (partsupp['SUPPLYCOST'] >= 593.6120117757058) | (partsupp['P_COMMENT'] != ';') & (partsupp['AVAILQTY'] <= 801) | (partsupp['PS_SUPPKEY'] == 6652)].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] == 11) & (nation['N_COMMENT'] == 'o') & (nation['N_COMMENT'].str.startswith('h'))][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] != 'A')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) | (lineitem['L_PARTKEY'] >= 189497) & (lineitem['LINESTATUS'].isin(['O', 'F'])) & (lineitem['DISCOUNT'] == 0.08585366902848567) | (lineitem['L_ORDERKEY'] <= 115) | (lineitem['LINESTATUS'] != 'O') | (lineitem['DISCOUNT'] == 0.08128252426729542) | (lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['DISCOUNT'] >= 0.09978759522267198) & (lineitem['L_PARTKEY'] == 37560)][['L_COMMENT', 'L_SUPPKEY', 'DISCOUNT', 'L_ORDERKEY', 'SHIPMODE', 'SHIPINSTRUCT', 'LINESTATUS', 'L_PARTKEY']].merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 52) | (supplier['S_COMMENT'] == ',') & (supplier['S_ACCTBAL'] >= 3577.7649958178035) | (supplier['S_SUPPKEY'] == 66)][['S_PHONE', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'R'])) | (lineitem['RECEIPTDATE'] == '1998-11-06') & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_ORDERKEY'] < 33) & (lineitem['L_SUPPKEY'] > 4490) & (lineitem['QUANTITY'] >= 24) | (lineitem['SHIPMODE'].isin(['AIR', 'RAIL'])) | (lineitem['L_PARTKEY'] >= 162675) & (lineitem['TAX'] <= 0.01731345879648318)].merge(partsupp[(partsupp['SUPPLYCOST'] <= 554.2138496665117) & (partsupp['PS_PARTKEY'] == 14) & (partsupp['AVAILQTY'] == 6301) | (partsupp['PS_PARTKEY'] <= 47) & (partsupp['PS_SUPPKEY'] > 7457)].merge(supplier[(supplier['S_COMMENT'] != 'bli') & (supplier['S_ADDRESS'] == 'g') & (supplier['S_NATIONKEY'] <= 23) | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'u')][['S_NAME', 'S_SUPPKEY', 'S_NATIONKEY', 'S_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['ORDERDATE'] < '1992-01-13') & (orders['O_COMMENT'].str.startswith('g')) & (orders['O_ORDERKEY'] > 300) & (orders['O_ORDERKEY'] == 370)][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] >= 1493.7640195234949) & (customer['MKTSEGMENT'] == 'FURNITURE') & (customer['C_NAME'].str.startswith('C')) | (customer['C_PHONE'] != '1') & (customer['MKTSEGMENT'] != 'HOUSEHOLD') | (customer['C_ADDRESS'] == 'n')].merge(nation[(nation['N_NATIONKEY'] < 9) | (nation['N_NATIONKEY'] == 6) | (nation['N_NATIONKEY'] >= 21)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_NAME'] == 'M') & (region['R_NAME'].str.startswith('A'))][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['L_SUPPKEY'] != 2262) | (lineitem['RETURNFLAG'] != 'A') & (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['QUANTITY'] == 30) & (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_SUPPKEY'] < 1341) | (lineitem['SHIPMODE'] == 'SHIP') & (lineitem['SHIPMODE'] == 'FOB') | (lineitem['L_SUPPKEY'] >= 8864)][['DISCOUNT', 'LINENUMBER', 'TAX', 'L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['MKTSEGMENT'] != 'MACHINERY') | (customer['C_COMMENT'] == 's') & (customer['C_NATIONKEY'] <= 19) | (customer['C_COMMENT'] == 'e') & (customer['C_PHONE'] == '22-') & (customer['C_COMMENT'] == 'r') | (customer['C_CUSTKEY'] != 8)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT', 'N_NAME']).agg('count')

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'RETURNFLAG', 'SHIPDATE', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_COMMENT']].merge(orders[(orders['O_COMMENT'].str.startswith('q')) & (orders['TOTALPRICE'] == 108157.97018501448) & (orders['TOTALPRICE'] < 205221.89860624305) | (orders['O_ORDERKEY'] != 648) | (orders['ORDERSTATUS'].isin(['P', 'F']))].merge(customer[(customer['C_CUSTKEY'] <= 41) & (customer['C_NATIONKEY'] >= 16) | (customer['C_ADDRESS'] == 'i') & (customer['C_ACCTBAL'] > 7439.341730255623) & (customer['MKTSEGMENT'] == 'MACHINERY')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_ADDRESS', 'C_COMMENT']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == '3-MEDIUM') | (orders['O_COMMENT'] == 'b') & (orders['ORDERSTATUS'] == 'O') | (orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['SHIPPRIORITY'] >= 0)][['O_CUSTKEY', 'ORDERPRIORITY', 'CLERK', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY', 'ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] == 2034.11674014836) | (customer['C_NATIONKEY'] <= 4) & (customer['C_PHONE'].str.startswith('2'))][['C_CUSTKEY', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_PHONE']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('count')

orders[(orders['O_CUSTKEY'] <= 84661) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['CLERK'] == 'C') | (orders['O_CUSTKEY'] == 101434)][['ORDERDATE', 'O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING'])) | (customer['C_COMMENT'].str.startswith('q')) | (customer['C_COMMENT'] != '.') | (customer['C_COMMENT'] == 'h') | (customer['C_CUSTKEY'] == 77)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'C_ADDRESS', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] >= 11)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NAME', 'N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] != 3471) | (partsupp['P_COMMENT'] != 'ly ') | (partsupp['P_COMMENT'] == 'q') | (partsupp['PS_SUPPKEY'] > 7509) & (partsupp['AVAILQTY'] == 1748)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] < 7809.743675304971) & (supplier['S_ADDRESS'].str.startswith('u')) & (supplier['S_SUPPKEY'] != 53) & (supplier['S_NAME'].str.startswith('S'))][['S_PHONE', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_NATIONKEY', 'S_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] > 1) & (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] == 1)][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

lineitem[(lineitem['LINENUMBER'] < 3) | (lineitem['LINENUMBER'] != 6) | (lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['L_COMMENT'] != 'k')][['SHIPDATE', 'L_COMMENT', 'COMMITDATE', 'EXTENDEDPRICE', 'RECEIPTDATE', 'LINENUMBER', 'TAX', 'L_ORDERKEY', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders.merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_NATIONKEY'] != 21) | (nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] != 'n')].merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] != 'u')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['QUANTITY'] >= 47) & (lineitem['DISCOUNT'] > 0.04644839055165734) | (lineitem['LINENUMBER'] <= 6) | (lineitem['L_COMMENT'] == 'h') & (lineitem['DISCOUNT'] == 0.030099695416664185)][['L_SUPPKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'k') | (partsupp['PS_PARTKEY'] != 4)][['PS_SUPPKEY', 'P_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] != 178)][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] != 15) | (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] != 'E')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'DELIVER IN PERSON', 'NONE'])) & (lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['DISCOUNT'] >= 0.08397328886104896) | (lineitem['L_PARTKEY'] >= 8513) | (lineitem['SHIPDATE'] >= '1998-10-30') | (lineitem['LINENUMBER'] == 3) | (lineitem['L_SUPPKEY'] == 4318)].merge(orders[(orders['TOTALPRICE'] != 144956.23568418037) | (orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['O_COMMENT'] == 'e') | (orders['O_COMMENT'].str.startswith('a')) | (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERDATE'] != '1998-07-21') | (orders['O_COMMENT'] == 'j') & (orders['O_CUSTKEY'] <= 12929)].merge(customer[(customer['C_COMMENT'].str.startswith('t')) | (customer['C_NAME'].str.startswith('C')) | (customer['MKTSEGMENT'] == 'FURNITURE') | (customer['C_ADDRESS'] != 'X') & (customer['C_CUSTKEY'] > 38) & (customer['C_COMMENT'] == 'w')][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['ORDERPRIORITY'] != '3-MEDIUM')][['O_ORDERKEY', 'ORDERPRIORITY', 'O_CUSTKEY', 'CLERK', 'TOTALPRICE', 'O_COMMENT']].merge(customer[(customer['C_NAME'] != 'C') | (customer['C_CUSTKEY'] >= 64) & (customer['C_NATIONKEY'] == 22) | (customer['C_CUSTKEY'] == 42)][['C_CUSTKEY', 'C_PHONE', 'C_NAME', 'C_NATIONKEY', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] == 1) | (nation['N_COMMENT'] == 'u')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.0004089488995452584) & (lineitem['SHIPMODE'] == 'TRUCK') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['EXTENDEDPRICE'] != 20568.903839457354) | (lineitem['TAX'] > 0.03161930801059445)][['SHIPDATE', 'L_ORDERKEY', 'RETURNFLAG', 'SHIPINSTRUCT']].merge(orders[(orders['TOTALPRICE'] > 29861.427171919488) | (orders['SHIPPRIORITY'] != 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] == '1992-01-13') & (orders['TOTALPRICE'] >= 192226.7376054639) & (orders['ORDERSTATUS'] == 'O') | (orders['O_CUSTKEY'] <= 25327)].merge(customer[(customer['C_ADDRESS'] != 'v') & (customer['C_NAME'].str.startswith('C')) & (customer['C_COMMENT'].str.startswith('h')) & (customer['C_ACCTBAL'] == 5721.909829125202) & (customer['C_ADDRESS'] == 'b') & (customer['C_ADDRESS'] == 'O') | (customer['C_NATIONKEY'] < 21)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 4) & (lineitem['DISCOUNT'] == 0.057109777516158415) & (lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['RETURNFLAG'] != 'A') | (lineitem['L_SUPPKEY'] > 7929)][['DISCOUNT', 'LINESTATUS', 'COMMITDATE', 'SHIPINSTRUCT', 'L_PARTKEY', 'TAX', 'QUANTITY']].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_COMMENT'] != 'r') | (supplier['S_ACCTBAL'] != 3089.575839990869) & (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '2')][['S_SUPPKEY', 'S_COMMENT', 'S_ACCTBAL', 'S_NAME', 'S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'i')][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['QUANTITY'] < 46) | (lineitem['LINENUMBER'] != 6) | (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['QUANTITY'] == 23) | (lineitem['EXTENDEDPRICE'] < 9623.735365821825) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['SHIPDATE'] <= '1992-04-27')][['TAX', 'RECEIPTDATE', 'LINESTATUS', 'L_SUPPKEY', 'LINENUMBER', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 30) | (partsupp['AVAILQTY'] != 5441) | (partsupp['PS_SUPPKEY'] <= 4760)].merge(supplier[(supplier['S_NATIONKEY'] <= 18) | (supplier['S_ADDRESS'] == 'J')].merge(nation[(nation['N_NAME'] == 'E')].merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] > 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == 'N')][['DISCOUNT', 'COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'LINENUMBER']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_SUPPKEY'] <= 27) & (supplier['S_NATIONKEY'] == 10) | (supplier['S_NATIONKEY'] >= 5) & (supplier['S_COMMENT'] != 'h') | (supplier['S_COMMENT'] == 'q')].merge(nation.merge(region[(region['R_REGIONKEY'] == 0) | (region['R_REGIONKEY'] >= 0) | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] >= '1998-10-30') & (lineitem['TAX'] > 0.014437185066349736) & (lineitem['LINENUMBER'] < 2) & (lineitem['L_ORDERKEY'] > 142) & (lineitem['DISCOUNT'] != 0.02538607610384354) & (lineitem['TAX'] > 0.07240823648562308) & (lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'DELIVER IN PERSON', 'COLLECT COD']))].merge(orders[(orders['ORDERPRIORITY'] == '2-HIGH') & (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERDATE'] != '1992-01-13') | (orders['ORDERSTATUS'] != 'P') & (orders['SHIPPRIORITY'] >= 0) | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] != 277) & (orders['SHIPPRIORITY'] == 0)][['SHIPPRIORITY', 'O_COMMENT', 'O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'CLERK']].merge(customer.merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_NATIONKEY'] != 20)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('AME')) | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] <= 0.028934163467940328) & (lineitem['QUANTITY'] != 20) | (lineitem['LINESTATUS'] != 'F') & (lineitem['SHIPMODE'].isin(['REG AIR', 'FOB'])) | (lineitem['LINESTATUS'] != 'O') & (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['L_COMMENT'] == 'j') | (lineitem['EXTENDEDPRICE'] != 35586.74110642232)].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= 1639.7396275175308) & (supplier['S_ACCTBAL'] > 6764.804477333619) & (supplier['S_ACCTBAL'] < 8140.6462594379345) & (supplier['S_ACCTBAL'] < 1196.8592174431444) & (supplier['S_PHONE'] == '2') & (supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_SUPPKEY'] != 21)][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] == 'i') & (nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] < 18)].merge(region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('g')) & (region['R_NAME'] != 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'L_ORDERKEY', 'QUANTITY']].merge(orders[['O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_CUSTKEY'] > 10) & (customer['C_NATIONKEY'] != 3) & (customer['C_CUSTKEY'] >= 65) & (customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'AUTOMOBILE'])) & (customer['C_ACCTBAL'] != 3161.287288345683) | (customer['C_COMMENT'].str.startswith('u')) | (customer['C_COMMENT'] == 'd')][['C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NATIONKEY'] > 5)][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY', 'R_NAME']).agg('count')

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['SUPPLYCOST'] > 652.3753001404014) | (partsupp['PS_PARTKEY'] > 9)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_ACCTBAL'] <= 3595.5570021179456) | (supplier['S_NAME'] != 'S') & (supplier['S_NAME'] != 'S') & (supplier['S_NAME'].str.startswith('S')) & (supplier['S_ACCTBAL'] == 1545.0040876566961) | (supplier['S_NATIONKEY'] > 19) | (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_ADDRESS', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'R') | (nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('K')) & (nation['N_NAME'] != 'J')].merge(region[(region['R_NAME'] == 'M') | (region['R_NAME'] == 'E') & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY']).agg('count')

lineitem[(lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['SHIPDATE'] == '1998-10-30') & (lineitem['SHIPINSTRUCT'] != 'COLLECT COD') | (lineitem['SHIPMODE'] != 'TRUCK') & (lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_SUPPKEY'] == 2124) | (lineitem['SHIPMODE'] == 'REG AIR')].merge(partsupp[(partsupp['AVAILQTY'] == 3071) | (partsupp['PS_SUPPKEY'] >= 4904) | (partsupp['PS_PARTKEY'] == 10) & (partsupp['PS_PARTKEY'] <= 9) & (partsupp['SUPPLYCOST'] >= 724.0879152839236)][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 't') & (supplier['S_NATIONKEY'] != 20) & (supplier['S_NATIONKEY'] <= 6) | (supplier['S_SUPPKEY'] != 33)].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['DISCOUNT'] > 0.0456409890967627) & (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['SHIPMODE'] == 'REG AIR') | (lineitem['L_ORDERKEY'] >= 85) & (lineitem['TAX'] < 0.01716673075142481) & (lineitem['DISCOUNT'] < 0.03190953661412967) | (lineitem['COMMITDATE'] == '1992-05-15')][['L_PARTKEY', 'RETURNFLAG', 'EXTENDEDPRICE', 'QUANTITY', 'LINENUMBER', 'L_COMMENT', 'TAX', 'SHIPMODE', 'SHIPDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] > 30)].merge(supplier[(supplier['S_ACCTBAL'] >= 9628.702624484506) | (supplier['S_ACCTBAL'] > 8979.996715269437) & (supplier['S_NATIONKEY'] == 17) & (supplier['S_ACCTBAL'] <= 6630.100629206442) | (supplier['S_PHONE'] != '17-') | (supplier['S_PHONE'] != '2')].merge(nation[(nation['N_NATIONKEY'] == 2) & (nation['N_NAME'] != 'S') | (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 0)].merge(region[(region['R_NAME'] != 'A') | (region['R_COMMENT'] == 'g') | (region['R_REGIONKEY'] == 3)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] >= 1) & (lineitem['RETURNFLAG'] != 'A') & (lineitem['DISCOUNT'] < 0.05170392302818171) & (lineitem['SHIPMODE'] != 'RAIL') & (lineitem['L_ORDERKEY'] != 27) & (lineitem['L_ORDERKEY'] <= 138) & (lineitem['DISCOUNT'] <= 0.03280958011412154) | (lineitem['L_PARTKEY'] != 12761)][['SHIPDATE', 'RETURNFLAG', 'L_ORDERKEY', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'LINENUMBER']].merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'].str.startswith('6')) & (customer['C_CUSTKEY'] > 97) | (customer['C_CUSTKEY'] <= 19) & (customer['C_ACCTBAL'] >= 7043.955276488505) & (customer['C_COMMENT'].str.startswith('p')) & (customer['C_NATIONKEY'] != 5) | (customer['C_NATIONKEY'] == 9)].merge(nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_REGIONKEY'] >= 3) & (nation['N_COMMENT'].str.startswith('c'))].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['LINESTATUS'] == 'F') | (lineitem['LINENUMBER'] < 5) | (lineitem['L_SUPPKEY'] == 2298) | (lineitem['TAX'] == 0.07188940266498312) & (lineitem['L_ORDERKEY'] > 173) & (lineitem['L_ORDERKEY'] < 163)][['COMMITDATE', 'EXTENDEDPRICE', 'L_ORDERKEY', 'TAX', 'L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE']].merge(orders[(orders['O_ORDERKEY'] <= 433) | (orders['O_CUSTKEY'] != 68361) | (orders['CLERK'] == 'C')].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_PHONE', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_ORDERKEY'] != 126) & (lineitem['L_ORDERKEY'] > 153) & (lineitem['DISCOUNT'] > 0.018811913776154543) & (lineitem['LINENUMBER'] >= 2) & (lineitem['L_PARTKEY'] < 39263) & (lineitem['COMMITDATE'] == '1998-10-16') & (lineitem['DISCOUNT'] >= 0.04076356696817832) & (lineitem['L_PARTKEY'] != 123325) & (lineitem['QUANTITY'] != 1) | (lineitem['L_COMMENT'].str.startswith('l'))].merge(partsupp[(partsupp['P_COMMENT'] != 'q') | (partsupp['PS_PARTKEY'] < 44)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') & (supplier['S_NATIONKEY'] == 4) | (supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_PHONE'] != '26-')][['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME', 'S_COMMENT', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == 'n')].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RECEIPTDATE'] > '1998-11-06') | (lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['LINESTATUS'] == 'F') & (lineitem['L_ORDERKEY'] == 115) & (lineitem['RETURNFLAG'] != 'R') & (lineitem['DISCOUNT'] >= 0.03155082538771011)][['SHIPDATE', 'DISCOUNT', 'COMMITDATE', 'L_COMMENT', 'RECEIPTDATE', 'LINESTATUS', 'L_SUPPKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'QUANTITY']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] != 'x') | (part['RETAILPRICE'] <= 1022.5775755055673)][['BRAND', 'MFGR', 'PT_COMMENT', 'SIZE', 'CONTAINER', 'P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['MFGR', 'CONTAINER', 'BRAND', 'P_PARTKEY', 'PT_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] != 'N') & (lineitem['QUANTITY'] != 45) & (lineitem['L_ORDERKEY'] > 76) & (lineitem['QUANTITY'] <= 26) & (lineitem['LINESTATUS'] != 'O') | (lineitem['SHIPINSTRUCT'] != 'DELIVER IN PERSON')][['EXTENDEDPRICE', 'L_PARTKEY', 'RETURNFLAG', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 5109) | (partsupp['P_COMMENT'].str.startswith('bli')) & (partsupp['PS_PARTKEY'] > 8) | (partsupp['P_COMMENT'].str.startswith('ly ')) & (partsupp['P_COMMENT'] != ',')][['PS_PARTKEY', 'AVAILQTY']].merge(part[(part['BRAND'] != 'Brand#41') & (part['P_NAME'] != 'i') | (part['CONTAINER'].str.startswith('WRAP')) & (part['PT_COMMENT'] == 'r') | (part['SIZE'] != 5)][['P_PARTKEY', 'TYPE', 'BRAND', 'CONTAINER', 'P_NAME', 'SIZE', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPDATE'] > '1998-10-30') & (lineitem['LINESTATUS'] == 'F') | (lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['RECEIPTDATE'] < '1998-11-06') & (lineitem['QUANTITY'] >= 17) | (lineitem['LINESTATUS'].isin(['F', 'O'])) & (lineitem['L_SUPPKEY'] > 9968) & (lineitem['SHIPMODE'] != 'REG AIR')][['L_ORDERKEY', 'SHIPINSTRUCT']].merge(orders[(orders['SHIPPRIORITY'] >= 0) | (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['O_COMMENT'].str.startswith('g')) | (orders['ORDERDATE'] <= '1992-01-13') | (orders['ORDERDATE'] < '1998-07-21') | (orders['ORDERPRIORITY'] != '1-URGENT') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '1-URGENT']))].merge(customer[(customer['C_PHONE'] != '22-')][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation.merge(region[(region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['L_SUPPKEY'] >= 5405) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_SUPPKEY'] > 275) & (lineitem['RECEIPTDATE'] > '1992-05-02') & (lineitem['EXTENDEDPRICE'] >= 45892.049302504005) | (lineitem['TAX'] <= 0.036781021960558095) | (lineitem['QUANTITY'] == 26)][['COMMITDATE', 'TAX', 'SHIPINSTRUCT', 'LINENUMBER', 'L_SUPPKEY', 'L_ORDERKEY', 'RETURNFLAG', 'LINESTATUS']].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW'])) | (orders['O_COMMENT'].str.startswith('g')) & (orders['O_CUSTKEY'] == 124332) & (orders['TOTALPRICE'] <= 352296.9382895722) | (orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0)].merge(customer.merge(nation[(nation['N_NAME'].str.startswith('E')) | (nation['N_COMMENT'] != 'c')].merge(region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'SHIPMODE', 'SHIPDATE', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(orders[['O_COMMENT', 'ORDERDATE', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['MKTSEGMENT'] != 'FURNITURE') | (customer['C_CUSTKEY'] <= 11) & (customer['C_PHONE'].str.startswith('25-')) | (customer['C_ACCTBAL'] <= 1244.9391788626435) | (customer['C_PHONE'] != '3')].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['CLERK'] != 'C') & (orders['O_CUSTKEY'] != 91382) | (orders['TOTALPRICE'] < 27273.09577236965) & (orders['O_COMMENT'].str.startswith('s')) & (orders['ORDERDATE'] <= '1992-01-13') & (orders['O_CUSTKEY'] == 79901) | (orders['SHIPPRIORITY'] == 0)][['O_CUSTKEY', 'ORDERPRIORITY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERDATE']].merge(customer[(customer['C_NATIONKEY'] > 11) | (customer['C_ACCTBAL'] == 2906.932992381913) & (customer['C_COMMENT'].str.startswith('r')) & (customer['C_COMMENT'] == 't') | (customer['C_COMMENT'] == 'u') & (customer['C_ACCTBAL'] != 1096.950371775737) & (customer['C_NAME'].str.startswith('C')) | (customer['C_NAME'] == 'C')][['C_ADDRESS', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_NAME', 'C_CUSTKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 1) & (lineitem['SHIPDATE'] != '1998-10-30') & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['SHIPMODE'].isin(['REG AIR'])) & (lineitem['SHIPMODE'].isin(['TRUCK', 'MAIL', 'REG AIR'])) | (lineitem['QUANTITY'] != 4) & (lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['DISCOUNT'] < 0.0035209654548943314)][['DISCOUNT', 'SHIPMODE', 'LINENUMBER', 'L_SUPPKEY', 'RETURNFLAG', 'RECEIPTDATE', 'EXTENDEDPRICE', 'SHIPDATE', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3562)].merge(supplier.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['L_ORDERKEY'] >= 148) | (lineitem['SHIPINSTRUCT'] == 'TAKE BACK RETURN') | (lineitem['L_ORDERKEY'] == 85) & (lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON'])) | (lineitem['L_PARTKEY'] >= 102611) | (lineitem['L_COMMENT'] != 'j') | (lineitem['RECEIPTDATE'] == '1998-11-06')][['SHIPINSTRUCT', 'LINESTATUS', 'RECEIPTDATE', 'L_ORDERKEY']].merge(orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM', '1-URGENT', '2-HIGH'])) & (orders['O_CUSTKEY'] <= 46793) & (orders['ORDERSTATUS'].isin(['P'])) & (orders['SHIPPRIORITY'] <= 0) | (orders['ORDERSTATUS'] != 'O')][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'TOTALPRICE', 'O_ORDERKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] == 1) & (nation['N_NATIONKEY'] == 7)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['L_ORDERKEY'] != 155) & (lineitem['EXTENDEDPRICE'] > 18695.5123409128) | (lineitem['LINENUMBER'] == 1) & (lineitem['RETURNFLAG'] == 'R') & (lineitem['RECEIPTDATE'] == '1998-11-06') | (lineitem['RETURNFLAG'] == 'N') & (lineitem['TAX'] > 0.028765357398446368) & (lineitem['LINENUMBER'] > 3) & (lineitem['RETURNFLAG'].isin(['N', 'A']))][['L_PARTKEY', 'COMMITDATE', 'LINENUMBER', 'LINESTATUS', 'L_COMMENT', 'L_SUPPKEY', 'SHIPDATE', 'QUANTITY']].merge(partsupp[(partsupp['SUPPLYCOST'] < 36.8663829463074) | (partsupp['PS_SUPPKEY'] >= 6023) & (partsupp['SUPPLYCOST'] > 73.80941629104677) & (partsupp['PS_PARTKEY'] == 31) & (partsupp['SUPPLYCOST'] != 38.815894263167046)].merge(supplier[(supplier['S_NATIONKEY'] != 14)].merge(nation[(nation['N_NAME'] != 'G') & (nation['N_NATIONKEY'] == 17) & (nation['N_NATIONKEY'] == 13) & (nation['N_NATIONKEY'] <= 15)][['N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['TAX'] >= 0.02791967134946126) & (lineitem['L_COMMENT'].str.startswith('y')) | (lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['EXTENDEDPRICE'] >= 30762.36956111549) & (lineitem['SHIPDATE'] > '1992-04-27') & (lineitem['RETURNFLAG'] != 'N') | (lineitem['QUANTITY'] >= 10)].merge(orders[(orders['CLERK'] != 'C') & (orders['SHIPPRIORITY'] < 0) | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERDATE'] != '1992-01-13') | (orders['O_CUSTKEY'] > 82180)][['CLERK', 'ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[['C_CUSTKEY', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'u') & (nation['N_COMMENT'] != 'c') | (nation['N_REGIONKEY'] <= 0) | (nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['TAX'] >= 0.049770492256266084) | (lineitem['L_SUPPKEY'] != 9971) & (lineitem['L_PARTKEY'] < 132226) | (lineitem['TAX'] != 0.05135874006889323)].merge(orders[(orders['O_ORDERKEY'] >= 108) | (orders['TOTALPRICE'] > 110925.36802994167) & (orders['ORDERSTATUS'] == 'O') & (orders['TOTALPRICE'] <= 274387.11160915234)][['CLERK', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_NATIONKEY'] <= 15) | (customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE', 'FURNITURE']))][['C_PHONE', 'C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_NATIONKEY', 'C_NAME', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['ORDERSTATUS'].isin(['F', 'P'])) | (orders['TOTALPRICE'] >= 235774.28612781822) & (orders['CLERK'].str.startswith('C')) | (orders['O_CUSTKEY'] != 139379) & (orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERPRIORITY'] != '3-MEDIUM') | (orders['ORDERPRIORITY'] == '3-MEDIUM') & (orders['ORDERSTATUS'] == 'F')][['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_ACCTBAL'] == 9207.452598352276) & (customer['C_ADDRESS'].str.startswith('9')) & (customer['C_NATIONKEY'] <= 9) & (customer['C_NATIONKEY'] > 17) | (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'HOUSEHOLD'])) & (customer['C_NATIONKEY'] == 8) | (customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] <= 2520.5524440238487)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1) & (region['R_COMMENT'] != 'h') & (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['LINENUMBER'] <= 5) & (lineitem['LINENUMBER'] <= 1) & (lineitem['L_PARTKEY'] == 9528) | (lineitem['L_SUPPKEY'] >= 6390) | (lineitem['COMMITDATE'] != '1998-10-16') | (lineitem['L_ORDERKEY'] > 167)][['COMMITDATE', 'DISCOUNT', 'SHIPMODE', 'LINENUMBER', 'LINESTATUS', 'TAX', 'RETURNFLAG', 'L_ORDERKEY', 'SHIPDATE', 'SHIPINSTRUCT']].merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERSTATUS'].isin(['O', 'F'])) & (orders['O_ORDERKEY'] > 70) | (orders['O_CUSTKEY'] != 55115)][['ORDERPRIORITY', 'ORDERDATE', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS', 'O_CUSTKEY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_SUPPKEY'] <= 9671)][['DISCOUNT', 'TAX', 'L_SUPPKEY', 'L_COMMENT', 'L_PARTKEY', 'LINENUMBER', 'EXTENDEDPRICE', 'SHIPMODE', 'LINESTATUS']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] != 'x') & (supplier['S_NATIONKEY'] >= 2) | (supplier['S_ADDRESS'] == 'I') & (supplier['S_NAME'] != 'S') & (supplier['S_ACCTBAL'] <= 3860.686329366391) | (supplier['S_ADDRESS'] == 'a')][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_COMMENT'] == ' ') | (nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] != 0) & (nation['N_NATIONKEY'] == 0)][['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['N_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02') | (lineitem['L_ORDERKEY'] >= 60)].merge(orders[['ORDERPRIORITY', 'ORDERDATE', 'O_CUSTKEY', 'O_ORDERKEY', 'ORDERSTATUS', 'SHIPPRIORITY', 'CLERK', 'O_COMMENT', 'TOTALPRICE']].merge(customer[(customer['C_ACCTBAL'] <= 6965.923655236863) | (customer['C_CUSTKEY'] == 62) | (customer['C_CUSTKEY'] <= 1) | (customer['C_CUSTKEY'] < 22)][['C_ACCTBAL', 'C_PHONE', 'C_COMMENT', 'MKTSEGMENT', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] > 1)].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

lineitem[['EXTENDEDPRICE', 'QUANTITY', 'SHIPINSTRUCT', 'L_ORDERKEY', 'RECEIPTDATE']].merge(orders[(orders['ORDERSTATUS'].isin(['P', 'O'])) | (orders['O_ORDERKEY'] <= 342) | (orders['O_ORDERKEY'] > 308) | (orders['CLERK'].str.startswith('C')) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM'])) & (orders['O_COMMENT'].str.startswith('b')) | (orders['O_CUSTKEY'] < 42355) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '2-HIGH', '3-MEDIUM'])) & (orders['ORDERDATE'] >= '1998-07-21')][['O_COMMENT', 'O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'MACHINERY', 'FURNITURE', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_NATIONKEY'] != 9) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_PHONE'].str.startswith('18-'))][['C_ACCTBAL', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['C_NAME', 'C_ADDRESS', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] != 392.16508796518747) | (partsupp['AVAILQTY'] >= 3096) & (partsupp['SUPPLYCOST'] < 774.4598257367336) & (partsupp['P_COMMENT'] == 'g') | (partsupp['SUPPLYCOST'] > 849.6408434205379)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ADDRESS'] == 'd') | (supplier['S_PHONE'].str.startswith('28-')) & (supplier['S_ADDRESS'] == 'd') & (supplier['S_NATIONKEY'] >= 14) | (supplier['S_NAME'] == 'S') | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 2936.3095391349443)][['S_COMMENT', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'] != 'v') | (nation['N_COMMENT'] != 'v')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'ASI')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('min', numeric_only=True)

lineitem[['L_PARTKEY', 'RETURNFLAG', 'COMMITDATE', 'SHIPDATE', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'RECEIPTDATE']].merge(orders[['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] != 6) | (customer['C_CUSTKEY'] < 2) & (customer['C_NATIONKEY'] < 3) | (customer['C_ADDRESS'].str.startswith('r'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'E') | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != 'P') | (orders['TOTALPRICE'] <= 299802.1547280695) | (orders['TOTALPRICE'] > 350612.67559160467) & (orders['SHIPPRIORITY'] > 0) & (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1998-07-21') | (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT']))][['ORDERPRIORITY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE', 'O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'O_COMMENT', 'CLERK']].merge(customer[(customer['C_PHONE'] == '22-') & (customer['C_NATIONKEY'] > 18)][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_NATIONKEY'] > 5) | (nation['N_COMMENT'] == 's') & (nation['N_NAME'] == 'P')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] >= 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['RECEIPTDATE'] == '1992-05-02') | (lineitem['RETURNFLAG'] == 'R') | (lineitem['LINESTATUS'] == 'F') | (lineitem['L_PARTKEY'] >= 41783) | (lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['DISCOUNT'] > 0.02389477554258569) & (lineitem['L_PARTKEY'] != 115744) & (lineitem['EXTENDEDPRICE'] >= 79749.48747800592)][['L_COMMENT', 'TAX', 'RETURNFLAG', 'L_ORDERKEY']].merge(orders[(orders['ORDERSTATUS'] != 'P') | (orders['O_COMMENT'] != 'x') | (orders['CLERK'] == 'C') & (orders['TOTALPRICE'] <= 327202.7452219508)][['O_ORDERKEY', 'ORDERPRIORITY', 'CLERK', 'O_CUSTKEY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'ORDERDATE']].merge(customer[['C_CUSTKEY', 'C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[['N_COMMENT', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] > '1992-05-15') | (lineitem['RETURNFLAG'].isin(['R'])) & (lineitem['RETURNFLAG'] == 'R') | (lineitem['SHIPMODE'].isin(['RAIL', 'AIR', 'FOB', 'SHIP', 'MAIL', 'TRUCK', 'REG AIR'])) | (lineitem['L_PARTKEY'] >= 97498) | (lineitem['L_ORDERKEY'] > 160) | (lineitem['COMMITDATE'] >= '1992-05-15')][['L_PARTKEY', 'TAX', 'L_ORDERKEY', 'RETURNFLAG', 'DISCOUNT', 'SHIPMODE', 'LINESTATUS']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERSTATUS'] == 'F') | (orders['ORDERDATE'] <= '1998-07-21') & (orders['ORDERDATE'] == '1998-07-21') & (orders['O_COMMENT'] != 'egu') & (orders['ORDERDATE'] > '1998-07-21')][['ORDERPRIORITY', 'O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY']].merge(customer.merge(nation[(nation['N_COMMENT'].str.startswith('e')) | (nation['N_COMMENT'].str.startswith('y')) | (nation['N_COMMENT'] == 'e') | (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'L_PARTKEY', 'DISCOUNT', 'L_SUPPKEY', 'L_ORDERKEY']].merge(orders[(orders['O_ORDERKEY'] < 153) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH'])) | (orders['O_ORDERKEY'] > 162) | (orders['O_COMMENT'] == 'l') & (orders['TOTALPRICE'] != 265790.9723582991) & (orders['O_ORDERKEY'] <= 207)][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_ACCTBAL'] != 7809.714689943947) | (customer['C_COMMENT'] != 'f') & (customer['C_CUSTKEY'] <= 78) | (customer['C_NAME'].str.startswith('C')) | (customer['C_ACCTBAL'] < 1834.9792210036949) | (customer['C_NATIONKEY'] >= 8) | (customer['C_CUSTKEY'] <= 68)].merge(nation[(nation['N_REGIONKEY'] > 3) | (nation['N_NATIONKEY'] > 12)].merge(region[(region['R_COMMENT'] == 'u')][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

lineitem[['SHIPDATE', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY', 'L_PARTKEY', 'SHIPINSTRUCT', 'SHIPMODE', 'LINENUMBER']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 6794) & (partsupp['AVAILQTY'] == 3131) & (partsupp['PS_SUPPKEY'] <= 1242) | (partsupp['P_COMMENT'].str.startswith('f')) & (partsupp['AVAILQTY'] != 7371)].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(nation[(nation['N_REGIONKEY'] == 1) | (nation['N_REGIONKEY'] < 1) | (nation['N_NAME'] != 'S') & (nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_REGIONKEY'] > 0) | (region['R_REGIONKEY'] < 3) & (region['R_REGIONKEY'] <= 1)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.010231807676967597) & (lineitem['L_SUPPKEY'] == 2195) & (lineitem['LINESTATUS'] == 'O') & (lineitem['EXTENDEDPRICE'] == 77476.58062050655) | (lineitem['RETURNFLAG'].isin(['A', 'R'])) | (lineitem['RETURNFLAG'] != 'A') | (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['SHIPINSTRUCT'] != 'TAKE BACK RETURN') | (lineitem['EXTENDEDPRICE'] <= 41121.400704462925) & (lineitem['SHIPDATE'] <= '1998-10-30')][['EXTENDEDPRICE', 'LINESTATUS', 'L_ORDERKEY', 'SHIPMODE']].merge(orders[(orders['CLERK'] == 'C') & (orders['ORDERPRIORITY'] == '5-LOW') & (orders['O_ORDERKEY'] < 348) & (orders['CLERK'].str.startswith('C')) | (orders['CLERK'] == 'C') | (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '1-URGENT'])) | (orders['O_CUSTKEY'] > 124075) & (orders['O_CUSTKEY'] == 85769) | (orders['ORDERDATE'] != '1992-01-13')][['O_CUSTKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] > 6) & (customer['C_CUSTKEY'] >= 19) | (customer['C_NAME'].str.startswith('C'))].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] != 11666.136135860861) | (lineitem['L_COMMENT'].str.startswith('.')) & (lineitem['LINENUMBER'] > 2) | (lineitem['DISCOUNT'] == 0.09691529904960475) | (lineitem['SHIPDATE'] > '1998-10-30') | (lineitem['DISCOUNT'] >= 0.09309693925799624)][['L_ORDERKEY', 'SHIPDATE', 'LINESTATUS', 'RECEIPTDATE', 'TAX', 'SHIPINSTRUCT', 'RETURNFLAG']].merge(orders.merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_PHONE'] != '18-') | (customer['C_CUSTKEY'] != 61) & (customer['C_ACCTBAL'] != 379.9020522953829) | (customer['C_NATIONKEY'] > 13) | (customer['C_ADDRESS'] == 'n') & (customer['C_ADDRESS'].str.startswith('L'))][['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] != 'h') | (region['R_NAME'] == 'A')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['L_COMMENT'] == 's. ') | (lineitem['L_COMMENT'] == 'h') & (lineitem['RECEIPTDATE'] <= '1992-05-02')][['COMMITDATE', 'RETURNFLAG', 'L_ORDERKEY', 'TAX', 'RECEIPTDATE', 'LINESTATUS', 'SHIPINSTRUCT', 'SHIPMODE']].merge(orders[['ORDERDATE', 'O_COMMENT', 'SHIPPRIORITY', 'O_ORDERKEY', 'CLERK', 'O_CUSTKEY']].merge(customer[['C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_NATIONKEY'] >= 4) & (nation['N_REGIONKEY'] >= 1) | (nation['N_NAME'] == 'C') & (nation['N_NAME'].str.startswith('B'))].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'y') & (lineitem['DISCOUNT'] < 0.015182682701135243) | (lineitem['DISCOUNT'] == 0.009487515510209533) & (lineitem['LINENUMBER'] > 5) | (lineitem['SHIPMODE'] == 'FOB') | (lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['L_COMMENT'] != 'lit') & (lineitem['L_ORDERKEY'] >= 174)][['L_SUPPKEY', 'RETURNFLAG', 'TAX', 'COMMITDATE', 'LINENUMBER', 'EXTENDEDPRICE', 'QUANTITY', 'DISCOUNT', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 3965) | (partsupp['P_COMMENT'].str.startswith('f')) | (partsupp['PS_SUPPKEY'] > 6944) & (partsupp['AVAILQTY'] > 2406) | (partsupp['PS_PARTKEY'] != 15)][['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['R_NAME', 'R_REGIONKEY', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] >= 153840) & (lineitem['L_SUPPKEY'] == 4948) & (lineitem['L_COMMENT'].str.startswith(',')) & (lineitem['L_SUPPKEY'] >= 8634) | (lineitem['LINENUMBER'] >= 6) | (lineitem['L_SUPPKEY'] != 6661) & (lineitem['L_SUPPKEY'] == 1657) | (lineitem['L_PARTKEY'] <= 89923) | (lineitem['L_SUPPKEY'] >= 2425)][['L_PARTKEY', 'L_ORDERKEY', 'SHIPMODE', 'QUANTITY', 'L_COMMENT', 'SHIPDATE', 'L_SUPPKEY', 'LINENUMBER', 'RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] > 33) | (partsupp['P_COMMENT'] != 'the') | (partsupp['P_COMMENT'].str.startswith('t'))][['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] != '2') & (supplier['S_ACCTBAL'] >= 4715.794800820634) | (supplier['S_ACCTBAL'] != 6969.07998962333) & (supplier['S_ACCTBAL'] >= 7406.706740771012) | (supplier['S_ADDRESS'] == 'p')].merge(nation[(nation['N_COMMENT'] == ' ') & (nation['N_NATIONKEY'] > 23) | (nation['N_COMMENT'].str.startswith('p')) | (nation['N_COMMENT'] != 'i')].merge(region[(region['R_NAME'] != 'A') | (region['R_NAME'] == 'M')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] <= 0) | (orders['SHIPPRIORITY'] <= 0)][['ORDERDATE', 'O_COMMENT', 'ORDERPRIORITY', 'ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_ADDRESS'].str.startswith('L')) & (customer['C_ACCTBAL'] <= -900.0975934258028) & (customer['C_ADDRESS'] == ',') & (customer['C_NATIONKEY'] >= 1) | (customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'] != 'g') | (customer['MKTSEGMENT'] == 'BUILDING') | (customer['C_ADDRESS'] != 'h')][['C_ACCTBAL', 'C_COMMENT', 'C_CUSTKEY', 'C_NATIONKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NATIONKEY'] <= 8) & (nation['N_COMMENT'] == 'r')].merge(region[(region['R_REGIONKEY'] != 3) | (region['R_REGIONKEY'] >= 2)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['R_NAME', 'R_COMMENT', 'R_REGIONKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] >= 50170.30852290369) & (lineitem['EXTENDEDPRICE'] > 36024.53484039303) | (lineitem['L_COMMENT'] != 'i') | (lineitem['L_ORDERKEY'] < 28) | (lineitem['RECEIPTDATE'] != '1992-05-02') | (lineitem['TAX'] <= 0.0672224137185636) | (lineitem['L_ORDERKEY'] >= 35) | (lineitem['DISCOUNT'] < 0.05300362379739465) | (lineitem['TAX'] > 0.0668106300759561)][['LINESTATUS', 'RECEIPTDATE', 'L_SUPPKEY', 'COMMITDATE', 'L_ORDERKEY', 'SHIPDATE', 'RETURNFLAG', 'SHIPINSTRUCT', 'EXTENDEDPRICE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4621) & (partsupp['P_COMMENT'] == 't') | (partsupp['PS_SUPPKEY'] < 2600) & (partsupp['AVAILQTY'] <= 8772)][['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']].merge(part[(part['SIZE'] < 28) & (part['P_NAME'] != 'lem') & (part['CONTAINER'].str.startswith('SM')) | (part['SIZE'] >= 31) & (part['SIZE'] == 25) | (part['SIZE'] != 13) | (part['CONTAINER'] == 'MED') & (part['SIZE'] == 48) | (part['CONTAINER'].str.startswith('LG'))][['BRAND', 'P_PARTKEY', 'P_NAME', 'RETAILPRICE', 'SIZE', 'MFGR', 'PT_COMMENT', 'CONTAINER', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['TYPE', 'BRAND', 'P_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] >= 0.07063929635106046) | (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['DISCOUNT'] < 0.06159080869067947) | (lineitem['LINENUMBER'] <= 6) | (lineitem['TAX'] >= 0.06708049593977342) | (lineitem['QUANTITY'] != 21) & (lineitem['L_SUPPKEY'] > 4119) | (lineitem['COMMITDATE'] < '1998-10-16') | (lineitem['SHIPDATE'] > '1992-04-27')][['RETURNFLAG', 'QUANTITY', 'DISCOUNT', 'LINENUMBER', 'L_COMMENT', 'RECEIPTDATE', 'L_SUPPKEY', 'TAX', 'SHIPMODE', 'L_ORDERKEY']].merge(orders[['SHIPPRIORITY', 'CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE', 'O_COMMENT', 'ORDERDATE', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] == 3) | (customer['C_CUSTKEY'] == 50) & (customer['C_NATIONKEY'] != 11) | (customer['C_NATIONKEY'] <= 6) | (customer['C_ADDRESS'].str.startswith('h')) | (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '13-')][['C_PHONE', 'C_ACCTBAL', 'C_NAME', 'C_COMMENT', 'C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'B') | (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] >= 2) & (nation['N_REGIONKEY'] >= 3)][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['R_COMMENT', 'R_NAME', 'R_REGIONKEY']).agg('sum', numeric_only=True)