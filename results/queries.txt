region[(region['R_NAME'] == 'M')].merge(nation.merge(supplier[(supplier['S_COMMENT'] != 'o') | (supplier['S_NAME'] != 'S')][['S_SUPPKEY', 'S_COMMENT', 'S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[(orders['O_ORDERKEY'] == 522) | (orders['CLERK'] != 'C') | (orders['TOTALPRICE'] < 272514.1598338955) & (orders['SHIPPRIORITY'] > 0)]

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'ly ') | (partsupp['AVAILQTY'] >= 9926)][['P_COMMENT', 'AVAILQTY']].merge(lineitem.merge(orders[['O_COMMENT', 'ORDERSTATUS', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'] != 'C')][['C_NATIONKEY', 'MKTSEGMENT', 'C_PHONE']].merge(orders[(orders['O_CUSTKEY'] > 15218)][['O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['C_PHONE'] != '3') | (customer['C_ADDRESS'] == 'l')].merge(orders[['ORDERPRIORITY']].merge(lineitem[(lineitem['L_PARTKEY'] < 99772) & (lineitem['DISCOUNT'] < 0.04274469028767765)][['DISCOUNT', 'RETURNFLAG', 'TAX', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[['SHIPMODE', 'TAX', 'RETURNFLAG', 'SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] < 1) | (lineitem['L_COMMENT'].str.startswith('d')) | (lineitem['L_ORDERKEY'] != 139) | (lineitem['L_ORDERKEY'] <= 153)]

lineitem.merge(orders[(orders['CLERK'] == 'C')].merge(customer[(customer['C_NATIONKEY'] > 1) & (customer['C_CUSTKEY'] < 71)].merge(orders[(orders['O_CUSTKEY'] == 104587) | (orders['SHIPPRIORITY'] <= 0)][['TOTALPRICE', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_ORDERKEY']].merge(customer[(customer['C_ADDRESS'] != 'X')][['C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region

supplier[['S_COMMENT', 'S_ACCTBAL', 'S_NATIONKEY', 'S_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] < 8576) | (partsupp['AVAILQTY'] != 6454)].merge(lineitem.merge(orders[['CLERK', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 356.87637991924413)].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['DELIVER IN PERSON', 'NONE', 'COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] < '1998-11-06')].merge(partsupp[(partsupp['PS_PARTKEY'] >= 4) | (partsupp['SUPPLYCOST'] == 645.69888216907)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 9034)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'CONTAINER']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NAME'].str.startswith('G')) | (nation['N_NAME'] != 'U') | (nation['N_COMMENT'] == 'v')].merge(customer[['C_COMMENT', 'MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']].merge(orders[['O_COMMENT', 'ORDERDATE']].merge(customer[['C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

customer[(customer['C_NAME'] != 'C') | (customer['C_PHONE'] == '3') | (customer['C_NATIONKEY'] <= 1)].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NAME'].str.startswith('J'))][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] >= 6210.663813492759) & (supplier['S_ACCTBAL'] < 1905.7672346554698)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['O_COMMENT'] != '.')][['TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('count')

supplier[['S_NATIONKEY']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(region.merge(nation[(nation['N_NAME'] != 'E') & (nation['N_NATIONKEY'] == 19)].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 778.2223677171827)].merge(lineitem[['COMMITDATE', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] < 22)].merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['LINENUMBER'] >= 3)].merge(orders.merge(customer.merge(orders[['O_ORDERKEY', 'O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE']].merge(customer[(customer['C_NAME'].str.startswith('C'))].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

customer[(customer['C_ACCTBAL'] == 5623.967207096795) | (customer['C_CUSTKEY'] != 90) | (customer['C_NAME'] != 'C') & (customer['C_COMMENT'].str.startswith('w'))].merge(orders[(orders['O_CUSTKEY'] != 16290)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERDATE'] <= '1998-07-21')], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[['TYPE']]

customer[(customer['C_COMMENT'] != 'w') | (customer['C_ACCTBAL'] == 8408.477747481682) & (customer['C_NAME'].str.startswith('C'))].merge(nation[(nation['N_REGIONKEY'] >= 2)][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['ORDERPRIORITY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(part.merge(partsupp[['AVAILQTY']].merge(lineitem.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= -351.1419006028509)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 'e') | (nation['N_NATIONKEY'] >= 5) | (nation['N_COMMENT'].str.startswith('u')) & (nation['N_NATIONKEY'] > 7)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

customer[['C_PHONE', 'C_ADDRESS', 'MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']].merge(orders[['TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] == 380)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERSTATUS']].merge(customer[(customer['C_ADDRESS'] != 'L') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE']))].merge(orders[['CLERK', 'ORDERSTATUS']].merge(lineitem[['L_ORDERKEY', 'QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NATIONKEY'] > 21) & (nation['N_REGIONKEY'] == 0)].merge(customer[(customer['C_ADDRESS'] != 'd') | (customer['MKTSEGMENT'] != BUILDING)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_COMMENT']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] > 947.1094003139008) & (part['P_NAME'].str.startswith('v')) | (part['TYPE'].str.startswith('L'))].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem.merge(partsupp[['AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(partsupp.merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 883.9105468166625) | (partsupp['PS_SUPPKEY'] >= 4497)][['PS_PARTKEY']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('Y')) & (supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_PHONE']].merge(nation[(nation['N_NATIONKEY'] == 18)][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(customer[(customer['C_ADDRESS'].str.startswith('0'))][['C_PHONE']].merge(nation[(nation['N_NATIONKEY'] >= 17) | (nation['N_COMMENT'] == 'r')].merge(customer[(customer['MKTSEGMENT'] == AUTOMOBILE) | (customer['C_NATIONKEY'] < 12)].merge(orders.merge(customer[(customer['C_ADDRESS'] != 'l') & (customer['C_PHONE'] != '13-')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_SUPPKEY']].merge(nation.merge(customer[(customer['C_ACCTBAL'] != 1130.517794649485) | (customer['C_ACCTBAL'] < 3158.8129686683997)][['C_NAME', 'C_CUSTKEY', 'C_COMMENT']].merge(orders[(orders['ORDERPRIORITY'] == 3-MEDIUM)][['ORDERDATE', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('sum', numeric_only=True)

customer[(customer['C_PHONE'] != '13-') | (customer['C_NATIONKEY'] >= 16) & (customer['C_CUSTKEY'] >= 29) | (customer['C_ACCTBAL'] > 2102.8929558166924)].merge(nation[(nation['N_NATIONKEY'] >= 16)].merge(supplier[['S_ACCTBAL', 'S_NAME']].merge(nation.merge(customer[(customer['C_PHONE'] == '1')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('i'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERSTATUS'] != F)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[(orders['SHIPPRIORITY'] < 0) | (orders['TOTALPRICE'] < 211404.74005977632)][['ORDERSTATUS', 'TOTALPRICE', 'CLERK', 'SHIPPRIORITY']].merge(lineitem[(lineitem['TAX'] <= 0.05820120577950386)][['SHIPINSTRUCT', 'SHIPMODE', 'TAX', 'DISCOUNT']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_NATIONKEY'] <= 13) & (customer['C_PHONE'].str.startswith('22-'))][['C_ADDRESS', 'MKTSEGMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NAME'] == 'R') & (nation['N_COMMENT'].str.startswith('i'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'].isin(['P'])) & (orders['ORDERPRIORITY'] != 2-HIGH) & (orders['O_COMMENT'].str.startswith('o')) | (orders['TOTALPRICE'] != 225421.81104322194)].merge(customer[(customer['C_ADDRESS'] == 'q')], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_NATIONKEY'] > 1) & (supplier['S_SUPPKEY'] == 64)][['S_SUPPKEY', 'S_ADDRESS']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('17-')) | (supplier['S_PHONE'].str.startswith('17-'))].merge(nation[['N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('sum', numeric_only=True)

part.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] == '1992-05-15')][['LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE']].merge(partsupp[['SUPPLYCOST']].merge(supplier[(supplier['S_PHONE'].str.startswith('1')) | (supplier['S_NATIONKEY'] > 20)][['S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('mean', numeric_only=True)

lineitem[['L_ORDERKEY']].groupby(by=['L_ORDERKEY']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE'])) & (customer['C_ACCTBAL'] > 8881.306527319482)].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] >= 3) & (supplier['S_COMMENT'] == 'g')][['S_SUPPKEY', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['O_CUSTKEY'] < 122275) & (orders['O_ORDERKEY'] <= 391)].merge(customer[(customer['C_PHONE'].str.startswith('1'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

part[(part['BRAND'].isin(['Brand#24', 'Brand#12', 'Brand#22', 'Brand#33', 'Brand#21', 'Brand#11', 'Brand#15', 'Brand#45', 'Brand#53', 'Brand#34', 'Brand#31', 'Brand#43', 'Brand#42'])) & (part['BRAND'] == Brand#23) | (part['SIZE'] >= 4) | (part['RETAILPRICE'] < 1093.6786276145976)].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 1927)].merge(lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'COMMITDATE', 'SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_NATIONKEY'] > 18) | (customer['C_ADDRESS'].str.startswith('v')) | (customer['C_NATIONKEY'] > 12) | (customer['C_PHONE'].str.startswith('3'))].merge(nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('S'))][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] == 'l') | (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] == 48315.52387120513)].merge(orders.merge(lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02')][['SHIPINSTRUCT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 135.90285528128504) & (partsupp['AVAILQTY'] <= 9269)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 1499)][['PS_SUPPKEY']].merge(lineitem[(lineitem['DISCOUNT'] < 0.06770668366093618)][['L_COMMENT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp[['SUPPLYCOST']].merge(supplier.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NAME'] == 'F') | (nation['N_NAME'] == 'P')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['QUANTITY', 'L_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['LINESTATUS'].isin(['F'])) | (lineitem['LINENUMBER'] <= 4) & (lineitem['SHIPDATE'] >= '1992-04-27')].merge(partsupp[(partsupp['SUPPLYCOST'] >= 936.6475083822427) & (partsupp['P_COMMENT'] == 'u')].merge(lineitem[(lineitem['LINENUMBER'] >= 3)][['RETURNFLAG', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] >= 5707)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPINSTRUCT', 'EXTENDEDPRICE', 'LINENUMBER', 'SHIPDATE', 'TAX']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_REGIONKEY'] > 2) & (nation['N_NATIONKEY'] < 19)].merge(region[['R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] > 0)].merge(supplier[['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

lineitem[['SHIPDATE', 'LINESTATUS', 'L_PARTKEY', 'RETURNFLAG', 'LINENUMBER']].groupby(by=['LINESTATUS']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] == 'SM') & (part['TYPE'] != 'S')][['P_NAME', 'BRAND', 'RETAILPRICE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('k'))], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

nation.merge(supplier[(supplier['S_ADDRESS'].str.startswith('o')) & (supplier['S_NAME'] == 'S')].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 2766) & (partsupp['AVAILQTY'] != 3116)][['PS_PARTKEY', 'AVAILQTY']].merge(lineitem[(lineitem['SHIPMODE'].isin(['SHIP', 'MAIL', 'TRUCK', 'REG AIR', 'AIR'])) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['SHIPINSTRUCT', 'SHIPDATE', 'L_SUPPKEY', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 4922) | (partsupp['P_COMMENT'] == 'q')], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_NATIONKEY'] == 18)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] > 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

lineitem[(lineitem['L_PARTKEY'] >= 7812) & (lineitem['QUANTITY'] < 6) | (lineitem['SHIPDATE'] >= '1998-10-30')][['L_SUPPKEY', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1480) | (partsupp['AVAILQTY'] >= 2242)][['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem[(lineitem['QUANTITY'] <= 24) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['SHIPINSTRUCT']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_SUPPKEY', 'RECEIPTDATE']).agg('min', numeric_only=True)

part[(part['P_PARTKEY'] == 176) | (part['CONTAINER'] != 'SM')].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT']].merge(customer[['C_PHONE']].merge(orders[(orders['SHIPPRIORITY'] == 0)][['ORDERDATE']].merge(lineitem[(lineitem['SHIPMODE'] == MAIL)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']].merge(part[(part['SIZE'] >= 2)][['TYPE', 'CONTAINER', 'SIZE', 'RETAILPRICE']].merge(partsupp[(partsupp['AVAILQTY'] == 8895)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation

nation.merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 1057.5923311721263) & (customer['C_PHONE'] != '2') & (customer['C_ADDRESS'].str.startswith('n')) & (customer['C_NAME'] == 'C')].merge(orders[(orders['ORDERDATE'] >= '1992-01-13')][['ORDERDATE', 'TOTALPRICE']].merge(lineitem[(lineitem['LINENUMBER'] != 6)].merge(partsupp.merge(lineitem[(lineitem['SHIPDATE'] == '1992-04-27')][['COMMITDATE', 'L_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] >= 8719)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NAME', 'N_COMMENT']].merge(customer[(customer['MKTSEGMENT'] == AUTOMOBILE)].merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[(supplier['S_PHONE'] == '17-')][['S_COMMENT', 'S_SUPPKEY']].merge(nation[(nation['N_NATIONKEY'] < 8) & (nation['N_NAME'] == 'I')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp.merge(lineitem[['TAX', 'QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['P_NAME'].str.startswith('lem')) | (part['TYPE'] == 'STA')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('G')) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 159)][['S_ADDRESS', 'S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) | (nation['N_NATIONKEY'] >= 10)][['N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] >= 2)].merge(supplier[['S_COMMENT', 'S_NAME', 'S_NATIONKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_ADDRESS']).agg('sum', numeric_only=True)

region[(region['R_NAME'] != 'A') & (region['R_REGIONKEY'] <= 1) | (region['R_REGIONKEY'] == 3) | (region['R_COMMENT'].str.startswith('g'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 3) & (nation['N_COMMENT'] != 't')].merge(customer[(customer['C_PHONE'].str.startswith('27-')) | (customer['C_ACCTBAL'] < -172.43849300443947)][['C_ACCTBAL', 'C_CUSTKEY']].merge(nation.merge(supplier[(supplier['S_COMMENT'] != '!')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_REGIONKEY'] != 2) & (nation['N_COMMENT'] != 'h')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']]

lineitem[['RETURNFLAG', 'SHIPMODE']]

lineitem[(lineitem['L_ORDERKEY'] < 179)].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5462)].merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 2702) | (partsupp['AVAILQTY'] < 8311)][['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_NAME']].merge(partsupp[(partsupp['AVAILQTY'] <= 1081) & (partsupp['SUPPLYCOST'] > 162.73327250006963)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'FURNITURE', 'BUILDING', 'AUTOMOBILE']))], left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[['RETAILPRICE', 'CONTAINER', 'TYPE']]

part[['MFGR', 'P_PARTKEY', 'P_NAME', 'PT_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] == 272) | (partsupp['PS_PARTKEY'] <= 37)][['P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('sum', numeric_only=True)

partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['TYPE']].merge(partsupp[['SUPPLYCOST']].merge(lineitem.merge(orders[(orders['CLERK'].str.startswith('C'))][['O_ORDERKEY', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

lineitem.merge(orders.merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_NATIONKEY']].merge(orders[(orders['ORDERDATE'] != '1992-01-13') | (orders['O_COMMENT'] != 'j')].merge(lineitem[['COMMITDATE', 'TAX']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region[(region['R_REGIONKEY'] > 0) | (region['R_NAME'] != 'M') | (region['R_NAME'] == 'E') & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 3) & (nation['N_REGIONKEY'] == 1)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation.merge(region.merge(nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

nation.merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'].str.startswith('l'))].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 'u') & (nation['N_NATIONKEY'] < 0) | (nation['N_NATIONKEY'] >= 7)][['N_COMMENT', 'N_REGIONKEY']].merge(customer[(customer['C_COMMENT'] == 'c') | (customer['C_CUSTKEY'] < 90)][['C_CUSTKEY', 'MKTSEGMENT', 'C_NATIONKEY', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] == 1) | (region['R_COMMENT'].str.startswith('h'))].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(supplier.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

region[(region['R_REGIONKEY'] == 2) | (region['R_REGIONKEY'] != 1)].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 15)][['N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] < 0)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

supplier.merge(partsupp[(partsupp['AVAILQTY'] == 4997)][['SUPPLYCOST', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'S_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 100589) & (orders['O_COMMENT'] != 'f')].merge(lineitem[['L_PARTKEY', 'EXTENDEDPRICE', 'RETURNFLAG', 'L_ORDERKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('count')

partsupp[(partsupp['AVAILQTY'] >= 9865)].merge(part[['RETAILPRICE', 'TYPE', 'MFGR', 'BRAND']].merge(partsupp[['PS_PARTKEY']].merge(lineitem[(lineitem['DISCOUNT'] > 0.005660597526097034) & (lineitem['L_SUPPKEY'] != 1685)][['LINENUMBER', 'SHIPDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY']).agg('count')

lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] == 690.9820688939674) & (partsupp['P_COMMENT'] == 'n')][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem[(lineitem['RECEIPTDATE'] <= '1998-11-06') & (lineitem['SHIPDATE'] <= '1992-04-27')].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(part[['P_NAME', 'BRAND', 'PT_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] != 497.2313131097665) & (partsupp['PS_SUPPKEY'] != 4437)][['PS_SUPPKEY', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('u'))].merge(nation.merge(supplier[(supplier['S_ADDRESS'] == 'e') & (supplier['S_COMMENT'] != 'a')].merge(nation[(nation['N_REGIONKEY'] == 2) & (nation['N_NAME'].str.startswith('A'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region.merge(nation[(nation['N_REGIONKEY'] <= 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('min', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(customer[['C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_COMMENT'].str.startswith('i')) | (customer['C_PHONE'] != '27-')][['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

orders[(orders['ORDERSTATUS'] != F) & (orders['O_ORDERKEY'] <= 98) | (orders['ORDERDATE'] > '1992-01-13')][['O_CUSTKEY']].groupby(by=['O_CUSTKEY']).agg('max', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('n')) | (part['SIZE'] >= 47)].merge(partsupp[(partsupp['AVAILQTY'] < 7258)][['PS_PARTKEY']].merge(lineitem[(lineitem['L_PARTKEY'] >= 145642) | (lineitem['SHIPMODE'] == AIR)][['QUANTITY', 'RETURNFLAG', 'SHIPMODE', 'EXTENDEDPRICE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 9568) | (partsupp['SUPPLYCOST'] <= 194.2398387581851)].merge(part[(part['P_PARTKEY'] < 148) | (part['CONTAINER'].str.startswith('WRAP'))][['RETAILPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 3036)].merge(lineitem[(lineitem['LINENUMBER'] == 6) | (lineitem['LINENUMBER'] != 1)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['SHIPINSTRUCT', 'SHIPMODE', 'L_COMMENT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

lineitem[['L_COMMENT', 'TAX', 'L_ORDERKEY', 'LINESTATUS']].groupby(by=['TAX']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 1) | (region['R_NAME'].str.startswith('E'))].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

part.merge(partsupp[(partsupp['PS_SUPPKEY'] != 2995) | (partsupp['PS_SUPPKEY'] < 3489)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 1995) & (partsupp['P_COMMENT'] == 'l')].merge(lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region.merge(nation.merge(supplier[(supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_NAME', 'S_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] == 'C')][['N_NAME']].merge(supplier[(supplier['S_ADDRESS'] != 'N') | (supplier['S_NAME'] == 'S')].merge(partsupp[(partsupp['PS_SUPPKEY'] == 5707) & (partsupp['AVAILQTY'] == 2237)].merge(lineitem[(lineitem['RETURNFLAG'] == A)].merge(partsupp[(partsupp['PS_PARTKEY'] == 11) | (partsupp['PS_PARTKEY'] < 19)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[(part['CONTAINER'] != 'WRAP') & (part['TYPE'].str.startswith('SMA'))][['SIZE', 'RETAILPRICE']].merge(partsupp[(partsupp['PS_PARTKEY'] == 25)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']].merge(lineitem[['DISCOUNT', 'TAX']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_NAME'].str.startswith('F'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

orders[['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['LINESTATUS'] != O)][['RETURNFLAG', 'TAX', 'EXTENDEDPRICE']].merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] != 20823.661886895796) | (lineitem['DISCOUNT'] >= 0.08892031735950005)][['COMMITDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

lineitem[['SHIPMODE', 'L_SUPPKEY', 'QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] > 6602)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPMODE', 'QUANTITY']).agg('sum', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith(','))].merge(partsupp[(partsupp['AVAILQTY'] <= 8323) & (partsupp['PS_PARTKEY'] < 24)].merge(part[(part['P_PARTKEY'] != 23) | (part['MFGR'] != Manufacturer#1)][['BRAND', 'P_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 4128) & (partsupp['P_COMMENT'].str.startswith('b'))].merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NAME']).agg('max', numeric_only=True)

part[(part['RETAILPRICE'] < 924.7314384274584) | (part['MFGR'] == Manufacturer#1) & (part['RETAILPRICE'] < 1095.876760267638)][['CONTAINER', 'PT_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 7469)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[['LINENUMBER', 'SHIPINSTRUCT', 'LINESTATUS', 'L_SUPPKEY', 'EXTENDEDPRICE']]

customer.merge(orders[(orders['ORDERDATE'] >= '1992-01-13')][['O_ORDERKEY', 'CLERK']].merge(customer[(customer['C_NATIONKEY'] > 3)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(part[(part['P_NAME'].str.startswith('cor')) | (part['BRAND'] != Brand#31)], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('count')

partsupp[(partsupp['SUPPLYCOST'] <= 808.3173187487442) & (partsupp['PS_SUPPKEY'] == 5431) & (partsupp['P_COMMENT'] == 'k') & (partsupp['P_COMMENT'] == 'bli')].merge(lineitem[(lineitem['SHIPINSTRUCT'] == DELIVER IN PERSON) | (lineitem['DISCOUNT'] >= 0.02538127364479964)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

supplier[(supplier['S_PHONE'] == '1') | (supplier['S_ADDRESS'] != 'n') | (supplier['S_NATIONKEY'] > 11) | (supplier['S_COMMENT'] == 'r')].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 79) & (customer['C_COMMENT'].str.startswith('.'))][['C_ADDRESS', 'C_PHONE', 'C_NAME']].groupby(by=['C_ADDRESS']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] < 38)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[['PT_COMMENT', 'SIZE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['LINENUMBER'] == 4)][['L_ORDERKEY', 'COMMITDATE', 'SHIPDATE', 'TAX']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('count')

lineitem

nation.merge(region[(region['R_REGIONKEY'] != 0) & (region['R_COMMENT'] == 'g')].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_COMMENT'] != 'w') & (supplier['S_NATIONKEY'] == 14)], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

part.merge(partsupp[(partsupp['SUPPLYCOST'] >= 938.7752617905087) | (partsupp['AVAILQTY'] == 6239)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY', 'TYPE']).agg('count')

part[['BRAND', 'P_PARTKEY', 'P_NAME', 'SIZE']].merge(partsupp[(partsupp['AVAILQTY'] > 7746)].merge(supplier[['S_PHONE', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] == 7524)].merge(lineitem[['L_ORDERKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[(part['MFGR'] == Manufacturer#2) & (part['RETAILPRICE'] == 954.733913713226)][['RETAILPRICE', 'P_NAME']].merge(partsupp[(partsupp['AVAILQTY'] != 4288) & (partsupp['PS_SUPPKEY'] >= 7545)][['PS_PARTKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD) & (lineitem['EXTENDEDPRICE'] != 42670.01768917287)][['COMMITDATE']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] > 5310) | (partsupp['P_COMMENT'].str.startswith('f'))][['P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']]

lineitem.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('e'))][['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPDATE', 'QUANTITY']).agg('min', numeric_only=True)

part[(part['CONTAINER'].str.startswith('MED')) | (part['PT_COMMENT'].str.startswith('k'))][['TYPE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['SUPPLYCOST'] < 146.65400471054164)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('mean', numeric_only=True)

orders[['ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier.merge(nation[(nation['N_NATIONKEY'] != 5)][['N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('M'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(supplier[(supplier['S_COMMENT'].str.startswith('x')) | (supplier['S_ACCTBAL'] < 7580.767249134288)].merge(partsupp.merge(lineitem.merge(orders[(orders['O_CUSTKEY'] != 144581)].merge(customer[(customer['C_ACCTBAL'] != 7235.156394925074) & (customer['MKTSEGMENT'] == FURNITURE)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 't')][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 310.04049408108125)].merge(supplier.merge(nation.merge(region[['R_COMMENT']].merge(nation[(nation['N_NAME'] == 'V') | (nation['N_COMMENT'].str.startswith(' '))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

nation[(nation['N_COMMENT'] == 'u') & (nation['N_NAME'] != 'U') | (nation['N_NAME'].str.startswith('V'))].merge(customer[(customer['C_CUSTKEY'] < 3) & (customer['MKTSEGMENT'] != MACHINERY)].merge(nation[(nation['N_COMMENT'] != 'c')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(supplier.merge(nation[(nation['N_NAME'] == 'F')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('min', numeric_only=True)

part.groupby(by=['BRAND']).agg('count')

supplier

partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] <= 11)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_NAME'] != 'S') | (supplier['S_ADDRESS'] == 'd')][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

part.merge(partsupp[['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_ACCTBAL'] > 9756.252330421741)].merge(nation[['N_NAME', 'N_REGIONKEY']].merge(supplier[['S_NATIONKEY', 'S_NAME']].merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_REGIONKEY'] == 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2)].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERDATE'] > '1992-01-13')], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_CUSTKEY', 'C_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] < 140297)][['RECEIPTDATE', 'TAX', 'LINESTATUS', 'SHIPDATE', 'SHIPINSTRUCT']].groupby(by=['SHIPINSTRUCT']).agg('count')

partsupp[(partsupp['AVAILQTY'] == 6497) & (partsupp['SUPPLYCOST'] == 252.1763552408684)][['P_COMMENT', 'SUPPLYCOST']]

partsupp.merge(part[['PT_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] >= 3394) | (partsupp['PS_PARTKEY'] != 5)][['PS_SUPPKEY', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[['BRAND', 'PT_COMMENT', 'MFGR', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier.merge(nation[(nation['N_REGIONKEY'] < 3)][['N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

lineitem[(lineitem['SHIPINSTRUCT'] != NONE)].merge(orders[(orders['O_COMMENT'] != 'i')][['O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['CLERK'].str.startswith('C'))][['O_COMMENT', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT']].merge(supplier.merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

customer[(customer['C_ACCTBAL'] > 9752.413192227576) & (customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'MACHINERY', 'AUTOMOBILE'])) | (customer['C_ACCTBAL'] == 3568.851110291823)]

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_NATIONKEY'] == 1)].merge(region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem.merge(orders[['ORDERDATE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '5-LOW', '4-NOT SPECIFIED']))].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERSTATUS', 'O_CUSTKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] == N) | (lineitem['L_ORDERKEY'] >= 132)].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] < 8563) | (partsupp['AVAILQTY'] >= 9792)].merge(part[(part['BRAND'] != Brand#51)].merge(partsupp[['SUPPLYCOST']].merge(supplier[['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']].merge(partsupp[['SUPPLYCOST']].merge(supplier[['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('3'))].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem[(lineitem['L_ORDERKEY'] <= 10) & (lineitem['SHIPDATE'] == '1998-10-30') | (lineitem['LINESTATUS'].isin(['O', 'F']))].merge(orders[(orders['ORDERDATE'] == '1998-07-21')].merge(customer[(customer['C_CUSTKEY'] == 91)][['C_PHONE', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_ORDERKEY', 'LINESTATUS']).agg('count')

part.merge(partsupp[(partsupp['AVAILQTY'] < 2735)].merge(part[['MFGR', 'RETAILPRICE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier

lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['O_COMMENT'] != 'w') | (orders['ORDERSTATUS'].isin(['F', 'P']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('g'))][['AVAILQTY']].merge(part.merge(partsupp.merge(lineitem[['SHIPDATE', 'SHIPMODE', 'L_ORDERKEY']].merge(partsupp.merge(supplier[['S_COMMENT', 'S_NAME', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_NAME'] == 'AFR') & (region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('u'))].merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(supplier.merge(partsupp.merge(lineitem[['L_ORDERKEY', 'QUANTITY', 'COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('min', numeric_only=True)

part[(part['MFGR'] == Manufacturer#5) | (part['RETAILPRICE'] != 1044.6816228466225) & (part['MFGR'] != Manufacturer#5) | (part['CONTAINER'].str.startswith('SM'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_PHONE'].str.startswith('14-')) & (supplier['S_PHONE'].str.startswith('17-'))][['S_ACCTBAL']].merge(partsupp.merge(lineitem[(lineitem['LINESTATUS'] == F) & (lineitem['RETURNFLAG'] == N)].merge(partsupp.merge(lineitem.merge(partsupp.merge(part[['P_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] == 9828) & (partsupp['AVAILQTY'] != 3331)][['PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] != 7083.9627187141905)][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE']].merge(partsupp[(partsupp['PS_PARTKEY'] == 40)].merge(lineitem[(lineitem['L_PARTKEY'] < 118918) | (lineitem['TAX'] != 0.021814379040928093)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('E')) & (region['R_REGIONKEY'] > 1)][['R_REGIONKEY']].merge(nation[['N_NAME', 'N_COMMENT']].merge(region.merge(nation.merge(customer[(customer['C_COMMENT'] != 'r')].merge(orders.merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30') & (lineitem['LINESTATUS'].isin(['O', 'F']))], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part.merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']].merge(lineitem[(lineitem['QUANTITY'] != 5)].merge(orders[(orders['ORDERSTATUS'] == O)].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'SIZE']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'EXTENDEDPRICE', 'L_SUPPKEY', 'SHIPDATE', 'LINESTATUS']]

partsupp[(partsupp['AVAILQTY'] == 1345) & (partsupp['PS_SUPPKEY'] <= 1125)].merge(part[['P_NAME', 'SIZE', 'BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(part[(part['BRAND'] != Brand#13) & (part['BRAND'].isin(['Brand#43', 'Brand#11', 'Brand#41', 'Brand#23', 'Brand#53', 'Brand#42', 'Brand#12', 'Brand#21', 'Brand#54', 'Brand#14', 'Brand#45', 'Brand#22', 'Brand#34', 'Brand#55', 'Brand#31', 'Brand#44', 'Brand#52', 'Brand#13', 'Brand#25', 'Brand#24', 'Brand#35', 'Brand#32']))][['RETAILPRICE']].merge(partsupp.merge(part[(part['BRAND'].isin(['Brand#14', 'Brand#41', 'Brand#33', 'Brand#15', 'Brand#11', 'Brand#24', 'Brand#45', 'Brand#53', 'Brand#25', 'Brand#12', 'Brand#22', 'Brand#34', 'Brand#23', 'Brand#43', 'Brand#52', 'Brand#54', 'Brand#44'])) & (part['PT_COMMENT'] != 'p')], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 104.2053189680108)].merge(lineitem[['SHIPINSTRUCT']].merge(orders.merge(lineitem[['L_SUPPKEY']].merge(orders[['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT', 'ORDERPRIORITY']].merge(lineitem[(lineitem['LINENUMBER'] != 1) | (lineitem['L_COMMENT'] == ' ')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == HOUSEHOLD) & (customer['C_PHONE'].str.startswith('18-'))][['C_ACCTBAL', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT', 'C_CUSTKEY']].merge(orders.merge(customer[(customer['C_NATIONKEY'] > 5) & (customer['C_NATIONKEY'] <= 13)][['C_ADDRESS', 'C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation.merge(region[(region['R_REGIONKEY'] == 3) | (region['R_COMMENT'] == 'l')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part.merge(partsupp[['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE', 'P_PARTKEY']).agg('count')

nation.merge(customer[['C_PHONE', 'MKTSEGMENT']].merge(nation[(nation['N_NATIONKEY'] == 16)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ADDRESS'] != 'v')][['C_PHONE', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] >= 6659.307688368609)][['S_NATIONKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3514)][['AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'] != 'a') & (part['CONTAINER'] == 'SM') | (part['RETAILPRICE'] >= 948.8375595810795)]

lineitem[(lineitem['COMMITDATE'] < '1998-10-16')][['L_COMMENT', 'EXTENDEDPRICE']].merge(orders[['ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 21)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_CUSTKEY', 'TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] == 33668) | (orders['TOTALPRICE'] < 146735.5167880068)][['SHIPPRIORITY', 'TOTALPRICE']].merge(customer[(customer['C_COMMENT'] == ' ')][['C_COMMENT', 'C_ADDRESS', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 666)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPDATE']).agg('sum', numeric_only=True)

part.merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['LINENUMBER'] >= 5) | (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_SUPPKEY'] < 4837) & (lineitem['EXTENDEDPRICE'] > 8728.486396294327)].merge(partsupp[(partsupp['AVAILQTY'] <= 4626)][['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g')) | (region['R_REGIONKEY'] > 3) | (region['R_NAME'].str.startswith('M'))].merge(nation[(nation['N_NAME'] == 'E') | (nation['N_NAME'].str.startswith('A'))].merge(customer[(customer['C_CUSTKEY'] > 94)][['C_ADDRESS', 'C_PHONE', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer[(customer['C_ACCTBAL'] < 3942.641901680493)][['C_NATIONKEY', 'C_NAME', 'MKTSEGMENT', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region.merge(nation[(nation['N_REGIONKEY'] > 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('max', numeric_only=True)

customer.merge(nation[['N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'] == 'R') & (nation['N_NATIONKEY'] > 7)][['N_NATIONKEY']].merge(supplier.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['RETURNFLAG'] != N)][['SHIPDATE', 'SHIPMODE', 'SHIPINSTRUCT']].merge(partsupp[(partsupp['P_COMMENT'] != 'u') | (partsupp['P_COMMENT'] == 'y')].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[(part['PT_COMMENT'] != 'n') & (part['RETAILPRICE'] <= 942.4833904979961) | (part['RETAILPRICE'] > 988.800740044425) | (part['RETAILPRICE'] < 930.3471603948772)]

lineitem[(lineitem['QUANTITY'] > 20) | (lineitem['L_COMMENT'] != ',')][['L_PARTKEY', 'COMMITDATE', 'L_SUPPKEY']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6588) & (partsupp['PS_PARTKEY'] >= 8)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '17-')][['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['CLERK'] == 'C') & (orders['O_CUSTKEY'] != 147615) & (orders['ORDERSTATUS'] == P)].merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 9572) & (partsupp['AVAILQTY'] == 728)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['L_SUPPKEY', 'SHIPDATE', 'L_ORDERKEY', 'LINESTATUS']].merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_NATIONKEY'] <= 21) | (customer['MKTSEGMENT'] != AUTOMOBILE)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY']).agg('mean', numeric_only=True)

region.merge(nation[(nation['N_NAME'] != 'I')][['N_NAME']].merge(customer[(customer['C_ADDRESS'] != 'v') | (customer['C_COMMENT'] == 'w')][['C_NAME', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp.merge(supplier[(supplier['S_COMMENT'] != 'a')].merge(nation[(nation['N_NATIONKEY'] >= 0)].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['SHIPMODE', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 33) | (partsupp['AVAILQTY'] >= 147)][['PS_PARTKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 287.36113006820386)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

region[['R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 3) | (nation['N_COMMENT'] == 'v')][['N_NAME']].merge(customer[(customer['C_ACCTBAL'] <= 412.60104383121575) & (customer['C_ADDRESS'].str.startswith('8'))][['C_ADDRESS', 'C_NAME']].merge(orders.merge(customer[(customer['C_NATIONKEY'] >= 16)][['C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 'a') & (nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region.merge(nation.merge(supplier[(supplier['S_NAME'] != 'S')][['S_NAME', 'S_NATIONKEY', 'S_PHONE']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 'n')].merge(customer[['C_NATIONKEY', 'C_NAME', 'C_ACCTBAL']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

lineitem.merge(orders.merge(lineitem[['DISCOUNT', 'SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPDATE']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] == 0) | (orders['TOTALPRICE'] <= 100549.8218297167) & (orders['O_CUSTKEY'] != 131660) | (orders['CLERK'] == 'C')][['ORDERSTATUS', 'O_ORDERKEY', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']]

supplier[(supplier['S_ADDRESS'] == 'M') & (supplier['S_ACCTBAL'] == 9574.123690947965)][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] >= 175) | (supplier['S_ADDRESS'].str.startswith('i'))][['S_SUPPKEY', 'S_ACCTBAL']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('count')

part[(part['TYPE'] != 'M') | (part['TYPE'].str.startswith('M')) & (part['PT_COMMENT'] != 'kag')][['SIZE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 26)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(part.merge(partsupp[(partsupp['PS_PARTKEY'] <= 32) | (partsupp['AVAILQTY'] == 7316)].merge(part[['SIZE', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 558.4120304757444)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[['ORDERSTATUS', 'O_ORDERKEY', 'O_CUSTKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == TAKE BACK RETURN) | (lineitem['LINENUMBER'] >= 1)].merge(partsupp[['PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(orders[['ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['MKTSEGMENT'] != AUTOMOBILE) & (customer['C_ADDRESS'] != 'n')][['C_COMMENT', 'C_ADDRESS', 'C_NATIONKEY']].merge(orders[(orders['O_ORDERKEY'] <= 533) & (orders['ORDERDATE'] != '1998-07-21')].merge(lineitem[(lineitem['L_COMMENT'].str.startswith('d')) | (lineitem['LINESTATUS'] != F)][['SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] >= 9808) & (partsupp['PS_SUPPKEY'] != 3503)][['AVAILQTY', 'SUPPLYCOST']].merge(lineitem[(lineitem['LINENUMBER'] >= 3)][['L_ORDERKEY', 'DISCOUNT', 'SHIPDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 12) & (partsupp['PS_SUPPKEY'] == 3784)].merge(lineitem.merge(orders[['O_COMMENT', 'ORDERSTATUS', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders.merge(lineitem[['L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 346628.17221929727) & (orders['TOTALPRICE'] == 274156.4234520633)].merge(lineitem[(lineitem['COMMITDATE'] == '1992-05-15') | (lineitem['SHIPDATE'] < '1992-04-27')].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['SHIPDATE', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] == 290.126600062152) & (partsupp['AVAILQTY'] == 4205)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['LINESTATUS', 'COMMITDATE', 'SHIPMODE', 'L_COMMENT']].merge(orders[(orders['CLERK'] == 'C')][['O_ORDERKEY']].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 31)][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('min', numeric_only=True)

partsupp.merge(part[(part['P_PARTKEY'] >= 41) & (part['PT_COMMENT'].str.startswith('ly '))][['SIZE', 'PT_COMMENT']].merge(partsupp[['AVAILQTY']].merge(supplier.merge(partsupp[(partsupp['SUPPLYCOST'] > 621.5974361804499)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith('e')) | (supplier['S_NATIONKEY'] < 13)].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_NATIONKEY'] != 15)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(customer.merge(orders[(orders['O_CUSTKEY'] < 66952) | (orders['O_CUSTKEY'] == 140998)][['ORDERDATE', 'O_ORDERKEY', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 101) & (orders['TOTALPRICE'] == 281637.52193039434) | (orders['O_COMMENT'] != 'j')][['TOTALPRICE', 'ORDERPRIORITY', 'O_ORDERKEY']]

region[(region['R_COMMENT'].str.startswith('l')) & (region['R_REGIONKEY'] < 0) | (region['R_COMMENT'] == 'h') | (region['R_COMMENT'] == 'u')].merge(nation[(nation['N_NATIONKEY'] <= 15) | (nation['N_NATIONKEY'] < 8)][['N_COMMENT']].merge(region[(region['R_COMMENT'] == 'h') | (region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_NATIONKEY'] != 14)][['S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('F')) & (nation['N_NATIONKEY'] != 20)], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[(partsupp['SUPPLYCOST'] < 744.7084123642684)]

orders[(orders['ORDERSTATUS'] == F) | (orders['ORDERSTATUS'] != F) | (orders['ORDERSTATUS'].isin(['O', 'P']))].merge(customer[['C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NATIONKEY'] > 19)][['C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[['BRAND', 'PT_COMMENT', 'MFGR', 'P_PARTKEY', 'SIZE']].groupby(by=['MFGR']).agg('count')

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RETURNFLAG'].isin(['R'])) | (lineitem['EXTENDEDPRICE'] >= 88030.90629197359)][['L_SUPPKEY', 'L_COMMENT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['SHIPMODE'] == TRUCK) & (lineitem['EXTENDEDPRICE'] < 40203.112654296114)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 22) & (nation['N_NATIONKEY'] != 11)][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

supplier[['S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_REGIONKEY'] > 1)][['N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_PHONE'].str.startswith('22-'))]

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']]

lineitem[(lineitem['SHIPDATE'] == '1992-04-27')][['TAX', 'DISCOUNT', 'L_PARTKEY', 'SHIPINSTRUCT']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

region[['R_NAME']].merge(nation.merge(supplier[(supplier['S_SUPPKEY'] <= 131) & (supplier['S_ACCTBAL'] <= -97.88477565858102)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('e')) & (supplier['S_SUPPKEY'] > 93) & (supplier['S_SUPPKEY'] >= 153) | (supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY']].groupby(by=['S_NATIONKEY']).agg('min', numeric_only=True)

orders[(orders['CLERK'] != 'C') | (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['TOTALPRICE'] > 145621.87400390266)].merge(customer.merge(nation[(nation['N_NAME'] != 'F')].merge(supplier[['S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] != 21) & (nation['N_REGIONKEY'] < 2)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'ORDERSTATUS']).agg('min', numeric_only=True)

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'COLLECT COD'])) & (lineitem['L_ORDERKEY'] == 96) | (lineitem['COMMITDATE'] >= '1992-05-15')][['LINENUMBER', 'DISCOUNT']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['TOTALPRICE'] >= 282737.32693321345)], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[(lineitem['RETURNFLAG'] != R) | (lineitem['SHIPDATE'] != '1998-10-30') | (lineitem['RECEIPTDATE'] > '1992-05-02')][['LINENUMBER', 'SHIPMODE']].merge(partsupp[['P_COMMENT']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] == 198) & (supplier['S_NATIONKEY'] < 8)][['S_SUPPKEY', 'S_NAME', 'S_ACCTBAL', 'S_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] != 4235)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['LINENUMBER']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] >= 0)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] == 1) & (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_COMMENT'] == 'r')][['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['SHIPINSTRUCT'].isin(['COLLECT COD'])) & (lineitem['SHIPINSTRUCT'] == NONE)]

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']]

customer[(customer['C_COMMENT'] != ',') | (customer['C_PHONE'].str.startswith('27-')) | (customer['C_NAME'] != 'C') | (customer['C_ACCTBAL'] < 5634.9540363588)][['C_NAME', 'C_COMMENT', 'C_CUSTKEY']].merge(orders[['ORDERPRIORITY', 'O_COMMENT']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_COMMENT'] != 'r')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT', 'C_NAME']).agg('sum', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != 3-MEDIUM) & (orders['ORDERSTATUS'] != O) & (orders['SHIPPRIORITY'] == 0)].groupby(by=['ORDERPRIORITY', 'O_CUSTKEY']).agg('max', numeric_only=True)

orders[['ORDERSTATUS', 'ORDERDATE']].merge(customer[['C_ADDRESS', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 'r')].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERDATE', 'ORDERSTATUS']).agg('sum', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_NAME'] == 'AME') | (region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('P')) | (nation['N_REGIONKEY'] > 0)].merge(customer[['C_ADDRESS', 'C_CUSTKEY', 'C_COMMENT', 'C_ACCTBAL']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[(partsupp['P_COMMENT'] != 'd') & (partsupp['PS_SUPPKEY'] == 5560) & (partsupp['AVAILQTY'] > 4198)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_SUPPKEY'] > 145) & (supplier['S_ADDRESS'] == 'P')][['S_NATIONKEY', 'S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] < 7481) & (partsupp['PS_PARTKEY'] != 23)][['PS_PARTKEY', 'P_COMMENT']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 4) | (nation['N_NAME'] == 'E')].merge(supplier[(supplier['S_SUPPKEY'] != 129) | (supplier['S_SUPPKEY'] <= 89)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] >= 89)][['C_COMMENT', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_REGIONKEY'] == 1)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 7101)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 403) & (partsupp['SUPPLYCOST'] < 728.7419572294241)].merge(supplier[['S_ADDRESS', 'S_NAME', 'S_ACCTBAL']].merge(partsupp[(partsupp['AVAILQTY'] == 3344)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['MKTSEGMENT'] == AUTOMOBILE)][['C_CUSTKEY', 'C_ACCTBAL']]

region.merge(nation[(nation['N_NATIONKEY'] >= 21)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(customer.merge(orders[(orders['O_COMMENT'] != 'u') | (orders['ORDERSTATUS'] == F)][['ORDERSTATUS']].merge(customer[['C_COMMENT', 'C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 0) | (nation['N_REGIONKEY'] > 0)].merge(region.merge(nation.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_ADDRESS']].merge(orders[(orders['ORDERDATE'] <= '1992-01-13') | (orders['CLERK'] == 'C')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] > 0)][['N_COMMENT']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(region[(region['R_NAME'] == 'AME') | (region['R_NAME'] != 'A')][['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] == 21) | (nation['N_NATIONKEY'] > 18)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(supplier[(supplier['S_SUPPKEY'] == 150) | (supplier['S_NATIONKEY'] > 11)].merge(partsupp[(partsupp['AVAILQTY'] == 6041)].merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[(part['MFGR'] != Manufacturer#4) & (part['SIZE'] < 34)][['CONTAINER', 'BRAND', 'P_NAME', 'SIZE', 'P_PARTKEY']]

orders[(orders['ORDERSTATUS'] != O) | (orders['CLERK'] == 'C') | (orders['ORDERDATE'] >= '1998-07-21') & (orders['O_ORDERKEY'] == 588)][['ORDERDATE', 'CLERK']].merge(lineitem[(lineitem['RECEIPTDATE'] > '1992-05-02')][['L_COMMENT', 'EXTENDEDPRICE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['RETURNFLAG'] == A)][['L_PARTKEY', 'DISCOUNT', 'L_SUPPKEY', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ACCTBAL'] != 8596.50202176388)].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['CLERK', 'ORDERDATE']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] == NONE) | (lineitem['RETURNFLAG'].isin(['R', 'A', 'N'])) | (lineitem['EXTENDEDPRICE'] == 67364.27000589545)][['EXTENDEDPRICE', 'SHIPINSTRUCT', 'QUANTITY', 'RETURNFLAG']]

lineitem

lineitem[['TAX']].merge(partsupp[(partsupp['SUPPLYCOST'] != 256.1574941475572)].merge(lineitem[(lineitem['LINESTATUS'].isin(['O', 'F']))][['RECEIPTDATE', 'DISCOUNT', 'L_ORDERKEY', 'RETURNFLAG']].merge(partsupp.merge(lineitem[(lineitem['LINESTATUS'] != O) | (lineitem['L_COMMENT'].str.startswith('s'))], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['SHIPPRIORITY', 'ORDERDATE', 'O_ORDERKEY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY']].groupby(by=['N_NATIONKEY']).agg('max', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 946.2876615271614)].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_REGIONKEY'] >= 1)].merge(nation[['N_NATIONKEY', 'N_NAME']].merge(region.merge(nation.merge(region[(region['R_REGIONKEY'] != 2)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('26-')) | (supplier['S_SUPPKEY'] > 51)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('count')

partsupp.merge(supplier[['S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_ACCTBAL'] <= 3340.3450810008935) | (supplier['S_PHONE'].str.startswith('28-'))][['S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].merge(nation[['N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'J')].merge(region[(region['R_REGIONKEY'] > 3)].merge(nation[(nation['N_COMMENT'].str.startswith('r'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

part[['BRAND', 'SIZE', 'CONTAINER', 'MFGR', 'RETAILPRICE']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'k')][['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'RETAILPRICE']).agg('count')

nation[(nation['N_NAME'] == 'I') & (nation['N_COMMENT'] == 'e')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] < 2) & (region['R_COMMENT'] != 'g')][['R_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier[['S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_COMMENT'] == 'u')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

lineitem[['TAX', 'RETURNFLAG', 'DISCOUNT', 'COMMITDATE']].groupby(by=['RETURNFLAG']).agg('min', numeric_only=True)

supplier.merge(nation[(nation['N_REGIONKEY'] >= 0)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

region.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier[(supplier['S_PHONE'] == '1')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('count')

lineitem[(lineitem['EXTENDEDPRICE'] <= 21863.284209229467)].groupby(by=['LINESTATUS']).agg('sum', numeric_only=True)

customer[(customer['C_ACCTBAL'] < 5789.947993108876) & (customer['C_CUSTKEY'] > 36) & (customer['C_ADDRESS'] != 'T') | (customer['C_CUSTKEY'] < 72)][['C_PHONE']].merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_CUSTKEY'] == 59)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERSTATUS'] != O)][['O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_CUSTKEY'] != 75) & (customer['C_ADDRESS'] != 'f')][['MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') & (lineitem['TAX'] > 0.05128683300105978)], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem[['SHIPINSTRUCT', 'L_COMMENT']].merge(partsupp[(partsupp['AVAILQTY'] == 6254) & (partsupp['AVAILQTY'] <= 8646)][['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['P_NAME'] != 'm')][['MFGR', 'PT_COMMENT']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_NAME'] == 'F') | (nation['N_NATIONKEY'] > 3) | (nation['N_COMMENT'] == 'l')][['N_REGIONKEY', 'N_COMMENT']].merge(supplier.merge(nation[(nation['N_NAME'] == 'B')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(customer[(customer['MKTSEGMENT'] != AUTOMOBILE) | (customer['C_PHONE'].str.startswith('27-'))].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

orders[(orders['ORDERSTATUS'] != O) & (orders['CLERK'] == 'C') & (orders['ORDERSTATUS'] != O)][['ORDERPRIORITY', 'ORDERSTATUS', 'ORDERDATE']].merge(lineitem[['LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['TAX', 'EXTENDEDPRICE', 'DISCOUNT', 'LINENUMBER']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem[(lineitem['L_PARTKEY'] == 164294) & (lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['L_PARTKEY'] == 45681) | (lineitem['QUANTITY'] > 25)][['SHIPMODE']].merge(partsupp[(partsupp['AVAILQTY'] <= 6435) | (partsupp['AVAILQTY'] == 8288)].merge(lineitem.merge(partsupp[['P_COMMENT']].merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15') & (lineitem['QUANTITY'] >= 23)][['LINESTATUS', 'L_COMMENT', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 746.4666982734853)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['TOTALPRICE'] >= 312113.29607681336) | (orders['ORDERSTATUS'].isin(['P', 'F', 'O']))].merge(lineitem[(lineitem['SHIPDATE'] <= '1998-10-30')][['RETURNFLAG', 'LINENUMBER', 'QUANTITY', 'L_COMMENT']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST']].merge(part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_COMMENT']].merge(customer[(customer['C_COMMENT'] != 'p')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp.merge(part[['BRAND', 'SIZE', 'CONTAINER', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

nation.groupby(by=['N_COMMENT', 'N_NAME']).agg('max', numeric_only=True)

nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_ADDRESS', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 1)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_PHONE']].merge(partsupp[(partsupp['P_COMMENT'] == 'e') & (partsupp['SUPPLYCOST'] == 822.8315209741526)][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']]

nation[(nation['N_REGIONKEY'] < 0)]

lineitem[(lineitem['LINENUMBER'] >= 1) & (lineitem['EXTENDEDPRICE'] > 71816.28449648833)][['L_COMMENT', 'SHIPDATE', 'L_ORDERKEY', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 4196) & (partsupp['PS_PARTKEY'] == 11)].merge(lineitem[['COMMITDATE', 'SHIPMODE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_ORDERKEY']).agg('sum', numeric_only=True)

nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(supplier[(supplier['S_ACCTBAL'] >= -810.6086375078097)].merge(partsupp[(partsupp['AVAILQTY'] != 8154)].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

part[['RETAILPRICE', 'SIZE', 'BRAND', 'P_PARTKEY', 'P_NAME']].merge(partsupp[['P_COMMENT']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 317.1119998762958) | (partsupp['SUPPLYCOST'] > 824.9725183250293)].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 638.2836936814349) & (partsupp['SUPPLYCOST'] <= 923.6312650744251)].merge(supplier.merge(nation[(nation['N_REGIONKEY'] >= 1) & (nation['N_REGIONKEY'] > 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer[(customer['C_COMMENT'] != 'h')].merge(nation[(nation['N_REGIONKEY'] > 2) | (nation['N_NAME'] == 'V')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] <= 141) & (lineitem['TAX'] < 0.07538067798289433)][['QUANTITY']]

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD)].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('mean', numeric_only=True)

part[(part['CONTAINER'] != 'LG') & (part['TYPE'].str.startswith('STA')) & (part['RETAILPRICE'] == 1053.3044340182025) | (part['TYPE'].str.startswith('P'))][['PT_COMMENT', 'TYPE', 'SIZE', 'BRAND']].groupby(by=['SIZE']).agg('sum', numeric_only=True)

orders[(orders['O_CUSTKEY'] == 53449) | (orders['O_COMMENT'] != 'uri')][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY']].merge(customer[(customer['C_PHONE'] == '27-')][['C_COMMENT', 'C_NATIONKEY', 'C_ADDRESS', 'C_CUSTKEY']].merge(nation[(nation['N_COMMENT'] == 'p')][['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT']).agg('min', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('l')) & (part['TYPE'].str.startswith('E')) & (part['P_PARTKEY'] <= 149)].merge(partsupp[['P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'TYPE']).agg('sum', numeric_only=True)

lineitem[['L_COMMENT', 'RETURNFLAG', 'L_ORDERKEY']]

partsupp[(partsupp['PS_PARTKEY'] < 3) & (partsupp['AVAILQTY'] != 6768) | (partsupp['SUPPLYCOST'] > 96.74053308755535) | (partsupp['SUPPLYCOST'] != 497.65672369707477)][['SUPPLYCOST']].merge(lineitem[(lineitem['L_COMMENT'].str.startswith('g'))][['L_ORDERKEY', 'QUANTITY', 'RETURNFLAG', 'LINESTATUS']].merge(orders.merge(customer.merge(nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) & (lineitem['RECEIPTDATE'] < '1998-11-06') | (lineitem['L_ORDERKEY'] >= 129) | (lineitem['LINENUMBER'] < 4)]

lineitem[(lineitem['SHIPMODE'] == REG AIR) | (lineitem['TAX'] > 0.07136689304299466) & (lineitem['LINENUMBER'] <= 4) | (lineitem['LINESTATUS'].isin(['F']))][['TAX', 'L_ORDERKEY', 'COMMITDATE']].merge(orders[(orders['ORDERSTATUS'].isin(['F', 'O'])) & (orders['CLERK'] != 'C')], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['NONE', 'TAKE BACK RETURN', 'COLLECT COD']))][['COMMITDATE']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i')) & (partsupp['PS_SUPPKEY'] != 1247)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_ORDERKEY']).agg('count')

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] == 'l') & (region['R_NAME'].str.startswith('AME')) | (region['R_COMMENT'] != 'g')].merge(nation[(nation['N_COMMENT'] == 'u')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_NAME'] == 'G')].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'h') & (nation['N_REGIONKEY'] >= 2)][['N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 'o') & (nation['N_NAME'].str.startswith('E'))].merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('mean', numeric_only=True)

orders[['CLERK', 'O_COMMENT', 'O_CUSTKEY']]

orders.groupby(by=['O_CUSTKEY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

supplier.merge(partsupp[(partsupp['P_COMMENT'] == 'k') & (partsupp['P_COMMENT'].str.startswith('e'))][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NATIONKEY'] != 6) | (nation['N_REGIONKEY'] < 0)][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_COMMENT'] != 'h') | (supplier['S_ADDRESS'] != ' ')][['S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('count')

customer[['C_ADDRESS', 'C_CUSTKEY', 'C_ACCTBAL', 'C_NATIONKEY']].merge(nation[(nation['N_COMMENT'] == 'r')], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_COMMENT'] == 't')].merge(nation[(nation['N_REGIONKEY'] != 2)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 19)].merge(part[(part['RETAILPRICE'] != 1074.4341199395028)][['MFGR', 'SIZE', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_NATIONKEY']).agg('min', numeric_only=True)

lineitem[['LINESTATUS', 'DISCOUNT', 'LINENUMBER', 'L_ORDERKEY', 'L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'u')][['P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['LINESTATUS']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] == 'l') | (region['R_COMMENT'] == 'h') & (region['R_NAME'] == 'E')].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders.merge(lineitem[['SHIPINSTRUCT', 'LINESTATUS']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

nation[(nation['N_NATIONKEY'] >= 16) & (nation['N_NAME'] != 'J') | (nation['N_COMMENT'] == 't') & (nation['N_COMMENT'] == 'y')][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_NAME'] != 'S') | (nation['N_COMMENT'] == 'n')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[['MKTSEGMENT', 'C_COMMENT', 'C_PHONE', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['MKTSEGMENT', 'C_NAME', 'C_NATIONKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 3177)][['SUPPLYCOST']].merge(supplier[(supplier['S_ADDRESS'] == 'p')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 3055)][['SUPPLYCOST', 'P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == '.') & (partsupp['PS_PARTKEY'] >= 4) & (partsupp['PS_PARTKEY'] < 23) & (partsupp['PS_SUPPKEY'] < 2302)].merge(lineitem[(lineitem['TAX'] > 0.03281736642656204)][['L_PARTKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] == 5)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NAME'].str.startswith('S'))].merge(partsupp[(partsupp['SUPPLYCOST'] <= 171.70175971526723)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['PS_PARTKEY', 'AVAILQTY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 5827) | (lineitem['L_SUPPKEY'] == 2847) & (lineitem['QUANTITY'] <= 32)][['L_SUPPKEY', 'LINENUMBER', 'RECEIPTDATE', 'RETURNFLAG', 'L_PARTKEY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['O_COMMENT'] != 'z')][['ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 11) | (partsupp['PS_SUPPKEY'] == 394)][['P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['BRAND'].isin(['Brand#51', 'Brand#44', 'Brand#11', 'Brand#41', 'Brand#15', 'Brand#42', 'Brand#52', 'Brand#13', 'Brand#25', 'Brand#54', 'Brand#32', 'Brand#35', 'Brand#53', 'Brand#31']))][['P_NAME', 'SIZE']].merge(partsupp[['SUPPLYCOST']].merge(supplier[(supplier['S_ACCTBAL'] >= 5187.0965465421605)][['S_NAME', 'S_ADDRESS']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['O_COMMENT'] != 'the') | (orders['O_ORDERKEY'] > 562)].groupby(by=['SHIPPRIORITY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] != 'f') | (customer['C_COMMENT'] == 'u') & (customer['C_CUSTKEY'] < 96) & (customer['C_ACCTBAL'] <= 704.2882673932618)].merge(orders[(orders['TOTALPRICE'] < 182286.56533940643)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME']).agg('sum', numeric_only=True)

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[['CONTAINER', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('mean', numeric_only=True)

partsupp.merge(lineitem[['DISCOUNT', 'EXTENDEDPRICE']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['P_PARTKEY'] >= 75) | (part['PT_COMMENT'].str.startswith('m'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == BUILDING) | (customer['C_NAME'] != 'C') & (customer['C_NATIONKEY'] == 18)][['C_ADDRESS']]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['O_CUSTKEY'] >= 111584) & (orders['ORDERPRIORITY'].isin(['5-LOW', '2-HIGH', '4-NOT SPECIFIED'])) | (orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT']))].merge(lineitem[(lineitem['LINESTATUS'] != F) | (lineitem['SHIPDATE'] != '1992-04-27')][['L_COMMENT', 'DISCOUNT', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4822)][['AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_ADDRESS'] != 'h')][['C_CUSTKEY', 'C_PHONE', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['LINENUMBER']].merge(orders[['CLERK', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'] != FURNITURE)][['MKTSEGMENT', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE', 'O_COMMENT']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] >= 0) | (nation['N_COMMENT'].str.startswith('n')) & (nation['N_REGIONKEY'] > 2) | (nation['N_REGIONKEY'] == 0)]

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'] != 'g') | (region['R_REGIONKEY'] == 3) & (region['R_REGIONKEY'] > 2)].merge(nation[(nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'].str.startswith('M'))][['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region[(region['R_NAME'] != 'AFR')][['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 2253) | (lineitem['L_ORDERKEY'] >= 180) | (lineitem['SHIPMODE'].isin(['RAIL', 'TRUCK', 'AIR', 'SHIP', 'FOB']))][['DISCOUNT']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[['L_PARTKEY', 'L_SUPPKEY', 'LINESTATUS', 'L_ORDERKEY']].merge(orders[(orders['CLERK'] != 'C')].merge(customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['C_NAME'] != 'C')][['C_ACCTBAL', 'C_COMMENT', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

supplier.merge(partsupp[(partsupp['PS_PARTKEY'] == 6)].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

partsupp.merge(lineitem[(lineitem['L_PARTKEY'] > 38875)][['L_PARTKEY', 'SHIPINSTRUCT', 'RECEIPTDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[['SIZE', 'PT_COMMENT', 'TYPE']].merge(partsupp[(partsupp['P_COMMENT'] == 'the')].merge(part.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2061) & (partsupp['P_COMMENT'] != 'y')][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[(lineitem['L_ORDERKEY'] != 128) | (lineitem['L_COMMENT'] == 'b')][['L_PARTKEY', 'DISCOUNT', 'SHIPMODE', 'LINENUMBER']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_COMMENT'] != 'b')].merge(partsupp[(partsupp['PS_PARTKEY'] < 12) & (partsupp['PS_SUPPKEY'] <= 7173)][['AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_SUPPKEY', 'SUPPLYCOST']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] <= 2) & (region['R_COMMENT'].str.startswith('h'))][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] < 12) & (nation['N_NATIONKEY'] != 3)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT']].merge(nation[['N_REGIONKEY']].merge(customer[(customer['C_ADDRESS'] != 'n')].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_NATIONKEY'] >= 10)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME']).agg('count')

orders[(orders['O_CUSTKEY'] <= 77369) | (orders['SHIPPRIORITY'] >= 0)][['SHIPPRIORITY', 'O_COMMENT']].merge(customer[['C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('G'))][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_NATIONKEY']].merge(nation[(nation['N_NAME'] != 'J')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem.merge(partsupp.merge(lineitem.merge(orders[['CLERK', 'ORDERSTATUS', 'TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['O_CUSTKEY'] >= 112766) & (orders['O_CUSTKEY'] != 135052) | (orders['O_COMMENT'] != 'i') & (orders['ORDERDATE'] <= '1992-01-13')][['O_COMMENT']].merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_PHONE'] == '27-')].merge(orders[['SHIPPRIORITY', 'ORDERDATE']].merge(customer[(customer['C_NAME'] == 'C')], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ACCTBAL'] > 2049.82088489931) & (customer['C_PHONE'] != '1')].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'C')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_COMMENT']).agg('max', numeric_only=True)

supplier

part.merge(partsupp[(partsupp['PS_PARTKEY'] > 26) & (partsupp['AVAILQTY'] < 7187)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_NATIONKEY'] < 2) & (supplier['S_PHONE'] != '14-')][['S_ACCTBAL']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_ADDRESS'] == 'R') | (supplier['S_PHONE'] == '14-') | (supplier['S_NATIONKEY'] > 11) & (supplier['S_NATIONKEY'] <= 6)][['S_NATIONKEY', 'S_ACCTBAL', 'S_NAME']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier[(supplier['S_NATIONKEY'] == 17)][['S_NAME', 'S_PHONE']].merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_ADDRESS'].str.startswith('B')) | (supplier['S_ACCTBAL'] > 1697.995845340775) | (supplier['S_ACCTBAL'] != 9170.904298017114) & (supplier['S_NATIONKEY'] < 16)][['S_COMMENT', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_PHONE']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != 3-MEDIUM) | (orders['ORDERSTATUS'] != O) & (orders['CLERK'] == 'C')][['TOTALPRICE']].merge(customer[['MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE']).agg('min', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 3)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['LINENUMBER', 'SHIPMODE']).agg('mean', numeric_only=True)

region[['R_NAME']].merge(nation[(nation['N_NAME'] != 'P')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] == 6) | (supplier['S_COMMENT'] != 'v')][['S_NATIONKEY', 'S_NAME', 'S_COMMENT', 'S_ADDRESS']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_COMMENT'] != 'v')][['S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] == 2) & (lineitem['SHIPDATE'] > '1992-04-27')].merge(orders[(orders['TOTALPRICE'] < 323702.13171769865)][['TOTALPRICE', 'O_CUSTKEY', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERDATE', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(lineitem[(lineitem['L_COMMENT'].str.startswith(','))][['RETURNFLAG']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['COMMITDATE', 'SHIPMODE']).agg('sum', numeric_only=True)

lineitem[(lineitem['SHIPMODE'] != SHIP) | (lineitem['L_COMMENT'] == 'a') | (lineitem['DISCOUNT'] > 0.032426324127051646) | (lineitem['L_SUPPKEY'] != 4138)][['L_ORDERKEY']]

orders[(orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'O_ORDERKEY', 'O_CUSTKEY']].merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 801.9380169910402) | (partsupp['SUPPLYCOST'] < 599.7485440137087)][['SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_PHONE']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 2133) & (partsupp['PS_PARTKEY'] <= 14)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPMODE'].isin(['RAIL'])) & (lineitem['RETURNFLAG'] == N)][['RECEIPTDATE', 'SHIPINSTRUCT', 'RETURNFLAG', 'LINESTATUS']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(lineitem[['SHIPMODE', 'L_SUPPKEY']].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp[['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_ORDERKEY']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'] == 'u')].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_NATIONKEY'] < 6)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[['S_NAME', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier[['S_COMMENT', 'S_ACCTBAL', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_ACCTBAL'] < 1199.6419013106631)][['S_ADDRESS', 'S_PHONE', 'S_NATIONKEY', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] == 2222) & (partsupp['PS_PARTKEY'] == 2)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

part[(part['P_NAME'] != 'bis') & (part['MFGR'] != Manufacturer#1) & (part['P_NAME'].str.startswith('s')) & (part['P_NAME'] == 'lem')].merge(partsupp[(partsupp['AVAILQTY'] > 2872)][['P_COMMENT']].merge(lineitem[['LINENUMBER', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[['S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 48) | (partsupp['SUPPLYCOST'] > 939.267770629656)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != TAKE BACK RETURN)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[['S_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 211.12277002041102)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_PHONE'] != '17-')].merge(partsupp[(partsupp['SUPPLYCOST'] < 308.0838022538321) & (partsupp['PS_PARTKEY'] >= 7)][['SUPPLYCOST', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[(region['R_REGIONKEY'] == 3) | (region['R_NAME'] != 'E')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[['N_COMMENT']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] > 0) & (nation['N_COMMENT'] == 'o')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPMODE'] == AIR) & (lineitem['QUANTITY'] < 46)][['LINENUMBER', 'COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['PS_PARTKEY', 'PS_SUPPKEY']]

orders.merge(customer[(customer['C_ADDRESS'] != 'f')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[(orders['O_COMMENT'] != 'k') | (orders['ORDERDATE'] >= '1992-01-13')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] != 82.56004947512828)][['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem[(lineitem['LINESTATUS'].isin(['F', 'O'])) | (lineitem['LINESTATUS'] != O)][['L_SUPPKEY']].merge(orders[(orders['O_CUSTKEY'] >= 59955) & (orders['O_ORDERKEY'] == 324)][['O_ORDERKEY', 'TOTALPRICE', 'ORDERPRIORITY']].merge(lineitem[(lineitem['COMMITDATE'] == '1992-05-15')].merge(partsupp[(partsupp['PS_PARTKEY'] > 20)].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

orders[(orders['O_CUSTKEY'] < 112320)][['SHIPPRIORITY', 'CLERK', 'ORDERDATE', 'ORDERSTATUS']].merge(customer[(customer['C_NATIONKEY'] >= 8) & (customer['C_COMMENT'].str.startswith('w'))][['C_ADDRESS', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['SHIPINSTRUCT']].merge(partsupp.merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30')][['SHIPMODE']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'] != FURNITURE)][['C_COMMENT', 'C_CUSTKEY']].merge(orders.merge(lineitem[(lineitem['TAX'] >= 0.06576586497613761)][['L_ORDERKEY', 'DISCOUNT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] != 's')][['N_REGIONKEY']].groupby(by=['N_REGIONKEY']).agg('mean', numeric_only=True)

nation.merge(supplier[(supplier['S_COMMENT'] != 'w') & (supplier['S_PHONE'] == '1')][['S_ACCTBAL']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_REGIONKEY'] < 1) & (region['R_REGIONKEY'] < 1)][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[['C_NAME', 'C_NATIONKEY']].merge(nation[(nation['N_REGIONKEY'] <= 2)][['N_NAME']].merge(supplier[(supplier['S_COMMENT'] == 'u')][['S_COMMENT', 'S_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('p'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[['P_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'bli')], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_COMMENT'] == '.')][['DISCOUNT', 'RETURNFLAG', 'SHIPMODE', 'COMMITDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('g')) & (region['R_REGIONKEY'] >= 0)]

region[(region['R_REGIONKEY'] != 2) & (region['R_NAME'].str.startswith('ASI')) & (region['R_COMMENT'] == 'u')].merge(nation.merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] != 11)].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_REGIONKEY'] > 3)].merge(nation[(nation['N_NAME'].str.startswith('I'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('E'))][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier.merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_PHONE'] != '3') | (supplier['S_ACCTBAL'] < 810.3425969869284) & (supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] > 11)].merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(customer.merge(orders[(orders['O_CUSTKEY'] == 88628)].merge(customer[(customer['C_ACCTBAL'] > 7684.089207018476) | (customer['C_NATIONKEY'] != 8)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 152.12359321769696) | (partsupp['PS_PARTKEY'] >= 10)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('h'))].merge(lineitem[(lineitem['LINESTATUS'] == F)].merge(orders[(orders['ORDERDATE'] > '1992-01-13') | (orders['ORDERSTATUS'].isin(['P', 'F']))][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE']].merge(lineitem[(lineitem['L_COMMENT'] == 'a') | (lineitem['EXTENDEDPRICE'] >= 45485.78307051879)][['SHIPMODE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']]

part.merge(partsupp[(partsupp['AVAILQTY'] == 5684) | (partsupp['AVAILQTY'] > 7836)][['PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('the'))].merge(lineitem[(lineitem['LINENUMBER'] > 2)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3919) | (partsupp['PS_PARTKEY'] < 24)][['PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['DISCOUNT'] >= 0.020642867569423486)][['L_ORDERKEY', 'QUANTITY', 'SHIPDATE', 'DISCOUNT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_PARTKEY'] < 40)].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'] != 'w')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 6408) | (partsupp['PS_SUPPKEY'] < 4916) | (partsupp['SUPPLYCOST'] > 79.95496807616279) & (partsupp['AVAILQTY'] >= 9102)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(supplier.merge(partsupp[(partsupp['SUPPLYCOST'] <= 494.28469620231266)].merge(part[(part['CONTAINER'].str.startswith('LG'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['RETAILPRICE'] > 1024.4249569496812)][['TYPE']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4359) & (partsupp['PS_PARTKEY'] >= 41)][['AVAILQTY', 'P_COMMENT']].merge(lineitem[(lineitem['LINENUMBER'] <= 6)][['L_SUPPKEY', 'SHIPINSTRUCT', 'L_ORDERKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] != 24) & (partsupp['PS_PARTKEY'] != 48)][['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

part[(part['SIZE'] <= 47) & (part['RETAILPRICE'] > 975.5670783886426) | (part['P_PARTKEY'] >= 56) | (part['CONTAINER'] != 'JUMBO')][['RETAILPRICE']].groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_PARTKEY'] > 142294) | (lineitem['L_COMMENT'] != 'j') & (lineitem['QUANTITY'] <= 42)].groupby(by=['L_COMMENT', 'L_SUPPKEY']).agg('mean', numeric_only=True)

orders[['TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['QUANTITY', 'L_SUPPKEY', 'L_ORDERKEY']].merge(partsupp[(partsupp['AVAILQTY'] != 1470)][['AVAILQTY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE']).agg('count')

lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN'])) | (lineitem['EXTENDEDPRICE'] == 34473.84770304188) & (lineitem['SHIPDATE'] != '1992-04-27')].merge(partsupp[(partsupp['SUPPLYCOST'] != 504.94300606892256)].merge(part[(part['RETAILPRICE'] != 1054.1228372308765) | (part['RETAILPRICE'] <= 1013.1839432647441)][['MFGR', 'RETAILPRICE', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] >= 3) & (nation['N_NAME'].str.startswith('M')) & (nation['N_NAME'] == 'J')].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'E')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[['C_PHONE', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

part[(part['PT_COMMENT'] != 'ss ')].merge(partsupp[(partsupp['AVAILQTY'] < 3940) & (partsupp['P_COMMENT'] != 'j')], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == ' ') | (partsupp['P_COMMENT'] != 't')][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

region[['R_NAME', 'R_COMMENT']].groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 242.7999098491778) & (partsupp['AVAILQTY'] == 6872) & (partsupp['AVAILQTY'] != 1873) | (partsupp['P_COMMENT'] == 'v')].merge(lineitem.merge(partsupp[['P_COMMENT']].merge(part[(part['BRAND'].isin(['Brand#52', 'Brand#45', 'Brand#15', 'Brand#33', 'Brand#43', 'Brand#11', 'Brand#44', 'Brand#31', 'Brand#13', 'Brand#41', 'Brand#25', 'Brand#22', 'Brand#24', 'Brand#34', 'Brand#12']))][['SIZE', 'MFGR', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[['S_NAME', 'S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(partsupp[(partsupp['SUPPLYCOST'] > 344.03765624706494) & (partsupp['P_COMMENT'].str.startswith(','))][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['EXTENDEDPRICE'] != 83452.50820112992) & (lineitem['QUANTITY'] > 16)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

part[(part['CONTAINER'].str.startswith('JUMBO'))][['PT_COMMENT', 'SIZE']].merge(partsupp[(partsupp['AVAILQTY'] <= 5140) & (partsupp['PS_SUPPKEY'] == 6415)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY']].merge(lineitem[(lineitem['L_SUPPKEY'] == 942)][['L_SUPPKEY', 'QUANTITY', 'SHIPINSTRUCT']].merge(orders[['ORDERDATE']].merge(lineitem[(lineitem['LINENUMBER'] >= 3) | (lineitem['QUANTITY'] == 11)].merge(orders[['TOTALPRICE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'SIZE']).agg('mean', numeric_only=True)

orders[['O_CUSTKEY']].merge(lineitem[(lineitem['DISCOUNT'] <= 0.01620586887394415)], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['DISCOUNT'] <= 0.01737273307197935) | (lineitem['DISCOUNT'] < 0.0231058093208961)][['RECEIPTDATE', 'LINENUMBER', 'DISCOUNT', 'SHIPMODE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation[(nation['N_NAME'].str.startswith('S')) | (nation['N_COMMENT'].str.startswith('h'))].merge(region[(region['R_COMMENT'].str.startswith('u')) | (region['R_REGIONKEY'] > 2)][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('mean', numeric_only=True)

customer[(customer['C_CUSTKEY'] <= 60) | (customer['C_CUSTKEY'] <= 45) & (customer['MKTSEGMENT'] != FURNITURE)].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(region[(region['R_NAME'].str.startswith('ASI')) & (region['R_NAME'] != 'A')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_COMMENT'] != 'g') & (region['R_COMMENT'] == 'g') & (region['R_REGIONKEY'] >= 0)]

partsupp[(partsupp['PS_SUPPKEY'] < 4354) | (partsupp['PS_SUPPKEY'] < 3036) | (partsupp['SUPPLYCOST'] >= 373.25237953506416) | (partsupp['SUPPLYCOST'] >= 536.5268769704647)]

orders[['ORDERPRIORITY']]

region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] == 'M')].merge(nation[['N_NAME']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_COMMENT'] == 'e')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('count')

customer[(customer['C_PHONE'] != '18-') | (customer['C_NAME'].str.startswith('C'))].merge(orders.merge(lineitem[['L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders.merge(lineitem[(lineitem['L_PARTKEY'] > 12431)].merge(orders[(orders['O_CUSTKEY'] < 6226) | (orders['TOTALPRICE'] > 129471.473278767)][['CLERK', 'O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

part[['P_PARTKEY', 'BRAND']].merge(partsupp.merge(part.merge(partsupp[(partsupp['AVAILQTY'] > 9619)][['PS_SUPPKEY', 'P_COMMENT']].merge(part[(part['P_NAME'] != 'lem') & (part['P_PARTKEY'] <= 52)][['CONTAINER', 'SIZE', 'RETAILPRICE', 'BRAND']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 3715)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(part[['P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'v') | (partsupp['PS_SUPPKEY'] == 1687)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[['SHIPDATE']].merge(orders.merge(customer[(customer['C_ACCTBAL'] <= 5070.611934321025)][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('count')

partsupp[['PS_PARTKEY', 'P_COMMENT']].merge(part[['PT_COMMENT', 'P_PARTKEY', 'P_NAME', 'TYPE']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 415.0866340342569) | (partsupp['PS_SUPPKEY'] <= 3943)].merge(part[(part['TYPE'] != 'P') & (part['MFGR'] != Manufacturer#2)][['RETAILPRICE', 'CONTAINER']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 384.0701243855859) | (partsupp['PS_SUPPKEY'] == 3891)][['PS_SUPPKEY']].merge(lineitem[(lineitem['TAX'] == 0.07238096490151168) | (lineitem['TAX'] >= 0.04522596979641886)].merge(orders.merge(lineitem[(lineitem['TAX'] != 0.06443674897080207)], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['DISCOUNT'] > 0.0933092992025391)][['RETURNFLAG', 'LINENUMBER', 'RECEIPTDATE']].merge(orders[(orders['O_CUSTKEY'] > 96133) & (orders['ORDERPRIORITY'].isin(['5-LOW', '3-MEDIUM', '4-NOT SPECIFIED']))][['O_ORDERKEY', 'ORDERDATE', 'TOTALPRICE', 'CLERK']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

supplier[(supplier['S_NATIONKEY'] == 13) & (supplier['S_SUPPKEY'] == 114)].merge(nation[(nation['N_COMMENT'] == 'l')][['N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'u')][['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] < 2565.6305910630617)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_COMMENT']].merge(nation[['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'] != '22-')][['C_CUSTKEY', 'C_ADDRESS', 'C_ACCTBAL']].merge(orders[(orders['CLERK'] == 'C')].merge(lineitem[['TAX']].merge(orders[(orders['O_COMMENT'].str.startswith('f'))][['O_ORDERKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != DELIVER IN PERSON) & (lineitem['SHIPMODE'].isin(['SHIP']))].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['QUANTITY'] <= 8) | (lineitem['QUANTITY'] != 25)].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3945) | (partsupp['P_COMMENT'] != 'q')][['PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == TAKE BACK RETURN)].merge(partsupp.merge(part[['P_NAME', 'RETAILPRICE']].merge(partsupp[(partsupp['PS_PARTKEY'] == 5) | (partsupp['PS_SUPPKEY'] <= 4570)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer[(customer['C_PHONE'] != '27-') | (customer['C_ADDRESS'] != 'o')].merge(orders[['O_ORDERKEY', 'ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(customer[(customer['C_ACCTBAL'] != 5397.660892488082)][['C_COMMENT', 'C_NAME', 'C_PHONE', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

part[(part['PT_COMMENT'] == 'x')][['CONTAINER', 'TYPE', 'P_PARTKEY', 'RETAILPRICE']]

partsupp[(partsupp['PS_PARTKEY'] >= 46) & (partsupp['PS_PARTKEY'] == 20) & (partsupp['SUPPLYCOST'] > 684.1017887887795) & (partsupp['AVAILQTY'] == 7382)].merge(part[['MFGR', 'CONTAINER', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem.merge(orders[(orders['ORDERDATE'] > '1992-01-13')], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_SUPPKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] > 3763)][['P_COMMENT']].merge(supplier[(supplier['S_NATIONKEY'] <= 20) & (supplier['S_SUPPKEY'] < 33)].merge(partsupp.merge(part[(part['P_NAME'] != 'o') | (part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2', 'Manufacturer#1']))].merge(partsupp[(partsupp['PS_SUPPKEY'] < 3500)].merge(lineitem[(lineitem['L_PARTKEY'] == 25707)].merge(partsupp[(partsupp['PS_SUPPKEY'] < 819) & (partsupp['PS_PARTKEY'] == 21)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['RETAILPRICE'] < 982.5307439768936) & (part['RETAILPRICE'] != 943.217859257097)][['CONTAINER']].merge(partsupp[(partsupp['PS_PARTKEY'] != 23) & (partsupp['SUPPLYCOST'] > 895.878919788723)][['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

customer[(customer['C_COMMENT'].str.startswith('r')) & (customer['C_CUSTKEY'] >= 32) | (customer['C_ACCTBAL'] <= 9906.251382367198) & (customer['C_COMMENT'] != 'u')][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY']].groupby(by=['C_CUSTKEY', 'C_NAME']).agg('count')

partsupp[(partsupp['P_COMMENT'] == 'x') | (partsupp['PS_PARTKEY'] > 33) | (partsupp['PS_SUPPKEY'] == 2708)].merge(lineitem[(lineitem['TAX'] >= 0.046287751897165476)][['L_SUPPKEY', 'SHIPINSTRUCT', 'LINESTATUS', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['L_ORDERKEY'] >= 163) & (lineitem['RETURNFLAG'] == N)].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'] == '5') & (supplier['S_ACCTBAL'] >= 698.048427055008)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_NATIONKEY'] >= 0) & (supplier['S_ADDRESS'] != 'I')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['SHIPPRIORITY'] != 0) & (orders['ORDERPRIORITY'] != 1-URGENT) & (orders['TOTALPRICE'] >= 49266.44752232847)].merge(lineitem[['RETURNFLAG']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(orders[['ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['SHIPDATE'] < '1992-04-27')], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp.merge(lineitem[['SHIPINSTRUCT', 'L_PARTKEY', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

region[(region['R_COMMENT'] != 'h')][['R_COMMENT', 'R_NAME']].groupby(by=['R_NAME']).agg('mean', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] >= 129.4450068407063)][['P_COMMENT']].merge(supplier[(supplier['S_ADDRESS'] == 'L') & (supplier['S_ACCTBAL'] != 5814.650380169139)][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_COMMENT'].str.startswith('w')) | (supplier['S_NATIONKEY'] < 8)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

part.groupby(by=['RETAILPRICE']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 1218) & (partsupp['PS_PARTKEY'] >= 7) | (partsupp['SUPPLYCOST'] <= 57.51896616010758)].groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('max', numeric_only=True)

orders[(orders['TOTALPRICE'] > 274632.3367615547)].groupby(by=['O_ORDERKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] < 0.07476272640755662)]

partsupp[(partsupp['PS_SUPPKEY'] > 6916)].merge(lineitem.merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['TYPE'].str.startswith('M'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 17) & (nation['N_NATIONKEY'] >= 16) | (nation['N_NATIONKEY'] >= 7) | (nation['N_REGIONKEY'] != 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1917)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT']).agg('mean', numeric_only=True)

partsupp.merge(lineitem[['DISCOUNT', 'LINENUMBER', 'L_PARTKEY', 'RETURNFLAG']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['RECEIPTDATE', 'L_SUPPKEY', 'DISCOUNT']].merge(partsupp.merge(lineitem.merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] != 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[['TYPE', 'P_NAME', 'PT_COMMENT']].merge(partsupp.merge(lineitem[(lineitem['TAX'] >= 0.060124785191636214)][['COMMITDATE', 'L_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 1617)][['P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 65.58210200278789)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['MKTSEGMENT'] != FURNITURE) | (customer['C_ADDRESS'] != 'm')].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02')][['COMMITDATE', 'L_PARTKEY', 'EXTENDEDPRICE', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] < 2409)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERDATE'] >= '1998-07-21')][['ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['RETURNFLAG']).agg('count')

part[(part['P_NAME'].str.startswith('i')) & (part['P_NAME'] != 'g')][['SIZE', 'RETAILPRICE', 'CONTAINER', 'MFGR']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER']).agg('count')

region[(region['R_REGIONKEY'] <= 3)].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer.merge(orders[(orders['ORDERPRIORITY'] == 5-LOW)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NATIONKEY'] < 6) | (nation['N_COMMENT'].str.startswith('e'))][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation.groupby(by=['N_REGIONKEY', 'N_COMMENT']).agg('count')

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'].str.startswith('G'))].merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('count')

part[(part['PT_COMMENT'].str.startswith('c')) | (part['BRAND'].isin(['Brand#35', 'Brand#22', 'Brand#25', 'Brand#34', 'Brand#23', 'Brand#11', 'Brand#21', 'Brand#41', 'Brand#51', 'Brand#53', 'Brand#15', 'Brand#43'])) & (part['SIZE'] != 32)][['BRAND']].merge(partsupp[(partsupp['P_COMMENT'] != 'i')][['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 7197)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['TAX'] != 0.027518792841406414)][['RECEIPTDATE', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['SHIPDATE'] <= '1998-10-30') | (lineitem['DISCOUNT'] >= 0.057512789608389896)][['SHIPDATE', 'SHIPMODE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_CUSTKEY'] <= 20) & (customer['C_NATIONKEY'] < 20) & (customer['C_COMMENT'] == 'u')][['MKTSEGMENT', 'C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'C_ACCTBAL']].merge(orders[(orders['ORDERSTATUS'].isin(['O', 'F', 'P'])) | (orders['O_CUSTKEY'] <= 135456)], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp[(partsupp['P_COMMENT'] != ' th') & (partsupp['SUPPLYCOST'] != 710.705280295025) & (partsupp['AVAILQTY'] < 4641)]

customer[['C_ACCTBAL', 'C_NAME']].merge(orders[(orders['O_CUSTKEY'] > 51983)][['O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING']))].merge(orders[['CLERK', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NAME']).agg('max', numeric_only=True)

customer[['C_NAME', 'C_ACCTBAL', 'C_CUSTKEY', 'C_COMMENT', 'MKTSEGMENT']].merge(orders[(orders['ORDERSTATUS'] == P)].merge(lineitem.merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM', '1-URGENT', '2-HIGH', '5-LOW']))].merge(lineitem[['QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_COMMENT'].str.startswith('s')) & (nation['N_COMMENT'] != 'r')].merge(region[(region['R_NAME'] == 'AFR') | (region['R_REGIONKEY'] <= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'C_NAME']).agg('min', numeric_only=True)

part[['P_PARTKEY', 'RETAILPRICE', 'CONTAINER', 'SIZE', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] < 2740) | (partsupp['SUPPLYCOST'] == 341.09594019759834)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'P_PARTKEY']).agg('count')

region[['R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_REGIONKEY'] >= 0)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] <= 1) & (nation['N_REGIONKEY'] != 1)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_NAME']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != '8')][['C_ADDRESS', 'C_NATIONKEY', 'C_COMMENT', 'C_NAME']].groupby(by=['C_COMMENT']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY', 'SHIPMODE', 'L_SUPPKEY', 'LINENUMBER', 'L_COMMENT']].merge(partsupp.merge(lineitem[(lineitem['RETURNFLAG'] != A) | (lineitem['QUANTITY'] <= 32)][['COMMITDATE', 'SHIPMODE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[['O_COMMENT']].groupby(by=['O_COMMENT']).agg('count')

customer[(customer['C_NAME'].str.startswith('C'))][['C_NATIONKEY']].merge(orders[(orders['CLERK'] == 'C') | (orders['SHIPPRIORITY'] >= 0)][['TOTALPRICE', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation.merge(customer[['C_ACCTBAL', 'C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'A') | (nation['N_COMMENT'] == 'v')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

nation[['N_NATIONKEY']].merge(supplier.merge(nation[(nation['N_NATIONKEY'] <= 18) & (nation['N_NATIONKEY'] == 22)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 108)], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

partsupp

part.merge(partsupp[(partsupp['P_COMMENT'] != 'u') & (partsupp['AVAILQTY'] > 4780)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE', 'HOUSEHOLD'])) & (customer['C_PHONE'] == '2') | (customer['C_CUSTKEY'] == 90) | (customer['C_NAME'] == 'C')][['C_PHONE', 'MKTSEGMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('l')) & (nation['N_NAME'] != 'R')].merge(supplier[(supplier['S_NAME'].str.startswith('S'))].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[['C_PHONE', 'C_ADDRESS', 'C_COMMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW', '4-NOT SPECIFIED', '3-MEDIUM']))], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE', 'C_ADDRESS']).agg('sum', numeric_only=True)

customer

region.merge(nation[(nation['N_COMMENT'] == 'y') & (nation['N_REGIONKEY'] == 3)][['N_NATIONKEY', 'N_REGIONKEY']].merge(customer[['C_CUSTKEY', 'C_ADDRESS', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 5) | (nation['N_REGIONKEY'] != 0)].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 1) | (nation['N_COMMENT'] != 'r')].merge(supplier[['S_ADDRESS', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NAME']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp.merge(lineitem[(lineitem['QUANTITY'] > 6) & (lineitem['L_ORDERKEY'] > 24)][['QUANTITY', 'DISCOUNT', 'RETURNFLAG', 'RECEIPTDATE']].merge(partsupp[(partsupp['P_COMMENT'] != 'b')][['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

lineitem[(lineitem['QUANTITY'] < 40) | (lineitem['LINESTATUS'] != O) & (lineitem['LINENUMBER'] < 3) | (lineitem['SHIPDATE'] != '1998-10-30')][['RECEIPTDATE', 'SHIPINSTRUCT', 'L_ORDERKEY', 'L_PARTKEY']].groupby(by=['L_ORDERKEY', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

lineitem[(lineitem['COMMITDATE'] <= '1998-10-16') & (lineitem['L_COMMENT'] == 'p')][['L_COMMENT', 'SHIPDATE', 'QUANTITY', 'RETURNFLAG']].merge(orders[(orders['ORDERDATE'] > '1998-07-21') & (orders['ORDERSTATUS'].isin(['P', 'O', 'F']))][['O_COMMENT', 'O_ORDERKEY']].merge(lineitem[['SHIPMODE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] != 63) | (customer['MKTSEGMENT'] == HOUSEHOLD)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

customer[['C_ACCTBAL', 'C_ADDRESS', 'MKTSEGMENT']]

nation[(nation['N_REGIONKEY'] > 1) & (nation['N_COMMENT'] == 'p') | (nation['N_COMMENT'].str.startswith('s')) | (nation['N_NATIONKEY'] >= 16)].merge(customer[(customer['C_NATIONKEY'] > 5)][['C_NATIONKEY', 'C_NAME', 'C_PHONE']].merge(nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

partsupp[(partsupp['SUPPLYCOST'] <= 466.76164665978786) | (partsupp['SUPPLYCOST'] >= 833.4393509270615)][['PS_SUPPKEY', 'P_COMMENT', 'PS_PARTKEY']].merge(supplier[['S_NATIONKEY']].merge(partsupp[['SUPPLYCOST']].merge(lineitem[(lineitem['DISCOUNT'] < 0.04828575708003372) & (lineitem['EXTENDEDPRICE'] == 6268.201151594116)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_ACCTBAL']].merge(orders[(orders['TOTALPRICE'] == 147080.9563015757)][['ORDERDATE', 'ORDERSTATUS']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] == 'K') | (nation['N_NAME'].str.startswith('C'))][['N_NATIONKEY']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['MKTSEGMENT'] == FURNITURE) & (customer['C_ADDRESS'] == 'x') | (customer['C_PHONE'].str.startswith('1')) | (customer['C_NAME'].str.startswith('C'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT', 'C_PHONE']].merge(orders[(orders['TOTALPRICE'] <= 18871.320084248873)][['ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']].merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[['O_CUSTKEY', 'ORDERSTATUS', 'O_COMMENT']].merge(lineitem[(lineitem['LINENUMBER'] < 2)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[(orders['ORDERSTATUS'] != O) & (orders['O_CUSTKEY'] > 86305) & (orders['ORDERDATE'] >= '1992-01-13') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))][['CLERK']].merge(lineitem[['SHIPMODE', 'L_SUPPKEY', 'RECEIPTDATE', 'DISCOUNT']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith(';')) | (partsupp['AVAILQTY'] == 3413)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp

nation.merge(customer[['C_ADDRESS', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_NAME'].str.startswith('S')) | (supplier['S_SUPPKEY'] <= 143)], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

lineitem[['COMMITDATE', 'LINESTATUS', 'SHIPMODE', 'L_ORDERKEY']].merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '2-HIGH']))][['CLERK', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[['ORDERPRIORITY']].merge(lineitem[['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier

part[['TYPE', 'PT_COMMENT']]

supplier[(supplier['S_NAME'] == 'S')].merge(partsupp[['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] == 22) | (lineitem['SHIPDATE'] > '1992-04-27')].merge(partsupp.merge(lineitem[(lineitem['L_SUPPKEY'] == 6881) | (lineitem['SHIPMODE'] == REG AIR)].merge(orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '2-HIGH', '4-NOT SPECIFIED'])) & (orders['ORDERSTATUS'] != O)][['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'ORDERPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation.merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] >= 22) | (nation['N_NAME'] != 'B') & (nation['N_NAME'] != 'M') & (nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[(supplier['S_PHONE'] != '3')].merge(nation[['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_CUSTKEY'] > 26) & (customer['MKTSEGMENT'] == MACHINERY)][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NAME'] != 'G')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] < 5822) & (partsupp['PS_SUPPKEY'] != 1504)].merge(lineitem[(lineitem['COMMITDATE'] == '1998-10-16') | (lineitem['L_PARTKEY'] == 108803)].merge(partsupp.merge(lineitem[['SHIPDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

customer[['C_COMMENT', 'C_ACCTBAL', 'C_PHONE', 'C_ADDRESS', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NAME']].merge(customer[['MKTSEGMENT', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE', 'C_ADDRESS']).agg('count')

part.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(part[['BRAND', 'P_NAME']].merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 177.96711894256603)][['AVAILQTY']].merge(lineitem[(lineitem['L_SUPPKEY'] == 3198) & (lineitem['SHIPDATE'] > '1998-10-30')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] < 1) & (nation['N_REGIONKEY'] < 2) | (nation['N_NATIONKEY'] != 19) | (nation['N_NATIONKEY'] != 0)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']]

lineitem[['L_PARTKEY', 'L_SUPPKEY']].merge(orders[(orders['SHIPPRIORITY'] < 0) & (orders['CLERK'] != 'C')].merge(lineitem[(lineitem['L_SUPPKEY'] == 154)].merge(partsupp[(partsupp['AVAILQTY'] == 5262)][['SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_SUPPKEY']].merge(part[(part['CONTAINER'].str.startswith('LG')) & (part['P_PARTKEY'] > 85)][['P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_PARTKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'] == 'M') | (nation['N_NAME'] == 'R')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('max', numeric_only=True)

nation.merge(customer[(customer['C_CUSTKEY'] < 33) & (customer['C_PHONE'].str.startswith('3'))][['C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_ADDRESS'] != 'V')], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[(region['R_COMMENT'].str.startswith('u')) | (region['R_COMMENT'] == 'u')].merge(nation[(nation['N_COMMENT'] != 't')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_COMMENT'].str.startswith('s'))].merge(supplier[['S_COMMENT']].merge(nation[(nation['N_COMMENT'] == 'v')][['N_REGIONKEY', 'N_NATIONKEY']].merge(customer.merge(orders[['ORDERSTATUS', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] != 20) & (nation['N_NAME'].str.startswith('V'))][['N_COMMENT']].merge(customer[(customer['C_NAME'] == 'C')][['MKTSEGMENT', 'C_ADDRESS']].merge(nation[(nation['N_NAME'] != 'B')].merge(supplier.merge(nation[['N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('max', numeric_only=True)

orders[(orders['O_ORDERKEY'] >= 454) | (orders['O_COMMENT'].str.startswith('the')) | (orders['O_ORDERKEY'] < 692)].merge(lineitem.merge(partsupp.merge(supplier.merge(partsupp.merge(lineitem[(lineitem['LINENUMBER'] != 4)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_CUSTKEY', 'O_COMMENT']).agg('min', numeric_only=True)

lineitem[['COMMITDATE', 'L_SUPPKEY', 'EXTENDEDPRICE', 'L_PARTKEY']].groupby(by=['EXTENDEDPRICE', 'L_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[['COMMITDATE', 'RETURNFLAG', 'SHIPINSTRUCT', 'SHIPMODE']]

customer[(customer['C_COMMENT'] != 'i') & (customer['C_CUSTKEY'] >= 80) | (customer['C_ACCTBAL'] > 9897.332786361123)].merge(nation[(nation['N_COMMENT'].str.startswith('u')) & (nation['N_COMMENT'] == 'n')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp[['PS_SUPPKEY', 'AVAILQTY']].merge(part[(part['BRAND'].isin(['Brand#53', 'Brand#23', 'Brand#52', 'Brand#55', 'Brand#54', 'Brand#43'])) & (part['CONTAINER'].str.startswith('MED'))], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NATIONKEY']].merge(nation[['N_NAME', 'N_COMMENT']].merge(customer[['C_PHONE']].merge(orders[['ORDERSTATUS', 'CLERK', 'O_ORDERKEY', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[['RETAILPRICE', 'P_PARTKEY', 'CONTAINER', 'PT_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 32.90568580150247)][['PS_PARTKEY']].merge(part[(part['RETAILPRICE'] < 1058.8241559135854)][['BRAND', 'RETAILPRICE', 'TYPE', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('min', numeric_only=True)

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL']].merge(partsupp[(partsupp['PS_PARTKEY'] != 31) | (partsupp['P_COMMENT'].str.startswith('t'))], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 498.2607980391677)][['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'].str.startswith('S')) | (part['P_NAME'] != 'cor')][['MFGR', 'P_NAME', 'PT_COMMENT', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY', 'S_ACCTBAL']).agg('min', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != 3-MEDIUM) & (orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['O_ORDERKEY'] >= 603) & (orders['CLERK'] == 'C')].merge(lineitem.merge(partsupp.merge(lineitem[['L_COMMENT', 'LINENUMBER']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem[['L_SUPPKEY', 'QUANTITY', 'L_COMMENT', 'L_ORDERKEY', 'DISCOUNT']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 14) | (partsupp['P_COMMENT'] == 'd')][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']].merge(lineitem[(lineitem['L_SUPPKEY'] < 6322) & (lineitem['SHIPMODE'].isin(['SHIP', 'AIR', 'RAIL', 'REG AIR', 'MAIL']))][['L_ORDERKEY', 'RETURNFLAG', 'QUANTITY']].merge(orders[(orders['ORDERDATE'] > '1998-07-21')][['CLERK', 'TOTALPRICE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_SUPPKEY', 'L_ORDERKEY']).agg('mean', numeric_only=True)

partsupp

lineitem[['SHIPINSTRUCT', 'RECEIPTDATE', 'DISCOUNT', 'COMMITDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] < 16)][['AVAILQTY', 'SUPPLYCOST']].merge(lineitem[(lineitem['LINENUMBER'] <= 3) | (lineitem['RECEIPTDATE'] < '1992-05-02')][['QUANTITY', 'DISCOUNT', 'RECEIPTDATE']].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == TAKE BACK RETURN) | (lineitem['LINESTATUS'] == O)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] != '1998-07-21')][['SHIPPRIORITY', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(lineitem[(lineitem['L_SUPPKEY'] > 2998)].merge(orders[(orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '3-MEDIUM']))][['TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_CUSTKEY', 'ORDERPRIORITY']).agg('count')

part[(part['MFGR'].isin(['Manufacturer#4', 'Manufacturer#2', 'Manufacturer#5', 'Manufacturer#3']))].merge(partsupp.merge(part.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['PT_COMMENT'] != 'w') | (part['MFGR'] == Manufacturer#5)].merge(partsupp[(partsupp['PS_PARTKEY'] != 44)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TYPE']).agg('sum', numeric_only=True)

part[(part['PT_COMMENT'].str.startswith('d'))][['TYPE', 'P_NAME', 'PT_COMMENT', 'CONTAINER', 'BRAND']]

supplier[(supplier['S_NATIONKEY'] == 7) | (supplier['S_NATIONKEY'] > 1) & (supplier['S_PHONE'] != '32-')][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']]

region[(region['R_COMMENT'] != 'l') | (region['R_REGIONKEY'] > 2) | (region['R_REGIONKEY'] == 3)].merge(nation[['N_NATIONKEY', 'N_COMMENT']].merge(region[['R_COMMENT', 'R_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

customer[['C_COMMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[(part['P_NAME'].str.startswith('t')) & (part['TYPE'] == 'S') & (part['CONTAINER'] != 'WRAP')]

region[(region['R_REGIONKEY'] < 0) | (region['R_REGIONKEY'] != 2) | (region['R_NAME'] == 'AFR') | (region['R_COMMENT'] == 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_REGIONKEY']].merge(customer.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('sum', numeric_only=True)

part[(part['CONTAINER'].str.startswith('WRAP')) | (part['SIZE'] >= 47) | (part['P_PARTKEY'] != 21)].merge(partsupp[['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 6894)][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[['RETURNFLAG', 'SHIPMODE', 'RECEIPTDATE']].merge(orders[['ORDERDATE', 'O_CUSTKEY', 'ORDERPRIORITY']].merge(customer[['C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] > 32)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('mean', numeric_only=True)

nation.merge(customer.merge(orders[['ORDERDATE', 'ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_NAME'] == 'C')][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[(part['SIZE'] != 7) & (part['P_PARTKEY'] < 107)][['MFGR', 'P_NAME']]

orders[['TOTALPRICE', 'CLERK']].groupby(by=['CLERK']).agg('min', numeric_only=True)

part[['MFGR', 'P_NAME', 'PT_COMMENT']]

orders[['CLERK', 'O_ORDERKEY', 'ORDERDATE', 'O_CUSTKEY', 'ORDERSTATUS']].merge(customer[(customer['C_CUSTKEY'] <= 27) | (customer['C_ACCTBAL'] < 3001.6568800664877)][['C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'] != '27-')][['C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('count')

customer[(customer['MKTSEGMENT'].isin(['MACHINERY'])) | (customer['C_NAME'] != 'C')].merge(nation[(nation['N_NATIONKEY'] < 10) & (nation['N_NATIONKEY'] < 10)][['N_REGIONKEY']].merge(customer[(customer['C_PHONE'] == '22-') | (customer['C_ADDRESS'].str.startswith('m'))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['O_COMMENT', 'TOTALPRICE', 'ORDERSTATUS', 'O_ORDERKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ACCTBAL', 'C_NATIONKEY']).agg('sum', numeric_only=True)

orders[(orders['O_ORDERKEY'] < 502) & (orders['O_CUSTKEY'] >= 111632) & (orders['O_CUSTKEY'] > 116897) | (orders['CLERK'] != 'C')].merge(customer[(customer['C_ACCTBAL'] > 5646.902702089515)][['C_COMMENT', 'C_NATIONKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'] == '25-') | (customer['C_ADDRESS'].str.startswith('J'))][['C_PHONE', 'C_NATIONKEY', 'C_COMMENT', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['QUANTITY'] != 49)][['TAX', 'COMMITDATE', 'L_PARTKEY', 'L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE', 'ORDERSTATUS']).agg('count')

partsupp.groupby(by=['P_COMMENT', 'AVAILQTY']).agg('min', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation.merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_NATIONKEY'] == 15)].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] > 16) & (nation['N_NAME'] == 'M')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

nation.merge(region.merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1998-11-06')][['TAX', 'RETURNFLAG', 'L_SUPPKEY', 'SHIPINSTRUCT', 'QUANTITY']].merge(partsupp[['PS_PARTKEY']].merge(lineitem[(lineitem['L_PARTKEY'] >= 16258)][['COMMITDATE', 'L_COMMENT', 'TAX']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['O_ORDERKEY'] >= 408)], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['O_CUSTKEY'] > 58659)][['CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

nation[(nation['N_REGIONKEY'] >= 2) & (nation['N_COMMENT'].str.startswith('c')) | (nation['N_NAME'].str.startswith('B')) & (nation['N_NAME'].str.startswith('P'))][['N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_COMMENT'] != ',') | (customer['C_ACCTBAL'] < 846.4039498585464)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

customer[(customer['C_ADDRESS'] != 'F') & (customer['C_CUSTKEY'] != 47)].groupby(by=['C_PHONE']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'].str.startswith('g')) & (customer['C_NAME'] != 'C') & (customer['C_PHONE'] == '22-') | (customer['MKTSEGMENT'] == FURNITURE)].groupby(by=['MKTSEGMENT']).agg('max', numeric_only=True)

partsupp[['SUPPLYCOST', 'P_COMMENT']].groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

region.merge(nation[(nation['N_REGIONKEY'] == 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.merge(region[['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_REGIONKEY'] >= 1)].merge(nation[(nation['N_COMMENT'] != 'e') & (nation['N_COMMENT'].str.startswith('i'))][['N_NATIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

orders[(orders['TOTALPRICE'] > 342093.89551530086)][['CLERK', 'SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS']].merge(lineitem[['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

orders[['CLERK', 'O_ORDERKEY', 'O_CUSTKEY']].groupby(by=['O_CUSTKEY', 'O_ORDERKEY']).agg('max', numeric_only=True)

supplier.merge(nation[(nation['N_NAME'].str.startswith('P'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer.merge(nation[['N_COMMENT']].merge(customer[(customer['C_ACCTBAL'] != 2638.418688493099) & (customer['C_NAME'] == 'C')][['C_PHONE', 'C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']].merge(orders[(orders['ORDERSTATUS'] != F)].merge(lineitem.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'MKTSEGMENT']).agg('max', numeric_only=True)

partsupp[['PS_SUPPKEY']].merge(lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02')][['L_COMMENT', 'RECEIPTDATE', 'SHIPMODE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02')][['L_SUPPKEY', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['LINESTATUS'] != F)].merge(partsupp[(partsupp['P_COMMENT'] != 'd') & (partsupp['P_COMMENT'].str.startswith('i'))][['AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

partsupp.merge(part[(part['BRAND'].isin(['Brand#11', 'Brand#32', 'Brand#41'])) & (part['BRAND'].isin(['Brand#44', 'Brand#41', 'Brand#22', 'Brand#14', 'Brand#51', 'Brand#23', 'Brand#31', 'Brand#12', 'Brand#21', 'Brand#53', 'Brand#55', 'Brand#33', 'Brand#25', 'Brand#42', 'Brand#45', 'Brand#11', 'Brand#35', 'Brand#43', 'Brand#32', 'Brand#52', 'Brand#24', 'Brand#54', 'Brand#13']))][['PT_COMMENT', 'SIZE', 'BRAND']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('bli'))][['PS_SUPPKEY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[['S_NAME']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME']].merge(partsupp[['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('min', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'r')][['SHIPDATE', 'COMMITDATE', 'L_PARTKEY', 'L_SUPPKEY']].merge(partsupp[['PS_SUPPKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders.merge(customer[(customer['C_NATIONKEY'] == 22)].merge(nation[['N_REGIONKEY']].merge(supplier[(supplier['S_NAME'] == 'S') & (supplier['S_NAME'] != 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_PARTKEY']).agg('min', numeric_only=True)

orders[(orders['SHIPPRIORITY'] < 0) & (orders['O_COMMENT'].str.startswith('g'))].merge(customer[(customer['MKTSEGMENT'] != FURNITURE) & (customer['MKTSEGMENT'] == MACHINERY)][['C_CUSTKEY', 'C_COMMENT', 'C_PHONE']].merge(orders[(orders['CLERK'] != 'C')][['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['TOTALPRICE']).agg('mean', numeric_only=True)

nation.merge(region[(region['R_REGIONKEY'] == 2)][['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation[(nation['N_COMMENT'] == 's') | (nation['N_NATIONKEY'] < 17) & (nation['N_NAME'] == 'P')][['N_NATIONKEY', 'N_REGIONKEY']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] != 9017) & (lineitem['LINENUMBER'] < 1) | (lineitem['TAX'] >= 0.009518208635350174) & (lineitem['L_SUPPKEY'] >= 865)].merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[['S_COMMENT', 'S_NAME', 'S_PHONE', 'S_NATIONKEY']].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY']).agg('max', numeric_only=True)

customer

part[(part['PT_COMMENT'] == 'n') & (part['PT_COMMENT'].str.startswith(' fi'))][['MFGR', 'PT_COMMENT', 'SIZE', 'BRAND']].merge(partsupp[(partsupp['P_COMMENT'] != 'the') & (partsupp['AVAILQTY'] >= 4328)][['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT', 'AVAILQTY']].merge(part.merge(partsupp[(partsupp['AVAILQTY'] >= 1123)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] > 5119.203142691106)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(part.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 302)][['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(supplier[(supplier['S_COMMENT'] == 'k')][['S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 3113) | (partsupp['PS_SUPPKEY'] >= 2214)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_ACCTBAL', 'S_SUPPKEY', 'S_PHONE']].merge(nation[['N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 788.8786220217743) | (partsupp['PS_PARTKEY'] < 27)][['PS_SUPPKEY']].merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[['QUANTITY', 'L_ORDERKEY', 'EXTENDEDPRICE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['L_PARTKEY'] != 99186)][['RETURNFLAG']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['DISCOUNT']], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['SUPPLYCOST']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']].merge(customer[(customer['C_NAME'].str.startswith('C'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp.groupby(by=['PS_PARTKEY']).agg('count')

orders[['ORDERSTATUS', 'CLERK', 'ORDERPRIORITY']]

part[(part['SIZE'] > 48) & (part['P_PARTKEY'] != 7) | (part['P_PARTKEY'] >= 49)].merge(partsupp[(partsupp['SUPPLYCOST'] == 266.52389810741636) | (partsupp['AVAILQTY'] < 2518)].merge(part[(part['TYPE'] == 'P') & (part['P_PARTKEY'] != 127)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] < 3810) | (partsupp['AVAILQTY'] != 2721)].merge(part[(part['BRAND'].isin(['Brand#13', 'Brand#23', 'Brand#42', 'Brand#31', 'Brand#35', 'Brand#44', 'Brand#25', 'Brand#24', 'Brand#21', 'Brand#15', 'Brand#22', 'Brand#32', 'Brand#52', 'Brand#53', 'Brand#12', 'Brand#41', 'Brand#33', 'Brand#51', 'Brand#43', 'Brand#34'])) | (part['CONTAINER'] == 'WRAP')][['SIZE']].merge(partsupp[['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer[(customer['C_PHONE'] != '3')][['C_NATIONKEY', 'C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[(region['R_COMMENT'] == 'h') | (region['R_REGIONKEY'] != 2)].merge(nation.merge(region[(region['R_COMMENT'] != 'g') & (region['R_NAME'] == 'M')][['R_NAME']].merge(nation[(nation['N_REGIONKEY'] == 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'l') & (nation['N_REGIONKEY'] < 3)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_SUPPKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('count')

supplier.merge(partsupp[(partsupp['AVAILQTY'] == 653)].merge(supplier[(supplier['S_ACCTBAL'] != 4467.926673457636)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_REGIONKEY'] != 3) | (nation['N_COMMENT'] != 'l')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'i')].merge(supplier[(supplier['S_ADDRESS'] != '3')][['S_COMMENT', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_NAME'] == 'S')]

lineitem[(lineitem['TAX'] <= 0.05096510503217602) | (lineitem['L_SUPPKEY'] <= 8231) & (lineitem['RETURNFLAG'] != A) & (lineitem['SHIPMODE'] == AIR)].merge(partsupp[['P_COMMENT', 'AVAILQTY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 6047) & (partsupp['PS_SUPPKEY'] != 5431)], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

customer[['C_ADDRESS', 'C_COMMENT']].merge(nation.merge(customer[['C_ADDRESS', 'C_ACCTBAL', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] != 17) | (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[(part['RETAILPRICE'] < 1013.2135175677554) & (part['MFGR'] != Manufacturer#4) & (part['PT_COMMENT'].str.startswith('r')) & (part['CONTAINER'] == 'LG')][['CONTAINER', 'P_NAME']].merge(partsupp[(partsupp['P_COMMENT'] != 'h')][['SUPPLYCOST']].merge(part[(part['TYPE'] == 'SMA')][['BRAND', 'P_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] != 7318)][['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[(lineitem['DISCOUNT'] == 0.04242318599722422) | (lineitem['LINENUMBER'] <= 5)].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 2925)][['P_COMMENT', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] > 616.0247726123229) & (partsupp['P_COMMENT'] == 'k')][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem[(lineitem['QUANTITY'] > 12)][['LINESTATUS', 'QUANTITY', 'LINENUMBER', 'L_ORDERKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('max', numeric_only=True)

lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD) | (lineitem['L_COMMENT'] == 'j')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['TOTALPRICE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[['S_ACCTBAL', 'S_SUPPKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] <= 941.0039396693894)][['CONTAINER', 'SIZE', 'PT_COMMENT', 'RETAILPRICE']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 't') | (partsupp['SUPPLYCOST'] > 746.7007677086286)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_SUPPKEY'] == 42) | (supplier['S_ACCTBAL'] < 6600.036043787593) | (supplier['S_ACCTBAL'] < 2862.003380995571) | (supplier['S_PHONE'].str.startswith('26-'))].merge(partsupp.merge(part[(part['P_NAME'] != 'c') & (part['P_PARTKEY'] > 192)][['SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_PHONE']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] != 0) | (region['R_REGIONKEY'] >= 0)]

customer[['C_NATIONKEY', 'MKTSEGMENT', 'C_ACCTBAL']].groupby(by=['C_ACCTBAL', 'MKTSEGMENT']).agg('max', numeric_only=True)

customer[['C_CUSTKEY']].merge(orders[(orders['ORDERSTATUS'] != P)][['CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

orders[['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] < 54) & (lineitem['RECEIPTDATE'] > '1998-11-06')][['LINESTATUS', 'RETURNFLAG', 'SHIPINSTRUCT', 'COMMITDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_CUSTKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY', 'ORDERSTATUS']).agg('count')

supplier[(supplier['S_ADDRESS'] == 'I') & (supplier['S_ADDRESS'] == '9') & (supplier['S_COMMENT'] != 'h')][['S_NATIONKEY', 'S_SUPPKEY', 'S_COMMENT', 'S_ADDRESS']].merge(partsupp[(partsupp['P_COMMENT'] == 't')], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_NAME'] != 'U')].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 701.6368616925892) & (partsupp['PS_SUPPKEY'] > 1013)][['PS_SUPPKEY', 'P_COMMENT']].merge(lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['PS_PARTKEY'] < 3) | (partsupp['PS_SUPPKEY'] <= 951)].merge(lineitem[(lineitem['EXTENDEDPRICE'] > 2982.5597728633747)][['SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[(lineitem['L_PARTKEY'] <= 48152) & (lineitem['SHIPDATE'] >= '1992-04-27')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] >= 2) & (nation['N_NATIONKEY'] > 10)]

lineitem.merge(orders[(orders['SHIPPRIORITY'] < 0)][['O_ORDERKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_PARTKEY'] != 27) & (partsupp['SUPPLYCOST'] > 769.1570078706368)][['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem[['SHIPMODE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERPRIORITY', 'TOTALPRICE', 'ORDERDATE']].merge(lineitem[(lineitem['COMMITDATE'] != '1992-05-15') & (lineitem['L_ORDERKEY'] < 93)][['LINESTATUS', 'L_PARTKEY', 'L_ORDERKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['RECEIPTDATE', 'SHIPDATE']).agg('min', numeric_only=True)

orders[(orders['TOTALPRICE'] <= 131443.35660686082) & (orders['O_CUSTKEY'] < 35970)][['O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].groupby(by=['O_COMMENT', 'O_ORDERKEY']).agg('sum', numeric_only=True)

part[(part['P_PARTKEY'] != 36) | (part['P_NAME'] != 'c') | (part['SIZE'] > 31) | (part['CONTAINER'] == 'JUMBO')][['BRAND', 'MFGR']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('v'))], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'BRAND']).agg('count')

part.merge(partsupp[(partsupp['P_COMMENT'] == '.') & (partsupp['P_COMMENT'] != 'g')][['AVAILQTY']].merge(part[(part['P_NAME'].str.startswith('blu'))], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] <= 7133) & (partsupp['PS_PARTKEY'] < 14) & (partsupp['SUPPLYCOST'] == 735.3919869347335) & (partsupp['SUPPLYCOST'] != 944.6764459113715)].groupby(by=['SUPPLYCOST', 'AVAILQTY']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] > 7369.382165635297)][['S_NATIONKEY', 'S_PHONE', 'S_NAME']].groupby(by=['S_NATIONKEY']).agg('count')

part.merge(partsupp[(partsupp['PS_SUPPKEY'] == 1096)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['BRAND'].isin(['Brand#34', 'Brand#51', 'Brand#43', 'Brand#22', 'Brand#54', 'Brand#25', 'Brand#45', 'Brand#41', 'Brand#31', 'Brand#52', 'Brand#53', 'Brand#35', 'Brand#11', 'Brand#14', 'Brand#55', 'Brand#23', 'Brand#44', 'Brand#13', 'Brand#21', 'Brand#24', 'Brand#15', 'Brand#32', 'Brand#42', 'Brand#33']))][['MFGR', 'BRAND', 'RETAILPRICE', 'SIZE']].merge(partsupp.merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] > 15) & (partsupp['SUPPLYCOST'] != 328.11791106705454)].merge(lineitem[(lineitem['LINESTATUS'] == O) & (lineitem['L_COMMENT'] == 'f')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('E'))][['S_ACCTBAL', 'S_ADDRESS', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']]

part.groupby(by=['P_NAME']).agg('mean', numeric_only=True)

part[(part['PT_COMMENT'] == 'd') & (part['P_PARTKEY'] >= 90) & (part['CONTAINER'] == 'JUMBO') | (part['PT_COMMENT'].str.startswith('i'))][['P_NAME', 'TYPE']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4510) & (partsupp['AVAILQTY'] != 67)][['PS_PARTKEY', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] != 3432) | (partsupp['SUPPLYCOST'] <= 404.99735630856384)][['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] >= 6860)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[['SHIPPRIORITY']]

orders[(orders['SHIPPRIORITY'] >= 0) & (orders['SHIPPRIORITY'] < 0)][['O_CUSTKEY', 'O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'SHIPPRIORITY']].merge(customer[(customer['C_ADDRESS'].str.startswith('x')) | (customer['C_PHONE'] != '25-')][['MKTSEGMENT', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[['P_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] != 5940) | (partsupp['PS_PARTKEY'] != 24)][['P_COMMENT']].merge(supplier[['S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_PARTKEY']).agg('count')

nation[(nation['N_REGIONKEY'] != 3) | (nation['N_REGIONKEY'] >= 2)][['N_COMMENT']].merge(customer[(customer['C_PHONE'] == '25-')], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

region.merge(nation[(nation['N_COMMENT'] != 't')][['N_NATIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] <= 164)][['S_PHONE', 'S_NAME', 'S_ADDRESS', 'S_NATIONKEY']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']].merge(lineitem[['DISCOUNT', 'SHIPINSTRUCT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] > 23)][['S_NAME', 'S_NATIONKEY', 'S_SUPPKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 940) | (partsupp['PS_PARTKEY'] > 24)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['RETURNFLAG'] != A) & (lineitem['L_PARTKEY'] > 2064)][['SHIPDATE', 'LINESTATUS', 'L_PARTKEY', 'DISCOUNT']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['DISCOUNT'] > 0.03281749159101647)].merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERSTATUS'].isin(['P']))][['CLERK']].merge(lineitem[(lineitem['L_PARTKEY'] != 37501) & (lineitem['COMMITDATE'] < '1992-05-15')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

orders[(orders['ORDERDATE'] == '1998-07-21') | (orders['O_CUSTKEY'] != 49210) | (orders['O_ORDERKEY'] != 85)][['O_ORDERKEY', 'SHIPPRIORITY', 'O_COMMENT']].merge(customer.merge(orders[['ORDERSTATUS', 'SHIPPRIORITY', 'O_ORDERKEY', 'O_COMMENT']].merge(customer[(customer['C_ACCTBAL'] <= 5813.950216637882)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['CONTAINER'] != 'MED')][['BRAND', 'P_PARTKEY', 'SIZE', 'RETAILPRICE', 'P_NAME']]

nation[(nation['N_COMMENT'] != 'r') & (nation['N_NATIONKEY'] == 10) | (nation['N_NAME'] != 'F')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('min', numeric_only=True)

customer

supplier.merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] != 5)][['N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] >= -497.47564355341257)][['S_NATIONKEY']].merge(nation[(nation['N_COMMENT'] != 'u')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_REGIONKEY'] <= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(supplier.merge(partsupp.merge(supplier[['S_COMMENT', 'S_NAME', 'S_ADDRESS', 'S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith(','))].merge(orders[(orders['CLERK'].str.startswith('C'))][['O_CUSTKEY', 'O_ORDERKEY']].merge(customer.merge(nation[['N_NAME']].merge(region[['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TAX', 'LINESTATUS']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'].str.startswith('o')) & (lineitem['L_PARTKEY'] <= 142483) | (lineitem['SHIPINSTRUCT'] == DELIVER IN PERSON) & (lineitem['SHIPINSTRUCT'] == COLLECT COD)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 40)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 948.2917394948046)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(lineitem[['LINESTATUS', 'SHIPMODE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_COMMENT'] == 'h') & (region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('h'))][['R_NAME']].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[(nation['N_NAME'] != 'A') & (nation['N_NAME'] != 'A') & (nation['N_NATIONKEY'] > 0)].merge(supplier.merge(partsupp[(partsupp['P_COMMENT'] == 'a') | (partsupp['P_COMMENT'] == 'bli')][['P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_NATIONKEY'] == 18)], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

orders[['O_COMMENT']].merge(lineitem.merge(partsupp.merge(part[['TYPE', 'BRAND']].merge(partsupp.merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] < 365.0747965071415) & (partsupp['AVAILQTY'] >= 9057)][['SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[(partsupp['AVAILQTY'] > 1201) & (partsupp['P_COMMENT'] == 'l')]

part[['RETAILPRICE']]

partsupp.merge(part[(part['P_NAME'].str.startswith('f')) | (part['P_PARTKEY'] >= 74)][['BRAND', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

supplier[['S_ACCTBAL', 'S_NAME', 'S_NATIONKEY', 'S_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] != '.')].merge(lineitem[['DISCOUNT']].merge(partsupp[(partsupp['SUPPLYCOST'] != 51.21617258057169)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_REGIONKEY'] != 2) | (nation['N_COMMENT'].str.startswith('l'))].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_SUPPKEY', 'S_ACCTBAL', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '5-LOW'])) | (orders['O_CUSTKEY'] != 103275)][['SHIPPRIORITY']]

supplier[['S_COMMENT', 'S_SUPPKEY']]

orders.merge(lineitem[(lineitem['SHIPDATE'] <= '1992-04-27')][['SHIPDATE', 'L_PARTKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation[(nation['N_NAME'] == 'V')].merge(customer[(customer['C_CUSTKEY'] < 72)][['MKTSEGMENT', 'C_COMMENT', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

nation[(nation['N_NATIONKEY'] <= 13)].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('u')) & (region['R_REGIONKEY'] == 1)][['R_NAME', 'R_COMMENT']].merge(nation[['N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[(region['R_COMMENT'] != 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'].str.startswith('M')) | (nation['N_COMMENT'].str.startswith('a')) & (nation['N_COMMENT'] == 'e')]

orders

region.groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

part[(part['BRAND'] != Brand#11)][['TYPE', 'CONTAINER', 'P_PARTKEY', 'PT_COMMENT', 'SIZE']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem[(lineitem['L_ORDERKEY'] != 17)].merge(orders[(orders['O_COMMENT'].str.startswith('k'))][['ORDERDATE']].merge(lineitem[(lineitem['SHIPMODE'] != TRUCK) | (lineitem['RETURNFLAG'].isin(['R', 'N', 'A']))][['TAX', 'SHIPDATE', 'L_SUPPKEY', 'SHIPMODE']].merge(orders[(orders['ORDERSTATUS'] != P)][['SHIPPRIORITY', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'x')], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['CONTAINER', 'P_PARTKEY']).agg('max', numeric_only=True)

customer.merge(orders.merge(lineitem.merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['ORDERSTATUS'] == O)][['SHIPPRIORITY', 'ORDERPRIORITY', 'TOTALPRICE']].merge(customer[(customer['MKTSEGMENT'] == AUTOMOBILE)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_ORDERKEY'] > 386)], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(lineitem[['TAX']].merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(lineitem[['SHIPMODE', 'EXTENDEDPRICE', 'LINENUMBER', 'L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] < '1992-05-02')][['LINENUMBER', 'SHIPINSTRUCT', 'L_COMMENT', 'QUANTITY']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 1528)][['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(lineitem.merge(partsupp.merge(lineitem[['COMMITDATE', 'EXTENDEDPRICE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 755.0938438903662) & (partsupp['PS_PARTKEY'] < 9)][['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_ORDERKEY']).agg('max', numeric_only=True)

part.merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_ACCTBAL'] == 6042.801326922855) & (supplier['S_ADDRESS'] == 'Z')].merge(partsupp[(partsupp['P_COMMENT'] == 'y') | (partsupp['P_COMMENT'] != 'bli')][['P_COMMENT', 'SUPPLYCOST']].merge(lineitem[(lineitem['L_SUPPKEY'] >= 9865)].merge(orders.merge(customer[['C_NATIONKEY', 'C_ADDRESS', 'C_PHONE']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[(region['R_NAME'].str.startswith('AME')) & (region['R_COMMENT'] == 'l') & (region['R_NAME'] == 'E') & (region['R_NAME'] == 'AME')][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 1)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] == 2)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(customer[['C_ACCTBAL', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_ACCTBAL'] != 7995.052027343273) | (supplier['S_PHONE'].str.startswith('26-'))].merge(nation[(nation['N_NATIONKEY'] == 17)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(customer[(customer['C_ADDRESS'].str.startswith('P'))][['C_CUSTKEY', 'C_ACCTBAL', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(part[['RETAILPRICE', 'PT_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 14.90920836030363) & (partsupp['PS_SUPPKEY'] != 4226)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] == 7)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NATIONKEY', 'S_PHONE']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']]

lineitem.merge(orders.merge(customer[(customer['C_PHONE'] != '18-') | (customer['MKTSEGMENT'] != AUTOMOBILE)][['C_PHONE', 'C_ADDRESS', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[(supplier['S_PHONE'] == '1')][['S_NAME', 'S_ADDRESS', 'S_PHONE', 'S_SUPPKEY', 'S_COMMENT']].merge(nation.merge(region[['R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

region.merge(nation[(nation['N_REGIONKEY'] < 3) & (nation['N_NAME'] == 'V')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'n')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region[['R_NAME']].merge(nation[['N_NAME', 'N_REGIONKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 6106.024057936619) & (supplier['S_NATIONKEY'] > 19)][['S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'U') | (nation['N_COMMENT'] != 's')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders.merge(customer[['C_CUSTKEY', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem.merge(partsupp[(partsupp['AVAILQTY'] < 8059)][['PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

supplier[(supplier['S_PHONE'].str.startswith('26-')) & (supplier['S_ACCTBAL'] != 5687.420797044898) | (supplier['S_COMMENT'] == 'the')][['S_ACCTBAL', 'S_COMMENT', 'S_SUPPKEY', 'S_NATIONKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[(lineitem['L_PARTKEY'] != 8888)].merge(orders[(orders['ORDERDATE'] < '1992-01-13')].merge(customer[(customer['C_COMMENT'] == 'q')].merge(orders[(orders['SHIPPRIORITY'] <= 0) & (orders['TOTALPRICE'] > 134632.4958220887)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_COMMENT']).agg('count')

customer.merge(orders[(orders['CLERK'] != 'C')][['ORDERPRIORITY', 'O_COMMENT', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer[(customer['C_COMMENT'] != 'c') & (customer['MKTSEGMENT'].isin(['FURNITURE', 'MACHINERY', 'BUILDING', 'HOUSEHOLD']))].merge(nation[(nation['N_REGIONKEY'] < 1)][['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] != 'S')][['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL']).agg('sum', numeric_only=True)

nation.merge(customer[(customer['C_PHONE'].str.startswith('25-')) | (customer['C_NAME'].str.startswith('C'))], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] == 66)][['CONTAINER']].groupby(by=['CONTAINER']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'n') & (nation['N_NAME'].str.startswith('G'))][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] < 9439.474181257017)].merge(partsupp[['SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] != 174)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(customer[(customer['C_NAME'] == 'C')][['C_COMMENT', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'u')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

partsupp[(partsupp['AVAILQTY'] == 8648) & (partsupp['PS_SUPPKEY'] < 2769)].merge(lineitem[(lineitem['L_ORDERKEY'] < 102) | (lineitem['L_PARTKEY'] > 190928)][['RECEIPTDATE', 'TAX', 'COMMITDATE']].merge(orders[['O_COMMENT', 'O_CUSTKEY', 'ORDERPRIORITY', 'SHIPPRIORITY']].merge(lineitem[['LINENUMBER', 'RETURNFLAG']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(supplier[(supplier['S_PHONE'] != '1')].merge(nation[(nation['N_NAME'].str.startswith('U')) | (nation['N_NAME'] != 'R')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem.merge(partsupp.merge(supplier.merge(partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) | (partsupp['P_COMMENT'] == 'd')].merge(lineitem[['L_COMMENT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY', 'PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[(partsupp['AVAILQTY'] <= 8808) & (partsupp['PS_SUPPKEY'] >= 7031)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] != 'bis')][['TYPE', 'P_NAME']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('r')) | (partsupp['PS_SUPPKEY'] == 5406)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_NAME'].str.startswith('A')) & (region['R_COMMENT'].str.startswith('h')) | (region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] == 'y')][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] < 49) & (customer['C_CUSTKEY'] > 78)][['C_CUSTKEY', 'C_ADDRESS']].merge(orders.merge(lineitem[(lineitem['SHIPDATE'] < '1992-04-27')], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '3-MEDIUM', '5-LOW', '4-NOT SPECIFIED', '1-URGENT'])) & (orders['CLERK'] == 'C')][['TOTALPRICE', 'ORDERPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp.merge(supplier[(supplier['S_NAME'] != 'S')].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1933) & (partsupp['PS_PARTKEY'] >= 7)][['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] == F) | (orders['ORDERSTATUS'].isin(['O', 'P'])) & (orders['ORDERDATE'] >= '1992-01-13') | (orders['ORDERDATE'] > '1998-07-21')]

orders[(orders['TOTALPRICE'] < 118414.20768262027) & (orders['ORDERSTATUS'] == O) & (orders['ORDERDATE'] > '1992-01-13') & (orders['ORDERPRIORITY'].isin(['1-URGENT', '3-MEDIUM', '5-LOW', '2-HIGH']))].merge(lineitem[(lineitem['EXTENDEDPRICE'] <= 16344.504208747729) | (lineitem['RECEIPTDATE'] != '1998-11-06')][['QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_COMMENT'] == 'e')][['C_COMMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['QUANTITY'] > 10)][['COMMITDATE', 'TAX', 'RETURNFLAG']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders.merge(customer[(customer['C_ADDRESS'] == 'j')][['C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['TAX']).agg('min', numeric_only=True)

orders[['CLERK', 'ORDERPRIORITY', 'SHIPPRIORITY', 'ORDERDATE', 'O_COMMENT']].merge(lineitem[(lineitem['TAX'] == 0.06557402295528073)][['L_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i'))][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[['RECEIPTDATE', 'COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE']).agg('count')

part[['P_NAME', 'BRAND', 'MFGR']].merge(partsupp[(partsupp['PS_SUPPKEY'] != 5703)][['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[(supplier['S_ACCTBAL'] > 8990.66460839521)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('max', numeric_only=True)

supplier.merge(partsupp[(partsupp['SUPPLYCOST'] == 549.3365040441455) & (partsupp['PS_PARTKEY'] > 13)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY', 'S_ACCTBAL']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'C_PHONE']].groupby(by=['C_CUSTKEY', 'C_PHONE']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'] == '25-')].merge(orders[['SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[['MKTSEGMENT', 'C_ADDRESS']].merge(orders[(orders['CLERK'] == 'C') & (orders['TOTALPRICE'] == 14471.59197418685)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_PHONE']).agg('sum', numeric_only=True)

region[(region['R_NAME'] == 'AFR')].merge(nation.merge(region[['R_REGIONKEY']].merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

region.merge(nation[(nation['N_REGIONKEY'] != 2)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_COMMENT'].str.startswith('y'))].merge(nation[['N_NAME']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'V') | (nation['N_COMMENT'].str.startswith('c'))].merge(supplier[(supplier['S_NATIONKEY'] >= 7)].merge(nation[['N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

partsupp[['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier[['S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

customer[['C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(nation[(nation['N_NAME'].str.startswith('C')) & (nation['N_NAME'] != 'E')][['N_REGIONKEY']].merge(supplier[(supplier['S_NATIONKEY'] <= 6) | (supplier['S_NATIONKEY'] > 16)][['S_ACCTBAL', 'S_COMMENT', 'S_NATIONKEY', 'S_NAME']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['RETURNFLAG'] == N) | (lineitem['L_COMMENT'].str.startswith(' ')) & (lineitem['SHIPMODE'].isin(['FOB', 'AIR', 'RAIL']))].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3947) & (partsupp['PS_PARTKEY'] != 38)][['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(customer[(customer['C_CUSTKEY'] > 53)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

partsupp

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation.merge(customer[(customer['C_ADDRESS'].str.startswith('b'))][['C_CUSTKEY', 'MKTSEGMENT', 'C_NAME', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'n')][['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] == 3)].merge(supplier[['S_NATIONKEY', 'S_SUPPKEY']].merge(nation[['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('sum', numeric_only=True)

part[(part['BRAND'].isin(['Brand#13', 'Brand#53', 'Brand#14', 'Brand#23', 'Brand#15', 'Brand#11', 'Brand#51', 'Brand#21', 'Brand#22', 'Brand#31', 'Brand#25', 'Brand#32', 'Brand#44'])) | (part['TYPE'] == 'SMA') | (part['BRAND'].isin(['Brand#43', 'Brand#41', 'Brand#33', 'Brand#31', 'Brand#24', 'Brand#34'])) & (part['MFGR'].isin(['Manufacturer#1']))][['CONTAINER', 'RETAILPRICE', 'TYPE', 'P_NAME', 'PT_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 144.57042838154902) & (partsupp['PS_SUPPKEY'] >= 4526)].merge(part[['RETAILPRICE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY']].merge(part[(part['CONTAINER'] != 'JUMBO')][['P_PARTKEY']].merge(partsupp[(partsupp['P_COMMENT'] != 'y') | (partsupp['SUPPLYCOST'] != 609.3626497925133)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[(partsupp['PS_PARTKEY'] == 9) & (partsupp['PS_SUPPKEY'] != 1634) & (partsupp['PS_SUPPKEY'] < 511)].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN'])) | (lineitem['RECEIPTDATE'] <= '1998-11-06')].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['RETURNFLAG'].isin(['A', 'R', 'N'])) & (lineitem['L_ORDERKEY'] != 183)][['EXTENDEDPRICE', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

supplier.merge(nation[(nation['N_NAME'] != 'U') | (nation['N_NAME'] == 'P')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY']].merge(customer[['C_NATIONKEY', 'C_PHONE', 'C_COMMENT']].merge(orders[(orders['O_ORDERKEY'] >= 331) & (orders['TOTALPRICE'] <= 8481.089223238452)].merge(lineitem[(lineitem['L_SUPPKEY'] < 2367)].merge(partsupp[(partsupp['SUPPLYCOST'] != 768.6275430878385)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '3')][['S_NAME', 'S_ACCTBAL', 'S_NATIONKEY', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

customer

part[(part['RETAILPRICE'] >= 958.7673168177257)][['RETAILPRICE', 'TYPE', 'P_PARTKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 407.0451020535144)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem[(lineitem['L_SUPPKEY'] < 2427)].merge(orders[(orders['ORDERDATE'] != '1998-07-21') & (orders['O_CUSTKEY'] > 109520)][['ORDERSTATUS', 'O_CUSTKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 860.2012745872244) | (partsupp['AVAILQTY'] <= 2855)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['O_COMMENT'].str.startswith('d')) | (orders['O_COMMENT'].str.startswith('z'))][['ORDERPRIORITY', 'ORDERDATE', 'TOTALPRICE', 'O_COMMENT', 'ORDERSTATUS']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['EXTENDEDPRICE'] >= 86566.22812422301)][['QUANTITY']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'DELIVER IN PERSON'])) | (lineitem['L_COMMENT'] != 'd')][['SHIPDATE', 'L_PARTKEY', 'L_ORDERKEY', 'LINENUMBER']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != TAKE BACK RETURN)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY', 'ORDERSTATUS']).agg('mean', numeric_only=True)

lineitem[['QUANTITY', 'SHIPINSTRUCT', 'LINESTATUS', 'L_ORDERKEY']].merge(partsupp[(partsupp['P_COMMENT'] == 'l')][['PS_PARTKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != DELIVER IN PERSON) | (lineitem['LINESTATUS'] != O)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

orders.merge(customer.merge(orders.merge(customer[(customer['C_NATIONKEY'] > 19) & (customer['MKTSEGMENT'].isin(['BUILDING', 'AUTOMOBILE', 'FURNITURE', 'MACHINERY']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['DISCOUNT'] == 0.02142348374409131) | (lineitem['L_COMMENT'] == 'o')][['EXTENDEDPRICE', 'COMMITDATE', 'QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(orders[(orders['SHIPPRIORITY'] == 0)][['ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('v')) & (partsupp['P_COMMENT'] == 'n')]

lineitem.merge(partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] == 21521.981930155238) | (lineitem['L_SUPPKEY'] != 2107)].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_PHONE', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_PHONE'] != '18-') & (customer['C_ACCTBAL'] <= 4930.847350555177)].merge(orders[(orders['CLERK'] != 'C')], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 3795)][['PS_SUPPKEY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_PARTKEY', 'L_ORDERKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'n') | (lineitem['DISCOUNT'] <= 0.004275271246093326) & (lineitem['EXTENDEDPRICE'] <= 35727.202501460306) | (lineitem['L_ORDERKEY'] < 155)][['SHIPINSTRUCT']].merge(partsupp[['AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPINSTRUCT']).agg('mean', numeric_only=True)

region.merge(nation[(nation['N_NATIONKEY'] < 22) & (nation['N_NATIONKEY'] <= 0)].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_PHONE', 'C_NAME']].merge(nation[(nation['N_NAME'] == 'R')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer.merge(orders[(orders['TOTALPRICE'] != 277339.3361094613) & (orders['ORDERSTATUS'] == P)][['O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(lineitem[['RECEIPTDATE', 'COMMITDATE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 729.6518350457808)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_REGIONKEY'] <= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part[['PT_COMMENT', 'P_PARTKEY', 'TYPE', 'P_NAME', 'MFGR']].groupby(by=['TYPE']).agg('count')

nation[(nation['N_NATIONKEY'] != 0) & (nation['N_NAME'] == 'S') & (nation['N_COMMENT'] == 'h')][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(customer[(customer['C_COMMENT'] == 't') & (customer['C_ACCTBAL'] < 589.8509041865334)].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

part[(part['CONTAINER'] == 'LG')].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 4348) & (partsupp['SUPPLYCOST'] > 216.72610420241116)][['P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'NONE'])) & (lineitem['L_SUPPKEY'] >= 5494)].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']].merge(customer[['C_COMMENT', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

part[(part['BRAND'] == Brand#54) | (part['CONTAINER'].str.startswith('LG'))].merge(partsupp.merge(part[(part['CONTAINER'].str.startswith('LG')) | (part['P_NAME'] == 'f')][['BRAND', 'MFGR', 'RETAILPRICE']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] < 1429) | (partsupp['PS_PARTKEY'] == 30)].merge(lineitem[['EXTENDEDPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 500.27774708073116) | (partsupp['SUPPLYCOST'] > 601.2401099304489)].merge(lineitem[(lineitem['QUANTITY'] == 4) & (lineitem['QUANTITY'] == 8)][['DISCOUNT', 'RETURNFLAG', 'L_SUPPKEY', 'SHIPMODE']].merge(orders[['ORDERDATE', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(customer[(customer['MKTSEGMENT'].isin(['BUILDING', 'HOUSEHOLD', 'FURNITURE', 'MACHINERY', 'AUTOMOBILE']))], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('count')

orders.merge(customer[(customer['C_ACCTBAL'] < 3717.7581997601155) & (customer['C_NATIONKEY'] < 13)].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == 1-URGENT) | (orders['O_COMMENT'] != 'a')][['O_ORDERKEY', 'ORDERDATE', 'CLERK', 'O_COMMENT', 'ORDERSTATUS']]

partsupp[(partsupp['AVAILQTY'] < 4705) | (partsupp['PS_PARTKEY'] >= 43) & (partsupp['PS_SUPPKEY'] != 2203)].merge(supplier[(supplier['S_COMMENT'].str.startswith('y')) | (supplier['S_ADDRESS'].str.startswith('R'))][['S_PHONE', 'S_ADDRESS', 'S_COMMENT', 'S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 8118) | (partsupp['PS_PARTKEY'] >= 40)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('count')

region[['R_REGIONKEY', 'R_COMMENT']]

supplier[(supplier['S_NATIONKEY'] == 12)][['S_ADDRESS', 'S_COMMENT']].merge(partsupp[(partsupp['SUPPLYCOST'] != 144.79981698064813) & (partsupp['P_COMMENT'] == 'e')], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

part[(part['CONTAINER'].str.startswith('JUMBO')) | (part['P_NAME'].str.startswith('r'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']].merge(part[(part['PT_COMMENT'] == 'x') | (part['P_NAME'] != 'l')][['P_NAME', 'P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['L_COMMENT'] != 'c') | (lineitem['RETURNFLAG'] != N)].merge(partsupp[(partsupp['PS_PARTKEY'] < 8) & (partsupp['P_COMMENT'] == ' th')].merge(lineitem[['SHIPMODE', 'SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6899) | (partsupp['PS_PARTKEY'] >= 8)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPDATE']).agg('count')

supplier.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('mean', numeric_only=True)

customer[['C_COMMENT']]

partsupp[(partsupp['P_COMMENT'].str.startswith(' th')) & (partsupp['P_COMMENT'] != 'd') & (partsupp['PS_SUPPKEY'] == 1305) | (partsupp['SUPPLYCOST'] > 574.5782881621434)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_SUPPKEY'] != 6) & (supplier['S_ADDRESS'] != '2')][['S_PHONE', 'S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

part[['TYPE', 'PT_COMMENT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'TYPE']).agg('mean', numeric_only=True)

part[(part['RETAILPRICE'] > 1053.7559519601264) | (part['BRAND'] == Brand#11)].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[(lineitem['RETURNFLAG'] == R)][['LINENUMBER', 'DISCOUNT', 'SHIPMODE']].merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('l')) | (partsupp['PS_PARTKEY'] != 38)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part[['BRAND', 'PT_COMMENT', 'MFGR']].merge(partsupp.merge(supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_SUPPKEY'] <= 198)][['S_ACCTBAL']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 294.5602762593303)][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(lineitem[(lineitem['L_ORDERKEY'] > 41) & (lineitem['QUANTITY'] > 44)][['SHIPDATE', 'LINENUMBER']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_NATIONKEY'] <= 16) | (supplier['S_NAME'].str.startswith('S'))][['S_NAME', 'S_SUPPKEY', 'S_ACCTBAL']].groupby(by=['S_ACCTBAL', 'S_SUPPKEY']).agg('sum', numeric_only=True)

part[(part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3', 'Manufacturer#1', 'Manufacturer#4', 'Manufacturer#2'])) | (part['SIZE'] < 18) | (part['PT_COMMENT'].str.startswith('n'))].merge(partsupp[['PS_PARTKEY', 'PS_SUPPKEY', 'AVAILQTY']].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] != 30)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPINSTRUCT', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 49)], left_on='L_PARTKEY', right_on='PS_PARTKEY')

supplier[['S_SUPPKEY', 'S_PHONE', 'S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] >= 2)], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

orders.merge(lineitem[(lineitem['QUANTITY'] <= 31) | (lineitem['LINESTATUS'].isin(['O']))].merge(partsupp[(partsupp['AVAILQTY'] > 3270) | (partsupp['P_COMMENT'] != 'v')][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE', 'O_ORDERKEY']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 39) & (partsupp['SUPPLYCOST'] == 202.45226218548163) | (partsupp['PS_PARTKEY'] < 22)][['PS_PARTKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPMODE'] != TRUCK) | (lineitem['SHIPDATE'] >= '1998-10-30')], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(part[(part['MFGR'] == Manufacturer#1) & (part['PT_COMMENT'] == ' ')][['P_PARTKEY', 'RETAILPRICE', 'MFGR', 'TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

nation[(nation['N_REGIONKEY'] == 1) & (nation['N_REGIONKEY'] != 1) & (nation['N_NATIONKEY'] >= 11)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(customer.merge(orders[(orders['TOTALPRICE'] >= 228232.47865889253)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('max', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 1)].merge(supplier[(supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] <= 1737.3490898050252)][['S_NATIONKEY']].merge(partsupp[['SUPPLYCOST', 'P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_ADDRESS']].merge(nation[(nation['N_COMMENT'].str.startswith('c'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('min', numeric_only=True)

part[['PT_COMMENT']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 6649) & (partsupp['PS_SUPPKEY'] != 754)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'i') | (partsupp['AVAILQTY'] == 3112)][['P_COMMENT', 'PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('max', numeric_only=True)

lineitem.merge(orders[(orders['SHIPPRIORITY'] == 0) | (orders['O_COMMENT'] != 'y')].merge(customer[(customer['C_ACCTBAL'] < 6869.300562154397)][['MKTSEGMENT', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_COMMENT', 'TAX']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 1717) | (partsupp['SUPPLYCOST'] != 340.0927837395697) | (partsupp['PS_SUPPKEY'] < 3809) | (partsupp['AVAILQTY'] <= 9650)][['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier[['S_ACCTBAL', 'S_ADDRESS']].merge(nation[(nation['N_NAME'] != 'U') & (nation['N_NAME'] == 'I')][['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == R) & (lineitem['RETURNFLAG'].isin(['N', 'A', 'R'])) | (lineitem['QUANTITY'] == 21)].merge(orders[['O_CUSTKEY', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['L_COMMENT', 'LINESTATUS']).agg('max', numeric_only=True)

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_ACCTBAL'] != 8947.817107995099) | (customer['C_NAME'] == 'C')]

nation[(nation['N_NATIONKEY'] >= 20) | (nation['N_NATIONKEY'] <= 9) | (nation['N_REGIONKEY'] >= 1)][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_ADDRESS'].str.startswith('X'))].merge(nation[['N_NAME', 'N_REGIONKEY']].merge(customer[(customer['C_NATIONKEY'] <= 6) | (customer['C_CUSTKEY'] < 40)][['MKTSEGMENT', 'C_ACCTBAL']].merge(nation[['N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_PHONE'].str.startswith('1')) | (customer['C_NAME'] != 'C')][['MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

customer[(customer['C_ACCTBAL'] != 8475.13085171568) | (customer['C_COMMENT'] != 'l') & (customer['C_COMMENT'].str.startswith(' '))].merge(orders[(orders['CLERK'] != 'C') & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED', '5-LOW', '2-HIGH', '3-MEDIUM']))].merge(customer[(customer['C_PHONE'] != '22-')][['C_ADDRESS', 'C_NATIONKEY']].merge(nation[(nation['N_NATIONKEY'] >= 10)][['N_NAME', 'N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] != 'h') | (region['R_COMMENT'] != 'l')][['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

region[(region['R_NAME'] == 'E') & (region['R_REGIONKEY'] < 3) & (region['R_NAME'].str.startswith('E')) & (region['R_NAME'] != 'M')].merge(nation[(nation['N_COMMENT'] != 'o') | (nation['N_NATIONKEY'] <= 23)][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NATIONKEY'] != 9) | (supplier['S_SUPPKEY'] <= 55) | (supplier['S_SUPPKEY'] == 79) & (supplier['S_ADDRESS'] != '5')]

orders[['O_ORDERKEY', 'O_CUSTKEY', 'O_COMMENT']].merge(customer.merge(orders[(orders['TOTALPRICE'] < 337877.37685799476) & (orders['ORDERSTATUS'] != P)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY', 'O_COMMENT']).agg('min', numeric_only=True)

orders.merge(customer[(customer['C_CUSTKEY'] < 18)][['C_NATIONKEY', 'C_ACCTBAL']].merge(orders[['TOTALPRICE', 'SHIPPRIORITY', 'O_COMMENT', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 10)].merge(customer[(customer['C_NATIONKEY'] < 18) | (customer['C_ACCTBAL'] != 4604.648265478221)][['C_COMMENT', 'C_NAME', 'C_ACCTBAL', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[(orders['ORDERPRIORITY'].isin(['5-LOW', '1-URGENT', '3-MEDIUM', '2-HIGH']))].merge(customer[['C_ADDRESS', 'MKTSEGMENT', 'C_PHONE', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERPRIORITY']).agg('count')

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_NAME'] == 'M') & (region['R_REGIONKEY'] >= 0) & (region['R_COMMENT'] != 'l')]

nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

lineitem[['L_SUPPKEY']].merge(orders.merge(customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

part[['TYPE', 'RETAILPRICE', 'CONTAINER', 'MFGR', 'SIZE']].merge(partsupp[(partsupp['SUPPLYCOST'] > 29.011545866701965) & (partsupp['SUPPLYCOST'] > 612.8676880004656)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 32) & (partsupp['P_COMMENT'].str.startswith(','))].merge(lineitem[['LINENUMBER', 'SHIPDATE', 'SHIPINSTRUCT']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[(lineitem['RETURNFLAG'] == A) & (lineitem['RETURNFLAG'] != N) | (lineitem['COMMITDATE'] != '1998-10-16')].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] == 24) & (partsupp['AVAILQTY'] > 9949)][['SUPPLYCOST', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY']].merge(lineitem[(lineitem['L_PARTKEY'] > 25673)][['SHIPMODE', 'SHIPINSTRUCT', 'LINESTATUS', 'L_SUPPKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['TAX', 'QUANTITY']).agg('sum', numeric_only=True)

customer[(customer['C_COMMENT'] == 'f') & (customer['C_ACCTBAL'] < -864.4553243895473) | (customer['C_PHONE'].str.startswith('2')) & (customer['C_ADDRESS'] == 'F')].merge(orders[(orders['TOTALPRICE'] != 38816.35077053664)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != NONE)].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE']).agg('count')

nation[(nation['N_COMMENT'].str.startswith('l'))][['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('h'))].merge(nation[(nation['N_REGIONKEY'] > 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[['S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem.merge(partsupp.merge(lineitem[['DISCOUNT', 'TAX', 'RETURNFLAG', 'QUANTITY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('min', numeric_only=True)

partsupp.groupby(by=['AVAILQTY']).agg('sum', numeric_only=True)

region[(region['R_REGIONKEY'] >= 3)].merge(nation[(nation['N_NAME'].str.startswith('I'))].merge(customer[(customer['C_COMMENT'] != 'q')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders.merge(customer.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(supplier.merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 20) & (customer['C_ACCTBAL'] == 3110.087294705367) & (customer['C_ACCTBAL'] > 9268.28077977629)].merge(orders[(orders['O_COMMENT'].str.startswith('h'))][['ORDERPRIORITY', 'O_CUSTKEY']].merge(lineitem[(lineitem['QUANTITY'] < 17) | (lineitem['EXTENDEDPRICE'] >= 85472.43675104786)][['EXTENDEDPRICE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT', 'C_CUSTKEY']).agg('max', numeric_only=True)

customer[['MKTSEGMENT']].merge(orders[(orders['CLERK'].str.startswith('C'))], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY']].groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('2')) & (supplier['S_SUPPKEY'] != 133) | (supplier['S_NAME'] != 'S')].merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] <= '1992-05-15')][['SHIPMODE', 'TAX', 'L_ORDERKEY', 'LINENUMBER']].merge(partsupp[(partsupp['PS_PARTKEY'] < 5) | (partsupp['AVAILQTY'] >= 8324)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region.groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

nation.merge(customer[(customer['C_PHONE'] == '13-') & (customer['C_CUSTKEY'] != 65)][['C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_ACCTBAL'] > 2847.013121692108)].merge(partsupp[['PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_NAME'] != 'E')][['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

customer[(customer['C_COMMENT'].str.startswith('h')) & (customer['C_PHONE'].str.startswith('1')) & (customer['C_NATIONKEY'] == 18)][['C_PHONE', 'C_COMMENT', 'MKTSEGMENT']].merge(nation[['N_COMMENT', 'N_NATIONKEY']].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_NATIONKEY', 'C_PHONE']].merge(orders[(orders['O_CUSTKEY'] != 26542)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region

partsupp[(partsupp['SUPPLYCOST'] < 173.1759488352238)].merge(supplier[(supplier['S_ADDRESS'] != 'S') | (supplier['S_ADDRESS'] == 'D')][['S_NATIONKEY', 'S_ACCTBAL', 'S_PHONE', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['SHIPDATE'] == '1998-10-30')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['PT_COMMENT'] == 'b')], left_on='PS_PARTKEY', right_on='P_PARTKEY')

nation[['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY')

supplier[(supplier['S_SUPPKEY'] < 50) | (supplier['S_NAME'].str.startswith('S')) | (supplier['S_ACCTBAL'] < 3168.201141578399)][['S_SUPPKEY', 'S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_ACCTBAL']].merge(partsupp[(partsupp['AVAILQTY'] >= 6171)][['AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem[(lineitem['LINESTATUS'] != O)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_NAME']].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

part[['BRAND', 'PT_COMMENT', 'RETAILPRICE', 'SIZE', 'MFGR']]

orders

region[(region['R_COMMENT'].str.startswith('g'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NAME'] != 'F') | (nation['N_REGIONKEY'] < 0)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'A')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

customer[['C_ADDRESS', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].merge(orders[(orders['O_COMMENT'] != ' ') | (orders['O_ORDERKEY'] >= 603)].merge(lineitem[(lineitem['LINESTATUS'].isin(['O']))][['RECEIPTDATE', 'SHIPMODE', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

nation[['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_NATIONKEY']).agg('sum', numeric_only=True)

supplier

part[(part['P_NAME'].str.startswith('g')) | (part['MFGR'].isin(['Manufacturer#5'])) & (part['CONTAINER'].str.startswith('MED'))][['BRAND', 'PT_COMMENT', 'P_NAME', 'SIZE']].groupby(by=['BRAND']).agg('sum', numeric_only=True)

customer[(customer['C_ADDRESS'] != 'v') | (customer['MKTSEGMENT'] != HOUSEHOLD)][['C_NATIONKEY']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('y')) & (nation['N_COMMENT'].str.startswith('r'))][['N_COMMENT']].merge(customer[['C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY']).agg('max', numeric_only=True)

customer.merge(nation[(nation['N_COMMENT'] == 'i')].merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_NATIONKEY', 'N_COMMENT']].merge(supplier[(supplier['S_PHONE'] == '26-')].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERPRIORITY'] == 3-MEDIUM)][['CLERK', 'O_ORDERKEY', 'ORDERSTATUS']].merge(customer[(customer['C_NAME'] != 'C') | (customer['MKTSEGMENT'].isin(['MACHINERY', 'BUILDING', 'FURNITURE', 'AUTOMOBILE']))][['C_CUSTKEY', 'C_NAME']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['ORDERDATE'] < '1998-07-21')].merge(customer[['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer[(customer['C_PHONE'] != '25-') | (customer['C_COMMENT'] == 'u')][['C_ADDRESS', 'C_NAME', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['MKTSEGMENT']).agg('mean', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('S'))].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD)].merge(partsupp[(partsupp['AVAILQTY'] != 3432)][['P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_PARTKEY'] > 32) | (partsupp['PS_SUPPKEY'] >= 1016) & (partsupp['PS_PARTKEY'] != 5)][['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']]

customer[(customer['MKTSEGMENT'] == FURNITURE) & (customer['C_COMMENT'].str.startswith(',')) & (customer['C_NAME'].str.startswith('C'))][['C_CUSTKEY']].merge(orders[['CLERK', 'O_ORDERKEY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NATIONKEY'] != 21)], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation.merge(region[(region['R_NAME'] != 'ASI') | (region['R_COMMENT'].str.startswith('u'))], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_PHONE'].str.startswith('18-'))][['C_NAME', 'C_COMMENT', 'C_ACCTBAL']].merge(nation[(nation['N_COMMENT'] == 'u')].merge(supplier[(supplier['S_COMMENT'] != 'g') | (supplier['S_NAME'] != 'S')].merge(nation[(nation['N_NAME'] == 'G') | (nation['N_COMMENT'] != 'i')].merge(supplier[(supplier['S_ACCTBAL'] > 3759.7554808002524) & (supplier['S_ADDRESS'] != 'E')][['S_PHONE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 39) | (partsupp['PS_SUPPKEY'] > 4278)][['SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']].merge(supplier[(supplier['S_COMMENT'] == 's') & (supplier['S_COMMENT'].str.startswith('es '))].merge(nation[(nation['N_NAME'] != 'G')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

partsupp[(partsupp['AVAILQTY'] >= 5089) | (partsupp['SUPPLYCOST'] > 271.9224021833441)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT', 'PS_SUPPKEY']]

customer[['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] > 21) | (nation['N_NATIONKEY'] == 1)][['N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] > 6550.017007492884) | (supplier['S_PHONE'] != '3')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('i'))].merge(region[(region['R_COMMENT'] == 'u') | (region['R_COMMENT'] == 'h')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

supplier[(supplier['S_COMMENT'].str.startswith('j')) | (supplier['S_SUPPKEY'] > 77) & (supplier['S_SUPPKEY'] <= 23) & (supplier['S_SUPPKEY'] == 87)].merge(nation[(nation['N_COMMENT'] == 'n') | (nation['N_COMMENT'].str.startswith('e'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS', 'S_NATIONKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] != 1)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('e'))], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

lineitem[(lineitem['L_PARTKEY'] < 168888) & (lineitem['SHIPDATE'] > '1992-04-27') | (lineitem['SHIPDATE'] == '1992-04-27')][['TAX', 'COMMITDATE']].merge(orders[(orders['SHIPPRIORITY'] != 0) & (orders['TOTALPRICE'] <= 55502.410180935156)][['O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_COMMENT'] != 'a') | (supplier['S_ADDRESS'] != 'Y') | (supplier['S_NAME'] == 'S') | (supplier['S_PHONE'] == '2')].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('mean', numeric_only=True)

lineitem.groupby(by=['EXTENDEDPRICE']).agg('sum', numeric_only=True)

orders[['O_COMMENT']]

region[['R_COMMENT', 'R_NAME']].merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT']).agg('count')

region.groupby(by=['R_COMMENT']).agg('count')

customer[['C_NAME', 'C_PHONE', 'MKTSEGMENT', 'C_ACCTBAL', 'C_COMMENT']].groupby(by=['C_ACCTBAL']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] >= 35) | (supplier['S_NATIONKEY'] >= 5) | (supplier['S_COMMENT'] != '!')].merge(partsupp[(partsupp['PS_SUPPKEY'] != 2066) & (partsupp['PS_PARTKEY'] < 49)][['SUPPLYCOST', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 72)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']]

partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['AVAILQTY'] < 965) & (partsupp['P_COMMENT'] != ' ') & (partsupp['P_COMMENT'] == 'the')].merge(part[(part['P_PARTKEY'] >= 99)][['BRAND', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['AVAILQTY', 'SUPPLYCOST']).agg('sum', numeric_only=True)

partsupp[(partsupp['AVAILQTY'] > 4394) | (partsupp['AVAILQTY'] == 5111)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY', 'SUPPLYCOST']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] > 165) & (part['BRAND'] == Brand#54)][['P_NAME', 'RETAILPRICE', 'TYPE', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['SHIPMODE', 'SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY')

nation.groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

part[(part['SIZE'] != 23) | (part['CONTAINER'] != 'SM') | (part['TYPE'].str.startswith('STA')) | (part['P_PARTKEY'] == 139)].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_NAME']).agg('min', numeric_only=True)

region[(region['R_REGIONKEY'] >= 2) & (region['R_NAME'] != 'E') | (region['R_NAME'] != 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME', 'R_COMMENT']).agg('count')

region[(region['R_NAME'] != 'ASI')]

orders[(orders['TOTALPRICE'] > 286600.2996634424) | (orders['TOTALPRICE'] != 334047.3213712505) & (orders['O_CUSTKEY'] < 108760) | (orders['SHIPPRIORITY'] <= 0)].groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

nation.merge(customer[(customer['C_CUSTKEY'] == 41) & (customer['MKTSEGMENT'] != AUTOMOBILE)][['C_PHONE', 'C_ACCTBAL', 'C_CUSTKEY']].merge(orders.merge(lineitem[(lineitem['L_ORDERKEY'] != 5) | (lineitem['L_PARTKEY'] < 109325)][['LINESTATUS']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_COMMENT'] != ' ')][['C_COMMENT', 'C_NATIONKEY', 'C_ACCTBAL', 'C_NAME']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_NAME'] == 'E') | (region['R_NAME'] == 'AME')][['R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

partsupp.merge(part[(part['PT_COMMENT'] == 'p') | (part['TYPE'] != 'SMA')][['P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('count')

supplier[['S_COMMENT']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] != 0) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM']))][['O_ORDERKEY', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] >= 22387.805707566222)][['DISCOUNT', 'RECEIPTDATE', 'SHIPMODE']].merge(orders[(orders['TOTALPRICE'] <= 18206.728245335413) & (orders['ORDERDATE'] < '1998-07-21')][['O_CUSTKEY', 'SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['LINENUMBER', 'EXTENDEDPRICE']).agg('max', numeric_only=True)

part[(part['SIZE'] > 40) | (part['P_NAME'] != 'blu')].groupby(by=['P_PARTKEY', 'MFGR']).agg('sum', numeric_only=True)

orders.groupby(by=['O_CUSTKEY', 'O_ORDERKEY']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] < 503.16601105050484)]

nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NATIONKEY'] < 6) | (nation['N_COMMENT'] == 'n') & (nation['N_NAME'] == 'M')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(region[(region['R_NAME'] == 'A')][['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_ADDRESS'] == 'Q')][['C_ADDRESS', 'C_NATIONKEY', 'C_ACCTBAL', 'C_PHONE']], left_on='N_NATIONKEY', right_on='C_NATIONKEY')

orders[['ORDERSTATUS', 'ORDERPRIORITY', 'ORDERDATE']].merge(customer[['C_NATIONKEY', 'C_ACCTBAL']].merge(orders[(orders['TOTALPRICE'] >= 27226.16001894357) & (orders['SHIPPRIORITY'] != 0)][['O_ORDERKEY', 'SHIPPRIORITY', 'ORDERSTATUS', 'ORDERPRIORITY']].merge(customer[(customer['C_ADDRESS'] == 'l')].merge(orders[(orders['ORDERPRIORITY'] != 2-HIGH)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['SHIPMODE'] == REG AIR) | (lineitem['DISCOUNT'] < 0.0774402221740329)][['LINESTATUS', 'QUANTITY', 'DISCOUNT', 'L_SUPPKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 41) & (partsupp['PS_PARTKEY'] >= 1)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERSTATUS']).agg('min', numeric_only=True)

supplier[['S_PHONE']].merge(partsupp[['P_COMMENT']].merge(lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'MAIL', 'FOB', 'SHIP', 'TRUCK', 'AIR', 'RAIL']))][['L_SUPPKEY']].merge(orders[(orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'O_CUSTKEY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 2500)][['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('mean', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] == 0.01833590310559521) | (lineitem['L_COMMENT'] != 'b') & (lineitem['RETURNFLAG'].isin(['N', 'R', 'A'])) & (lineitem['LINESTATUS'] != O)].merge(partsupp[(partsupp['P_COMMENT'] != 'n') & (partsupp['P_COMMENT'] == ' th')][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(lineitem[['L_PARTKEY', 'L_SUPPKEY', 'RECEIPTDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['SHIPMODE', 'QUANTITY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] == 'R') | (nation['N_NAME'] != 'S')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']].merge(customer[['C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[['S_SUPPKEY']].merge(partsupp[(partsupp['AVAILQTY'] > 9730) & (partsupp['PS_SUPPKEY'] <= 1234)].merge(supplier[(supplier['S_ACCTBAL'] != 779.7658370173333) & (supplier['S_ADDRESS'] == 'l')].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[['PT_COMMENT', 'CONTAINER', 'MFGR', 'BRAND']].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].merge(supplier[(supplier['S_NAME'] != 'S') & (supplier['S_ADDRESS'].str.startswith('K'))].merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINENUMBER'] <= 6) | (lineitem['SHIPMODE'].isin(['REG AIR', 'FOB', 'AIR'])) | (lineitem['SHIPMODE'] == TRUCK) & (lineitem['LINENUMBER'] > 6)][['LINESTATUS', 'L_COMMENT', 'COMMITDATE']]

orders[['CLERK', 'O_COMMENT', 'TOTALPRICE', 'ORDERDATE', 'O_ORDERKEY']].merge(lineitem[(lineitem['LINESTATUS'] == F) | (lineitem['L_ORDERKEY'] != 123)][['LINESTATUS', 'RECEIPTDATE', 'QUANTITY']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer.merge(nation[(nation['N_NATIONKEY'] < 17) & (nation['N_NAME'] != 'P')][['N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NATIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] > 3)].merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_NATIONKEY'] == 18)].merge(customer[(customer['MKTSEGMENT'].isin(['HOUSEHOLD', 'AUTOMOBILE', 'MACHINERY', 'FURNITURE']))].merge(nation[(nation['N_NAME'] == 'A') & (nation['N_NAME'] == 'S')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[(nation['N_NAME'].str.startswith('E')) & (nation['N_NAME'] == 'P') | (nation['N_COMMENT'].str.startswith('n'))]

orders[(orders['ORDERSTATUS'].isin(['F', 'O', 'P'])) | (orders['ORDERSTATUS'] != O) | (orders['O_ORDERKEY'] < 293) & (orders['CLERK'] == 'C')].merge(lineitem[(lineitem['LINESTATUS'].isin(['F', 'O']))][['L_COMMENT', 'L_PARTKEY', 'DISCOUNT', 'L_ORDERKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['QUANTITY'] > 32)][['QUANTITY']].merge(partsupp[(partsupp['AVAILQTY'] <= 9793) & (partsupp['PS_PARTKEY'] == 38)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS', 'SHIPPRIORITY']).agg('sum', numeric_only=True)

partsupp[['SUPPLYCOST']].merge(lineitem[(lineitem['L_ORDERKEY'] != 22) & (lineitem['SHIPMODE'].isin(['TRUCK', 'RAIL', 'MAIL']))][['TAX']].merge(orders[['O_CUSTKEY', 'CLERK']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_ACCTBAL'] == 3183.173682373257)][['C_ADDRESS', 'C_NAME', 'C_ACCTBAL']].merge(orders.merge(customer[(customer['C_COMMENT'] != 'k')].merge(nation[(nation['N_COMMENT'] == 'p')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']].merge(customer[['MKTSEGMENT', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['L_COMMENT'] == 'c') & (lineitem['TAX'] < 0.01656499934096967)][['RETURNFLAG', 'COMMITDATE', 'L_COMMENT']], left_on='PS_PARTKEY', right_on='L_PARTKEY')

lineitem[(lineitem['COMMITDATE'] < '1998-10-16') & (lineitem['QUANTITY'] < 35)][['EXTENDEDPRICE', 'RECEIPTDATE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 23) | (partsupp['SUPPLYCOST'] >= 392.6603427685069)][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY')

region[(region['R_COMMENT'] == 'h') | (region['R_NAME'].str.startswith('AFR')) | (region['R_COMMENT'].str.startswith('h'))].merge(nation[(nation['N_NATIONKEY'] != 6) & (nation['N_NAME'] != 'J')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_REGIONKEY'] != 2)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation[['N_NATIONKEY', 'N_NAME']].merge(customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] != 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(region[(region['R_REGIONKEY'] >= 3)].merge(nation[(nation['N_NAME'] != 'C') | (nation['N_NAME'] != 'C')][['N_COMMENT']].merge(region[(region['R_REGIONKEY'] != 1) | (region['R_REGIONKEY'] >= 0)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[['C_NAME', 'MKTSEGMENT']].merge(orders[(orders['O_CUSTKEY'] == 135454)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

partsupp[(partsupp['PS_PARTKEY'] <= 28) | (partsupp['AVAILQTY'] == 8291) | (partsupp['PS_PARTKEY'] != 2) & (partsupp['AVAILQTY'] >= 1186)][['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']].groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('count')

nation[['N_REGIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] != 67)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

lineitem[(lineitem['RETURNFLAG'] == R) & (lineitem['TAX'] < 0.03017730794910227) | (lineitem['RECEIPTDATE'] != '1998-11-06') | (lineitem['SHIPINSTRUCT'] != DELIVER IN PERSON)].groupby(by=['LINENUMBER', 'RECEIPTDATE']).agg('sum', numeric_only=True)

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

lineitem.merge(orders[(orders['O_CUSTKEY'] < 84938) & (orders['ORDERPRIORITY'].isin(['4-NOT SPECIFIED']))].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 769.025901790445)].merge(lineitem[(lineitem['EXTENDEDPRICE'] != 68985.70085320831) | (lineitem['QUANTITY'] > 40)][['RETURNFLAG']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[(lineitem['L_ORDERKEY'] <= 29)][['L_COMMENT', 'LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['COMMITDATE']).agg('mean', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] == 2766) | (partsupp['PS_SUPPKEY'] < 3972)][['PS_PARTKEY']].groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

supplier[(supplier['S_PHONE'] != '2') & (supplier['S_PHONE'] == '32-') | (supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('e'))]

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer.merge(nation[(nation['N_NATIONKEY'] != 22) & (nation['N_COMMENT'] != 'y')].merge(supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_COMMENT'] == 'n')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_PHONE'] == '3') | (supplier['S_PHONE'].str.startswith('2')) & (supplier['S_NATIONKEY'] >= 21) & (supplier['S_NAME'] == 'S')][['S_PHONE', 'S_COMMENT', 'S_NAME', 'S_ACCTBAL', 'S_NATIONKEY']].merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']].merge(supplier[['S_SUPPKEY', 'S_PHONE', 'S_NATIONKEY']].merge(partsupp[['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(lineitem[(lineitem['RETURNFLAG'] != N) | (lineitem['COMMITDATE'] == '1992-05-15')], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('count')

nation[(nation['N_NAME'].str.startswith('S'))].merge(region.merge(nation[(nation['N_NATIONKEY'] != 0) & (nation['N_REGIONKEY'] <= 0)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NATIONKEY']).agg('count')

region.merge(nation.merge(supplier[(supplier['S_ADDRESS'] != 'C')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'J')].merge(region[['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['DISCOUNT'] != 0.021643676166261772) | (lineitem['EXTENDEDPRICE'] != 17483.362128152898) | (lineitem['DISCOUNT'] != 0.017908717958879185) & (lineitem['L_COMMENT'] == 'y')][['L_COMMENT', 'TAX']].merge(partsupp[['AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(lineitem[(lineitem['L_SUPPKEY'] != 7966)].merge(partsupp[['PS_PARTKEY', 'AVAILQTY', 'PS_SUPPKEY']].merge(lineitem.merge(orders.merge(customer[['C_NATIONKEY', 'C_NAME', 'C_PHONE', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

lineitem.merge(orders[(orders['TOTALPRICE'] <= 190701.77379732265)].merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] >= 372.3097521995643) & (partsupp['SUPPLYCOST'] <= 205.26831411826322)].merge(part[(part['CONTAINER'] != 'SM') & (part['P_NAME'].str.startswith('h'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'] == ' th')], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[(orders['ORDERDATE'] != '1992-01-13') & (orders['ORDERPRIORITY'] == 2-HIGH)][['O_COMMENT', 'O_CUSTKEY']].merge(customer.merge(orders[(orders['SHIPPRIORITY'] >= 0)][['ORDERDATE', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

part[(part['CONTAINER'] != 'JUMBO') | (part['CONTAINER'] != 'SM')][['RETAILPRICE', 'P_PARTKEY']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4880)][['PS_PARTKEY']].merge(lineitem[(lineitem['COMMITDATE'] > '1992-05-15')][['SHIPINSTRUCT', 'LINESTATUS', 'DISCOUNT', 'TAX']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem

supplier[(supplier['S_NATIONKEY'] == 3) & (supplier['S_PHONE'].str.startswith('1'))][['S_PHONE', 'S_SUPPKEY', 'S_ACCTBAL', 'S_NATIONKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

part[['BRAND', 'RETAILPRICE']].merge(partsupp[(partsupp['SUPPLYCOST'] != 557.0224803397854) & (partsupp['PS_PARTKEY'] <= 8)].merge(supplier[(supplier['S_COMMENT'].str.startswith('.')) | (supplier['S_ADDRESS'] == 'E')][['S_PHONE', 'S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 914.0624500572) | (partsupp['P_COMMENT'] == 'r')][['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(part[['SIZE', 'BRAND', 'MFGR', 'P_NAME']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'BRAND']).agg('sum', numeric_only=True)

partsupp.groupby(by=['AVAILQTY']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[(lineitem['QUANTITY'] <= 49) | (lineitem['L_PARTKEY'] >= 176670)].merge(partsupp[(partsupp['PS_PARTKEY'] < 21)][['P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] <= 881) & (partsupp['AVAILQTY'] >= 8162)], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SHIPMODE', 'L_SUPPKEY']).agg('mean', numeric_only=True)

supplier[(supplier['S_SUPPKEY'] > 52)].groupby(by=['S_SUPPKEY', 'S_COMMENT']).agg('sum', numeric_only=True)

region.merge(nation[['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'].str.startswith('K')) & (nation['N_COMMENT'] != 'a')], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('min', numeric_only=True)

partsupp

part[(part['CONTAINER'] != 'JUMBO')].merge(partsupp[(partsupp['AVAILQTY'] >= 9495)][['P_COMMENT']].merge(part[(part['P_NAME'] == 'lin') & (part['RETAILPRICE'] >= 972.0540752561021)][['P_NAME', 'PT_COMMENT', 'P_PARTKEY', 'BRAND']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND', 'P_PARTKEY']).agg('min', numeric_only=True)

partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']].merge(lineitem[(lineitem['SHIPINSTRUCT'] != DELIVER IN PERSON)].merge(orders[['SHIPPRIORITY', 'TOTALPRICE', 'ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['SUPPLYCOST']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'y') & (nation['N_NAME'] == 'A') | (nation['N_REGIONKEY'] <= 0) | (nation['N_REGIONKEY'] != 0)]

part[(part['P_NAME'].str.startswith('cor')) | (part['RETAILPRICE'] < 1026.1023188965348) | (part['TYPE'] == 'STA') | (part['PT_COMMENT'] != 'q')][['SIZE']].groupby(by=['SIZE']).agg('min', numeric_only=True)

supplier.merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] <= -118.98569709760307) | (supplier['S_ACCTBAL'] == 1716.4133447702563)][['S_ADDRESS', 'S_SUPPKEY', 'S_PHONE', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(customer.merge(orders.merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

part.groupby(by=['TYPE']).agg('min', numeric_only=True)

customer[(customer['MKTSEGMENT'] != AUTOMOBILE) & (customer['C_NATIONKEY'] < 15) | (customer['C_ADDRESS'].str.startswith('B')) & (customer['C_COMMENT'].str.startswith('k'))].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['SHIPPRIORITY'] <= 0)], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_ACCTBAL'] > 7048.789124536187)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_NAME'] == 'E')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] >= 3)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'y')].merge(region[(region['R_COMMENT'].str.startswith('g'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME']].merge(supplier[(supplier['S_SUPPKEY'] >= 55) & (supplier['S_ADDRESS'] != 'I')].merge(partsupp[(partsupp['SUPPLYCOST'] == 943.457111307124) & (partsupp['PS_PARTKEY'] == 11)].merge(supplier.merge(nation[(nation['N_NAME'] == 'B') | (nation['N_COMMENT'] == 's')], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part.merge(partsupp.merge(supplier[['S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] == 30) | (partsupp['PS_PARTKEY'] > 20)].merge(part[(part['MFGR'] == Manufacturer#5) & (part['RETAILPRICE'] < 1052.5508181679531)][['CONTAINER', 'P_PARTKEY']].merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') | (lineitem['L_ORDERKEY'] != 174)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('sum', numeric_only=True)

part[(part['RETAILPRICE'] != 1082.6146129349565)][['RETAILPRICE', 'SIZE', 'P_NAME']].merge(partsupp[(partsupp['P_COMMENT'] != 'b') & (partsupp['AVAILQTY'] > 4814)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != TAKE BACK RETURN)].merge(partsupp[(partsupp['SUPPLYCOST'] == 342.98463698145355) & (partsupp['AVAILQTY'] >= 2589)].merge(part[(part['RETAILPRICE'] >= 1030.1984937257498)][['RETAILPRICE', 'P_PARTKEY', 'BRAND', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('max', numeric_only=True)

nation[(nation['N_NATIONKEY'] < 19) & (nation['N_REGIONKEY'] >= 0)].merge(supplier[['S_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 4122) & (partsupp['SUPPLYCOST'] >= 153.24743758414067)].merge(lineitem[(lineitem['TAX'] != 0.05351865148026324)].merge(orders[['ORDERPRIORITY', 'ORDERSTATUS', 'O_COMMENT']].merge(lineitem[['L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('mean', numeric_only=True)

orders[['ORDERSTATUS', 'O_CUSTKEY', 'SHIPPRIORITY']].merge(lineitem[(lineitem['L_COMMENT'] == 't')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['L_PARTKEY', 'L_SUPPKEY', 'LINENUMBER', 'L_COMMENT']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY', 'O_CUSTKEY']).agg('mean', numeric_only=True)

lineitem.merge(orders[['O_COMMENT', 'ORDERPRIORITY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem.merge(orders[(orders['SHIPPRIORITY'] >= 0)][['SHIPPRIORITY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 867.048218089823)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['AVAILQTY'] > 3557)][['PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPMODE', 'L_ORDERKEY']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] != 1068.9141042229878)][['SIZE', 'TYPE', 'BRAND']].merge(partsupp.merge(supplier[(supplier['S_ACCTBAL'] != 1337.6852887855837)].merge(nation[['N_COMMENT', 'N_NAME']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier[(supplier['S_PHONE'].str.startswith('2')) | (supplier['S_NAME'] == 'S') | (supplier['S_ACCTBAL'] != -648.1919928888541)].merge(partsupp[['SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

nation[['N_COMMENT', 'N_NAME', 'N_REGIONKEY', 'N_NATIONKEY']].merge(supplier[(supplier['S_COMMENT'].str.startswith('d'))], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME']).agg('max', numeric_only=True)

customer[(customer['C_COMMENT'] == 'n') | (customer['C_ADDRESS'] != 'K') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'BUILDING', 'HOUSEHOLD'])) & (customer['C_PHONE'] == '1')][['MKTSEGMENT', 'C_ACCTBAL', 'C_ADDRESS']].merge(nation[(nation['N_COMMENT'] != 'c')].merge(supplier[['S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['ORDERPRIORITY'] != 4-NOT SPECIFIED)], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

customer[(customer['C_COMMENT'] == 'd') & (customer['C_ACCTBAL'] <= 8206.722417513647) | (customer['C_NATIONKEY'] < 16)][['C_ACCTBAL', 'C_NATIONKEY']].groupby(by=['C_ACCTBAL']).agg('count')

partsupp[(partsupp['PS_PARTKEY'] >= 30) & (partsupp['AVAILQTY'] < 2838)].merge(part[(part['BRAND'] == Brand#54)].merge(partsupp[(partsupp['PS_PARTKEY'] > 37)][['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'] == 'WRAP') & (part['BRAND'].isin(['Brand#44', 'Brand#15', 'Brand#54', 'Brand#52', 'Brand#31', 'Brand#45', 'Brand#32', 'Brand#53', 'Brand#13', 'Brand#12', 'Brand#55']))], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['AVAILQTY']).agg('mean', numeric_only=True)

partsupp[['PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY']]

supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_NATIONKEY', 'S_PHONE', 'S_COMMENT']]

nation[(nation['N_NAME'] == 'P') & (nation['N_COMMENT'] == 'e') & (nation['N_COMMENT'] == 'h')][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('min', numeric_only=True)

supplier[['S_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] <= 3) & (nation['N_COMMENT'] != 's')][['N_COMMENT', 'N_NAME', 'N_REGIONKEY']].merge(region[(region['R_COMMENT'] == 'h')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] > 179.50216811732446) & (partsupp['PS_SUPPKEY'] == 3825)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL']).agg('count')

supplier[(supplier['S_PHONE'] == '17-') & (supplier['S_ACCTBAL'] >= 1682.6965907918473)][['S_NAME', 'S_ADDRESS']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('i'))][['PS_SUPPKEY', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

part[(part['TYPE'].str.startswith('P'))][['MFGR', 'RETAILPRICE', 'BRAND', 'TYPE', 'SIZE']].merge(partsupp[(partsupp['PS_PARTKEY'] != 20)][['AVAILQTY', 'SUPPLYCOST', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] == 4351)][['PS_SUPPKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST', 'AVAILQTY']].merge(lineitem.merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

lineitem[['SHIPMODE', 'L_PARTKEY', 'L_ORDERKEY', 'RECEIPTDATE', 'L_SUPPKEY']].merge(orders[(orders['O_ORDERKEY'] < 697)][['O_CUSTKEY']].merge(lineitem[(lineitem['L_SUPPKEY'] != 9555) & (lineitem['SHIPDATE'] != '1992-04-27')][['LINENUMBER', 'L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[(supplier['S_COMMENT'] != 'the') & (supplier['S_SUPPKEY'] < 104) & (supplier['S_NATIONKEY'] >= 0)].merge(nation[(nation['N_COMMENT'] != 'e')].merge(region[(region['R_COMMENT'] == 'l')][['R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('u'))].merge(supplier[(supplier['S_ACCTBAL'] != 2419.7178808770905) | (supplier['S_ADDRESS'] == 'F')][['S_COMMENT', 'S_NAME', 'S_NATIONKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[['PS_PARTKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERSTATUS']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'] == '27-') | (customer['C_PHONE'].str.startswith('2'))], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['TAX'] == 0.03431142705736478) & (lineitem['COMMITDATE'] <= '1992-05-15')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERSTATUS', 'ORDERPRIORITY']).agg('max', numeric_only=True)

customer

nation.merge(region[(region['R_NAME'] != 'AFR')].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_COMMENT'] != 'y')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.merge(supplier[['S_ACCTBAL', 'S_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] <= 570.7566345545125) & (partsupp['P_COMMENT'] != '.')][['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NAME', 'N_COMMENT']).agg('mean', numeric_only=True)

supplier.merge(partsupp[['P_COMMENT']].merge(part[(part['P_PARTKEY'] == 184) | (part['CONTAINER'] == 'JUMBO')].merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME']).agg('count')

orders[(orders['O_ORDERKEY'] == 741)][['ORDERSTATUS']].merge(lineitem[(lineitem['L_COMMENT'].str.startswith('ly '))][['L_ORDERKEY', 'L_COMMENT', 'L_PARTKEY', 'DISCOUNT']].merge(partsupp[(partsupp['PS_PARTKEY'] != 23) | (partsupp['PS_SUPPKEY'] >= 5123)][['AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_NAME', 'C_CUSTKEY', 'C_PHONE']].merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer.merge(orders[(orders['ORDERSTATUS'] == F)][['O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

customer[['C_NATIONKEY', 'C_NAME', 'C_COMMENT']].merge(orders[(orders['CLERK'].str.startswith('C')) | (orders['O_ORDERKEY'] <= 431)].merge(customer[['C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

customer.groupby(by=['C_ACCTBAL']).agg('max', numeric_only=True)

supplier[['S_ADDRESS']].merge(partsupp[(partsupp['AVAILQTY'] > 3939)][['SUPPLYCOST']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

region[(region['R_NAME'] != 'AFR') | (region['R_REGIONKEY'] <= 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_NAME']].merge(customer[(customer['C_PHONE'].str.startswith('25-')) & (customer['C_NAME'] == 'C')], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME', 'R_COMMENT']).agg('min', numeric_only=True)

lineitem[(lineitem['L_SUPPKEY'] > 5707) & (lineitem['TAX'] == 0.05294902236791485) | (lineitem['TAX'] == 0.010812920897348368) & (lineitem['SHIPINSTRUCT'] != TAKE BACK RETURN)].groupby(by=['LINENUMBER']).agg('min', numeric_only=True)

lineitem[['L_ORDERKEY']].merge(orders[['ORDERPRIORITY', 'ORDERDATE']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

region[(region['R_NAME'] != 'AFR')]

nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_NAME'] == 'B') & (nation['N_NATIONKEY'] >= 16)].merge(region[(region['R_NAME'] == 'AME') & (region['R_REGIONKEY'] > 2)][['R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY')

part[(part['MFGR'] == Manufacturer#2) & (part['BRAND'].isin(['Brand#43', 'Brand#14', 'Brand#34', 'Brand#12', 'Brand#35', 'Brand#42', 'Brand#44', 'Brand#23', 'Brand#15', 'Brand#25', 'Brand#55', 'Brand#52', 'Brand#13', 'Brand#53', 'Brand#33', 'Brand#54', 'Brand#32', 'Brand#41', 'Brand#45', 'Brand#51', 'Brand#31']))].merge(partsupp[(partsupp['AVAILQTY'] >= 2879)].merge(supplier[(supplier['S_ADDRESS'] == 'e') & (supplier['S_ACCTBAL'] == 5904.73591940685)].merge(nation[(nation['N_REGIONKEY'] > 1)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE']).agg('min', numeric_only=True)

customer.merge(nation.merge(supplier[(supplier['S_ADDRESS'] == 'w')][['S_ACCTBAL', 'S_ADDRESS', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NATIONKEY', 'C_CUSTKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NAME'] != 'M') | (nation['N_COMMENT'].str.startswith('p'))].merge(customer[(customer['C_ACCTBAL'] < 4826.927618724032)], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('count')

region.merge(nation[(nation['N_COMMENT'].str.startswith(' ')) & (nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'].str.startswith('v'))].merge(region[(region['R_NAME'] == 'M') | (region['R_COMMENT'].str.startswith('u'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].merge(nation[(nation['N_NATIONKEY'] != 20)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] == 'g') & (region['R_COMMENT'].str.startswith('l')) & (region['R_COMMENT'] == 'h') | (region['R_NAME'] == 'ASI')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation.merge(region[(region['R_COMMENT'] != 'u') & (region['R_COMMENT'] == 'l')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('e'))].merge(region[['R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[['BRAND']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']].merge(part[(part['TYPE'].str.startswith('M'))][['P_PARTKEY', 'SIZE', 'P_NAME', 'MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_NAME', 'R_COMMENT']).agg('max', numeric_only=True)

customer[(customer['C_ADDRESS'] == 'h') | (customer['C_ACCTBAL'] >= 3067.800825889823)][['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NATIONKEY']]

partsupp.merge(part[(part['P_NAME'] != 'm')][['SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['QUANTITY'] != 45)][['L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['P_COMMENT', 'PS_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] >= '1992-05-02') | (lineitem['EXTENDEDPRICE'] >= 53743.658986180926) | (lineitem['SHIPDATE'] == '1992-04-27') | (lineitem['DISCOUNT'] == 0.0443210037617032)]

supplier[['S_NAME', 'S_ADDRESS']].merge(partsupp.merge(part[['PT_COMMENT', 'MFGR', 'RETAILPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 2667)].merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD)].merge(partsupp[(partsupp['P_COMMENT'] == 'p')][['PS_SUPPKEY']].merge(lineitem[(lineitem['DISCOUNT'] == 0.0274078320742978)][['LINESTATUS', 'COMMITDATE', 'QUANTITY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation.merge(region[(region['R_NAME'].str.startswith('AME')) & (region['R_NAME'] != 'AFR')].merge(nation.merge(customer[(customer['C_COMMENT'].str.startswith('s')) & (customer['C_PHONE'].str.startswith('27-'))].merge(orders.merge(customer[['C_CUSTKEY', 'C_ACCTBAL']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['TOTALPRICE'] != 95646.52014540565)].merge(customer[(customer['C_NATIONKEY'] != 15)][['C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] >= 16)][['N_REGIONKEY']].merge(supplier[(supplier['S_ACCTBAL'] < 3510.33601551412) & (supplier['S_NATIONKEY'] <= 7)][['S_COMMENT', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME']).agg('mean', numeric_only=True)

partsupp.merge(supplier[(supplier['S_PHONE'] != '32-') | (supplier['S_NATIONKEY'] <= 16)].merge(nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_REGIONKEY'] <= 2)][['N_NATIONKEY']].merge(supplier.merge(partsupp[(partsupp['AVAILQTY'] < 1664)].merge(lineitem[(lineitem['SHIPDATE'] < '1998-10-30') | (lineitem['SHIPDATE'] != '1992-04-27')], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['CONTAINER'].str.startswith('LG'))][['BRAND', 'RETAILPRICE', 'MFGR']].merge(partsupp[(partsupp['PS_PARTKEY'] == 18) | (partsupp['SUPPLYCOST'] < 574.8623364042858)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD) | (lineitem['COMMITDATE'] < '1998-10-16')], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['SUPPLYCOST', 'PS_PARTKEY']).agg('count')

nation[(nation['N_COMMENT'] == 'i')].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[['C_ACCTBAL']].merge(orders[(orders['O_ORDERKEY'] != 148)][['ORDERDATE', 'O_CUSTKEY', 'TOTALPRICE', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] >= 43209.41609831098)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[['S_COMMENT', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(supplier[(supplier['S_COMMENT'] == 'w')].merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY')

orders[['O_CUSTKEY']].merge(customer[['C_ACCTBAL', 'C_ADDRESS', 'C_CUSTKEY', 'C_NAME']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer[(customer['C_NATIONKEY'] < 21)][['C_COMMENT', 'C_ACCTBAL']].merge(orders.merge(lineitem[(lineitem['TAX'] <= 0.06408493558525116)][['L_PARTKEY', 'L_ORDERKEY', 'LINESTATUS']].merge(partsupp[(partsupp['PS_SUPPKEY'] <= 334) | (partsupp['PS_PARTKEY'] < 4)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_CUSTKEY']).agg('sum', numeric_only=True)

region.merge(nation.merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 't')][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer.merge(orders[(orders['ORDERSTATUS'] == O)], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'o')][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']].merge(supplier[(supplier['S_PHONE'] == '28-')].merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

lineitem[(lineitem['SHIPDATE'] <= '1998-10-30')].merge(orders[['ORDERPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier.merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_NATIONKEY', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].groupby(by=['S_SUPPKEY']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(lineitem.merge(partsupp[(partsupp['PS_SUPPKEY'] != 763) | (partsupp['PS_SUPPKEY'] <= 7024)].merge(part[['SIZE', 'RETAILPRICE']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['P_COMMENT'] != 'the') & (partsupp['SUPPLYCOST'] >= 746.3095973372051)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']]

supplier[(supplier['S_COMMENT'] != 'es ') & (supplier['S_ADDRESS'] != '9') & (supplier['S_COMMENT'] == 'j') & (supplier['S_PHONE'] != '26-')]

nation

lineitem[['L_PARTKEY', 'RECEIPTDATE', 'LINESTATUS']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('bli'))][['P_COMMENT', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['PS_SUPPKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['O_COMMENT', 'ORDERSTATUS', 'O_CUSTKEY']].merge(customer[(customer['C_ACCTBAL'] > 2101.8036223397976)][['C_COMMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

partsupp[(partsupp['PS_PARTKEY'] >= 31) & (partsupp['SUPPLYCOST'] > 434.6484503564571)].groupby(by=['PS_SUPPKEY', 'AVAILQTY']).agg('min', numeric_only=True)

nation[(nation['N_REGIONKEY'] <= 2) | (nation['N_NAME'].str.startswith('E'))][['N_COMMENT']]

orders[(orders['O_COMMENT'] == 'x') & (orders['TOTALPRICE'] >= 57551.18867342555)][['CLERK', 'ORDERPRIORITY', 'TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['SHIPMODE'] != TRUCK) & (lineitem['L_COMMENT'].str.startswith('q'))], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_ADDRESS', 'C_PHONE', 'C_ACCTBAL']].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY', 'O_COMMENT']).agg('min', numeric_only=True)

customer[(customer['C_NATIONKEY'] >= 12) | (customer['C_ADDRESS'].str.startswith('u'))][['C_ADDRESS', 'C_COMMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('R')) & (nation['N_REGIONKEY'] == 0)][['N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS', 'C_CUSTKEY']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] == 'r') & (nation['N_NAME'] != 'P') | (nation['N_REGIONKEY'] >= 0)][['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(customer[(customer['C_NAME'] == 'C')][['C_ACCTBAL', 'C_ADDRESS', 'C_COMMENT']].merge(orders.merge(customer[(customer['MKTSEGMENT'] != FURNITURE) & (customer['C_COMMENT'].str.startswith('.'))][['C_ACCTBAL', 'C_PHONE']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_PHONE'] == '17-')], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] <= 3)][['N_NAME']].merge(supplier[(supplier['S_PHONE'] == '3')][['S_SUPPKEY', 'S_NATIONKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer[(customer['C_PHONE'] != '27-') | (customer['C_NATIONKEY'] != 11) & (customer['C_COMMENT'] != 'l') | (customer['C_PHONE'] == '18-')][['C_PHONE']].merge(nation[(nation['N_COMMENT'] != 's')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NATIONKEY'] <= 13)].merge(customer[(customer['MKTSEGMENT'] == AUTOMOBILE) & (customer['C_COMMENT'] != 'c')][['MKTSEGMENT', 'C_CUSTKEY']].merge(orders[(orders['O_ORDERKEY'] != 501) & (orders['ORDERSTATUS'].isin(['F']))][['O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['O_CUSTKEY'] >= 48646) & (orders['SHIPPRIORITY'] >= 0)][['ORDERPRIORITY', 'O_ORDERKEY', 'ORDERDATE']].merge(customer[(customer['C_PHONE'].str.startswith('1')) & (customer['C_CUSTKEY'] < 50)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

partsupp[(partsupp['SUPPLYCOST'] != 131.9516543241913) | (partsupp['SUPPLYCOST'] != 214.31692300657446)][['PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']]

part.merge(partsupp[(partsupp['PS_SUPPKEY'] < 3557)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] < 8474)][['PS_SUPPKEY', 'AVAILQTY', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem[['L_ORDERKEY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'SIZE']).agg('mean', numeric_only=True)

customer[(customer['MKTSEGMENT'] == MACHINERY) & (customer['C_CUSTKEY'] > 1)].merge(orders[(orders['ORDERPRIORITY'].isin(['3-MEDIUM']))][['CLERK', 'SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']].merge(customer[(customer['C_CUSTKEY'] != 58) | (customer['C_NATIONKEY'] > 1)][['MKTSEGMENT', 'C_COMMENT', 'C_ACCTBAL', 'C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[['N_NAME']].merge(customer[(customer['C_COMMENT'] != 'g')][['C_ACCTBAL', 'C_COMMENT']].merge(orders[(orders['CLERK'].str.startswith('C')) & (orders['TOTALPRICE'] != 149858.88806900664)][['O_CUSTKEY', 'O_COMMENT', 'SHIPPRIORITY', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(region[(region['R_COMMENT'] != 'g')][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer[(customer['C_PHONE'] == '13-') | (customer['C_NAME'] != 'C')][['MKTSEGMENT', 'C_NAME', 'C_CUSTKEY', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NAME']).agg('sum', numeric_only=True)

lineitem[['RECEIPTDATE', 'LINESTATUS', 'L_SUPPKEY']].merge(partsupp[['AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RECEIPTDATE']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'].str.startswith('l')) | (region['R_COMMENT'].str.startswith('u')) | (region['R_NAME'] != 'AFR') & (region['R_COMMENT'].str.startswith('u'))]

supplier[(supplier['S_SUPPKEY'] > 193) & (supplier['S_NATIONKEY'] <= 13)]

customer[['C_NATIONKEY', 'C_ADDRESS']].merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['CLERK', 'O_CUSTKEY', 'ORDERSTATUS', 'ORDERDATE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

supplier[(supplier['S_ACCTBAL'] != 7510.989148973192) | (supplier['S_NATIONKEY'] <= 5) | (supplier['S_NATIONKEY'] >= 9)].merge(partsupp[['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp.merge(part[['MFGR']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('max', numeric_only=True)

region[(region['R_COMMENT'] == 'u') | (region['R_REGIONKEY'] > 0)].merge(nation[(nation['N_REGIONKEY'] == 0) & (nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']].merge(supplier[(supplier['S_SUPPKEY'] >= 124)], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] != 'n')][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD', 'BUILDING', 'AUTOMOBILE', 'MACHINERY'])) & (customer['C_NATIONKEY'] < 19)][['C_COMMENT', 'C_PHONE']].merge(orders[(orders['ORDERPRIORITY'] == 2-HIGH)][['TOTALPRICE', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

nation[(nation['N_NATIONKEY'] >= 13)].merge(region[(region['R_COMMENT'] != 'h') & (region['R_NAME'].str.startswith('AME'))].merge(nation[['N_REGIONKEY', 'N_COMMENT']].merge(supplier[['S_COMMENT', 'S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(region[['R_NAME']].merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_NATIONKEY'] >= 4)][['N_REGIONKEY']].merge(region[(region['R_NAME'] != 'ASI') & (region['R_REGIONKEY'] != 0)][['R_COMMENT']].merge(nation[(nation['N_NAME'].str.startswith('B'))][['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('sum', numeric_only=True)

region[['R_NAME', 'R_REGIONKEY']].merge(nation[['N_NAME']].merge(region[(region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l')], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[['O_CUSTKEY', 'O_ORDERKEY', 'ORDERDATE']].groupby(by=['O_CUSTKEY', 'O_ORDERKEY']).agg('sum', numeric_only=True)

partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(supplier[(supplier['S_SUPPKEY'] <= 151) | (supplier['S_PHONE'].str.startswith('2'))][['S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['P_PARTKEY'] <= 26)].merge(partsupp[(partsupp['AVAILQTY'] >= 8980)][['AVAILQTY', 'PS_SUPPKEY', 'P_COMMENT']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(supplier[(supplier['S_NATIONKEY'] >= 18) | (supplier['S_PHONE'] != '1')][['S_ADDRESS']].merge(nation[(nation['N_NAME'] == 'E')][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['P_COMMENT']).agg('max', numeric_only=True)

part[(part['P_PARTKEY'] == 25) | (part['P_NAME'] != 'v') | (part['P_NAME'].str.startswith('bis'))][['TYPE', 'SIZE', 'MFGR', 'CONTAINER', 'P_PARTKEY']].merge(partsupp[['SUPPLYCOST']].merge(lineitem[['SHIPDATE', 'COMMITDATE', 'RETURNFLAG', 'EXTENDEDPRICE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

customer[(customer['C_PHONE'].str.startswith('22-')) & (customer['C_CUSTKEY'] == 69) | (customer['C_NAME'] != 'C') | (customer['C_NATIONKEY'] <= 0)][['C_NAME']].merge(orders.merge(lineitem.merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_NAME']).agg('count')

partsupp[(partsupp['PS_SUPPKEY'] == 6234)][['PS_PARTKEY']]

orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_COMMENT'] == 'o')], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['DISCOUNT'] != 0.05984606908153426)][['DISCOUNT', 'L_COMMENT', 'LINENUMBER', 'TAX']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['TOTALPRICE', 'ORDERSTATUS']).agg('mean', numeric_only=True)

orders[(orders['ORDERSTATUS'] != O)][['ORDERPRIORITY']].merge(customer[['C_NAME', 'C_PHONE', 'C_CUSTKEY']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['L_PARTKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['TAX'] != 0.016392059514244536) | (lineitem['L_SUPPKEY'] <= 9729)][['RECEIPTDATE', 'LINESTATUS']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL', 'S_SUPPKEY', 'S_COMMENT']].merge(partsupp[(partsupp['P_COMMENT'] == 'v') | (partsupp['PS_PARTKEY'] < 23)][['SUPPLYCOST', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_PHONE']).agg('sum', numeric_only=True)

nation[(nation['N_REGIONKEY'] == 2)].merge(customer.merge(nation[['N_NAME', 'N_NATIONKEY']].merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_COMMENT'] != 'd')].merge(nation[(nation['N_COMMENT'].str.startswith('t'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier[(supplier['S_SUPPKEY'] >= 152) & (supplier['S_NAME'].str.startswith('S'))].merge(partsupp[(partsupp['AVAILQTY'] > 4568) | (partsupp['P_COMMENT'] != 'k')][['AVAILQTY']].merge(supplier[(supplier['S_NAME'].str.startswith('S'))][['S_PHONE']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY']).agg('count')

orders.merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(orders[(orders['ORDERSTATUS'] == O) | (orders['TOTALPRICE'] >= 73036.44286639905)][['ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_NATIONKEY'] >= 0)][['C_NAME', 'C_ACCTBAL', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['TAX'] != 0.05469442725816798) | (lineitem['L_SUPPKEY'] <= 8380)].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH']))], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

supplier.merge(partsupp[(partsupp['P_COMMENT'] != 'j') | (partsupp['P_COMMENT'] == 't')][['PS_SUPPKEY', 'PS_PARTKEY']].merge(lineitem.merge(orders[(orders['O_CUSTKEY'] == 52654) | (orders['TOTALPRICE'] >= 9386.939251501104)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NATIONKEY'] > 12)], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(supplier.merge(nation[(nation['N_NAME'] != 'E')].merge(supplier[(supplier['S_PHONE'] == '14-')][['S_NATIONKEY', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY')

region[(region['R_NAME'] != 'A') | (region['R_REGIONKEY'] > 1) | (region['R_COMMENT'] != 'u')]

nation[(nation['N_NAME'] != 'M')][['N_COMMENT', 'N_REGIONKEY']].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_COMMENT', 'N_REGIONKEY']).agg('max', numeric_only=True)

supplier.merge(nation[['N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_PHONE', 'S_SUPPKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'].isin(['O'])) | (lineitem['L_COMMENT'] != 'v') | (lineitem['SHIPINSTRUCT'] != COLLECT COD) & (lineitem['EXTENDEDPRICE'] != 47625.87029492173)].groupby(by=['TAX']).agg('max', numeric_only=True)

nation[(nation['N_NAME'] != 'C')][['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] == 13)][['S_PHONE']].merge(partsupp.merge(lineitem[(lineitem['L_SUPPKEY'] < 5147) | (lineitem['SHIPMODE'] == REG AIR)][['QUANTITY', 'RECEIPTDATE', 'SHIPINSTRUCT', 'EXTENDEDPRICE']].merge(orders[['TOTALPRICE', 'ORDERDATE', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_COMMENT', 'N_NAME']).agg('min', numeric_only=True)

lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'FOB', 'REG AIR', 'TRUCK', 'SHIP', 'AIR'])) & (lineitem['RETURNFLAG'].isin(['N', 'R'])) & (lineitem['EXTENDEDPRICE'] > 33380.19155292971) & (lineitem['SHIPDATE'] == '1998-10-30')].merge(orders.merge(lineitem[(lineitem['L_COMMENT'] != 'o')][['RECEIPTDATE', 'TAX', 'LINENUMBER', 'RETURNFLAG']].merge(partsupp[(partsupp['AVAILQTY'] == 1332) & (partsupp['PS_PARTKEY'] < 32)][['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['L_PARTKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_ORDERKEY'] != 182) & (lineitem['SHIPDATE'] <= '1998-10-30')]

orders[(orders['TOTALPRICE'] < 306880.3598434244) | (orders['O_CUSTKEY'] == 144983) & (orders['ORDERSTATUS'] == O) | (orders['CLERK'] != 'C')][['ORDERDATE', 'ORDERSTATUS', 'O_ORDERKEY', 'CLERK']].merge(lineitem[(lineitem['LINENUMBER'] <= 6)][['SHIPDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['O_ORDERKEY', 'CLERK']).agg('count')

customer[(customer['C_COMMENT'] != 'h') | (customer['C_COMMENT'] == 'n')][['C_ADDRESS']].merge(orders[['ORDERPRIORITY', 'SHIPPRIORITY']].merge(lineitem[['RECEIPTDATE', 'RETURNFLAG', 'SHIPDATE', 'EXTENDEDPRICE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] < 62359)][['ORDERDATE', 'SHIPPRIORITY', 'O_COMMENT']].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['COLLECT COD', 'TAKE BACK RETURN', 'DELIVER IN PERSON', 'NONE']))], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_COMMENT'] != 'a')].merge(region[['R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_REGIONKEY'] != 3) & (nation['N_NATIONKEY'] <= 21)][['N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

supplier[['S_ACCTBAL', 'S_COMMENT']].groupby(by=['S_ACCTBAL']).agg('min', numeric_only=True)

region[['R_COMMENT', 'R_NAME']].merge(nation[(nation['N_COMMENT'] == 'r') | (nation['N_COMMENT'] != 'u')][['N_NAME', 'N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_ADDRESS'] != 'X')][['C_ACCTBAL', 'MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] <= 1)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY']].merge(customer[(customer['C_ACCTBAL'] >= 1002.0614370281855)][['C_NATIONKEY', 'C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('min', numeric_only=True)

region

customer.merge(orders[['ORDERSTATUS', 'TOTALPRICE', 'SHIPPRIORITY']].merge(customer[['C_NAME']].merge(orders[(orders['O_CUSTKEY'] != 10270) & (orders['O_CUSTKEY'] > 50757)][['ORDERDATE', 'O_COMMENT', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders.merge(customer[(customer['C_COMMENT'] == 'n')][['C_PHONE', 'C_COMMENT', 'C_ACCTBAL', 'C_CUSTKEY']].merge(orders[['O_ORDERKEY', 'ORDERSTATUS']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_ADDRESS'].str.startswith('o'))].merge(partsupp[(partsupp['SUPPLYCOST'] == 615.3222732686629)][['P_COMMENT']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_NATIONKEY'] > 9)][['N_REGIONKEY']].merge(customer[(customer['C_PHONE'] == '22-')][['C_CUSTKEY', 'C_ADDRESS']].merge(orders[(orders['O_COMMENT'] != '.')][['O_ORDERKEY', 'ORDERPRIORITY']].merge(customer[['C_COMMENT', 'C_ADDRESS', 'C_NAME', 'MKTSEGMENT']].merge(nation.merge(region[(region['R_NAME'] == 'AFR') & (region['R_COMMENT'].str.startswith('l'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['AVAILQTY'] == 3319) & (partsupp['P_COMMENT'].str.startswith('o'))][['P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'g') | (region['R_COMMENT'].str.startswith('l'))][['R_COMMENT', 'R_NAME', 'R_REGIONKEY']].groupby(by=['R_REGIONKEY', 'R_COMMENT']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'v') | (nation['N_REGIONKEY'] < 2) | (nation['N_REGIONKEY'] <= 2) | (nation['N_COMMENT'].str.startswith('c'))][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY')

region[(region['R_REGIONKEY'] != 0) & (region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('A')) & (region['R_NAME'].str.startswith('AME'))][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].groupby(by=['R_NAME']).agg('sum', numeric_only=True)

nation[(nation['N_COMMENT'] != 's') & (nation['N_NAME'].str.startswith('F')) & (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']]

part.merge(partsupp[(partsupp['AVAILQTY'] <= 1202) & (partsupp['SUPPLYCOST'] >= 630.7260296015409)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] != 600)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'P_COMMENT']].merge(lineitem[(lineitem['EXTENDEDPRICE'] < 16625.1515444603)][['QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier.merge(partsupp[(partsupp['P_COMMENT'] == 'v') | (partsupp['PS_PARTKEY'] > 34)].merge(part[['SIZE', 'PT_COMMENT', 'BRAND', 'TYPE']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] > 809)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

customer[(customer['C_ADDRESS'] != 'U') & (customer['MKTSEGMENT'] == BUILDING) & (customer['C_NAME'] == 'C') | (customer['MKTSEGMENT'] == MACHINERY)][['C_COMMENT', 'C_NATIONKEY', 'C_NAME']].merge(nation[(nation['N_NAME'] != 'V') & (nation['N_COMMENT'] != 't')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[['O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERSTATUS'] == O) & (orders['TOTALPRICE'] <= 225881.82968082564)], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem

lineitem[(lineitem['L_PARTKEY'] < 66636) & (lineitem['EXTENDEDPRICE'] <= 60843.35390343467) | (lineitem['DISCOUNT'] != 0.013472527141190195) | (lineitem['LINENUMBER'] < 5)][['QUANTITY', 'RECEIPTDATE', 'TAX']].groupby(by=['TAX', 'QUANTITY']).agg('max', numeric_only=True)

part.merge(partsupp.merge(supplier[(supplier['S_PHONE'] != '32-')], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('count')

part[(part['P_PARTKEY'] != 46) | (part['MFGR'] == Manufacturer#2)][['BRAND', 'PT_COMMENT']].merge(partsupp[(partsupp['PS_PARTKEY'] == 39)][['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] >= 869.9791621010296) | (partsupp['SUPPLYCOST'] != 490.51707680258045)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'BRAND']).agg('max', numeric_only=True)

orders.merge(customer[(customer['C_PHONE'].str.startswith('18-'))].merge(nation[(nation['N_COMMENT'].str.startswith('y'))][['N_REGIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['L_SUPPKEY'] >= 3215) | (lineitem['RECEIPTDATE'] >= '1998-11-06')][['SHIPDATE', 'SHIPMODE', 'SHIPINSTRUCT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

orders.merge(lineitem[(lineitem['SHIPMODE'] == REG AIR)][['L_PARTKEY']].merge(orders[(orders['SHIPPRIORITY'] == 0) & (orders['ORDERDATE'] < '1998-07-21')][['O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_NAME'] == 'C')][['C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY']).agg('mean', numeric_only=True)

orders[(orders['ORDERPRIORITY'] != 4-NOT SPECIFIED) | (orders['O_CUSTKEY'] > 28373)].merge(customer[['C_ACCTBAL', 'MKTSEGMENT', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['COMMITDATE', 'DISCOUNT', 'QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

region.groupby(by=['R_COMMENT', 'R_REGIONKEY']).agg('count')

customer[(customer['C_NAME'].str.startswith('C'))].groupby(by=['MKTSEGMENT']).agg('count')

orders.merge(customer[(customer['C_NAME'] != 'C') & (customer['MKTSEGMENT'] != FURNITURE)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[['C_NAME', 'C_ACCTBAL', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_PHONE'].str.startswith('2'))][['C_ADDRESS', 'C_PHONE', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] > 3) & (nation['N_REGIONKEY'] > 0)][['N_NAME', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['ORDERSTATUS']).agg('max', numeric_only=True)

part[['BRAND', 'TYPE', 'CONTAINER']].merge(partsupp[(partsupp['PS_PARTKEY'] == 28) | (partsupp['P_COMMENT'] == 'the')].merge(lineitem.merge(partsupp[(partsupp['PS_PARTKEY'] >= 32) & (partsupp['AVAILQTY'] != 5752)][['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY', 'SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] >= 38) & (partsupp['PS_PARTKEY'] < 23)].merge(supplier[(supplier['S_PHONE'] == '2') | (supplier['S_ADDRESS'] != 'g')][['S_NATIONKEY', 'S_COMMENT', 'S_SUPPKEY', 'S_PHONE']].merge(nation[(nation['N_NAME'] != 'I')][['N_REGIONKEY', 'N_NATIONKEY', 'N_NAME', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] == 33) & (partsupp['SUPPLYCOST'] != 292.82920836084185)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp.merge(lineitem[['EXTENDEDPRICE', 'L_SUPPKEY', 'QUANTITY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['P_NAME'] != 'l') | (part['P_NAME'].str.startswith('s'))][['RETAILPRICE', 'P_NAME', 'BRAND', 'MFGR']].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[(lineitem['COMMITDATE'] >= '1998-10-16') & (lineitem['EXTENDEDPRICE'] > 37199.60453769379)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

part.merge(partsupp[(partsupp['AVAILQTY'] >= 6700)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part[(part['SIZE'] == 36) & (part['P_PARTKEY'] >= 68)][['RETAILPRICE']]

orders[(orders['ORDERPRIORITY'].isin(['1-URGENT', '5-LOW'])) & (orders['SHIPPRIORITY'] < 0) | (orders['O_CUSTKEY'] < 118803)][['TOTALPRICE']].merge(customer[['C_CUSTKEY', 'C_NAME', 'C_ADDRESS']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer.merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

lineitem[(lineitem['TAX'] <= 0.04658462642932908) & (lineitem['EXTENDEDPRICE'] < 84168.4631730334) | (lineitem['SHIPINSTRUCT'] == TAKE BACK RETURN)].merge(partsupp[(partsupp['PS_PARTKEY'] != 25)][['P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 820.1634312754982) & (partsupp['AVAILQTY'] > 3100)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

nation[(nation['N_COMMENT'].str.startswith('o')) & (nation['N_NAME'].str.startswith('C')) | (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] <= 0)][['N_COMMENT']].groupby(by=['N_COMMENT']).agg('max', numeric_only=True)

region.merge(nation[(nation['N_NATIONKEY'] <= 16)][['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'U') & (nation['N_COMMENT'].str.startswith('u'))][['N_REGIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] > 20)][['N_COMMENT', 'N_NATIONKEY']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

orders[['ORDERPRIORITY']].merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['LINENUMBER'] == 2)][['L_SUPPKEY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

partsupp[(partsupp['P_COMMENT'].str.startswith('l')) & (partsupp['PS_SUPPKEY'] == 3581) & (partsupp['PS_PARTKEY'] >= 2)][['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST']]

part[(part['TYPE'] == 'L') | (part['P_NAME'].str.startswith('r')) | (part['CONTAINER'] != 'LG') | (part['SIZE'] <= 16)][['P_NAME', 'CONTAINER']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['SUPPLYCOST'] > 900.8485407257289)][['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_SUPPKEY', 'AVAILQTY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['P_NAME']).agg('min', numeric_only=True)

partsupp[(partsupp['SUPPLYCOST'] == 578.7179768465684) | (partsupp['AVAILQTY'] != 8556)][['AVAILQTY']].merge(part.merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

part[(part['TYPE'] != 'SMA') & (part['SIZE'] >= 28) | (part['SIZE'] >= 36) & (part['PT_COMMENT'] != 'q')].groupby(by=['P_PARTKEY']).agg('mean', numeric_only=True)

orders[['ORDERPRIORITY', 'ORDERSTATUS', 'CLERK']].merge(lineitem[(lineitem['LINESTATUS'] == F)].merge(partsupp[(partsupp['PS_PARTKEY'] >= 35) & (partsupp['PS_SUPPKEY'] > 959)][['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY']], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_ORDERKEY'] >= 187) | (lineitem['COMMITDATE'] == '1998-10-16')][['EXTENDEDPRICE', 'SHIPINSTRUCT', 'L_COMMENT', 'L_ORDERKEY']].merge(orders.merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['L_SUPPKEY'] <= 1550)].merge(orders[['ORDERDATE', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

customer[(customer['C_NATIONKEY'] < 8) | (customer['C_ACCTBAL'] >= 4040.8794463853037) & (customer['C_ADDRESS'].str.startswith('l')) & (customer['MKTSEGMENT'] == AUTOMOBILE)]

partsupp[['PS_PARTKEY']].merge(part[(part['P_NAME'].str.startswith('blu'))][['PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem[['SHIPMODE', 'SHIPINSTRUCT', 'SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(supplier[(supplier['S_ADDRESS'] != 'L') | (supplier['S_SUPPKEY'] != 49)], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['PS_PARTKEY']).agg('max', numeric_only=True)

supplier[['S_NATIONKEY']].merge(nation[(nation['N_NAME'].str.startswith('I')) | (nation['N_NAME'].str.startswith('M'))], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] != 'n') & (nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']].merge(supplier[['S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_NAME'].str.startswith('P')) & (nation['N_NAME'] != 'M')], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_NATIONKEY'] < 8) | (nation['N_COMMENT'] != 'p')].groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

region[(region['R_COMMENT'] != 'u') | (region['R_NAME'].str.startswith('M'))]

customer[['C_PHONE', 'C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']]

region[(region['R_REGIONKEY'] >= 0) | (region['R_NAME'] == 'M')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_COMMENT', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_PHONE'] == '32-')][['S_NATIONKEY', 'S_NAME', 'S_SUPPKEY', 'S_PHONE', 'S_COMMENT']].merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_COMMENT'] != 'v')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp.merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY').groupby(by=['SUPPLYCOST', 'PS_SUPPKEY']).agg('min', numeric_only=True)

lineitem.merge(partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] < 39072.25466096972)].merge(orders[['ORDERSTATUS', 'ORDERPRIORITY', 'CLERK', 'ORDERDATE']].merge(lineitem[['TAX', 'RETURNFLAG', 'L_COMMENT']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 6106)][['PS_SUPPKEY']].merge(part[(part['P_PARTKEY'] >= 144) | (part['TYPE'] == 'E')][['TYPE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['EXTENDEDPRICE', 'SHIPINSTRUCT']).agg('count')

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'I')][['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY', 'N_NAME']].merge(customer[(customer['C_PHONE'].str.startswith('13-')) & (customer['C_NATIONKEY'] >= 0)], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY', 'N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY', 'S_ADDRESS']).agg('max', numeric_only=True)

lineitem.merge(partsupp[['AVAILQTY', 'PS_SUPPKEY']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(orders[['TOTALPRICE', 'ORDERPRIORITY']].merge(customer[(customer['C_CUSTKEY'] != 79)][['MKTSEGMENT']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['EXTENDEDPRICE', 'SHIPINSTRUCT']).agg('sum', numeric_only=True)

customer[['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].groupby(by=['MKTSEGMENT', 'C_ACCTBAL']).agg('sum', numeric_only=True)

part[['P_NAME', 'BRAND', 'SIZE', 'TYPE', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] <= 4055)].merge(lineitem[(lineitem['SHIPINSTRUCT'].isin(['TAKE BACK RETURN', 'NONE', 'COLLECT COD', 'DELIVER IN PERSON']))], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'u')][['P_COMMENT']].merge(part[(part['P_PARTKEY'] == 83) & (part['P_PARTKEY'] == 178)][['P_PARTKEY', 'P_NAME', 'SIZE']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('max', numeric_only=True)

orders[(orders['ORDERSTATUS'] != P) & (orders['ORDERSTATUS'].isin(['P', 'O'])) & (orders['ORDERSTATUS'] != F)][['SHIPPRIORITY', 'ORDERSTATUS']].merge(lineitem.merge(orders[(orders['ORDERPRIORITY'] != 1-URGENT) | (orders['O_CUSTKEY'] >= 80614)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[['RECEIPTDATE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['TAX'] < 0.010547371434469736) | (lineitem['LINESTATUS'] == O)], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

part[(part['P_NAME'] == 'h') & (part['PT_COMMENT'].str.startswith('d')) & (part['CONTAINER'] == 'JUMBO') | (part['CONTAINER'] == 'WRAP')][['BRAND', 'P_NAME']].merge(partsupp[['P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(lineitem[(lineitem['COMMITDATE'] < '1992-05-15') | (lineitem['RETURNFLAG'].isin(['A', 'R', 'N']))].merge(partsupp.merge(lineitem.merge(partsupp[(partsupp['P_COMMENT'] != ';') & (partsupp['P_COMMENT'].str.startswith('.'))][['SUPPLYCOST']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[['PS_PARTKEY']].merge(supplier.merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(region[['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[['N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[['LINENUMBER', 'RECEIPTDATE']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part[(part['P_NAME'] != 'f') & (part['SIZE'] > 21)][['MFGR', 'SIZE', 'P_NAME', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['PS_PARTKEY']).agg('min', numeric_only=True)

part

lineitem[(lineitem['EXTENDEDPRICE'] > 66621.17411607917) & (lineitem['QUANTITY'] < 13)][['L_PARTKEY', 'DISCOUNT', 'SHIPINSTRUCT']].merge(partsupp[['PS_PARTKEY', 'P_COMMENT']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['AVAILQTY'] < 1330)].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY').groupby(by=['AVAILQTY']).agg('min', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) & (customer['C_ADDRESS'].str.startswith('4'))][['C_NATIONKEY', 'C_CUSTKEY', 'C_NAME']].merge(nation[(nation['N_NATIONKEY'] == 13)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NAME', 'N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

lineitem[(lineitem['EXTENDEDPRICE'] >= 40200.454771134355) & (lineitem['COMMITDATE'] <= '1992-05-15') | (lineitem['L_COMMENT'] != 'f') | (lineitem['LINENUMBER'] <= 1)].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPDATE', 'EXTENDEDPRICE']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] > 13) & (nation['N_NATIONKEY'] > 15)][['N_NATIONKEY', 'N_COMMENT']].merge(customer[(customer['C_NAME'] == 'C') & (customer['C_COMMENT'] == '.')][['C_CUSTKEY', 'C_NAME', 'MKTSEGMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier.merge(nation.merge(customer[(customer['MKTSEGMENT'].isin(['MACHINERY', 'AUTOMOBILE']))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

part[(part['TYPE'] != 'L') | (part['SIZE'] <= 14)]

customer[['C_COMMENT', 'C_NAME', 'C_NATIONKEY']].groupby(by=['C_COMMENT', 'C_NATIONKEY']).agg('min', numeric_only=True)

customer.groupby(by=['C_ADDRESS', 'C_NAME']).agg('count')

region[(region['R_COMMENT'].str.startswith('g')) | (region['R_NAME'].str.startswith('M')) & (region['R_NAME'] == 'AME') & (region['R_NAME'].str.startswith('AFR'))][['R_NAME', 'R_COMMENT']]

region[(region['R_REGIONKEY'] <= 0)].merge(nation[(nation['N_NAME'].str.startswith('I'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NATIONKEY'] != 9) | (nation['N_COMMENT'] != 'i')][['N_NAME', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

supplier[(supplier['S_NAME'] != 'S')][['S_ADDRESS', 'S_ACCTBAL']].merge(partsupp[(partsupp['PS_SUPPKEY'] < 837)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ADDRESS']).agg('min', numeric_only=True)

part[(part['RETAILPRICE'] == 982.6996095548587) | (part['P_PARTKEY'] >= 107) | (part['P_NAME'] != 'n') & (part['BRAND'] == Brand#45)][['TYPE', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] < 6309) | (partsupp['SUPPLYCOST'] >= 783.339996779365)], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_COMMENT'] != 'c') & (customer['C_PHONE'] != '1') | (customer['MKTSEGMENT'] != HOUSEHOLD) & (customer['C_ACCTBAL'] != 2659.6966923664904)][['C_NAME', 'C_NATIONKEY', 'C_ACCTBAL', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation[(nation['N_NAME'].str.startswith('C'))][['N_NAME', 'N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_NAME', 'C_ACCTBAL']).agg('sum', numeric_only=True)

partsupp[(partsupp['PS_SUPPKEY'] >= 4366) | (partsupp['SUPPLYCOST'] != 227.07323178640436) | (partsupp['AVAILQTY'] == 3151) & (partsupp['P_COMMENT'].str.startswith('t'))][['PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']]

part[['P_PARTKEY', 'RETAILPRICE', 'PT_COMMENT', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] < 9873)][['AVAILQTY']].merge(lineitem[(lineitem['EXTENDEDPRICE'] == 30220.810006108262)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['SHIPINSTRUCT'] != COLLECT COD) | (lineitem['L_ORDERKEY'] != 154)], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

supplier.merge(partsupp[(partsupp['PS_PARTKEY'] <= 42) & (partsupp['SUPPLYCOST'] > 144.5409095841652)][['AVAILQTY', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['PS_PARTKEY'] <= 10) & (partsupp['SUPPLYCOST'] == 124.35115033384892)][['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_NATIONKEY', 'S_NAME']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

customer.merge(orders[(orders['O_COMMENT'] != 'w')][['O_COMMENT', 'CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 3086) | (partsupp['SUPPLYCOST'] >= 435.33156434356783)].merge(lineitem, left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['SUPPLYCOST']].merge(part[(part['P_NAME'] == 'p') & (part['BRAND'] != Brand#24)][['SIZE', 'PT_COMMENT']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['L_PARTKEY', 'SHIPDATE']).agg('sum', numeric_only=True)

nation[(nation['N_NAME'] == 'C')][['N_REGIONKEY']].merge(region[(region['R_REGIONKEY'] < 2)][['R_COMMENT', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_ADDRESS'] != 'T') & (supplier['S_SUPPKEY'] <= 192)][['S_ACCTBAL', 'S_ADDRESS', 'S_SUPPKEY', 'S_NAME']].merge(nation[(nation['N_COMMENT'] == 't') & (nation['N_NATIONKEY'] <= 9)], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY')

customer[(customer['C_NAME'] != 'C')].merge(orders[(orders['O_CUSTKEY'] >= 110081) | (orders['ORDERDATE'] > '1998-07-21')], left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] < 49676) | (orders['O_COMMENT'] == 'a')], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

lineitem[(lineitem['RETURNFLAG'].isin(['N', 'A'])) & (lineitem['L_SUPPKEY'] >= 4019)].merge(orders[(orders['O_COMMENT'].str.startswith('uri'))].merge(lineitem.merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(orders[(orders['ORDERDATE'] == '1992-01-13')][['O_CUSTKEY', 'O_ORDERKEY', 'ORDERPRIORITY', 'CLERK']].merge(customer.merge(nation[['N_NATIONKEY', 'N_COMMENT', 'N_NAME', 'N_REGIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

supplier[(supplier['S_NAME'].str.startswith('S')) & (supplier['S_ADDRESS'].str.startswith('f'))][['S_NAME', 'S_PHONE', 'S_ACCTBAL']].merge(partsupp.merge(part[['BRAND', 'P_NAME']].merge(partsupp[(partsupp['AVAILQTY'] <= 4179) & (partsupp['P_COMMENT'] != 'd')][['AVAILQTY']].merge(part[['CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(region[(region['R_COMMENT'] != 'u')][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']].merge(nation[(nation['N_COMMENT'].str.startswith('h')) | (nation['N_NAME'].str.startswith('E'))].merge(supplier.merge(partsupp[(partsupp['PS_SUPPKEY'] == 5506) & (partsupp['PS_SUPPKEY'] == 2436)].merge(lineitem[(lineitem['QUANTITY'] < 10)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'] != 'i')][['AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(lineitem[['SHIPMODE']].merge(orders[['SHIPPRIORITY', 'O_COMMENT', 'O_ORDERKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_ACCTBAL', 'S_NAME']).agg('count')

partsupp.groupby(by=['PS_SUPPKEY']).agg('max', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'l') & (lineitem['COMMITDATE'] == '1992-05-15') & (lineitem['L_COMMENT'] != 'ly ') & (lineitem['SHIPDATE'] >= '1992-04-27')][['L_SUPPKEY', 'RECEIPTDATE']].groupby(by=['RECEIPTDATE']).agg('count')

lineitem.merge(partsupp[['SUPPLYCOST']], left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['AVAILQTY'] <= 7415)][['PS_PARTKEY', 'AVAILQTY', 'P_COMMENT']], left_on='L_PARTKEY', right_on='PS_PARTKEY').groupby(by=['DISCOUNT', 'L_COMMENT']).agg('mean', numeric_only=True)

customer[(customer['C_ACCTBAL'] <= 9428.716309664136)][['C_ADDRESS']].merge(orders.merge(customer[['C_NATIONKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation[(nation['N_NAME'] == 'K') | (nation['N_REGIONKEY'] != 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ADDRESS']).agg('sum', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 15) & (nation['N_NAME'].str.startswith('B'))][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[['S_ADDRESS', 'S_ACCTBAL', 'S_COMMENT']], left_on='N_NATIONKEY', right_on='S_NATIONKEY')

nation.groupby(by=['N_REGIONKEY', 'N_NATIONKEY']).agg('mean', numeric_only=True)

orders[(orders['O_COMMENT'] != ' ')]

lineitem[['RETURNFLAG', 'QUANTITY', 'EXTENDEDPRICE', 'SHIPINSTRUCT']].merge(partsupp[['PS_SUPPKEY', 'PS_PARTKEY', 'SUPPLYCOST', 'P_COMMENT']].merge(lineitem[(lineitem['TAX'] != 0.01593064711529368)][['SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

partsupp[(partsupp['PS_SUPPKEY'] < 3346)][['P_COMMENT', 'SUPPLYCOST', 'AVAILQTY', 'PS_SUPPKEY', 'PS_PARTKEY']].merge(supplier[(supplier['S_PHONE'] == '2')][['S_COMMENT', 'S_SUPPKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['LINESTATUS'].isin(['O']))], left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

nation.merge(region[['R_REGIONKEY']].merge(nation[(nation['N_COMMENT'].str.startswith('c')) & (nation['N_REGIONKEY'] != 3)].merge(region[(region['R_REGIONKEY'] >= 1)], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME', 'N_REGIONKEY']).agg('mean', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 12)].merge(supplier[(supplier['S_NATIONKEY'] != 9)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(supplier[['S_ACCTBAL', 'S_NAME', 'S_SUPPKEY', 'S_PHONE']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_COMMENT'].str.startswith('u'))][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_COMMENT'] == 'i') | (nation['N_REGIONKEY'] > 0)][['N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

nation.groupby(by=['N_REGIONKEY']).agg('min', numeric_only=True)

nation[(nation['N_NATIONKEY'] == 17) | (nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 3) | (nation['N_NATIONKEY'] >= 8)]

customer[['C_ADDRESS', 'C_ACCTBAL', 'C_COMMENT']].merge(orders[['TOTALPRICE']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

nation[(nation['N_NATIONKEY'] > 23) | (nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] <= 0) & (nation['N_REGIONKEY'] == 1)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(customer.merge(orders[(orders['O_CUSTKEY'] <= 22294) & (orders['ORDERDATE'] != '1992-01-13')].merge(customer[(customer['C_NAME'] != 'C') & (customer['C_ADDRESS'] != 'f')][['C_NAME']].merge(orders[['O_COMMENT']].merge(customer[(customer['C_PHONE'] == '25-')].merge(nation[(nation['N_COMMENT'].str.startswith('t')) & (nation['N_REGIONKEY'] != 3)][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[(customer['C_CUSTKEY'] >= 24) | (customer['C_COMMENT'].str.startswith('q'))][['C_PHONE', 'C_NATIONKEY', 'C_CUSTKEY', 'MKTSEGMENT']].merge(orders[['CLERK', 'TOTALPRICE', 'O_CUSTKEY']].merge(customer[(customer['C_CUSTKEY'] < 18) | (customer['C_CUSTKEY'] > 82)].merge(orders[(orders['ORDERDATE'] < '1998-07-21')][['SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY')

nation[(nation['N_REGIONKEY'] == 2)][['N_COMMENT', 'N_NATIONKEY']].merge(customer[['C_ADDRESS', 'C_NAME', 'C_COMMENT']], left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(supplier.merge(nation[['N_NATIONKEY', 'N_NAME', 'N_REGIONKEY']].merge(customer[['MKTSEGMENT', 'C_CUSTKEY']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY')

customer[(customer['C_PHONE'] == '2')].merge(nation[['N_NAME', 'N_NATIONKEY']].merge(supplier[['S_ADDRESS', 'S_COMMENT', 'S_NAME', 'S_NATIONKEY']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

nation

part[['P_PARTKEY', 'PT_COMMENT']].merge(partsupp[['P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['PS_PARTKEY', 'SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] < 644.6435675944335)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT']).agg('min', numeric_only=True)

nation[['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_REGIONKEY', 'N_NAME']).agg('count')

customer[(customer['C_NATIONKEY'] < 17) | (customer['MKTSEGMENT'] != HOUSEHOLD)][['MKTSEGMENT', 'C_ACCTBAL']].merge(nation[(nation['N_REGIONKEY'] == 3)], left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_SUPPKEY'] < 64) | (supplier['S_NATIONKEY'] < 14)][['S_ADDRESS', 'S_PHONE', 'S_COMMENT', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_ACCTBAL', 'MKTSEGMENT']).agg('mean', numeric_only=True)

region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] != 0) & (region['R_NAME'].str.startswith('M')) & (region['R_REGIONKEY'] > 2)].merge(nation[(nation['N_NATIONKEY'] < 4)].merge(customer[(customer['C_ADDRESS'] != 'O') | (customer['MKTSEGMENT'].isin(['AUTOMOBILE', 'HOUSEHOLD', 'BUILDING', 'FURNITURE']))], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY', 'R_NAME']).agg('sum', numeric_only=True)

supplier

nation[(nation['N_NAME'].str.startswith('S')) & (nation['N_NAME'].str.startswith('I')) | (nation['N_REGIONKEY'] > 2) & (nation['N_COMMENT'] == 'h')].merge(region[['R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NATIONKEY'] >= 22)].merge(nation[['N_COMMENT', 'N_NATIONKEY', 'N_NAME']].merge(supplier[(supplier['S_NATIONKEY'] >= 2)][['S_SUPPKEY', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_COMMENT'] != 'd') | (customer['C_NATIONKEY'] < 14)][['C_NATIONKEY', 'C_NAME', 'C_COMMENT', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] == 'o') | (nation['N_NATIONKEY'] < 7)][['N_COMMENT']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

lineitem[(lineitem['LINENUMBER'] >= 2) & (lineitem['SHIPDATE'] < '1992-04-27') & (lineitem['LINESTATUS'] != F)][['SHIPINSTRUCT', 'L_ORDERKEY', 'L_COMMENT', 'RETURNFLAG']]

lineitem[(lineitem['L_PARTKEY'] >= 79916) | (lineitem['QUANTITY'] == 42) & (lineitem['DISCOUNT'] <= 0.0393626628098853) | (lineitem['RECEIPTDATE'] != '1992-05-02')].merge(orders[(orders['ORDERPRIORITY'] != 4-NOT SPECIFIED)][['TOTALPRICE', 'O_CUSTKEY', 'SHIPPRIORITY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['RECEIPTDATE']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] != 3) & (region['R_REGIONKEY'] == 0) | (region['R_NAME'] == 'AME') | (region['R_REGIONKEY'] > 3)].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

partsupp.merge(lineitem[(lineitem['QUANTITY'] > 49)][['COMMITDATE', 'RETURNFLAG', 'L_COMMENT', 'L_PARTKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part.merge(partsupp[(partsupp['SUPPLYCOST'] >= 642.1963513015462) & (partsupp['PS_SUPPKEY'] <= 3281)].merge(lineitem[(lineitem['LINESTATUS'] != F) | (lineitem['LINENUMBER'] <= 5)][['QUANTITY']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY')

part.merge(partsupp[(partsupp['PS_SUPPKEY'] <= 5160) & (partsupp['PS_SUPPKEY'] != 4592)].merge(lineitem[['SHIPINSTRUCT']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] == 6089) | (partsupp['PS_PARTKEY'] != 3)][['SUPPLYCOST']], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['PT_COMMENT', 'P_PARTKEY']).agg('sum', numeric_only=True)

lineitem[(lineitem['LINESTATUS'] != O)]

nation.merge(region.merge(nation[(nation['N_NATIONKEY'] >= 14)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[['S_COMMENT', 'S_PHONE', 'S_ADDRESS', 'S_SUPPKEY']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_COMMENT']).agg('count')

orders[(orders['ORDERPRIORITY'] != 1-URGENT) | (orders['ORDERPRIORITY'].isin(['3-MEDIUM', '2-HIGH', '1-URGENT'])) | (orders['CLERK'].str.startswith('C')) | (orders['SHIPPRIORITY'] <= 0)].merge(customer[(customer['C_CUSTKEY'] > 38) & (customer['C_ACCTBAL'] != 2644.71226465979)], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['SHIPPRIORITY']).agg('max', numeric_only=True)

orders[(orders['ORDERPRIORITY'] == 1-URGENT)][['TOTALPRICE', 'O_COMMENT', 'SHIPPRIORITY', 'CLERK']].merge(customer[['C_PHONE']].merge(orders[['TOTALPRICE', 'CLERK', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

orders

lineitem.merge(partsupp[(partsupp['AVAILQTY'] != 4089) | (partsupp['PS_PARTKEY'] >= 16)][['SUPPLYCOST']].merge(supplier.merge(nation[(nation['N_COMMENT'].str.startswith('o'))][['N_COMMENT', 'N_NAME', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[['ORDERPRIORITY', 'O_ORDERKEY', 'TOTALPRICE']].merge(customer[(customer['C_PHONE'] != '13-') & (customer['C_CUSTKEY'] == 6)], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'b')].merge(part[['BRAND', 'RETAILPRICE', 'TYPE', 'CONTAINER']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

part[['MFGR', 'RETAILPRICE', 'PT_COMMENT', 'BRAND']].merge(partsupp[['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_COMMENT'] == ' ') & (orders['CLERK'] != 'C') & (orders['O_COMMENT'] != '-')].groupby(by=['ORDERPRIORITY', 'O_CUSTKEY']).agg('count')

region[(region['R_REGIONKEY'] < 0) | (region['R_NAME'] != 'AME') | (region['R_NAME'].str.startswith('M')) | (region['R_COMMENT'] != 'l')][['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NAME'] == 'J') | (nation['N_NAME'] != 'J')][['N_NAME', 'N_REGIONKEY']].merge(customer[(customer['C_ADDRESS'] != 'n') & (customer['C_ADDRESS'].str.startswith('q'))][['C_ADDRESS']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[['P_PARTKEY', 'SIZE', 'TYPE', 'RETAILPRICE', 'MFGR']].merge(partsupp[(partsupp['P_COMMENT'].str.startswith('f'))][['SUPPLYCOST', 'PS_PARTKEY', 'AVAILQTY']].merge(part[(part['P_NAME'] == 's') & (part['BRAND'].isin(['Brand#34', 'Brand#32', 'Brand#35', 'Brand#24', 'Brand#53', 'Brand#33', 'Brand#11', 'Brand#52']))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE']).agg('mean', numeric_only=True)

customer.groupby(by=['C_PHONE']).agg('max', numeric_only=True)

region[(region['R_REGIONKEY'] <= 0) | (region['R_REGIONKEY'] != 3) | (region['R_NAME'] == 'ASI') & (region['R_REGIONKEY'] <= 2)].merge(nation.merge(region[(region['R_NAME'] != 'A')].merge(nation.merge(supplier[(supplier['S_PHONE'].str.startswith('28-')) | (supplier['S_COMMENT'].str.startswith('r'))].merge(partsupp[(partsupp['AVAILQTY'] <= 4578) | (partsupp['SUPPLYCOST'] != 637.1968211088893)][['PS_SUPPKEY', 'P_COMMENT', 'SUPPLYCOST']].merge(lineitem[(lineitem['RETURNFLAG'] == R) | (lineitem['RETURNFLAG'].isin(['N']))][['SHIPDATE', 'SHIPMODE', 'QUANTITY', 'COMMITDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] != 'V') & (nation['N_NATIONKEY'] > 20)], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation.merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('mean', numeric_only=True)

nation.merge(region[['R_COMMENT', 'R_NAME', 'R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[['S_NAME', 'S_PHONE', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region[(region['R_NAME'] != 'E') | (region['R_NAME'] == 'AME')], left_on='N_REGIONKEY', right_on='R_REGIONKEY').groupby(by=['N_NAME']).agg('min', numeric_only=True)

part.merge(partsupp.merge(lineitem[['L_SUPPKEY', 'RETURNFLAG']].merge(partsupp[(partsupp['PS_PARTKEY'] == 4) | (partsupp['PS_SUPPKEY'] == 4688)], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] >= 1233) | (partsupp['P_COMMENT'] == 'y')][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem.merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] != 15)][['PS_SUPPKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

part[['CONTAINER', 'PT_COMMENT', 'BRAND', 'MFGR']].merge(partsupp[(partsupp['AVAILQTY'] == 4456) & (partsupp['PS_SUPPKEY'] <= 2439)].merge(lineitem[['COMMITDATE']].merge(orders[(orders['SHIPPRIORITY'] < 0) | (orders['SHIPPRIORITY'] > 0)][['O_COMMENT', 'CLERK', 'O_CUSTKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[['P_COMMENT', 'PS_SUPPKEY']].merge(part[(part['TYPE'] == 'L')].merge(partsupp[(partsupp['SUPPLYCOST'] == 476.5196815803273) & (partsupp['SUPPLYCOST'] != 304.38937458978563)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('sum', numeric_only=True)

supplier.merge(nation.merge(region[['R_COMMENT']].merge(nation[(nation['N_NATIONKEY'] > 18)].merge(supplier[(supplier['S_ACCTBAL'] <= 1743.8066528076868)][['S_ACCTBAL', 'S_NAME']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 5969) & (partsupp['SUPPLYCOST'] != 114.83205070388873)][['PS_PARTKEY', 'PS_SUPPKEY']].merge(part.merge(partsupp[(partsupp['SUPPLYCOST'] == 475.65722157017854)], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(supplier[(supplier['S_NAME'] != 'S')][['S_NATIONKEY', 'S_ADDRESS', 'S_NAME', 'S_PHONE']].merge(nation[['N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ADDRESS']).agg('sum', numeric_only=True)

customer.merge(orders, left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['ORDERSTATUS'].isin(['P', 'O', 'F']))], left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_COMMENT']).agg('sum', numeric_only=True)

region[(region['R_COMMENT'] != 'l') | (region['R_COMMENT'].str.startswith('g')) | (region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] == 3)]

customer[(customer['C_PHONE'] == '25-') | (customer['C_CUSTKEY'] < 32) | (customer['C_ACCTBAL'] >= 7397.581163381339) & (customer['C_PHONE'].str.startswith('2'))].groupby(by=['C_NAME']).agg('sum', numeric_only=True)

lineitem[['LINENUMBER', 'SHIPMODE', 'L_SUPPKEY', 'SHIPDATE']].merge(orders, left_on='L_ORDERKEY', right_on='O_ORDERKEY').merge(partsupp[['P_COMMENT', 'PS_PARTKEY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem.merge(orders[(orders['O_CUSTKEY'] < 84306)][['O_ORDERKEY']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

customer[(customer['C_CUSTKEY'] <= 85) & (customer['C_NAME'].str.startswith('C'))].merge(nation[['N_REGIONKEY']].merge(customer, left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders.merge(customer[(customer['C_COMMENT'] == 's') | (customer['C_NATIONKEY'] < 5)].merge(orders[(orders['SHIPPRIORITY'] > 0)][['CLERK', 'TOTALPRICE', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(nation.merge(customer[(customer['C_NATIONKEY'] >= 8)][['C_NATIONKEY']].merge(nation[(nation['N_NAME'] == 'U') & (nation['N_REGIONKEY'] <= 0)][['N_COMMENT']].merge(customer.merge(orders[(orders['SHIPPRIORITY'] > 0) | (orders['ORDERPRIORITY'] == 3-MEDIUM)][['CLERK']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

orders[(orders['ORDERDATE'] >= '1992-01-13') | (orders['O_ORDERKEY'] < 164) | (orders['CLERK'].str.startswith('C'))].merge(lineitem[['QUANTITY']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_PHONE'].str.startswith('2'))][['MKTSEGMENT', 'C_ACCTBAL', 'C_NATIONKEY', 'C_PHONE']].merge(nation[(nation['N_NATIONKEY'] <= 2) | (nation['N_NAME'] != 'C')], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem.merge(partsupp[['AVAILQTY']], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['O_COMMENT']).agg('mean', numeric_only=True)

supplier[(supplier['S_PHONE'].str.startswith('17-')) & (supplier['S_PHONE'] != '14-')].merge(partsupp[(partsupp['AVAILQTY'] <= 727) | (partsupp['P_COMMENT'] != '.')], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_COMMENT'] != 'n')][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(region[(region['R_REGIONKEY'] <= 2) & (region['R_REGIONKEY'] != 3)][['R_REGIONKEY', 'R_NAME', 'R_COMMENT']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_ACCTBAL', 'S_NATIONKEY']).agg('min', numeric_only=True)

orders[['CLERK']].merge(customer[['MKTSEGMENT', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[(part['MFGR'] != Manufacturer#3) | (part['BRAND'] == Brand#11) & (part['CONTAINER'].str.startswith('LG')) & (part['MFGR'].isin(['Manufacturer#5', 'Manufacturer#3']))][['BRAND', 'SIZE']].merge(partsupp[['PS_SUPPKEY']].merge(lineitem[['L_ORDERKEY', 'RECEIPTDATE', 'L_PARTKEY', 'L_SUPPKEY']].merge(orders[(orders['ORDERDATE'] == '1992-01-13')][['O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['SUPPLYCOST'] == 898.3242536721538)], left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE', 'BRAND']).agg('sum', numeric_only=True)

customer[['C_CUSTKEY', 'MKTSEGMENT', 'C_PHONE']].merge(nation[(nation['N_COMMENT'] != 's')], left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_PHONE']).agg('max', numeric_only=True)

nation.merge(customer[(customer['C_PHONE'] == '2') & (customer['C_CUSTKEY'] >= 45)].merge(nation.merge(supplier[['S_COMMENT', 'S_ADDRESS', 'S_NAME', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

supplier[(supplier['S_PHONE'].str.startswith('32-')) | (supplier['S_ADDRESS'].str.startswith('h'))][['S_PHONE', 'S_SUPPKEY']].merge(nation[(nation['N_NAME'].str.startswith('A'))].merge(region.merge(nation[(nation['N_NAME'].str.startswith('K')) | (nation['N_NAME'] != 'P')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_SUPPKEY']).agg('min', numeric_only=True)

region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY')

nation.groupby(by=['N_NATIONKEY', 'N_NAME']).agg('sum', numeric_only=True)

lineitem[(lineitem['RECEIPTDATE'] == '1992-05-02') & (lineitem['QUANTITY'] != 44) | (lineitem['EXTENDEDPRICE'] >= 36270.50073747792) & (lineitem['L_COMMENT'].str.startswith(' ca'))].merge(partsupp.merge(lineitem[(lineitem['SHIPMODE'].isin(['MAIL', 'REG AIR'])) & (lineitem['L_COMMENT'] != 'lit')].merge(partsupp[(partsupp['SUPPLYCOST'] <= 531.1117795685801)][['AVAILQTY', 'P_COMMENT', 'PS_PARTKEY']].merge(lineitem[['LINENUMBER']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['LINENUMBER'] < 6)][['RECEIPTDATE', 'RETURNFLAG', 'EXTENDEDPRICE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY')

nation.merge(customer[(customer['C_CUSTKEY'] < 28)].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

customer.groupby(by=['C_COMMENT']).agg('mean', numeric_only=True)

orders[(orders['O_CUSTKEY'] <= 45883)][['TOTALPRICE', 'ORDERDATE', 'ORDERPRIORITY', 'O_COMMENT']].merge(lineitem[(lineitem['RECEIPTDATE'] <= '1992-05-02') & (lineitem['SHIPDATE'] >= '1992-04-27')], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['MKTSEGMENT']].merge(nation[(nation['N_REGIONKEY'] >= 2)].merge(region[(region['R_COMMENT'] != 'l') & (region['R_REGIONKEY'] >= 0)].merge(nation[(nation['N_NATIONKEY'] > 8) | (nation['N_NAME'] != 'C')], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['L_SUPPKEY', 'TAX']].merge(partsupp[(partsupp['P_COMMENT'] == 'n')], left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE']).agg('max', numeric_only=True)

part[['SIZE']].merge(partsupp[(partsupp['PS_PARTKEY'] == 48)][['PS_SUPPKEY']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['SIZE']).agg('min', numeric_only=True)

part.merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['AVAILQTY', 'P_COMMENT', 'PS_SUPPKEY']].merge(part[['P_NAME']].merge(partsupp[['SUPPLYCOST', 'PS_PARTKEY']].merge(lineitem[['RECEIPTDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(supplier[(supplier['S_SUPPKEY'] < 1) & (supplier['S_NAME'] == 'S')][['S_NATIONKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] >= 28) & (partsupp['PS_SUPPKEY'] == 7094)][['AVAILQTY', 'PS_SUPPKEY', 'SUPPLYCOST', 'PS_PARTKEY']].merge(supplier[['S_NAME', 'S_NATIONKEY']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

partsupp[(partsupp['SUPPLYCOST'] >= 566.2041977082915) & (partsupp['PS_SUPPKEY'] != 1754)][['P_COMMENT', 'PS_SUPPKEY', 'AVAILQTY']].merge(supplier[['S_ACCTBAL', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(part[(part['MFGR'].isin(['Manufacturer#3', 'Manufacturer#4', 'Manufacturer#2'])) & (part['CONTAINER'] != 'JUMBO')][['SIZE']].merge(partsupp[['AVAILQTY', 'PS_PARTKEY']].merge(supplier, left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY').groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

part[['MFGR', 'RETAILPRICE', 'P_NAME']].groupby(by=['MFGR', 'P_NAME']).agg('mean', numeric_only=True)

region[(region['R_REGIONKEY'] > 3)][['R_REGIONKEY', 'R_NAME']].merge(nation[['N_NAME']].merge(supplier.merge(nation[['N_NAME', 'N_NATIONKEY']].merge(supplier[(supplier['S_NAME'] == 'S')][['S_ADDRESS']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_REGIONKEY', 'N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_REGIONKEY']).agg('min', numeric_only=True)

orders[['CLERK', 'ORDERSTATUS', 'O_ORDERKEY']].merge(lineitem[(lineitem['SHIPINSTRUCT'] == DELIVER IN PERSON) | (lineitem['RETURNFLAG'] == A)].merge(partsupp.merge(supplier[(supplier['S_ADDRESS'].str.startswith('S')) | (supplier['S_ADDRESS'].str.startswith('D'))][['S_SUPPKEY', 'S_ACCTBAL']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem[(lineitem['RETURNFLAG'] == N) & (lineitem['LINESTATUS'] != O)][['SHIPINSTRUCT', 'DISCOUNT', 'RECEIPTDATE']].merge(orders[(orders['O_COMMENT'].str.startswith('i')) | (orders['O_CUSTKEY'] == 6938)].merge(customer[(customer['MKTSEGMENT'].isin(['FURNITURE', 'HOUSEHOLD'])) & (customer['MKTSEGMENT'] != AUTOMOBILE)][['C_CUSTKEY', 'C_COMMENT']].merge(nation[(nation['N_REGIONKEY'] < 3) | (nation['N_NATIONKEY'] < 3)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(region.merge(nation[(nation['N_REGIONKEY'] > 2)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[(customer['C_NAME'] == 'C') & (customer['MKTSEGMENT'].isin(['BUILDING', 'FURNITURE', 'AUTOMOBILE']))][['C_NATIONKEY', 'C_ACCTBAL']].merge(nation.merge(region[(region['R_REGIONKEY'] == 1)][['R_COMMENT', 'R_REGIONKEY', 'R_NAME']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY')

part[['P_NAME', 'CONTAINER', 'BRAND', 'SIZE', 'MFGR']].merge(partsupp[['PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[['C_PHONE']].merge(nation[(nation['N_NAME'].str.startswith('R')) | (nation['N_REGIONKEY'] >= 0)][['N_REGIONKEY', 'N_NAME', 'N_NATIONKEY', 'N_COMMENT']].merge(customer[(customer['C_COMMENT'] != 's') | (customer['C_ACCTBAL'] < 7677.525459265886)][['C_NAME', 'C_NATIONKEY']].merge(orders[(orders['TOTALPRICE'] >= 168811.2939064896)][['CLERK', 'ORDERPRIORITY', 'O_ORDERKEY', 'O_COMMENT']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'l') | (nation['N_REGIONKEY'] < 2)][['N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(customer.merge(nation[(nation['N_NATIONKEY'] == 22) & (nation['N_REGIONKEY'] > 1)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(orders[(orders['TOTALPRICE'] >= 325366.83429803967)][['O_COMMENT', 'SHIPPRIORITY', 'ORDERPRIORITY', 'O_CUSTKEY']].merge(lineitem.merge(orders[(orders['ORDERDATE'] != '1992-01-13')][['ORDERSTATUS', 'O_COMMENT', 'ORDERDATE']].merge(lineitem[['QUANTITY', 'EXTENDEDPRICE']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY')

supplier[(supplier['S_NAME'] == 'S')][['S_NATIONKEY', 'S_ACCTBAL']].merge(nation[(nation['N_NATIONKEY'] != 7)][['N_NATIONKEY', 'N_NAME', 'N_COMMENT', 'N_REGIONKEY']], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY')

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == '6') & (customer['MKTSEGMENT'] != AUTOMOBILE) | (customer['C_NAME'] == 'C')].merge(nation[(nation['N_NATIONKEY'] != 0)].merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').merge(nation[(nation['N_COMMENT'] == 'v') | (nation['N_REGIONKEY'] != 1)][['N_COMMENT', 'N_NATIONKEY', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY')

region.merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_COMMENT'] == 'r') & (nation['N_NATIONKEY'] == 12)][['N_NATIONKEY']].merge(customer[['C_ACCTBAL', 'C_CUSTKEY']].merge(nation[(nation['N_REGIONKEY'] <= 0) & (nation['N_COMMENT'].str.startswith('i'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY')

customer

part[(part['PT_COMMENT'] != 'i')].groupby(by=['SIZE']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'].str.startswith('p')) | (nation['N_REGIONKEY'] <= 2)].merge(supplier[(supplier['S_ACCTBAL'] != 6014.788226026626) & (supplier['S_SUPPKEY'] > 68)][['S_PHONE']].merge(partsupp.merge(lineitem[(lineitem['EXTENDEDPRICE'] >= 30537.56506024974) | (lineitem['L_COMMENT'] == 'lit')][['SHIPINSTRUCT', 'RETURNFLAG', 'SHIPMODE']].merge(orders[(orders['O_COMMENT'].str.startswith('s')) | (orders['O_CUSTKEY'] < 95763)].merge(lineitem[(lineitem['TAX'] != 0.002184883904614372) & (lineitem['TAX'] == 0.004226317708996996)].merge(partsupp.merge(supplier[['S_ACCTBAL', 'S_ADDRESS']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(region.merge(nation[(nation['N_NATIONKEY'] == 21) & (nation['N_REGIONKEY'] < 1)][['N_NATIONKEY', 'N_REGIONKEY']].merge(region[['R_REGIONKEY']].merge(nation.merge(region.merge(nation[['N_REGIONKEY', 'N_NATIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_COMMENT'] == 'u') & (region['R_NAME'].str.startswith('ASI'))][['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY')

part[(part['P_NAME'].str.startswith('p'))].merge(partsupp[(partsupp['PS_SUPPKEY'] < 2800) | (partsupp['P_COMMENT'].str.startswith('are'))], left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] == 0) | (nation['N_NAME'] != 'A') | (nation['N_NATIONKEY'] > 20) & (nation['N_COMMENT'] == 'u')][['N_COMMENT', 'N_REGIONKEY', 'N_NAME', 'N_NATIONKEY']].merge(customer[['C_COMMENT']].merge(nation[(nation['N_COMMENT'].str.startswith('o')) | (nation['N_REGIONKEY'] == 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_NAME'] != 'C')].merge(nation[(nation['N_REGIONKEY'] == 1)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

part[['TYPE', 'P_PARTKEY', 'PT_COMMENT', 'RETAILPRICE']].merge(partsupp.merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['RETAILPRICE', 'P_PARTKEY']).agg('min', numeric_only=True)

customer[(customer['C_ACCTBAL'] == 2303.37652144643) & (customer['C_NATIONKEY'] == 9) | (customer['MKTSEGMENT'] == HOUSEHOLD)][['C_NAME', 'MKTSEGMENT']].merge(orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED', '1-URGENT', '5-LOW', '3-MEDIUM'])) & (orders['O_COMMENT'].str.startswith('t'))][['O_CUSTKEY', 'SHIPPRIORITY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY')

customer[(customer['C_NATIONKEY'] == 22)][['C_CUSTKEY', 'C_ADDRESS']].merge(nation[(nation['N_REGIONKEY'] <= 3)][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT', 'N_NAME']].merge(region[(region['R_NAME'] == 'AFR')][['R_NAME', 'R_COMMENT', 'R_REGIONKEY']].merge(nation[(nation['N_REGIONKEY'] < 2)][['N_COMMENT', 'N_NATIONKEY', 'N_REGIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY')

part.groupby(by=['P_PARTKEY', 'PT_COMMENT']).agg('max', numeric_only=True)

orders.merge(customer[['C_CUSTKEY', 'C_PHONE', 'C_NATIONKEY', 'C_ACCTBAL']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem, left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(lineitem.merge(partsupp[['P_COMMENT']].merge(part[(part['SIZE'] == 42) & (part['RETAILPRICE'] > 1077.7045716599746)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY')

part.groupby(by=['P_NAME', 'RETAILPRICE']).agg('max', numeric_only=True)

supplier[(supplier['S_ACCTBAL'] >= 651.2525187126023) | (supplier['S_SUPPKEY'] > 167) | (supplier['S_PHONE'] == '28-')][['S_SUPPKEY', 'S_NAME']].merge(partsupp[(partsupp['SUPPLYCOST'] == 511.41151345135904) | (partsupp['P_COMMENT'].str.startswith('i'))][['P_COMMENT', 'AVAILQTY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY')

partsupp.groupby(by=['PS_SUPPKEY', 'P_COMMENT']).agg('sum', numeric_only=True)

supplier[(supplier['S_NAME'] != 'S') & (supplier['S_COMMENT'].str.startswith('!'))].merge(nation[(nation['N_NAME'] != 'V') | (nation['N_NAME'].str.startswith('F'))][['N_REGIONKEY', 'N_NATIONKEY']].merge(region[['R_REGIONKEY', 'R_NAME', 'R_COMMENT']].merge(nation[(nation['N_COMMENT'] != 'a')][['N_COMMENT', 'N_NATIONKEY']].merge(supplier[(supplier['S_NAME'] != 'S')], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['SUPPLYCOST'] != 981.5427444908646)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT', 'N_REGIONKEY', 'N_NATIONKEY']].merge(customer[(customer['C_NAME'] == 'C') | (customer['C_PHONE'] == '22-')][['C_CUSTKEY', 'C_PHONE', 'C_COMMENT']].merge(nation[['N_NATIONKEY', 'N_REGIONKEY']].merge(customer[(customer['C_PHONE'] == '25-')][['C_PHONE', 'MKTSEGMENT', 'C_CUSTKEY']].merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h')) | (region['R_NAME'].str.startswith('AFR'))][['R_REGIONKEY']], left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['S_NAME', 'S_SUPPKEY']).agg('mean', numeric_only=True)

nation[(nation['N_COMMENT'] != 'i') | (nation['N_COMMENT'].str.startswith('v')) & (nation['N_COMMENT'].str.startswith('r'))][['N_REGIONKEY', 'N_NAME', 'N_COMMENT']].merge(region.merge(nation[(nation['N_NATIONKEY'] == 7)][['N_REGIONKEY', 'N_COMMENT', 'N_NAME', 'N_NATIONKEY']].merge(customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_NAME']].merge(nation[(nation['N_REGIONKEY'] == 0)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY').merge(supplier[(supplier['S_NATIONKEY'] < 13)], left_on='N_NATIONKEY', right_on='S_NATIONKEY').merge(customer[(customer['C_NATIONKEY'] > 20) & (customer['MKTSEGMENT'] != HOUSEHOLD)][['C_COMMENT', 'C_NAME', 'C_ADDRESS']].merge(orders[(orders['CLERK'] == 'C') & (orders['CLERK'].str.startswith('C'))][['SHIPPRIORITY', 'TOTALPRICE', 'O_ORDERKEY', 'O_CUSTKEY']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('count')

orders.merge(customer[(customer['C_NAME'] == 'C') & (customer['C_ACCTBAL'] < 4696.372904072785)][['C_NATIONKEY', 'C_PHONE']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').groupby(by=['SHIPPRIORITY']).agg('min', numeric_only=True)

part[['PT_COMMENT']].merge(partsupp[(partsupp['PS_PARTKEY'] <= 16)].merge(lineitem[['SHIPDATE']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[['P_COMMENT']].merge(lineitem[(lineitem['L_PARTKEY'] != 27934) | (lineitem['L_SUPPKEY'] == 5612)].merge(orders[(orders['SHIPPRIORITY'] < 0)], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_SUPPKEY'] < 3843) & (partsupp['P_COMMENT'] != ' th')][['PS_PARTKEY', 'P_COMMENT']].merge(part.merge(partsupp.merge(part[(part['PT_COMMENT'] != 'k') | (part['PT_COMMENT'].str.startswith('n'))].merge(partsupp, left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

part.merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

region.merge(nation[(nation['N_REGIONKEY'] < 0)][['N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[(nation['N_NAME'] == 'J')][['N_NATIONKEY', 'N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME', 'N_COMMENT']], left_on='R_REGIONKEY', right_on='N_REGIONKEY').groupby(by=['R_NAME']).agg('sum', numeric_only=True)

customer[['C_PHONE', 'C_COMMENT']].merge(orders.merge(lineitem[(lineitem['L_PARTKEY'] <= 93075)].merge(orders[(orders['O_COMMENT'].str.startswith('n')) | (orders['TOTALPRICE'] != 8869.106789111062)][['ORDERPRIORITY', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').merge(orders[(orders['O_CUSTKEY'] <= 28710) | (orders['O_COMMENT'] != 'w')][['ORDERSTATUS', 'TOTALPRICE', 'O_CUSTKEY', 'ORDERDATE']].merge(customer.merge(orders[['O_COMMENT', 'TOTALPRICE']], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_PHONE']).agg('count')

orders[(orders['ORDERPRIORITY'] != 4-NOT SPECIFIED) | (orders['SHIPPRIORITY'] < 0)].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(customer[(customer['C_ADDRESS'].str.startswith('L'))][['C_NATIONKEY', 'C_CUSTKEY']], left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['RETURNFLAG'] != N)], left_on='O_ORDERKEY', right_on='L_ORDERKEY')

part[(part['PT_COMMENT'] == 't') | (part['P_NAME'] == 'i')][['SIZE', 'CONTAINER']].merge(partsupp[(partsupp['PS_SUPPKEY'] >= 3128) | (partsupp['AVAILQTY'] <= 1137)][['P_COMMENT', 'AVAILQTY', 'PS_PARTKEY']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

customer[(customer['C_NATIONKEY'] > 14) & (customer['C_ACCTBAL'] == 3140.586073593) & (customer['C_COMMENT'].str.startswith('i')) & (customer['MKTSEGMENT'].isin(['BUILDING', 'MACHINERY', 'HOUSEHOLD', 'FURNITURE']))]

region[(region['R_COMMENT'].str.startswith('g')) & (region['R_COMMENT'] != 'g') & (region['R_REGIONKEY'] != 3)].merge(nation[(nation['N_NAME'] != 'M')][['N_REGIONKEY', 'N_NAME']].merge(supplier.merge(partsupp[(partsupp['PS_PARTKEY'] == 25)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY').merge(nation[['N_NAME']], left_on='R_REGIONKEY', right_on='N_REGIONKEY')

part[(part['PT_COMMENT'].str.startswith('h')) & (part['P_PARTKEY'] != 118) & (part['BRAND'] == Brand#54)].merge(partsupp[(partsupp['PS_PARTKEY'] != 28)][['PS_PARTKEY', 'P_COMMENT']].merge(lineitem[(lineitem['SHIPDATE'] <= '1992-04-27') | (lineitem['L_COMMENT'] == 'f')], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['PS_PARTKEY'] != 47)][['AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[['SHIPINSTRUCT', 'LINENUMBER', 'RECEIPTDATE']].merge(partsupp[['SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem[(lineitem['QUANTITY'] < 11) | (lineitem['LINESTATUS'] != O)][['TAX', 'QUANTITY']].merge(orders[(orders['O_COMMENT'] == 'k') & (orders['ORDERDATE'] == '1992-01-13')][['O_COMMENT', 'CLERK']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['MFGR', 'RETAILPRICE']).agg('mean', numeric_only=True)

part[['P_NAME', 'BRAND']].merge(partsupp.merge(lineitem[(lineitem['SHIPMODE'] == TRUCK) | (lineitem['LINENUMBER'] >= 1)][['L_ORDERKEY']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').groupby(by=['BRAND']).agg('mean', numeric_only=True)

supplier

supplier[['S_NATIONKEY']].merge(partsupp[(partsupp['PS_PARTKEY'] == 23) & (partsupp['SUPPLYCOST'] <= 488.014231339702)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[(partsupp['SUPPLYCOST'] <= 49.925101825233526) & (partsupp['PS_PARTKEY'] > 12)][['P_COMMENT', 'AVAILQTY', 'SUPPLYCOST', 'PS_SUPPKEY']].merge(lineitem, left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NATIONKEY']).agg('count')

supplier[(supplier['S_COMMENT'] != 'x') & (supplier['S_ACCTBAL'] >= 9230.517063076579) | (supplier['S_SUPPKEY'] >= 133)][['S_ADDRESS', 'S_ACCTBAL', 'S_PHONE', 'S_NAME', 'S_SUPPKEY']].merge(partsupp[(partsupp['SUPPLYCOST'] >= 904.5234645362194) | (partsupp['P_COMMENT'] == 'are')][['P_COMMENT', 'PS_SUPPKEY']], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[(nation['N_REGIONKEY'] != 0) | (nation['N_REGIONKEY'] != 0)].merge(region[['R_REGIONKEY', 'R_COMMENT', 'R_NAME']].merge(nation[(nation['N_NATIONKEY'] <= 4)], left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'].str.startswith('t')) | (partsupp['AVAILQTY'] > 9446)], left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_SUPPKEY']).agg('max', numeric_only=True)

nation[(nation['N_COMMENT'] == 'p')].merge(customer.merge(nation[(nation['N_REGIONKEY'] <= 2)], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer[(customer['C_ADDRESS'] != 'x')].merge(nation[(nation['N_COMMENT'].str.startswith('r')) | (nation['N_COMMENT'].str.startswith('o'))], left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY')

partsupp[(partsupp['SUPPLYCOST'] == 787.3996396605681) | (partsupp['SUPPLYCOST'] <= 653.0550509833167)][['AVAILQTY', 'PS_PARTKEY', 'P_COMMENT', 'PS_SUPPKEY']].merge(lineitem[['L_ORDERKEY', 'L_PARTKEY', 'QUANTITY', 'RECEIPTDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[['SHIPINSTRUCT', 'L_ORDERKEY', 'COMMITDATE', 'DISCOUNT']].merge(orders[(orders['TOTALPRICE'] >= 99162.3028611343)][['O_ORDERKEY', 'O_COMMENT', 'SHIPPRIORITY']].merge(lineitem[(lineitem['L_PARTKEY'] <= 193858)][['SHIPINSTRUCT', 'SHIPDATE', 'L_COMMENT']], left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY').merge(lineitem[(lineitem['SHIPINSTRUCT'] != DELIVER IN PERSON) & (lineitem['SHIPINSTRUCT'] == NONE)][['L_COMMENT', 'RETURNFLAG']].merge(orders[(orders['O_CUSTKEY'] >= 105495)][['ORDERPRIORITY', 'ORDERDATE', 'O_COMMENT', 'ORDERSTATUS']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY')

supplier[(supplier['S_ADDRESS'] != 'n') | (supplier['S_COMMENT'] == 'r') | (supplier['S_ADDRESS'] != 'O') | (supplier['S_ACCTBAL'] < 8714.113693627443)][['S_COMMENT', 'S_PHONE']].groupby(by=['S_PHONE', 'S_COMMENT']).agg('sum', numeric_only=True)

nation.merge(customer[(customer['C_ADDRESS'] != 'B') & (customer['C_ADDRESS'].str.startswith('0'))][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL']].merge(nation, left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_NATIONKEY', 'N_NAME']).agg('count')

orders[(orders['ORDERPRIORITY'].isin(['2-HIGH', '1-URGENT', '5-LOW', '3-MEDIUM', '4-NOT SPECIFIED'])) | (orders['ORDERDATE'] <= '1998-07-21')].merge(customer.merge(nation[['N_NATIONKEY']].merge(supplier[['S_PHONE', 'S_NATIONKEY', 'S_NAME', 'S_ACCTBAL']], left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY').merge(lineitem[['QUANTITY']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY').groupby(by=['ORDERDATE', 'ORDERPRIORITY']).agg('sum', numeric_only=True)

lineitem[(lineitem['L_COMMENT'] == 'e') & (lineitem['COMMITDATE'] <= '1998-10-16') | (lineitem['QUANTITY'] > 13)].merge(orders[(orders['ORDERPRIORITY'] != 4-NOT SPECIFIED) & (orders['SHIPPRIORITY'] == 0)][['O_COMMENT', 'SHIPPRIORITY']].merge(customer[['MKTSEGMENT', 'C_PHONE', 'C_ACCTBAL', 'C_NAME']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

lineitem[['RETURNFLAG', 'LINESTATUS', 'TAX']].merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['RETURNFLAG', 'TAX']).agg('sum', numeric_only=True)

supplier.merge(nation, left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation.merge(region[['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation[(nation['N_NAME'] != 'P')].merge(supplier[['S_PHONE', 'S_NATIONKEY']].merge(partsupp.merge(part[(part['BRAND'] == Brand#12)], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY'), left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'l') & (partsupp['SUPPLYCOST'] > 270.3277251900074)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']].merge(part, left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_PHONE', 'S_NATIONKEY']).agg('mean', numeric_only=True)

supplier[['S_NAME', 'S_COMMENT']].merge(partsupp, left_on='S_SUPPKEY', right_on='PS_SUPPKEY').merge(nation[['N_COMMENT']], left_on='S_NATIONKEY', right_on='N_NATIONKEY')

supplier[(supplier['S_PHONE'] == '2')][['S_ACCTBAL', 'S_COMMENT']].merge(nation[(nation['N_NAME'] != 'E')], left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(nation[['N_NATIONKEY', 'N_COMMENT']].merge(customer[['C_PHONE', 'C_ADDRESS', 'C_ACCTBAL']], left_on='N_NATIONKEY', right_on='C_NATIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'd') & (partsupp['PS_PARTKEY'] == 35)].merge(lineitem[(lineitem['TAX'] == 0.07970429399926092) & (lineitem['LINENUMBER'] <= 1)].merge(orders[['O_ORDERKEY', 'TOTALPRICE', 'ORDERDATE', 'O_COMMENT']], left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT', 'S_ACCTBAL']).agg('count')

orders.merge(lineitem[['RETURNFLAG']], left_on='O_ORDERKEY', right_on='L_ORDERKEY').merge(customer[['C_NAME', 'C_NATIONKEY', 'C_COMMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY')

partsupp[(partsupp['P_COMMENT'] != 'q') | (partsupp['SUPPLYCOST'] <= 582.5059647969138)].merge(supplier.merge(nation[(nation['N_NATIONKEY'] < 8)].merge(region, left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='S_NATIONKEY', right_on='N_NATIONKEY'), left_on='PS_SUPPKEY', right_on='S_SUPPKEY').merge(lineitem[(lineitem['QUANTITY'] != 37)], left_on='PS_PARTKEY', right_on='L_PARTKEY').groupby(by=['P_COMMENT']).agg('min', numeric_only=True)

nation[(nation['N_NAME'] != 'J')][['N_NATIONKEY', 'N_REGIONKEY', 'N_COMMENT']]

partsupp[(partsupp['SUPPLYCOST'] == 495.5796996487439) & (partsupp['SUPPLYCOST'] > 469.498481435427) & (partsupp['SUPPLYCOST'] <= 817.5622562140211) | (partsupp['SUPPLYCOST'] != 994.2545086853427)].merge(lineitem[(lineitem['L_PARTKEY'] == 133361)][['L_COMMENT']], left_on='PS_SUPPKEY', right_on='L_SUPPKEY').merge(part.merge(partsupp[(partsupp['P_COMMENT'].str.startswith('o')) & (partsupp['PS_SUPPKEY'] < 4919)][['P_COMMENT', 'AVAILQTY']], left_on='P_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_PARTKEY', right_on='P_PARTKEY')

customer.merge(orders.merge(customer[(customer['C_ADDRESS'] != '9')][['MKTSEGMENT', 'C_CUSTKEY', 'C_ACCTBAL', 'C_PHONE']].merge(orders[(orders['CLERK'] == 'C') | (orders['ORDERSTATUS'].isin(['F', 'O']))][['ORDERDATE', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY').groupby(by=['C_ADDRESS']).agg('max', numeric_only=True)

customer[(customer['C_PHONE'] == '25-')].merge(nation.merge(supplier, left_on='N_NATIONKEY', right_on='S_NATIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY').groupby(by=['C_CUSTKEY', 'C_ACCTBAL']).agg('max', numeric_only=True)

customer[(customer['C_NAME'].str.startswith('C')) | (customer['C_ADDRESS'] == ',')].groupby(by=['C_NATIONKEY']).agg('count')

supplier.merge(partsupp[['PS_PARTKEY']].merge(lineitem[(lineitem['L_ORDERKEY'] == 22)][['QUANTITY', 'LINENUMBER', 'SHIPINSTRUCT', 'SHIPDATE']], left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_NAME', 'S_COMMENT']).agg('sum', numeric_only=True)

lineitem[['TAX', 'L_SUPPKEY', 'LINESTATUS', 'QUANTITY']].merge(partsupp.merge(lineitem[(lineitem['L_COMMENT'] == 'r') | (lineitem['DISCOUNT'] != 0.06144822291121097)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(orders[(orders['ORDERSTATUS'] == F)].merge(customer[(customer['C_ACCTBAL'] == 1162.2565443366748) | (customer['C_COMMENT'] != ',')][['C_NATIONKEY', 'C_ADDRESS', 'MKTSEGMENT']], left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY').groupby(by=['LINESTATUS', 'QUANTITY']).agg('max', numeric_only=True)

part[['P_NAME', 'CONTAINER', 'MFGR']].groupby(by=['CONTAINER', 'P_NAME']).agg('sum', numeric_only=True)

part[['TYPE', 'RETAILPRICE', 'MFGR', 'BRAND', 'PT_COMMENT']]

lineitem[(lineitem['RETURNFLAG'] == A) & (lineitem['LINESTATUS'].isin(['F']))].merge(partsupp.merge(supplier[['S_NATIONKEY', 'S_ADDRESS', 'S_COMMENT']], left_on='PS_SUPPKEY', right_on='S_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY').merge(partsupp[['P_COMMENT', 'AVAILQTY']].merge(lineitem[(lineitem['RECEIPTDATE'] != '1992-05-02') & (lineitem['EXTENDEDPRICE'] == 52303.95680678896)][['COMMITDATE', 'DISCOUNT', 'EXTENDEDPRICE']].merge(partsupp[(partsupp['PS_SUPPKEY'] > 84) & (partsupp['PS_PARTKEY'] == 23)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY')

orders[(orders['CLERK'].str.startswith('C')) | (orders['O_COMMENT'].str.startswith('x'))][['O_CUSTKEY', 'ORDERSTATUS']]

supplier[(supplier['S_SUPPKEY'] != 28) | (supplier['S_NAME'] != 'S')].groupby(by=['S_PHONE', 'S_NAME']).agg('min', numeric_only=True)

part.merge(partsupp[(partsupp['SUPPLYCOST'] <= 424.2705511091779) & (partsupp['SUPPLYCOST'] == 781.5875706357912)], left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp.merge(lineitem[(lineitem['COMMITDATE'] != '1992-05-15') | (lineitem['L_ORDERKEY'] <= 42)][['SHIPMODE', 'L_PARTKEY']].merge(partsupp[(partsupp['AVAILQTY'] <= 1463)].merge(lineitem[(lineitem['L_ORDERKEY'] <= 182)], left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='PS_PARTKEY', right_on='L_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY').merge(partsupp[(partsupp['P_COMMENT'] == 'are') | (partsupp['PS_PARTKEY'] != 44)][['SUPPLYCOST', 'PS_SUPPKEY', 'PS_PARTKEY', 'P_COMMENT']], left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[(nation['N_REGIONKEY'] <= 0)][['N_NATIONKEY', 'N_COMMENT', 'N_REGIONKEY', 'N_NAME']].groupby(by=['N_REGIONKEY']).agg('sum', numeric_only=True)

orders[['O_ORDERKEY', 'ORDERSTATUS', 'CLERK', 'O_CUSTKEY']].merge(customer, left_on='O_CUSTKEY', right_on='C_CUSTKEY')

supplier[(supplier['S_ACCTBAL'] >= 8562.47591155887)][['S_NATIONKEY', 'S_ACCTBAL', 'S_COMMENT']].merge(partsupp[['PS_SUPPKEY']].merge(part[(part['SIZE'] >= 26)][['P_NAME']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='S_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['S_COMMENT']).agg('mean', numeric_only=True)

lineitem[(lineitem['EXTENDEDPRICE'] <= 54597.722609598204) | (lineitem['LINESTATUS'].isin(['O'])) | (lineitem['EXTENDEDPRICE'] < 41160.72107769877) | (lineitem['QUANTITY'] > 15)].merge(orders[['CLERK', 'O_COMMENT']].merge(lineitem.merge(partsupp[(partsupp['SUPPLYCOST'] > 269.1159201595516) | (partsupp['SUPPLYCOST'] >= 860.0047092869149)], left_on='L_SUPPKEY', right_on='PS_SUPPKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY')

part[['MFGR', 'P_PARTKEY', 'TYPE']].merge(partsupp[['PS_SUPPKEY', 'SUPPLYCOST', 'AVAILQTY', 'P_COMMENT']].merge(part[(part['BRAND'] == Brand#31)][['P_PARTKEY']], left_on='PS_PARTKEY', right_on='P_PARTKEY'), left_on='P_PARTKEY', right_on='PS_PARTKEY')

nation[['N_NAME', 'N_REGIONKEY', 'N_COMMENT', 'N_NATIONKEY']].merge(customer[(customer['C_ADDRESS'] != 'I') | (customer['C_ADDRESS'].str.startswith('I'))][['C_NAME', 'C_ACCTBAL', 'C_NATIONKEY']].merge(orders[(orders['SHIPPRIORITY'] >= 0) & (orders['ORDERPRIORITY'].isin(['2-HIGH', '4-NOT SPECIFIED']))].merge(lineitem.merge(orders.merge(customer[['MKTSEGMENT', 'C_NAME']].merge(orders[(orders['O_CUSTKEY'] < 4489) & (orders['O_COMMENT'].str.startswith('c'))], left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='O_CUSTKEY', right_on='C_CUSTKEY'), left_on='L_ORDERKEY', right_on='O_ORDERKEY'), left_on='O_ORDERKEY', right_on='L_ORDERKEY'), left_on='C_CUSTKEY', right_on='O_CUSTKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').merge(customer.merge(nation.merge(region[(region['R_COMMENT'].str.startswith('h'))][['R_NAME', 'R_REGIONKEY', 'R_COMMENT']].merge(nation, left_on='R_REGIONKEY', right_on='N_REGIONKEY'), left_on='N_REGIONKEY', right_on='R_REGIONKEY'), left_on='C_NATIONKEY', right_on='N_NATIONKEY'), left_on='N_NATIONKEY', right_on='C_NATIONKEY').groupby(by=['N_COMMENT']).agg('sum', numeric_only=True)

customer[['C_NATIONKEY', 'C_CUSTKEY', 'C_COMMENT', 'C_ADDRESS']].groupby(by=['C_CUSTKEY']).agg('sum', numeric_only=True)

partsupp[(partsupp['P_COMMENT'] == 'p')].groupby(by=['P_COMMENT']).agg('mean', numeric_only=True)

lineitem.merge(partsupp[(partsupp['P_COMMENT'] == 'the')][['PS_PARTKEY']].merge(lineitem[(lineitem['SHIPMODE'].isin(['REG AIR', 'AIR', 'FOB', 'SHIP', 'RAIL', 'MAIL']))][['DISCOUNT', 'RECEIPTDATE']].merge(partsupp, left_on='L_PARTKEY', right_on='PS_PARTKEY'), left_on='PS_SUPPKEY', right_on='L_SUPPKEY'), left_on='L_PARTKEY', right_on='PS_PARTKEY').merge(partsupp, left_on='L_SUPPKEY', right_on='PS_SUPPKEY').groupby(by=['SHIPDATE', 'SHIPMODE']).agg('count')